{"Data":{"Blog":{"FeedItems":[{"Title":"Upcoming Updates for .NET Framework 4.8","PublishedOn":"2019-04-19T21:40:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Upcoming Updates for .NET Framework 4.8\nThe .NET Framework 4.8 product release is now available. The .NET Framework 4.8 product will receive updates on the same cadence and the usual channels (Windows...","Href":"https://devblogs.microsoft.com/dotnet/upcoming-updates-for-net-framework-4-8/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 4","PublishedOn":"2019-04-18T22:15:51+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are making the fourth preview of Entity Framework Core 3.0 available on NuGet, alongside .NET Core 3.0 Preview 4 and ASP.NET Core 3.0 Preview 4. We encourage you to install this preview to...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-4/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 4","PublishedOn":"2019-04-18T22:13:01+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 4. It includes a chart control for Windows Forms, HTTP/2 support, GC updates to use less memory, support for CPU limits with Docker, the addition of...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-4/","RawContent":null},{"Title":"Announcing the .NET Framework 4.8","PublishedOn":"2019-04-18T20:12:27+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We are thrilled to announce the release of the .NET Framework 4.8 today. It’s included in the Windows 10 May 2019 Update. .NET Framework 4.8 is also available on Windows 7+ and Windows Server 2008...","Href":"https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/","RawContent":null},{"Title":".NET Core April 2019 Updates – 2.1.10 and 2.2.4","PublishedOn":"2019-04-09T20:35:28+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included fixes.\n.NET Core 2.2.4 and .NET...","Href":"https://devblogs.microsoft.com/dotnet/net-core-april-2019-updates-2-1-10-and-2-2-4/","RawContent":null},{"Title":"Announcing ML.NET 1.0 RC – Machine Learning for .NET","PublishedOn":"2019-04-05T23:36:08+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0-rc-machine-learning-for-net/","RawContent":null},{"Title":".NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-04-02T21:47:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Visual Studio 2019 .NET productivity","PublishedOn":"2019-04-02T19:00:17+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Your friendly neighborhood .NET productivity team (aka. Roslyn) focuses a lot on improving the .NET coding experience. Sometimes it’s the little refactorings and code fixes that really improve your...","Href":"https://devblogs.microsoft.com/dotnet/visual-studio-2019-net-productivity-2/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2019-04-02T10:40:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,019 years. In the Japanese calendar, however, a new era begins...","Href":"https://devblogs.microsoft.com/dotnet/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":"Announcing F# 4.6","PublishedOn":"2019-03-29T21:40:28+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce general availability of F# 4.6 and the F# tools for Visual Studio 2019! In this post, I&#8217;ll show you how to get started, explain the F# 4.6 feature set, give you...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337730849","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:29:48","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Opened pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337725308","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Opened pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9337679090","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:16:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Merged pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9337677839","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:15:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Merged pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335742237","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:21:55","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Opened pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335605309","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:00:02","Actor":"scottaddie","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Opened pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."},{"Id":"9445263990","Type":"IssuesEvent","CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Opened issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109) at dotnet/announcements","RelatedBody":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: #252"},{"Id":"9434908530","Type":"IssuesEvent","CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Opened issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108) at dotnet/announcements","RelatedBody":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core)."},{"Id":"9425046734","Type":"IssuesEvent","CreatedAt":"2019-04-11T15:16:44","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Opened issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107) at dotnet/announcements","RelatedBody":".NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](need link) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9490845273","Type":"IssuesEvent","CreatedAt":"2019-04-23T05:06:26","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24184","RelatedDescription":"Opened issue \"CoreFX test failure: System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent\" (#24184) at dotnet/coreclr","RelatedBody":"Looks like a timeout\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_windows_nt_corefx_baseline/840/consoleFull\r\n\r\n```\r\n22:45:50      System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent [FAIL]\r\n22:45:50         System.TimeoutException : Task timed out after 00:00:30\r\n22:45:50         Stack Trace:\r\n22:45:50              at System.Threading.Tasks.TaskTimeoutExtensions.TimeoutAfter(Task task, TimeSpan timeout)\r\n22:45:50           D:\\j\\workspace\\x64_checked_w---a7bd363e\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cookies.cs(153,0): at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent()\r\n22:45:50           --- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"9490712054","Type":"IssuesEvent","CreatedAt":"2019-04-23T04:26:05","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24183","RelatedDescription":"Opened issue \"runtest.py crash parsing failures\" (#24183) at dotnet/coreclr","RelatedBody":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_jitx86hwintrinsicnoavx2/431/consoleFull\r\n\r\nTest run had one failure:\r\n```\r\n05:31:33                                                       GRAND TOTAL: 10450          0          1           0        5552.797s (5628.209s)\r\n```\r\n\r\nPython stack:\r\n```\r\n05:31:44 Parsing test results from (D:\\j\\workspace\\x86_checked_w---fa86ae90\\bin\\Logs\\TestRunResults_Windows_NT_x86_Checked)\r\n05:31:44 Traceback (most recent call last):\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2431, in <module>\r\n05:31:44     sys.exit(main(args))\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2417, in main\r\n05:31:44     tests = parse_test_results(host_os, arch, build_type, coreclr_repo_location, test_location)\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2092, in parse_test_results\r\n05:31:44     test_output = failure_info[0].text\r\n05:31:44   File \"C:\\Python27\\lib\\xml\\etree\\ElementTree.py\", line 266, in __getitem__\r\n05:31:44     return self._children[index]\r\n05:31:44 IndexError: list index out of range\r\n```\r\n"},{"Id":"9490395834","Type":"PullRequestEvent","CreatedAt":"2019-04-23T02:58:10","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24182","RelatedDescription":"Opened pull request \"[No merge] [No review] Update coreclr repo README.md\" (#24182) at dotnet/coreclr","RelatedBody":"Testing out test failure in CI.\r\n\r\nhttps://github.com/dotnet/coreclr/issues/24159\r\n"},{"Id":"9490047942","Type":"IssuesEvent","CreatedAt":"2019-04-23T01:24:01","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24181","RelatedDescription":"Opened issue \"[arm/windows]Test failure: JIT\\superpmi\\superpmicollect\\superpmicollect.cmd\" (#24181) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_jitstress2_jitstressregs4_tst/69/\r\n\r\n**Failed test:**\r\nJIT_superpmi._superpmicollect_superpmicollect_.JIT\\\\superpmi\\\\superpmicollect\\\\superpmicollect.cmd\r\n\r\n**Failed with log:**\r\n```\r\nJIT\\superpmi\\superpmicollect\\superpmicollect.cmd [FAIL]\r\nEXEC : error : replay of final file is not error free [C:\\j\\workspace\\arm_cross_che---a21256ac\\tests\\runtest.proj]\r\n        \r\n        Return code:      1\r\n```"},{"Id":"9490042522","Type":"IssuesEvent","CreatedAt":"2019-04-23T01:22:32","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24180","RelatedDescription":"Opened issue \"[arm64] Test failed: System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly\" (#24180) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_corefx_minopts_tst/30/\r\n\r\n**Failed tests:**\r\nSystem.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly\r\n\r\n**Log:**\r\n```\r\nSystem.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly(chunkedTransfer: True, connectionClose: True, mode: CancelPendingRequests) [FAIL]\r\n      System.TypeLoadException : Could not load type 'System.IO.Stream+<FinishWriteAsync>d__60' from assembly 'System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'.\r\n      Stack Trace:\r\n           at System.Reflection.CustomAttribute._CreateCaObject(RuntimeModule pModule, RuntimeType type, IRuntimeMethodInfo pCtor, Byte** ppBlob, Byte* pEndBlob, Int32* pcNamedArgs)\r\n           at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule module, RuntimeType type, IRuntimeMethodInfo ctor, IntPtr& blob, IntPtr blobEnd, Int32& namedArgs)\r\n           at System.Reflection.CustomAttribute.AddCustomAttributes(ListBuilder`1& attributes, RuntimeModule decoratedModule, Int32 decoratedMetadataToken, RuntimeType attributeFilterType, Boolean mustBeInheritable, ListBuilder`1& derivedAttributes)\r\n           at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule, Int32 decoratedMetadataToken, Int32 pcaCount, RuntimeType attributeFilterType)\r\n           at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeMethodInfo method, RuntimeType caType, Boolean inherit)\r\n           at System.Reflection.RuntimeMethodInfo.GetCustomAttributes(Type attributeType, Boolean inherit)\r\n           at System.Attribute.GetCustomAttributes(MemberInfo element, Type type, Boolean inherit)\r\n           at System.Reflection.CustomAttributeExtensions.GetCustomAttributes[T](MemberInfo element, Boolean inherit)\r\n           at System.Diagnostics.StackTrace.TryResolveStateMachineMethod(MethodBase& method, Type& declaringType)\r\n           at System.Diagnostics.StackTrace.ToString(TraceFormat traceFormat)\r\n           at System.Exception.GetStackTrace(Boolean needFileInfo)\r\n           at System.Exception.ToString(Boolean needFileLineInfo, Boolean needMessage)\r\n           at System.Exception.ToString(Boolean needFileLineInfo, Boolean needMessage)\r\n           at System.Exception.ToString()\r\n           at System.String.Concat(Object arg0, Object arg1, Object arg2)\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cancellation.cs(406,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Cancellation_Test.ValidateClientCancellationAsync(Func`1 clientBodyAsync)\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cancellation.cs(132,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Cancellation_Test.<>c__DisplayClass3_2.<<GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly>b__0>d.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\Common\\tests\\System\\Net\\Http\\LoopbackServer.cs(66,0): at System.Net.Test.Common.LoopbackServer.CreateServerAsync(Func`2 funcAsync, Options options)\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cancellation.cs(114,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly(Boolean chunkedTransfer, Boolean connectionClose, CancellationMode mode)\r\n```"},{"Id":"9490001672","Type":"IssuesEvent","CreatedAt":"2019-04-23T01:10:49","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24179","RelatedDescription":"Opened issue \"[x86] Test failed: baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\" (#24179) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_no_tiered_compilation/262/\r\n\r\n**Failed tests:**\r\nbaseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\r\n\r\n**Log:**\r\n```\r\nbaseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd [FAIL]\r\n        \r\n        Return code:      1\r\n        Raw output file:      D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\baseservices.threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" exchangedouble.exe \r\n        -1.7976922776554302E+308,-1.7976931348623157E+308,0\r\n        Test Failed\r\n        Expected: 100\r\n        Actual: 0\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n        > D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\TestWrappers\\baseservices.threading\\baseservices.threading.XUnitWrapper.cs(18660,0): at baseservices_threading._interlocked_exchange_exchangedouble_exchangedouble_._interlocked_exchange_exchangedouble_exchangedouble_cmd()\r\n        Output:\r\n          \r\n          Return code:      1\r\n          Raw output file:      D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\baseservices.threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n           \"D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" exchangedouble.exe \r\n          -1.7976922776554302E+308,-1.7976931348623157E+308,0\r\n          Test Failed\r\n          Expected: 100\r\n          Actual: 0\r\n          END EXECUTION - FAILED\r\n          FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n          > D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9490029212","Type":"IssuesEvent","CreatedAt":"2019-04-23T01:18:41","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11214","RelatedDescription":"Closed issue \"Sentinel and cache files not removed when uninstalling .NET Core SDK\" (#11214) at dotnet/cli","RelatedBody":"@scottaddie commented on [Fri Apr 19 2019](https://github.com/dotnet/core-setup/issues/5946)\n\n## Steps to reproduce\r\n1. Uninstall the .NET Core SDK via Win10's Control Panel:\r\n\r\n![image](https://user-images.githubusercontent.com/10702007/56444142-2a540080-62bd-11e9-8cf6-d151044d78b8.png)\r\n\r\n2. Navigate to the _%USERPROFILE%/.dotnet_ directory. Notice that _sentinel_ and _*.dotnetUserLevelCache_ files are left behind. The following screenshot shows the files are left behind after uninstalling .NET Core SDK 2.2.104:\r\n\r\n![image](https://user-images.githubusercontent.com/10702007/56444039-b3b70300-62bc-11e9-937b-727badeaf062.png)\r\n\r\n## Expected  behavior\r\nThe version-specific files depicted in the screenshot above should be deleted.\r\n\r\n## Actual behavior\r\nThe version-specific files depicted in the screenshot above aren't deleted.\r\n\r\n## Environment data\r\nWin10 v1809\n\n---\n\n@dagood commented on [Fri Apr 19 2019](https://github.com/dotnet/core-setup/issues/5946#issuecomment-485028320)\n\nThe SDK installer is created in https://github.com/dotnet/core-sdk, but these files look to me like they're created during SDK usage (or first run) rather than placed directly by the installer. Moving to https://github.com/dotnet/cli with that in mind.\n\n"},{"Id":"9490028923","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:18:36","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11196","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.1.0-preview2.5965 into cli\" (#11196) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.1.0-preview2.5965 into cli release/2.1.7xx branch"},{"Id":"9489985955","Type":"IssuesEvent","CreatedAt":"2019-04-23T01:06:08","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11230","RelatedDescription":"Closed issue \"DotNet New -n is not renaming custom template\" (#11230) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. In a folder D:\\\\ProjectTemplates\\SomeCo.DomainTemplate.CSharp copy in a working c# class library project and rename it to **DomainTemplate.csproj**\r\n2. Add new subfolder in project root folder called .**template.config**\r\n3. Create a new **template.json** file in the .template.config folder with the following content ...\r\n{\r\n    \"$schema\": \"http://json.schemastore.org/template\",\r\n    \"author\": \"Me\",\r\n    \"classifications\": [ \"Domain\", \"Class Library\"],\r\n    \"identity\": \"SomeCo.DomainTemplate.CSharp\",\r\n    \"name\": \"SomeCo Domain Class Library\",\r\n    \"shortName\": \"scdomain\",\r\n    \"sourceName\": \"SomeCo.DomainTemplate\",      \r\n    \"preferNameDirectory\" : true\r\n   \r\n}\r\n\r\n4. Install template as follows\r\n**dotnet new -i D:\\ProjectTemplates\\SomeCo\\DomainTemplate\\CSharp**\r\nverify custom template is installed\r\n\r\n5. Create new project in a known empty folder\r\n**dotnet new scdomain --name domaina -o domaina** \r\n\r\n## Expected  behavior\r\nThat a new subfolder is created called domaina containing my custom template was created and renamed to domaina.csproj\r\n\r\n## Actual behavior\r\nA new subfolder is created called domaina and although the csproj that my custom template was created based upon is there it has the name of the project that my template had, in my case  DomainTemplate.csproj\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n"},{"Id":"9489778696","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:04:22","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11195","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.1.0-preview2.5965 into cli\" (#11195) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.1.0-preview2.5965 into cli release/2.2.3xx branch"},{"Id":"9489731718","Type":"IssuesEvent","CreatedAt":"2019-04-22T23:51:18","Actor":"richlander","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11232","RelatedDescription":"Opened issue \"Enable CLI config to disable preview warnings\" (#11232) at dotnet/cli","RelatedBody":"I'd love a config setting that disables the preview warnings. I use previews 99% of the time, and would love cleaner CLI spew ... it's a lot of text!\r\n\r\n```console\r\n/usr/local/share/dotnet/sdk/3.0.100-preview4-011222/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/Users/rich/git/sudoku-solver/src/sudoku-solver/sudoku-solver.csproj]\r\n```"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9490066513","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:29:21","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Merged pull request \"Update branding on master\" (#1164) at dotnet/standard","RelatedBody":""},{"Id":"9490066108","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:29:15","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Merged pull request \"Merge from master\" (#1163) at dotnet/standard","RelatedBody":""},{"Id":"9490037258","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:21:01","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Opened pull request \"Update branding on master\" (#1164) at dotnet/standard","RelatedBody":""},{"Id":"9490034336","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:20:11","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Opened pull request \"Merge from master\" (#1163) at dotnet/standard","RelatedBody":""},{"Id":"9489401375","Type":"IssuesEvent","CreatedAt":"2019-04-22T22:26:07","Actor":"CalvinFengDatacom","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Closed issue \"Multiple assemblies with equivalent identity have been imported\" (#1162) at dotnet/standard","RelatedBody":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks"},{"Id":"9489338685","Type":"IssuesEvent","CreatedAt":"2019-04-22T22:12:14","Actor":"CalvinFengDatacom","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Opened issue \"Multiple assemblies with equivalent identity have been imported\" (#1162) at dotnet/standard","RelatedBody":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks"},{"Id":"9489232340","Type":"IssuesEvent","CreatedAt":"2019-04-22T21:50:45","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Closed issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103) at dotnet/standard","RelatedBody":""},{"Id":"9482892530","Type":"PullRequestEvent","CreatedAt":"2019-04-21T18:54:16","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1160","RelatedDescription":"Merged pull request \"Add EnumeratorCancellationAttribute\" (#1160) at dotnet/standard","RelatedBody":"This aligns .NET Standard with the [PR made in CoreFx](https://github.com/dotnet/corefx/pull/37064). For more details, see the [API discussion](https://github.com/dotnet/corefx/issues/37012).\r\n\r\nThis is a last minute firedrill for preview 5 (which will be used for demoing functionality during Build), which means I'll have to merge this by tomorrow morning. If there are any concerns, please let me know ASAP or we'll simply back it out after preview 5."},{"Id":"9481023699","Type":"PullRequestEvent","CreatedAt":"2019-04-20T23:47:11","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1161","RelatedDescription":"Merged pull request \"Add tool to automate generation of .NET Core baseline\" (#1161) at dotnet/standard","RelatedBody":"This adds a batch file that generates the API surface of .NET Core that matters to .NET Standard. This script updates the contents of `src\\platforms\\netcoreapp`, stripped down to just the contents that matter for .NET Standard. It's meant to be manually diff'ed against the .NET Standard reference assemblies to propose API changes.\r\n\r\nWe should move the `GenNetStandard` tool to our engineering tools (Arcade) so that they are available to people that don't have access to the internal share. However, since the process is currently manual and only done by me, that seems acceptable. At least this this makes it reproducable by other people, which is better to what we have today.\r\n\r\nThe script assume that the caller has an enlistment for dotnet/corefx in a folder that is parallel to dotnet/standard and that is named corefx. In practice, this should hold for most people that work on this.\r\n\r\n/cc @stephentoub @wtgodbe "},{"Id":"9481012193","Type":"PullRequestEvent","CreatedAt":"2019-04-20T23:38:33","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1161","RelatedDescription":"Opened pull request \"Add tool to automatic comparing .NET Core and .NET Standard\" (#1161) at dotnet/standard","RelatedBody":"This adds a batch file that generates the API surface of .NET Core that matters to .NET Standard. This script updates the contents of `src\\platforms\\netcoreapp`, stripped down to just the contents that matter for .NET Standard. It's meant to be manually diff'ed against the .NET Standard reference assemblies to propose API changes.\r\n\r\nWe should move the `GenNetStandard` tool to our engineering tools (Arcade) so that they are available to people that don't have access to the internal share. However, since the process is currently manual and only done by me, that seems acceptable. At least this this makes it reproducable by other people, which is better to what we have today.\r\n\r\nThe script assume that the caller has an enlistment for dotnet/corefx in a folder that is parallel to dotnet/standard and that is named corefx. In practice, this should hold for most people that work on this.\r\n\r\n/cc @stephentoub @wtgodbe "},{"Id":"9480960713","Type":"PullRequestEvent","CreatedAt":"2019-04-20T22:59:53","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1160","RelatedDescription":"Opened pull request \"Add EnumeratorCancellationAttribute\" (#1160) at dotnet/standard","RelatedBody":"This aligns .NET Standard with the [PR made in CoreFx](https://github.com/dotnet/corefx/pull/37064). For more details, see the [API discussion](https://github.com/dotnet/corefx/issues/37012).\r\n\r\nThis is a last minute firedrill for preview 5 (which will be used for demoing functionality during Build). If there are any concerns, please let me know and we'll back it out the change later."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9490714129","Type":"PullRequestEvent","CreatedAt":"2019-04-23T04:26:46","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37106","RelatedDescription":"Merged pull request \"Fix flaky test\" (#37106) at dotnet/corefx","RelatedBody":"- Synchronize reads and writes using a tcs.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/37100"},{"Id":"9490714119","Type":"IssuesEvent","CreatedAt":"2019-04-23T04:26:45","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37100","RelatedDescription":"Closed issue \"[Linux/arm64] Test failure in System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream\" (#37100) at dotnet/corefx","RelatedBody":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/177/consoleFull\r\n```\r\n04:17:03 ----- start 04:15:09 =============== To repro directly: =====================================================\r\n04:17:03 pushd .\r\n04:17:03 #!/usr/bin/env bash export COMPlus_TieredCompilation=0\r\n04:17:03 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet xunit.console.dll System.IO.Pipelines.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=IgnoreForCI -notrait category=failing -notrait category=OuterLoop \r\n04:17:03 popd\r\n04:17:03 ===========================================================================================================\r\n04:17:03 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.IO.Pipelines.Tests/netcoreapp-Linux-Release-arm64 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.IO.Pipelines.Tests/netcoreapp-Linux-Release-arm64\r\n04:17:03   Discovering: System.IO.Pipelines.Tests (method display = ClassAndMethod, method display options = None)\r\n04:17:03   Discovered:  System.IO.Pipelines.Tests (found 278 test cases)\r\n04:17:03   Starting:    System.IO.Pipelines.Tests (parallel test collections = on, max threads = 46)\r\n04:17:03 \r\n    System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream [FAIL]\r\n04:17:03       Assert.Equal() Failure\r\n04:17:03       Expected: Byte[] [84, 104, 105, 115]\r\n04:17:03       Actual:   Byte[] [84, 104, 105, 115, 87, ...]\r\n04:17:03       Stack Trace:\r\n04:17:03         /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.IO.Pipelines/tests/StreamPipeWriterTests.cs(122,0): at System.IO.Pipelines.Tests.StreamPipeWriterTests.<CanDoMultipleAsyncWritesToStream>g__DoReadsAsync|5_1(PipeReader reader, Byte[][] reads)\r\n04:17:03         /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.IO.Pipelines/tests/StreamPipeWriterTests.cs(143,0): at System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream()\r\n04:17:03         --- End of stack trace from previous location where exception was thrown ---\r\n04:17:03   Finished:    System.IO.Pipelines.Tests\r\n04:17:03 === TEST EXECUTION SUMMARY ===\r\n04:17:03    System.IO.Pipelines.Tests  Total: 322, Errors: 0, Failed: 1, Skipped: 0, Time: 92.463s\r\n04:17:03 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.IO.Pipelines.Tests/netcoreapp-Linux-Release-arm64\r\n04:17:03 ----- end 04:17:03 ----- exit code 1 ----------------------------------------------------------\r\n```"},{"Id":"9490342602","Type":"PullRequestEvent","CreatedAt":"2019-04-23T02:44:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37108","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37108) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.75\r\n- **Date Produced**: 4/23/2019 1:31 AM\r\n- **Commit**: 4895a06c0dcc5d13f75dd55bdce83f7792d72ba4\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview5-27622-75\r\n\r\n"},{"Id":"9490082964","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:33:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37108","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37108) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.75\r\n- **Date Produced**: 4/23/2019 1:31 AM\r\n- **Commit**: 4895a06c0dcc5d13f75dd55bdce83f7792d72ba4\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview5-27622-75\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9490304495","Type":"IssuesEvent","CreatedAt":"2019-04-23T02:34:14","Actor":"amat27","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35195","RelatedDescription":"Opened issue \"Make call hierarchy more compact\" (#35195) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 2019 16.0.1\r\n**Steps to Reproduce**:\r\nUse \"Call Hierarchy\" function on a method\r\n\r\n**Expected Behavior**:\r\nGet a compact view of all possible callers. Below is what ReSharper provides:\r\n![rsch](https://user-images.githubusercontent.com/5901497/56548646-3092f700-65b3-11e9-93cd-4fc66bd7a566.png)\r\n\r\n**Actual Behavior**:\r\nA more cumbersome call hierarchy view for the almost same content:\r\n![vsch](https://user-images.githubusercontent.com/5901497/56548609-16591900-65b3-11e9-8e84-fcb7b90b6f34.png)"},{"Id":"9490069026","Type":"PullRequestEvent","CreatedAt":"2019-04-23T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35193","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#35193) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9489943644","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:53:58","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35009","RelatedDescription":"Merged pull request \"Add import placement codestyle, diagnostic, and fixer\" (#35009) at dotnet/roslyn","RelatedBody":"This PR is created to simplify the changes made in https://github.com/dotnet/roslyn/pull/30760\r\n\r\nThis PR includes the changes from both https://github.com/dotnet/roslyn/pull/34963 & https://github.com/dotnet/roslyn/pull/34964\r\n\r\n![image](https://user-images.githubusercontent.com/611219/56227270-f3b28780-6029-11e9-8d40-d2972c73739b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/611219/56395031-e34b0a00-61ed-11e9-9571-c22d57fe418f.png)\r\n\r\n"},{"Id":"9489923174","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:47:49","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35194","RelatedDescription":"Opened pull request \"Using FQN instead of adding import during ENC session\" (#35194) at dotnet/roslyn","RelatedBody":"@tmat This feels like a better approach than listening to the debugger events, as completion provider is mostly stateless. What do you think?\r\n \r\nFYI @dpoeschl This is not intended to be merged before snap today, just need to target some branch. Will decide and retarget if necessary to the proper branch later."},{"Id":"9489868749","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:30:58","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35082","RelatedDescription":"Merged pull request \"Add telemetry for import completion\" (#35082) at dotnet/roslyn","RelatedBody":"I have verified the telemetry change locally using telemetry monitor. Also include some changes to the tests. Retargeted this to master per offline discussion with @jinujoseph.\r\n\r\n@dpoeschl @heejaechang @CyrusNajmabadi @dotnet/roslyn-ide "},{"Id":"9489773557","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:02:52","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34095","RelatedDescription":null,"RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/34089\r\nRequired by LiveShare"},{"Id":"9489773434","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:02:50","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34095","RelatedDescription":"Closed pull request \"Roslyn should not depend on IAsyncCompletionSource to provide completion trigger reason\" (#34095) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/34089\r\nRequired by LiveShare"},{"Id":"9489765055","Type":"PullRequestEvent","CreatedAt":"2019-04-23T00:00:34","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35193","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#35193) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9489617024","Type":"PullRequestEvent","CreatedAt":"2019-04-22T23:19:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7334","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7334) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel @tannergooding @dotnet-maestro-bot @sdmaclea"},{"Id":"9487264705","Type":"PullRequestEvent","CreatedAt":"2019-04-22T16:21:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7334","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7334) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9485486939","Type":"IssuesEvent","CreatedAt":"2019-04-22T10:28:49","Actor":"ifew","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7333","RelatedDescription":"Opened issue \"I compiled Net Core with EFCore but waiting a long time\" (#7333) at dotnet/corert","RelatedBody":"I developing some native app and using MySql.Data.EntityFrameworkCore but waiting a long time for compile, I'm not sure to correct or not.\r\n\r\nand then I try another code from other (https://github.com/rubin55/dot-hello). it's same\r\n\r\nI don't know why?\r\n\r\nMy Code \r\nhttps://github.com/ifew/aws-lambda-lambdanative-db/tree/master/src/aws-lambda-lambdanative\r\n\r\nMy OS: MacOS Mojave\r\nCPU Intel Core i5 2.9 GHz\r\nMemory:\t8 GB\r\n\r\npx. sorry for bad English"},{"Id":"9482290871","Type":"PullRequestEvent","CreatedAt":"2019-04-21T13:43:21","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7332","RelatedDescription":"Opened pull request \"Port GC changes from coreclr\" (#7332) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9489730642","Type":"PullRequestEvent","CreatedAt":"2019-04-22T23:51:00","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3167","RelatedDescription":"Opened pull request \"Move the SDK Performance tests to Helix\" (#3167) at dotnet/sdk","RelatedBody":"Move the Performance tests to Helix\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"open","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Open PR \"add links to ML.NET docs\" (#141)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"436000734","IsPullRequest":false,"CreatedAt":"2019-04-23T05:06:25","Actor":"BruceForstall","Number":"24184","RawContent":null,"Title":"CoreFX test failure: System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent","State":"open","Body":"Looks like a timeout\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_windows_nt_corefx_baseline/840/consoleFull\r\n\r\n```\r\n22:45:50      System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent [FAIL]\r\n22:45:50         System.TimeoutException : Task timed out after 00:00:30\r\n22:45:50         Stack Trace:\r\n22:45:50              at System.Threading.Tasks.TaskTimeoutExtensions.TimeoutAfter(Task task, TimeSpan timeout)\r\n22:45:50           D:\\j\\workspace\\x64_checked_w---a7bd363e\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cookies.cs(153,0): at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent()\r\n22:45:50           --- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24184","RelatedDescription":"Open issue \"CoreFX test failure: System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Cookies.GetAsync_AddMultipleCookieHeaders_CookiesSent\" (#24184)"},{"Id":"435993197","IsPullRequest":false,"CreatedAt":"2019-04-23T04:26:04","Actor":"BruceForstall","Number":"24183","RawContent":null,"Title":"runtest.py crash parsing failures","State":"open","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_jitx86hwintrinsicnoavx2/431/consoleFull\r\n\r\nTest run had one failure:\r\n```\r\n05:31:33                                                       GRAND TOTAL: 10450          0          1           0        5552.797s (5628.209s)\r\n```\r\n\r\nPython stack:\r\n```\r\n05:31:44 Parsing test results from (D:\\j\\workspace\\x86_checked_w---fa86ae90\\bin\\Logs\\TestRunResults_Windows_NT_x86_Checked)\r\n05:31:44 Traceback (most recent call last):\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2431, in <module>\r\n05:31:44     sys.exit(main(args))\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2417, in main\r\n05:31:44     tests = parse_test_results(host_os, arch, build_type, coreclr_repo_location, test_location)\r\n05:31:44   File \"D:\\j\\workspace\\x86_checked_w---fa86ae90\\tests\\runtest.py\", line 2092, in parse_test_results\r\n05:31:44     test_output = failure_info[0].text\r\n05:31:44   File \"C:\\Python27\\lib\\xml\\etree\\ElementTree.py\", line 266, in __getitem__\r\n05:31:44     return self._children[index]\r\n05:31:44 IndexError: list index out of range\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/24183","RelatedDescription":"Open issue \"runtest.py crash parsing failures\" (#24183)"},{"Id":"435975411","IsPullRequest":true,"CreatedAt":"2019-04-23T02:58:09","Actor":"ahsonkhan","Number":"24182","RawContent":null,"Title":"[No merge] [No review] Update coreclr repo README.md","State":"open","Body":"Testing out test failure in CI.\r\n\r\nhttps://github.com/dotnet/coreclr/issues/24159\r\n","Url":"https://github.com/dotnet/coreclr/pull/24182","RelatedDescription":"Open PR \"[No merge] [No review] Update coreclr repo README.md\" (#24182)"},{"Id":"435956544","IsPullRequest":false,"CreatedAt":"2019-04-23T01:24:00","Actor":"AriNuer","Number":"24181","RawContent":null,"Title":"[arm/windows]Test failure: JIT\\superpmi\\superpmicollect\\superpmicollect.cmd","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_jitstress2_jitstressregs4_tst/69/\r\n\r\n**Failed test:**\r\nJIT_superpmi._superpmicollect_superpmicollect_.JIT\\\\superpmi\\\\superpmicollect\\\\superpmicollect.cmd\r\n\r\n**Failed with log:**\r\n```\r\nJIT\\superpmi\\superpmicollect\\superpmicollect.cmd [FAIL]\r\nEXEC : error : replay of final file is not error free [C:\\j\\workspace\\arm_cross_che---a21256ac\\tests\\runtest.proj]\r\n        \r\n        Return code:      1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24181","RelatedDescription":"Open issue \"[arm/windows]Test failure: JIT\\superpmi\\superpmicollect\\superpmicollect.cmd\" (#24181)"},{"Id":"435956277","IsPullRequest":false,"CreatedAt":"2019-04-23T01:22:32","Actor":"VincentBu","Number":"24180","RawContent":null,"Title":"[arm64] Test failed: System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_corefx_minopts_tst/30/\r\n\r\n**Failed tests:**\r\nSystem.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly\r\n\r\n**Log:**\r\n```\r\nSystem.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly(chunkedTransfer: True, connectionClose: True, mode: CancelPendingRequests) [FAIL]\r\n      System.TypeLoadException : Could not load type 'System.IO.Stream+<FinishWriteAsync>d__60' from assembly 'System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'.\r\n      Stack Trace:\r\n           at System.Reflection.CustomAttribute._CreateCaObject(RuntimeModule pModule, RuntimeType type, IRuntimeMethodInfo pCtor, Byte** ppBlob, Byte* pEndBlob, Int32* pcNamedArgs)\r\n           at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule module, RuntimeType type, IRuntimeMethodInfo ctor, IntPtr& blob, IntPtr blobEnd, Int32& namedArgs)\r\n           at System.Reflection.CustomAttribute.AddCustomAttributes(ListBuilder`1& attributes, RuntimeModule decoratedModule, Int32 decoratedMetadataToken, RuntimeType attributeFilterType, Boolean mustBeInheritable, ListBuilder`1& derivedAttributes)\r\n           at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule, Int32 decoratedMetadataToken, Int32 pcaCount, RuntimeType attributeFilterType)\r\n           at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeMethodInfo method, RuntimeType caType, Boolean inherit)\r\n           at System.Reflection.RuntimeMethodInfo.GetCustomAttributes(Type attributeType, Boolean inherit)\r\n           at System.Attribute.GetCustomAttributes(MemberInfo element, Type type, Boolean inherit)\r\n           at System.Reflection.CustomAttributeExtensions.GetCustomAttributes[T](MemberInfo element, Boolean inherit)\r\n           at System.Diagnostics.StackTrace.TryResolveStateMachineMethod(MethodBase& method, Type& declaringType)\r\n           at System.Diagnostics.StackTrace.ToString(TraceFormat traceFormat)\r\n           at System.Exception.GetStackTrace(Boolean needFileInfo)\r\n           at System.Exception.ToString(Boolean needFileLineInfo, Boolean needMessage)\r\n           at System.Exception.ToString(Boolean needFileLineInfo, Boolean needMessage)\r\n           at System.Exception.ToString()\r\n           at System.String.Concat(Object arg0, Object arg1, Object arg2)\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cancellation.cs(406,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Cancellation_Test.ValidateClientCancellationAsync(Func`1 clientBodyAsync)\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cancellation.cs(132,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Cancellation_Test.<>c__DisplayClass3_2.<<GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly>b__0>d.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\Common\\tests\\System\\Net\\Http\\LoopbackServer.cs(66,0): at System.Net.Test.Common.LoopbackServer.CreateServerAsync(Func`2 funcAsync, Options options)\r\n        D:\\j\\workspace\\arm64_cross_c---d6aee07b\\_\\fx\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.Cancellation.cs(114,0): at System.Net.Http.Functional.Tests.HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly(Boolean chunkedTransfer, Boolean connectionClose, CancellationMode mode)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24180","RelatedDescription":"Open issue \"[arm64] Test failed: System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_Cancellation_Test.GetAsync_CancelDuringResponseBodyReceived_Buffered_TaskCanceledQuickly\" (#24180)"},{"Id":"435954170","IsPullRequest":false,"CreatedAt":"2019-04-23T01:10:49","Actor":"VincentBu","Number":"24179","RawContent":null,"Title":"[x86] Test failed: baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_no_tiered_compilation/262/\r\n\r\n**Failed tests:**\r\nbaseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\r\n\r\n**Log:**\r\n```\r\nbaseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd [FAIL]\r\n        \r\n        Return code:      1\r\n        Raw output file:      D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\baseservices.threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" exchangedouble.exe \r\n        -1.7976922776554302E+308,-1.7976931348623157E+308,0\r\n        Test Failed\r\n        Expected: 100\r\n        Actual: 0\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n        > D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\TestWrappers\\baseservices.threading\\baseservices.threading.XUnitWrapper.cs(18660,0): at baseservices_threading._interlocked_exchange_exchangedouble_exchangedouble_._interlocked_exchange_exchangedouble_exchangedouble_cmd()\r\n        Output:\r\n          \r\n          Return code:      1\r\n          Raw output file:      D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\baseservices.threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n           \"D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" exchangedouble.exe \r\n          -1.7976922776554302E+308,-1.7976931348623157E+308,0\r\n          Test Failed\r\n          Expected: 100\r\n          Actual: 0\r\n          END EXECUTION - FAILED\r\n          FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n          > D:\\j\\workspace\\x86_checked_w---515184e9\\bin\\tests\\Windows_NT.x86.Checked\\baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24179","RelatedDescription":"Open issue \"[x86] Test failed: baseservices\\threading\\interlocked\\exchange\\exchangedouble\\exchangedouble.cmd\" (#24179)"},{"Id":"435903521","IsPullRequest":true,"CreatedAt":"2019-04-22T23:32:23","Actor":"BruceForstall","Number":"24176","RawContent":null,"Title":"Disable 2 GC tests under HeapVerify for arm64","State":"closed","Body":"They fail due to timeout with `COMPlus_HeapVerify=1` on arm64.\r\n\r\nThey were already being disabled for HeapVerify for x86 and arm32.\r\n\r\nFixes #24175","Url":"https://github.com/dotnet/coreclr/pull/24176","RelatedDescription":"Closed or merged PR \"Disable 2 GC tests under HeapVerify for arm64\" (#24176)"},{"Id":"435873239","IsPullRequest":false,"CreatedAt":"2019-04-22T23:32:23","Actor":"BruceForstall","Number":"24175","RawContent":null,"Title":"[Linux/arm64] Tests time out under HeapVerify=1","State":"closed","Body":"Several GC tests time out under `COMPlus_HeapVerify=1`\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_heapverify1_tst/28/consoleFull\r\n\r\n```\r\nGC/Regressions/v2.0-rtm/494226/494226/494226.sh\r\nGC/Scenarios/ServerModel/servermodel/servermodel.sh\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/24175","RelatedDescription":"Closed issue \"[Linux/arm64] Tests time out under HeapVerify=1\" (#24175)"},{"Id":"435870905","IsPullRequest":true,"CreatedAt":"2019-04-22T23:01:09","Actor":"BruceForstall","Number":"24174","RawContent":null,"Title":"Disable _il_relthread-race test under GCStress","State":"closed","Body":"It takes too long, and times out in CI.\r\n\r\nFixes #24172","Url":"https://github.com/dotnet/coreclr/pull/24174","RelatedDescription":"Closed or merged PR \"Disable _il_relthread-race test under GCStress\" (#24174)"},{"Id":"435861194","IsPullRequest":false,"CreatedAt":"2019-04-22T23:01:09","Actor":"BruceForstall","Number":"24172","RawContent":null,"Title":"[Linux/arm64][GCStress=C] _il_relthread-race time out","State":"closed","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/29\r\n\r\n```\r\nJIT/Methodical/tailcall/Desktop/_il_relthread-race/_il_relthread-race.sh [FAIL]\r\n03:51:51         \r\n03:51:51         cmdLine:/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/JIT/Methodical/tailcall/Desktop/_il_relthread-race/_il_relthread-race.sh Timed Out\r\n03:51:51         \r\n03:51:51         Return code:      -100\r\n03:51:51         Raw output file:      /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/JIT/Methodical/Reports/JIT.Methodical/tailcall/Desktop/_il_relthread-race/_il_relthread-race.output.txt\r\n03:51:51         Raw output:\r\n03:51:51         BEGIN EXECUTION\r\n03:51:51         /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/corerun _il_relthread-race.exe ''\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24172","RelatedDescription":"Closed issue \"[Linux/arm64][GCStress=C] _il_relthread-race time out\" (#24172)"},{"Id":"435910118","IsPullRequest":true,"CreatedAt":"2019-04-22T22:00:05","Actor":"wtgodbe","Number":"24178","RawContent":null,"Title":"Update branding to preview5 in release/3.0","State":"closed","Body":"CC @mmitche ","Url":"https://github.com/dotnet/coreclr/pull/24178","RelatedDescription":"Closed or merged PR \"Update branding to preview5 in release/3.0\" (#24178)"},{"Id":"435847998","IsPullRequest":true,"CreatedAt":"2019-04-22T21:58:17","Actor":"dotnet-maestro-bot","Number":"24169","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @sdmaclea\n* @CarolEidt\n* @RussKeldorph\n* @jkotas\n* @AaronRobinsonMSFT\n* @stephentoub\n* @sywhang\n* @sandreenko\n* @tannergooding\n* @kouvel\n* @Maoni0\n* @fadimounir\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24169","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#24169)"},{"Id":"435907964","IsPullRequest":true,"CreatedAt":"2019-04-22T21:52:45","Actor":"davidwrighton","Number":"24177","RawContent":null,"Title":"Improve the performance of the type loader","State":"open","Body":"- Disable interface ambiguity checks in Corelib\r\n- Improve StackingAllocator perf\r\n  - Increase size of allocation blocks\r\n  - Cleanup allocation blocks comletely on gc suspension\r\n- Check for presence of generic parameters to methods in a more efficient manner\r\n  - Querying the count of GenericParameter records requires a binary search in the GenericParams table\r\n  - Checking the generic flag on the method signature is effectively free\r\n- Skip unnecessary checks in EnumerateClassMethods for corelib\r\n- Use slightly faster hashtable functions in StringLiteralMap\r\n  - Remove pointless string literal entry hash table search","Url":"https://github.com/dotnet/coreclr/pull/24177","RelatedDescription":"Open PR \"Improve the performance of the type loader\" (#24177)"},{"Id":"435868553","IsPullRequest":false,"CreatedAt":"2019-04-22T20:01:51","Actor":"BruceForstall","Number":"24173","RawContent":null,"Title":"[GCStress=C] Failure in JIT/Methodical/ELEMENT_TYPE_IU/_il_dbgu_fld/_il_dbgu_fld.sh","State":"open","Body":"Linux/arm64, GCStress=C, JitStress=1.\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_gcstress0xc_jitstress1_flow/\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_gcstress0xc_jitstress1_tst/31/consoleFull\r\n\r\n```\r\nJIT/Methodical/ELEMENT_TYPE_IU/_il_dbgu_fld/_il_dbgu_fld.sh [FAIL]\r\n04:31:50         \r\n04:31:50         Return code:      1\r\n04:31:50         Raw output file:      /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm64.Checked/JIT/Methodical/Reports/JIT.Methodical/ELEMENT_TYPE_IU/_il_dbgu_fld/_il_dbgu_fld.output.txt\r\n04:31:50         Raw output:\r\n04:31:50         BEGIN EXECUTION\r\n04:31:50         /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/corerun _il_dbgu_fld.exe ''\r\n04:31:50         128\r\n04:31:50         failed\r\n04:31:50         Expected: 100\r\n04:31:50         Actual: 1\r\n04:31:50         END EXECUTION - FAILED\r\n04:31:50         Test Harness Exitcode is : 1\r\n04:31:50         To run the test:\r\n04:31:50         > set CORE_ROOT=/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root\r\n04:31:50         > /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm64.Checked/JIT/Methodical/ELEMENT_TYPE_IU/_il_dbgu_fld/_il_dbgu_fld.sh\r\n04:31:50         Expected: True\r\n04:31:50         Actual:   False\r\n04:31:50         Stack Trace:\r\n04:31:50           /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04/bin/tests/Linux.arm64.Checked/TestWrappers/JIT.Methodical/JIT.Methodical.XUnitWrapper.cs(88347,0): at JIT_Methodical._ELEMENT_TYPE_IU__il_dbgu_fld__il_dbgu_fld_._ELEMENT_TYPE_IU__il_dbgu_fld__il_dbgu_fld_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24173","RelatedDescription":"Open issue \"[GCStress=C] Failure in JIT/Methodical/ELEMENT_TYPE_IU/_il_dbgu_fld/_il_dbgu_fld.sh\" (#24173)"},{"Id":"435847536","IsPullRequest":true,"CreatedAt":"2019-04-22T19:13:56","Actor":"wtgodbe","Number":"24168","RawContent":null,"Title":"Update branding in master to preview6","State":"closed","Body":"CC @mmitche @danmosemsft @RussKeldorph \r\n\r\nI'll merge this after the code-merge job into rel/3.0 completes","Url":"https://github.com/dotnet/coreclr/pull/24168","RelatedDescription":"Closed or merged PR \"Update branding in master to preview6\" (#24168)"},{"Id":"435848035","IsPullRequest":false,"CreatedAt":"2019-04-22T19:05:05","Actor":"franksinankaya","Number":"24170","RawContent":null,"Title":"Ubertask for CoreCLR GCC port","State":"open","Body":"GCC port of CoreCLR work has been going for some time now. This is the top level task to track the final goal.\r\n\r\nA fork of the project is available here:\r\nhttps://github.com/franksinankaya/coreclr/tree/uuid_rework_7\r\n\r\nWe are unable to complete this work until JIT work #23386   is done and we make the UUID solution nicer.\r\n\r\n@janvorli : FYI\r\n\r\n@am11 : can you please test this for the SmartOS distro?\r\n\r\n@jkotas : see the test results per your request. Tested on ubuntu 16.04 using gcc 5.4. \r\n\r\nTotal tests run    : 2510\r\nTotal passing tests: 2510\r\nTotal failed tests : 0\r\nTotal skipped tests: 0\r\n\r\nI did see some more compilation errors with newer GCC versions like gcc 7.,x or gcc 8.x. Those issues are TBD at this moment.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24170","RelatedDescription":"Open issue \"Ubertask for CoreCLR GCC port\" (#24170)"},{"Id":"435814118","IsPullRequest":false,"CreatedAt":"2019-04-22T17:41:24","Actor":"CarolEidt","Number":"24167","RawContent":null,"Title":"Update the CLR ABI document for vector types","State":"open","Body":"https://github.com/dotnet/coreclr/blob/master/Documentation/botr/clr-abi.md\r\n\r\nAs discussed here: https://github.com/dotnet/coreclr/pull/23675#issuecomment-482756702, we need to update the ABI document to clarify the handling of vector types.\r\nAlso, once we enable interop for blittable generic types (#23899), we will need to ensure clarity around how these types (i.e. `Vector<T>`, `Vector64<T>`, `Vector128<T>` and `Vector256<T>`) are handled wrt interop, and to clarify that the existing interop types (`Vector2`, `Vector3` and `Vector4`) are not actually treated as vectors, but rather as normal structs of N floats, as that is how they are defined.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24167","RelatedDescription":"Open issue \"Update the CLR ABI document for vector types\" (#24167)"},{"Id":"435809589","IsPullRequest":false,"CreatedAt":"2019-04-22T17:28:07","Actor":"CarolEidt","Number":"24166","RawContent":null,"Title":"Investigate x86 requirement for \"this\" ptr in register","State":"open","Body":"In https://github.com/dotnet/coreclr/pull/24043 I did some clean up of the weird semantics of `RequiresRegister()`, changing non-`ActualRef` `RefPosition`s to be marked `RegOptional`.\r\nThis changed the behavior under stress  (specifically jitStressRegs 0x1000, which is the regOptionalNoAlloc). `RefTypeParamDef`s aren't considered \"ActualRefs\" but previously weren't marked `RegOptional`. However, the x86 gc encoding doesn't seem to expect the 'this' ptr not to get a register (it can be spilled, but there's a dependency somewhere on it getting an initial register assignment).\r\nInvestigate this, and determine whether it's a fundamental requirement that should be explicitly specified in the register allocator. (As it is, it will always get a register, since it occupies one to begin with, and therefore has at least that register available to it.)","Url":"https://github.com/dotnet/coreclr/issues/24166","RelatedDescription":"Open issue \"Investigate x86 requirement for \"this\" ptr in register\" (#24166)"},{"Id":"435589994","IsPullRequest":true,"CreatedAt":"2019-04-22T17:09:22","Actor":"franksinankaya","Number":"24160","RawContent":null,"Title":"Correct iterator in JIT","State":"closed","Body":"Correct iterator in genNumberOperandUse as operand is both used for loop value and also for finding the Operands()\r\n\r\nUse of uninitialised value of size 8\r\nGenTree::OperGet() const (gentree.h:366)\r\nGenTreeUseEdgeIterator::GenTreeUseEdgeIterator(GenTree*) (gentree.cpp:8394)\r\nGenTreeOperandIterator::GenTreeOperandIterator(GenTree*) (gentree.h:2291)\r\nGenTree::OperandsBegin() (gentree.cpp:8977)\r\nGenTree::Operands() (gentree.cpp:8987)\r\nCodeGen::genNumberOperandUse(GenTree*, int&) const (codegenlinear.cpp:1209)\r\nCodeGen::genCodeForBBlist() (codegenlinear.cpp:405)\r\nCodeGen::genGenerateCode(void**, unsigned int*) (codegencommon.cpp:2147)\r\n","Url":"https://github.com/dotnet/coreclr/pull/24160","RelatedDescription":"Closed or merged PR \"Correct iterator in JIT\" (#24160)"},{"Id":"435715443","IsPullRequest":true,"CreatedAt":"2019-04-22T15:51:52","Actor":"RussKeldorph","Number":"24162","RawContent":null,"Title":"Disable failing IJW tests against #23358","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24162","RelatedDescription":"Closed or merged PR \"Disable failing IJW tests against #23358\" (#24162)"},{"Id":"435772634","IsPullRequest":false,"CreatedAt":"2019-04-22T15:38:55","Actor":"hez2010","Number":"24165","RawContent":null,"Title":"Feature Request: A mechanism for unloading and reloading unmanaged libraries while using P/Invoke","State":"open","Body":"Currently there's no way to unload unmanaged dynamic libraries while using P/Invoke.  \r\n\r\nSometimes we need to hot-upgrade without restarting host process, absolutely that we can use LoadLibrary/FreeLibrary to achieve that but it's really inconvenient, and also we cannot invoke methods in dll directly by calling their method names/ordinals.  \r\n\r\nSo I think it is necessary to provide a mechanism for unloading/reloading dlls while using P/Invoke.","Url":"https://github.com/dotnet/coreclr/issues/24165","RelatedDescription":"Open issue \"Feature Request: A mechanism for unloading and reloading unmanaged libraries while using P/Invoke\" (#24165)"},{"Id":"435772524","IsPullRequest":false,"CreatedAt":"2019-04-22T15:38:39","Actor":"kfrolov","Number":"24164","RawContent":null,"Title":"[Linux/ARM] Segmentation faults when running precompiled JIT code on ARM (Tizen, 32-bit)","State":"open","Body":"Recently we have discovered new issue which prevents debugging of precompiled application and libraries. Libraries and applications can be precompiled by \"crossgen\" application. In case when we will try to debug application containing precompiled JIT code, incorrect CoreCLR  behavior will lead do segmentation fault exception and abnormal program termination.\r\n\r\nThe issue is discovered and reproduced with CoreCLR release 2.1.4 on ARM (32 bit) CPU, on Linux (Tizen). As we know, issue still exists in \"master\" branch of CoreCLR and related to implementation of \"single stepping\" routine for 32-bit ARM CPUs in CoreCLR's code. \r\n\r\nIn short, the problem might be reproduced in the following way:\r\n\r\n* start debugging the application with \"netcoredbg\" debugger (here and later I assume debugging of managed code only);\r\n* set breakpoint to line of the program;\r\n* when debugger stops on the breakpoint, apply \"Step\" function -- at this moment process, which runs managed application, crashed due to SIGSEGV signal.\r\n\r\nI will provide full description of steps required to reproduce the issue in the separate message\r\n\r\nThis issue was caused by pull request #11366, which adds some sort of optimization of JIT code, which uses PC-relative addresing to avoid relocations in loadable code segments, and to allow to share these code segments among multiple applications.\r\n\r\n**More detailed description**\r\n\r\nThe root cause of the issue, is how CoreCLR performing \"single step\" operation during debugging: it tries to perform single stepping at machine instruction level until PC (program counter) not reaches next line of code, or not reaches some other function.  In comparison with CPUs based on x86 architecture (which have \"Trap Flag\" in flags register), on ARM where is no CPU support for single stepping on ARM CPU. Moreover, Linux removed support of PTRACE_SINGLESTEP function in ptrace(2) system call (https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=425fc47adb5bb69f76285be77a09a3341a30799e). So only solution to execute every single machine instruction step by step on ARM CPU is to perform this task manually by one of the following methods:\r\n\r\n1. completely emulate all CPU instructions -- this solution might be impractical because of high complexity;\r\n2. or emulate only those instruction, which can't be executed as described below, for example jumps can't be executed directly (because you can't stop  CPU after such instruction in easy way), and run other instructions as is.\r\n\r\nCurrently CoreCLR implies second option. Most of CPU instructions can be executed as is. But few instruction classes require emulation. Practically this is those instructions, which reference PC (R15) register: because such instruction might perform jump (change PC value), or because this instruction might reference PC to implement PC-relative addressing.\r\n\r\nWhy latter is important: to execute every single instruction it is placed in thread specific local buffer, then after the instruction special \"breakpoint\" opcode is placed, and then code executed from this buffer. So, when every single instruction is executed, it is executed with other PC value, than expected by the program. This is why PC-relative addressing might cause problems.\r\n\r\nReason of executing every single instruction from thread specific local buffer is that the program is multithreaded and we can't just replace next instruction in user's code to breakpoint instruction: other threads at same time might execute same piece of code.\r\n\r\nThis issue exist because CoreCLR doesn't emulate some instructions correctly. Especially it doesn't emulate instruction \"ADD Rd, PC\" at all and this is root cause of the bug.\r\n\r\n**Possible solutions**\r\n\r\nWe can just add emulation of such instruction and the bug will go away.\r\n\r\nBut during examination of this issue we have discovered, that CoreCLR currently can emulate only _limited set of instructions_ (see src/vm/arm/armsinglestepper.cpp, ArmSingleStepper::TryEmulate function).  But at same time, CPU can execute much more wider set of instructions which can change or read PC (R15) register value. So, by adding emulation of \"ADD Rd, PC\" instruction we not solve the problem completely, but just push the problem to the future.  Which problems we see:\r\n\r\n1. currently code emulates _very limited set_ of \"problematic\" instructions and in limited way (it not emulates all \"conditional\" instructions,  not assigns status register flags based on performed arithmetic operations);\r\n2. we have suspicion, that this code isn't well tested: case, in which it fails, is quite common;\r\n3. code full of \"magic numbers\", which we can't check easily and in absence of tests this lookс risky: where is guarantee, that it not fail on same single instruction in future?\r\n\r\nSo, as I think, better solution might be one of the following:\r\n\r\n1. modify code to support more complete instructions set and provide complex set of tests, practically this solution complicated by existing structure of the code (we don't want to emulate arithmetic instructions, because this is very complex task and might introduce lot of mistakes -- see below);\r\n2. or rewrite significant part of ArmSingleStepper class at all with the following goals: avoid magic numbers in code (you should have possibility to check code correctness by comparing command descriptions with documentation published by ARM without use of calculations, just by comparing visually), allow to execute wider instruction set.\r\n\r\nRegarding to second option, I have proposition, which allows to avoid emulation of almost all commands, with exception of block load commands (like LDM) and jump commands (B, BLX, BX, TBH, TBB, etc...) \r\n\r\nThis proposition is follows: instead writing bunch of code for emulation each arithmetic command (because ARM allows to use PC register in arithmetic commands), perform register's substitution in command and use some other register in place of PC, which will contain right value. When executing single command, with exception of block load commands (LDM, STM), not all registers used simultaneously, so we can substitute PC with some \"unused\" register (of course, we should temporary save it's value). In that way we can just execute modified command, but not emulate it (and again, we should modify context before and after execution of the command). As I think, this approach significantly simplifies the task and reduces risk of making mistake.\r\n\r\n**Which commands we should emulate.**\r\n\r\nLater I will refer document \"ARM DDI 0406C.c\" (ID051414), which available by this link: https://static.docs.arm.com/ddi0406/c/DDI0406C_C_arm_architecture_reference_manual.pdf\r\n\r\nOn page 2487, in section D9.4, you can find, that ARM deprecates using PC in every command, where it is possible, and limits set of the commands, which might reference PC register, to the following:\r\n\r\n* load instructions (like LD, MOV), including block load (LDM);\r\n* limited set of arithmetic instructions: ADD, SUB, ADR (including conditional ones);\r\n* all jump instructions (including BX<cond> PC).\r\n\r\nSo practically we should implement execution of load commands and arithmetic instructions, and implement emulation of block load and jump instructions. This command set not so small as it seems, but much smaller, than whole commands set, which CPU potentially can execute, and which references PC register. As I know, currently clang or gcc will not use \"deprecated\" instructions, and I assume, that CoreCLR's JIT compiler not use such instructions too.\r\n\r\n**Questions**\r\n\r\nI want to ask few questions related to this issue:\r\n\r\n1. Can you list a sources, from which the code, which might be \"single stepped\" by CoreCLR, can come?  Currently we know, what JIT code might be generated by CoreCLR itself or created by \"crossgen\" program and when loaded from a file. So in both cases we can deal with code produced by CoreCLR's JIT compiler.  But where is the possibility, that code might come from other source, this is might be some sort of \"native\" code created by other compilers, by hand, etc...?   Where is possibility, what CoreCLR might try to \"step into\" native code (some native library, etc...) ?\r\n\r\n2. Do you have any tests for single stepping or can suggest us how we can perform testing the fact, what single stepping works correctly?\r\n\r\n3. Which way, by your opinion, we should use to fix this issue?\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24164","RelatedDescription":"Open issue \"[Linux/ARM] Segmentation faults when running precompiled JIT code on ARM (Tizen, 32-bit)\" (#24164)"},{"Id":"435554969","IsPullRequest":true,"CreatedAt":"2019-04-22T14:07:14","Actor":"sdmaclea","Number":"24154","RawContent":null,"Title":"Remove create assembly name","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24154","RelatedDescription":"Closed or merged PR \"Remove create assembly name\" (#24154)"},{"Id":"435720732","IsPullRequest":true,"CreatedAt":"2019-04-22T13:08:35","Actor":"stephentoub","Number":"24163","RawContent":null,"Title":"Fix handling of negative numbers in ThreadPool.SetMin/MaxThreads","State":"open","Body":"cc: @kouvel, @filipnavara \r\nContributes to https://github.com/dotnet/corefx/issues/36885","Url":"https://github.com/dotnet/coreclr/pull/24163","RelatedDescription":"Open PR \"Fix handling of negative numbers in ThreadPool.SetMin/MaxThreads\" (#24163)"},{"Id":"435647955","IsPullRequest":false,"CreatedAt":"2019-04-22T08:33:49","Actor":"YohDeadfall","Number":"24161","RawContent":null,"Title":"Inconsistent behavior between Activator.CreateInstance methods","State":"open","Body":"According to [the docs](https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance?view=netcore-3.0) all non-generic `CreateInstance` methods of `Activator` must throw a `MemberAccessException` when the specified type is abstract:\r\n\r\n> Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\r\n\r\nBut `CreateInstance<T>` behaves differently, it throws a `MissingMethodException` in all cases. This behavior is checked by tests in the Core FX repo ([source](https://github.com/dotnet/corefx/blob/b96247e76506e81ff6eb28dd2a14914a59e2a257/src/System.Runtime/tests/System/ActivatorTests.cs#L299-L307)), but the documentation states that this exception must be throw in case when:\r\n\r\n> The type that is specified for `T` does not have a parameterless constructor.\r\n\r\nIf `T` is an abstract class with a parameterless constructor, that kind of exception isn't obvious. At the same time the documentation says nothing about other possible exception types.\r\n\r\nBy the way, `ReflectionSerialization::GetUninitializedObject` and `RuntimeTypeHandle::CreateInstance` throw different exceptions in that case too:\r\n\r\nFrom [`ReflectionSerialization::GetUninitializedObject`](https://github.com/dotnet/coreclr/blob/d3e39bc2f81e3dbf9e4b96347f62b49d8700336c/src/vm/reflectioninvocation.cpp#L2610-L2612):\r\n\r\n```cpp\r\n    if (pMT->IsAbstract()) {\r\n        COMPlusThrow(kMemberAccessException,W(\"Acc_CreateAbst\"));\r\n    }\r\n```\r\n\r\nFrom [`RuntimeTypeHandle::CreateInstance`](https://github.com/dotnet/coreclr/blob/d3e39bc2f81e3dbf9e4b96347f62b49d8700336c/src/vm/reflectioninvocation.cpp#L446-L451):\r\n\r\n```cpp\r\n        if (pVMT->IsAbstract())  {\r\n            if (pVMT->IsInterface())\r\n                COMPlusThrow(kMissingMethodException,W(\"Acc_CreateInterface\"));\r\n            else\r\n                COMPlusThrow(kMissingMethodException,W(\"Acc_CreateAbst\"));\r\n        }\r\n```\r\n\r\n/cc @jkotas @stephentoub","Url":"https://github.com/dotnet/coreclr/issues/24161","RelatedDescription":"Open issue \"Inconsistent behavior between Activator.CreateInstance methods\" (#24161)"},{"Id":"435568740","IsPullRequest":false,"CreatedAt":"2019-04-22T01:30:28","Actor":"AriNuer","Number":"24159","RawContent":null,"Title":"CoreFX test failures, incl. System.Buffers.Tests.ArrayBufferWriterTests_Byte.Advance","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_windows_nt_corefx_jitstressregs0x80/842/\r\n\r\n**Failed tests:**\r\nSystem.Buffers.Tests.ArrayBufferWriterTests_Byte.Advance\r\nSystem.Buffers.Tests.ArrayBufferWriterTests_Char.Advance\r\n\r\n**Failed log:**\r\n```\r\nSystem.Buffers.Tests.ArrayBufferWriterTests_Byte.Advance [FAIL]\r\n  [Long Running Test] 'System.IO.Tests.FileInfo_CopyTo_str_b.CopyFileWithData_MemberData', Elapsed: 00:15:58\r\n  [Long Running Test] 'System.IO.Tests.Pipes.AnonymousPipeReadViaFileStream', Elapsed: 00:15:38\r\n        Assert.True() Failure\r\n  [Long Running Test] 'System.IO.Tests.FileStream_FlushAsync.FlushAfterReading', Elapsed: 00:15:37\r\n  [Long Running Test] 'System.IO.Tests.FileStream_WriteAsync_AsyncWrites.WriteAsyncInternalBufferOverflow', Elapsed: 00:15:34\r\n        Expected: True\r\n  [Long Running Test] 'System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites.WriteAsyncCancelledFile', Elapsed: 00:14:43\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_checked_w---ac310d4a\\_\\fx\\src\\System.Memory\\tests\\ArrayBufferWriter\\ArrayBufferWriterTests.T.cs(95,0): at System.Buffers.Tests.ArrayBufferWriterTests`1.Advance()\r\n  [Long Running Test] 'System.IO.Tests.Sync_FileStream_ReadWrite_Span.EmptyFile_ReadAsync_Succeeds', Elapsed: 00:14:31\r\n  [Long Running Test] 'System.IO.Tests.FileStream_SafeFileHandle.ThrowWhenHandlePositionIsChanged_sync', Elapsed: 00:14:30\r\n  [Long Running Test] 'System.IO.Tests.File_Copy_str_str_b.CopyFileWithData_MemberData', Elapsed: 00:14:27\r\n      System.Buffers.Tests.ArrayBufferWriterTests_Char.Advance [FAIL]\r\n        Assert.True() Failure\r\n        Expected: True\r\n        Actual:   False\r\n     System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:10:23\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_checked_w---ac310d4a\\_\\fx\\src\\System.Memory\\tests\\ArrayBufferWriter\\ArrayBufferWriterTests.T.cs(95,0): at System.Buffers.Tests.ArrayBufferWriterTests`1.Advance()\r\n     System.IO.FileSystem.Tests: [Long Running Test] 'System.IO.Tests.Sync_DerivedFileStream_ReadWrite_Span.NonEmptyWriteAsync_CustomMemoryManager_WritesExpectedData', Elapsed: 00:17:55\r\n  [Long Running Test] 'System.IO.Tests.File_AppendAllTextAsync.OverwriteAsync', Elapsed: 00:18:15\r\n  [Long Running Test] 'System.IO.Tests.File_ReadWriteAllLines_Enumerable_EncodedAsync.DisposingEnumeratorClosesFileAsync', Elapsed: 00:18:04\r\n  [Long Running Test] 'System.IO.Tests.FileStream_BeginEndRead_AsyncReads.EmptyFileReadAsyncSucceedSynchronously', Elapsed: 00:18:17\r\n  [Long Running Test] 'System.IO.Tests.File_AppendAllLinesAsync_Encoded.NullLinesAsync', Elapsed: 00:18:14\r\n  [Long Running Test] 'System.IO.Tests.File_ReadWriteAllTextAsync.ValidWriteAsync', Elapsed: 00:18:08\r\n  [Long Running Test] 'System.IO.Tests.FileStream_DisposeAsync.DisposeAsyncFlushes', Elapsed: 00:18:13\r\n  [Long Running Test] 'System.IO.Tests.File_ReadWriteAllLines_EnumerableAsync.ValidWriteAsync', Elapsed: 00:18:12\r\n  [Long Running Test] 'System.IO.Tests.File_AppendAllTextAsync_Encoded.OverwriteAsync', Elapsed: 00:18:11\r\n  [Long Running Test] 'System.IO.Tests.FileInfo_CopyTo_str.CopyFileWithData_MemberData', Elapsed: 00:18:06\r\n  [Long Running Test] 'System.IO.Tests.File_Copy_str_str.CopyFileWithData_MemberData', Elapsed: 00:18:08\r\n  [Long Running Test] 'System.IO.Tests.FileInfo_CopyTo_str_b.CopyFileWithData_MemberData', Elapsed: 00:18:01\r\n  [Long Running Test] 'System.IO.Tests.Pipes.AnonymousPipeReadViaFileStream', Elapsed: 00:17:40\r\n  [Long Running Test] 'System.IO.Tests.FileStream_FlushAsync.FlushAfterReading', Elapsed: 00:17:40\r\n  [Long Running Test] 'System.IO.Tests.FileStream_WriteAsync_AsyncWrites.WriteAsyncInternalBufferOverflow', Elapsed: 00:17:36\r\n  [Long Running Test] 'System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites.WriteAsyncCancelledFile', Elapsed: 00:16:45\r\n  [Long Running Test] 'System.IO.Tests.Sync_FileStream_ReadWrite_Span.EmptyFile_ReadAsync_Succeeds', Elapsed: 00:16:33\r\n  [Long Running Test] 'System.IO.Tests.FileStream_SafeFileHandle.ThrowWhenHandlePositionIsChanged_sync', Elapsed: 00:16:33\r\n  [Long Running Test] 'System.IO.Tests.File_Copy_str_str_b.CopyFileWithData_MemberData', Elapsed: 00:16:30\r\n     System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:12:25\r\n    Finished:    System.Memory.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Memory.Tests  Total: 45349, Errors: 0, Failed: 2, Skipped: 0, Time: 268.522s\r\n  ----- end 17:02:04.68 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24159","RelatedDescription":"Open issue \"CoreFX test failures, incl. System.Buffers.Tests.ArrayBufferWriterTests_Byte.Advance\" (#24159)"},{"Id":"435560285","IsPullRequest":false,"CreatedAt":"2019-04-22T00:03:32","Actor":"Thealexbarney","Number":"24158","RawContent":null,"Title":"JIT: Suboptimal codegen when using array instead of span","State":"open","Body":"In the following situation, changing the type of a local variable from `Span<Vector128<byte>>` to `Vector128<byte>[]` results in performance that is ~80% of the original.\r\n\r\nStandard benchmark results are performed by passing a large array to the encryption function. Blocked results are from calling the encryption function on a single 0x10-byte AES block at a time.\r\n\r\nSpan:\r\nECB encryption: 5.708 GB/s\r\nECB encryption blocked: 775.686 MB/s\r\n\r\nArray:\r\nECB encryption: 4.549 GB/s\r\nECB encryption blocked: 799.295 MB/s\r\n\r\n```\r\nprivate Vector128<byte>[] RoundKeys { get; }\r\n\r\npublic void EncryptAesEcb(Span<byte> data)\r\n{\r\n    Span<Vector128<byte>> keys = RoundKeys;\r\n    Span<Vector128<byte>> blocks = MemoryMarshal.Cast<byte, Vector128<byte>>(data);\r\n\r\n    for (int i = 0; i < blocks.Length; i++)\r\n    {\r\n        Vector128<byte> b = blocks[i];\r\n\r\n        b = Sse2.Xor(b, keys[0]);\r\n        b = Aes.Encrypt(b, keys[1]);\r\n        b = Aes.Encrypt(b, keys[2]);\r\n        b = Aes.Encrypt(b, keys[3]);\r\n        b = Aes.Encrypt(b, keys[4]);\r\n        b = Aes.Encrypt(b, keys[5]);\r\n        b = Aes.Encrypt(b, keys[6]);\r\n        b = Aes.Encrypt(b, keys[7]);\r\n        b = Aes.Encrypt(b, keys[8]);\r\n        b = Aes.Encrypt(b, keys[9]);\r\n        b = Aes.EncryptLast(b, keys[10]);\r\n\r\n        blocks[i] = b;\r\n    }\r\n}\r\n```\r\n\r\nReplace `Span<Vector128<byte>> keys = RoundKeys;` with `Vector128<byte>[] keys = RoundKeys;` to get the second set of results.\r\n\r\nIn addition to that, inserting the line `Vector128<byte> key10 = keys[10];` somewhere before the loop gives the performance:\r\nECB encryption: 5.833 GB/s\r\nECB encryption blocked: 802.582 MB/s\r\n\r\nHere's the complete code and JIT output:\r\n<details><summary>Span</summary>\r\n\r\n```\r\nECB encryption: 5.708 GB/s\r\nECB encryption blocked: 775.686 MB/s\r\nECB decryption: 5.394 GB/s\r\nECB decryption blocked: 765.59 MB/s\r\n\r\npublic void EncryptEcb(Span<byte> data)\r\n{\r\n\tSpan<Vector128<byte>> keys = RoundKeys;\r\n\tSpan<Vector128<byte>> blocks = MemoryMarshal.Cast<byte, Vector128<byte>>(data);\r\n\r\n\tfor (int i = 0; i < blocks.Length; i++)\r\n\t{\r\n\t\tVector128<byte> b = blocks[i];\r\n\r\n\t\tb = Sse2.Xor(b, keys[0]);\r\n\t\tb = Aes.Encrypt(b, keys[1]);\r\n\t\tb = Aes.Encrypt(b, keys[2]);\r\n\t\tb = Aes.Encrypt(b, keys[3]);\r\n\t\tb = Aes.Encrypt(b, keys[4]);\r\n\t\tb = Aes.Encrypt(b, keys[5]);\r\n\t\tb = Aes.Encrypt(b, keys[6]);\r\n\t\tb = Aes.Encrypt(b, keys[7]);\r\n\t\tb = Aes.Encrypt(b, keys[8]);\r\n\t\tb = Aes.Encrypt(b, keys[9]);\r\n\t\tb = Aes.EncryptLast(b, keys[10]);\r\n\r\n\t\tblocks[i] = b;\r\n\t}\r\n}\r\n\r\n\r\n; Assembly listing for method AesContext:EncryptEcb(struct):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Windows\r\n; optimized code\r\n; rsp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00,T08] (  3,  3   )     ref  ->  rcx         this class-hnd\r\n;  V01 arg1         [V01,T05] (  4,  8   )   byref  ->  rdx        \r\n;* V02 loc0         [V02    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op\r\n;* V03 loc1         [V03    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op\r\n;  V04 loc2         [V04,T01] (  5, 17   )     int  ->   r9        \r\n;  V05 loc3         [V05,T00] ( 24, 96   )  simd16  ->  mm0        \r\n;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   \"OutgoingArgSpace\"\r\n;  V07 tmp1         [V07,T06] (  4,  6   )     ref  ->  rax         class-hnd \"Inlining Arg\"\r\n;* V08 tmp2         [V08    ] (  0,  0   )  struct (16) zero-ref    \"NewObj constructor temp\"\r\n;* V09 tmp3         [V09    ] (  0,  0   )  simd16  ->  zero-ref    ld-addr-op \"Inline ldloca(s) first use temp\"\r\n;* V10 tmp4         [V10    ] (  0,  0   )  struct ( 8) zero-ref    \"NewObj constructor temp\"\r\n;  V11 tmp5         [V11,T23] (  2,  2   )   byref  ->  rcx         \"Inlining Arg\"\r\n;* V12 tmp6         [V12,T32] (  0,  0   )     int  ->  zero-ref    \"Inline stloc first use temp\"\r\n;* V13 tmp7         [V13,T33] (  0,  0   )     int  ->  zero-ref    \"Inline stloc first use temp\"\r\n;* V14 tmp8         [V14    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op \"Inlining Arg\"\r\n;  V15 tmp9         [V15,T27] (  2,  2   )     int  ->  rdx         \"Inline stloc first use temp\"\r\n;* V16 tmp10        [V16    ] (  0,  0   )    long  ->  zero-ref    \"Inline stloc first use temp\"\r\n;  V17 tmp11        [V17,T28] (  2,  2   )     int  ->  rdx         \"Inline stloc first use temp\"\r\n;* V18 tmp12        [V18    ] (  0,  0   )  struct (16) zero-ref    \"NewObj constructor temp\"\r\n;* V19 tmp13        [V19    ] (  0,  0   )   byref  ->  zero-ref    \"Inlining Arg\"\r\n;* V20 tmp14        [V20    ] (  0,  0   )  struct ( 8) zero-ref    \"NewObj constructor temp\"\r\n;* V21 tmp15        [V21    ] (  0,  0   )   byref  ->  zero-ref    V35._pointer(offs=0x00) P-INDEP \"field V01._pointer (fldOffset=0x0)\"\r\n;* V22 tmp16        [V22    ] (  0,  0   )     int  ->  zero-ref    V35._length(offs=0x08) P-INDEP \"field V01._length (fldOffset=0x8)\"\r\n;  V23 tmp17        [V23,T02] ( 12, 12   )   byref  ->  rcx         V02._pointer(offs=0x00) P-INDEP \"field V02._pointer (fldOffset=0x0)\"\r\n;  V24 tmp18        [V24,T03] ( 12, 12   )     int  ->   r8         V02._length(offs=0x08) P-INDEP \"field V02._length (fldOffset=0x8)\"\r\n;  V25 tmp19        [V25,T09] (  2,  5   )   byref  ->  rax         V03._pointer(offs=0x00) P-INDEP \"field V03._pointer (fldOffset=0x0)\"\r\n;  V26 tmp20        [V26,T07] (  3,  6   )     int  ->  rdx         V03._length(offs=0x08) P-INDEP \"field V03._length (fldOffset=0x8)\"\r\n;  V27 tmp21        [V27,T21] (  3,  2   )   byref  ->  rcx         V08._pointer(offs=0x00) P-INDEP \"field V08._pointer (fldOffset=0x0)\"\r\n;  V28 tmp22        [V28,T22] (  3,  2   )     int  ->   r8         V08._length(offs=0x08) P-INDEP \"field V08._length (fldOffset=0x8)\"\r\n;  V29 tmp23        [V29,T31] (  2,  1   )   byref  ->  rcx         V10._value(offs=0x00) P-INDEP \"field V10._value (fldOffset=0x0)\"\r\n;  V30 tmp24        [V30,T24] (  2,  2   )   byref  ->  rax         V14._pointer(offs=0x00) P-INDEP \"field V14._pointer (fldOffset=0x0)\"\r\n;  V31 tmp25        [V31,T29] (  2,  2   )     int  ->  rdx         V14._length(offs=0x08) P-INDEP \"field V14._length (fldOffset=0x8)\"\r\n;  V32 tmp26        [V32,T25] (  2,  2   )   byref  ->  rax         V18._pointer(offs=0x00) P-INDEP \"field V18._pointer (fldOffset=0x0)\"\r\n;  V33 tmp27        [V33,T30] (  2,  2   )     int  ->  rdx         V18._length(offs=0x08) P-INDEP \"field V18._length (fldOffset=0x8)\"\r\n;  V34 tmp28        [V34,T26] (  2,  2   )   byref  ->  rax         V20._value(offs=0x00) P-INDEP \"field V20._value (fldOffset=0x0)\"\r\n;* V35 tmp29        [V35    ] (  0,  0   )  struct (16) zero-ref    \"Promoted implicit byref\"\r\n;  V36 cse0         [V36,T10] (  2,  5   )   byref  ->  r11         \"ValNumCSE\"\r\n;  V37 cse1         [V37,T11] (  2,  5   )   byref  ->  rsi         \"ValNumCSE\"\r\n;  V38 cse2         [V38,T12] (  2,  5   )   byref  ->  rdi         \"ValNumCSE\"\r\n;  V39 cse3         [V39,T13] (  2,  5   )   byref  ->  rbx         \"ValNumCSE\"\r\n;  V40 cse4         [V40,T14] (  2,  5   )   byref  ->  rbp         \"ValNumCSE\"\r\n;  V41 cse5         [V41,T15] (  2,  5   )   byref  ->  r14         \"ValNumCSE\"\r\n;  V42 cse6         [V42,T16] (  2,  5   )   byref  ->  r15         \"ValNumCSE\"\r\n;  V43 cse7         [V43,T17] (  2,  5   )   byref  ->  r12         \"ValNumCSE\"\r\n;  V44 cse8         [V44,T18] (  2,  5   )   byref  ->  r13         \"ValNumCSE\"\r\n;  V45 cse9         [V45,T19] (  2,  5   )   byref  ->  rcx         \"ValNumCSE\"\r\n;  V46 cse10        [V46,T20] (  2,  5   )   byref  ->  r10         \"ValNumCSE\"\r\n;  V47 cse11        [V47,T04] (  3, 12   )   byref  ->   r8         \"ValNumCSE\"\r\n;* V48 cse12        [V48    ] (  0,  0   )    long  ->  zero-ref    \"ValNumCSE\"\r\n;\r\n; Lcl frame size = 40\r\n\r\nG_M18346_IG02:\r\n       mov      rax, gword ptr [rcx+8]\r\n       test     rax, rax\r\n       jne      SHORT G_M18346_IG03\r\n       xor      rcx, rcx\r\n       xor      r8d, r8d\r\n       jmp      SHORT G_M18346_IG04\r\n\r\nG_M18346_IG03:\r\n       lea      rcx, bword ptr [rax+16]\r\n       mov      r8d, dword ptr [rax+8]\r\n\r\nG_M18346_IG04:\r\n       mov      rax, bword ptr [rdx]\r\n       mov      edx, dword ptr [rdx+8]\r\n       shr      edx, 4\r\n       xor      r9d, r9d\r\n       test     edx, edx\r\n       jle      G_M18346_IG06\r\n       cmp      r8d, 0\r\n       jbe      G_M18346_IG08\r\n       mov      r10, rcx\r\n       cmp      r8d, 1\r\n       jbe      G_M18346_IG08\r\n       lea      r11, bword ptr [rcx+16]\r\n       cmp      r8d, 2\r\n       jbe      G_M18346_IG08\r\n       lea      rsi, bword ptr [rcx+32]\r\n       cmp      r8d, 3\r\n       jbe      G_M18346_IG08\r\n       lea      rdi, bword ptr [rcx+48]\r\n       cmp      r8d, 4\r\n       jbe      G_M18346_IG08\r\n       lea      rbx, bword ptr [rcx+64]\r\n       cmp      r8d, 5\r\n       jbe      G_M18346_IG08\r\n       lea      rbp, bword ptr [rcx+80]\r\n       cmp      r8d, 6\r\n       jbe      G_M18346_IG08\r\n       lea      r14, bword ptr [rcx+96]\r\n       cmp      r8d, 7\r\n       jbe      G_M18346_IG08\r\n       lea      r15, bword ptr [rcx+112]\r\n       cmp      r8d, 8\r\n       jbe      G_M18346_IG08\r\n       lea      r12, bword ptr [rcx+128]\r\n       cmp      r8d, 9\r\n       jbe      G_M18346_IG08\r\n       lea      r13, bword ptr [rcx+144]\r\n       cmp      r8d, 10\r\n       jbe      SHORT G_M18346_IG08\r\n       add      rcx, 160\r\n\r\nG_M18346_IG05:\r\n       movsxd   r8, r9d\r\n       shl      r8, 4\r\n       add      r8, rax\r\n       vmovupd  xmm0, xmmword ptr [r8]\r\n       vpxor    xmm0, xmm0, xmmword ptr [r10]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [r11]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rsi]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rdi]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rbx]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rbp]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [r14]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [r15]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [r12]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [r13]\r\n       vaesenclast xmm0, xmm0, xmmword ptr [rcx]\r\n       vmovupd  xmmword ptr [r8], xmm0\r\n       inc      r9d\r\n       cmp      r9d, edx\r\n       jl       SHORT G_M18346_IG05\r\n\r\nG_M18346_IG06:\r\n       add      rsp, 40\r\n       pop      rbx\r\n       pop      rbp\r\n       pop      rsi\r\n       pop      rdi\r\n       pop      r12\r\n       pop      r13\r\n       pop      r14\r\n       pop      r15\r\n       ret      \r\n\r\nG_M18346_IG07:\r\n       call     CORINFO_HELP_OVERFLOW\r\n       int3     \r\n\r\n; Total bytes of code 336, prolog size 19 for method AesContext:EncryptEcb(struct):this\r\n; ============================================================\r\n```\r\n</details>\r\n\r\n<details><summary>Array</summary>\r\n\r\n```\r\nECB encryption: 4.549 GB/s\r\nECB encryption blocked: 799.295 MB/s\r\nECB decryption: 5.416 GB/s\r\nECB decryption blocked: 800.834 MB/s\r\n\r\npublic void EncryptEcb(Span<byte> data)\r\n{\r\n\tVector128<byte>[] keys = RoundKeys;\r\n\tSpan<Vector128<byte>> blocks = MemoryMarshal.Cast<byte, Vector128<byte>>(data);\r\n\r\n\tfor (int i = 0; i < blocks.Length; i++)\r\n\t{\r\n\t\tVector128<byte> b = blocks[i];\r\n\r\n\t\tb = Sse2.Xor(b, keys[0]);\r\n\t\tb = Aes.Encrypt(b, keys[1]);\r\n\t\tb = Aes.Encrypt(b, keys[2]);\r\n\t\tb = Aes.Encrypt(b, keys[3]);\r\n\t\tb = Aes.Encrypt(b, keys[4]);\r\n\t\tb = Aes.Encrypt(b, keys[5]);\r\n\t\tb = Aes.Encrypt(b, keys[6]);\r\n\t\tb = Aes.Encrypt(b, keys[7]);\r\n\t\tb = Aes.Encrypt(b, keys[8]);\r\n\t\tb = Aes.Encrypt(b, keys[9]);\r\n\t\tb = Aes.EncryptLast(b, keys[10]);\r\n\r\n\t\tblocks[i] = b;\r\n\t}\r\n}\r\n\r\n\r\n; Assembly listing for method AesContext:EncryptEcb(struct):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Windows\r\n; optimized code\r\n; rsp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00,T07] (  3,  3   )     ref  ->  rcx         this class-hnd\r\n;  V01 arg1         [V01,T05] (  4,  8   )   byref  ->  rdx        \r\n;  V02 loc0         [V02,T01] ( 13, 46   )     ref  ->  rax         class-hnd\r\n;* V03 loc1         [V03    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op\r\n;  V04 loc2         [V04,T03] (  5, 17   )     int  ->   r8        \r\n;  V05 loc3         [V05,T00] ( 24, 96   )  simd16  ->  mm0        \r\n;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   \"OutgoingArgSpace\"\r\n;* V07 tmp1         [V07,T16] (  0,  0   )     int  ->  zero-ref    \"Inline stloc first use temp\"\r\n;* V08 tmp2         [V08,T17] (  0,  0   )     int  ->  zero-ref    \"Inline stloc first use temp\"\r\n;* V09 tmp3         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op \"Inlining Arg\"\r\n;  V10 tmp4         [V10,T12] (  2,  2   )     int  ->  rdx         \"Inline stloc first use temp\"\r\n;* V11 tmp5         [V11    ] (  0,  0   )    long  ->  zero-ref    \"Inline stloc first use temp\"\r\n;  V12 tmp6         [V12,T13] (  2,  2   )     int  ->  rdx         \"Inline stloc first use temp\"\r\n;* V13 tmp7         [V13    ] (  0,  0   )  struct (16) zero-ref    \"NewObj constructor temp\"\r\n;* V14 tmp8         [V14    ] (  0,  0   )   byref  ->  zero-ref    \"Inlining Arg\"\r\n;* V15 tmp9         [V15    ] (  0,  0   )  struct ( 8) zero-ref    \"NewObj constructor temp\"\r\n;* V16 tmp10        [V16    ] (  0,  0   )   byref  ->  zero-ref    V25._pointer(offs=0x00) P-INDEP \"field V01._pointer (fldOffset=0x0)\"\r\n;* V17 tmp11        [V17    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP \"field V01._length (fldOffset=0x8)\"\r\n;  V18 tmp12        [V18,T08] (  2,  5   )   byref  ->  rcx         V03._pointer(offs=0x00) P-INDEP \"field V03._pointer (fldOffset=0x0)\"\r\n;  V19 tmp13        [V19,T06] (  3,  6   )     int  ->  rdx         V03._length(offs=0x08) P-INDEP \"field V03._length (fldOffset=0x8)\"\r\n;  V20 tmp14        [V20,T09] (  2,  2   )   byref  ->  rcx         V09._pointer(offs=0x00) P-INDEP \"field V09._pointer (fldOffset=0x0)\"\r\n;  V21 tmp15        [V21,T14] (  2,  2   )     int  ->  rdx         V09._length(offs=0x08) P-INDEP \"field V09._length (fldOffset=0x8)\"\r\n;  V22 tmp16        [V22,T10] (  2,  2   )   byref  ->  rcx         V13._pointer(offs=0x00) P-INDEP \"field V13._pointer (fldOffset=0x0)\"\r\n;  V23 tmp17        [V23,T15] (  2,  2   )     int  ->  rdx         V13._length(offs=0x08) P-INDEP \"field V13._length (fldOffset=0x8)\"\r\n;  V24 tmp18        [V24,T11] (  2,  2   )   byref  ->  rcx         V15._value(offs=0x00) P-INDEP \"field V15._value (fldOffset=0x0)\"\r\n;* V25 tmp19        [V25    ] (  0,  0   )  struct (16) zero-ref    \"Promoted implicit byref\"\r\n;  V26 cse0         [V26,T04] (  3, 12   )   byref  ->  r10         \"ValNumCSE\"\r\n;* V27 cse1         [V27    ] (  0,  0   )    long  ->  zero-ref    \"ValNumCSE\"\r\n;  V28 cse2         [V28,T02] ( 12, 45   )     int  ->   r9         \"ValNumCSE\"\r\n;\r\n; Lcl frame size = 40\r\n\r\nG_M18342_IG02:\r\n       mov      rax, gword ptr [rcx+8]\r\n       mov      rcx, bword ptr [rdx]\r\n       mov      edx, dword ptr [rdx+8]\r\n       shr      edx, 4\r\n       xor      r8d, r8d\r\n       test     edx, edx\r\n       jle      G_M18342_IG04\r\n       mov      r9d, dword ptr [rax+8]\r\n\r\nG_M18342_IG03:\r\n       movsxd   r10, r8d\r\n       shl      r10, 4\r\n       add      r10, rcx\r\n       vmovupd  xmm0, xmmword ptr [r10]\r\n       cmp      r9d, 0\r\n       jbe      G_M18342_IG06\r\n       vpxor    xmm0, xmm0, xmmword ptr [rax+16]\r\n       cmp      r9d, 1\r\n       jbe      G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+32]\r\n       cmp      r9d, 2\r\n       jbe      G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+48]\r\n       cmp      r9d, 3\r\n       jbe      G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+64]\r\n       cmp      r9d, 4\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+80]\r\n       cmp      r9d, 5\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+96]\r\n       cmp      r9d, 6\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+112]\r\n       cmp      r9d, 7\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+128]\r\n       cmp      r9d, 8\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+144]\r\n       cmp      r9d, 9\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+160]\r\n       cmp      r9d, 10\r\n       jbe      SHORT G_M18342_IG06\r\n       vaesenclast xmm0, xmm0, xmmword ptr [rax+176]\r\n       vmovupd  xmmword ptr [r10], xmm0\r\n       inc      r8d\r\n       cmp      r8d, edx\r\n       jl       G_M18342_IG03\r\n\r\nG_M18342_IG04:\r\n       add      rsp, 40\r\n       ret      \r\n\r\nG_M18342_IG05:\r\n       call     CORINFO_HELP_OVERFLOW\r\n       int3     \r\n\r\n; Total bytes of code 243, prolog size 7 for method AesContext:EncryptEcb(struct):this\r\n; ============================================================\r\n```\r\n</details>\r\n\r\n<details><summary>Array with early access</summary>\r\n\r\n```\r\nECB encryption: 5.833 GB/s\r\nECB encryption blocked: 802.582 MB/s\r\nECB decryption: 5.74 GB/s\r\nECB decryption blocked: 802.291 MB/s\r\n\r\npublic void EncryptEcb(Span<byte> data)\r\n{\r\n\tVector128<byte>[] keys = RoundKeys;\r\n\tSpan<Vector128<byte>> blocks = MemoryMarshal.Cast<byte, Vector128<byte>>(data);\r\n\r\n\t// Makes the JIT remove all the other range checks on keys\r\n\tVector128<byte> key10 = keys[10];\r\n\r\n\tfor (int i = 0; i < blocks.Length; i++)\r\n\t{\r\n\t\tVector128<byte> b = blocks[i];\r\n\r\n\t\tb = Sse2.Xor(b, keys[0]);\r\n\t\tb = Aes.Encrypt(b, keys[1]);\r\n\t\tb = Aes.Encrypt(b, keys[2]);\r\n\t\tb = Aes.Encrypt(b, keys[3]);\r\n\t\tb = Aes.Encrypt(b, keys[4]);\r\n\t\tb = Aes.Encrypt(b, keys[5]);\r\n\t\tb = Aes.Encrypt(b, keys[6]);\r\n\t\tb = Aes.Encrypt(b, keys[7]);\r\n\t\tb = Aes.Encrypt(b, keys[8]);\r\n\t\tb = Aes.Encrypt(b, keys[9]);\r\n\t\tb = Aes.EncryptLast(b, keys[10]);\r\n\r\n\t\tblocks[i] = b;\r\n\t}\r\n}\r\n\r\n\r\n; Assembly listing for method AesContext:EncryptEcb(struct):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Windows\r\n; optimized code\r\n; rsp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00,T06] (  3,  3   )     ref  ->  rcx         this class-hnd\r\n;  V01 arg1         [V01,T04] (  4,  8   )   byref  ->  rdx        \r\n;  V02 loc0         [V02,T01] ( 13, 46   )     ref  ->  rax         class-hnd\r\n;* V03 loc1         [V03    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op\r\n;  V04 loc2         [V04,T02] (  5, 17   )     int  ->   r8        \r\n;  V05 loc3         [V05,T00] ( 24, 96   )  simd16  ->  mm0        \r\n;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   \"OutgoingArgSpace\"\r\n;* V07 tmp1         [V07,T16] (  0,  0   )     int  ->  zero-ref    \"Inline stloc first use temp\"\r\n;* V08 tmp2         [V08,T17] (  0,  0   )     int  ->  zero-ref    \"Inline stloc first use temp\"\r\n;* V09 tmp3         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op \"Inlining Arg\"\r\n;  V10 tmp4         [V10,T11] (  2,  2   )     int  ->  rdx         \"Inline stloc first use temp\"\r\n;* V11 tmp5         [V11    ] (  0,  0   )    long  ->  zero-ref    \"Inline stloc first use temp\"\r\n;  V12 tmp6         [V12,T12] (  2,  2   )     int  ->  rdx         \"Inline stloc first use temp\"\r\n;* V13 tmp7         [V13    ] (  0,  0   )  struct (16) zero-ref    \"NewObj constructor temp\"\r\n;* V14 tmp8         [V14    ] (  0,  0   )   byref  ->  zero-ref    \"Inlining Arg\"\r\n;* V15 tmp9         [V15    ] (  0,  0   )  struct ( 8) zero-ref    \"NewObj constructor temp\"\r\n;* V16 tmp10        [V16    ] (  0,  0   )   byref  ->  zero-ref    V25._pointer(offs=0x00) P-INDEP \"field V01._pointer (fldOffset=0x0)\"\r\n;* V17 tmp11        [V17    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP \"field V01._length (fldOffset=0x8)\"\r\n;  V18 tmp12        [V18,T07] (  2,  5   )   byref  ->  rcx         V03._pointer(offs=0x00) P-INDEP \"field V03._pointer (fldOffset=0x0)\"\r\n;  V19 tmp13        [V19,T05] (  3,  6   )     int  ->  rdx         V03._length(offs=0x08) P-INDEP \"field V03._length (fldOffset=0x8)\"\r\n;  V20 tmp14        [V20,T08] (  2,  2   )   byref  ->  rcx         V09._pointer(offs=0x00) P-INDEP \"field V09._pointer (fldOffset=0x0)\"\r\n;  V21 tmp15        [V21,T13] (  2,  2   )     int  ->  rdx         V09._length(offs=0x08) P-INDEP \"field V09._length (fldOffset=0x8)\"\r\n;  V22 tmp16        [V22,T09] (  2,  2   )   byref  ->  rcx         V13._pointer(offs=0x00) P-INDEP \"field V13._pointer (fldOffset=0x0)\"\r\n;  V23 tmp17        [V23,T14] (  2,  2   )     int  ->  rdx         V13._length(offs=0x08) P-INDEP \"field V13._length (fldOffset=0x8)\"\r\n;  V24 tmp18        [V24,T10] (  2,  2   )   byref  ->  rcx         V15._value(offs=0x00) P-INDEP \"field V15._value (fldOffset=0x0)\"\r\n;* V25 tmp19        [V25    ] (  0,  0   )  struct (16) zero-ref    \"Promoted implicit byref\"\r\n;  V26 cse0         [V26,T03] (  3, 12   )   byref  ->   r9         \"ValNumCSE\"\r\n;* V27 cse1         [V27    ] (  0,  0   )    long  ->  zero-ref    \"ValNumCSE\"\r\n;  V28 cse2         [V28,T15] (  2,  2   )     int  ->   r8         \"ValNumCSE\"\r\n;\r\n; Lcl frame size = 40\r\n\r\nG_M18342_IG02:\r\n       mov      rax, gword ptr [rcx+8]\r\n       mov      rcx, bword ptr [rdx]\r\n       mov      edx, dword ptr [rdx+8]\r\n       shr      edx, 4\r\n       mov      r8d, dword ptr [rax+8]\r\n       cmp      r8d, 10\r\n       jbe      G_M18342_IG06\r\n       xor      r8d, r8d\r\n       test     edx, edx\r\n       jle      SHORT G_M18342_IG04\r\n\r\nG_M18342_IG03:\r\n       movsxd   r9, r8d\r\n       shl      r9, 4\r\n       add      r9, rcx\r\n       vmovupd  xmm0, xmmword ptr [r9]\r\n       vpxor    xmm0, xmm0, xmmword ptr [rax+16]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+32]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+48]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+64]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+80]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+96]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+112]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+128]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+144]\r\n       vaesenc  xmm0, xmm0, xmmword ptr [rax+160]\r\n       vaesenclast xmm0, xmm0, xmmword ptr [rax+176]\r\n       vmovupd  xmmword ptr [r9], xmm0\r\n       inc      r8d\r\n       cmp      r8d, edx\r\n       jl       SHORT G_M18342_IG03\r\n\r\nG_M18342_IG04:\r\n       add      rsp, 40\r\n       ret      \r\n\r\nG_M18342_IG05:\r\n       call     CORINFO_HELP_OVERFLOW\r\n       int3     \r\n\r\n; Total bytes of code 163, prolog size 7 for method AesContext:EncryptEcb(struct):this\r\n; ============================================================\r\n```\r\n</details>\r\n\r\nIn the last example the JIT omits the range checks for all subsequent array accesses. Getting a 25% speedup from inserting a functionally useless line may be unintuitive to those unfamiliar with the language.\r\n\r\nOn the other hand, if the compiled code automatically checked the entire range beforehand, it might change the code's behavior if an invalid access was attempted. It would also be difficult to prove that only doing one range check would result in functionally equivalent code.","Url":"https://github.com/dotnet/coreclr/issues/24158","RelatedDescription":"Open issue \"JIT: Suboptimal codegen when using array instead of span\" (#24158)"},{"Id":"435558448","IsPullRequest":true,"CreatedAt":"2019-04-21T23:36:40","Actor":"sdmaclea","Number":"24157","RawContent":null,"Title":"Reenable tests","State":"open","Body":"Reenable tests when bits from dotnet/corefx#37071 & dotnet/corefx#37080 are available in coreclr","Url":"https://github.com/dotnet/coreclr/pull/24157","RelatedDescription":"Open PR \"Reenable tests\" (#24157)"},{"Id":"435558182","IsPullRequest":true,"CreatedAt":"2019-04-21T23:32:43","Actor":"mjsabby","Number":"24156","RawContent":null,"Title":"Add ICorProfilerInfo::GetObjectReferences","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/24155","Url":"https://github.com/dotnet/coreclr/pull/24156","RelatedDescription":"Open PR \"Add ICorProfilerInfo::GetObjectReferences\" (#24156)"},{"Id":"435558113","IsPullRequest":false,"CreatedAt":"2019-04-21T23:31:48","Actor":"mjsabby","Number":"24155","RawContent":null,"Title":"Add Profiler API : GetObjectReferences","State":"open","Body":"The Profiler API today has [ICorProfilerCallback::ObjectReferences](https://docs.microsoft.com/en-us/dotnet/framework/unmanaged-api/profiling/icorprofilercallback-objectreferences-method) which is called after a GC is completed. This is called for remaining object in the heap.\r\n\r\nFor large heaps and/or heaps with moderate survival rate this can be prohibitively expensive to enable in a production environment.\r\n\r\nIn conjuction with https://github.com/dotnet/coreclr/issues/24132, this API can be used to selectively traverse object graphs. In fact, with this API you could implement the aforementioned expensive callback that already exists in the profiling API. So this customization is a welcome addition to the Profiler API.\r\n\r\nThe signature would be:\r\n\r\n`GetObjectReferences(ObjectID objectId, ULONG32 cNumReferences, ULONG32 *pcNumReferences, ObjectID references[])`\r\n\r\nPassing 0 for `cNumReferences` will fill do a traversal for this object and fill up `pcNumReferences`. A subsequent call with the `cNumReferences` parameter set to the value returned in the first call (`pcNumReferences`) will expect an appropriately allocated array of `ObjectID`s to fill the data in.\r\n\r\nA point of discussion could be if field offsets should be included. I'm of the opinion they are superflous for most object graph traversals.","Url":"https://github.com/dotnet/coreclr/issues/24155","RelatedDescription":"Open issue \"Add Profiler API : GetObjectReferences\" (#24155)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"435320623","IsPullRequest":false,"CreatedAt":"2019-04-23T01:18:39","Actor":"dagood","Number":"11214","RawContent":null,"Title":"Sentinel and cache files not removed when uninstalling .NET Core SDK","State":"closed","Body":"@scottaddie commented on [Fri Apr 19 2019](https://github.com/dotnet/core-setup/issues/5946)\n\n## Steps to reproduce\r\n1. Uninstall the .NET Core SDK via Win10's Control Panel:\r\n\r\n![image](https://user-images.githubusercontent.com/10702007/56444142-2a540080-62bd-11e9-8cf6-d151044d78b8.png)\r\n\r\n2. Navigate to the _%USERPROFILE%/.dotnet_ directory. Notice that _sentinel_ and _*.dotnetUserLevelCache_ files are left behind. The following screenshot shows the files are left behind after uninstalling .NET Core SDK 2.2.104:\r\n\r\n![image](https://user-images.githubusercontent.com/10702007/56444039-b3b70300-62bc-11e9-937b-727badeaf062.png)\r\n\r\n## Expected  behavior\r\nThe version-specific files depicted in the screenshot above should be deleted.\r\n\r\n## Actual behavior\r\nThe version-specific files depicted in the screenshot above aren't deleted.\r\n\r\n## Environment data\r\nWin10 v1809\n\n---\n\n@dagood commented on [Fri Apr 19 2019](https://github.com/dotnet/core-setup/issues/5946#issuecomment-485028320)\n\nThe SDK installer is created in https://github.com/dotnet/core-sdk, but these files look to me like they're created during SDK usage (or first run) rather than placed directly by the installer. Moving to https://github.com/dotnet/cli with that in mind.\n\n","Url":"https://github.com/dotnet/cli/issues/11214","RelatedDescription":"Closed issue \"Sentinel and cache files not removed when uninstalling .NET Core SDK\" (#11214)"},{"Id":"435881727","IsPullRequest":false,"CreatedAt":"2019-04-23T01:06:08","Actor":"jkears","Number":"11230","RawContent":null,"Title":"DotNet New -n is not renaming custom template","State":"closed","Body":"## Steps to reproduce\r\n1. In a folder D:\\\\ProjectTemplates\\SomeCo.DomainTemplate.CSharp copy in a working c# class library project and rename it to **DomainTemplate.csproj**\r\n2. Add new subfolder in project root folder called .**template.config**\r\n3. Create a new **template.json** file in the .template.config folder with the following content ...\r\n{\r\n    \"$schema\": \"http://json.schemastore.org/template\",\r\n    \"author\": \"Me\",\r\n    \"classifications\": [ \"Domain\", \"Class Library\"],\r\n    \"identity\": \"SomeCo.DomainTemplate.CSharp\",\r\n    \"name\": \"SomeCo Domain Class Library\",\r\n    \"shortName\": \"scdomain\",\r\n    \"sourceName\": \"SomeCo.DomainTemplate\",      \r\n    \"preferNameDirectory\" : true\r\n   \r\n}\r\n\r\n4. Install template as follows\r\n**dotnet new -i D:\\ProjectTemplates\\SomeCo\\DomainTemplate\\CSharp**\r\nverify custom template is installed\r\n\r\n5. Create new project in a known empty folder\r\n**dotnet new scdomain --name domaina -o domaina** \r\n\r\n## Expected  behavior\r\nThat a new subfolder is created called domaina containing my custom template was created and renamed to domaina.csproj\r\n\r\n## Actual behavior\r\nA new subfolder is created called domaina and although the csproj that my custom template was created based upon is there it has the name of the project that my template had, in my case  DomainTemplate.csproj\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11230","RelatedDescription":"Closed issue \"DotNet New -n is not renaming custom template\" (#11230)"},{"Id":"435938436","IsPullRequest":false,"CreatedAt":"2019-04-22T23:51:18","Actor":"richlander","Number":"11232","RawContent":null,"Title":"Enable CLI config to disable preview warnings","State":"open","Body":"I'd love a config setting that disables the preview warnings. I use previews 99% of the time, and would love cleaner CLI spew ... it's a lot of text!\r\n\r\n```console\r\n/usr/local/share/dotnet/sdk/3.0.100-preview4-011222/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/Users/rich/git/sudoku-solver/src/sudoku-solver/sudoku-solver.csproj]\r\n```","Url":"https://github.com/dotnet/cli/issues/11232","RelatedDescription":"Open issue \"Enable CLI config to disable preview warnings\" (#11232)"},{"Id":"435917356","IsPullRequest":false,"CreatedAt":"2019-04-22T22:25:13","Actor":"danmosemsft","Number":"11231","RawContent":null,"Title":"macOS Startup System.ComponentModel.Win32Exception (13): Permission denied","State":"open","Body":"@tn-5 commented on [Sat Apr 20 2019](https://github.com/dotnet/coreclr/issues/24146)\n\nWith the latest nightly build of netcore 3 (3.0.100-preview5-011505) it is not possible to run a net core application on macos, it give an exception on startup:\r\nSystem.ComponentModel.Win32Exception (13): Permission denied\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\n\n---\n\n@danmosemsft commented on [Mon Apr 22 2019](https://github.com/dotnet/coreclr/issues/24146#issuecomment-485573014)\n\nBased on the linked issue, this seems to depend on install location. I'm pretty sure this isn't runtime. May not be CLI either but moving there seems a better bet.\n\n","Url":"https://github.com/dotnet/cli/issues/11231","RelatedDescription":"Open issue \"macOS Startup System.ComponentModel.Win32Exception (13): Permission denied\" (#11231)"},{"Id":"435597966","IsPullRequest":true,"CreatedAt":"2019-04-22T20:35:46","Actor":"dotnet-maestro[bot]","Number":"11222","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190421.5\r\n- **Date Produced**: 4/22/2019 4:48 AM\r\n- **Commit**: be0d4e5d360eb2fcd526beeca8f0997db02f32a8\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19221.5\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190422.7\r\n- **Date Produced**: 4/22/2019 7:11 PM\r\n- **Commit**: cb764d762acad2d4c79c17e44de79efcbce90bfb\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19222.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11222","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11222)"},{"Id":"435244411","IsPullRequest":true,"CreatedAt":"2019-04-22T19:58:27","Actor":"dotnet-maestro[bot]","Number":"11210","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190419.2\r\n- **Date Produced**: 4/19/2019 5:11 PM\r\n- **Commit**: e854a58b469c2b4a660fc6e448657d1dd8e40ab9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19219.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11210","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11210)"},{"Id":"435866316","IsPullRequest":true,"CreatedAt":"2019-04-22T19:55:43","Actor":"mmitche","Number":"11229","RawContent":null,"Title":"[release/2.2.2xx] Update build name 222","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.2.1xx and 2.2.2xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11229","RelatedDescription":"Open PR \"[release/2.2.2xx] Update build name 222\" (#11229)"},{"Id":"435866155","IsPullRequest":true,"CreatedAt":"2019-04-22T19:55:18","Actor":"mmitche","Number":"11228","RawContent":null,"Title":"[release/2.2.1xx] Update cli build name","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.2.1xx and 2.2.2xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11228","RelatedDescription":"Open PR \"[release/2.2.1xx] Update cli build name\" (#11228)"},{"Id":"435865879","IsPullRequest":true,"CreatedAt":"2019-04-22T19:54:32","Actor":"mmitche","Number":"11227","RawContent":null,"Title":"[release/2.1.6xx] Update cli build name","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.1.5xx and 2.1.6xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11227","RelatedDescription":"Open PR \"[release/2.1.6xx] Update cli build name\" (#11227)"},{"Id":"435865787","IsPullRequest":true,"CreatedAt":"2019-04-22T19:54:17","Actor":"mmitche","Number":"11226","RawContent":null,"Title":"[release/2.1.5xx] Update cli build name","State":"open","Body":"Avoids manifest merge issues since we're now building both 2.1.5xx and 2.1.6xx in parallel in prodcon\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11226","RelatedDescription":"Open PR \"[release/2.1.5xx] Update cli build name\" (#11226)"},{"Id":"435565975","IsPullRequest":true,"CreatedAt":"2019-04-22T18:27:15","Actor":"wli3","Number":"11221","RawContent":null,"Title":"Update branding to preview 6","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11221","RelatedDescription":"Closed or merged PR \"Update branding to preview 6\" (#11221)"},{"Id":"435831669","IsPullRequest":true,"CreatedAt":"2019-04-22T18:24:45","Actor":"dotnet-bot","Number":"11225","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11225","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11225)"},{"Id":"435562158","IsPullRequest":true,"CreatedAt":"2019-04-22T17:51:44","Actor":"wli3","Number":"11220","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11220","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview5\" (#11220)"},{"Id":"435706393","IsPullRequest":true,"CreatedAt":"2019-04-22T12:14:06","Actor":"dotnet-maestro[bot]","Number":"11224","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11224","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11224)"},{"Id":"435630923","IsPullRequest":false,"CreatedAt":"2019-04-22T07:27:44","Actor":"narcis-pv","Number":"11223","RawContent":null,"Title":"Dependent assembly not found when using target manifest file (FDD)","State":"open","Body":"# Local runtime store not used in probing path\r\nAssembly not found in the local runtime store on Windows when using target manifest files. Using COREHOST_TRACE, the runtime **is not** probing store path: `C:\\Program Files\\dotnet\\store`\r\n\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (Project.deps.json) was not found:\r\n    package: 'Swashbuckle.AspNetCore.Swagger', version: '4.0.1'\r\n    path: 'lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    artifact.xml\r\n```\r\n# General\r\n\r\nProject published using manifest file declared in `Project.cspro`j as following:\r\n\r\n`<TargetManifestFiles>artifact.xml</TargetManifestFiles>`\r\n\r\nManifest file `artifact.xml` generated using:\r\n```\r\ndotnet store --manifest project.csproj --framework netcoreapp2.2 --runtime win7-x64 --skip-optimization\r\n```\r\noutput target manifest file:\r\n```\r\n<StoreArtifacts>\r\n  <Package Id=\"Swashbuckle.AspNetCore\" Version=\"4.0.1\" />\r\n  <Package Id=\"Swashbuckle.AspNetCore.Swagger\" Version=\"4.0.1\" />\r\n  <Package Id=\"Swashbuckle.AspNetCore.SwaggerGen\" Version=\"4.0.1\" />\r\n  <Package Id=\"Swashbuckle.AspNetCore.SwaggerUI\" Version=\"4.0.1\" />\r\n</StoreArtifacts>\r\n```\r\nAfter the dotnet publish command executes, in the output folder there is no Swashbuckle.*, correct.\r\n\r\n`Project.deps.json`\r\n```\r\n    \"Swashbuckle.AspNetCore.Swagger/4.0.1\": {\r\n      \"type\": \"package\",\r\n      \"serviceable\": true,\r\n      \"sha512\": \"sha512-rqzS3vHrjz+tR5j0nZOKZyaMTDfLGbVYkwMq205aYuGbsiGwbOlNU0Q8lq4Q0ptQPMKVkUf8XouCIdJ3qpK17w==\",\r\n      \"path\": \"swashbuckle.aspnetcore.swagger/4.0.1\",\r\n      \"hashPath\": \"swashbuckle.aspnetcore.swagger.4.0.1.nupkg.sha512\"\r\n    }\r\n```\r\n\r\nLocal runtime store: `C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.0` contains the packages for Swashbuckle.*\r\n![image](https://user-images.githubusercontent.com/45754576/56345196-d1ef0700-61c7-11e9-8d6b-f78fe3349d13.png)\r\n\r\nTrace using `COREHOST_TRACE=1`\r\n```\r\nProcessing TPA for deps entry [Swashbuckle.AspNetCore.Swagger, 4.0.1, lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll]\r\n  Considering entry [Swashbuckle.AspNetCore.Swagger/4.0.1/lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll], probe dir [], probe fx level:0, entry fx level:0\r\n    Local path query did not exist OUTPUT_FOLDER\\Swashbuckle.AspNetCore.Swagger.dll\r\n    Skipping... not found in deps dir 'OUTPUT_FOLDER\\'\r\n    Skipping... not found in probe dir ''\r\n  Considering entry [Swashbuckle.AspNetCore.Swagger/4.0.1/lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll], probe dir [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\2.2.2], probe fx level:1, entry fx level:0\r\n    Skipping... not found in deps json.\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App\\2.2.2'\r\n  Considering entry [Swashbuckle.AspNetCore.Swagger/4.0.1/lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll], probe dir [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.2.2], probe fx level:2, entry fx level:0\r\n    Skipping... not found in deps json.\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.2.2'\r\nError:\r\n  An assembly specified in the application dependencies manifest (Project.deps.json) was not found:\r\n    package: 'Swashbuckle.AspNetCore.Swagger', version: '4.0.1'\r\n    path: 'lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    artifact.xml\r\n```\r\n\r\nI have also tried to put the packages in `C:\\Users\\%username%\\.dotnet\\store\\x64\\netcoreapp2.2`, same error.\r\n\r\nI even tried setting `DOTNET_PACKAGES_CACHE` described in [this doc in dotnet-cli assembly resolution](https://github.com/dotnet/cli/blob/v2.2.203/Documentation/specs/corehost.md), same error.\r\n\r\n# Expected behavior\r\nApplication starts correctly. \r\nAccording to this [runtime-store](https://docs.microsoft.com/en-us/dotnet/core/deploying/runtime-store) doc, it should load dependecies defined in target manifest files from path: `C:\\Program Files\\dotnet\\store`\r\n\r\n# Actual behavior\r\nError is thrown at application start-up\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (Project.deps.json) was not found:\r\n    package: 'Swashbuckle.AspNetCore.Swagger', version: '4.0.1'\r\n    path: 'lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    artifact.xml\r\n```\r\n\r\n### Reproduction repo\r\nSample repository can be found here: https://github.com/narcis-pv/dotnet-core-target-manifest-bug\r\n\r\n### Other\r\nI have even tried providing a `runtimeconfig.template.json` with `additionalProbingPaths`, still doesn't work, the paths are not used in probe.\r\n\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"additionalProbingPaths\": [\r\n      \"C:\\\\Program Files\\\\dotnet\\\\store\\\\|arch|\\\\|tfm|\",\r\n      \"C:\\\\Program Files\\\\dotnet\\\\store\\\\x64\\\\netcoreapp2.0\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nI've already submitted an issue [here](https://github.com/dotnet/core/issues/2595), on the general dotnet repo, but it might not have been the most aprroapriate place.\r\n\r\n### Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/11223","RelatedDescription":"Open issue \"Dependent assembly not found when using target manifest file (FDD)\" (#11223)"},{"Id":"435160454","IsPullRequest":true,"CreatedAt":"2019-04-22T00:04:48","Actor":"dotnet-maestro[bot]","Number":"11204","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11204)"},{"Id":"435272925","IsPullRequest":true,"CreatedAt":"2019-04-22T00:04:20","Actor":"dotnet-maestro[bot]","Number":"11212","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190419.3\r\n- **Date Produced**: 4/19/2019 6:58 PM\r\n- **Commit**: ffc244d4c158d20fff5fe562255e3061d8be4b82\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19219.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11212","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11212)"},{"Id":"435390877","IsPullRequest":true,"CreatedAt":"2019-04-21T20:49:06","Actor":"dotnet-maestro[bot]","Number":"11217","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190419.11\r\n- **Date Produced**: 4/20/2019 3:55 AM\r\n- **Commit**: e00479998c70a01e9e4a11d3e2aed5e0f5187c86\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19219.11\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190420.1\r\n- **Date Produced**: 4/20/2019 3:07 PM\r\n- **Commit**: 413e8d1ac55ad355429ebf772b6f3b54802be5a3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19220.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11217","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11217)"},{"Id":"435423340","IsPullRequest":false,"CreatedAt":"2019-04-20T17:52:00","Actor":"hamzahamidi","Number":"11219","RawContent":null,"Title":"Dotnet run works only as root","State":"open","Body":"## Steps to reproduce\r\nI was following the official dotnet tutorial https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/create . When I try to run the application ( dotnet run) I get this error:\r\n```\r\nprojects/dotnet-core-starter/dotnet-core-starter.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\n```\r\nsudo dotnet run works as expected!\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n```\r\nprojects/dotnet-core-starter/dotnet-core-starter.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.203\r\n Commit:    e5bab63eca\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.203/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.4\r\n  Commit:  f95848e524\r\n\r\n.NET Core SDKs installed:\r\n  2.2.203 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11219","RelatedDescription":"Open issue \"Dotnet run works only as root\" (#11219)"},{"Id":"435391479","IsPullRequest":true,"CreatedAt":"2019-04-20T12:49:04","Actor":"dotnet-maestro[bot]","Number":"11218","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190419.1\r\n- **Date Produced**: 4/19/2019 12:47 PM\r\n- **Commit**: c01de3fd223affb9f861260f41ebcc12e473a9ad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19219.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11218)"},{"Id":"435390837","IsPullRequest":true,"CreatedAt":"2019-04-20T12:42:16","Actor":"dotnet-maestro[bot]","Number":"11216","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.7\r\n- **Date Produced**: 4/19/2019 12:41 AM\r\n- **Commit**: 5e7ce5b394f3477bb0a485a4b761b7742e95be37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11216)"},{"Id":"435327403","IsPullRequest":true,"CreatedAt":"2019-04-20T02:31:30","Actor":"wli3","Number":"11215","RawContent":null,"Title":"Merge release/3.0.1xx to master 0419","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11215","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master 0419\" (#11215)"},{"Id":"435261169","IsPullRequest":false,"CreatedAt":"2019-04-19T21:49:25","Actor":"spboyer","Number":"11211","RawContent":null,"Title":"Cross platform issue : dotnet pack fails to add item when parent folder name equals file name","State":"closed","Body":"## Steps to reproduce\r\nAdd a folder called `xpath.js` containing a file called `xpath.js` \r\n\r\ni.e - `npm_modules\\xpath.js\\xpath.js`\r\n\r\nrun `dotnet pack -c Release`\r\n\r\n** csproj file snippet **\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <None Include=\"node_modules\\*\\**\" CopyToOutputDirectory=\"PreserveNewest\" CopyToPublishDirectory=\"PreserveNewest\"/>\r\n    <None Include=\"scripts\\**\\*\" CopyToOutputDirectory=\"PreserveNewest\" CopyToPublishDirectory=\"PreserveNewest\" />\r\n  </ItemGroup>\r\n```\r\n\r\n## Expected  behavior\r\n\r\nSuccessfully created package '/.../mypackage.nupkg'.\r\n\r\n## Actual behavior\r\n\r\n```console\r\n   \r\ndotnet pack --configuration Release    \r\n\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/usr/local/share/dotnet/sdk/2.2.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(202,5): \r\nerror NU5118: File '/.../netcoreapp2.2/publish/node_modules/xpath.js/xpath.js'\r\nis not added because the package already contains file 'tools/netcoreapp2.2/any/node_modules/xpath.js' \r\n[/Users/shayneboyer/github/spboyer/dotnet-azure/azure.csproj]\r\n\r\n```\r\n\r\n\r\n## Environment data\r\n\r\n```console\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    51868761f2\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.100/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11211","RelatedDescription":"Closed issue \"Cross platform issue : dotnet pack fails to add item when parent folder name equals file name\" (#11211)"},{"Id":"435304826","IsPullRequest":false,"CreatedAt":"2019-04-19T21:06:41","Actor":"vitek-karas","Number":"11213","RawContent":null,"Title":"Add command line usage help for the new --roll-forward option","State":"open","Body":"The new roll forward feature introduces a new command line option `--roll-forward`. It's implemented by the host, but the command line help is sometimes shown from the code in CLI repo.\r\n\r\nThe feature is added in dotnet/core-setup#5891\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11213","RelatedDescription":"Open issue \"Add command line usage help for the new --roll-forward option\" (#11213)"},{"Id":"435177081","IsPullRequest":false,"CreatedAt":"2019-04-19T18:54:29","Actor":"tonycoelho","Number":"11205","RawContent":null,"Title":"dotnet Release Metadata index doesn't have the correct latest version for 3.0","State":"closed","Body":"The latest 3.0 release listed in the release metadata index json file located at the link below, 3.0.0-preview3-27503-5 (3/6), is not the latest release available, which is 3.0.0-preview4-27615-11 (4/18). Please update the index file to point to the correct latest release.\r\n\r\nhttps://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json\r\n```json\r\n{\r\n  \"releases-index\": [\r\n    {\r\n      \"channel-version\": \"3.0\",\r\n      \"latest-release\": \"3.0.0-preview3\",\r\n      \"latest-release-date\": \"2019-03-06\",\r\n      \"security\": false,\r\n      \"latest-runtime\": \"3.0.0-preview3-27503-5\",\r\n      \"latest-sdk\": \"3.0.100-preview3-010431\",\r\n      \"product\": \".NET Core\",\r\n      \"support-phase\": \"preview\",\r\n      \"eol-date\": null,\r\n      \"releases.json\": \"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/3.0/releases.json\"\r\n    }\r\n  ]\r\n}\r\n```\r\nhttps://dotnetcli.blob.core.windows.net/dotnet/release-metadata/3.0/releases.json\r\n```json\r\n{\r\n  \"channel-version\": \"3.0\",\r\n  \"latest-release\": \"3.0.0-preview4\",\r\n  \"latest-release-date\": \"2019-04-18\",\r\n  \"latest-runtime\": \"3.0.0-preview4-27615-11\",\r\n  \"latest-sdk\": \"3.0.100-preview4-011223\",\r\n  \"support-phase\": \"preview\",\r\n  \"eol-date\": null,\r\n  \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n  \"releases\": []\r\n}\r\n```\r\n@leecow @vivmishra ","Url":"https://github.com/dotnet/cli/issues/11205","RelatedDescription":"Closed issue \"dotnet Release Metadata index doesn't have the correct latest version for 3.0\" (#11205)"},{"Id":"435237584","IsPullRequest":false,"CreatedAt":"2019-04-19T16:47:48","Actor":"wli3","Number":"11209","RawContent":null,"Title":"Cannot find dotnet/clicommandlineparser in the feed","State":"open","Body":"https://github.com/dotnet/cli/pull/11204\r\n","Url":"https://github.com/dotnet/cli/issues/11209","RelatedDescription":"Open issue \"Cannot find dotnet/clicommandlineparser in the feed\" (#11209)"},{"Id":"435233542","IsPullRequest":true,"CreatedAt":"2019-04-19T16:32:25","Actor":"brettfo","Number":"11208","RawContent":null,"Title":"[WIP] update F# (2.2.3xx)","State":"open","Body":"Pending VS insertion","Url":"https://github.com/dotnet/cli/pull/11208","RelatedDescription":"Open PR \"[WIP] update F# (2.2.3xx)\" (#11208)"},{"Id":"435232834","IsPullRequest":true,"CreatedAt":"2019-04-19T16:29:50","Actor":"brettfo","Number":"11207","RawContent":null,"Title":"[WIP] update F# (2.1.7xx)","State":"open","Body":"Pending VS insertion","Url":"https://github.com/dotnet/cli/pull/11207","RelatedDescription":"Open PR \"[WIP] update F# (2.1.7xx)\" (#11207)"},{"Id":"435228468","IsPullRequest":false,"CreatedAt":"2019-04-19T16:14:41","Actor":"IgorXq","Number":"11206","RawContent":null,"Title":"Weird error MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found","State":"open","Body":"Cannot get rid of weird error\r\n\r\nerror MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found.\r\n\r\nWhen I build the project with CLI **dotnet build** whatever project I try to build (_all .csproj files refer to Sdk=\"Microsoft.NET.Sdk\" or Sdk=\"Microsoft.NET.Sdk.Web\" and it causes error as I understand_) it fails with error\r\n\r\nThough I was able to build and run these projects with Visual Studio 2017.\r\n\r\nHad to uninstall all related .Net stuff (all SDKs, .Net runtimes and VS2017 ) then reinstalled VS2019 Community from scratch. The issue is still the same - I am able to build and run the application with VS but can not build or run any of existing proejcts from CLI.\r\nIt still fails with mentioned error.\r\n\r\nIt is not obvious what version of SDK it complains for, I try to install consecutively all SDKs from Microsoft \"downloads\" page but nothing helped.\r\n\r\nCurrently\r\ndotnet --list-sdks\r\n\r\nproduces the output:\r\n\r\n> 2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.100-preview2-009404 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.100-preview3-009430 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.106 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n> 2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n\r\nI have checked several related issues here but all of them have been closed and none of them proposes relevant solution.","Url":"https://github.com/dotnet/cli/issues/11206","RelatedDescription":"Open issue \"Weird error MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found\" (#11206)"},{"Id":"435156806","IsPullRequest":true,"CreatedAt":"2019-04-19T12:56:59","Actor":"dotnet-maestro[bot]","Number":"11203","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190418.1\r\n- **Date Produced**: 4/18/2019 12:53 PM\r\n- **Commit**: c25748ad974957739a8ea6696087903bdb5f104b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19218.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11203","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11203)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"435956019","IsPullRequest":true,"CreatedAt":"2019-04-23T01:29:21","Actor":"mmitche","Number":"1164","RawContent":null,"Title":"Update branding on master","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1164","RelatedDescription":"Closed or merged PR \"Update branding on master\" (#1164)"},{"Id":"435955846","IsPullRequest":true,"CreatedAt":"2019-04-23T01:29:14","Actor":"mmitche","Number":"1163","RawContent":null,"Title":"Merge from master","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1163","RelatedDescription":"Closed or merged PR \"Merge from master\" (#1163)"},{"Id":"435913700","IsPullRequest":false,"CreatedAt":"2019-04-22T22:26:07","Actor":"CalvinFengDatacom","Number":"1162","RawContent":null,"Title":"Multiple assemblies with equivalent identity have been imported","State":"closed","Body":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks","Url":"https://github.com/dotnet/standard/issues/1162","RelatedDescription":"Closed issue \"Multiple assemblies with equivalent identity have been imported\" (#1162)"},{"Id":"435451508","IsPullRequest":true,"CreatedAt":"2019-04-21T18:54:16","Actor":"terrajobst","Number":"1160","RawContent":null,"Title":"Add EnumeratorCancellationAttribute","State":"closed","Body":"This aligns .NET Standard with the [PR made in CoreFx](https://github.com/dotnet/corefx/pull/37064). For more details, see the [API discussion](https://github.com/dotnet/corefx/issues/37012).\r\n\r\nThis is a last minute firedrill for preview 5 (which will be used for demoing functionality during Build), which means I'll have to merge this by tomorrow morning. If there are any concerns, please let me know ASAP or we'll simply back it out after preview 5.","Url":"https://github.com/dotnet/standard/pull/1160","RelatedDescription":"Closed or merged PR \"Add EnumeratorCancellationAttribute\" (#1160)"},{"Id":"435454723","IsPullRequest":true,"CreatedAt":"2019-04-20T23:47:10","Actor":"terrajobst","Number":"1161","RawContent":null,"Title":"Add tool to automate generation of .NET Core baseline","State":"closed","Body":"This adds a batch file that generates the API surface of .NET Core that matters to .NET Standard. This script updates the contents of `src\\platforms\\netcoreapp`, stripped down to just the contents that matter for .NET Standard. It's meant to be manually diff'ed against the .NET Standard reference assemblies to propose API changes.\r\n\r\nWe should move the `GenNetStandard` tool to our engineering tools (Arcade) so that they are available to people that don't have access to the internal share. However, since the process is currently manual and only done by me, that seems acceptable. At least this this makes it reproducable by other people, which is better to what we have today.\r\n\r\nThe script assume that the caller has an enlistment for dotnet/corefx in a folder that is parallel to dotnet/standard and that is named corefx. In practice, this should hold for most people that work on this.\r\n\r\n/cc @stephentoub @wtgodbe ","Url":"https://github.com/dotnet/standard/pull/1161","RelatedDescription":"Closed or merged PR \"Add tool to automate generation of .NET Core baseline\" (#1161)"},{"Id":"434735356","IsPullRequest":true,"CreatedAt":"2019-04-20T12:05:46","Actor":"dotnet-maestro[bot]","Number":"1157","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.1\r\n- **Date Produced**: 4/18/2019 8:10 AM\r\n- **Commit**: 46718d98c0fd03690a6a8c83da692a4a85a17902\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19218.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.4\r\n- **Date Produced**: 4/18/2019 10:50 PM\r\n- **Commit**: 1d4c87ff798d7de521128e6c3d890055c2401e80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19218.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.7\r\n- **Date Produced**: 4/19/2019 12:41 AM\r\n- **Commit**: 5e7ce5b394f3477bb0a485a4b761b7742e95be37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19218.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1157","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1157)"},{"Id":"434706475","IsPullRequest":false,"CreatedAt":"2019-04-19T23:24:03","Actor":"IKende","Number":"1156","RawContent":null,"Title":"NETStandard 2.0 GZipStream write date error in .Net Framework 4.6.1","State":"closed","Body":"code\r\n``` csharp\r\n public class GzipTest\r\n    {\r\n        public static byte[] Create()\r\n        {\r\n            using (System.IO.MemoryStream memory = new MemoryStream())\r\n            {\r\n                using (GZipStream gstream = new GZipStream(memory, CompressionMode.Compress))\r\n                {\r\n                    for (int i = 0; i < 100; i++)\r\n                    {\r\n                        byte[] data = System.Text.Encoding.UTF8.GetBytes(\"abcdefghkoksdsafsdfasdfksajfskdjfskdfjslfasdfsdfsdfalsdfsd\");\r\n                        gstream.Write(data, 0, data.Length);\r\n                    }\r\n                    gstream.Flush();\r\n                    return memory.ToArray();\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\nusing .Net Framework 4.61 invoke this function ，debugging output information:\r\n```\r\nmemory.Length\r\n10\r\nmemory.ToArray()\r\n{byte[10]}\r\n    [0]: 31\r\n    [1]: 139\r\n    [2]: 8\r\n    [3]: 0\r\n    [4]: 0\r\n    [5]: 0\r\n    [6]: 0\r\n    [7]: 0\r\n    [8]: 4\r\n    [9]: 0\r\n```","Url":"https://github.com/dotnet/standard/issues/1156","RelatedDescription":"Closed issue \"NETStandard 2.0 GZipStream write date error in .Net Framework 4.6.1\" (#1156)"},{"Id":"434958748","IsPullRequest":true,"CreatedAt":"2019-04-19T19:46:08","Actor":"terrajobst","Number":"1158","RawContent":null,"Title":"Add Overrides","State":"closed","Body":"This doesn't change API surface but simply records the overrides made in .NET Core to minimize the diff.","Url":"https://github.com/dotnet/standard/pull/1158","RelatedDescription":"Closed or merged PR \"Add Overrides\" (#1158)"},{"Id":"432819882","IsPullRequest":false,"CreatedAt":"2019-04-19T19:00:10","Actor":"nimisha84","Number":"1142","RawContent":null,"Title":"Migration issues for a project moved from 4.7.2 Framework to .Net Standard 2.0","State":"closed","Body":"Hi Team,\r\nhttps://github.com/intuit/QuickBooks-V3-DotNET-SDK/\r\nWe have this class lib project which was on 4.6.1 and needed migration to .Net Standard so that it can support .Net Core too.\r\nSo, we migrated it to 4.7.2 first and then changed all .csproj files to support both 4.7.2 and Net Standard 2.0.\r\nWe are facing a really weird issue here. We have about 16 projects in this solution and using the new .csproj with targetframeworks 4.7.2 and Net Standard2.0, I see that release and debug dlls are generated for majority of projects in the .Net Standard but for some reason for about 4 of these projects, the target version of these dlls is always 4.7.2.  I have tried to compare the .csproj across all projects which build successfully to generate .Net Standard dlls vs those which do not generate. There isn't any diff at all. \r\n**Intuit.Ipp.Core for example builds successfully to generate .Net Standard dlls but Intuit.Ipp.Exception, Intuit.Ipp.Retry, Intuit.Ipp.Utility, Intuit.Ipp.OAuth2PlatformClient always build to generate 4.7.2 dlls.**\r\n\r\n**Another issue is that even though there are no circular ref, the project build order is not honored and you will see a lot of xcopy failures.**\r\n\r\nPlease help.!\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1142","RelatedDescription":"Closed issue \"Migration issues for a project moved from 4.7.2 Framework to .Net Standard 2.0\" (#1142)"},{"Id":"434539992","IsPullRequest":true,"CreatedAt":"2019-04-19T17:24:44","Actor":"terrajobst","Number":"1152","RawContent":null,"Title":"Implement IEquatable on Memory<T>","State":"closed","Body":"Based [on feedback](https://github.com/dotnet/standard/pull/909#discussion_r226390377) from @marek-safar.\r\n\r\nAlso see:\r\n* https://github.com/dotnet/corefx/issues/32905\r\n* https://github.com/dotnet/coreclr/pull/23586","Url":"https://github.com/dotnet/standard/pull/1152","RelatedDescription":"Closed or merged PR \"Implement IEquatable on Memory<T>\" (#1152)"},{"Id":"434545210","IsPullRequest":true,"CreatedAt":"2019-04-19T17:24:31","Actor":"terrajobst","Number":"1154","RawContent":null,"Title":"Fix Range.GetOffsetAndLength()","State":"closed","Body":"We ended up [agreeing](https://github.com/dotnet/corefx/issues/35508) that it's best to use tuples in cases like this.\r\n\r\n***Note**: This isn't a breaking change in .NET Standard, as `Range` hasn't shipped yet.*","Url":"https://github.com/dotnet/standard/pull/1154","RelatedDescription":"Closed or merged PR \"Fix Range.GetOffsetAndLength()\" (#1154)"},{"Id":"434544916","IsPullRequest":true,"CreatedAt":"2019-04-19T17:24:17","Actor":"terrajobst","Number":"1153","RawContent":null,"Title":"Respond to change in .NET Core to simplify Index and Range","State":"closed","Body":"We had recent [design change](https://github.com/dotnet/corefx/issues/35972) that simplifies `Index` and `Range`: instead of having to provide indexers that take `Index` and `Range`, the compiler [can lower](https://github.com/dotnet/csharplang/blob/master/proposals/index-range-changes.md) `Index` automatically and allows indexing via `Range` to be expressed via a method called `Slice`. Both make the feature more useful for interfaces where adding members isn't easily possible.\r\n\r\n***Note**: This isn't a breaking change in .NET Standard, as `Index` and `Range` haven't shipped yet.*","Url":"https://github.com/dotnet/standard/pull/1153","RelatedDescription":"Closed or merged PR \"Respond to change in .NET Core to simplify Index and Range\" (#1153)"},{"Id":"433533107","IsPullRequest":false,"CreatedAt":"2019-04-19T01:28:32","Actor":"rashadrivera","Number":"1147","RawContent":null,"Title":"SUGGESTION: Please Make AsnReader And AnsWriter Public","State":"closed","Body":"All,\r\n\r\nI have a real need for the internl classes that are being used in .NET Core 2.x.  I need a Asn reader and writer and I've recently discovered the [AsnReader and AsnWriter](https://github.com/dotnet/corefx/tree/master/src/Common/src/System/Security/Cryptography/Asn1Reader) as internal classes.  **Can these classes become public within .NET Standard?**  My products are built upon .NET Standard exclusively and not .NET Core or .NET.\r\n\r\nIn my case, I need them to create certificate revocation lists (CRL) and translate online certificate status protocol (OCSP) requests and responses.  I've used BouncyCastle as part of my solution, but I feel it is a poor implementation because of its cryptic design and the fact that I **must** give it unadulterated access to my private keys (which is a serious FIPS security concern).  \r\n\r\nMy goal is to use out-of-process signing like Azure.  But in order to do that, I need a solution that allows me to generate Asn data without third party tools like BouncyCastle.  ","Url":"https://github.com/dotnet/standard/issues/1147","RelatedDescription":"Closed issue \"SUGGESTION: Please Make AsnReader And AnsWriter Public\" (#1147)"},{"Id":"434963712","IsPullRequest":true,"CreatedAt":"2019-04-18T22:03:07","Actor":"terrajobst","Number":"1159","RawContent":null,"Title":"Remove finalizers","State":"closed","Body":"My understanding from earlier discussions with @jkotas and @marek-safar was that we should treat finalizers as an implementation detail of the platform that implements .NET Standard. Thus, I've changed my diffing to generally exclude all finalizers. This PR updates the reference assembly to match it.\r\n\r\n@jkotas / @marek-safar: I assume you're OK with that?","Url":"https://github.com/dotnet/standard/pull/1159","RelatedDescription":"Closed or merged PR \"Remove finalizers\" (#1159)"},{"Id":"434538136","IsPullRequest":true,"CreatedAt":"2019-04-18T01:38:21","Actor":"terrajobst","Number":"1151","RawContent":null,"Title":"Reorder members","State":"closed","Body":"***No API change***\r\n\r\nThis doesn't change the API surface but only reorders some members to make diffing between .NET Core and .NET Standard easier. For some reason, when we created .NET Standard, the members weren't consistently sorted. Since I don't trust myself, I've diffed the produced binary against the build produced by master to ensure no API surface changes were introduced.","Url":"https://github.com/dotnet/standard/pull/1151","RelatedDescription":"Closed or merged PR \"Reorder members\" (#1151)"},{"Id":"434245360","IsPullRequest":true,"CreatedAt":"2019-04-17T12:23:55","Actor":"dotnet-maestro[bot]","Number":"1150","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190417.1\r\n- **Date Produced**: 4/17/2019 7:32 AM\r\n- **Commit**: 4e21d52dabbb9f5705a90f097acb1465a0354c0d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19217.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19217.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1150","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1150)"},{"Id":"434067891","IsPullRequest":false,"CreatedAt":"2019-04-17T02:50:12","Actor":"yyjdelete","Number":"1149","RawContent":null,"Title":"Transitive dependency(PackageReference/ProjectReference)not working when app and libs has different targetFramework","State":"open","Body":"Also report as dotnet/sdk#3103, dotnet/core#2571.\r\n\r\nReference transitive not working when app and lib has different targetFramework, and the lib use an transitive dependency from special targetFramework of an multi-targetFramework PackageReference/ProjectReference\r\n\r\nThat mainly affect reference any libraries which target single `netstandard2.0` and reference other multi-targetFramework libraries , as it give no warn/error at build time.\r\n\r\n### Step:\r\n\r\nTested with dotnet-sdk : 3.0.100-preview3-010431, 2.1.504 and some other version\r\n\r\nRun ConsoleApp5 in https://github.com/yyjdelete/test_dotnet_indirect_dependency\r\nAnd see an FileNotFoundException for `System.Data.SqlClient, Version=4.5.0.0`(Ignore the MissingMethodException, as it's expected https://github.com/dotnet/standard/issues/1052#issuecomment-457399181). The same if replace `ClassLibrary1` and `ClassLibrary2` with packed `.nupkg`\r\n\r\nProject struct:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)->use `System.Data.SqlClient` directly or exported as public api of `ClassLibrary2`\r\n---|--ClassLibrary2(netstandard2.0;net472)\r\n------|--System.Data.SqlClient(when netstandard2.0)\r\n```\r\n\r\n### Expected:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--System.Data.SqlClient(net472)\r\n---|--ClassLibrary2(net472)\r\n```\r\n1. The `System.Data.SqlClient` should be include in the output bins of `ConsoleApp5`, if used by `ClassLibrary1(netstandard2.0)`.\r\nOr at least give an warning, to make people know which Reference must be added explicitly. It's almost impossibe to find all of them by hand in an project with deep reference transitive(can also be something in nupkg).\r\n\r\n2. VisualStudio should show the same result of project struct as the output does, and `System.Data.SqlClient` should be include again with `ClassLibrary1(netstandard2.0)` if it's removed with `ClassLibrary2(net472)`\r\nI already know it's reasonable to reference `ClassLibrary2` with `net472`(runtime) instead of `netstandard2.0`, so ignore the `MissingMethodException`.\r\n\r\n### Actual:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--ClassLibrary2(net472)\r\n\r\n***System.Data.SqlClient is missing\r\n```\r\n1. The `System.Data.SqlClient` is missing from the output, even it's used by `ClassLibrary1(netstandard2.0)`, and get an `FileNotFoundException` when execute.\r\n2. VisualStudio show that ConsoleApp5(net472) use ClassLibrary2(net472), while the output use ClassLibrary2(netstandard2.0).\r\n![image](https://user-images.githubusercontent.com/1819074/55792414-24a72f80-5af3-11e9-9a58-e7bd08696b90.png)","Url":"https://github.com/dotnet/standard/issues/1149","RelatedDescription":"Open issue \"Transitive dependency(PackageReference/ProjectReference)not working when app and libs has different targetFramework\" (#1149)"},{"Id":"433742428","IsPullRequest":true,"CreatedAt":"2019-04-16T12:14:06","Actor":"dotnet-maestro[bot]","Number":"1148","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190415.12\r\n- **Date Produced**: 4/16/2019 12:12 AM\r\n- **Commit**: 517bf671ea342965d007aa48f5bfd4926e58d582\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19215.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19215.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1148","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1148)"},{"Id":"433244267","IsPullRequest":true,"CreatedAt":"2019-04-15T12:13:52","Actor":"dotnet-maestro[bot]","Number":"1146","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190414.2\r\n- **Date Produced**: 4/14/2019 4:07 PM\r\n- **Commit**: bcf1186cb0db792906fd319ae49bdbc41f44f8ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19214.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19214.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1146","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1146)"},{"Id":"432966330","IsPullRequest":true,"CreatedAt":"2019-04-14T12:13:32","Actor":"dotnet-maestro[bot]","Number":"1145","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190413.2\r\n- **Date Produced**: 4/13/2019 9:02 PM\r\n- **Commit**: 10655eec2ab92accc1487d077979935127f16b4e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19213.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19213.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1145","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1145)"},{"Id":"432889036","IsPullRequest":false,"CreatedAt":"2019-04-13T19:21:08","Actor":"JamesNK","Number":"1144","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders to netstandard","State":"open","Body":"https://github.com/dotnet/corefx/blob/4fa6319fb590b046ba4c962088b960a31749f245/src/System.Net.Http/src/System/Net/Http/HttpResponseMessage.cs#L119-L130\r\n\r\nDiscussion: https://github.com/dotnet/corefx/issues/34912#issuecomment-482777355","Url":"https://github.com/dotnet/standard/issues/1144","RelatedDescription":"Open issue \"Add HttpResponseMessage.TrailingHeaders to netstandard\" (#1144)"},{"Id":"432840145","IsPullRequest":true,"CreatedAt":"2019-04-13T12:08:31","Actor":"dotnet-maestro[bot]","Number":"1143","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190412.2\r\n- **Date Produced**: 4/12/2019 4:37 PM\r\n- **Commit**: 9d0fd805448082c8d55e2434607b481bca70a146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19212.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19212.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1143","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1143)"},{"Id":"432775994","IsPullRequest":false,"CreatedAt":"2019-04-12T23:24:57","Actor":"danny-may","Number":"1141","RawContent":null,"Title":"Linq extensions for IAsyncEnumerable","State":"closed","Body":"With `IAsyncEnumerable<T>` being added to .net standard 2,1, I feel it would make sense to also add all the Linq extensions on `IEnumerable<T>` to `IAsyncEnumerable<T>`, be that in a new extension class (e.g. `AsyncEnumerable.cs`) or as additional methods in the existing `Enumerable.cs` class.\r\n\r\n```csharp\r\npublic static class AsyncEnumerable\r\n{\r\n    ....\r\n    public static IAsyncEnumerable<T> Where<T>(this IAsyncEnumerable<T>, Func<T, bool> predicate) { ... }\r\n    public static IAsyncEnumerable<T> Where<T>(this IAsyncEnumerable<T>, Func<T, Task<bool>> predicate) { ... }\r\n     // Maybe this Func<T, ValueTask<bool>> overload?\r\n    public static IAsyncEnumerable<T> Where<T>(this IAsyncEnumerable<T>, Func<T, ValueTask<bool>> predicate) { ... }\r\n    ....\r\n    public static Task<T[]> ToArrayAsync<T>(this IAsyncEnumerable<T>) { ... }\r\n    ....\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>) { ... }\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>, Func<T, bool> predicate) { ... }\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>, Func<T, Task<bool>> predicate) { ... }\r\n     // Maybe this Func<T, ValueTask<bool>> overload?\r\n    public static Task<T> FirstOrDefaultAsync<T>(this IAsyncEnumerable<T>, Func<T, ValueTask<bool>> predicate) { ... }\r\n    ....\r\n}\r\n```\r\n\r\n```csharp\r\nvar allItems = MyAsyncEnumerableMethod();\r\nvar evens = await allItems.Where(item => item.id % 2 == 0).ToArrayAsync();\r\nvar firstOdd = await allItems.FirstOrDefaultAsync(item => item.id % 2 == 1);\r\n```\r\n\r\nI understand this would need to be implemented into the .net core and .net framework releases too, I figured it would make sense to raise it here first as its an API proposal?","Url":"https://github.com/dotnet/standard/issues/1141","RelatedDescription":"Closed issue \"Linq extensions for IAsyncEnumerable\" (#1141)"},{"Id":"432616368","IsPullRequest":false,"CreatedAt":"2019-04-12T15:17:58","Actor":"hinteadan","Number":"1140","RawContent":null,"Title":"string.Join unexpected behavior when calling Join(String separator, params object[] values);","State":"closed","Body":"When calling the `String Join(String separator, params object[] values)` signature and pass a **null** value as the first parameter, followed by a type other than string, then any number and type of other parameters, the method **returns an empty string**.\r\n\r\nCode samples:\r\n`string.Join(\",\", null, 0) //returns \"\"`\r\n`string.Join(\",\", null, 0, null, null, \"\", null, 0, \"\", null, new Exception(), DateTime.Now) //returns \"\"`","Url":"https://github.com/dotnet/standard/issues/1140","RelatedDescription":"Closed issue \"string.Join unexpected behavior when calling Join(String separator, params object[] values);\" (#1140)"},{"Id":"432532476","IsPullRequest":true,"CreatedAt":"2019-04-12T12:13:53","Actor":"dotnet-maestro[bot]","Number":"1139","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190411.2\r\n- **Date Produced**: 4/11/2019 10:43 PM\r\n- **Commit**: e7b5230799a6db9121d90cf548d5a2313bd682dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19211.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19211.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1139","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1139)"},{"Id":"431985706","IsPullRequest":true,"CreatedAt":"2019-04-11T12:13:49","Actor":"dotnet-maestro[bot]","Number":"1137","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19210.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1137","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1137)"},{"Id":"431464888","IsPullRequest":true,"CreatedAt":"2019-04-10T12:13:44","Actor":"dotnet-maestro[bot]","Number":"1136","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1136","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1136)"},{"Id":"430928858","IsPullRequest":true,"CreatedAt":"2019-04-09T12:13:46","Actor":"dotnet-maestro[bot]","Number":"1135","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.1\r\n- **Date Produced**: 4/9/2019 8:35 AM\r\n- **Commit**: 9d7e665ecf2606094677524ecd5af0fc39c7bb49\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1135)"},{"Id":"430724535","IsPullRequest":true,"CreatedAt":"2019-04-09T01:31:16","Actor":"wtgodbe","Number":"1133","RawContent":null,"Title":"Add triggers for release/3.0","State":"closed","Body":"CC @mmitche ","Url":"https://github.com/dotnet/standard/pull/1133","RelatedDescription":"Closed or merged PR \"Add triggers for release/3.0\" (#1133)"},{"Id":"430724563","IsPullRequest":true,"CreatedAt":"2019-04-09T01:31:07","Actor":"wtgodbe","Number":"1134","RawContent":null,"Title":"Add triggers for release/3.0","State":"closed","Body":"CC @mmitche ","Url":"https://github.com/dotnet/standard/pull/1134","RelatedDescription":"Closed or merged PR \"Add triggers for release/3.0\" (#1134)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"435929935","IsPullRequest":true,"CreatedAt":"2019-04-23T04:26:45","Actor":"davidfowl","Number":"37106","RawContent":null,"Title":"Fix flaky test","State":"closed","Body":"- Synchronize reads and writes using a tcs.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/37100","Url":"https://github.com/dotnet/corefx/pull/37106","RelatedDescription":"Closed or merged PR \"Fix flaky test\" (#37106)"},{"Id":"435876051","IsPullRequest":false,"CreatedAt":"2019-04-23T04:26:45","Actor":"BruceForstall","Number":"37100","RawContent":null,"Title":"[Linux/arm64] Test failure in System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream","State":"closed","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/177/consoleFull\r\n```\r\n04:17:03 ----- start 04:15:09 =============== To repro directly: =====================================================\r\n04:17:03 pushd .\r\n04:17:03 #!/usr/bin/env bash export COMPlus_TieredCompilation=0\r\n04:17:03 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet xunit.console.dll System.IO.Pipelines.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=IgnoreForCI -notrait category=failing -notrait category=OuterLoop \r\n04:17:03 popd\r\n04:17:03 ===========================================================================================================\r\n04:17:03 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.IO.Pipelines.Tests/netcoreapp-Linux-Release-arm64 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.IO.Pipelines.Tests/netcoreapp-Linux-Release-arm64\r\n04:17:03   Discovering: System.IO.Pipelines.Tests (method display = ClassAndMethod, method display options = None)\r\n04:17:03   Discovered:  System.IO.Pipelines.Tests (found 278 test cases)\r\n04:17:03   Starting:    System.IO.Pipelines.Tests (parallel test collections = on, max threads = 46)\r\n04:17:03 \r\n    System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream [FAIL]\r\n04:17:03       Assert.Equal() Failure\r\n04:17:03       Expected: Byte[] [84, 104, 105, 115]\r\n04:17:03       Actual:   Byte[] [84, 104, 105, 115, 87, ...]\r\n04:17:03       Stack Trace:\r\n04:17:03         /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.IO.Pipelines/tests/StreamPipeWriterTests.cs(122,0): at System.IO.Pipelines.Tests.StreamPipeWriterTests.<CanDoMultipleAsyncWritesToStream>g__DoReadsAsync|5_1(PipeReader reader, Byte[][] reads)\r\n04:17:03         /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.IO.Pipelines/tests/StreamPipeWriterTests.cs(143,0): at System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream()\r\n04:17:03         --- End of stack trace from previous location where exception was thrown ---\r\n04:17:03   Finished:    System.IO.Pipelines.Tests\r\n04:17:03 === TEST EXECUTION SUMMARY ===\r\n04:17:03    System.IO.Pipelines.Tests  Total: 322, Errors: 0, Failed: 1, Skipped: 0, Time: 92.463s\r\n04:17:03 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.IO.Pipelines.Tests/netcoreapp-Linux-Release-arm64\r\n04:17:03 ----- end 04:17:03 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/corefx/issues/37100","RelatedDescription":"Closed issue \"[Linux/arm64] Test failure in System.IO.Pipelines.Tests.StreamPipeWriterTests.CanDoMultipleAsyncWritesToStream\" (#37100)"},{"Id":"435958417","IsPullRequest":true,"CreatedAt":"2019-04-23T02:44:29","Actor":"dotnet-maestro[bot]","Number":"37108","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.75\r\n- **Date Produced**: 4/23/2019 1:31 AM\r\n- **Commit**: 4895a06c0dcc5d13f75dd55bdce83f7792d72ba4\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27622-75\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview5-27622-75\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37108","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37108)"},{"Id":"435955330","IsPullRequest":true,"CreatedAt":"2019-04-23T01:17:12","Actor":"dotnet-maestro[bot]","Number":"37107","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/standard","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190408.5\r\n- **Date Produced**: 4/9/2019 2:33 AM\r\n- **Commit**: 8ef5ada20b5343b0cb9e7fd577341426dab76cd8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19208.5\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190421.1\r\n- **Date Produced**: 4/21/2019 7:07 PM\r\n- **Commit**: 6fbe91e4cf707a180b445efe8d15b36d80292497\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19221.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190422.1\r\n- **Date Produced**: 4/23/2019 1:58 AM\r\n- **Commit**: 5eee83eaa61eff38f470dc690218bebf73f46e23\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19222.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37107","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/standard\" (#37107)"},{"Id":"435922299","IsPullRequest":true,"CreatedAt":"2019-04-22T23:58:51","Actor":"dotnet-maestro[bot]","Number":"37105","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190422.73\r\n- **Date Produced**: 4/22/2019 10:40 PM\r\n- **Commit**: 8651946d4a4379ec0b2d189d64562686ca7bdb90\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview4-27622-73\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview4-27622-73\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview4-27622-73\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37105","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37105)"},{"Id":"435901136","IsPullRequest":true,"CreatedAt":"2019-04-22T21:36:15","Actor":"dotnet-maestro[bot]","Number":"37102","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190419.72\r\n- **Date Produced**: 4/19/2019 11:57 PM\r\n- **Commit**: cc29bc4004f9e15959e9cc8fbd8b740088672ca3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview4-27619-72\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview4-27619-72\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview4-27619-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37102","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#37102)"},{"Id":"435895549","IsPullRequest":true,"CreatedAt":"2019-04-22T21:14:51","Actor":"maryamariyan","Number":"37101","RawContent":null,"Title":"Ports System.Data.OleDb","State":"open","Body":"- [x] Exposes and adds implementation for APIs in System.Data.OleDb\r\n- [x] Sets up the packaging for System.Data.OleDb (cc: @ericstj)\r\n- [x] Reimplements NativeOledbWrapper in C#, and adds PROPVARIANT struct (cc: @tannergooding )\r\n- [x] Sets up test project for netstandard and netfx with basic first draft tests\r\n- [x] Fix API Compat errors on src project (cc: @ericstj )\r\n- [x] delete any MDAC numbers or other commented bug numbers\r\n\r\nTODO:\r\n\r\n- [ ] Increase code coverage and add more tests that show proper usage for the OleDB data types\r\n- [ ] Remove dead strings from Strings.resx\r\n- [ ] Remove comments, blank lines, unused code, sort usings\r\n- [ ] use code formatter to cleanup file indentation\r\n- [ ] (Future PR) We want this to be in the compat pack. \r\n- [ ] (Future PR) Extract common files between Odbc and SqlClient and OleDb","Url":"https://github.com/dotnet/corefx/pull/37101","RelatedDescription":"Open PR \"Ports System.Data.OleDb\" (#37101)"},{"Id":"435874044","IsPullRequest":true,"CreatedAt":"2019-04-22T20:16:41","Actor":"wtgodbe","Number":"37099","RawContent":null,"Title":"update branding to preview5 in rel/3.0","State":"closed","Body":"CC @mmitche @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/37099","RelatedDescription":"Closed or merged PR \"update branding to preview5 in rel/3.0\" (#37099)"},{"Id":"435847084","IsPullRequest":true,"CreatedAt":"2019-04-22T20:14:30","Actor":"dotnet-maestro-bot","Number":"37096","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @cston\n* @stephentoub\n* @jkotas\n* @dotnet-maestro[bot]\n* @sdmaclea\n* @layomia\n* @danmosemsft\n* @ahsonkhan\n* @safern\n* @brianrob\n* @krwq\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/37096","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#37096)"},{"Id":"435854477","IsPullRequest":false,"CreatedAt":"2019-04-22T19:22:37","Actor":"tarekgh","Number":"37098","RawContent":null,"Title":"dotnet tool broken with 3.0-preview4 on openSUSE Tumbleweed","State":"open","Body":"@ismail commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617)\n\nThis works with preview3, hence it's a regression:\r\n\r\n```\r\nhavana ~ > dotnet tool\r\n\r\nWelcome to .NET Core 3.0!\r\n---------------------\r\nSDK Version: 3.0.100-preview4-011223\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\n----------------\r\nMore about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\nExplore documentation: https://aka.ms/dotnet-docs\r\nReport issues and find source on GitHub: https://github.com/dotnet/core\r\nFind out what's new: https://aka.ms/dotnet-whats-new\r\nLearn about the installed HTTPS developer cert: https://aka.ms/aspnet-core-https\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\nWrite your first app: https://aka.ms/first-net-core-app\r\n--------------------------------------------------------------------------------------\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Globalization.CalendarData.NormalizeDatePattern(String input)\r\n   at System.Globalization.CalendarData.LoadCalendarDataFromSystem(String localeName, CalendarId calendarId)\r\n   at System.Globalization.CalendarData..ctor(String localeName, CalendarId calendarId, Boolean bUseUserOverrides)\r\n   at System.Globalization.CultureData.GetCalendar(CalendarId calendarId)\r\n   at System.Globalization.CultureData.DateSeparator(CalendarId calendarId)\r\n   at System.Globalization.DateTimeFormatInfo.InitializeOverridableProperties(CultureData cultureData, CalendarId calendarId)\r\n   at System.Globalization.DateTimeFormatInfo.set_Calendar(Calendar value)\r\n   at System.Globalization.CultureInfo.get_DateTimeFormat()\r\n   at System.Globalization.CultureInfo.GetFormat(Type formatType)\r\n   at System.Globalization.DateTimeFormatInfo.get_CurrentInfo()\r\n   at System.Globalization.DateTimeFormatInfo.GetInstance(IFormatProvider provider)\r\n   at System.Globalization.TimeSpanFormat.TryFormat(TimeSpan value, Span`1 destination, Int32& charsWritten, ReadOnlySpan`1 format, IFormatProvider formatProvider)\r\n   at System.TimeSpan.TryFormat(Span`1 destination, Int32& charsWritten, ReadOnlySpan`1 format, IFormatProvider formatProvider)\r\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.TimeZoneInfo..ctor(Byte[] data, String id, Boolean dstDisabled)\r\n   at System.TimeZoneInfo.GetTimeZoneFromTzData(Byte[] rawData, String id)\r\n   at System.TimeZoneInfo.GetLocalTimeZoneFromTzFile()\r\n   at System.TimeZoneInfo.CachedData.CreateLocal()\r\n   at System.DateTime.get_Now()\r\n   at System.DateTimeOffset.get_Now()\r\n   at Microsoft.AspNetCore.DeveloperCertificates.XPlat.CertificateGenerator.GenerateAspNetHttpsCertificate()\r\n   at Microsoft.DotNet.Cli.AspNetCoreCertificateGenerator.GenerateAspNetCoreDevelopmentCertificate()\r\n   at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.Configure()\r\n   at Microsoft.DotNet.Cli.Program.ConfigureDotNetForFirstTimeUse(IFirstTimeUseNoticeSentinel firstTimeUseNoticeSentinel, IAspNetCertificateSentinel aspNetCertificateSentinel, IFileSentinel toolPathSentinel, Boolean hasSuperUserAccess, DotnetFirstRunConfiguration dotnetFirstRunConfiguration, IEnvironmentProvider environmentProvider)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n```\r\n\r\nLooking at the backtrace, this might be due to ICU, here is the details of ICU packages installed:\r\n\r\n```\r\nhavana ~ > rpm -qa | grep libicu\r\nlibicu64_1-ledata-64.1-1.1.noarch                                                                                                                                                              \r\nlibicu-suse64_1-64.1-1.1.x86_64                                                                                                                                                                \r\nlibicu-devel-64.1-1.1.x86_64 \r\n```\r\n\n\n---\n\n@karelz commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485457368)\n\n@tarekgh @dagood can you please help route it? Is it a known problem?\n\n---\n\n@tarekgh commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485459995)\n\nI'll try to look. Is there any more data here can help? like debugger dump or more info about the running environment (e.g. what is the locale on the failed machine)? \r\n\r\n@dagood if we have a machine or image I can use to check that would be helpful if you point me to that. thanks. \r\n\r\nCC @krwq \n\n---\n\n@dagood commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485487595)\n\nNo repro with a from scratch install from tarball on a `opensuse/tumbleweed` container. 😕\r\n\r\n```\r\ndocker run -it --rm opensuse/tumbleweed bash -c '\r\n  zypper install -y wget tar gzip libicu\r\n  wget https://download.visualstudio.microsoft.com/download/pr/26d4dc1f-f674-4902-9921-f287f65266f9/ef8a67939f0c3e5729b2674a5e013328/dotnet-sdk-3.0.100-preview4-011223-linux-x64.tar.gz\r\n  mkdir -p $HOME/dotnet && tar zxf dotnet-sdk-3.0.100-preview4-011223-linux-x64.tar.gz -C $HOME/dotnet\r\n  export DOTNET_ROOT=$HOME/dotnet\r\n  export PATH=$PATH:$HOME/dotnet\r\n  dotnet tool'\r\n```\r\n\r\n```\r\n...\r\n\r\nWelcome to .NET Core 3.0!\r\n---------------------\r\nSDK Version: 3.0.100-preview4-011223\r\n\r\nTelemetry\r\n---------\r\nThe .NET Core tools collect usage data in order to help us improve your experience. The data is anonymous. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n\r\nRead more about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\n----------------\r\nMore about .NET Core CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\nExplore documentation: https://aka.ms/dotnet-docs\r\nReport issues and find source on GitHub: https://github.com/dotnet/core\r\nFind out what's new: https://aka.ms/dotnet-whats-new\r\nLearn about the installed HTTPS developer cert: https://aka.ms/aspnet-core-https\r\nUse 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs\r\nWrite your first app: https://aka.ms/first-net-core-app\r\n--------------------------------------------------------------------------------------\r\nRequired command was not provided.\r\nUsage: dotnet tool [options] [command]\r\n\r\nOptions:\r\n  -h, --help   Show command line help.\r\n...\r\n```\r\n\r\nI think it's reasonable to try to repro on that base container if we can get more info, though.\n\n---\n\n@ismail commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485513038)\n\nLocale is C.UTF-8, if you need more information you have to let me know :-)\n\n---\n\n@dagood commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485515637)\n\nApologies, I see now that looks pretty passive aggressive. I was just expressing my hope that @tarekgh can think of more things to ask about to get to the bottom of this. 🙂 I don't know enough about this area to know what other stuff to gather.\n\n---\n\n@tarekgh commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485516344)\n\n@ismail @dagood  what you have sent both is very useful. I'll try to look more here. Thanks for your help.\n\n---\n\n@tarekgh commented on [Mon Apr 22 2019](https://github.com/dotnet/core/issues/2617#issuecomment-485521254)\n\nI can repro this now. \n\n","Url":"https://github.com/dotnet/corefx/issues/37098","RelatedDescription":"Open issue \"dotnet tool broken with 3.0-preview4 on openSUSE Tumbleweed\" (#37098)"},{"Id":"435847480","IsPullRequest":true,"CreatedAt":"2019-04-22T19:13:50","Actor":"wtgodbe","Number":"37097","RawContent":null,"Title":"Update branding in master to preview6","State":"closed","Body":"CC @mmitche @danmosemsft \r\n\r\nI'll merge this after the code-merge job into rel/3.0 completes","Url":"https://github.com/dotnet/corefx/pull/37097","RelatedDescription":"Closed or merged PR \"Update branding in master to preview6\" (#37097)"},{"Id":"435600837","IsPullRequest":true,"CreatedAt":"2019-04-22T18:32:17","Actor":"cston","Number":"37085","RawContent":null,"Title":"Initial port of Microsoft.VisualBasic.Devices and Microsoft.VisualBasic.MyServices","State":"closed","Body":"Initial port of Microsoft.VisualBasic.Devices and Microsoft.VisualBasic.MyServices from https://github.com/Microsoft/referencesource/tree/master/Microsoft.VisualBasic/runtime/msvbalib.\r\n\r\nThe following types are empty currently because the implementations rely on Windows or System.Windows.Forms:\r\n- Devices/{Audio,Keyboard,Mouse,Network,Ports}\r\n- MyServices/{ClipboardProxy,RegistryProxy}\r\n\r\nThe following members are missing currently because the implementations rely on Windows or System.Windows.Forms:\r\n- ApplicationBase.{Log,AssemblyInfo}\r\n- User.IsInRole and Enum BuiltInRole\r\n- User.InitializeWithWindowsUser\r\n- Computer.Screen\r\n- ComputerInfo.{OSFullName,*Memory}\r\n\r\nThe changes from reference source were otherwise cosmetic changes only.","Url":"https://github.com/dotnet/corefx/pull/37085","RelatedDescription":"Closed or merged PR \"Initial port of Microsoft.VisualBasic.Devices and Microsoft.VisualBasic.MyServices\" (#37085)"},{"Id":"435802562","IsPullRequest":true,"CreatedAt":"2019-04-22T18:18:46","Actor":"am11","Number":"37093","RawContent":null,"Title":"Use NativeLibrary APIs in .NET Core 3 and above","State":"closed","Body":"Windows part of #34633; replacing `LoadLibrary[Ex]` calls with `NativeLibrary.[Try]Load` managed APIs.","Url":"https://github.com/dotnet/corefx/pull/37093","RelatedDescription":"Closed or merged PR \"Use NativeLibrary APIs in .NET Core 3 and above\" (#37093)"},{"Id":"435829045","IsPullRequest":false,"CreatedAt":"2019-04-22T18:18:36","Actor":"LWChris","Number":"37095","RawContent":null,"Title":"Suggestion: Add LINQ method to Zip an IEnumerable with \"itself.Skip(1)\"","State":"open","Body":"I want to have an extension method for `IEnumerable` that makes it easy to create diffs of the elements, by calling a selector for each two adjacent elements.\r\n\r\nEssentially, this is `source.Take(source.Count() - 1).Zip(source.Skip(1), SELECTOR)`.\r\n\r\nI have already used this extension in various projects when I have a series of values and need to work out the differences. So far I called this extension \"ZipLink\", because it zips the elements and creates the \"linking\" element between.\r\n\r\nHaving a dedicated extension allows for much shorter code that enumerates `source` only once, when otherwise using current LINQ extensions you need two enumerators:\r\n\r\n```cs\r\npublic IEnumerable<Vector3D> GetPolygonalChain(Point3D[] points) {\r\n  return points.Skip(1).Zip(points, (x1, x0) => x1 - x0);\r\n}\r\n\r\npublic IEnumerable<Vector3D> GetPolygonalChain(Point3D[] points) {\r\n  return points.ZipLink((x0, x1) => x1 - x0);\r\n}\r\n```\r\n\r\n```cs\r\npublic IEnumerable<Diff> GetDiffs(IEnumerable<Frame> frames) {\r\n  var fr = frames.ToList(); // Avoid multiple enumeration of \"frames\"\r\n  return fr.Skip(1).Zip(fr, (next, prev) => Diff.Create(prev, next));\r\n}\r\n\r\npublic IEnumerable<Diff> GetDiffs(IEnumerable<Frame> frames) {\r\n  return frames.ZipLink(Diff.Create);\r\n}\r\n```\r\n\r\nThe proposed code would be using a `ZipLinkIterator` like so:\r\n\r\n```cs\r\nnamespace System.Linq\r\n{\r\n    public static partial class Enumerable\r\n    {\r\n        public static IEnumerable<TResult> ZipLink<T, TResult>(this IEnumerable<T> source, Func<T, T, TResult> resultSelector)\r\n        {\r\n            if (source is null)\r\n            {\r\n                ThrowHelper.ThrowArgumentNullException(ExceptionArgument.source);\r\n            }\r\n\r\n            if (resultSelector is null)\r\n            {\r\n                ThrowHelper.ThrowArgumentNullException(ExceptionArgument.resultSelector);\r\n            }\r\n\r\n            return ZipLinkIterator(source, resultSelector);\r\n        }\r\n\r\n        private static IEnumerable<TResult> ZipLinkIterator<T, TResult>(IEnumerable<T> source, Func<T, T, TResult> resultSelector)\r\n        {\r\n            using (IEnumerator<T> e = source.GetEnumerator())\r\n            {\r\n                if (e.MoveNext())\r\n                {\r\n                    T last = e.Current;\r\n                    while (e.MoveNext())\r\n                    {\r\n                        yield return resultSelector(last, last = e.Current);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37095","RelatedDescription":"Open issue \"Suggestion: Add LINQ method to Zip an IEnumerable with \"itself.Skip(1)\"\" (#37095)"},{"Id":"435805674","IsPullRequest":true,"CreatedAt":"2019-04-22T17:30:21","Actor":"LWChris","Number":"37094","RawContent":null,"Title":"Add IEnumerable ZipLink extension method","State":"closed","Body":"The `ZipLink` extension zips each pair of adjacent elements in an `IEnumerable` using a selector.\r\n\r\nThis is very useful if the list contains a \"series of values\" and you need to pair them into \"Diffs\", and allows for very short code that iterates the `IEnumerable` only once, when otherwise using only LINQ extensions you'd need two:\r\n\r\n```cs\r\npublic IEnumerable<Vector3D> GetPolygonalChain(Point3D[] points) {\r\n  return points.Skip(1).Zip(points, (x1, x0) => x1 - x0);\r\n}\r\n\r\npublic IEnumerable<Vector3D> GetPolygonalChain(Point3D[] points) {\r\n  return points.ZipLink((x0, x1) => x1 - x0);\r\n}\r\n```\r\n\r\n```cs\r\npublic IEnumerable<Diff> GetDiffs(IEnumerable<Frame> frames) {\r\n  var fr = frames.ToList(); // Avoid multiple enumeration of \"frames\"\r\n  return fr.Skip(1).Zip(fr, (next, prev) => Diff.Create(prev, next));\r\n}\r\n\r\npublic IEnumerable<Diff> GetDiffs(IEnumerable<Frame> frames) {\r\n  return frames.ZipLink(Diff.Create);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/pull/37094","RelatedDescription":"Closed or merged PR \"Add IEnumerable ZipLink extension method\" (#37094)"},{"Id":"435798410","IsPullRequest":true,"CreatedAt":"2019-04-22T16:54:41","Actor":"luhenry","Number":"37092","RawContent":null,"Title":"Make GC.GetGCMemoryInfo public","State":"open","Body":"Fix https://github.com/dotnet/corefx/issues/34631","Url":"https://github.com/dotnet/corefx/pull/37092","RelatedDescription":"Open PR \"Make GC.GetGCMemoryInfo public\" (#37092)"},{"Id":"435794483","IsPullRequest":false,"CreatedAt":"2019-04-22T16:43:20","Actor":"cston","Number":"37091","RawContent":null,"Title":"Microsoft.VisualBasic.FileSystem.CloseAllFiles() should close all files","State":"open","Body":"`Microsoft.VisualBasic.FileSystem.CloseAllFiles()` should close all files once the `Module FileSystem` has been ported.\r\n\r\nSee https://github.com/dotnet/corefx/pull/37085#discussion_r277343922.","Url":"https://github.com/dotnet/corefx/issues/37091","RelatedDescription":"Open issue \"Microsoft.VisualBasic.FileSystem.CloseAllFiles() should close all files\" (#37091)"},{"Id":"435636801","IsPullRequest":true,"CreatedAt":"2019-04-22T16:03:52","Actor":"stephentoub","Number":"37086","RawContent":null,"Title":"Fix conditional fact in ArrayBufferWriter tests","State":"closed","Body":"Fixes #37084 \r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/37086","RelatedDescription":"Closed or merged PR \"Fix conditional fact in ArrayBufferWriter tests\" (#37086)"},{"Id":"435577901","IsPullRequest":false,"CreatedAt":"2019-04-22T16:03:52","Actor":"dotnet-mc-bot","Number":"37084","RawContent":null,"Title":"Test failure: System.Buffers.Tests.ArrayBufferWriterTests_Byte/InvalidAdvance_Large","State":"closed","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Buffers.Tests.ArrayBufferWriterTests_Byte/InvalidAdvance_Large` has failed.\n\nFailure Message:\n```\nSystem.InvalidOperationException : An appropriate member 'IsX64' could not be found. The conditional method needs to be a static method or property on the type System.Buffers.Tests.ArrayBufferWriterTests`1[System.Byte] or any ancestor, of any visibility, accepting zero arguments, and having a return type of Boolean.\n```\n\nStack Trace:\n```\n\n```\n\nBuild : 3.0 - 20190421.5 (Core Tests)\nFailing configurations:\n- Fedora.29.Amd64-x64\n  - Release\n- Fedora.28.Amd64-x64\n  - Release\n- SLES.15.Amd64-x64\n  - Release\n- SLES.12.Amd64-x64\n  - Release\n- OpenSuse.42.Amd64-x64\n  - Release\n- Ubuntu.1810.Amd64-x64\n  - Release\n- Ubuntu.1804.Amd64-x64\n  - Release\n- Ubuntu.1604.Amd64-x64\n  - Release\n- Debian.9.Amd64-x64\n  - Release\n- Debian.8.Amd64-x64\n  - Release\n- RedHat.7.Amd64-x64\n  - Release\n- Centos.7.Amd64-x64\n  - Release\n- RedHat.6.Amd64-x64\n  - Release\n- Alpine.39.Amd64-x64\n  - Release\n- Windows.10.Arm64-arm64\n  - Release\n- Alpine.38.Amd64-x64\n  - Release\n- Ubuntu.1604.Arm64-arm64\n  - Release\n- Debian.9.Arm32-arm\n  - Release\n- Alpine.38.Arm64-arm64\n  - Release\n- Windows.10.Amd64.ClientRS4-x86\n  - Release\n- Windows.10.Amd64.Core-x86\n  - Release\n- Windows.10.Nano.Amd64-x64\n  - Release\n- Windows.81.Amd64-x86\n  - Release\n- Windows.10.Amd64.ClientRS4-x64\n  - Release\n- Windows.7.Amd64-x86\n  - Release\n- Windows.10.Amd64.Core-x64\n  - Release\n- Windows.81.Amd64-x64\n  - Release\n- Windows.7.Amd64-x64\n  - Release\n- OSX.1014.Amd64-x64\n  - Release\n- OSX.1013.Amd64-x64\n  - Release\n- OSX.1012.Amd64-x64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190421.5/workItem/System.Memory.Tests/analysis/xunit/System.Buffers.Tests.ArrayBufferWriterTests_Byte~2FInvalidAdvance_Large","Url":"https://github.com/dotnet/corefx/issues/37084","RelatedDescription":"Closed issue \"Test failure: System.Buffers.Tests.ArrayBufferWriterTests_Byte/InvalidAdvance_Large\" (#37084)"},{"Id":"435555481","IsPullRequest":true,"CreatedAt":"2019-04-22T14:06:21","Actor":"sdmaclea","Number":"37080","RawContent":null,"Title":"Revise and disable CreateInstanceAssemblyResolve","State":"closed","Body":"dotnet/coreclr#24154 will remove the quirk the CreateInstanceAssemblyResolve\r\ntest was testing. It will now throw a FileNotFoundException, without triggering\r\na resolving event.","Url":"https://github.com/dotnet/corefx/pull/37080","RelatedDescription":"Closed or merged PR \"Revise and disable CreateInstanceAssemblyResolve\" (#37080)"},{"Id":"435711417","IsPullRequest":true,"CreatedAt":"2019-04-22T13:25:10","Actor":"dotnet-maestro[bot]","Number":"37089","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190421.72\r\n- **Date Produced**: 4/22/2019 12:43 AM\r\n- **Commit**: a36bc61442d89d0b5c58b0b14e7bd3bde218f24d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27621-72\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27621-72\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview5-27621-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#37089)"},{"Id":"435713534","IsPullRequest":true,"CreatedAt":"2019-04-22T12:42:35","Actor":"dotnet-maestro[bot]","Number":"37090","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190422.1\r\n- **Date Produced**: 4/22/2019 11:18 AM\r\n- **Commit**: f0801f43ca046737efb933d07b741838f5197e19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190422.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37090","RelatedDescription":"Open PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#37090)"},{"Id":"435707430","IsPullRequest":true,"CreatedAt":"2019-04-22T12:18:20","Actor":"dotnet-maestro[bot]","Number":"37088","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190421.5\r\n- **Date Produced**: 4/21/2019 9:52 PM\r\n- **Commit**: b96247e76506e81ff6eb28dd2a14914a59e2a257\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19221.5\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37088","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#37088)"},{"Id":"435706299","IsPullRequest":true,"CreatedAt":"2019-04-22T12:13:42","Actor":"dotnet-maestro[bot]","Number":"37087","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190421.08\r\n- **Date Produced**: 4/22/2019 4:00 AM\r\n- **Commit**: 416ae9f2f223d349130198b96d7ce9c617fa25cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27621-08\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview5-27621-08\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview5-27621-08\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37087","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#37087)"},{"Id":"435577200","IsPullRequest":false,"CreatedAt":"2019-04-22T02:33:02","Actor":"dotnet-mc-bot","Number":"37083","RawContent":null,"Title":"Test failure: System.Diagnostics.Tests.ProcessTests/ProcessStart_OpenFileOnLinux_UsesSpecifiedProgram(programToOpenWith: \\\"vi\\\")","State":"open","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Diagnostics.Tests.ProcessTests/ProcessStart_OpenFileOnLinux_UsesSpecifiedProgram(programToOpenWith: \\\"vi\\\")` has failed.\n\nFailure Message:\n```\nAssert.Equal() Failure\n            ↓ (pos 2)\nExpected: vi\nActual:   vim-nox11\n            ↑ (pos 2)\n```\n\nStack Trace:\n```\n   at System.Diagnostics.Tests.ProcessTests.ProcessStart_OpenFileOnLinux_UsesSpecifiedProgram(String programToOpenWith) in /__w/1/s/src/System.Diagnostics.Process/tests/ProcessTests.Unix.cs:line 285\n```\n\nBuild : 3.0 - 20190421.5 (Core Tests)\nFailing configurations:\n- SLES.15.Amd64-x64\n  - Release\n- SLES.12.Amd64-x64\n  - Release\n- OpenSuse.42.Amd64-x64\n  - Release\n- Ubuntu.1810.Amd64-x64\n  - Release\n- Ubuntu.1804.Amd64-x64\n  - Release\n- Ubuntu.1604.Amd64-x64\n  - Release\n- Debian.9.Amd64-x64\n  - Release\n- Debian.8.Amd64-x64\n  - Release\n- Alpine.39.Amd64-x64\n  - Release\n- Alpine.38.Amd64-x64\n  - Release\n- Alpine.38.Arm64-arm64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190421.5/workItem/System.Diagnostics.Process.Tests/analysis/xunit/System.Diagnostics.Tests.ProcessTests~2FProcessStart_OpenFileOnLinux_UsesSpecifiedProgram(programToOpenWith:%20%5C%22vi%5C%22)","Url":"https://github.com/dotnet/corefx/issues/37083","RelatedDescription":"Open issue \"Test failure: System.Diagnostics.Tests.ProcessTests/ProcessStart_OpenFileOnLinux_UsesSpecifiedProgram(programToOpenWith: \\\"vi\\\")\" (#37083)"},{"Id":"435576329","IsPullRequest":false,"CreatedAt":"2019-04-22T02:27:06","Actor":"dotnet-mc-bot","Number":"37082","RawContent":null,"Title":"Test failure: System.Diagnostics.Tests.ProcessTests/GetProcesses_RemoteMachinePath_ReturnsExpected","State":"open","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Diagnostics.Tests.ProcessTests/GetProcesses_RemoteMachinePath_ReturnsExpected` has failed.\n\nFailure Message:\n```\nSystem.Security.Authentication.AuthenticationException : The user name or password is incorrect.\\r\n---- System.DirectoryServices.DirectoryServicesCOMException : The user name or password is incorrect.\n```\n\nStack Trace:\n```\n   at System.DirectoryServices.ActiveDirectory.PropertyManager.GetPropertyValue(DirectoryContext context, DirectoryEntry directoryEntry, String propertyName) in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\ActiveDirectory\\PropertyManager.cs:line 155\n   at System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext context) in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\ActiveDirectory\\Domain.cs:line 110\n   at System.Diagnostics.Tests.ProcessTests.GetProcesses_RemoteMachinePath_ReturnsExpected() in F:\\workspace\\_work\\1\\s\\src\\System.Diagnostics.Process\\tests\\ProcessTests.cs:line 1069\n----- Inner Stack Trace -----\n   at System.DirectoryServices.DirectoryEntry.Bind(Boolean throwIfFail) in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\DirectoryEntry.cs:line 526\n   at System.DirectoryServices.PropertyValueCollection.PopulateList() in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\PropertyValueCollection.cs:line 189\n   at System.DirectoryServices.PropertyValueCollection..ctor(DirectoryEntry entry, String propertyName) in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\PropertyValueCollection.cs:line 33\n   at System.DirectoryServices.PropertyCollection.get_Item(String propertyName) in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\PropertyCollection.cs:line 42\n   at System.DirectoryServices.ActiveDirectory.PropertyManager.GetPropertyValue(DirectoryContext context, DirectoryEntry directoryEntry, String propertyName) in F:\\workspace\\_work\\1\\s\\src\\System.DirectoryServices\\src\\System\\DirectoryServices\\ActiveDirectory\\PropertyManager.cs:line 141\n```\n\nBuild : 3.0 - 20190421.5 (Core Tests)\nFailing configurations:\n- Windows.10.Arm64-arm64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190421.5/workItem/System.Diagnostics.Process.Tests/analysis/xunit/System.Diagnostics.Tests.ProcessTests~2FGetProcesses_RemoteMachinePath_ReturnsExpected","Url":"https://github.com/dotnet/corefx/issues/37082","RelatedDescription":"Open issue \"Test failure: System.Diagnostics.Tests.ProcessTests/GetProcesses_RemoteMachinePath_ReturnsExpected\" (#37082)"},{"Id":"435558886","IsPullRequest":true,"CreatedAt":"2019-04-21T23:43:58","Actor":"sdmaclea","Number":"37081","RawContent":null,"Title":"Reenable tests","State":"open","Body":"Reenable tests fixed by dotnet/coreclr#24135 & dotnet/coreclr#24154\r\n\r\nBlocked on coreclr bits","Url":"https://github.com/dotnet/corefx/pull/37081","RelatedDescription":"Open PR \"Reenable tests\" (#37081)"},{"Id":"435548181","IsPullRequest":true,"CreatedAt":"2019-04-21T21:08:11","Actor":"jimdemis","Number":"37079","RawContent":null,"Title":"Fixes compression method override of zero-length files","State":"open","Body":"Fixes #30317. When a zero-length file is stored using compression method, ZipArchive still overrides the method to “not compressed”, and ignore compressed bytes that are still present, rendering the zip file unusable.\r\n\r\nAdditional feedback is necessary because according to [zip format specifications 4.3.8]( https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT):\r\n` Zero-byte files, directories, and other file types that contain no content **MUST NOT** include file data.\r\n`\r\n\r\nReproduction:\r\n1. Zip file contains zero-byte file marked as `Deflate 0x08`, uncompressed size 0 and compressed 2 bytes\r\n2. Calling ZipArchive constructor and disposing it will trigger archive rewriting\r\n3. While rewriting, ZipArchive does not expect zero-byte file with `uncompressedSize==0` to have `file data`, so it changes the compression method to `Stored 0x00`, but keeps the `file data`\r\n4. The `file data` left inside the archive, will render it unusable.\r\n\r\nPossible solutions:\r\n1. Ignore the content and continue (that's what I did now)\r\n2. Remove the `file data` \r\n2. Throw `InvalidDataException`\r\n\r\n/cc @buyaa-n, @ahsonkhan, @ViktorHofer\r\n","Url":"https://github.com/dotnet/corefx/pull/37079","RelatedDescription":"Open PR \"Fixes compression method override of zero-length files\" (#37079)"},{"Id":"435521017","IsPullRequest":false,"CreatedAt":"2019-04-21T15:36:00","Actor":"martincostello","Number":"37078","RawContent":null,"Title":"NullReferenceException calling JsonSerializer.ReadAsync<T>()","State":"open","Body":"As per https://github.com/dotnet/corefx/issues/36611#issuecomment-485161258, I have an existing ASP.NET Core 2.2 application I've updated to use ASP.NET Core 3.0 preview 4 where I tried to plug in System.Text.Json into Refit's `IContentSerializer` interface as a replacement for Newtonsoft.Json.\r\n\r\nHowever, when trying to deserialize a JSON stream for various application models to their POCOs, a `NullReferenceException` is thrown.\r\n\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at void System.Text.Json.Serialization.ReadStackFrame.SetReturnValue(object value, JsonSerializerOptions options, ref ReadStackFrame current, bool setPropertyDirectly)\r\n   at bool System.Text.Json.Serialization.JsonSerializer.HandleNull(ref Utf8JsonReader reader, ref ReadStack state, JsonSerializerOptions options)\r\n   at void System.Text.Json.Serialization.JsonSerializer.ReadCore(JsonSerializerOptions options, ref Utf8JsonReader reader, ref ReadStack state)\r\n   at void System.Text.Json.Serialization.JsonSerializer.ReadCore(ref JsonReaderState readerState, bool isFinalBlock, Span<byte> buffer, JsonSerializerOptions options, ref ReadStack state)\r\n   at async ValueTask<TValue> System.Text.Json.Serialization.JsonSerializer.ReadAsync<TValue>(Stream utf8Json, Type returnType, JsonSerializerOptions options, CancellationToken cancellationToken)\r\n   at TResult System.Threading.Tasks.ValueTask<TResult>.get_Result()\r\n```\r\n\r\nA repro for the issue can be found here: https://github.com/martincostello/JsonSerializer-NullReferenceException-Repro\r\n\r\nThe object graph is probably more verbose that needed for a minimum LoC repro, but except for the models and properties being renamed and the JSON string simplified, this is the same as the application that presented the issue.\r\n\r\nThe essence of the code that throws is:\r\n\r\n```cs\r\nvar json = \"{ ... large JSON model with nested objects and null values ... }\";\r\nvar buffer = Encoding.UTF8.GetBytes(json);\r\nvar utf8Json = new MemoryStream(buffer);\r\nvar options = new JsonSerializerOptions();\r\n\r\nvar model = await JsonSerializer.ReadAsync<RootObject>(utf8Json, options);\r\n```\r\n\r\n/cc @BrennanConroy ","Url":"https://github.com/dotnet/corefx/issues/37078","RelatedDescription":"Open issue \"NullReferenceException calling JsonSerializer.ReadAsync<T>()\" (#37078)"},{"Id":"435913861","IsPullRequest":false,"CreatedAt":"2019-04-12T02:20:57","Actor":"DSBRBrasil","Number":"37104","RawContent":null,"Title":".NET Core fails XML validation while .NET Framework succeeds","State":"open","Body":"Hi,\r\nWhy, I don't  validate a document using .net standard 2.0? I get that's message: Type not declared\r\nThat's my code:\r\n```\r\n var xDoc = XDocument.Parse(\"<consStatServ versao=\\\"4.00\\\" xmlns=\\\"http://www.portalfiscal.inf.br/nfe\\\"><tpAmb>2</tpAmb><cUF>29</cUF><xServ>STATUS</xServ></consStatServ>\");\r\n   var xss = new XmlSchemaSet();\r\n   xss.Add(\"http://www.portalfiscal.inf.br/nfe\", @\"D:\\Schemas\\consStatServ_v4.00.xsd\");\r\n   //Validar Xml\r\n   xDoc.Validate(xss, (sender, args) =>\r\n            {\r\n                throw new FalhaValidacaoSchemaException(args.Message);\r\n\r\n            });\r\n```","Url":"https://github.com/dotnet/corefx/issues/37104","RelatedDescription":"Open issue \".NET Core fails XML validation while .NET Framework succeeds\" (#37104)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"435970498","IsPullRequest":false,"CreatedAt":"2019-04-23T02:34:12","Actor":"amat27","Number":"35195","RawContent":null,"Title":"Make call hierarchy more compact","State":"open","Body":"**Version Used**: \r\nVS 2019 16.0.1\r\n**Steps to Reproduce**:\r\nUse \"Call Hierarchy\" function on a method\r\n\r\n**Expected Behavior**:\r\nGet a compact view of all possible callers. Below is what ReSharper provides:\r\n![rsch](https://user-images.githubusercontent.com/5901497/56548646-3092f700-65b3-11e9-93cd-4fc66bd7a566.png)\r\n\r\n**Actual Behavior**:\r\nA more cumbersome call hierarchy view for the almost same content:\r\n![vsch](https://user-images.githubusercontent.com/5901497/56548609-16591900-65b3-11e9-8e84-fcb7b90b6f34.png)","Url":"https://github.com/dotnet/roslyn/issues/35195","RelatedDescription":"Open issue \"Make call hierarchy more compact\" (#35195)"},{"Id":"435940465","IsPullRequest":true,"CreatedAt":"2019-04-23T01:30:06","Actor":"dotnet-bot","Number":"35193","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35193","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35193)"},{"Id":"435949776","IsPullRequest":true,"CreatedAt":"2019-04-23T00:47:48","Actor":"genlu","Number":"35194","RawContent":null,"Title":"Using FQN instead of adding import during ENC session","State":"open","Body":"@tmat This feels like a better approach than listening to the debugger events, as completion provider is mostly stateless. What do you think?\r\n \r\nFYI @dpoeschl This is not intended to be merged before snap today, just need to target some branch. Will decide and retarget if necessary to the proper branch later.","Url":"https://github.com/dotnet/roslyn/pull/35194","RelatedDescription":"Open PR \"Using FQN instead of adding import during ENC session\" (#35194)"},{"Id":"435831391","IsPullRequest":true,"CreatedAt":"2019-04-23T00:00:05","Actor":"dotnet-bot","Number":"35177","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35177","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35177)"},{"Id":"435939372","IsPullRequest":false,"CreatedAt":"2019-04-22T23:55:24","Actor":"amirhosseinbk","Number":"35192","RawContent":null,"Title":"Source decomipler shows the signature only","State":"open","Body":"**Version Used**: \r\n2017\r\n**Steps to Reproduce**:\r\n\r\nEnable Navigation to decompiled sources in Visual studio for C# and then try to navigate to the source code of CloudQueue.AddMessageAsync this would only show the signature of the method rather than its implementation details \r\n\r\n**Expected Behavior**:\r\nResharper would navigate to a decompiled version of DLL and show the details of the function and it is possible to go further into the code.\r\n\r\n**Actual Behavior**:\r\nJust the signature of the functions are displayed with no useful code.","Url":"https://github.com/dotnet/roslyn/issues/35192","RelatedDescription":"Open issue \"Source decomipler shows the signature only\" (#35192)"},{"Id":"435895158","IsPullRequest":true,"CreatedAt":"2019-04-22T23:26:41","Actor":"jaredpar","Number":"35186","RawContent":null,"Title":"Re-enable set -e ","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35186","RelatedDescription":"Closed or merged PR \"Re-enable set -e \" (#35186)"},{"Id":"435908243","IsPullRequest":true,"CreatedAt":"2019-04-22T21:53:46","Actor":"333fred","Number":"35191","RawContent":null,"Title":"Implement IMethodSymbol.ReceiverNullableAnnotation","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/35034. @dotnet/roslyn-compiler please review.","Url":"https://github.com/dotnet/roslyn/pull/35191","RelatedDescription":"Open PR \"Implement IMethodSymbol.ReceiverNullableAnnotation\" (#35191)"},{"Id":"435904916","IsPullRequest":false,"CreatedAt":"2019-04-22T21:43:00","Actor":"wanton7","Number":"35190","RawContent":null,"Title":"nullable reference non-nullability ignored on interface method call","State":"open","Body":"**Version Used**: \r\n.NET Core 3.0 preview 4\r\n\r\n**Steps to Reproduce**:\r\nUsing Microsoft Orleans 2.3\r\n```csharp\r\npublic class HelloRequest\r\n{\r\n    public string? Value { get; set; }\r\n}\r\n\r\n[HttpPost]\r\npublic async Task<IActionResult> Hello([FromBody]HelloRequest hello)\r\n{\r\n    var value = await _grainFactory.GetGrain<IHello>(0).SayHello(hello.Value);\r\n    return new JsonResult(new { value = value });\r\n}\r\n\r\npublic interface IHello : Orleans.IGrainWithIntegerKey\r\n{\r\n    Task<string> SayHello(string greeting);\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCalling SayHello method would produce some sort of nullability warning because HelloRequest.Value is nullable reference type and SayHello parameter is non-nullable.\r\n\r\n**Actual Behavior**:\r\nNo warning and it seems that even just calling `var value = await _grainFactory.GetGrain<IHello>(0).SayHello(null)` doesn't produce any warning.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35190","RelatedDescription":"Open issue \"nullable reference non-nullability ignored on interface method call\" (#35190)"},{"Id":"435904428","IsPullRequest":true,"CreatedAt":"2019-04-22T21:41:26","Actor":"AlekseyTs","Number":"35189","RawContent":null,"Title":"Revert two step initialization of base type in PENamedTypeSymbol.","State":"open","Body":"Related to #28834.\r\n\r\nAlso, remove obsolete comments from a test. Closes #30003.","Url":"https://github.com/dotnet/roslyn/pull/35189","RelatedDescription":"Open PR \"Revert two step initialization of base type in PENamedTypeSymbol.\" (#35189)"},{"Id":"435904145","IsPullRequest":false,"CreatedAt":"2019-04-22T21:40:34","Actor":"vsfeedback","Number":"35188","RawContent":null,"Title":"InteliSence character c# not match japanese","State":"open","Body":"<p>VSF_TYPE_MARKDOWNWhen Japanese is used for C # variable names and method names, Intellisense only responds with a forward match.</p><p>In Visual studio 2013, it worked correctly.\nThis phenomenon occurs in Visual studio 2015 and later, including Visual studio 2019.</p><p>```\n            //It works normally.\n            int EnglishVariable = 0;\n            //Typing &quot;vari&quot; causes Intellisense to display &quot;EnblishVariable&quot;.</p><p>            //It does not work.\n            int 日本語の変数名 = 0;\n            //Typing &quot;変数名&quot; does not show &quot;日本語の変数名&quot; in Intellisense.\n            //Typing &quot;日本語&quot; causes Intellisense to display &quot;日本語の変数名&quot;.</p><p>```</p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/67017-intellisense-dose-not-work.png\"> Image:67017-intellisense-dose-not-work.png</a></p>\n<p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/519645/intelisence-character-c-not-match-japanese.html\nVSTS ticketId: 841021_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/8/2019, 01:56 AM (14 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nk_matsumoto on 4/10/2019, 00:07 AM (12 days ago): <p>Sample Code.</p><pre>//It works normally.\nint EnblishVariable = 0;\n//Typing \"vari\" causes Intellisense to display \"EnblishVariable\".\n\n//It does not work.\nint 日本語の変数名 = 0;\n//Typing \"変数名\" does not show \"日本語の変数名\" in Intellisense.\n//Typing \"日本語\" causes Intellisense to display \"日本語の変数名\".<br></pre>\n\nJane Wu [MSFT] on 4/10/2019, 01:12 AM (12 days ago): <p>Translated from Bing:</p><p>Sample Code.</p><pre><strong></strong><u></u><sub></sub><sup></sup>// It works normally.\nint EnblishVariable = 0;\n// Typing \"vari\" causes Intellisense to display \"EnblishVariable\".\n// It does not work.\nint Japanese variable name = 0;\n// Typing \"variable name\" does not show \"Japanese variable name\" in Intellisense.\n// Typing \"Japanese\" causes Intellisense to display \"Japanese variable name\".<br></pre>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35188","RelatedDescription":"Open issue \"InteliSence character c# not match japanese\" (#35188)"},{"Id":"435903693","IsPullRequest":false,"CreatedAt":"2019-04-22T21:39:10","Actor":"vsfeedback","Number":"35187","RawContent":null,"Title":"IntelliSense does not insert parentheses at the end of suggested method.","State":"open","Body":"VSF_TYPE_MARKDOWNFor example I have some variable &quot;list&quot; of IList&lt;T&gt; type.\nWhen I type &quot;list.&quot; IntelliSense suggest a &quot;Find&quot; method, then I press Enter key and then I get only &quot;list.Find&quot;, but not expected &quot;list.Find();&quot; . So then I have to add parentheses by myself. How can I fix this behaviour?\n\nI am currently using VS 2019 Community with no extensions installed.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/518751/intellisense-does-not-insert-parentheses-at-the-en.html\nVSTS ticketId: 839865_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/8/2019, 01:38 AM (14 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35187","RelatedDescription":"Open issue \"IntelliSense does not insert parentheses at the end of suggested method.\" (#35187)"},{"Id":"435831244","IsPullRequest":true,"CreatedAt":"2019-04-22T21:30:10","Actor":"dotnet-bot","Number":"35175","RawContent":null,"Title":"Merge dev16.0-vs-deps to dev16.1-preview2-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into dev16.1-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-dev16.1-preview2-vs-deps\ngit reset --hard upstream/dev16.1-preview2-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-dev16.1-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35175","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to dev16.1-preview2-vs-deps\" (#35175)"},{"Id":"435868087","IsPullRequest":true,"CreatedAt":"2019-04-22T21:21:52","Actor":"jaredpar","Number":"35181","RawContent":null,"Title":"Binary log for Unix bootstrap","State":"closed","Body":"Generate a binary log file for the bootstrap phase on Unix platforms.","Url":"https://github.com/dotnet/roslyn/pull/35181","RelatedDescription":"Closed or merged PR \"Binary log for Unix bootstrap\" (#35181)"},{"Id":"435883039","IsPullRequest":true,"CreatedAt":"2019-04-22T20:40:32","Actor":"dpoeschl","Number":"35185","RawContent":null,"Title":"Update PublishData for Dev16.1 Preview 3","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35185","RelatedDescription":"Open PR \"Update PublishData for Dev16.1 Preview 3\" (#35185)"},{"Id":"435881956","IsPullRequest":true,"CreatedAt":"2019-04-22T20:37:49","Actor":"RikkiGibson","Number":"35184","RawContent":null,"Title":"Don't allow void to convert to object via user-defined conversion","State":"open","Body":"Fixes #34872\r\n\r\nIf anyone can think of any more cases that ensure we catch attempts to convert to/from void it would be appreciated.","Url":"https://github.com/dotnet/roslyn/pull/35184","RelatedDescription":"Open PR \"Don't allow void to convert to object via user-defined conversion\" (#35184)"},{"Id":"435879407","IsPullRequest":true,"CreatedAt":"2019-04-22T20:30:39","Actor":"dpoeschl","Number":"35183","RawContent":null,"Title":"Bump version to 3.1.0-beta4","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35183","RelatedDescription":"Open PR \"Bump version to 3.1.0-beta4\" (#35183)"},{"Id":"435877154","IsPullRequest":true,"CreatedAt":"2019-04-22T20:24:32","Actor":"dpoeschl","Number":"35182","RawContent":null,"Title":"Add Roslyn Dev16.1 Preview 3 entries to azure-pipelines .yml files","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35182","RelatedDescription":"Open PR \"Add Roslyn Dev16.1 Preview 3 entries to azure-pipelines .yml files\" (#35182)"},{"Id":"435856706","IsPullRequest":false,"CreatedAt":"2019-04-22T19:28:47","Actor":"kendrahavens","Number":"35180","RawContent":null,"Title":"Offer codefixes on selections","State":"open","Body":"## Scenario\r\nCodefixes often don't show if code is selected as opposed to only having your cursor placed within a word.\r\n*  **5 out of the 11 users struggled with this in user studies.** \r\n* One user **only** ever double-clicked when clicking around the editor. This means he saw fewer codefixes since double clicking always selects the word and we don't show available codefixes in the context. Some users are used to double-clicking around their codebase.\r\n\r\n## Proposal\r\nEnable the same codefixes to appear if a block is selected as would appear if the cursor was placed inside a specific name. If this improves discoverability of codefixes we can enable this on a case-by-case basis per refactoring. My study observed more issues with the 'pull members up to base type' refactoring than others though general struggling was observed with many refactorings.\r\n\r\n**Example: Pull members up**\r\nCodefix offered when cursor is in the name:\r\n![image](https://user-images.githubusercontent.com/8293542/56520118-8bb3e380-64f8-11e9-94fa-b79c60ed7ddb.png)\r\n\r\nCodefix not offered if full line is selected:\r\n![image](https://user-images.githubusercontent.com/8293542/56520215-bf8f0900-64f8-11e9-9022-7a5ebd464553.png)\r\n\r\n**Example: Convert local function to method**\r\nOffered if cursor is in name\r\n![image](https://user-images.githubusercontent.com/8293542/56520344-0d0b7600-64f9-11e9-8fb9-6ac6d7b8de69.png)\r\n\r\nNot offered when entire local function is selected\r\n![image](https://user-images.githubusercontent.com/8293542/56520368-1ac0fb80-64f9-11e9-92a4-49037caea806.png)\r\n\r\n**Example: LINQ to Foreach conversions**\r\n![image](https://user-images.githubusercontent.com/8293542/56521136-1517e580-64fa-11e9-828a-a23aa22d8ce2.png)\r\n\r\nIf semi-colon is included in selection the conversion does not appear:\r\n![image](https://user-images.githubusercontent.com/8293542/56521033-00d3e880-64fa-11e9-849f-2cc7a675f3ff.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35180","RelatedDescription":"Open issue \"Offer codefixes on selections\" (#35180)"},{"Id":"435855015","IsPullRequest":false,"CreatedAt":"2019-04-22T19:24:06","Actor":"gafter","Number":"35179","RawContent":null,"Title":"Implied type parameter constraint of a partial method vs nullable context","State":"open","Body":"This issue relates to the implementation of the LDM resolution for https://github.com/dotnet/csharplang/issues/2450 as discussed in the 2019-04-22 LDM.  Where this description conflicts with that described in the LDM minutes, the minutes should be considered correct (this is from memory and my memory may be faulty).\r\n\r\nFor a partial type, the constraints (implied or explicit) for the various parts of a partial must agree.  This is an existing rule.  We extend this rule for nullability to say that they must agree in nullability annotations as well (or we produce a warning), though a mismatch with `oblivious` does not require a warning.  We use the invariant merging rules to merge the constraints from the various parts.  The resulting merged constraints are used by the compiler in users of the type and within the body of the partial type.\r\n\r\nFor a partial method, callers of the method are analyzed against the declaration.  The body of the implementation is analyzed against the implementation's declared or implied constraints.  We produce a warning (or was it an error?  I'm not sure) at the implementation if there is a mismatch of type parameter constraints of nullable annotations `annotated` vs `unannotated` (though a mismatch with `oblivious` is ignored).\r\n","Url":"https://github.com/dotnet/roslyn/issues/35179","RelatedDescription":"Open issue \"Implied type parameter constraint of a partial method vs nullable context\" (#35179)"},{"Id":"435852050","IsPullRequest":false,"CreatedAt":"2019-04-22T19:16:00","Actor":"cartermp","Number":"35178","RawContent":null,"Title":"IntelliSense suggests GetType on a span, but it won't compile","State":"open","Body":"**Version Used**: \r\n\r\n* VS 2019 16.0.1\r\n* C# Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var sp = Span<int>.Empty;\r\n            var t = sp. // <<- Caret here\r\n            Console.WriteLine($\"Span.IsValueType: {t.IsValueType}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n\r\nSuggests `GetType()`\r\n\r\n![image](https://user-images.githubusercontent.com/6309070/56519667-7e4a2980-64f7-11e9-8e04-e490d313c5c1.png)\r\n\r\nAnd this results in a compile error:\r\n\r\n![image](https://user-images.githubusercontent.com/6309070/56520004-3d064980-64f8-11e9-9dd8-1a658174fbb1.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/35178","RelatedDescription":"Open issue \"IntelliSense suggests GetType on a span, but it won't compile\" (#35178)"},{"Id":"435831273","IsPullRequest":true,"CreatedAt":"2019-04-22T18:23:50","Actor":"dotnet-bot","Number":"35176","RawContent":null,"Title":"Merge dev16.1-preview2-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from dev16.1-preview2-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.1-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35176","RelatedDescription":"Open PR \"Merge dev16.1-preview2-vs-deps to master-vs-deps\" (#35176)"},{"Id":"435560016","IsPullRequest":true,"CreatedAt":"2019-04-22T18:22:35","Actor":"dotnet-bot","Number":"35169","RawContent":null,"Title":"Merge dev16.1-preview2-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview2-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.1-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35169","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview2-vs-deps to master-vs-deps\" (#35169)"},{"Id":"435822441","IsPullRequest":false,"CreatedAt":"2019-04-22T18:02:35","Actor":"amcasey","Number":"35174","RawContent":null,"Title":"Suggestion: Suppress AsyncStateMachineAttribute in metadata-as-source","State":"open","Body":"Repros in 15.6, so not a regression.\r\n\r\n```c#\r\n#region Assembly ClassLibrary34, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\r\n// C:\\Users\\acasey\\source\\repos\\ClassLibrary34\\ClassLibrary34\\bin\\Debug\\ClassLibrary34.dll\r\n#endregion\r\n\r\nusing System.Diagnostics;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ClassLibrary34\r\n{\r\n    public class Class1\r\n    {\r\n        public Class1();\r\n\r\n        [AsyncStateMachine(typeof(<DoAsync>d__0))]\r\n        [DebuggerStepThrough]\r\n        public Task DoAsync();\r\n    }\r\n}\r\n```\r\n\r\nIt is not very helpful to see `AsyncStateMachineAttribute` in the metadata-as-source view since it's an implementation detail and exposes mangled names that should not be depended upon.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35174","RelatedDescription":"Open issue \"Suggestion: Suppress AsyncStateMachineAttribute in metadata-as-source\" (#35174)"},{"Id":"435736418","IsPullRequest":false,"CreatedAt":"2019-04-22T13:58:57","Actor":"savpek","Number":"35173","RawContent":null,"Title":"Allow setting/updating DefaultNamespace for project at workspace","State":"open","Body":"I tried to make omnisharp-roslyn to support new SyncNamespace refactoring (https://github.com/dotnet/roslyn/pull/30920). However method http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/Workspace/Solution/Solution.cs,e596842b39b5f5f9 is internal. Is there other means to set default namespace for project at workspace?\r\n\r\nOmnisharp-roslyn issue https://github.com/OmniSharp/omnisharp-roslyn/issues/1475","Url":"https://github.com/dotnet/roslyn/issues/35173","RelatedDescription":"Open issue \"Allow setting/updating DefaultNamespace for project at workspace\" (#35173)"},{"Id":"435668387","IsPullRequest":false,"CreatedAt":"2019-04-22T09:40:39","Actor":"Dreamescaper","Number":"35172","RawContent":null,"Title":"Committing import completions corrupts Razor cshtml files","State":"open","Body":"**Version Used**: \r\ndev16.1-preview2 (after PR for import completions by @genlu )\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open cshtml file\r\n2. Type @, invoke intellisense \r\n3. Select and commit any import completion item\r\n\r\n**Expected Behavior**:\r\na) Razor import directive added to current document\r\nor\r\nb) Import completions are disabled for cshtml files\r\n\r\n\r\n**Actual Behavior**:\r\nText is removed at random position. Document becomes corrupted.\r\n\r\n![2019-04-22_12-47-44](https://user-images.githubusercontent.com/17177729/56494991-dcc5d680-64fc-11e9-86cf-a4b0064cd7d8.gif)\r\n","Url":"https://github.com/dotnet/roslyn/issues/35172","RelatedDescription":"Open issue \"Committing import completions corrupts Razor cshtml files\" (#35172)"},{"Id":"435598839","IsPullRequest":true,"CreatedAt":"2019-04-22T08:40:07","Actor":"dpoeschl","Number":"35171","RawContent":null,"Title":"Merge master into master-vs-deps","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35171","RelatedDescription":"Closed or merged PR \"Merge master into master-vs-deps\" (#35171)"},{"Id":"435562724","IsPullRequest":true,"CreatedAt":"2019-04-22T00:30:55","Actor":"agocke","Number":"35170","RawContent":null,"Title":"Add version check to enable the pattern-based Index & Range indexers","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35170","RelatedDescription":"Open PR \"Add version check to enable the pattern-based Index & Range indexers\" (#35170)"},{"Id":"435537287","IsPullRequest":false,"CreatedAt":"2019-04-21T18:57:36","Actor":"joshlang","Number":"35168","RawContent":null,"Title":"Nullable reference types + Anonymous objects ... a couple rough edges","State":"open","Body":"Check this out:\r\n\r\n    string x = \"\";\r\n\r\n    // This creates no warnings, but intellisense shows \"a\" as type \"string?\"\r\n    x = new { a = \"x\" }.a;\r\n\r\n    // This creates a warning\r\n    x = new[] { new { a = \"x\" } }[0].a;\r\n\r\n    // This creates a warning (the cast doesn't work)\r\n    x = new[] { new { a = (string)\"x\" } }[0].a;\r\n\r\nThere's a few similar open issues, but I'm not expert enough to know if there's a complete overlap.  If so, sorry :)\r\n\r\nThis does seem to be a bug since the docs say the nullability of the arguments are inferred from the initializing expression:  https://github.com/dotnet/roslyn/blob/master/docs/features/nullable-reference-types.md#anonymous-types\r\n\r\nI came across this when accessing properties downline from a Select projection in a LINQ expression.","Url":"https://github.com/dotnet/roslyn/issues/35168","RelatedDescription":"Open issue \"Nullable reference types + Anonymous objects ... a couple rough edges\" (#35168)"},{"Id":"435444060","IsPullRequest":false,"CreatedAt":"2019-04-20T21:38:21","Actor":"maca88","Number":"35167","RawContent":null,"Title":"SymbolFinder.FindReferencesAsync returns incorrect result in certain scenarios","State":"open","Body":"By having the following projects:\r\n- `NHibernate.Caches.Common`\r\n\tPackageReferences: `NHibernate`\r\n- `NHibernate.Caches.StackExchangeRedis`\r\n\tPackageReferences: `StackExchange.Redis`, `NHibernate`\r\n\tProjectReferences: `NHibernate.Caches.Common`\r\n\r\n`SymbolFinder.FindReferencesAsync` will return partial results for types that are defined in `NHibernate` package and also for their derived types located in `NHibernate` or `NHibernate.Caches.StackExchangeRedis` assembly.\r\nBy removing `StackExchange.Redis` or `NHibernate.Caches.Common` reference from the project `NHibernate.Caches.StackExchangeRedis`, `SymbolFinder.FindReferencesAsync` starts working as expected.\r\n\r\n\r\n**Version Used**: `3.0.0`, `2.10.0`, `2.7.0`\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Clone https://github.com/maca88/RoslynTest\r\n2. Run `RoslynTest` project\r\n\r\n**Expected Behavior**:\r\n`SymbolFinder.FindReferencesAsync` should return the same result for `ICache`, `CacheBase`, `FakeCache`, `HashtableCache`, `RedisCache`:\r\n```\r\nFindReferencesAsync for method: NHibernate.Cache.ICache.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Cache.CacheBase.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Cache.FakeCache.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Cache.HashtableCache.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object) from assembly: NHibernate.Caches.StackExchangeRedis\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\n```\r\n\r\n**Actual Behavior**:\r\n`SymbolFinder.FindReferencesAsync` returns different results for `ICache`, `CacheBase`, `FakeCache`, `HashtableCache` and `RedisCache`, where none of them contain all the references:\r\n```\r\nFindReferencesAsync for method: NHibernate.Cache.ICache.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Cache.CacheBase.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Cache.FakeCache.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.FakeCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Cache.HashtableCache.Get(object) from assembly: NHibernate\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.HashtableCache.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\nFindReferencesAsync for method: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object) from assembly: NHibernate.Caches.StackExchangeRedis\r\nReference definition: NHibernate.Cache.CacheBase.Get(object)\r\nReference definition: NHibernate.Cache.ICache.Get(object)\r\nReference definition: NHibernate.Caches.StackExchangeRedis.RedisCache.Get(object)\r\n---------------------------------------------------------------------------------------------\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/35167","RelatedDescription":"Open issue \"SymbolFinder.FindReferencesAsync returns incorrect result in certain scenarios\" (#35167)"},{"Id":"435427623","IsPullRequest":false,"CreatedAt":"2019-04-20T18:48:23","Actor":"jcouv","Number":"35166","RawContent":null,"Title":"Warn if `CancellationToken` parameter of async-iterator lacks `[EnumeratorCancellation]`?","State":"open","Body":"\r\nRelates to https://github.com/dotnet/roslyn/issues/24037 (umbrella for async-streams)","Url":"https://github.com/dotnet/roslyn/issues/35166","RelatedDescription":"Open issue \"Warn if `CancellationToken` parameter of async-iterator lacks `[EnumeratorCancellation]`?\" (#35166)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"435787375","IsPullRequest":true,"CreatedAt":"2019-04-22T23:19:29","Actor":"Dotnet-GitSync-Bot","Number":"7334","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel @tannergooding @dotnet-maestro-bot @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7334","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7334)"},{"Id":"435681026","IsPullRequest":false,"CreatedAt":"2019-04-22T10:28:48","Actor":"ifew","Number":"7333","RawContent":null,"Title":"I compiled Net Core with EFCore but waiting a long time","State":"open","Body":"I developing some native app and using MySql.Data.EntityFrameworkCore but waiting a long time for compile, I'm not sure to correct or not.\r\n\r\nand then I try another code from other (https://github.com/rubin55/dot-hello). it's same\r\n\r\nI don't know why?\r\n\r\nMy Code \r\nhttps://github.com/ifew/aws-lambda-lambdanative-db/tree/master/src/aws-lambda-lambdanative\r\n\r\nMy OS: MacOS Mojave\r\nCPU Intel Core i5 2.9 GHz\r\nMemory:\t8 GB\r\n\r\npx. sorry for bad English","Url":"https://github.com/dotnet/corert/issues/7333","RelatedDescription":"Open issue \"I compiled Net Core with EFCore but waiting a long time\" (#7333)"},{"Id":"435511136","IsPullRequest":true,"CreatedAt":"2019-04-21T13:43:21","Actor":"Suchiman","Number":"7332","RawContent":null,"Title":"Port GC changes from coreclr","State":"open","Body":"This port starts of as of https://github.com/dotnet/coreclr/commit/52aa019ec9bed8c08a2f8e230804b363bcaef6f4 where coreclr and corert GC directories were in sync.\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [starting commit](https://github.com/dotnet/coreclr/commit/52aa019ec9bed8c08a2f8e230804b363bcaef6f4):**\r\n- https://github.com/dotnet/coreclr/commit/5a7dc18f5985bd28ea798e6a9fc4b8ad5fef09ca (already merged)\r\n- https://github.com/dotnet/coreclr/commit/6570085031f7a03bd42cca3ffd82b00122d5e2a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cc315c9663d340e704d994808eb298447a84fd59 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/7bd38e8836611908298363688b7faac6eaf065ce (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6f6fda958dac38896abe9487def2242add822809 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/9a8106a6fc79649bd8296e84f457d10211eed9db (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/pull/9770/commits/6b7fec4f171c4840d772ce3c608018474a9c24ae (ommitted, not directly related to gc, but previous commit)\r\n\r\n**Points of interests**\r\nIn the last commit of this batch, i've transplanted the changes from `gcenv.ee.cpp` to `gcrhenv.cpp`.\r\nNot sure how to transplant the changes in gchelpers.cpp and jithelper asm changes.\r\nOne thing i've noticed while adjusting `gcrhenv.cpp`, is the lack of [FlushProcessWriteBuffers();](https://github.com/dotnet/coreclr/commit/9ae6ed25affc42343a3f88f147ff4a5fbd1e9727#diff-201b4e5e474739077d3e01e2f2dc4b9fL1277) calls in the corert codebase.\r\nOutside of the GC, corert also seems to miss software write watch.","Url":"https://github.com/dotnet/corert/pull/7332","RelatedDescription":"Open PR \"Port GC changes from coreclr\" (#7332)"},{"Id":"435405893","IsPullRequest":true,"CreatedAt":"2019-04-20T14:34:44","Actor":"MichalStrehovsky","Number":"7331","RawContent":null,"Title":"Implement NativeLibrary API on CoreRT","State":"open","Body":"The only thing that's missing is the DllImportResolver. It's easy, but I don't want to bloat this code review any more than is necessary. This is a lot of code.","Url":"https://github.com/dotnet/corert/pull/7331","RelatedDescription":"Open PR \"Implement NativeLibrary API on CoreRT\" (#7331)"},{"Id":"434505045","IsPullRequest":true,"CreatedAt":"2019-04-20T00:07:07","Actor":"jkotas","Number":"7320","RawContent":null,"Title":"Update objwriter version","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7320","RelatedDescription":"Closed or merged PR \"Update objwriter version\" (#7320)"},{"Id":"435226482","IsPullRequest":true,"CreatedAt":"2019-04-19T18:19:33","Actor":"Dotnet-GitSync-Bot","Number":"7330","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @krwq @safern","Url":"https://github.com/dotnet/corert/pull/7330","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7330)"},{"Id":"433456685","IsPullRequest":false,"CreatedAt":"2019-04-19T16:30:18","Actor":"josephmoresena","Number":"7307","RawContent":null,"Title":"Compile Gui.cs example win-x64","State":"closed","Body":"I am trying to compile an executable that includes https://github.com/migueldeicaza/gui.cs\r\nWhen I compile in Linux all is sucessfully, but when I try to compile in Windows I get the following error:\r\n`\r\nTerminal.obj : error LNK2001: unresolved external symbol dlopen [C:\\GitHub\\gui.cs\\Example\\Example.csproj]\r\nTerminal.obj : error LNK2001: unresolved external symbol dlsym [C:\\GitHub\\gui.cs\\Example\\Example.csproj]\r\nbin\\Debug\\netcoreapp2.2\\win-x64\\native\\Terminal.exe : fatal error LNK1120: 2 unresolved externals [C:\\GitHub\\gui.cs\\Example\\Example.csproj]`\r\nThe problem is related to a `[DllImport (\"__Internal\")]` for compatibility with Mono. \r\nI'm using IlCompiler version 1.0.0-alpha-27615-01\r\n","Url":"https://github.com/dotnet/corert/issues/7307","RelatedDescription":"Closed issue \"Compile Gui.cs example win-x64\" (#7307)"},{"Id":"435034664","IsPullRequest":false,"CreatedAt":"2019-04-19T16:29:55","Actor":"drearyrainDeng","Number":"7327","RawContent":null,"Title":"Question：how cli judge whether to compile native or managed code?","State":"closed","Body":"To example \"Hello World\".we just call command like that \"dotnet publish -r win-x64 -c release\"\r\nso dotnet  how to judge compile native or managed code?","Url":"https://github.com/dotnet/corert/issues/7327","RelatedDescription":"Closed issue \"Question：how cli judge whether to compile native or managed code?\" (#7327)"},{"Id":"435010848","IsPullRequest":true,"CreatedAt":"2019-04-19T16:04:45","Actor":"Dotnet-GitSync-Bot","Number":"7326","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @Anipik @tannergooding @krwq @safern @buyaa-n @bbartels","Url":"https://github.com/dotnet/corert/pull/7326","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7326)"},{"Id":"435162096","IsPullRequest":false,"CreatedAt":"2019-04-19T13:10:23","Actor":"MarcoRossignoli","Number":"7329","RawContent":null,"Title":"Cannot compile repo with VS2019","State":"closed","Body":"I've installed VS 2017/2019/2019 preview I cannot compile the repo:\r\n```\r\nF:\\git\\corert (master -> origin)\r\nλ build\r\nChecking pre-requisites...\r\n\r\nCommencing CoreRT Repo build\r\n\r\nCommencing build of native components for Windows_NT.x64.Debug\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.0.2\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\n[vcvarsall.bat] Environment initialized for: 'x86_x64'\r\nCMake Error: Could not create named generator Visual Studio 16 2019\r\n\r\nGenerators\r\n  Visual Studio 15 2017 [arch] = Generates Visual Studio 2017 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 14 2015 [arch] = Generates Visual Studio 2015 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 12 2013 [arch] = Generates Visual Studio 2013 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 11 2012 [arch] = Generates Visual Studio 2012 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\r\n  Visual Studio 10 2010 [arch] = Generates Visual Studio 2010 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"IA64\".\r\n  Visual Studio 9 2008 [arch]  = Generates Visual Studio 2008 project files.\r\n                                 Optional [arch] can be \"Win64\" or \"IA64\".\r\n  Visual Studio 8 2005 [arch]  = Deprecated.  Generates Visual Studio 2005\r\n                                 project files.  Optional [arch] can be\r\n                                 \"Win64\".\r\n  Borland Makefiles            = Generates Borland makefiles.\r\n  NMake Makefiles              = Generates NMake makefiles.\r\n  NMake Makefiles JOM          = Generates JOM makefiles.\r\n  Green Hills MULTI            = Generates Green Hills MULTI files\r\n                                 (experimental, work-in-progress).\r\n  MSYS Makefiles               = Generates MSYS makefiles.\r\n  MinGW Makefiles              = Generates a make file for use with\r\n                                 mingw32-make.\r\n  Unix Makefiles               = Generates standard UNIX makefiles.\r\n  Ninja                        = Generates build.ninja files.\r\n  Watcom WMake                 = Generates Watcom WMake makefiles.\r\n  CodeBlocks - MinGW Makefiles = Generates CodeBlocks project files.\r\n  CodeBlocks - NMake Makefiles = Generates CodeBlocks project files.\r\n  CodeBlocks - NMake Makefiles JOM\r\n                               = Generates CodeBlocks project files.\r\n  CodeBlocks - Ninja           = Generates CodeBlocks project files.\r\n  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.\r\n  CodeLite - MinGW Makefiles   = Generates CodeLite project files.\r\n  CodeLite - NMake Makefiles   = Generates CodeLite project files.\r\n  CodeLite - Ninja             = Generates CodeLite project files.\r\n  CodeLite - Unix Makefiles    = Generates CodeLite project files.\r\n  Sublime Text 2 - MinGW Makefiles\r\n                               = Generates Sublime Text 2 project files.\r\n  Sublime Text 2 - NMake Makefiles\r\n                               = Generates Sublime Text 2 project files.\r\n  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.\r\n  Sublime Text 2 - Unix Makefiles\r\n                               = Generates Sublime Text 2 project files.\r\n  Kate - MinGW Makefiles       = Generates Kate project files.\r\n  Kate - NMake Makefiles       = Generates Kate project files.\r\n  Kate - Ninja                 = Generates Kate project files.\r\n  Kate - Unix Makefiles        = Generates Kate project files.\r\n  Eclipse CDT4 - NMake Makefiles\r\n                               = Generates Eclipse CDT 4.0 project files.\r\n  Eclipse CDT4 - MinGW Makefiles\r\n                               = Generates Eclipse CDT 4.0 project files.\r\n  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.\r\n  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.\r\n\r\nFailed to generate native component build project\r\nNative component build failed. Refer F:\\git\\corert\\buildscripts\\..\\bin\\Logs\\Native_Windows_NT__x64__Debug.log for details.\r\n```\r\nThere is no file in `Log` directory.\r\nSure I'm missing something, maybe some vs component.","Url":"https://github.com/dotnet/corert/issues/7329","RelatedDescription":"Closed issue \"Cannot compile repo with VS2019\" (#7329)"},{"Id":"435054675","IsPullRequest":true,"CreatedAt":"2019-04-19T06:32:55","Actor":"jkotas","Number":"7328","RawContent":null,"Title":"Fix objwriter for OSX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7328","RelatedDescription":"Closed or merged PR \"Fix objwriter for OSX\" (#7328)"},{"Id":"434280838","IsPullRequest":true,"CreatedAt":"2019-04-19T06:02:57","Actor":"tannergooding","Number":"7316","RawContent":null,"Title":"Updating the roslyn toolset to 3.1.0-beta3-19213-02","State":"closed","Body":"CC. @jkotas \r\n\r\nThis brings in the latest nullability changes and the new `readonly members` feature, which will be needed for changes like https://github.com/dotnet/coreclr/pull/23827\r\n\r\nThe compiler version matches that in arcade and buildtools right now.","Url":"https://github.com/dotnet/corert/pull/7316","RelatedDescription":"Closed or merged PR \"Updating the roslyn toolset to 3.1.0-beta3-19213-02\" (#7316)"},{"Id":"434891687","IsPullRequest":true,"CreatedAt":"2019-04-19T00:06:12","Actor":"Dotnet-GitSync-Bot","Number":"7324","RawContent":null,"Title":"Mirror changes from dotnet/coreclr [Donot Merge]","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @Anipik @tannergooding @krwq @safern @bbartels","Url":"https://github.com/dotnet/corert/pull/7324","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr [Donot Merge]\" (#7324)"},{"Id":"434950698","IsPullRequest":true,"CreatedAt":"2019-04-18T20:40:43","Actor":"MichalStrehovsky","Number":"7325","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7325","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7325)"},{"Id":"434667998","IsPullRequest":true,"CreatedAt":"2019-04-18T14:12:28","Actor":"MichalStrehovsky","Number":"7322","RawContent":null,"Title":"Fix Windows issues with the new object writer","State":"closed","Body":"See individual commits.","Url":"https://github.com/dotnet/corert/pull/7322","RelatedDescription":"Closed or merged PR \"Fix Windows issues with the new object writer\" (#7322)"},{"Id":"434732785","IsPullRequest":true,"CreatedAt":"2019-04-18T14:09:33","Actor":"hc4","Number":"7323","RawContent":null,"Title":"Make __modules section writeable on linux to prevent TEXTREL section","State":"closed","Body":"fixes #7321","Url":"https://github.com/dotnet/corert/pull/7323","RelatedDescription":"Closed or merged PR \"Make __modules section writeable on linux to prevent TEXTREL section\" (#7323)"},{"Id":"434617611","IsPullRequest":false,"CreatedAt":"2019-04-18T14:09:33","Actor":"hc4","Number":"7321","RawContent":null,"Title":"Linux shared library contains TEXTREL section","State":"closed","Body":"This section makes shared library non-shareable between processes.\r\nAlso it prevents packing with UPX.\r\n\r\nThe problem is caused by `__modules` section, which is marked ReadOnly and accessed with relocation type `IMAGE_REL_BASED_DIR64`\r\n\r\nI will try to investigate further. It is possible that another libobjwriter modification will be required.\r\n\r\nrelated to #4988","Url":"https://github.com/dotnet/corert/issues/7321","RelatedDescription":"Closed issue \"Linux shared library contains TEXTREL section\" (#7321)"},{"Id":"434453402","IsPullRequest":true,"CreatedAt":"2019-04-17T19:42:09","Actor":"MichalStrehovsky","Number":"7319","RawContent":null,"Title":"Increase official build Linux job timeout","State":"closed","Body":"We need more time when building the object writer package. 120 is probably overboard (we timed out while copying artifacts around), but it matches the Windows job timeout.","Url":"https://github.com/dotnet/corert/pull/7319","RelatedDescription":"Closed or merged PR \"Increase official build Linux job timeout\" (#7319)"},{"Id":"434396249","IsPullRequest":true,"CreatedAt":"2019-04-17T18:29:23","Actor":"Dotnet-GitSync-Bot","Number":"7318","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @tarekgh","Url":"https://github.com/dotnet/corert/pull/7318","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7318)"},{"Id":"434362500","IsPullRequest":false,"CreatedAt":"2019-04-17T16:01:32","Actor":"NextTurn","Number":"7317","RawContent":null,"Title":"Unable to load DLL 'clrcompression.dll'","State":"closed","Body":"## Stack trace\r\n\r\n```\r\nUnhandled Exception: System.IO.Compression.ZLibException: The underlying compression routine could not be loaded correctly. ---> System.DllNotFoundException: Unable to load DLL 'clrcompression.dll': The specified module could not be found.\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.FixupModuleCell(InteropHelpers.ModuleFixupCell*) + 0xef\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.ResolvePInvokeSlow(InteropHelpers.MethodFixupCell*) + 0x4f\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.ResolvePInvoke(InteropHelpers.MethodFixupCell*) + 0x3e\r\n   at Interop.zlib.InflateInit2_(ZLibNative.ZStream&, Int32) + 0x41\r\n   at System.IO.Compression.ZLibNative.ZLibStreamHandle.InflateInit2_(Int32) + 0x40\r\n   at System.IO.Compression.ZLibNative.CreateZLibStreamForInflate(ZLibNative.ZLibStreamHandle&, Int32) + 0x4e\r\n   at System.IO.Compression.Inflater.InflateInit(Int32) + 0x45\r\n```\r\n\r\n## Command\r\n\r\n```\r\ndotnet publish -r win-x64\r\n```\r\n\r\n## Environment\r\n\r\n.NET Core 3.0 or 2.2\r\nWindows 10 1809 x64\r\n\r\nRuns fine with CoreCLR.","Url":"https://github.com/dotnet/corert/issues/7317","RelatedDescription":"Closed issue \"Unable to load DLL 'clrcompression.dll'\" (#7317)"},{"Id":"433999560","IsPullRequest":true,"CreatedAt":"2019-04-16T22:34:23","Actor":"jkotas","Number":"7315","RawContent":null,"Title":"ObjWriter build fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7315","RelatedDescription":"Closed or merged PR \"ObjWriter build fixes\" (#7315)"},{"Id":"433323004","IsPullRequest":true,"CreatedAt":"2019-04-16T21:11:30","Actor":"trylek","Number":"7306","RawContent":null,"Title":"Smaller SuperIlc fixes for bugs I hit in local testing","State":"closed","Body":"1) One of the interesting features of the new command-line interface\r\nis the fact that it tries to match the option names to identifiers\r\nof fields and method parameters. Due to this the option --crossgen\r\ndidn't get bound because the counterpart field was called UseCrossgen.\r\nI have renamed the field to just Crossgen.\r\n\r\n2) Don't schedule executions for apps that failed to compile as\r\nthe executions are certain to fail due to the absence of the compiled\r\nartifacts.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7306","RelatedDescription":"Closed or merged PR \"Smaller SuperIlc fixes for bugs I hit in local testing\" (#7306)"},{"Id":"433505434","IsPullRequest":true,"CreatedAt":"2019-04-16T17:40:15","Actor":"trylek","Number":"7308","RawContent":null,"Title":"Fixes for some of the remaining Pri#1 CPAOT compilation buckets","State":"closed","Body":"1) Handling for ByRef in the signature emitter;\r\n\r\n2) Expanding instantiated type signatures;\r\n\r\n3) Not trying to emit instantiations when asked to emit the\r\nuninstantiated generic methods in signatures.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7308","RelatedDescription":"Closed or merged PR \"Fixes for some of the remaining Pri#1 CPAOT compilation buckets\" (#7308)"},{"Id":"433850919","IsPullRequest":true,"CreatedAt":"2019-04-16T17:05:26","Actor":"jkotas","Number":"7314","RawContent":null,"Title":"Use CentOS docker image for official builds","State":"closed","Body":"The same one is used for CoreCLR official builds","Url":"https://github.com/dotnet/corert/pull/7314","RelatedDescription":"Closed or merged PR \"Use CentOS docker image for official builds\" (#7314)"},{"Id":"433794769","IsPullRequest":true,"CreatedAt":"2019-04-16T15:28:46","Actor":"Dotnet-GitSync-Bot","Number":"7313","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/7313","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7313)"},{"Id":"433552374","IsPullRequest":true,"CreatedAt":"2019-04-16T08:06:54","Actor":"Dotnet-GitSync-Bot","Number":"7310","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo @jkotas @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7310","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7310)"},{"Id":"433571783","IsPullRequest":true,"CreatedAt":"2019-04-16T07:09:59","Actor":"jkotas","Number":"7312","RawContent":null,"Title":"Add AdditionalBuildArgs option for the official build pipeline","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7312","RelatedDescription":"Closed or merged PR \"Add AdditionalBuildArgs option for the official build pipeline\" (#7312)"},{"Id":"433568931","IsPullRequest":true,"CreatedAt":"2019-04-16T07:08:27","Actor":"jkotas","Number":"7311","RawContent":null,"Title":"Add musl targets in packages","State":"closed","Body":"Contribute to #4552","Url":"https://github.com/dotnet/corert/pull/7311","RelatedDescription":"Closed or merged PR \"Add musl targets in packages\" (#7311)"},{"Id":"433521193","IsPullRequest":true,"CreatedAt":"2019-04-16T02:12:54","Actor":"Dotnet-GitSync-Bot","Number":"7309","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7309","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7309)"},{"Id":"433259360","IsPullRequest":true,"CreatedAt":"2019-04-15T12:39:46","Actor":"MichalStrehovsky","Number":"7305","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7305","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7305)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"435938360","IsPullRequest":true,"CreatedAt":"2019-04-22T23:51:00","Actor":"johnbeisner","Number":"3167","RawContent":null,"Title":"Move the SDK Performance tests to Helix","State":"open","Body":"Move the SDK Performance tests to Helix\r\n\r\n@MattGal\r\n@DrewScoggins\r\n@adiaaida \r\n","Url":"https://github.com/dotnet/sdk/pull/3167","RelatedDescription":"Open PR \"Move the SDK Performance tests to Helix\" (#3167)"},{"Id":"434977774","IsPullRequest":true,"CreatedAt":"2019-04-22T23:41:39","Actor":"nugetlurker","Number":"3142","RawContent":null,"Title":"Insert NuGet Build 5.1.0-preview2.5965 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-preview2.5965 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3142","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-preview2.5965 into sdk\" (#3142)"},{"Id":"434977794","IsPullRequest":true,"CreatedAt":"2019-04-22T23:40:04","Actor":"nugetlurker","Number":"3143","RawContent":null,"Title":"Insert NuGet Build 5.1.0-preview2.5965 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-preview2.5965 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3143","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-preview2.5965 into sdk\" (#3143)"},{"Id":"434948895","IsPullRequest":true,"CreatedAt":"2019-04-22T22:59:22","Actor":"MSLukeWest","Number":"3141","RawContent":null,"Title":"Adding deps.json file to PublishItemsOutputGroup","State":"closed","Body":"The PublishItemsOutputGroup needs to also contain the app's deps.json file or there will be a runtime failure","Url":"https://github.com/dotnet/sdk/pull/3141","RelatedDescription":"Closed or merged PR \"Adding deps.json file to PublishItemsOutputGroup\" (#3141)"},{"Id":"435563213","IsPullRequest":true,"CreatedAt":"2019-04-22T18:27:06","Actor":"wli3","Number":"3163","RawContent":null,"Title":"Update branding to preview 6","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3163","RelatedDescription":"Closed or merged PR \"Update branding to preview 6\" (#3163)"},{"Id":"435560822","IsPullRequest":true,"CreatedAt":"2019-04-22T17:51:40","Actor":"wli3","Number":"3162","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3162","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview5\" (#3162)"},{"Id":"435738707","IsPullRequest":false,"CreatedAt":"2019-04-22T14:05:48","Actor":"bryanfarrell","Number":"3166","RawContent":null,"Title":"GenerateAssemblyInfo support for InternalsVisibleToAttribute and AssemblyMetadataAttribute","State":"open","Body":"Hello,\r\n\r\nIn our .NET 4.7.2 applications we set the InternalsVisibleTo attribute on our libraries so that our internal unit test projects can run unit tests on internal methods without having to go through the trouble of putting public signatures of these methods into the class and wrapping everything in preprocessor directives.\r\n\r\nWe also make use of the AssemblyMetadata attribute to have our build system add vital diagnostic information to our assemblies so that there is never an issue with identifying when a project was built, from what repo commit etc.  This has made identifying and fixing bugs much easier more efficient.\r\n\r\nTo set these values we've manually set the InternalsVisibleTo attribute at design time into the AssemblyInfo.cs file.  We also have our build system inject the values into the AssemblyInfo.cs file at build time during the build (but the changes are not committed as the metadata all build version related metadata).\r\n\r\nIn .NET Standard and Core we've found that the common Assembly Attributes are now set in the project file.  Do you have plans to add these other attributes to the Microsoft.NET.GenerateAssemblyInfo.targets file so that they an be included in the project file so the new generate assembly info functionality can support adding these to the output assembly?\r\n\r\nWe have read there is a workaround where we can set the property GenerateAssemblyInfo to False and add an AssemblyInfo.cs file to the .NET Standard/Core projects but we would rather not use this workaround.  For one we do not know how long it will be supported and also we do not know if it will break the new project build workflow in some way.\r\n\r\nCan you please provide some advice on how these attributes can be used in .NET Standard/Core project files without the workaround or an indication if you plan on adding support for them to the Microsoft.NET.GenerateAssemblyInfo.targets file?\r\n\r\nThank you,\r\n\r\nBryan","Url":"https://github.com/dotnet/sdk/issues/3166","RelatedDescription":"Open issue \"GenerateAssemblyInfo support for InternalsVisibleToAttribute and AssemblyMetadataAttribute\" (#3166)"},{"Id":"435703501","IsPullRequest":true,"CreatedAt":"2019-04-22T12:01:40","Actor":"dotnet-bot","Number":"3165","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3165","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#3165)"},{"Id":"435688151","IsPullRequest":false,"CreatedAt":"2019-04-22T10:56:31","Actor":"raffaeler","Number":"3164","RawContent":null,"Title":"Error parsing dotnet publish parameters when using ReadyToRun ","State":"open","Body":"Version:   3.0.100-preview5-011507\r\nCommit:    fddc070d00\r\n\r\nWhen running `dotnet publish` using both `-p:ReadyToRun` and `--self-contained` the message is misleading:\r\n\r\n```\r\n$ dotnet publish -c Release -r linux-arm --self-contained -p:ReadyToRun=true -o scd\r\nMicrosoft (R) Build Engine version 16.1.65-preview+gc86abee47b for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/opt/dotnet/sdk/3.0.100-preview5-011507/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.TargetingPackResolution.targets(85,33): error MSB4030: \"-p:ReadyToRun=true\" is an invalid value for the \"SelfContained\" parameter of the \"ResolveFrameworkReferences\" task.\r\nThe \"SelfContained\" parameter is of type \"System.Boolean\". [/home/pi/test3/test3.csproj]\r\n```\r\n\r\nIf instead, I specify `=true` the command succeed:\r\n```\r\n $ dotnet publish -c Release -r linux-arm --self-contained=true -p:ReadyToRun=true -o scd\r\nMicrosoft (R) Build Engine version 16.1.65-preview+gc86abee47b for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 372.72 ms for /home/pi/test3/test3.csproj.\r\n/opt/dotnet/sdk/3.0.100-preview5-011507/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/home/pi/test3/test3.csproj]\r\n  test3 -> /home/pi/test3/bin/Release/netcoreapp3.0/linux-arm/test3.dll\r\n  test3 -> /home/pi/test3/bin/Release/netcoreapp3.0/linux-arm/test3.Views.dll\r\n  test3 -> /home/pi/test3/scd/\r\n```\r\nIt looks like `-p:ReadyToRun` already forces `--self-contained=true` but I would like the command output to clearly states whether the produced output is self-contained or not.\r\n\r\nBy the way, the parameter `--self-contained` can be used alone (without `=true`) and it has been possible even in .NET Core 2.x. The following command is valid and succeeds:\r\n```\r\ndotnet publish -c Release -r linux-arm --self-contained -o abc\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3164","RelatedDescription":"Open issue \"Error parsing dotnet publish parameters when using ReadyToRun \" (#3164)"},{"Id":"435008587","IsPullRequest":false,"CreatedAt":"2019-04-22T03:53:29","Actor":"sbomer","Number":"3145","RawContent":null,"Title":"TestAsTools job fails with latest SDK","State":"closed","Body":"See the failures in https://github.com/dotnet/sdk/pull/3133:\r\n```\r\nF:\\workspace\\_work\\1\\s\\src\\Tests\\Directory.Build.targets(56,5): error MSB3073: The command \"dotnet tool install --local testSdkRestore --version 3.0.100-ci --add-source F:\\workspace\\_work\\1\\s\\artifacts\\packages\\Debug\\NonShipping\\\" exited with code 1. [F:\\workspace\\_work\\1\\s\\src\\Tests\\Microsoft.NET.Restore.Tests\\Microsoft.NET.Restore.Tests.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3145","RelatedDescription":"Closed issue \"TestAsTools job fails with latest SDK\" (#3145)"},{"Id":"435154253","IsPullRequest":true,"CreatedAt":"2019-04-22T03:00:10","Actor":"dotnet-bot","Number":"3149","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3149","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3149)"},{"Id":"435484986","IsPullRequest":false,"CreatedAt":"2019-04-21T07:46:06","Actor":"JamesNK","Number":"3161","RawContent":null,"Title":".NET Core 3 does not load pdbs from NuGet packages","State":"open","Body":"Source Link does not work when a NuGet package has its PDB files in the primary nupkg package because the symbols are never loaded. It works in .NET Core 2.2.\r\n\r\nRepo: [ConsoleApp20.zip](https://github.com/dotnet/sdk/files/3101009/ConsoleApp20.zip)\r\n\r\nSuccess:\r\n\r\n1. View csproj and note that the version target framework is `netcoreapp2.2`\r\n2. Launch console with debugging and step into JsonConvert.SerializeObject\r\n3. Source Link downloads and opens source code file\r\n\r\nFailure:\r\n\r\n1. Change csproj target framework to `netcoreapp3.0`\r\n2. Launch console with debugging and step into JsonConvert.SerializeObject\r\n3. Visual Studio steps over the Newtonsoft.Json API.\r\n\r\nVS 2019 16.1 Preview 1\r\n.NET Core 3.0.100-preview5-011367","Url":"https://github.com/dotnet/sdk/issues/3161","RelatedDescription":"Open issue \".NET Core 3 does not load pdbs from NuGet packages\" (#3161)"},{"Id":"435390745","IsPullRequest":true,"CreatedAt":"2019-04-20T13:26:35","Actor":"dotnet-maestro[bot]","Number":"3160","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.7\r\n- **Date Produced**: 4/19/2019 12:41 AM\r\n- **Commit**: 5e7ce5b394f3477bb0a485a4b761b7742e95be37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19218.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3160","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3160)"},{"Id":"435366474","IsPullRequest":false,"CreatedAt":"2019-04-20T07:27:03","Actor":"nguyenquyhy","Number":"3159","RawContent":null,"Title":"Getting \"GenerateDepsFile\" task failed unexpectedly with KeyNotFoundException when publishing project","State":"open","Body":"I am getting `\"GenerateDepsFile\" task failed unexpectedly` with `KeyNotFoundException` when publishing my projects.\r\n\r\nBelow are the conditions that trigger the issue:\r\n- .NET Core 3.0 Preview 4\r\n- WindowsAzure.Storage 9.3.3 is in a .NET Standard library\r\n\r\nThis can be fixed by either going back to Preview 3 or add WindowsAzure.Storage directly into the .NET Core project.\r\n\r\nError in build log:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011223\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(801,5): Error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly.\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at Microsoft.NET.Build.Tasks.DependencyContextBuilder2.CalculateExcludedLibraries() in /_/src/Tasks/Microsoft.NET.Build.Tasks/DependencyContextBuilder2.cs:line 769\r\n   at Microsoft.NET.Build.Tasks.DependencyContextBuilder2.Build() in /_/src/Tasks/Microsoft.NET.Build.Tasks/DependencyContextBuilder2.cs:line 215\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.WriteDepsFileNew(String depsFilePath) in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 248\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 284\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.Execute() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 262\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nSample repository: https://github.com/nguyenquyhy/IssueWindowsAzureStoragePublish","Url":"https://github.com/dotnet/sdk/issues/3159","RelatedDescription":"Open issue \"Getting \"GenerateDepsFile\" task failed unexpectedly with KeyNotFoundException when publishing project\" (#3159)"},{"Id":"435348681","IsPullRequest":true,"CreatedAt":"2019-04-20T02:51:47","Actor":"swaroop-sridhar","Number":"3158","RawContent":null,"Title":"Mark PDB files generated by R2R as ExcludeFromSingleFile","State":"open","Body":"When published with `PublishReadyToRun=true` and `PublishReadyToRunEmitSymbols=true` certain additional symbol files are generated:\r\nOn Windows: `<app>.ni.pdb`\r\nOn Linux: `<app>.<guid>.map`\r\n\r\nWhen additionally publishing with `PublishSingleFile=true` exclude the above files from being bundled into the single-file output.","Url":"https://github.com/dotnet/sdk/pull/3158","RelatedDescription":"Open PR \"Mark PDB files generated by R2R as ExcludeFromSingleFile\" (#3158)"},{"Id":"435334688","IsPullRequest":true,"CreatedAt":"2019-04-20T02:31:13","Actor":"dotnet-bot","Number":"3155","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3155","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3155)"},{"Id":"435326772","IsPullRequest":true,"CreatedAt":"2019-04-20T02:31:10","Actor":"wli3","Number":"3154","RawContent":null,"Title":"Merge release/3.0.1xx to master 0419","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3154","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master 0419\" (#3154)"},{"Id":"435341558","IsPullRequest":true,"CreatedAt":"2019-04-20T01:12:25","Actor":"sbomer","Number":"3157","RawContent":null,"Title":"Enable native asset filtering","State":"open","Body":"This enables ILLink.Tasks to trim native assets that are no longer necessary after linking managed code. The behavior kicks in whenever the linker runs, but can be disabled by setting `TrimmerKeepNativeAssets`.","Url":"https://github.com/dotnet/sdk/pull/3157","RelatedDescription":"Open PR \"Enable native asset filtering\" (#3157)"},{"Id":"435339950","IsPullRequest":true,"CreatedAt":"2019-04-20T00:53:31","Actor":"sbomer","Number":"3156","RawContent":null,"Title":"ILLink cleanup","State":"open","Body":"Respond to remaining feedback from https://github.com/dotnet/sdk/pull/3125:\r\n- Use default deps generation mode\r\n- Use `TrimmerRootDescriptor` (singular) itemgroup, without a corresponding property\r\n\r\n@swaroop-sridhar The second two commits set the proper linker defaults. I made them part of the same PR to avoid having to fix merge conflicts between these changes.","Url":"https://github.com/dotnet/sdk/pull/3156","RelatedDescription":"Open PR \"ILLink cleanup\" (#3156)"},{"Id":"435265510","IsPullRequest":true,"CreatedAt":"2019-04-19T23:35:53","Actor":"dsplaisted","Number":"3152","RawContent":null,"Title":"Switch to new deps file generation mode by default","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3152","RelatedDescription":"Closed or merged PR \"Switch to new deps file generation mode by default\" (#3152)"},{"Id":"435292738","IsPullRequest":true,"CreatedAt":"2019-04-19T21:52:29","Actor":"wli3","Number":"3153","RawContent":null,"Title":"update stage 0 to 3.0.100-preview5-011481","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3153","RelatedDescription":"Closed or merged PR \"update stage 0 to 3.0.100-preview5-011481\" (#3153)"},{"Id":"435058150","IsPullRequest":true,"CreatedAt":"2019-04-19T19:22:32","Actor":"wli3","Number":"3147","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3147","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3147)"},{"Id":"435254481","IsPullRequest":false,"CreatedAt":"2019-04-19T17:49:58","Actor":"Tratcher","Number":"3151","RawContent":null,"Title":"ResolvePackageAssets InvalidDataException Found invalid data while decoding","State":"open","Body":"```\r\nResolution.targets(233,5): message NETSDK1062: Unable to use package assets cache due to I/O error. This can occur when\r\n the same project is built more than once in parallel. Performance may be degraded, but the build result will not be im\r\npacted. [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\n\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly. [D:\\github\\AspNetCore\\ar\r\ntifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018: System.IO.InvalidDataException: Found invalid data while decoding. [D:\\github\r\n\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\n\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.ValidateHead\r\ner(BinaryReader reader, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 529\r\n [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.OpenCacheStr\r\neam(Stream stream, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 511 [D:\\\r\ngithub\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReader\r\nFromDisk(ResolvePackageAssets task, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets\r\n.cs:line 492 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(Resolv\r\nePackageAssets task) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 440 [D:\\github\\AspNetCore\\a\r\nrtifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() in /_/s\r\nrc/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 284 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\D\r\nebug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() in /_/src/\r\nTasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 276 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debu\r\ng\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/Tas\r\nkBase.cs:line 35 [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITask\r\nExecutionHost.Execute() [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\nd:\\github\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview4-011136\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependency\r\nResolution.targets(233,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.Move\r\nNext() [D:\\github\\AspNetCore\\artifacts\\obj\\LoggingBranch\\Debug\\net461\\se\\rs.csproj]\r\n```\r\n\r\nRepo: https://github.com/aspnet/aspnetcore\r\nBranch: master\r\nCommand: `build.cmd -all -pack`\r\nTracking: https://github.com/aspnet/AspNetCore-Internal/issues/2009\r\n\r\nHow does one go about debugging this?","Url":"https://github.com/dotnet/sdk/issues/3151","RelatedDescription":"Open issue \"ResolvePackageAssets InvalidDataException Found invalid data while decoding\" (#3151)"},{"Id":"435059918","IsPullRequest":true,"CreatedAt":"2019-04-19T17:31:27","Actor":"wli3","Number":"3148","RawContent":null,"Title":"Merges/release/2.2.2xx to release/3.0.1xx 2","State":"closed","Body":"Send https://github.com/dotnet/sdk/pull/3139 again. CI is stuck","Url":"https://github.com/dotnet/sdk/pull/3148","RelatedDescription":"Closed or merged PR \"Merges/release/2.2.2xx to release/3.0.1xx 2\" (#3148)"},{"Id":"435154799","IsPullRequest":true,"CreatedAt":"2019-04-19T14:14:42","Actor":"dotnet-maestro[bot]","Number":"3150","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.4\r\n- **Date Produced**: 4/18/2019 10:50 PM\r\n- **Commit**: 1d4c87ff798d7de521128e6c3d890055c2401e80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.4\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19218.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3150","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3150)"},{"Id":"434734538","IsPullRequest":true,"CreatedAt":"2019-04-19T05:59:36","Actor":"dotnet-bot","Number":"3139","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3139","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3139)"},{"Id":"435021289","IsPullRequest":false,"CreatedAt":"2019-04-19T01:55:09","Actor":"ajaybhargavb","Number":"3146","RawContent":null,"Title":"Internal error: new deps file generation logic did not produce the same result as the old logic","State":"open","Body":"I've included both the old and new deps files here.\r\n\r\n[Microsoft.AspNetCore.Razor.Test.MvcShim.deps.zip](https://github.com/dotnet/sdk/files/3096744/Microsoft.AspNetCore.Razor.Test.MvcShim.deps.zip)\r\n\r\n\r\nOriginal error:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error : Internal error: new deps file generation logic did not produce the same result as the old logic. [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     Please file an issue for this at https://github.com/dotnet/sdk and include the following two files:  [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     Deps file from old logic: C:\\Github\\aspnet\\AspNetCore-Tooling\\artifacts\\bin\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Debug\\netcoreapp3.0\\Microsoft.AspNetCore.Razor.Test.MvcShim.deps.json [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     Deps file from new logic: C:\\Github\\aspnet\\AspNetCore-Tooling\\artifacts\\bin\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Debug\\netcoreapp3.0\\Microsoft.AspNetCore.Razor.Test.MvcShim.deps.new.json [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(145,5): error :     You can work around this by setting the DepsFileGenerationMode MSBuild property to 'old' [C:\\Github\\aspnet\\AspNetCore-Tooling\\src\\Razor\\test\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj]\r\n```\r\n\r\n```\r\ndotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview4-011216\r\n Commit:    19c844a865\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011216\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27613-07\r\n  Commit:  5c329c85ae\r\n```","Url":"https://github.com/dotnet/sdk/issues/3146","RelatedDescription":"Open issue \"Internal error: new deps file generation logic did not produce the same result as the old logic\" (#3146)"},{"Id":"434990963","IsPullRequest":true,"CreatedAt":"2019-04-18T23:00:24","Actor":"heng-liu","Number":"3144","RawContent":null,"Title":"Insert NuGet Build 5.1.0-preview2.5965 into SDK master","State":"open","Body":"Insert NuGet Build 5.1.0-preview2.5965 into master branch.","Url":"https://github.com/dotnet/sdk/pull/3144","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-preview2.5965 into SDK master\" (#3144)"},{"Id":"434734518","IsPullRequest":true,"CreatedAt":"2019-04-18T21:21:18","Actor":"dotnet-bot","Number":"3138","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3138","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3138)"},{"Id":"434735459","IsPullRequest":true,"CreatedAt":"2019-04-18T21:20:58","Actor":"dotnet-maestro[bot]","Number":"3140","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190418.1\r\n- **Date Produced**: 4/18/2019 8:10 AM\r\n- **Commit**: 46718d98c0fd03690a6a8c83da692a4a85a17902\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19218.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19218.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3140","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3140)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1119356060135907328","CreatedAt":"2019-04-19T21:44:16+00:00","UserScreenname":"dotnet","Text":"Upcoming Updates for .NET Framework 4.8 https://t.co/MYATh2Zg6u","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":84,"FavoriteCount":31,"RawContent":null},{"Id":"1119087634003841025","CreatedAt":"2019-04-19T03:57:38+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.8 is now available. https://t.co/emspxTsaEX","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":376,"FavoriteCount":223,"RawContent":null},{"Id":"1119030394605588480","CreatedAt":"2019-04-19T00:10:11+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3 Preview 4 https://t.co/7QaZC5qmx6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":370,"FavoriteCount":213,"RawContent":null},{"Id":"1118906461180973059","CreatedAt":"2019-04-18T15:57:43+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1118551190927622144","CreatedAt":"2019-04-17T16:26:00+00:00","UserScreenname":"dotnet","Text":"If you're enjoying the DevOps for https://t.co/iOiV9qNspl Developers series on @ch9 check out this FREE ebook from… https://t.co/IlN3xK8cpo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"1118529550902865924","CreatedAt":"2019-04-17T15:00:00+00:00","UserScreenname":"dotnet","Text":"In part 3 of DevOps For https://t.co/iOiV9r53NV Developers @AbelSquidHead\n&amp; @jeremylikness show us how to create a… https://t.co/s7eQpdTakW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1118196772604530688","CreatedAt":"2019-04-16T16:57:40+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":20,"FavoriteCount":5,"RawContent":null},{"Id":"1116672310809903105","CreatedAt":"2019-04-12T12:00:00+00:00","UserScreenname":"dotnet","Text":"The #OnDotNet show joined forces with @azureadvocates to bring you DevOps for https://t.co/iOiV9r53NV Developers!… https://t.co/eP7EZV54nW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1116372533907902465","CreatedAt":"2019-04-11T16:08:47+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/XI2YUBZA88","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1115751220235231232","CreatedAt":"2019-04-09T22:59:55+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2019-04-23T05:30:30.4668426Z","RunDurationInMilliseconds":9525}