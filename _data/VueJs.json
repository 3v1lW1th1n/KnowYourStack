{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7314136381","Type":"PullRequestEvent","CreatedAt":"2018-03-01T05:25:05","Actor":"DrSensor","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2085","RelatedDescription":"Opened pull request \"Support this.$router.options in Typescript\" (#2085) at vuejs/vue-router","RelatedBody":"There is a time when a user wants to access metadata that was defined in `router.ts` ([example](https://github.com/DrSensor/F.I.D.E/blob/develop/src/renderer/components/NavigationSidebar.vue#L93)). I notice that in the typedef `options` is missing.\r\n\r\n![screenshot from 2018-03-01 12-16-59](https://user-images.githubusercontent.com/4953069/36828284-6ed0e5d8-1d4b-11e8-9dc6-0a62c005c384.png)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7317859913","Type":"PullRequestEvent","CreatedAt":"2018-03-01T18:47:18","Actor":"davestewart","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1169","RelatedDescription":"Opened pull request \"Made getter property vs method syntax more explicit\" (#1169) at vuejs/vuex","RelatedBody":"I've been using Vuex for about a year, and I never realised you could access store getters as methods.\r\n\r\nThis docs update makes the ability to do this explicit, as well as adding notes on caching."}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"301631446","IsPullRequest":true,"CreatedAt":"2018-03-02T02:26:54","Actor":"HerringtonDarkholme","Number":"7734","RawContent":null,"Title":" fix(types): add options to vue construtor","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7734","RelatedDescription":"Open PR \" fix(types): add options to vue construtor\" (#7734)"},{"Id":"301625191","IsPullRequest":true,"CreatedAt":"2018-03-02T01:49:52","Actor":"cheapsteak","Number":"7733","RawContent":null,"Title":"Update downloads badge to point to graph of downloads","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n- [x] Other: update link for download badge in readme\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] All tests are passing (It's not passing but I don't think it's because of the change to the readme)\r\n\r\n**Other information:**\r\n\r\nHi! I noticed that your \"npm\" badge and \"downloads\" badge currently both point to the same page for the project on npmjs.org  \r\n\r\nI was wondering if you might prefer having the download badge point to a [download chart](https://npmcharts.com/compare/vue?minimal=true) instead?\r\n\r\nIf not, feel free to close and apologies for the drive-by PR 😄","Url":"https://github.com/vuejs/vue/pull/7733","RelatedDescription":"Open PR \"Update downloads badge to point to graph of downloads\" (#7733)"},{"Id":"301593967","IsPullRequest":false,"CreatedAt":"2018-03-01T23:24:25","Actor":"thinksource","Number":"7732","RawContent":null,"Title":"components with init value","State":"closed","Body":"### What problem does this feature solve?\r\nI have a dictionary object with certain value is dictionary.\r\nI have arrary of items\r\nitems like:\r\n\r\nprovider:{ id:\"\", name:\"\", para:{\"name\": \"what is name\", ‘from’:‘beijing’} },\r\n\r\nI have  a component to edit those item, when I try to edit para, I use another component.\r\n\r\nmy first level  of component is like:\r\n```\r\n<table>\r\n  <tr for (v, k) in editDict :key=\"k\">\r\n    <td v-if ...> </td>\r\n     <td  v-else-if=\"tof(editDict[k]) == 'Object'\">\r\n                 <DictInput :inputDict=\"editDict[k]\"></DictInput>\r\n      </td>\r\n     \r\n  </tr>\r\n</table>\r\n```\r\nwhen the 2nd level of component show it give me error for ：\r\n\r\nProperty or method \"inputDict\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property.\r\n See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\nI think that is because the first level of Dict object is not determind yet. when it initiallize the secondary level of dictionary.\r\n\r\nCan you set a initilal value for the components if it is not find the props value set?\r\n\r\n### What does the proposed API look like?\r\n```\r\nexport default {\r\n  props:{},\r\n  components:{\r\n    DictInput:DictInput({inputDict:{ \"key\": \"value\", \"key\": \"value\"}})\r\n  },\r\n\r\n}\r\n```\r\nThe {inputDict:{ \"key\": \"value\", \"key\": \"value\"}} as initial value of this component, if later rending, it will bind the value later on.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7732","RelatedDescription":"Closed issue \"components with init value\" (#7732)"},{"Id":"301572709","IsPullRequest":true,"CreatedAt":"2018-03-01T21:51:32","Actor":"imbozhang","Number":"7731","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7731","RelatedDescription":"Closed or merged PR \"Update README.md\" (#7731)"},{"Id":"301564569","IsPullRequest":false,"CreatedAt":"2018-03-01T21:24:15","Actor":"Leocardoso94","Number":"7730","RawContent":null,"Title":"Problem when a v-model end with spaces","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/leocardoso/pen/OQqNYz?editors=1011](https://codepen.io/leocardoso/pen/OQqNYz?editors=1011)\r\n\r\n### Steps to reproduce\r\nCreate an input with a v-model like  <input v-model=\"obj.value \" />\r\n\r\nAnd try to change its value\r\n\r\n### What is expected?\r\nThe value of model change\r\n\r\n### What is actually happening?\r\nThe value of model doesn't change and it creates a new property to the Object ended with space like obj['value ']\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7730","RelatedDescription":"Open issue \"Problem when a v-model end with spaces\" (#7730)"},{"Id":"301555850","IsPullRequest":true,"CreatedAt":"2018-03-01T20:54:32","Actor":"LarsStegman","Number":"7729","RawContent":null,"Title":"Style: change control flow to early exit","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nHello, we are making this pull request to get familiar with the contributing process for Vue. We believe this change improves readability.","Url":"https://github.com/vuejs/vue/pull/7729","RelatedDescription":"Open PR \"Style: change control flow to early exit\" (#7729)"},{"Id":"301466986","IsPullRequest":false,"CreatedAt":"2018-03-01T16:19:42","Actor":"JaroslavPrt","Number":"7728","RawContent":null,"Title":"why recursive calls creates ?  ","State":"closed","Body":"table-item.vue\r\n\r\n```\r\n<template>\r\n  <section>\r\n    <p>text text text</p>\r\n  </section>\r\n</template>\r\n<script src=\"./table-item.js\"></script>\r\n<style src=\"./table-item.css\"></style>\r\n```\r\n\r\ntable.vue\r\n\r\n```\r\n<template>\r\n  \r\n  ...\r\n\r\n  <section>\r\n    <table-item v-if=\"isTableItem\" :source-item=\"selectedItem\"></table-item>\r\n  </section>\r\n</section>\r\n</template>\r\n<script src=\"./table.js\"></script>\r\n<style scoped src=\"./table.css\"></style>\r\n```\r\n\r\nERROR\r\n\r\n```\r\nvue.esm.js:579 [Vue warn]: Failed to mount component: template or render function not defined.\r\n\r\nfound in\r\n\r\n---> <TableItemForm>\r\n       <TableView>\r\n         <ElContainer>... (1 recursive calls)\r\n           <App>\r\n             <Root>\r\n\r\n```\r\n\r\nwhy recursive calls creats ?  \r\n","Url":"https://github.com/vuejs/vue/issues/7728","RelatedDescription":"Closed issue \"why recursive calls creates ?  \" (#7728)"},{"Id":"301348926","IsPullRequest":false,"CreatedAt":"2018-03-01T11:33:06","Actor":"lifeiscontent","Number":"7726","RawContent":null,"Title":"Template can't use v-text directive","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/8nq687ywn9](https://codesandbox.io/s/8nq687ywn9)\r\n\r\n### Steps to reproduce\r\ncheck the App.vue file to see that template is not working\r\n\r\n### What is expected?\r\nI would expect v-text to work on a template e.g. inject the text received from the data function\r\n\r\n### What is actually happening?\r\nit's throwing an error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7726","RelatedDescription":"Closed issue \"Template can't use v-text directive\" (#7726)"},{"Id":"301367519","IsPullRequest":false,"CreatedAt":"2018-03-01T11:17:40","Actor":"amoe","Number":"7727","RawContent":null,"Title":"Cannot access created hook of component options when using TypeScript","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://github.com/amoe/vue-typescript-options-bug](https://github.com/amoe/vue-typescript-options-bug)\r\n\r\n### Steps to reproduce\r\n`yarn install`, `yarn run dev`.\r\nYou'll see the error as follows:\r\n\r\n    ERROR in ./src/entry.ts\r\n    [tsl] ERROR in /home/amoe/dev/vue-typescript-options-bug/src/entry.ts(18,60)\r\n          TS2339: Property 'options' does not exist on type 'VueConstructor<Record<never, any> & Vue>'.\r\n\r\n    ERROR in ./src/entry.ts\r\n    [tsl] ERROR in /home/amoe/dev/vue-typescript-options-bug/src/entry.ts(22,65)\r\n          TS2339: Property 'created' does not exist on type 'VueConstructor<Record<never, any> & Vue>'.\r\n\r\n\r\n### What is expected?\r\nI expect the webpack/typescript compile to finish without errors.  The value of `created` (or `options.created`) should be a function.\r\n\r\n### What is actually happening?\r\nTypescript definitions will not allow access to `created` or `options`.  However, `options.created` does exist at runtime.\r\n\r\n---\r\nI am trying to follow the Vue unit testing guide, shown here.\r\n\r\nhttps://vuejs.org/v2/guide/unit-testing.html\r\n\r\nThe first example gives a test as such:\r\n\r\n    it('has a created hook', () => {\r\n      expect(typeof MyComponent.created).toBe('function')\r\n    })\r\n\r\nTherefore I believe that this test should also work in TypeScript.  If this shouldn't work, perhaps it's a documentation bug instead of a code bug?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7727","RelatedDescription":"Open issue \"Cannot access created hook of component options when using TypeScript\" (#7727)"},{"Id":"301226971","IsPullRequest":false,"CreatedAt":"2018-03-01T08:38:03","Actor":"bulkan","Number":"7724","RawContent":null,"Title":"Flexbox column width does not collapse in Safari when using transition-group ","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/bulkan/57xsxcph/26/](https://jsfiddle.net/bulkan/57xsxcph/26/)\r\n\r\n### Steps to reproduce\r\n* Go to the JSFiddle link\r\n* Click on the `remove` button until all of the children is removed from the second column\r\n\r\n### What is expected?\r\nIn Chrome and Firefox, the second columns width will collapse once all of its children is removed. The other columns will also animate.\r\n\r\nThis is what I expect to occur in Safari.\r\n\r\n### What is actually happening?\r\nIn Safari the second column width remains the same until a repaint occurs.\r\n\r\n---\r\nI ran into this issue whilst testing my work in Mobile Safari. I was able to reproduce the issue on desktop Safari (High Sierra 10.13.1 & Safari 11.0.1)\r\n\r\nI have also created another [JSFiddle](https://jsfiddle.net/bulkan/g6sk6at0/14/) in which I'm not using Vue and the column width collapses.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7724","RelatedDescription":"Closed issue \"Flexbox column width does not collapse in Safari when using transition-group \" (#7724)"},{"Id":"301248388","IsPullRequest":false,"CreatedAt":"2018-03-01T01:41:23","Actor":"dmitry-saritasa","Number":"7725","RawContent":null,"Title":"@click.native.stop = \"\" possible?","State":"closed","Body":"I have several nested components on the page with parents component having ```@click.native``` implementation. Therefore when I click on the area occupied by a child component (living inside parent), both click actions executed (parent and all nested children) for example\r\n```\r\n<products>\r\n   <product-details>\r\n       <slide-show>\r\n             <media-manager>\r\n                  <modal-dialog>\r\n   <product-details>\r\n       <slide-show>\r\n             <media-manager>\r\n                  <modal-dialog>\r\n```\r\n\r\nSo I have a list of multiple products, and when I click on \"canvas\" belonging to modal dialog - I also get ```@click.native``` fired on product-details to which modal-dialog belongs. Would be nice to have something like ```@click.native.stop=\"code\"```, is this possible?\r\n\r\nRight now I have to do this:\r\n```\r\n@click.native=\"clickHandler\"\r\nand then \r\n\r\n  methods: {\r\n    clickHandler(e) {\r\n      e.stopPropagation();\r\n      console.log(e);\r\n    }\r\n```\r\n\r\n### code\r\n\r\n```vue\r\n<template>\r\n  <div class=\"media-manager\">\r\n    <div v-if=\"!getMedia\">\r\n      <h1>When you're ready please upload a new image</h1>\r\n      <a href=\"#\"\r\n         class=\"btn btn--diagonal btn--orange\"\r\n         @click=\"upload=true\">Upload Here</a>\r\n    </div>\r\n    <img :src=\"getMedia.media_url\"\r\n         @click=\"upload=true\"\r\n         v-if=\"getMedia\">\r\n    <br>\r\n    <a class=\"arrow-btn\"\r\n       @click=\"upload=true\"\r\n       v-if=\"getMedia\">Add more images</a>\r\n    <!-- use the modal component, pass in the prop -->\r\n    <ModalDialog\r\n      v-if=\"upload\"\r\n      @click.native=\"clickHandler\"\r\n      @close=\"upload=false\">\r\n      <h3 slot=\"header\">Upload Images</h3>\r\n      <p slot=\"body\">Hello World</p>\r\n    </ModalDialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ModalDialog from '@/components/common/ModalDialog';\r\nexport default {\r\n  components: {\r\n    ModalDialog,\r\n  },\r\n  props: {\r\n    files: {\r\n      default: () => [],\r\n      type: Array,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n     upload: false,\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * Obtain single image from the media array\r\n     */\r\n    getMedia() {\r\n      const [\r\n        media,\r\n      ] = this.files;\r\n\r\n      return media;\r\n    },\r\n  },\r\n  methods: {\r\n    clickHandler(e) {\r\n      e.stopPropagation();\r\n      console.log(e);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.media-manager img {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\na {\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n\r\n```","Url":"https://github.com/vuejs/vue/issues/7725","RelatedDescription":"Closed issue \"@click.native.stop = \"\" possible?\" (#7725)"},{"Id":"301138608","IsPullRequest":false,"CreatedAt":"2018-02-28T18:57:47","Actor":"AlexandreBonneau","Number":"7723","RawContent":null,"Title":"Unable when passing props to a component to define in which order they should be 'treated'","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/AnotherLinuxUser/pen/YedNpv?editors=1010](https://codepen.io/AnotherLinuxUser/pen/YedNpv?editors=1010)\r\n\r\n### Steps to reproduce\r\nGiven the following template:\r\n```html\r\n<vue-autonumeric\r\n\t:options=\"obj.options\"\r\n\tv-model=\"obj.val\"\r\n/>\r\n```\r\n\r\nIf you want to modify both `:value` and `:options` props at the same time, you would proceed by doing:\r\n```js\r\nthis.obj = {\r\n    options : 'percentageEU3dec',\r\n    val     : 0.00123456,\r\n};\r\n```\r\n\r\n### What is expected?\r\n`options` should be first modified, before `val`.\r\n\r\n### What is actually happening?\r\nHowever, Vue is first taking into account the `obj.val`, **before** the `obj.options`, leading to the vue-autonumeric component to incorrectly update its internal *raw* value with `0.00` instead of `0.00123` (since the `percentageEU3dec` defines the number of allowed decimals to `5`, instead of the default `2`).\r\n\r\nThe order in which `options` and `val` are set is *super* important for that component, since if you first set the `value`, AutoNumeric will check how many decimal places it needs to keep (and by default it's `2`), which means it will convert the given `0.00123456` to `0.00` first, **before** having had the chance to take into account the `options` `'percentageEU3dec'` that modifies the allowed number of decimal places to `5`.\r\nif it would have first set the `options`, then given the `0.00123456` value, it would have correctly kept 5 decimals `0.00123` which would allow displaying `0,123 %`.\r\n\r\n---\r\nSo the question here is; is there a way when passing props to a component to define in which order they should be 'treated'?\r\n\r\nFor instance in the previous example using the `vue-autonumeric` component, I want to modify the `:value` **and** the `:options` at the same time using a single `obj` object, but I need to make sure the `:options` modification in done first before modifying the `value` (otherwise in this particular case the decimal places are dropped).\r\nSee [the example](https://codepen.io/AnotherLinuxUser/pen/YedNpv?editors=1010) where you can easily see that 'bug'.\r\n\r\nSo far, I can reliably get the correct result when I manually first change the `:options`, then change the `:value` in a `nextTick` block.\r\nI was wondering how I could do that *automatically* inside the `vue-autonumeric` component and prevent the user to have to do that manually each time they want to update the options/value.\r\n\r\n\r\nSome context for this issue: https://github.com/autoNumeric/vue-autoNumeric/issues/10\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7723","RelatedDescription":"Closed issue \"Unable when passing props to a component to define in which order they should be 'treated'\" (#7723)"},{"Id":"301074210","IsPullRequest":false,"CreatedAt":"2018-02-28T16:09:20","Actor":"razbakov","Number":"7722","RawContent":null,"Title":"Ambiguous combined usage of slot-scope and v-for ","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/NyeVEO](https://codepen.io/anon/pen/NyeVEO)\r\n\r\n### Steps to reproduce\r\nSee codepen link or use the following code:\r\n\r\n```html\r\n<div id=\"app\">\r\n  <my-list :items=\"items\">\r\n    <li v-for=\"num in red\" :key=\"num\" slot-scope=\"props\" :slot=\"'slot-'   num\" style=\"color:red\">{{ props.item.text }}</li>\r\n  </my-list>\r\n\r\n</div>\r\n\r\n<template id=\"my-list-template\">\r\n  <ul>\r\n     <template v-for=\"item in items\">\r\n       <slot :name=\"'slot-'   item.id\" :item=\"item\">\r\n         <li>{{ item.text }}</li>\r\n       </slot>\r\n     </template>\r\n    </slot>\r\n  </ul>\r\n</template>\r\n```\r\n\r\n```js\r\nconsole.clear()\r\n\r\nVue.component(\"my-list\",{\r\n  props:[\"items\"],\r\n  template: \"#my-list-template\",\r\n})\r\n\r\nnew Vue({\r\n  el:\"#app\",\r\n  data:{\r\n    items:[\r\n      {id: \"x\", text: \"item 1\", message: \"message 1\"},\r\n      {id: \"y\", text: \"item 2\", message: \"message 2\"},\r\n      {id: \"z\", text: \"item 3\", message: \"message 3\"}\r\n    ],\r\n    red:[\"y\", \"z\"]\r\n  }\r\n})\r\n\r\n```\r\n\r\n### What is expected?\r\n- no warning\r\n- or any way to solve the warning and have a working solution\r\n\r\n### What is actually happening?\r\nConsole warning:\r\n```\r\nAmbiguous combined usage of slot-scope and v-for on <li> (v-for takes higher priority). Use a wrapper <template> for the scoped slot to make it clearer.\r\n```\r\n\r\nThis template solves the warning, but breaks the functionality:\r\n\r\n```html\r\n<div id=\"app\">\r\n  <my-list :items=\"items\">\r\n    <template v-for=\"num in red\" >\r\n      <li :key=\"num\" slot-scope=\"props\" :slot=\"'slot-' + num\"  style=\"color:red\">{{ props.item.text }}</li>\r\n    </template>\r\n  </my-list>\r\n</div>\r\n```\r\n\r\nneither works this:\r\n\r\n```html\r\n<div id=\"app\">\r\n  <my-list :items=\"items\">\r\n    <template v-for=\"num in red\">\r\n      <template slot-scope=\"props\" :slot=\"'slot-' + num\">\r\n        <li style=\"color:red\">{{ props.item.text }}</li>\r\n      </template>\r\n    </template>\r\n  </my-list>\r\n</div>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7722","RelatedDescription":"Closed issue \"Ambiguous combined usage of slot-scope and v-for \" (#7722)"},{"Id":"300939205","IsPullRequest":false,"CreatedAt":"2018-02-28T08:54:24","Actor":"lemovel","Number":"7721","RawContent":null,"Title":"The webView loads the H5 blank.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/7721","RelatedDescription":"Closed issue \"The webView loads the H5 blank.\" (#7721)"},{"Id":"300935374","IsPullRequest":false,"CreatedAt":"2018-02-28T08:40:24","Actor":"decademoon","Number":"7720","RawContent":null,"Title":"Vue warns about missing required prop that has a default value","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/207/](http://jsfiddle.net/df4Lnuw6/207/)\r\n\r\n### Steps to reproduce\r\nSpecify a required prop with a default value:\r\n\r\n```js\r\nVue.component('comp', {\r\n    template: '<div>{{ typeof x }} {{ x }}</div>',\r\n    props: {\r\n        x: {\r\n            type: Number,\r\n            required: true,\r\n            default: 5,\r\n        },\r\n    },\r\n});\r\n```\r\n\r\nRender the component without specifying a value for that prop:\r\n\r\n```html\r\n<comp></comp>\r\n```\r\n\r\n### What is expected?\r\nThe component should render the following without any prop validation errors:\r\n\r\n```html\r\n<div>number 5</div>\r\n```\r\n\r\n### What is actually happening?\r\nThe component renders OK, but warns about missing required prop `x`.\r\n\r\n---\r\nWhile it's true that prop `x` is not specified, since it has a default value, there should be no warning message.\r\n\r\nWhat exactly does `required` check for? It appears that it checks two things:\r\n\r\n1. The prop should be *provided*, as in at least `<comp :x=\"...\"></comp>`.\r\n2. The prop value should be non-null and non-undefined.\r\n\r\nI think in the case where a required prop has a default value, (1) should be relaxed.\r\n\r\nOtherwise, how can I enforce a prop to never be null while also providing a default value if the prop value was not provided?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7720","RelatedDescription":"Open issue \"Vue warns about missing required prop that has a default value\" (#7720)"},{"Id":"300874039","IsPullRequest":false,"CreatedAt":"2018-02-28T08:20:36","Actor":"ireeoo","Number":"7719","RawContent":null,"Title":"怎样计算virtual dom 渲染的耗时","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://reeoo.me](https://reeoo.me)\r\n\r\n### Steps to reproduce\r\n比如\r\n在mounted生命周期里面，通过一个方法获取一段数据，然后设置到一个list上，页面进行渲染，这个过程的背后，涉及到virtual dom的计算和渲染，如果我想统计这个计算和渲染的耗时，应该怎么做？\r\n\r\n### What is expected?\r\n这不是一个bug report\r\n\r\n### What is actually happening?\r\n但是没有合适的分类\r\n具体说明见`Steps to reproduce`\r\n\r\n---\r\n上面的demo地址随便写的，因为不需要demo，但是issue模板必须要填。\r\n\r\nThx！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7719","RelatedDescription":"Closed issue \"怎样计算virtual dom 渲染的耗时\" (#7719)"},{"Id":"300432023","IsPullRequest":false,"CreatedAt":"2018-02-27T18:19:24","Actor":"ryannhg","Number":"7716","RawContent":null,"Title":"Warnings lead to different behavior between `vue.js` and `vue.min.js`","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/RyanNHG/pen/jZQWaz](https://codepen.io/RyanNHG/pen/jZQWaz)\r\n\r\n### Steps to reproduce\r\nCheck out the working example (using minified Vue 2.5.13):\r\nhttps://codepen.io/RyanNHG/pen/gvQPGg\r\n\r\nAnd compare it to this failing example (using dev Vue 2.5.13):\r\nhttps://codepen.io/RyanNHG/pen/jZQWaz\r\n\r\n### What is expected?\r\nI expect the minified and dev versions of Vue to result in the same outcome.\r\n\r\nThe `fromParent` property is defined on the parent, and I'd expect it to render in the child, even though it isn't explicitly defined on the `data` prop.\r\n\r\nPreferably, VueJS warnings wouldn't lead to any components failing to compile.\r\n\r\n### What is actually happening?\r\nIn the minified, production build, this code works as expected. But in the developer build, I am getting a warning that prevents the component from compiling.\r\n\r\n---\r\nI assume this is to prevent me from making a typo, or forgetting to add a data property to my child component.\r\n\r\nThese warning are super useful in general (thanks for taking the time to make them!)\r\n\r\nLet me know if you need any more examples to help you with this issue. Thanks again!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7716","RelatedDescription":"Closed issue \"Warnings lead to different behavior between `vue.js` and `vue.min.js`\" (#7716)"},{"Id":"300553657","IsPullRequest":false,"CreatedAt":"2018-02-27T14:42:18","Actor":"jiananshi","Number":"7717","RawContent":null,"Title":"[async component] add an API to reload load failed async component","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently vue async-component use http to load js file which may fail due to network break or timeout, if there is an API exposed in a way which can make `errorComp` lead user to interact and try to reload this component instead of refresh the whole page.\r\n\r\nIn addition, detailed error should be exposed to the `errorComp` so that it can show different states based on the error, tks in advance.\r\n\r\n### What does the proposed API look like?\r\n```vue\r\n<template>\r\n  <p v-if=\"$asyncComp.error\">{ $asyncComp.error.message }</p>\r\n  <button\r\n     v-if=\"$asyncComp.error && $asyncComp.error.name === 'NETWORK_TIMEOUT'\"\r\n     @click=\"reload\">click to reload</button>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n     methods: {\r\n       reload() { this.$asyncComp.reload(); }\r\n     }\r\n  };\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7717","RelatedDescription":"Closed issue \"[async component] add an API to reload load failed async component\" (#7717)"},{"Id":"300571738","IsPullRequest":false,"CreatedAt":"2018-02-27T10:55:55","Actor":"Rouberg","Number":"7718","RawContent":null,"Title":"when use v-model with Array prop, update prop unexpected by someway.","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/5uLrp7w6/](https://jsfiddle.net/5uLrp7w6/)\r\n\r\n### Steps to reproduce\r\nstep1. open\r\n\r\nstep2. click tab `replied`.\r\n\r\nThe detail I wrote in comments.\r\n\r\n### What is expected?\r\ncomponent update it's share data between parent component should be more strict.\r\n\r\nI wish statement `list[0].active = true` should work.\r\n\r\n### What is actually happening?\r\nstatement `list[0].active = true` work unexpected, and it modified share data between it's parent component.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7718","RelatedDescription":"Closed issue \"when use v-model with Array prop, update prop unexpected by someway.\" (#7718)"},{"Id":"300275122","IsPullRequest":false,"CreatedAt":"2018-02-26T15:14:12","Actor":"ralphchristianeclipse","Number":"7715","RawContent":null,"Title":".global or .window modifier for v-on listeners or new property listeners","State":"closed","Body":"### What problem does this feature solve?\r\nthis solves the issue for components\r\n\r\nlike keys not being called when it's not focused on the element which leads to doing this\r\n\r\nwindow.addEventListener(\"keyup\",this.event)\r\n\r\n\r\nthen on destroy\r\n\r\nwindow.removeEventListener(\"keyup\",this.event)\r\n\r\nthis will solve the issue for doing\r\n\r\nbeforeMount registering of events\r\n\r\nand beforeDestroy\r\n\r\nso it vue will handle this the Vue way\r\n\r\nlike handling keycodes\r\n\r\n### What does the proposed API look like?\r\nwe can do the keyup event like this on an input\r\n\r\n@keyup.global=\"close\"\r\n\r\nor\r\n\r\n@keyup.window=\"close\"\r\n\r\nor maybe on the vue instance\r\n\r\nlisteners: {\r\n  keyup: [this.event]\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7715","RelatedDescription":"Closed issue \".global or .window modifier for v-on listeners or new property listeners\" (#7715)"},{"Id":"300230115","IsPullRequest":false,"CreatedAt":"2018-02-26T13:15:51","Actor":"david-kiraly","Number":"7714","RawContent":null,"Title":"Incrementing a variable in a v-for loop increments hundred times more than expected","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/us4mwkjv/19/](https://jsfiddle.net/us4mwkjv/19/)\r\n\r\n### Steps to reproduce\r\nClick on Run and notice the speed of rendering and the value of the variable \"incr\" after rendering\r\n\r\n### What is expected?\r\nI expect variable \"incr\" increases to 2 after v-for finishes.\r\n\r\n### What is actually happening?\r\nVariable \"incr\" increases to 306 after v-for finishes and for that my app works slow. I am also getting a Vue error of \"may have an infinite update loop\" in the console.\r\nI just want to have id-s of 0, 1 and 2 in this example instead of 102, 204 and 306.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7714","RelatedDescription":"Closed issue \"Incrementing a variable in a v-for loop increments hundred times more than expected\" (#7714)"},{"Id":"300224103","IsPullRequest":false,"CreatedAt":"2018-02-26T12:46:12","Actor":"zsky","Number":"7713","RawContent":null,"Title":"Use better types to model prop type","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://github.com/zsky/vue-date-type-issue](https://github.com/zsky/vue-date-type-issue)\r\n\r\n### Steps to reproduce\r\n```\r\nnpm i\r\nnpm run build\r\n```\r\n\r\n### What is expected?\r\nNo typescript error\r\n\r\n### What is actually happening?\r\nTypescript report error: Property 'getTime' does not exist on type 'string'\r\n\r\n***\r\nI use vue with typescript, I want to set a component prop type as Date, so I do this:\r\n```typescript\r\nVue.extend({\r\n  props: { start: Date },\r\n  created() { \r\n     this.start;  // Expect type Date, but String\r\n  }\r\n});\r\n```\r\n\r\nThen I find something could be userful:\r\nIn options.d.ts,\r\n```typescript\r\nexport type Prop<T> = { (): T } | { new (...args: any[]): T & object }\r\n```\r\nMake a simple test:\r\n```typescript\r\nfunction test<T>(opts: { p1: Prop<T> }): T {\r\n    return {} as T;\r\n}\r\nlet result = test({ p1: Date });  // Expect type Date, but String\r\n```\r\nBut I still don't know how to solve it, thanks for any suggestion.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7713","RelatedDescription":"Open issue \"Use better types to model prop type\" (#7713)"},{"Id":"300148378","IsPullRequest":true,"CreatedAt":"2018-02-26T08:34:46","Actor":"ktsn","Number":"7712","RawContent":null,"Title":"fix(types): fix wrong errorCaptured type","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n`errorCaptured` lifecycle hook actually receives some parameters. https://vuejs.org/v2/api/#errorCaptured","Url":"https://github.com/vuejs/vue/pull/7712","RelatedDescription":"Open PR \"fix(types): fix wrong errorCaptured type\" (#7712)"},{"Id":"300029849","IsPullRequest":false,"CreatedAt":"2018-02-25T17:57:58","Actor":"oanstein","Number":"7711","RawContent":null,"Title":"HTML Keyboard Input element (<kbd>) is not supported","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/128732/](https://jsfiddle.net/50wL7mdz/128732/)\r\n\r\n### Steps to reproduce\r\nJust add a `<kbd>` element\r\n\r\n### What is expected?\r\nRender `<kdb>` element correctly\r\n\r\n### What is actually happening?\r\n[Vue warn]: Unknown custom element: <kdb> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7711","RelatedDescription":"Closed issue \"HTML Keyboard Input element (<kbd>) is not supported\" (#7711)"},{"Id":"299996132","IsPullRequest":false,"CreatedAt":"2018-02-25T12:43:36","Actor":"greedying","Number":"7709","RawContent":null,"Title":"can Vue get the new props data in hook activated ?","State":"closed","Body":"### What problem does this feature solve?\r\nLet suppose I have a component child, which have a prop id。\r\nthe child use keep-alive。\r\nso I query data from server in the  activated。\r\nbut I found the prop id' s value is old。\r\n\r\nI try to use `this.$nextTick` to get the new id, but not work\r\n`setTimeout`  work, but I do not think it is a right way.\r\n\r\nso, is there a way to get the right value of prop data in  activated？ \r\n\r\n### What does the proposed API look like?\r\njust like  `this.$afterProp(function)`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7709","RelatedDescription":"Closed issue \"can Vue get the new props data in hook activated ?\" (#7709)"},{"Id":"300018545","IsPullRequest":false,"CreatedAt":"2018-02-25T11:31:29","Actor":"miljan-aleksic","Number":"7710","RawContent":null,"Title":"Slots resolving issue on subsequent components","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/316wjk4w41](https://codesandbox.io/s/316wjk4w41)\r\n\r\n### Steps to reproduce\r\nAs stated by the [docs](https://vuejs.org/v2/guide/render-function.html#slots-vs-children) slots() in fn components should be used only when the component knows about them, otherwise should pass along the children and the next component could deal with them.\r\n\r\n### What is expected?\r\nI would expect that all children component would resolve slots correctly as long as children are passed along.\r\n\r\n### What is actually happening?\r\nOnly the initial component gets resolved the slots well, while any subsequent component that gets the children passed along doesn't.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7710","RelatedDescription":"Open issue \"Slots resolving issue on subsequent components\" (#7710)"},{"Id":"299939208","IsPullRequest":false,"CreatedAt":"2018-02-24T15:47:16","Actor":"generateui","Number":"7708","RawContent":null,"Title":"instanceof in expressions does not work","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/127177/](https://jsfiddle.net/50wL7mdz/127177/)\r\n\r\n### Steps to reproduce\r\n1. create a class\r\n2. set data to use an instance of that class\r\n3. create expression in for example a \"v-if\" using instanceof\r\n\r\nNote that the expression does not return true (the span is not rendered in example) while it is expected\r\n\r\n### What is expected?\r\nexpression evaluates to true\r\n\r\n### What is actually happening?\r\nexpression does not return true resulting in not displayed span\r\n\r\n---\r\nworkaround is to create expression in the form of \"instance.contructor.name === 'A'\". But this is not typesafe, and it \"stringly-typed\" instead thus not toolable.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7708","RelatedDescription":"Closed issue \"instanceof in expressions does not work\" (#7708)"},{"Id":"299932610","IsPullRequest":false,"CreatedAt":"2018-02-24T10:55:11","Actor":"Axure","Number":"7707","RawContent":null,"Title":"Styles are not updated in time","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://github.com/Axure/sticky-scroll-demo](https://github.com/Axure/sticky-scroll-demo)\r\n\r\n### Steps to reproduce\r\n```bash\r\nnpm run dev\r\n```\r\nand open `http://localhost:8080`. Scroll inside the region with black border from top to bottom. You will see another div with black border with \"text\" inside it.\r\n\r\n### What is expected?\r\nThe text should always be right on the midline of the visible area of the smaller bordered div.\r\n\r\n### What is actually happening?\r\nThe text is sometimes not on the midline, which produces visible \"lags\".\r\n\r\nYou can see wrongly rendered frames in the developer tools, e.g.:\r\n![photo_2018-02-24_17-07-06](https://user-images.githubusercontent.com/3424317/36629700-a06edd4e-1994-11e8-9b40-f1a4c1757682.jpg)\r\n\r\n(Note that for clarity I temporarily set a red border for the div of the text.)\r\n\r\n---\r\nAn online demo is available at https://axure.github.io/sticky-scroll-demo/.\r\n\r\nThe effect is achieved by modifying the `translateY` of the text inside the smaller div on every scroll. It seems that the modified styled is not applied in time, so the a newly scrolled frame is rendered using the old style.\r\n\r\nI highly suspect that not only styles, but also other data are not applied in time in possible scenarios.\r\n\r\nIt is not a problem of the browser, since the raw DOM solution works well:\r\n  - source: https://github.com/Axure/stickty-scroll-correct/\r\n  - demo: https://axure.github.io/stickty-scroll-correct/\r\n\r\nAngular and React do not suffer from this problem:\r\n  - React source: https://github.com/Axure/sticky-scroll-react/\r\n  - React demo: https://axure.github.io/sticky-scroll-react/\r\n  - Angular source: https://github.com/Axure/sticky-scroll-angular/\r\n  - Angular demo: https://axure.github.io/sticky-scroll-angular/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7707","RelatedDescription":"Open issue \"Styles are not updated in time\" (#7707)"},{"Id":"299917992","IsPullRequest":false,"CreatedAt":"2018-02-24T10:37:47","Actor":"kingofwhales","Number":"7706","RawContent":null,"Title":"Class change for transition not working in mounted lifecycle","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/asiankingofwhales/pen/qxMZrp](https://codepen.io/asiankingofwhales/pen/qxMZrp)\r\n\r\n### Steps to reproduce\r\n1. After the component is mounted change the class to initiate the transition.\r\n2. Not working because the element snaps from left to right without transition\r\n\r\n### What is expected?\r\nThe element should gradually transition from left to right\r\n\r\n### What is actually happening?\r\nthe element jumps from left to right.\r\n\r\n---\r\nWrapping the class change in setTimeout would allow the transition effect to work. However, without the setTimeout, the element simply jumps from left to right. \r\n\r\nSame issue can be replicated in class binding too: https://codepen.io/asiankingofwhales/pen/LQJNvg\r\n\r\nI apologize if this is not a bug but it's been a mystery for a while so i am posting here as a last resort.\r\n\r\np.s\r\nhttps://stackoverflow.com/questions/48658868/class-change-in-mounted-not-triggering-transition-vuejs\r\nhttps://forum.vuejs.org/t/class-change-in-mounted-not-triggering-transition-vuejs/27115/4\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7706","RelatedDescription":"Closed issue \"Class change for transition not working in mounted lifecycle\" (#7706)"},{"Id":"299808901","IsPullRequest":false,"CreatedAt":"2018-02-23T18:36:46","Actor":"STUkh","Number":"7705","RawContent":null,"Title":"Events with modifiers always return \"undefined\"","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ybr5s354/15/](https://jsfiddle.net/ybr5s354/15/)\r\n\r\n### Steps to reproduce\r\n1. Create event with any modifier\r\n2. Create directive and get event instance from vnode.\r\n3. Call event (maybe dummy event will required)\r\n\r\n### What is expected?\r\nEvent with and without modifiers return function value\r\n\r\n### What is actually happening?\r\nOnly event without modifier return value.\r\nEvents with modifiers always return undefined\r\n\r\n---\r\nFixed in this PR: https://github.com/vuejs/vue/pull/7704\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7705","RelatedDescription":"Open issue \"Events with modifiers always return \"undefined\"\" (#7705)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"301281860","IsPullRequest":true,"CreatedAt":"2018-03-01T05:25:05","Actor":"DrSensor","Number":"2085","RawContent":null,"Title":"Support this.$router.options in Typescript","State":"open","Body":"There is a time when a user wants to access metadata that was defined in `router.ts` ([example](https://github.com/DrSensor/F.I.D.E/blob/develop/src/renderer/components/NavigationSidebar.vue#L93)). I notice that in the typedef `options` is missing.\r\n\r\n![screenshot from 2018-03-01 12-16-59](https://user-images.githubusercontent.com/4953069/36828284-6ed0e5d8-1d4b-11e8-9dc6-0a62c005c384.png)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2085","RelatedDescription":"Open PR \"Support this.$router.options in Typescript\" (#2085)"},{"Id":"301272914","IsPullRequest":true,"CreatedAt":"2018-03-01T04:20:01","Actor":"cironunes","Number":"2084","RawContent":null,"Title":"feat: introduce afterResolve navigation hook","State":"open","Body":"Still missing tests, but this gives an idea of what I'm trying to achieve.\r\n\r\nLooking forward to hear from you guys.\r\n\r\nCloses #2079 ","Url":"https://github.com/vuejs/vue-router/pull/2084","RelatedDescription":"Open PR \"feat: introduce afterResolve navigation hook\" (#2084)"},{"Id":"301263579","IsPullRequest":false,"CreatedAt":"2018-03-01T03:15:04","Actor":"TyroneYvesChen","Number":"2083","RawContent":null,"Title":"官网上部分例子应使用``而不是''","State":"closed","Body":"#如：const User = {\r\n  template: '<div>User {{ $route.params.id }}</div>'\r\n}","Url":"https://github.com/vuejs/vue-router/issues/2083","RelatedDescription":"Closed issue \"官网上部分例子应使用``而不是''\" (#2083)"},{"Id":"301257346","IsPullRequest":false,"CreatedAt":"2018-03-01T02:36:18","Actor":"decademoon","Number":"2082","RawContent":null,"Title":"beforeRouteEnter next callback is not called (in this very specific async situation)","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/271/](http://jsfiddle.net/df4Lnuw6/271/)\r\n\r\n### Steps to reproduce\r\n- Have a `<router-view v-if=\"ready\">` in the root component's template with `ready` initially `false`.\r\n- Have a single route for path `/` whose component has a `beforeRouteEnter` hook.\r\n- Perform the following in the root component's `created` hook:\r\n  1. Replace the route with `/?x=1` (this causes the same component to be reused).\r\n  2. After a timeout, set `ready` to `true`.\r\n\r\n### What is expected?\r\nThe callback function passed to `next` in the `beforeRouteEnter` hook should be called.\r\n\r\n### What is actually happening?\r\nThe callback function passed to `next` in the `beforeRouteEnter` is not called.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2082","RelatedDescription":"Open issue \"beforeRouteEnter next callback is not called (in this very specific async situation)\" (#2082)"},{"Id":"301139822","IsPullRequest":true,"CreatedAt":"2018-02-28T18:50:58","Actor":"felipe-developer","Number":"2081","RawContent":null,"Title":"Starting portuguese (pt-br) translation","State":"open","Body":"I started the Portuguese translation (pt-br). I count on the help of those who want to collaborate.","Url":"https://github.com/vuejs/vue-router/pull/2081","RelatedDescription":"Open PR \"Starting portuguese (pt-br) translation\" (#2081)"},{"Id":"300943819","IsPullRequest":false,"CreatedAt":"2018-02-28T09:10:15","Actor":"robertmylne","Number":"2080","RawContent":null,"Title":"Multiple Routers","State":"closed","Body":"Are multiple routers supported.\r\n\r\nFor example in Laravel I have routes:\r\n`/account` and `/dashboard`\r\n\r\nCan I use a different set of Vue routes for each Laravel route? So two independent instances of Vue routers?","Url":"https://github.com/vuejs/vue-router/issues/2080","RelatedDescription":"Closed issue \"Multiple Routers\" (#2080)"},{"Id":"300896544","IsPullRequest":false,"CreatedAt":"2018-02-28T05:28:07","Actor":"cironunes","Number":"2079","RawContent":null,"Title":"afterResolve global navigation hook","State":"open","Body":"### What problem does this feature solve?\r\nAs opposed to `beforeResolve`, `afterResolve` would wait until the navigation is done and trigger the registered callbacks.\r\n\r\nThe main reason for that is to be able to track events in the right moment, with the proper url in place, globally.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nrouterInstance.afterResolve(cb);\r\nfunction cb(from, to, next) {...}\r\n```\r\n\r\nI'd love to submit a PR if that's something you'd like to have.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2079","RelatedDescription":"Open issue \"afterResolve global navigation hook\" (#2079)"},{"Id":"300769125","IsPullRequest":false,"CreatedAt":"2018-02-27T20:00:22","Actor":"cdekok","Number":"2078","RawContent":null,"Title":"Incorrect typehint","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L27](https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L27)\r\n\r\n### Steps to reproduce\r\nThis should be a string not a number\r\n\r\n### What is expected?\r\na string as typehint\r\n\r\n### What is actually happening?\r\na number as typehint\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2078","RelatedDescription":"Closed issue \"Incorrect typehint\" (#2078)"},{"Id":"300643964","IsPullRequest":false,"CreatedAt":"2018-02-27T14:46:40","Actor":"oles","Number":"2077","RawContent":null,"Title":"beforeRouteUpdate is not called on change from multiple named views","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yfj5tmh4/](https://jsfiddle.net/yfj5tmh4/)\r\n\r\n### Steps to reproduce\r\n0. Open console\r\n1. Click on /1, then /2\r\n2. Every beforeRouteUpdate is called\r\n3. Click on /2/qux, then click on /1 \r\n\r\n### What is expected?\r\nEvery beforeRouteUpdate is called, resulting in console messages.\r\n\r\n### What is actually happening?\r\nNo beforeRouteUpdate is called.\r\n\r\n---\r\nEverything works as expected when clicking on /1 if you've clicked on /2 before /2/qux.\r\n\r\nIt could be that I've miss-understood something, but I'm not 100% sure, and couldn't find any related issues - so here we are :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2077","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on change from multiple named views\" (#2077)"},{"Id":"300565322","IsPullRequest":false,"CreatedAt":"2018-02-27T10:06:55","Actor":"CKGrafico","Number":"2076","RawContent":null,"Title":"Specify prop type","State":"closed","Body":"I want to pass a number to a component. My router is like this:\r\n```\r\n{\r\n     path: ':id',\r\n     name: 'schoolPrograms-edit',\r\n     component: () => import('./school-programs-edit/school-programs-edit.component'),\r\n     props: true\r\n}\r\n```\r\n\r\nAnd the component:\r\n\r\n```\r\nexport default class SchoolProgramsEditComponent extends Vue {\r\n    @Prop({type: String})\r\n    id: string;\r\n\r\n    // Vue pass a string\r\n    private get _id(): number {\r\n        return parseInt(this.id, 10);\r\n    }\r\n```\r\n\r\nHow can I specify that id is a number?\r\nThis doesn't work, with routes\r\n```\r\nexport default class SchoolProgramsEditComponent extends Vue {\r\n    @Prop({type: Number})\r\n    id: number;\r\n```\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2076","RelatedDescription":"Closed issue \"Specify prop type\" (#2076)"},{"Id":"300381089","IsPullRequest":false,"CreatedAt":"2018-02-26T20:17:42","Actor":"jesperlandberg","Number":"2075","RawContent":null,"Title":"Make route change wait for store update?","State":"closed","Body":"My question is, when clicking a link, is there any way to make the route change wait for the vuex store to be updated? I'm setting some store variables on link click, but sometimes the route change is a tiny bit to fast.","Url":"https://github.com/vuejs/vue-router/issues/2075","RelatedDescription":"Closed issue \"Make route change wait for store update?\" (#2075)"},{"Id":"300139714","IsPullRequest":false,"CreatedAt":"2018-02-26T11:01:21","Actor":"Overdrivr","Number":"2074","RawContent":null,"Title":"Full support for anchor tags","State":"closed","Body":"### What problem does this feature solve?\r\nAnchor tags cannot be implemented correctly in the current state of things. There are a few techniques to hack a way around, but none of them seem to cover all the following cases:\r\n\r\n- Paths with anchors should always lead to the anchor if reached multiple times (currently, only the first time works, even by refreshing the page)\r\n- Anchor tags urls should be shareable (users should be capable of bookmarking/sharing URLs, in a way that the URL will lead them back directly to the anchor)\r\n\r\nAFAIK, there two solutions currently that partially support those requirements: [vue-router Scroll behavior](https://router.vuejs.org/en/advanced/scroll-behavior.html) that does not support first requirement in a robust manner, and [vue-scrollto](https://github.com/rigor789/vue-scrollto) that does not support second requirement since it's just scrolling without any sense of routing/url.\r\n\r\n### What does the proposed API look like?\r\nThe API is already there, using the hash field\r\n\r\n```\r\n<router-link :to=\"{name: 'SomeVue', hash:'#anchor'}\">Link to anchor</router-link>\r\n\r\n// or\r\n\r\n<a href=\"/somevue#anchor>Link to anchor</a>\r\n```\r\n\r\n```\r\n<div id=\"anchor\">Anchor</div>\r\n```\r\n\r\nWe only need to implement the proper behavior for supporting use cases presented above.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2074","RelatedDescription":"Closed issue \"Full support for anchor tags\" (#2074)"},{"Id":"300092152","IsPullRequest":false,"CreatedAt":"2018-02-26T03:33:44","Actor":"chebysheph","Number":"2073","RawContent":null,"Title":"\"localhost:8080/#/\" changed to \"localhost:8080/?#/\" ?","State":"closed","Body":"### What problem does this feature solve?\r\nFor example, in page \"localhost:8080/#/temp1\" has a input tag, when I modified the input value, and press \"enter\" button, because I did not add \"@keydown.enter\" event on the input tag, so the page url become to \"localhost:8080/?#/login\", but the right result should be \"localhost:8080/#/login\", so  I would like to know how the \"?\" add into the url?And what exactly happened when I press \"enter\" button?\r\n\r\n### What does the proposed API look like?\r\nFor example, in page \"localhost:8080/#/temp1\" has a input tag, when I modified the input value, and press \"enter\" button, because I did not add \"@keydown.enter\" event on the input tag, so the page url become to \"localhost:8080/?#/login\", but the right result should be \"localhost:8080/#/login\", so  I would like to know how the \"?\" add into the url?And what exactly happened when I press \"enter\" button?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2073","RelatedDescription":"Closed issue \"\"localhost:8080/#/\" changed to \"localhost:8080/?#/\" ?\" (#2073)"},{"Id":"299384501","IsPullRequest":false,"CreatedAt":"2018-02-22T15:06:42","Actor":"Dadibom","Number":"2072","RawContent":null,"Title":"Allow router.replace without triggering scrollBehavior","State":"closed","Body":"### What problem does this feature solve?\r\nUsing router.replace to update query parameters. However this triggers scrollBehavior and scrolls to the top. As far as I know, there is no way to distinguish between a push and a replace event.\r\n\r\n### What does the proposed API look like?\r\nHere are some options:\r\n\r\nCould be a simple boolean passed to the scrollBehavior function\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition, isPush) {\r\n```\r\n\r\nIt could be put in the route object to be consistent with this suggestion: https://github.com/vuejs/vue-router/issues/1620\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition) {\r\n    const isPush = toRoute.navigationType === 'push';\r\n```\r\n\r\nI could also work with the replace function accepting an additional parameter, or having a new signature, that simply updates the url and `router.$route` without going through guards, scrollbehavior etc. I originally just updated the state manually to circumvent this (using history.replaceState), however that caused some other sneaky bugs since vue-router didn't know about these changes.\r\n\r\n```\r\nrouter.replace(route, true)\r\n// OR\r\nrouter.replace(route, { noEvents/silent: true })\r\n// OR\r\nrouter.silentReplace(route)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2072","RelatedDescription":"Closed issue \"Allow router.replace without triggering scrollBehavior\" (#2072)"},{"Id":"299355922","IsPullRequest":false,"CreatedAt":"2018-02-22T14:01:56","Actor":"Dadibom","Number":"2071","RawContent":null,"Title":"Unexpected router.replace behaviour","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/e3odg60s/2/](https://jsfiddle.net/e3odg60s/2/)\r\n\r\n### Steps to reproduce\r\nClick push next three times\r\nthree states should be added (1,2,3)\r\nNow click replace three times. The history list should now look like this:\r\n[1,2,6]\r\n\r\nNow use the back button to go back to the start. _First navigation simply does not work._\r\nThen the order is as follows: [5, 4, 2, 1]\r\n\r\nIt appears that replace actually only _replaces_ on the first call, subsequent calls instead push states.\r\n\r\n### What is expected?\r\nReplace should always replace the current state\r\n\r\n### What is actually happening?\r\nReplace pushes new states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2071","RelatedDescription":"Closed issue \"Unexpected router.replace behaviour\" (#2071)"},{"Id":"298727966","IsPullRequest":true,"CreatedAt":"2018-02-20T19:58:09","Actor":"samgre","Number":"2070","RawContent":null,"Title":"Implements issue #2040 <router-link .. exact-path />","State":"open","Body":"I've needed this feature many times too. Since there is an issue open, I decided to give it a try solving it even though it's not yet tagged \"contribution welcome\".\r\n\r\nPlease take a look and see if it fits to vue-router.","Url":"https://github.com/vuejs/vue-router/pull/2070","RelatedDescription":"Open PR \"Implements issue #2040 <router-link .. exact-path />\" (#2070)"},{"Id":"298558080","IsPullRequest":false,"CreatedAt":"2018-02-20T11:23:00","Actor":"BorjaRafols","Number":"2069","RawContent":null,"Title":"pass on extra arguments to `scrollTo` to enable smooth scrolling with behaviour","State":"open","Body":"### What problem does this feature solve?\r\nSmooth scrolling to same page anchor tags. \r\n\r\nRight now smooth scrolling can only work by custom implementations, but the new Firefox spec contemplates a scrollBehaviour css property which can be polyfilled in older browsers.\r\n\r\nVue-router should take advantage of this new property\r\n\r\n### What does the proposed API look like?\r\nBasically, the object returned from the scrollBehavior function should have some more parameters and change the current x, y positions into named parameters.\r\n\r\nThis is an example of the future object to be returned.\r\n\r\n{ \r\n    top: 2500, // this is the x value\r\n    left: 0, // this is the y value\r\n    behavior: 'smooth' //\r\n  };\r\n\r\nThis is getting implemented in most current browsers, couldn't find the spec thought. If anybody finds it please sahre the link.\r\n\r\nAnyway, there is this beatyfull polyfill: https://www.npmjs.com/package/smoothscroll-polyfill\r\n\r\nwhich adds this scrollTo({}) behaviour to old browsers.\r\n\r\nI haven't dig much into the vue-router code. But it looks to me as if the only change needed is this file:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js\r\n\r\nMaybe we could add some conditions on line 126 to return the current implementation or translate the old object:\r\n\r\n{ x, y } to\r\n\r\n{ top: x, left: y, behaviour: x }\r\n\r\nSorry if markup sucks, I'll do some more work if this gets atention\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2069","RelatedDescription":"Open issue \"pass on extra arguments to `scrollTo` to enable smooth scrolling with behaviour\" (#2069)"},{"Id":"298522600","IsPullRequest":false,"CreatedAt":"2018-02-20T09:26:05","Actor":"mason-meng","Number":"2068","RawContent":null,"Title":"Uncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'selector' of null","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nUncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'selector' of null\r\n","Url":"https://github.com/vuejs/vue-router/issues/2068","RelatedDescription":"Closed issue \"Uncaught (in promise) Error: [vue-router] TypeError: Cannot read property 'selector' of null\" (#2068)"},{"Id":"298112119","IsPullRequest":false,"CreatedAt":"2018-02-18T20:57:37","Actor":"john-ko","Number":"2067","RawContent":null,"Title":"Vue-router to fail gracefully when code-split deps fail to load","State":"closed","Body":"### What problem does this feature solve?\r\nWhen navigating to `https://vue-hn.now.sh/top` and if a specific code-split dependency fails to load, the url is changed to `https://vue-hn.now.sh`\r\n\r\nsteps to reproduce:\r\n1. navigate to https://vue-hn.now.sh/top\r\n2. developer tools > network tools > block url request 1.js\r\n3. refresh https://vue-hn.now.sh/top\r\n4. url is now https://vue-hn.now.sh\r\n\r\n\r\n### What does the proposed API look like?\r\nN/A\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2067","RelatedDescription":"Closed issue \"Vue-router to fail gracefully when code-split deps fail to load\" (#2067)"},{"Id":"298050916","IsPullRequest":false,"CreatedAt":"2018-02-18T16:19:31","Actor":"getriebesand","Number":"2066","RawContent":null,"Title":"Proposal: Link should provide an API to get info about its current state","State":"closed","Body":"### What problem does this feature solve?\r\nWith info about Links active state you can trigger animations or something else.\r\n\r\nPlease see this issue from someone else:\r\nhttps://github.com/vuejs/vue-router/issues/774\r\nhttps://forum.vuejs.org/t/get-active-state-of-router-link-using-javascript/1462\r\nand his gist: https://gist.github.com/aplr/b49b74103a5c4adba57379cc7ce932da\r\n\r\nMy use case is this component from vue-mdc-adapter\r\nhttps://github.com/stasson/vue-mdc-adapter/blob/master/components/tabs/mdc-tab.vue\r\n\r\nIt is using https://github.com/material-components/material-components-web for rendering and I need to trigger foundation.setActive() from mdc when the underlying router-link changes to active\r\n\r\n\r\n### What does the proposed API look like?\r\nAn event on active state change and a data var or computed var for active and exactActive\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2066","RelatedDescription":"Closed issue \"Proposal: Link should provide an API to get info about its current state\" (#2066)"},{"Id":"297649508","IsPullRequest":true,"CreatedAt":"2018-02-16T11:27:31","Actor":"davidgaroro","Number":"2065","RawContent":null,"Title":"Misspelling update passing-props.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2065","RelatedDescription":"Closed or merged PR \"Misspelling update passing-props.md\" (#2065)"},{"Id":"297342087","IsPullRequest":true,"CreatedAt":"2018-02-15T06:31:58","Actor":"Dri4n","Number":"2064","RawContent":null,"Title":"Dynamically add child routes to an existing route #1156","State":"open","Body":"Reason:\r\nwe need to add dynamic routes that are associated with a parent.\r\n\r\nUnit Test:\r\nrouter.addRoutes - from line \"nested routes existing children relation\".\r\n\r\nExcuse me if this PR does not meet the guidelines, is my first PR in OpenSource.\r\n\r\nThanks!","Url":"https://github.com/vuejs/vue-router/pull/2064","RelatedDescription":"Open PR \"Dynamically add child routes to an existing route #1156\" (#2064)"},{"Id":"297004960","IsPullRequest":false,"CreatedAt":"2018-02-14T08:14:49","Actor":"nikugogoi","Number":"2063","RawContent":null,"Title":"filter is executed on route change","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nikugogoi/mj6ajs9e/](https://jsfiddle.net/nikugogoi/mj6ajs9e/)\r\n\r\n### Steps to reproduce\r\nfilter is called once at the beginning (detected by alert)\r\nagain it is called on route change (alert pop up)\r\n\r\n### What is expected?\r\nfilter should not be executed on route change?\r\n\r\n### What is actually happening?\r\nfilter is called on route change\r\n\r\n---\r\nis This a normal behaviour?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2063","RelatedDescription":"Closed issue \"filter is executed on route change\" (#2063)"},{"Id":"297002051","IsPullRequest":false,"CreatedAt":"2018-02-14T07:42:31","Actor":"mrnateriver","Number":"2062","RawContent":null,"Title":"Incorrent route props in beforeRouteEnter when using <transition>","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/L7hscd8h/3877/](http://jsfiddle.net/L7hscd8h/3877/)\r\n\r\n### Steps to reproduce\r\n1. Open provided jsfiddle.net link;\r\n2. Open browser console;\r\n3. Click on 'first a' <router-link>;\r\n4. Click on 'first b' <router-link>;\r\n5. Click on 'second a' <router-link>;\r\n6. Click on 'first a' <router-link> again;\r\n7. Inspect console output.\r\n\r\n### What is expected?\r\nComponent props should be set to ones defined in route in `beforeRouteEnter` hook even when transitions are used.\r\n\r\nExpected output:\r\n```\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nvm.title: first_b\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nvm.title: first_a\r\nvue-component-3: mounted\r\n```\r\n\r\n### What is actually happening?\r\nIt seems that props are set after the transition is finished, as well as the `mounted` hook is called. The connection between those two is easily determined by looking at the order of console output with or without transition tag (like at this slightly modified JSFiddle: http://jsfiddle.net/L7hscd8h/3878/).\r\n\r\nActual output:\r\n```\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nvm.title: first_b\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nvm.title: first_b   <--- the problem\r\nvue-component-3: mounted\r\n```\r\n\r\n---\r\nI presume this issue has something to do with Vue reusing components (which had only been a pain in the head for me), since it doesn't occur when switching routes with the same component.\r\n\r\nIt is undeniably vital for correct values of props to be available in `beforeRouteEnter` since they can be used to fetch data asynchronously for components. Or, if you like, not fetching, but sending.\r\n\r\nUsed versions: \r\nvue-router 3.0.1 (sha512-vLLoY452L JBpALMP5UHum9 7nzR9PeIBCghU9ZtJ1eWm6ieUI8Zb/DI3MYxH32bxkjzYV1LRjNv4qr8d uX/w==)\r\nvue 2.5.13 (sha512-3D lY7HTkKbtswDM4BBHgqyq qo8IAEE8lz8va1dz3LLmttjgo0FxairO4r1iN2OBqk8o1FyL4hvzzTFEdQSEw==)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2062","RelatedDescription":"Open issue \"Incorrent route props in beforeRouteEnter when using <transition>\" (#2062)"},{"Id":"296990781","IsPullRequest":false,"CreatedAt":"2018-02-14T06:36:11","Actor":"C0deZLee","Number":"2061","RawContent":null,"Title":"Cannot catch promise in Navigation Guards","State":"closed","Body":"My code: \r\n\r\nFor guard\r\n```\r\nconst isAuthenticatedAndNotVerified = (to, from, next) => {\r\n  store.dispatch('refresh')\r\n    .then(() => {\r\n      if (store.getters.verification_level >= 2) return store.dispatch('getWallet').then(() => next({ name: 'dashboard' }))\r\n      return next()\r\n    })\r\n    .catch(() => next({ name: 'user_login' }))\r\n}\r\n```\r\n\r\nFor route\r\n```\r\n{\r\n    path: '/signup/followup',\r\n    component: UserSignUpFollowUpView,\r\n    name: 'user_signup_followup',\r\n    beforeEnter: isAuthenticatedAndNotVerified,\r\n  },\r\n```\r\nOn the last line, I want router to change route if the promise is rejected.\r\nHowever, instead of change route, I got an  `Uncaught (in promise)` in console and route doesn't change. \r\nI think this could be a bug","Url":"https://github.com/vuejs/vue-router/issues/2061","RelatedDescription":"Closed issue \"Cannot catch promise in Navigation Guards\" (#2061)"},{"Id":"296795851","IsPullRequest":true,"CreatedAt":"2018-02-13T16:15:30","Actor":"SteffenDE","Number":"2060","RawContent":null,"Title":"Fix for #1862","State":"open","Body":"As I am also relying on having dynamically added routes and a fallback 404 route, I tried fixing #1862 by checking not only if the matched routes length changed but also if the matched route itself changed:\r\n`route.matched[0] === current.matched[0]`\r\n\r\nIs this a valid way to fix this issue? Or do we have to check if there is more than one matched route?","Url":"https://github.com/vuejs/vue-router/pull/2060","RelatedDescription":"Open PR \"Fix for #1862\" (#2060)"},{"Id":"296388378","IsPullRequest":false,"CreatedAt":"2018-02-12T14:14:23","Actor":"devSeb","Number":"2059","RawContent":null,"Title":"Make simple anchor","State":"closed","Body":"Hello\r\n\r\nI would like to make simple anchor with my app\r\n\r\nFirst example\r\nApply Now\r\nfirst click = reload the page\r\nWork if you click the second time on the link\r\n\r\nWe can do with router-link ?\r\nI didn't see examples to do this","Url":"https://github.com/vuejs/vue-router/issues/2059","RelatedDescription":"Closed issue \"Make simple anchor\" (#2059)"},{"Id":"296387291","IsPullRequest":false,"CreatedAt":"2018-02-12T14:10:42","Actor":"devSeb","Number":"2058","RawContent":null,"Title":"Make simple anchor","State":"closed","Body":"Hello\r\n\r\nI would like to make simple anchor with my app\r\n\r\nFirst example \r\n<a :href=\"'#'+this.id\" class=\"fa fa-question-circle\">Apply Now</a>\r\nfirst click = reload the page\r\nWork if you click the second time on the link \r\n\r\nWe can do with router-link ? \r\nI didn't see examples to do this\r\n","Url":"https://github.com/vuejs/vue-router/issues/2058","RelatedDescription":"Closed issue \"Make simple anchor\" (#2058)"},{"Id":"296173173","IsPullRequest":false,"CreatedAt":"2018-02-11T08:47:18","Actor":"objectyan","Number":"2057","RawContent":null,"Title":"[vue-router] Failed to resolve async component default: TypeError: Invalid calling object","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n# Version\r\n3.0.1\r\n\r\n# What is expected?\r\nThat i am navigated to the correct page. This is working correctly in chrome and firefox.\r\n\r\n# Router Coding\r\n``` code\r\nconst router = new Router({\r\n    mode: 'history',\r\n    routes: [\r\n        { path: '/', redirect: '/dashboard' },\r\n        { path: '/login', component: resolve => require(['../page/login/login.vue'], resolve) },\r\n        {\r\n            path: '/Dashboard',\r\n            component: resolve => require(['../components/frame/frame.vue'], resolve),\r\n            children: [\r\n                {\r\n                    name: 'Dashboard',\r\n                    path: '/',\r\n                    component: resolve => require(['../page/dashboard/dashboard.vue'], resolve)\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n});\r\n```\r\n\r\n# Question\r\nIn IE 11, visit the /login page, such as the title error when accessing /Dashboard\r\n\r\n# Error\r\n[vue-router] Failed to resolve async component default: TypeError: Invalid calling object","Url":"https://github.com/vuejs/vue-router/issues/2057","RelatedDescription":"Closed issue \"[vue-router] Failed to resolve async component default: TypeError: Invalid calling object\" (#2057)"},{"Id":"296159594","IsPullRequest":false,"CreatedAt":"2018-02-11T04:30:20","Actor":"eadio","Number":"2056","RawContent":null,"Title":"$route.query contains %20 error","State":"closed","Body":"My link like this\r\n\r\n    _http://localhost:8080/#/wxPlan?loc=24.486022,118.195058&spotArea=5LiJ5Y2D5YWr55m%205Z2O_\r\n\r\nthen i get the spotArea in created function like this:\r\n\r\n    ```\r\nlet params={\r\n      loc: this.$route.query.loc,\r\n      spotArea: this.$route.query.spotArea\r\n    }\r\n    console.log(this.$route.query)\r\n```\r\n\r\nthe results:\r\n{loc: \"24.486022,118.195058\", spotArea: \"5LiJ5Y2D5YWr55m 5Z2O\"}\r\n\r\nthe Special symbol \"+\" was missed.\r\n\r\nhow do i do it？ thinks a lot。\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2056","RelatedDescription":"Closed issue \"$route.query contains %20 error\" (#2056)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"301516650","IsPullRequest":true,"CreatedAt":"2018-03-01T18:47:18","Actor":"davestewart","Number":"1169","RawContent":null,"Title":"Made getter property vs method syntax more explicit","State":"open","Body":"I've been using Vuex for about a year, and I never realised you could access store getters as methods.\r\n\r\nThis docs update makes the ability to do this explicit, as well as adding notes on caching.","Url":"https://github.com/vuejs/vuex/pull/1169","RelatedDescription":"Open PR \"Made getter property vs method syntax more explicit\" (#1169)"},{"Id":"301164712","IsPullRequest":false,"CreatedAt":"2018-03-01T08:21:15","Actor":"hrasekj","Number":"1167","RawContent":null,"Title":"If module state is an array his submodules are not reactive","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nvkupd14/16/](https://jsfiddle.net/nvkupd14/16/)\r\n\r\n### Steps to reproduce\r\nCreate an module which have his state as Array. Then create submodule for it.\r\n\r\n### What is expected?\r\nIm expecting that computed properties in modules will react to changes on submodule.\r\n\r\n### What is actually happening?\r\nVue does not map his getters & setters to submodule. So submodules state is changing, but computed properties not.\r\n\r\n---\r\nIt should warn user or something.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1167","RelatedDescription":"Closed issue \"If module state is an array his submodules are not reactive\" (#1167)"},{"Id":"301212285","IsPullRequest":false,"CreatedAt":"2018-02-28T22:42:39","Actor":"DusanMilko","Number":"1168","RawContent":null,"Title":"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'","State":"closed","Body":"All I'm doing is\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nWhen I compile my js with webpack I get \r\n`Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'`","Url":"https://github.com/vuejs/vuex/issues/1168","RelatedDescription":"Closed issue \"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'\" (#1168)"},{"Id":"300565264","IsPullRequest":true,"CreatedAt":"2018-02-27T10:18:55","Actor":"jacksonjoseph","Number":"1166","RawContent":null,"Title":"Update intro.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1166","RelatedDescription":"Closed or merged PR \"Update intro.md\" (#1166)"},{"Id":"300241798","IsPullRequest":false,"CreatedAt":"2018-02-26T14:58:31","Actor":"chetzof","Number":"1165","RawContent":null,"Title":"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/132227/](https://jsfiddle.net/50wL7mdz/132227/)\r\n\r\n### Steps to reproduce\r\nNo steps to reproduce.\r\nJust open the jsfiddle, you will see an alert that is called by the updated() hook. \r\n\r\n### What is expected?\r\nThe alert should not be displayed  because the registration of a new unrelated dynamic module should not trigger anything anywhere that is has no connection to.\r\n\r\n### What is actually happening?\r\nThe component triggers updated() hook when dynamically registering an unrelated module\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1165","RelatedDescription":"Closed issue \"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered\" (#1165)"},{"Id":"300150382","IsPullRequest":true,"CreatedAt":"2018-02-26T09:03:21","Actor":"yanlee26","Number":"1164","RawContent":null,"Title":"it means this?","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1164","RelatedDescription":"Closed or merged PR \"it means this?\" (#1164)"},{"Id":"300128951","IsPullRequest":false,"CreatedAt":"2018-02-26T07:02:08","Actor":"cmingxu","Number":"1163","RawContent":null,"Title":"Is it possible to call some other namespace's  getters from rootGetters?  ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n// some namespaced moduleA\r\n  getters: {\r\n    bootstrapped: ({ rootGetters }) => {\r\n      console.log( rootGetters['moduleB/getterFunc']() )\r\n    }\r\n  }","Url":"https://github.com/vuejs/vuex/issues/1163","RelatedDescription":"Closed issue \"Is it possible to call some other namespace's  getters from rootGetters?  \" (#1163)"},{"Id":"298980413","IsPullRequest":false,"CreatedAt":"2018-02-21T13:59:18","Actor":"joachimboggild","Number":"1162","RawContent":null,"Title":"Hard-to-locate error when providing wrong parameter type to mapState","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/048lw4q59n](https://codesandbox.io/s/048lw4q59n)\r\n\r\n### Steps to reproduce\r\n1) Open code sandbox provided.\r\n2) Look inside console to the error message provided.\r\n\r\nTo fix the problem, include brackets inside the mapState statement on line 97 in the HelloWorld.vue file.\r\n\r\n### What is expected?\r\nIt was expected that an error message would state that the parameter for the mapState function was invalid in 'HelloWorld.vue'.\r\n\r\n### What is actually happening?\r\nThis error message is returned: \r\n\r\n```\r\n[Vue warn]: Failed to resolve async component: function HelloWorld() {\r\n  return _promise2.default.resolve().then(function () {\r\n    return require(\"./components/HelloWorld\");\r\n  });\r\n}\r\nReason: TypeError: Cannot convert undefined or null to object\r\n```\r\n\r\n---\r\nI just thought that this was a difficult error to track, because the error message provided did not point towards the actual error. If it is possible to make the error message more precise, it would be great.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1162","RelatedDescription":"Open issue \"Hard-to-locate error when providing wrong parameter type to mapState\" (#1162)"},{"Id":"298429261","IsPullRequest":false,"CreatedAt":"2018-02-20T14:52:03","Actor":"kwame101","Number":"1161","RawContent":null,"Title":"Mutation handler don't commit -v","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l4k5ko85qm](https://codesandbox.io/s/l4k5ko85qm)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n\r\n\r\n### What is expected?\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe logo and a few text only shows (welcome test)\r\n\r\n---\r\nI'm using mapGetter function to get the name but mutation doesnt commit\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1161","RelatedDescription":"Closed issue \"Mutation handler don't commit -v\" (#1161)"},{"Id":"298428853","IsPullRequest":false,"CreatedAt":"2018-02-19T23:36:22","Actor":"kwame101","Number":"1160","RawContent":null,"Title":"Mutation handler don't commit","State":"closed","Body":"**Version**\r\n3.0.1\r\n\r\n**Reproduction link**\r\nhttps://codesandbox.io/s/l4k5ko85qm\r\n\r\n**Steps to reproduce**\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n**What is expected?**\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n**What is actually happening?**\r\nThe logo and a few text only shows. I'm using mapGetter function to get the name but mutation doesnt commit","Url":"https://github.com/vuejs/vuex/issues/1160","RelatedDescription":"Closed issue \"Mutation handler don't commit\" (#1160)"},{"Id":"297725821","IsPullRequest":false,"CreatedAt":"2018-02-16T11:51:10","Actor":"hungphongbk","Number":"1158","RawContent":null,"Title":"Getters on injected dynamic module get lost","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/104859/](https://jsfiddle.net/50wL7mdz/104859/)\r\n\r\n### Steps to reproduce\r\nGetters from injected dynamic module on reproduction code must returned \"bar ahihi\", but actually I got undefined (the getter didn't exist)\r\n\r\n### What is expected?\r\nGetters from injected dynamic module on reproduction code must returned \"bar ahihi\"\r\n\r\n### What is actually happening?\r\nGot undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1158","RelatedDescription":"Closed issue \"Getters on injected dynamic module get lost\" (#1158)"},{"Id":"297755577","IsPullRequest":false,"CreatedAt":"2018-02-16T11:45:27","Actor":"zokipirlo","Number":"1159","RawContent":null,"Title":"Mutations not commited","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r0p9pnr49p](https://codesandbox.io/s/r0p9pnr49p)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation, data will appear.\r\n\r\n### What is expected?\r\nNumbers from 1-7 below Data title.\r\n\r\n### What is actually happening?\r\nOnly title is visible.\r\n\r\n---\r\nThere is some commented code inside store (`state: items, getter: getItemsForLayoutId`) because that is a code from my real project. This `abc` is just for demonstration that it doesn't work even in a more simple solution.\r\n\r\nIn HelloWorld component is a `cards`computed property, which loads data from store. If it's not there, then it will dispatch an action to retrieve a data (api call is replaced with dummy data).\r\n\r\nI guess I'm doing something wrong, but don't know why.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1159","RelatedDescription":"Closed issue \"Mutations not commited\" (#1159)"},{"Id":"295828117","IsPullRequest":false,"CreatedAt":"2018-02-16T09:48:31","Actor":"moeinroid","Number":"1154","RawContent":null,"Title":"State not changes in UI component after commit","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://gist.github.com/moeinroid/3743a5814e8b172e91ef40be830f4be1](https://gist.github.com/moeinroid/3743a5814e8b172e91ef40be830f4be1)\r\n\r\n### Steps to reproduce\r\nI'm using vuejs with vue-router and vuex.\r\nI have a module with state, actions and mutations. With actions i call a api and get data from it and change the state by committing mutation\r\n\r\n### What is expected?\r\ncomponent changes Instantly\r\n\r\n### What is actually happening?\r\nin my component values doesnot changes but when i go to another route and come back, it changes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1154","RelatedDescription":"Closed issue \"State not changes in UI component after commit\" (#1154)"},{"Id":"296151016","IsPullRequest":true,"CreatedAt":"2018-02-11T10:11:06","Actor":"sarahdayan","Number":"1157","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1157","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1157)"},{"Id":"296077809","IsPullRequest":true,"CreatedAt":"2018-02-10T18:41:38","Actor":"william-pan","Number":"1156","RawContent":null,"Title":"Remove unnecessary word in Chinese document","State":"closed","Body":"删掉了多余的“能”字","Url":"https://github.com/vuejs/vuex/pull/1156","RelatedDescription":"Closed or merged PR \"Remove unnecessary word in Chinese document\" (#1156)"},{"Id":"295830254","IsPullRequest":true,"CreatedAt":"2018-02-09T10:57:54","Actor":"whthT","Number":"1155","RawContent":null,"Title":"Update index.js","State":"closed","Body":"added a question.","Url":"https://github.com/vuejs/vuex/pull/1155","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1155)"},{"Id":"295826316","IsPullRequest":false,"CreatedAt":"2018-02-09T10:39:58","Actor":"moeinroid","Number":"1153","RawContent":null,"Title":"State not changes in UI component after commit","State":"closed","Body":"I'm using vuejs with vue-router and vuex.\r\nI have a module with state, actions and mutations. With actions i call a api and get data from it and change the state by committing mutation. But in my component it doesnot changesm but when i go to another route and come back, it changes.\r\n\r\nIt's my module:\r\n\r\n```\r\nconst state = {\r\n  info: {\r\n    name: \"\"\r\n  }\r\n}\r\nconst actions = {\r\n  getInfo({ commit }) {\r\n    api.getAllInfo().then((Response) => {\r\n      commit('SET_USER_INFO', Response.data)\r\n    }).catch((err) => {\r\n      console.log(err.response)\r\n    })\r\n  }\r\nconst mutations = {\r\n  SET_USER_INFO (state, info) {\r\n    state.info.name = info.name\r\n  }\r\n}\r\n\r\n```","Url":"https://github.com/vuejs/vuex/issues/1153","RelatedDescription":"Closed issue \"State not changes in UI component after commit\" (#1153)"},{"Id":"295411613","IsPullRequest":true,"CreatedAt":"2018-02-08T08:23:51","Actor":"anjoantoque","Number":"1152","RawContent":null,"Title":"Update state.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1152","RelatedDescription":"Closed or merged PR \"Update state.md\" (#1152)"},{"Id":"295099569","IsPullRequest":false,"CreatedAt":"2018-02-07T11:17:40","Actor":"davewood","Number":"1151","RawContent":null,"Title":"\"Do not mutate store state outside mutation handler\" error but I am using a mutation","State":"closed","Body":"<h3 id=\"version\">Version</h3>\r\n<p>3.0.1</p>\r\n<h3 id=\"reproduction-link\">Reproduction link</h3>\r\n<p><a href=\"https://github.com/davewood/vuejs-demo/tree/vuex_mutation_error\">https://github.com/davewood/vuejs-demo/tree/vuex_mutation_error</a></p>\r\n<h3 id=\"steps-to-reproduce\">Steps to reproduce</h3>\r\n<pre><code>git clone -b vuex_mutation_error git@github.com:davewood/vuejs-demo.git\r\ncd vuejs-demo\r\nnpm install\r\nnpm run dev\r\ntrigger error in console by changing the language in top right corner\r\n</code></pre><h3 id=\"what-is-expected-\">What is expected?</h3>\r\n<p>the state is changed and a notification is shown as expected but i dont get an error in the console</p>\r\n<h3 id=\"details-\">details:</h3>\r\n<ul>\r\n<li>store has an array of notifications</li>\r\n<li>notifications are added using a mutation in <a href=\"https://github.com/davewood/vuejs-demo/blob/vuex_mutation_error/src/store.js#L16\">src/store.js</a></li>\r\n<li>global Vue handler to trigger notification is installed in <a href=\"https://github.com/davewood/vuejs-demo/blob/vuex_mutation_error/src/notify.js#L15\">src/notify.js</a></li>\r\n</ul>\r\n<h3 id=\"what-is-actually-happening-\">What is actually happening?</h3>\r\n<p>the code works but there is an error in the console </p>\r\n<hr>\r\n<pre><code>[Vue warn]: Error in callback for watcher \"function () { return this._data.$$state }\": \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\"\r\n\r\n(found in &lt;Root&gt;)  9:579:7\r\n    warn webpack-internal:///9:579:7\r\n    logError webpack-internal:///9:1714:5\r\n    globalHandleError webpack-internal:///9:1709:3\r\n    handleError webpack-internal:///9:1698:3\r\n    run webpack-internal:///9:3209:11\r\n    update webpack-internal:///9:3181:5\r\n    notify webpack-internal:///9:685:5\r\n    mutator webpack-internal:///9:843:5\r\n    add_notification/&lt; webpack-internal:///116:21:9\r\nError: [vuex] Do not mutate vuex store state outside mutation handlers.\r\nStack trace:\r\nassert@webpack-internal:///50:104:27\r\nenableStrictMode/&lt;@webpack-internal:///50:753:7\r\nrun@webpack-internal:///9:3207:11\r\nupdate@webpack-internal:///9:3181:5\r\nnotify@webpack-internal:///9:685:5\r\nmutator@webpack-internal:///9:843:5\r\nadd_notification/&lt;@webpack-internal:///116:21:9\r\n  9:1718:5\r\n    logError webpack-internal:///9:1718:5\r\n    globalHandleError webpack-internal:///9:1709:3\r\n    handleError webpack-internal:///9:1698:3\r\n    run webpack-internal:///9:3209:11\r\n    update webpack-internal:///9:3181:5\r\n    notify webpack-internal:///9:685:5\r\n    mutator webpack-internal:///9:843:5\r\n    add_notification/&lt; webpack-internal:///116:21:9\r\n</code></pre>","Url":"https://github.com/vuejs/vuex/issues/1151","RelatedDescription":"Closed issue \"\"Do not mutate store state outside mutation handler\" error but I am using a mutation\" (#1151)"},{"Id":"295098789","IsPullRequest":false,"CreatedAt":"2018-02-07T11:15:00","Actor":"davewood","Number":"1150","RawContent":null,"Title":"using https://new-issue.vuejs.org/?repo=vuejs/vuex causes content security violation","State":"closed","Body":"if i fill out the form, click PREVIEW, click CREATE this happens\r\n\r\n```\r\nContent Security Policy: The page's settings blocked the loading of a resource at self (\"script-src https://assets-cdn.github.com\"). Source: ;(function (e){let t={};if(e.hasOwnPrope....  github.com:1\r\nContent Security Policy: The page's settings blocked the loading of a resource at https://www.google-analytics.com/collect?v=1&_v=j48&a=684224416&t=pageview&_s=1&dl=https%3A%2F%2Fgithub.com%2Fdashboard&dr=https%3A%2F%2Fnew-issue.vuejs.org%2F%3Frepo%3Dvuejs%2Fvuex&ul=en-gb&de=UTF-8&dt=(masked)&sd=24-bit&sr=1920x1080&vp=1192x922&je=1&fl=6.0%20r21&_u=SCCAAFABM~&jid=&cid=2079588354.1478686434&tid=UA-3769691-2&cd1=Logged%20In&z=527149203 (\"img-src https://github.com data: https://assets-cdn.github.com https://identicons.github.com https://collector.githubapp.com https://github-cloud.s3.amazonaws.com https://*.githubusercontent.com\").  (unknown)\r\nContent Security Policy: The page's settings blocked the loading of a resource at self (\"script-src https://assets-cdn.github.com\"). Source: ;(function (e){setTimeout(()=>{const n=d....  github.com:1\r\nContent Security Policy: The page's settings blocked the loading of a resource at self (\"script-src https://assets-cdn.github.com\"). Source: ;(function (e){let n=null,t=0;const o={n....\r\n```","Url":"https://github.com/vuejs/vuex/issues/1150","RelatedDescription":"Closed issue \"using https://new-issue.vuejs.org/?repo=vuejs/vuex causes content security violation\" (#1150)"},{"Id":"293395029","IsPullRequest":false,"CreatedAt":"2018-02-06T20:36:12","Actor":"hello-guoguo","Number":"1145","RawContent":null,"Title":"bug: window npm install,it's error!","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex.git](https://github.com/vuejs/vuex.git)\r\n\r\n### Steps to reproduce\r\ngit clone https://github.com/vuejs/vuex.git\r\ncd vuex\r\nnpm i\r\n======\r\nand it's error.\r\nerror code:\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! chromedriver@2.32.3 install: `node install.js`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the chromedriver@2.32.3 install script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional log\r\nging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Administrator\\AppData\\Roaming\\npm-cache\\_logs\\2018-02-01T0\r\n3_38_17_639Z-debug.log\r\n\r\n### What is expected?\r\nnpm i  ===>success\r\n\r\n### What is actually happening?\r\nnpm i ===>error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1145","RelatedDescription":"Closed issue \"bug: window npm install,it's error!\" (#1145)"},{"Id":"294458496","IsPullRequest":true,"CreatedAt":"2018-02-05T16:35:34","Actor":"keng0o","Number":"1149","RawContent":null,"Title":"Chat example update","State":"open","Body":"- remove mutation type\r\n- use v-model instead of target.value\r\n- use mapAction when using store's action\r\n- use Arrow Function & Object destructuring\r\n- use store/getters","Url":"https://github.com/vuejs/vuex/pull/1149","RelatedDescription":"Open PR \"Chat example update\" (#1149)"},{"Id":"293835524","IsPullRequest":true,"CreatedAt":"2018-02-02T10:08:25","Actor":"greenroach","Number":"1148","RawContent":null,"Title":"Translated images in Russian","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1148","RelatedDescription":"Open PR \"Translated images in Russian\" (#1148)"},{"Id":"293406724","IsPullRequest":true,"CreatedAt":"2018-02-01T13:56:04","Actor":"kiaking","Number":"1146","RawContent":null,"Title":"Add missing semicolon and space to the type files","State":"closed","Body":"Small fix that adds missing semicolon and space in the typing files. Cheers 🍺 ","Url":"https://github.com/vuejs/vuex/pull/1146","RelatedDescription":"Closed or merged PR \"Add missing semicolon and space to the type files\" (#1146)"},{"Id":"293469839","IsPullRequest":true,"CreatedAt":"2018-02-01T10:03:19","Actor":"mleg","Number":"1147","RawContent":null,"Title":"Proposal: Allow to pass a function as the namespace (to helpers)","State":"open","Body":"_Disclaimer_: It's only for duscussion and is not supposed to be merged as it lacks appropriate JSDoc comments, TS-types, and test changes.  \r\n\r\nIn my app I desperately need to pass a **path** to data from parent to child component **as a prop**.  \r\nBut value of the prop is not yet available in the child options when connecting the component to a store.  \r\n\r\n**Proposal**: _Allow to pass namespace to helper methods as a function which takes a component instance as its only argument._\r\n\r\n\r\nWhen we have in our store a [reusable module](https://vuex.vuejs.org/en/modules.html#module-reuse)  and that module is mostly used by corresponding reusable component such approach seems quite natural to me.  \r\nIn parent:\r\n```html\r\n<template>\r\n  <Child storePath=\"path/toModule\" />\r\n</template>\r\n```\r\nWith proposed changes we will handle it in child like this:\r\n```javascript\r\nimport  { mapState } from 'vuex'\r\n\r\nconst getNamespace = vm => vm.storePath\r\n\r\nexport default {\r\n  props: {\r\n    storePath: String\r\n  },\r\n  computed: {\r\n    ...mapState(getNamespace, ['someField'])\r\n  }\r\n}\r\n```\r\n\r\nMaybe am I missing something and there is some existing simple and obvious solution to the use case?\r\n\r\n","Url":"https://github.com/vuejs/vuex/pull/1147","RelatedDescription":"Open PR \"Proposal: Allow to pass a function as the namespace (to helpers)\" (#1147)"},{"Id":"293393811","IsPullRequest":false,"CreatedAt":"2018-02-01T03:43:15","Actor":"hello-guoguo","Number":"1144","RawContent":null,"Title":"windows  npm install    error!","State":"closed","Body":"## when I git clone it and npm install,it's error.\r\n## error code:\r\n```\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! chromedriver@2.32.3 install: `node install.js`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the chromedriver@2.32.3 install script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional log\r\nging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Administrator\\AppData\\Roaming\\npm-cache\\_logs\\2018-02-01T0\r\n3_38_17_639Z-debug.log\r\n```\r\n## how to do,now?\r\n","Url":"https://github.com/vuejs/vuex/issues/1144","RelatedDescription":"Closed issue \"windows  npm install    error!\" (#1144)"},{"Id":"292996496","IsPullRequest":true,"CreatedAt":"2018-01-31T01:10:34","Actor":"DavidWilliamBalbino","Number":"1143","RawContent":null,"Title":"Add language pt-br","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1143","RelatedDescription":"Open PR \"Add language pt-br\" (#1143)"},{"Id":"292725433","IsPullRequest":false,"CreatedAt":"2018-01-31T00:30:20","Actor":"01045972746","Number":"1142","RawContent":null,"Title":"Store Two-way binding with using <v-for>","State":"closed","Body":"### What problem does this feature solve?\r\nHi All,\r\nI want to know how can i map vuex's data with inner v-for object.\r\n\r\nFor example,\r\n\r\nIn template,\r\n```html\r\n<template>\r\n    <div>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th> Index </th>\r\n                    <th> Name </th>\r\n                    <th> Value </th>\r\n                </tr>\r\n                <tr v-for=\"(item, index) in testarr\" :key=\"index\">\r\n                    <td> {{ index }} </td>\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.value }} </td>\r\n                    <td> <input type=\"checkbox\" v-model=\"item.checked\"/> </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n```\r\n\r\nAnd scripts\r\n```javascript\r\nexport default {\r\n    name: 'VueTest',\r\n    data() {\r\n        return {\r\n            testarr: [\r\n                {\r\n                    name: '1234',\r\n                    value: 53535,\r\n                },\r\n                {\r\n                    name: '2352352',\r\n                    value: 5144,\r\n                },\r\n                {\r\n                    name: '61246',\r\n                    value: 2390,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n\r\n}\r\n```\r\n\r\nin this situation, (there are not connected with Vuex)\r\nwhen i check 'checkbox', automatically be made what called `checked`.\r\n\r\nOtherwise with Vuex,\r\n\r\n```javascript\r\nexport default {\r\n    name: 'VuexTest',\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        vuexdata: {\r\n            get() { return this.$store.state.vuexArr; },\r\n            set(value) { this.$store.commit('updateArr', value); }\r\n        }\r\n    }\r\n\r\n}\r\n```\r\nAnd template <v-for> is,\r\n\r\n```html\r\n <tr v-for=\"(item, index) in vuexdata\" :key=\"index\">\r\n                    <td> {{ index }} </td>\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.value }} </td>\r\n                    <td> <input type=\"checkbox\" v-model=\"item.checked\"/> </td>\r\n                </tr>\r\n```\r\nthere are some APIs with `computed` data ( get(), set() methods ),\r\nbut these are not solution for this.\r\n\r\n\r\nAnd i have read https://github.com/vuejs/vuex/issues/936,\r\nbut it is not a solution neither.\r\n\r\n\r\nIf there is a point, please comment this.\r\n\r\nThanks!\r\n\r\n### What does the proposed API look like?\r\nTwo-way binding with using <v-for> in each object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1142","RelatedDescription":"Closed issue \"Store Two-way binding with using <v-for>\" (#1142)"},{"Id":"290683148","IsPullRequest":false,"CreatedAt":"2018-01-23T02:04:32","Actor":"diit","Number":"1141","RawContent":null,"Title":"The wording of Store.watch in API reference is confusable","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/92559/](https://jsfiddle.net/50wL7mdz/92559/)\r\n\r\n### Steps to reproduce\r\nAttempt to use store.watch with a getter (store.getters.GETTER_HERE) as explained in docs, and shown in reproduction.\r\n\r\n### What is expected?\r\nHandler to be called when variable updated.\r\n\r\n### What is actually happening?\r\nUncaught Error: [vuex] store.watch only accepts a function.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1141","RelatedDescription":"Open issue \"The wording of Store.watch in API reference is confusable\" (#1141)"},{"Id":"290324343","IsPullRequest":false,"CreatedAt":"2018-01-22T04:47:33","Actor":"breadadams","Number":"1140","RawContent":null,"Title":"Error triggering media via store state change in Safari","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/536yj99n7n](https://codesandbox.io/s/536yj99n7n)\r\n\r\n### Steps to reproduce\r\nWhen trying to play media (audio in this case, but from what [I've read](https://webkit.org/blog/7734/auto-play-policy-changes-for-macos/) it appears to apply to video too), triggering playback of media via an update to the store's state throws an error:\r\n\r\n![Safari error](https://user-images.githubusercontent.com/5795227/35254664-8203c3c8-ffeb-11e7-8871-c3194c292b24.png)\r\n\r\nClicking the _I DO work in Safari_ button in the codesandbox example, you'll see the audio does play. And after having clicked this, the _TOGGLE AUDIO_ button works too.\r\n\r\n\r\n\r\n### What is expected?\r\nAudio should be played clicking the _TOGGLE AUDIO_ button the first time.\r\n\r\n### What is actually happening?\r\nSeeing an error when trying to play media after a state change\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1140","RelatedDescription":"Closed issue \"Error triggering media via store state change in Safari\" (#1140)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-03-02T05:30:37.0608139Z","RunDurationInMilliseconds":4672}