{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Joins docs.microsoft.com","PublishedOn":"2018-03-14T17:22:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re beginning a new chapter in mobile developer documentation: Xamarin docs are now live on docs.microsoft.com/xamarin! Here are a few highlights of the new documentation experience:...","Href":"https://blog.xamarin.com/xamarin-joins-docs-microsoft-com/","RawContent":null},{"Title":"Podcast: Visual Studio 2017 version 15.6, AR with UrhoSharp, and ML with CoreML","PublishedOn":"2018-03-12T18:43:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the fun new features in the Visual Studio 2017 version 15.6 stable release, including macOS environment setup and iOS WiFi...","Href":"https://blog.xamarin.com/podcast-visual-studio-2017-version-15-6-ar-urhosharp-ml-coreml/","RawContent":null},{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7387575195","Type":"PullRequestEvent","CreatedAt":"2018-03-15T21:55:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1425","RelatedDescription":"Merged pull request \"Fix loading of Xamarin.Android.sln for omnisharp-roslyn\" (#1425) at xamarin/xamarin-android","RelatedBody":"[Omnisharp-Roslyn](https://github.com/OmniSharp/omnisharp-roslyn/) uses an internal MSBuild loader which has a number of\r\ndemands/assumptions on the contents of .csproj+.targets files.\r\nIt assumes the following targets are present:\r\n\r\n * Compile\r\n * CoreCompile\r\n\r\nIt also assumes that the `TargetFrameworkMoniker` property is set.\r\n\r\nThis commit makes a number of changes to our non-managed projects to make sure\r\nthe above expectations are met. With those changes in place one can load\r\nXamarin.Android.sln into an editor that uses OmniSharp for .NET code completion\r\netc."},{"Id":"7387567573","Type":"PullRequestEvent","CreatedAt":"2018-03-15T21:53:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1427","RelatedDescription":"Merged pull request \"[tests] change to re-save project file if properties change\" (#1427) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1480184&tab=ms.vss-test-web.test-result-details&_a=summary\r\n\r\nIn the case of `Xamarin.Android.Build.Tests.BuildTest.ValidateUseLatestAndroid`,\r\nthere are points at which `UseLatestPlatformSdk` and `TargetFrameworkVersion`\r\nare changed, but the `csproj` file is not re-saved on Windows.\r\n\r\nSo how does the test pass on macOS?\r\n\r\nThey pass on macOS due to `FileInfo.LastWriteTimeUtc` not containing\r\nthe millisecond information, which means files are likely to re-save\r\non macOS when not needed.\r\n\r\nA simple fix for Windows, is to keep a reference to the last `csproj`\r\nfile contents. If the contents change, make the `Timestamp` of the\r\n`csproj` null so it will always re-save.\r\n\r\nAfter making this change, I was able to remove the following code from\r\nanother unit test:\r\n\r\n    proj.Sources.First ().Timestamp = DateTimeOffset.UtcNow;"},{"Id":"7387254509","Type":"PullRequestEvent","CreatedAt":"2018-03-15T20:45:13","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1430","RelatedDescription":"Opened pull request \"Use httpbin.org for AndroidClientHandler tests\" (#1430) at xamarin/xamarin-android","RelatedBody":"This is a temporary step before we get our own server set up."},{"Id":"7386504179","Type":"PullRequestEvent","CreatedAt":"2018-03-15T18:18:32","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1429","RelatedDescription":"Opened pull request \"[tests] Use `internalx.com`, not `xamdev.com`\" (#1429) at xamarin/xamarin-android","RelatedBody":"The SSL certificates for `xamdev.com` have expired and won't be\r\nrenewed. We need to migrate to using `internalx.com` in order to fix\r\nour SSL-based unit tests."},{"Id":"7386354157","Type":"PullRequestEvent","CreatedAt":"2018-03-15T17:52:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1426","RelatedDescription":"Merged pull request \"[docs] Synchronize and update BuildProcess.md\" (#1426) at xamarin/xamarin-android","RelatedBody":"Synchronize `BuildProcess.md` with changes made by the documentation\r\nteam at:\r\n\r\n\thttps://github.com/MicrosoftDocs/xamarin-docs/blob/live/docs/android/deploy-test/building-apps/build-process.md\r\n\r\nUpdate the documentation for the `$(AndroidHttpClientHandlerType)` and\r\n`$(AndroidTlsProvider)` properties for clarity and commit edfa864b."},{"Id":"7386247658","Type":"PullRequestEvent","CreatedAt":"2018-03-15T17:34:49","Actor":"joj","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1428","RelatedDescription":"Opened pull request \"Fixed build on VS when using NetStandard libraries\" (#1428) at xamarin/xamarin-android","RelatedBody":"On a VS project which has an Android App referencing a NetStandard\r\nlibrary, making changes on the NetStandad library will not force a build\r\nof either project. This change moves the redefinition of the task to\r\nwhere it will not be hit when it shouldn't be. This can be easily tried\r\nwith https://github.com/Microsoft/SmartHotel360-mobile-desktop-apps.\r\nOpen the Android Solution and run, then change the Login.xaml and try\r\nrunning again. Without this change, the deployed app will not be\r\naffected. It works correctly with this change."},{"Id":"7385756753","Type":"PullRequestEvent","CreatedAt":"2018-03-15T16:16:03","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1427","RelatedDescription":"Opened pull request \"[tests] change to re-save project file if properties change\" (#1427) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1480184&tab=ms.vss-test-web.test-result-details&_a=summary\r\n\r\nIn the case of `Xamarin.Android.Build.Tests.BuildTest.ValidateUseLatestAndroid`,\r\nthere are points at which `UseLatestPlatformSdk` and `TargetFrameworkVersion`\r\nare changed, but the `csproj` file is not re-saved on Windows.\r\n\r\nSo how does the test pass on macOS?\r\n\r\nThey pass on macOS due to `FileInfo.LastWriteTimeUtc` not containing\r\nthe millisecond information, which means files are likely to re-save\r\non macOS when not needed.\r\n\r\nA simple fix for Windows, is to keep a reference to the last `csproj`\r\nfile contents. If the contents change, make the `Timestamp` of the\r\n`csproj` null so it will always re-save.\r\n\r\nAfter making this change, I was able to remove the following code from\r\nanother unit test:\r\n\r\n    proj.Sources.First ().Timestamp = DateTimeOffset.UtcNow;"},{"Id":"7384635224","Type":"PullRequestEvent","CreatedAt":"2018-03-15T13:27:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1426","RelatedDescription":"Opened pull request \"[docs] Synchronize and update BuildProcess.md\" (#1426) at xamarin/xamarin-android","RelatedBody":"Synchronize `BuildProcess.md` with changes made by the documentation\r\nteam at:\r\n\r\n\thttps://github.com/MicrosoftDocs/xamarin-docs/blob/live/docs/android/deploy-test/building-apps/build-process.md\r\n\r\nUpdate the documentation for the `$(AndroidHttpClientHandlerType)` and\r\n`$(AndroidTlsProvider)` properties for clarity and commit edfa864b."},{"Id":"7384538744","Type":"PullRequestEvent","CreatedAt":"2018-03-15T13:10:21","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1425","RelatedDescription":"Opened pull request \"Fix loading of Xamarin.Android.sln for omnisharp-roslyn\" (#1425) at xamarin/xamarin-android","RelatedBody":"[Omnisharp-Roslyn](https://github.com/OmniSharp/omnisharp-roslyn/) uses an internal MSBuild loader which has a number of\r\ndemands/assumptions on the contents of .csproj+.targets files.\r\nIt assumes the following targets are present:\r\n\r\n * Compile\r\n * CoreCompile\r\n\r\nIt also assumes that the `TargetFrameworkMoniker` property is set.\r\n\r\nThis commit makes a number of changes to our non-managed projects to make sure\r\nthe above expectations are met. With those changes in place one can load\r\nXamarin.Android.sln into an editor that uses OmniSharp for .NET code completion\r\netc."},{"Id":"7384335165","Type":"IssuesEvent","CreatedAt":"2018-03-15T12:31:19","Actor":"dehghani-mehdi","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1424","RelatedDescription":"Opened issue \"Typo in developer.xamarin.com\" (#1424) at xamarin/xamarin-android","RelatedBody":"In following page you miss `,` after `Intent.CategorySampleCode}` : https://developer.xamarin.com/api/type/Android.App.IntentFilterAttribute/\r\n\r\nFor ref:\r\n```\r\n[Activity]\r\n[IntentFilter (new[]{Intent.ActionMain},\r\n    Categories=new[]{Intent.CategoryLauncher, Intent.CategorySampleCode}\r\n    Icon=\"@drawable/myicon\",\r\n    DataScheme=\"something\",\r\n    DataHost=\"project.example.com\")]\r\npublic class MyActivity : Activity\r\n{\r\n}\r\n```"},{"Id":"7383778994","Type":"IssuesEvent","CreatedAt":"2018-03-15T10:36:29","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1423","RelatedDescription":"Opened issue \"Support r8 shrinker\" (#1423) at xamarin/xamarin-android","RelatedBody":"context: https://androidstudio.googleblog.com/2018/03/android-studio-32-canary-6-now-available.html\r\n\r\nWe need something that works like `enableR8 = true` in gradle.\r\n\r\nRight now we have an MSBuild property `<AndroidProguardEnabled>true/false</AndroidProguardEnabled>`.\r\n\r\nIt should probably become `<AndroidShrinker>r8/proguard/none</AndroidShrinker>` with value `proguard` if `AndroidProguardEnabled` is `true`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7388701046","Type":"PullRequestEvent","CreatedAt":"2018-03-16T04:24:37","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2116","RelatedDescription":"Opened pull request \"[Tizen] Enhance the Entry renderer of tizen backend\" (#2116) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n Enable KeyboardFlags and IsSpellCheckEnabled on tizen backend\r\n\r\n![image](https://user-images.githubusercontent.com/1029155/37503614-bca075bc-291c-11e8-8e04-0d515c3bbc0f.gif)\r\n\r\n\r\n### Bugs Fixed ###\r\n #1683 [Enhancement] AutoCaptialization support for Entry/Editor \r\n #1660 [Enhancement] IsSpellCheckEnabled on Entry/Editor.\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Behavioral Changes ###\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7387719710","Type":"PullRequestEvent","CreatedAt":"2018-03-15T22:32:15","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2111","RelatedDescription":"Merged pull request \"[iOS] Encode url for UIWebView so it doesn't fail with non-ascii characters \" (#2111) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nEncode url so it doesn't fail with non-ascii characters\r\n\r\n### Bugs Fixed ###\r\n\r\nfixes #1583 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"7387626858","Type":"PullRequestEvent","CreatedAt":"2018-03-15T22:08:09","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2106","RelatedDescription":"Merged pull request \"Try/Catch assembly loading so previewer doesn't have a fit\" (#2106) at xamarin/Xamarin.Forms","RelatedBody":"Fix for previewer, no bug filed."},{"Id":"7387584434","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:57:42","Actor":"jamesmontemagno","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1475","RelatedDescription":"Closed issue \"Live Player Build Does Not Access Xamarin Namespace\" (#1475) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nCreating a new  CrossPlatform App does not build without errors when using Live Player.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use Visual Studio (currently 15.5.2) to create a new Cros-Platform App\r\n2. On template select Blank App (choose Platform iOS only, UI Tech Xamarin.Forms, and Code Sharing Strategy (either presents similar but slightly different errors).\r\n3. Creates App\r\n4. From shared project App, open MainPage.xaml.\r\n5. Select the 'Live Run' Option\r\n6. During the build the errors start\r\n\r\n### Expected Behavior\r\nI expect to see the app execute\r\n\r\n### Actual Behavior\r\nI get the following set of errors at a minimum:]\r\n* The type or namespace name 'Xamarin' could not be found in the global namespace (are you missing an assembly reference?) --  AppDelegate.cs (Line: 1)\r\n* The name 'LoadApplication' does not exist in the current context -- AppDelegate.cs (Line: 1)\r\n* 'AppDelegate.FinishedLaunching (UIApplicaton, NSDictionary)': no suitable method found to override -- AppDelegate.cs (Line: 1)\r\n* 'App.OnStart()': no suitable method found to override -- App.xaml.cs (Line: 1)\r\n* The type or namespace name 'Xamarin' could not be found in the global namespace (are you missing an assembly reference?) --  App.xaml.cs (Line: 1)\r\n\r\n- Other items\r\n* The iOS project's packages.config file shows an earlier version of \"2.4.0.266-pre1\".  Could this have anything to do with it?  I changed the number, but that did not seem to do anything different.\r\n* Where should the Xamarin.Forms Package items be installed for the app?  \r\n* I've packaged the project for your review.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:   current\r\n- Last known good version:  have not tried before\r\n- IDE: VS 2017 15.5.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  iOS 11.2.1\r\n- Nuget Packages: At solution level - Xamarin.Forms v2.5.0.121934\r\n\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide\r\n[App4.zip](https://github.com/xamarin/Xamarin.Forms/files/1591539/App4.zip)\r\n a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7387982004","Type":"PullRequestEvent","CreatedAt":"2018-03-15T23:52:23","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3760","RelatedDescription":"Opened pull request \"[monotouch-tests] Adds mono's WeakAttribute tests (Backport)\" (#3760) at xamarin/xamarin-macios","RelatedBody":"* [monotouch-tests] Adds mono's WeakAttribute tests\r\n\r\n* Embrace watchOS\r\n\r\nUnfortunately this revealed that WeakAttribute is not working for watchOS\r\n\r\n* Port mono's WeakAttribute test to our test runner\r\n\r\nTest Ported:\r\nhttps://github.com/mono/mono/blob/5bdaef7e5f6479cc4336bb809b419e85ad706dd7/mono/tests/weak-fields.cs\r\n\r\n* Fix object leaks and implement suggested approach from 4b9ade0c5978d826586ac8f43ec78e0bbeca33e6\r\n\r\n* Remove debug spew and fix formating on header"},{"Id":"7387233545","Type":"PullRequestEvent","CreatedAt":"2018-03-15T20:40:52","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3759","RelatedDescription":"Opened pull request \"Reorganize MMP tests\" (#3759) at xamarin/xamarin-macios","RelatedBody":"- Only test changes.\r\n- I split out each test in a patch for review if desired, but can be squashed on land.\r\n- More refactoring later, but this at least is \"less terrible\""},{"Id":"7386704400","Type":"IssuesEvent","CreatedAt":"2018-03-15T18:54:40","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3758","RelatedDescription":"Closed issue \"Xamarin.Mac not compiling in TFS build server\" (#3758) at xamarin/xamarin-macios","RelatedBody":"You can find all the details here [323760](https://forums.xamarin.com/discussion/comment/323760).\r\n\r\nWhen the build starts it deletes the output folder content of a referenced project incorrectly, then it fails because it want to get what deleted.\r\n"},{"Id":"7386609114","Type":"IssuesEvent","CreatedAt":"2018-03-15T18:37:07","Actor":"arivoir","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3758","RelatedDescription":"Opened issue \"Xamarin.Mac not compiling in TFS build server\" (#3758) at xamarin/xamarin-macios","RelatedBody":"You can find all the details here [323760](https://forums.xamarin.com/discussion/comment/323760).\r\n\r\nWhen the build starts it deletes the output folder content of a referenced project incorrectly, then it fails because it want to get what deleted.\r\n"},{"Id":"7386256121","Type":"IssuesEvent","CreatedAt":"2018-03-15T17:36:17","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3756","RelatedDescription":"Closed issue \"iOS release build: \"Could not AOT the assembly\" -> \"p - buf < buf_size not met\"\" (#3756) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nI can't provide the repository to reproduce this, sorry. It is a complex project though and I can reproduce it by building a release build with Visual Studio for Windows and Mac.\r\n\r\n### Expected Behavior\r\n\r\nProper AppStore release build for iOS.\r\n\r\n### Actual Behavior\r\n\r\nBuild is canceled with the error:\r\n\r\n```\r\nCould not AOT assembly ...\r\n\r\n11>  * Assertion at /Users/builder/data/lanes/5808/1c6f300e/source/xamarin-macios/external/mono/mono/mini/aot-compiler.c:6320, condition `p - buf < buf_size' not met\r\n```\r\n\r\nI tried downgrading Visual Studio for Windows and also to build an older source code revision (which is available in the app store) but I can't build it anymore due to the error.\r\n\r\nThe debug build works fine and also runs in the simulator.\r\n\r\n### Environment\r\n\r\n**Windows**\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.6.2\r\nVisualStudio.15.Release/15.6.2+27428.2005\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA466\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10212.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40301.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62707-11. Commit Hash: 75dfc9b33ed624dff3985c7435c902c3c58c0e5c\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62707-11. Commit Hash: 75dfc9b33ed624dff3985c7435c902c3c58c0e5c\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.749 (9b0fce36d)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.15 (HEAD/22d97e153)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.0.20 (1c6f300)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n**MacOs**\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac ===Version 7.4 (build 1033)\r\n\r\nInstallation UUID: fb92161a-7228-408e-93c8-1c3578aa5a59\r\n\r\nRuntime:\r\n\r\n    Mono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\r\n    GTK+ 2.24.23 (Raleigh theme)    Package version: 508000129=== NuGet ===Version: 4.3.1.4445=== .NET Core ===Runtime: /usr/local/share/dotnet/dotnet\r\n\r\nRuntime Versions:\r\n\r\n    2.0.5\r\n\r\n    2.0.0\r\n\r\n    1.0.1\r\n\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\n\r\nSDK Versions:\r\n\r\n    2.1.4\r\n\r\n    2.0.0\r\n\r\n    1.0.0-preview2-003131\r\n\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks=== Xamarin.Profiler ===Version: 1.6.1\r\n\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler=== Xamarin.Android ===Version: 8.2.0.15 (Visual Studio Professional)\r\n\r\nAndroid SDK: /Users/dannywernicke_privat/Library/Developer/Xamarin/android-sdk-macosx\r\n\r\n    Supported Android versions:\r\n\r\n        4.0.3 (API level 15)\r\n\r\n        6.0   (API level 23)\r\n\r\n        7.1   (API level 25)SDK Tools Version: 25.2.5\r\n\r\nSDK Platform Tools Version: 25.0.3\r\n\r\nSDK Build Tools Version: 23.0.2Java SDK: /usr\r\n\r\njava version \"1.7.0_71\"\r\n\r\nJava(TM) SE Runtime Environment (build 1.7.0_71-b14)\r\n\r\nJava HotSpot(TM) 64-Bit Server VM (build 24.71-b01, mixed mode)Android Designer EPL code available here:\r\n\r\nhttps://github.com/xamarin/AndroidDesigner.EPL=== Apple Developer Tools ===Xcode 8.3.3 (12175.1)\r\n\r\nBuild 8E3004b=== Xamarin.Mac ===Version: 4.2.0.20 (Visual Studio Professional)=== Xamarin.iOS ===Version: 11.8.0.20 (Visual Studio Professional)\r\n\r\nHash: 1c6f300e\r\n\r\nBranch: d15-6\r\n\r\nBuild date: 2018-02-07 23:42:40-0500=== Xamarin Inspector ===Version: 1.4.0\r\n\r\nHash: b3f92f9\r\n\r\nBranch: master\r\n\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\n\r\nClient compatibility: 1=== Build Information ===Release ID: 704001033\r\n\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\n\r\nBuild date: 2018-02-28 05:02:28-05\r\n\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\n\r\nBuild lane: monodevelop-lion-d15-6=== Operating System ===Mac OS X 10.13.3\r\n\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n\r\n   Sun Dec 17 09:19:54 PST 2017\r\n\r\n   root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64=== Enabled user installed addins ===Internet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n[Buildlog](https://gist.github.com/Amenti/10cd59978f3edfc1377be4288071df99)\r\n"},{"Id":"7386195385","Type":"PullRequestEvent","CreatedAt":"2018-03-15T17:25:55","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3754","RelatedDescription":"Merged pull request \"[jenkins] Clean keystore on bots before running tests\" (#3754) at xamarin/xamarin-macios","RelatedBody":"Because if invalid data gets into the store then some unit tests\nwill always fail on that particular bot.\n\nFix https://github.com/xamarin/maccore/issues/640"},{"Id":"7386006120","Type":"PullRequestEvent","CreatedAt":"2018-03-15T16:55:27","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3757","RelatedDescription":"Opened pull request \"[mmp][mtouch] Better guard framework SDK checks\" (#3757) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3725\r\n- These frameworks \"CoreAudioKit Metal MetalKit MetalPerformanceShaders CoreNFC DeviceCheck\"\r\n were special cased, but that special case did do an SDK check.\r\n- Create a helper method to share check"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"974310000062533632","CreatedAt":"2018-03-15T15:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":11,"RawContent":null},{"Id":"973975762419224577","CreatedAt":"2018-03-14T17:34:52+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin joins https://t.co/zGGlEXOMrE! Learn more: https://t.co/dYZuo1IFIk https://t.co/a0BJMelbL9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":109,"FavoriteCount":59,"RawContent":null},{"Id":"973950886191030273","CreatedAt":"2018-03-14T15:56:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #XamarinAndroid Device Manager Preview: https://t.co/4cTyPaFfMb https://t.co/HF0W9uigKU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":16,"RawContent":null},{"Id":"973590055234228224","CreatedAt":"2018-03-13T16:02:12+00:00","UserScreenname":"xamarinhq","Text":"The #CSharp developer’s guide to shipping better apps with #VSAppCenter: https://t.co/jU0cnONnM8 https://t.co/5UiJzLeMBf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":37,"RawContent":null},{"Id":"973272277876752385","CreatedAt":"2018-03-12T18:59:28+00:00","UserScreenname":"xamarinhq","Text":"Start your week off with the @XamarinPodcast, featuring discussion of #VS2017 version 15.6, AR with UrhoSharp, and… https://t.co/xgDtF4E72X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":8,"RawContent":null},{"Id":"973226616020176896","CreatedAt":"2018-03-12T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/MkadlSMfqL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":10,"RawContent":null},{"Id":"972993579109974016","CreatedAt":"2018-03-12T00:32:01+00:00","UserScreenname":"xamarinhq","Text":"The open source suite of SmartHotel360 reference apps includes mobile and desktop apps for business travelers, a we… https://t.co/i9MWn6ypXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":45,"RawContent":null},{"Id":"972643544832856065","CreatedAt":"2018-03-11T01:21:06+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #Xamarin Live Player for iOS: https://t.co/jQnSvYwtB1 https://t.co/sa0DV2n2aD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":56,"RawContent":null},{"Id":"972152285550862336","CreatedAt":"2018-03-09T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/hDELQELDqc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":145,"FavoriteCount":56,"RawContent":null},{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":26,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signin… https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":16,"RawContent":null},{"Id":"970709776488419328","CreatedAt":"2018-03-05T17:17:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":17,"RawContent":null},{"Id":"970456916488015873","CreatedAt":"2018-03-05T00:32:13+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/jQn1NkyLSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":12,"RawContent":null},{"Id":"970104538375118848","CreatedAt":"2018-03-04T01:12:00+00:00","UserScreenname":"xamarinhq","Text":"Better resource organization in #XamarinForms: https://t.co/8bKeJx4e22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":18,"RawContent":null},{"Id":"969656588805001217","CreatedAt":"2018-03-02T19:32:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this! It's your chance to ask living legend @migueldeicaza your questions in his @reddit… https://t.co/6qG4JhCwia","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-03-16T05:30:41.7463613Z","RunDurationInMilliseconds":4463}