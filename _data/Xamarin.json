{"Data":{"Blog":{"FeedItems":[{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in Visual Studio 15.8, you can...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8328452733","Type":"PullRequestEvent","CreatedAt":"2018-09-27T00:54:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2232","RelatedDescription":"Merged pull request \"[git] Re-format `.gitmodules`\" (#2232) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/2b863c31064ded67bb5fb00cbcf3f5911d158514\r\nContext: https://github.com/xamarin/xamarin-android/commit/7f9a3657b673c6b78797e7c75ba927922c6e10b1\r\nContext: https://github.com/xamarin/xamarin-android/commit/acdbe90fd84d08e94f263ffbb5613cf1644c07a2\r\nContext: https://github.com/xamarin/xamarin-android/commit/29d778a8db91c759eb6ea9b7867434b263a15789\r\nContext: ...\r\n\r\nEvery time @MSylvia branches our products for release, we get a\r\nunnecessarily large change to `.gitmodules`, for two reasons:\r\n\r\n 1. @MSylvia's tooling uses spaces `    ` instead of tabs for\r\n    indentation, and\r\n\r\n 2. @MSylvia's tooling *sorts submodules*.\r\n\r\nThis turns a conceptually simple change -- update branch names -- into\r\na very *noisy* change, as the `.gitmodules` contents are re-ordered\r\nand re-formatted.\r\n\r\nUpdate `.gitmodules` so that we *start* with what the tooling expects:\r\nsorted submodule names, and spaces for indentation.\r\n\r\nThis should allow *future* branch commits to be smaller and saner\r\nto review."},{"Id":"8328431280","Type":"PullRequestEvent","CreatedAt":"2018-09-27T00:46:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2231","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Add CustomView to SwitchBetweenDesignTimeBuild\" (#2231) at xamarin/xamarin-android","RelatedBody":"This commit adds a custom view to the `SwitchBetweenDesignTimeBuild`\r\ntest. This is so we can make sure that we are not running targets\r\nlike `_UpdateAndroidResgen` even if the custom view is updated\r\nas part of `_GenerateJavaStubs`."},{"Id":"8328165162","Type":"IssuesEvent","CreatedAt":"2018-09-26T23:17:44","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2233","RelatedDescription":"Opened issue \"`Lint.CleanIssues()` build step does not seem to have an effect currently\" (#2233) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new **Visual C# > Android > Android App (Xamarin) > Blank App**.\r\n2. Add the following items to a `<PropertyGroup>` in the .csproj file:\r\n\r\n    ```xml\r\n    <AndroidLintEnabled>True</AndroidLintEnabled>\r\n    <AndroidLintEnabledIssues>MissingSuperCall</AndroidLintEnabledIssues>\r\n    <AndroidLintDisabledIssues>MissingSuperCall</AndroidLintDisabledIssues>\r\n    ```\r\n3. Build the `SignAndroidPackage` target:\r\n\r\n    ```cmd\r\n    msbuild /t:SignAndroidPackage AndroidApp1.sln\r\n    ```\r\n\r\n### Expected Behavior\r\n\r\nIt looks like the intention of `Lint.CleanIssues()` is to clean the lists of `EnabledIssues` and `DisabledIssues` to remove any issues that match one of the items from [`DisabledIssuesByVersion`](https://github.com/xamarin/xamarin-android/blob/6e7be95b2655d28bdfd15713adc6f64988ad3a6f/src/Xamarin.Android.Build.Tasks/Tasks/Lint.cs#L160-L182) with a `Version` higher than the `lint` tool version:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/6e7be95b2655d28bdfd15713adc6f64988ad3a6f/src/Xamarin.Android.Build.Tasks/Tasks/Lint.cs#L216-L221\r\n\r\n### Actual Behavior\r\n\r\nAt the moment the `Lint.CleanIssues()` doesn't do anything. In particular, even though my `LintVersion` is lower than the `Version (26, 1, 1)` specified for `MissingSuperCall`, the issue is not removed from the `lint` command line:\r\n\r\n```txt\r\nLint Task (TaskId:244)\r\n    LintVersion: 26.0.0 (TaskId:244)\r\n    TargetDirectory: obj\\Debug\\81\\ (TaskId:244)\r\n    JavaSdkPath: C:\\Program Files\\Android\\jdk\\microsoft_dist_openjdk_1.8.0.9 (TaskId:244)\r\n    EnabledChecks: MissingSuperCall (TaskId:244)\r\n    DisabledChecks: UnusedResources,HardcodedDebugMode,MissingSuperCall (TaskId:244)\r\n    CheckIssues:  (TaskId:244)\r\n    ConfigFiles: (TaskId:244)\r\n    ResourceDirectories: (TaskId:244)\r\n      obj\\Debug\\81\\res\\ (TaskId:244)\r\n    SourceDirectories: (TaskId:244)\r\n    ClassDirectories: (TaskId:244)\r\n    LibraryDirectories: (TaskId:244)\r\n    LibraryJars: (TaskId:244)\r\n  Environment Variables passed to tool: (TaskId:244)\r\n    JAVA_HOME=C:\\Program Files\\Android\\jdk\\microsoft_dist_openjdk_1.8.0.9 (TaskId:244)\r\n  C:\\Program Files (x86)\\Android\\android-sdk\\tools\\bin\\lint.bat --quiet --enable MissingSuperCall --disable \"UnusedResources,HardcodedDebugMode,MissingSuperCall\" --resources obj\\Debug\\81\\res\\ obj\\Debug\\81\\  (TaskId:244)\r\n```\r\n\r\n### Preliminary Investigation\r\n\r\n- One little issue is that the `\\b` special sequence in `new Regex ($\"\\b{issueToRemove}\\b(,)?\");` is currently interpreted as a backspace character, so it would need to be adjusted to use two backslashes: `\\\\b`.\r\n\r\n- Another potential issue is that the call to `Regex.Match()` always searches `DisabledIssues`:\r\n\r\n    ```csharp\r\n    var match = issueReplaceRegex.Match (DisabledIssues);\r\n    ```\r\n\r\n    I'm not sure if this is intentional. For example, when `CleanIssues()` is called with `EnabledIssues` as the input, I'm not sure if the goal is indeed to remove only issues that *still* appear in `DisabledIssues` (after it has been cleaned). At first glance, I think that would mean `EnabledIssues` would never be modified?\r\n\r\n- Another question is how the `Version` values are determined for the [`DisabledIssuesByVersion`](https://github.com/xamarin/xamarin-android/blob/6e7be95b2655d28bdfd15713adc6f64988ad3a6f/src/Xamarin.Android.Build.Tasks/Tasks/Lint.cs#L160-L182) list. For example `MissingSuperCall` has `Version (26, 1, 1)`. But on both my Windows machine and my Mac (where `lint --version` reports 26.0.1), `lint --list | grep MissingSuperCall` shows a result, so it seems like that issue is supported at least back to version 26.0.0 and maybe earlier?\r\n\r\n- Finally, I'm wondering about the scenario where this code path runs. As I understand it, the only issues it checks for version compatibility are the ones listed in [`DisabledIssuesByVersion`](https://github.com/xamarin/xamarin-android/blob/6e7be95b2655d28bdfd15713adc6f64988ad3a6f/src/Xamarin.Android.Build.Tasks/Tasks/Lint.cs#L160-L182). Is that list exhaustive for all issues that have version dependencies? I'm thinking that users might find it surprising if a few issues are automatically removed for `lint` version compatibility but others are not.\r\n\r\nIt seems the original reason for `CleanIssues()` might not longer be an issue, so maybe the simplest option would be to remove it?\r\n\r\n### Version Information\r\n\r\nThis code path was first included in the [`d15-6`](https://github.com/xamarin/xamarin-android/blob/d15-6/src/Xamarin.Android.Build.Tasks/Tasks/Lint.cs#L226) branch."},{"Id":"8327474777","Type":"PullRequestEvent","CreatedAt":"2018-09-26T20:40:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2232","RelatedDescription":"Opened pull request \"[git] Re-format `.gitmodules`\" (#2232) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/2b863c31064ded67bb5fb00cbcf3f5911d158514\r\nContext: https://github.com/xamarin/xamarin-android/commit/7f9a3657b673c6b78797e7c75ba927922c6e10b1\r\nContext: https://github.com/xamarin/xamarin-android/commit/acdbe90fd84d08e94f263ffbb5613cf1644c07a2\r\nContext: https://github.com/xamarin/xamarin-android/commit/29d778a8db91c759eb6ea9b7867434b263a15789\r\nContext: ...\r\n\r\nEvery time @MSylvia branches our products for release, we get a\r\nunnecessarily large change to `.gitmodules`, for two reasons:\r\n\r\n 1. @MSylvia's tooling uses spaces `    ` instead of tabs for\r\n    indentation, and\r\n\r\n 2. @MSylvia's tooling *sorts submodules*.\r\n\r\nThis turns a conceptually simple change -- update branch names -- into\r\na very *noisy* change, as the `.gitmodules` contents are re-ordered\r\nand re-formatted.\r\n\r\nUpdate `.gitmodules` so that we *start* with what the tooling expects:\r\nsorted submodule names, and spaces for indentation.\r\n\r\nThis should allow *future* branch commits to be smaller and saner\r\nto review."},{"Id":"8327359271","Type":"PullRequestEvent","CreatedAt":"2018-09-26T20:19:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2225","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] set $(AndroidSdkDirectory) if blank\" (#2225) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2204\r\n\r\nIn d6009efa, I fixed the issue if `$(AndroidSdkDirectory)` is set to a\r\nnon-existent directory.\r\n\r\nHowever, downstream in `monodroid`, there is a test project with an MSBuild target such as:\r\n\r\n    <Exec Command=\"&quot;$(JavaSdkDirectory)\\bin\\javac&quot; -etc\" />\r\n\r\n`/p:JavaSdkDirectory` is not passed in here at the command line or\r\nimported, and so `/bin/javac` is attempted to be used--which won't\r\nquite work...\r\n\r\nThis brings up an important point.\r\n\r\n`$(AndroidSdkDirectory)`, `$(AndroidNdkDirectory)` and\r\n`$(JavaSdkDirectory)` were public properties that were set if blank.\r\nSo we can't just remove them! There could be unknown projects, NuGet\r\npackages, etc. relying on them.\r\n\r\nSo I think the fix here, is to set these properties if they are blank.\r\nInternally in xamarin-android's MSBuild targets, we should always use\r\nthe private underscore-prefixed versions such as\r\n`$(_AndroidSdkDirectory)`.\r\n\r\nI suspect we will need this change for `monodroid:master` and\r\n`monodroid:d16-0-p1` to build."},{"Id":"8326264808","Type":"PullRequestEvent","CreatedAt":"2018-09-26T17:01:24","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2231","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Add CustomView to SwitchBetweenDesignTimeBuild\" (#2231) at xamarin/xamarin-android","RelatedBody":"This commit adds a custom view to the `SwitchBetweenDesignTimeBuild`\r\ntest. This is so we can make sure that we are not running targets\r\nlike `_UpdateAndroidResgen` even if the custom view is updated\r\nas part of `_GenerateJavaStubs`."},{"Id":"8326172658","Type":"IssuesEvent","CreatedAt":"2018-09-26T16:45:12","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2230","RelatedDescription":"Opened issue \"[Proposal] Remove MDB and non-portable PDB support\" (#2230) at xamarin/xamarin-android","RelatedBody":"Currently, let's say you have a \"Hello World\" Xamarin.Android application project on Windows. \r\n\r\nYou _might_ have the following properties in your `HelloWorld.csproj`:\r\n```\r\n<PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>True</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n</PropertyGroup>\r\n```\r\n_NOTE: the latest template puts `DebugType=portable` here_\r\n\r\nWhen built, what will currently happen:\r\n* `HelloWorld.dll` is compiled\r\n* `HelloWorld.dll.mdb` is the generated symbol file\r\n* We run a `ConvertDebuggingFiles` MSBuild task (runs `pdb2mdb`) that is taking ~50ms for \"Hello World\". (I have seen it take up to 4 seconds, in cases where `Mono.Android.dll.mdb` existed, see #2215)\r\n* We look for any `*.mdb` files in `_CollectMdbFiles` and `_CopyMdbFiles` targets\r\n\r\nAs you can see, it is a lot of work to support this file format. Making sure all our of project templates have `DebugType=portable` is the first step.\r\n\r\n## What should we change?\r\n\r\nThe first thought, is that `Xamarin.Android.Common.targets` should do this by default:\r\n```\r\n<DebugType Condition=\" '$(DebugType)' = '' OR '$(DebugType)' == 'full' OR '$(DebugType)' = 'pdbonly'>portable</DebugType>\r\n```\r\n\r\nThis would make Xamarin.Android projects always use portable `*.pdb` files by default. `DebugType=portable` is set by SDK-style NetStandard projects [by default](https://github.com/dotnet/sdk/blob/e44c2520e36dc171688d8e9cadc38c65ca309add/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.props#L78). It works for both `Debug` and `Release` builds.\r\n\r\nWe would also remove:\r\n- Anything looking for `*.mdb` files\r\n- `ConvertDebuggingFiles` and `pdb2mdb`\r\n\r\nIf we encounter a \"non-portable\" pdb file, it will also be skipped and a new warning emitted.\r\n\r\n## Benefits\r\n\r\nThese changes cleanup our MSBuild targets and remove code (reduce technical debt).\r\n\r\nIt will also improve build times. How much? _This is an estimate_, but I'm seeing 50-100ms in past SmartHotel360 build logs looking for and copying `*.mdb` files. I think this time is spent even on builds with no changes. I see 300ms being spent on `ConvertDebuggingFiles`, but this only happens when assemblies are changing.\r\n\r\n## Concerns\r\n\r\nThe main concern here is existing NuGet packages, and what will happen.\r\n* If a `*.mdb` file is encountered, it will just be ignored\r\n* If a non-portable `*.pdb` file is encountered we will emit a warning and ignore it\r\n\r\nSo I think the only thing that someone could lose here is the ability to debug and step into code inside an existing NuGet package.\r\n\r\nSee: https://github.com/NuGet/Home/issues/6104\r\n"},{"Id":"8325537244","Type":"PullRequestEvent","CreatedAt":"2018-09-26T15:08:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2223","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] optimize $(AssemblySearchPaths)\" (#2223) at xamarin/xamarin-android","RelatedBody":"Context: https://docs.microsoft.com/en-us/visualstudio/msbuild/resolveassemblyreference-task?view=vs-2017\r\nContext: https://twitter.com/KirillOsenkov/status/1043725067081764865\r\n\r\nKirill added a new analyzer to the Windows binlog viewer, noting\r\n`$(AssemblySearchPaths)` that are unused during a build.\r\n\r\nLooking at what we are using currently, it reports:\r\n\r\n    Unused AssemblySearchPaths locations\r\n        {AssemblyFolders}\r\n        {AssemblyFoldersFromConfig:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\AssemblyFolders.config,v9.0}\r\n        {CandidateAssemblyFiles}\r\n        {Registry:Software\\Microsoft\\MonoAndroid,v9.0,AssemblyFoldersEx}\r\n        bin\\Debug\\\r\n\r\nLuckily, we already had MSBuild logic in place to remove `{GAC}` from\r\nthis list.\r\n\r\nBut we certainly are probing search paths that are nonsensical for\r\nXamarin.Android:\r\n- `{AssemblyFolders}`: Specifies the task will use the Visual\r\n  Studio.NET 2003 finding-assemblies-from-registry scheme.\r\n- `{AssemblyFoldersFromConfig:*}`: this probes the system-wide config\r\n  file in the MSBuild / Visual Studio install\r\n- `{CandidateAssemblyFiles}`: The `CandidateAssemblyFiles` property on\r\n  `ResolveAssemblyReferences` is blank. Docs say: Assemblies in this\r\n  list will be considered when the SearchPaths parameter contains\r\n  `{CandidateAssemblyFiles}` as one of the paths to consider.\r\n- `{Registry:*}`: probe the Windows registry...\r\n- `bin\\Debug` or `$(OutputPath)`: not needed, and a potential cause of\r\n  confusion. This would be if there was an arbitrary extra assembly\r\n  sitting in `$(OutputPath)`.\r\n\r\nAnd if we look further, we see odd things:\r\n\r\n    Primary reference \"System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\".\r\n        Resolved file path is \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\System.dll\".\r\n        Reference found at search path location \"{TargetFrameworkDirectory}\".\r\n        For SearchPath \"{TargetFrameworkDirectory}\".\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.winmd\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.dll\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.exe\", but it didn't exist.\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Control\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\System.winmd\", but it didn't exist.\r\n\r\nWhy are we looking for `.winmd` files? This is a UWP thing...\r\n\r\nAnd then apparently, our build also will look for `.pri` files?\r\nAnother UWP thing...\r\n\r\n    AllowedRelatedFileExtensions\r\n        .pdb\r\n        .xml\r\n        .pri\r\n        .dll.config\r\n        .exe.config\r\n        .dll.mdb\r\n        .exe.mdb\r\n\r\nSo the first fix is to trim `$(AssemblySearchPaths)` to precisely what\r\nXamarin.Android needs:\r\n\r\n    <AssemblySearchPaths>\r\n        {HintPathFromItem};\r\n        {TargetFrameworkDirectory};\r\n        {RawFileName};\r\n    </AssemblySearchPaths>\r\n\r\nWe shouldn't be concerned about other system-wide places.\r\n\r\nNext, we should only be looking at these file extensions:\r\n\r\n    <AllowedReferenceAssemblyFileExtensions>\r\n        .dll;\r\n    </AllowedReferenceAssemblyFileExtensions>\r\n    <AllowedReferenceRelatedFileExtensions>\r\n        .pdb;\r\n        .xml;\r\n        .dll.config;\r\n        .dll.mdb;\r\n    </AllowedReferenceRelatedFileExtensions>\r\n\r\nRemoving `.winmd` from `$(AllowedReferenceAssemblyFileExtensions)` and\r\n`.pri` from `$(AllowedReferenceRelatedFileExtensions)`. We can also\r\nignore `.exe*` files, since Xamarin.Android projects only use `.dll`\r\nfiles.\r\n\r\nThis makes the log probing for `System.dll` much cleaner:\r\n\r\n    Primary reference \"System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\".\r\n        Resolved file path is \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\System.dll\".\r\n        Reference found at search path location \"{TargetFrameworkDirectory}\".\r\n        For SearchPath \"{TargetFrameworkDirectory}\".\r\n            Considered \"C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v9.0\\System.dll\", but it didn't exist.\r\n\r\nHere is the log of changes made to these properties here at MSBuild\r\nevaluation time:\r\n\r\n    Property reassignment: $(AssemblySearchPaths)=\"\r\n            {HintPathFromItem};\r\n            {TargetFrameworkDirectory};\r\n            {RawFileName};\r\n        \" (previous value: \"\r\n        {CandidateAssemblyFiles};\r\n        ;\r\n        {HintPathFromItem};\r\n        {TargetFrameworkDirectory};\r\n        {AssemblyFoldersFromConfig:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\AssemblyFolders.config,v9.0};\r\n        {Registry:Software\\Microsoft\\MonoAndroid,v9.0,AssemblyFoldersEx};\r\n        {AssemblyFolders};\r\n        {GAC};\r\n        {RawFileName};\r\n        bin\\Debug\\\r\n        \") at xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets (338,2)\r\n\r\n    Property reassignment: $(AllowedReferenceAssemblyFileExtensions)=\"\r\n            .dll;\r\n        \" (previous value: \"\r\n        .winmd;\r\n        .dll;\r\n        .exe\r\n        \") at xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets (343,2)\r\n\r\n    Property reassignment: $(AllowedReferenceRelatedFileExtensions)=\"\r\n            .pdb;\r\n            .xml;\r\n            .dll.config;\r\n            .dll.mdb;\r\n        \" (previous value: \"\r\n        .pdb;\r\n        .xml;\r\n        .pri;\r\n        .dll.config;\r\n        .exe.config\r\n        \") at xamarin-android\\bin\\Release\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets (347,2)\r\n\r\n## Results\r\n\r\nI timed the Xamarin.Forms Control Gallery project, since I felt this\r\nchange would improve larger projects the most.\r\n\r\nProject here:\r\nhttps://github.com/jonathanpeppers/Xamarin.Forms/tree/msbuild-timing\r\n\r\nBefore:\r\n\r\n     1106 ms  ResolveAssemblies                          2 calls\r\n     1401 ms  ResolveAssemblyReference                  18 calls\r\n\r\nAfter:\r\n\r\n      909 ms  ResolveAssemblies                          2 calls\r\n     1088 ms  ResolveAssemblyReference                  18 calls\r\n\r\nThis seems to directly save ~500ms to these targets in incremental\r\nbuilds for this project. This project references ~7 other Xamarin.Android\r\nprojects.\r\n\r\n## Upstream\r\n\r\nOn MacOS, I also see probing for `.winmd` files!\r\n\r\n    Considered \"xamarin-android/bin/Debug/lib/xamarin.android/xbuild-frameworks/MonoAndroid/v9.0/System.winmd\", but it didn't exist.\r\n\r\nPerhaps we need some upstream changes to MSBuild as well..."},{"Id":"8325144373","Type":"IssuesEvent","CreatedAt":"2018-09-26T14:15:23","Actor":"benwalpole","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2229","RelatedDescription":"Opened issue \"Google Play Services Updated Stable Release\" (#2229) at xamarin/xamarin-android","RelatedBody":"Our app currently uses this deprecated Android Activity Recognition API: https://developers.google.com/android/reference/com/google/android/gms/location/ActivityRecognitionApi\r\n\r\nIn order to move to the new `ActivityRecognitionClient` we need to move to the latest version of Google Play Services however this is currently only available in preview: https://www.nuget.org/packages/Xamarin.GooglePlayServices.Base/70.1501.0-preview2\r\n\r\nWhen is this version likely to transition to a stable release?"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8329056089","Type":"IssuesEvent","CreatedAt":"2018-09-27T04:22:11","Actor":"kaushalyacs","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3912","RelatedDescription":"Opened issue \"Gradient view issue on Mac OS Android emulator API level 28 (Pie)\" (#3912) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nGradient view doesn't rendered properly on Mac OS Android 9 emulator (Older version of emulators work fine). But same project works as expected on Android 9 emulator on Windows.\r\n\r\n### Steps to Reproduce\r\n\r\nI have attached a demo project.\r\n\r\n### Expected Behavior\r\nGradient view should be rendered only within the specified area of the view.\r\n\r\n### Actual Behavior\r\nGradient view rendered in entire screen as an input transparent view. User can interact with elements out side the Gradient view which are invisible. Only elements inside Gradient view are visible.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729 / 2.5.0.91635\r\n- Last known good version: Didn't try with working older versions\r\n- IDE: VS Community 2017 for Mac \r\n- Platform Target Frameworks: \r\n  - iOS:  N/A\r\n  - Android: 9.0 Pie\r\n  - UWP:  N/A\r\n- Android Support Library Version: API 28\r\n- Nuget Packages:\r\n- Affected Devices: Mac OS Android 9 (Pie) emulator\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/34022101/46122324-a4e00480-c235-11e8-88ef-6c2ec264aa93.png)\r\nExpected output (Windows emulator)\r\n\r\n![image](https://user-images.githubusercontent.com/34022101/46122350-c2ad6980-c235-11e8-83d2-456cc8edf0c1.png)\r\nUnexpected output (Mac OS emulator)\r\n\r\n### Reproduction Link\r\n[GradientViewDemo.zip](https://github.com/xamarin/Xamarin.Forms/files/2422434/GradientViewDemo.zip)\r\n\r\n"},{"Id":"8328493025","Type":"PullRequestEvent","CreatedAt":"2018-09-27T01:09:10","Actor":"Viridovics","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3911","RelatedDescription":"Opened pull request \"Fix StartTimer and Ticker for UWP\" (#3911) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nReplace ```DispatcherTimer ``` to ```CompositionTarget.Rendering``` event in ```WindowsTicker``` and ```WindowsBasePlatformServices``` . \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #1937\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nThese changes would improve animation smoothness.\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nI checked only on _ScaleTo_ animation and wrote ```Issue1937Test ``` for ```Device.StartTimer```.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8328107915","Type":"IssuesEvent","CreatedAt":"2018-09-26T23:01:20","Actor":"valentinba","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3910","RelatedDescription":"Opened issue \"Routing effect resolution fails silently\" (#3910) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nRecently I ran into the following scenario:\r\n- start with a Xamarin Forms based iOS app\r\n- use a routing effect implemented in a separate, third party assembly\r\n- deploy the app in the iOS simulator. All is good, the effect is resolved\r\n- deploy the app on a real iOS device in debug mode and all is still good\r\n- finally, deploy the app on a real iOS device in release mode and the effect resolution fails silently\r\n\r\n### Steps to Reproduce\r\n\r\nI created a simplified solution to demonstrate the behavior. There is only one main page with two labels. One label has the effect attached. The other displays information about the inner effect of the routing effect attached to the first label.\r\n\r\n1. Build the attached solution EffectDemo\r\n2. Run it in debug mode on the iOS simulator. Note that the inner, platform specific effect is properly resolved and the type and resolve ID displayed in the second label\r\n3. Run it in debug mode on a real iOS device. Note that the inner effect is still properly resolved\r\n4. Run it in release mode on a real iOS device. Note that the inner effect is a NullEffect instance\r\n5. Change the AppDelegate.cs in the iOS project by commenting out the call to \r\n\r\n    EffectProvider.Effects.iOS.TestEffectiOS.Init(); \r\n\r\nand un-commenting the call to \r\n\r\n    new EffectProvider.Effects.iOS.TestEffectiOS();\r\n6. Rebuild and run in Release mode. Notice how now the effect is properly resolved again.\r\n\r\n### Expected Behavior\r\n\r\nProvide better feedback if the effect resolution fails because, for example the platform specific assembly providing it was not loaded.\r\n\r\n### Actual Behavior\r\n\r\nThe effect resolution fails silently and the inner effect is replaced with the NullEffect.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version: Didn't try older versions\r\n- IDE: Latest Visual Studio 2017 Community for Windows and Mac\r\n- Platform Target Frameworks:\r\n  - iOS:  12.0.0.15 \r\n- Android Support Library Version: N/A\r\n- Nuget Packages: N/A\r\n- Affected Devices: iOS devices in Release builds\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\n[EffectDemo.zip](https://github.com/xamarin/Xamarin.Forms/files/2421825/EffectDemo.zip)\r\n\r\n### Additional information\r\n\r\nAfter digging through the source code I speculated that a very aggressive linker was optimizing away the call to the static empty Init() method. This in turn caused the iOS effect assembly to not be loaded which in turn caused the effect resolution to fail. \r\n\r\nThis type of assembly loading by calling a static method seems to be fairly common. I'm not sure if there was a recent change in the linker to cause the aggressive optimization. Let me know if I should file a bug someplace else.\r\n\r\nI think some sort of error message generated at runtime when the effect resolution fails would've spared me quite a few hours of debugging.\r\n\r\n"},{"Id":"8328032726","Type":"PullRequestEvent","CreatedAt":"2018-09-26T22:42:38","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3909","RelatedDescription":"Opened pull request \"[Android] Update ClipBounds when View bounds changes\" (#3909) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe ClipBounds for Layouts is not being updated when the size of the Layout changes. This change fixes that issue.\r\n\r\n### Issues Resolved ### \r\n\r\n- Clipped layouts disappearing entirely if IsClippedToBounds set before they are sized\r\n- Clipped layouts being clipped at the wrong dimensions after rotation/resizing\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8327342065","Type":"PullRequestEvent","CreatedAt":"2018-09-26T20:16:42","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3908","RelatedDescription":"Opened pull request \"WPF - Fix Ctrl+A does not select all in WPF password Entry\" (#3908) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix  Ctrl+A does not select all in WPF password Entry\r\n\r\nPatch inspired by the UWP renderer :)\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3258"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8327399873","Type":"IssuesEvent","CreatedAt":"2018-09-26T20:27:02","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4712","RelatedDescription":"Closed issue \"EAAccessory SIGSEGV when connection is lost \" (#4712) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Using a mobile printer like Star Micronics SMT300i, after data has been sent, send other data and turn off the printer while printing (random but this way is the preferred to replicate it)\r\n\r\n### Expected Behavior\r\nGet an error event in the Handler of the stream\r\n\r\n### Actual Behavior\r\nCrash with SIGSEGV\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.1 (build 9)\r\nInstallation UUID: a69fd0e8-a0ec-4b44-b769-73b2bbcb5b6d\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/matteo/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1 (API level 16)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.13 (Visual Studio Community)\r\nHash: 373c313a\r\nBranch: \r\nBuild date: 2018-07-24 23:47:12-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.13 (Visual Studio Community)\r\nHash: 373c313a\r\nBranch: HEAD\r\nBuild date: 2018-07-24 23:47:12-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706010009\r\nGit revision: 1916291c332d942d45f3d8a952cc315f7864abef\r\nBuild date: 2018-08-22 19:19:11+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 53cd52a227bb91315389d4860f821fa4c3b396b3\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical: Stacktrace:\r\n\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical:   at <unknown> <0xffffffff>\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical:   at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain (int,string[],intptr,intptr) <0x00007>\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical:   at UIKit.UIApplication.Main (string[],intptr,intptr) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.14.0.13/src/Xamarin.iOS/UIKit/UIApplication.cs:79\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical:   at UIKit.UIApplication.Main (string[],string,string) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.14.0.13/src/Xamarin.iOS/UIKit/UIApplication.cs:63\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical:   at iSell.OS.Application.Main (string[]) [0x00001] in /Sviluppo/Procedure/iSell/Versioni/iSelliOS/Main.cs:13\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical:   at (wrapper runtime-invoke) object.runtime_invoke_dynamic (intptr,intptr,intptr,intptr) [0x0001e] in <c4da4bcb0a614f31bf9f25261a36b747#93F14D94-2D26-CCC7-F696-6059A076F7BA>:0\r\n2018-08-28 17:16:48.112 iSelliOS[293:36570] critical: \r\nNative stacktrace:\r\n\r\n2018-08-28 17:16:48.113 iSelliOS[293:36570] critical: \t0   iSelliOS                            0x0000000107800400 _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 73344148\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t1   iSelliOS                            0x000000010780d53c mono_pmip + 13988\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t2   libsystem_platform.dylib            0x0000000181340b58 _sigtramp + 52\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t3   ExternalAccessory                   0x00000001981c2584 <redacted> + 104\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t4   ExternalAccessory                   0x00000001981c4e94 <redacted> + 932\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t5   CoreFoundation                      0x00000001816b0c3c <redacted> + 20\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t6   CoreFoundation                      0x00000001816b01b8 <redacted> + 428\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t7   CoreFoundation                      0x00000001816aff14 <redacted> + 216\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t8   CoreFoundation                      0x000000018172d84c <redacted> + 1408\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t9   CoreFoundation                      0x00000001815e6f38 _CFXNotificationPost + 384\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t10  Foundation                          0x0000000182057bbc <redacted> + 68\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t11  libdispatch.dylib                   0x0000000181010aa0 <redacted> + 24\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t12  libdispatch.dylib                   0x0000000181010a60 <redacted> + 16\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t13  libdispatch.dylib                   0x000000018101d65c <redacted> + 1012\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t14  CoreFoundation                      0x00000001816c7070 <redacted> + 12\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t15  CoreFoundation                      0x00000001816c4bc8 <redacted> + 2272\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t16  CoreFoundation                      0x00000001815e4da8 CFRunLoopRunSpecific + 552\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t17  GraphicsServices                    0x00000001835ca020 GSEventRunModal + 100\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t18  UIKit                               0x000000018b6039cc UIApplicationMain + 236\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t19  iSelliOS                            0x00000001055cf234 _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 37491400\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t20  iSelliOS                            0x0000000104ecc7cc _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 30140512\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t21  iSelliOS                            0x0000000104ecc68c _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 30140192\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t22  iSelliOS                            0x0000000103ef3eb0 _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 13524804\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t23  iSelliOS                            0x00000001047cb238 _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 22794956\r\n2018-08-28 17:16:48.114 iSelliOS[293:36570] critical: \t24  iSelliOS                            0x00000001078106a8 mono_pmip + 26640\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \t25  iSelliOS                            0x0000000107896058 mono_pmip + 573888\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \t26  iSelliOS                            0x000000010789bf90 mono_pmip + 598264\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \t27  iSelliOS                            0x00000001077f18a8 _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 73283900\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \t28  iSelliOS                            0x0000000107988798 xamarin_localized_string_format_9 + 27664\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \t29  iSelliOS                            0x00000001032dd4d8 _ZN7plcrash2MS5async24dwarf_cfa_state_iteratorIyxE4nextEPjPNS1_28plcrash_dwarf_cfa_reg_rule_tEPy + 849260\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \t30  libdyld.dylib                       0x0000000181075fc0 <redacted> + 4\r\n2018-08-28 17:16:48.115 iSelliOS[293:36570] critical: \r\n=================================================================\r\nGot a SIGSEGV while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8327389183","Type":"IssuesEvent","CreatedAt":"2018-09-26T20:25:11","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4847","RelatedDescription":"Closed issue \"watchOS label's setText does not work\" (#4847) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1.  Download example from https://github.com/xamarin/ios-samples/tree/master/watchOS/WatchConnectivity\r\n2. Compile and run, check if clicking on iPhone updates watchOS label\r\n\r\n\r\nTested on iPhone 5s(ios 12), Apple Watch genration 1(WatchOS 4.3.2) and on simulator.\r\n\r\n### Expected Behavior\r\nsetText should update label's text\r\n\r\n### Actual Behavior\r\n\r\nDoes nothing\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017  (2)\r\nVersion 15.8.4\r\nVisualStudio.15.Release/15.8.4+28010.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-90019-84418-AA222\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-90019-84418-AA222\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJetBrains ReSharper Ultimate 2018.1.3    Build 112.0.20180626.160528\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.8-pre (009db7d)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.756 (d15-8@b66ff7180)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.221 (a73ca07f7)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.116 (9619170)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n```\r\n1>------ Rebuild All started: Project: WatchConnectivity.OnWatchExtension, Configuration: Debug iPhoneSimulator ------\r\n1>  Connecting to Mac server 192.168.50.103...\r\n1>  Detected signing identity:\r\n1>    Bundle Id: com.xamarin.WatchConnectivity.watchkitapp.watchkitextension\r\n1>    App Id: com.xamarin.WatchConnectivity.watchkitapp.watchkitextension\r\n1>  Connecting to Mac server 192.168.50.103...\r\n1>  Detected signing identity:\r\n1>    Bundle Id: com.xamarin.WatchConnectivity.watchkitapp.watchkitextension\r\n1>    App Id: com.xamarin.WatchConnectivity.watchkitapp.watchkitextension\r\n1>C:\\Users\\aleks\\Documents\\WatchConnectivity\\WatchConnectivity.OnWatchExtension\\SessionManager\\WCSessionManager.cs(91,33,91,102): warning CS0618: 'NSDictionary<NSString, NSObject>.FromObjectsAndKeys(NSString[], NSObject[])' is obsolete: ''TKey' and 'TValue' are inversed and won't work unless both types are identical. Use the generic overload that takes a count parameter instead.'\r\n1>  WatchConnectivity.OnWatchExtension -> C:\\Users\\aleks\\Documents\\WatchConnectivity\\WatchConnectivity.OnWatchExtension\\bin\\iPhoneSimulator\\Debug\\WatchConnectivityOnWatchExtension.dll\r\n2>------ Rebuild All started: Project: WatchConnectivity.OnWatch, Configuration: Debug iPhoneSimulator ------\r\n2>  Connecting to Mac server 192.168.50.103...\r\n2>  Connecting to Mac server 192.168.50.103...\r\n2>F:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(1328,3): warning : Glance Interfaces were removed in watchOS 3.0\r\n2>F:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(1215,3): warning : The app icon set \"AppIcon\" has an unassigned child.\r\n2>  WatchConnectivity.OnWatch -> C:\\Users\\aleks\\Documents\\WatchConnectivity\\WatchConnectivity.OnWatch\\bin\\iPhoneSimulator\\Debug\\WatchConnectivityOnWatch.dll\r\n2>  Detected signing identity:\r\n2>    Bundle Id: com.xamarin.WatchConnectivity.watchkitapp\r\n2>    App Id: com.xamarin.WatchConnectivity.watchkitapp\r\n3>------ Rebuild All started: Project: WatchConnectivity, Configuration: Debug iPhoneSimulator ------\r\n3>  Connecting to Mac server 192.168.50.103...\r\n3>  Connecting to Mac server 192.168.50.103...\r\n3>F:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(1215,3): warning : The app icon set \"AppIcon\" has an unassigned child.\r\n3>C:\\Users\\aleks\\Documents\\WatchConnectivity\\WatchConnectivity.OnWatchExtension\\SessionManager\\WCSessionManager.cs(91,33,91,102): warning CS0618: 'NSDictionary<NSString, NSObject>.FromObjectsAndKeys(NSString[], NSObject[])' is obsolete: ''TKey' and 'TValue' are inversed and won't work unless both types are identical. Use the generic overload that takes a count parameter instead.'\r\n3>  WatchConnectivity -> C:\\Users\\aleks\\Documents\\WatchConnectivity\\WatchConnectivity\\bin\\iPhoneSimulator\\Debug\\WatchConnectivity.exe\r\n3>  Detected signing identity:\r\n3>    Bundle Id: com.xamarin.WatchConnectivity\r\n3>    App Id: com.xamarin.WatchConnectivity\r\n========== Rebuild All: 3 succeeded, 0 failed, 0 skipped ==========\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nhttps://github.com/xamarin/ios-samples/tree/master/watchOS/WatchConnectivity\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8327364748","Type":"IssuesEvent","CreatedAt":"2018-09-26T20:20:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4096","RelatedDescription":"Closed issue \"MacOS VSTS Agent doesn't build successfully when triggered from Visual Studio Online\" (#4096) at xamarin/xamarin-macios","RelatedBody":"One of our VSTS MacOS Agent fails to build through VSO although local build works just fine. I’ve searched online and it seems like the most common cause of this is an XCode/Xamarin update which requires you to manually install some components but I have no such issues on the Mac Agent. I have another Mac that works just fine when triggered from VSO, running on same OS, XCode & Xamarin version.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Setup Mac as a VSO Agent (follow instructions on Xamarin Docs)\r\n2. Run a Xamarin project build locally (works)\r\n3. Trigger a build from VSO of the same project (doesn't work)\r\n\r\n### Expected Behavior\r\nSuccessfully being able to build the project\r\n\r\n### Actual Behavior\r\nXamarin project fails to build when triggered from VSO\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Xamarin Studio Community ===\r\n\r\nVersion 6.3 (build 864)\r\nInstallation UUID: 563fd5d9-c71b-49c0-a98f-b5b2939d957e\r\nRuntime:\r\nMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\nGTK+ 2.24.23 (Raleigh theme)\r\n\r\nPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 3.5.0.0\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Xamarin Studio Community)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Xamarin Studio Community)\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 603000864\r\nGit revision: 6c2f6737278ccc3e81e12276d49c0d92f975f189\r\nBuild date: 2017-04-24 11:26:01-04\r\nXamarin addins: d8d46e577d8507c35260ce9d73df3c33415bb214\r\nBuild lane: monodevelop-lion-d15-1\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin DAX-Mac-mini.guest.corp.microsoft.com 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n2018-05-03T22:00:22.8138300Z \t\t\tTarget CopyFilesMarkedCopyLocal:\r\n2018-05-03T22:00:22.8164260Z \t\t\t\tCopying file from '/Users/user/myagent/_work/3/s/MobileCrm.Data/bin/iPhone/Release/MobileCrm.Data.dll' to '/Users/user/myagent/_work/3/s/MobileCrm.UI/bin/iPhone/Release/MobileCrm.Data.dll'\r\n2018-05-03T22:00:22.8191370Z \t\t\t\tCopying file from '/Users/user/myagent/_work/3/s/Resco.Data/bin/iPhone/Release/Resco.Data.dll' to '/Users/user/myagent/_work/3/s/MobileCrm.UI/bin/iPhone/Release/Resco.Data.dll'\r\n2018-05-03T22:00:22.8218640Z \t\t\t\tCopying file from '/Users/user/myagent/_work/3/s/Resco.UI/bin/iPhone/Release/Resco.UI.dll' to '/Users/user/myagent/_work/3/s/MobileCrm.UI/bin/iPhone/Release/Resco.UI.dll'\r\n2018-05-03T22:00:22.8248140Z \t\t\t\tCopying file from '/Users/user/myagent/_work/3/s/MobileCrm.Data/bin/iPhone/Release/ExchangeWS.dll' to '/Users/user/myagent/_work/3/s/MobileCrm.UI/bin/iPhone/Release/ExchangeWS.dll'\r\n2018-05-03T22:00:22.8273010Z \t\t\tTarget GenerateSatelliteAssemblies:\r\n2018-05-03T22:00:22.8297140Z \t\t\tNo input files were specified for target GenerateSatelliteAssemblies, skipping.\r\n2018-05-03T22:00:22.8322030Z \t\t\tTarget CoreCompile:\r\n2018-05-03T22:00:22.8377570Z \t\t\t\tTool /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/4.5/csc.exe execution started with arguments: /noconfig /debug- /optimize+ /out:obj/iPhone/Release/MobileCrm.UI.dll Controllers/ReportController.cs GoogleCodeReceiver.cs Hub/EntityHub.cs Hub/HubComparer.cs Hub/HubItem.cs Hub/StaticTreeItem.cs Hub/TreeItem.cs ListTemplateManager.cs Properties/AssemblyInfo.cs BaseEntityForm.cs Command.cs ControllerFactory.cs DetailViewBuilder.cs EntityDetailForm.cs EntityList.cs EntityListForm.cs FormManager.cs LookupForm.cs MessageBox.cs StopWatch.cs Utils.cs FormController.cs ContactDetailList.cs DynamicEntityForm.cs ListController.cs DynamicEntityList.cs MultiLookupForm.cs EntityChart.cs MapController.cs ViewMode.cs EntityMap.cs Workflow/AssignmentStep.cs Workflow/Branch.cs Workflow/BranchCollection.cs Workflow/ConditionGroup.cs Workflow/ConditionStep.cs Workflow/Engine.cs Workflow/ExecutionContext.cs Workflow/ExpressionStep.cs Workflow/Step.cs Workflow/StepCollection.cs Workflow/Variables.cs Workflow/Workflow.cs Workflow/FunctionStep.cs Workflow/VariableDefinitionStep.cs Workflow/ExternalActions.cs Workflow/PositionStep.cs Workflow/SayTextStep.cs FilterEditor/Condition.cs FilterEditor/ConditionGroup.cs FilterEditor/ConditionOperator.cs FilterEditor/EditConditionForm.cs FilterEditor/EditConditionList.cs FilterEditor/EditFilterForm.cs FilterEditor/EditViewForm.cs FilterEditor/Serialize.cs FilterEditor/ViewListForm.cs Json.cs Workflow/CommandStep.cs Workflow/SharedVariables.cs FavoritesItem.cs Controllers/DetailViewController.cs Controllers/FlipController.cs Controllers/SignatureController.cs Controllers/SimpleMapController.cs Controllers/ViewController.cs Controllers/WallController.cs Controllers/WebController.cs ProcessFlow/Process.cs ProcessFlow/ProcessController.cs DataImageCache.cs Controllers/DocumentController.cs Controllers/ChatterController.cs ChatterForm.cs Hub/HubCommand.cs Duplicate/DuplicateRulesValidator.cs ProcessFlow/BinaryExpressionStep.cs ProcessFlow/ExpressionTypeStep.cs ProcessFlow/MethodCallExpression.cs ProcessFlow/UnaryExpressionStep.cs ProcessFlow/Variables.cs ProcessFlow/WorkflowTranslator.cs AddressBook/ContactHelper.cs AddressBook/ExternalContactForm.cs obj/iPhone/Release/Xamarin.iOS,Version=v1.0.AssemblyAttribute.cs /target:library /define:\"__IOS__;__MOBILE__;__UNIFIED__;TRACE;MONOTOUCH\" /nostdlib /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/mscorlib.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Core.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Xml.Linq.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Data.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Xml.dll /reference:/Users/user/myagent/_work/3/s/MobileCrm.Data/bin/iPhone/Release//MobileCrm.Data.dll /reference:/Users/user/myagent/_work/3/s/Resco.Data/bin/iPhone/Release//Resco.Data.dll /reference:/Users/user/myagent/_work/3/s/Resco.UI/bin/iPhone/Release//Resco.UI.dll /warn:4\r\n2018-05-03T22:00:22.9595540Z \t\t\t\tMicrosoft (R) Visual C# Compiler version 2.3.2.61928 (ec1cde8b)\r\n2018-05-03T22:00:22.9609060Z \t\t\t\tCopyright (C) Microsoft Corporation. All rights reserved.\r\n2018-05-03T22:00:24.5924830Z Controllers/WebController.cs(1114,12): warning CS0168: The variable 'o' is declared but never used\r\n2018-05-03T22:00:24.5940800Z BaseEntityForm.cs(1074,32): warning CS0649: Field 'BaseEntityForm.m_SelView' is never assigned to, and will always have its default value null\r\n2018-05-03T22:00:24.9884590Z \t\t\tTarget DeployOutputFiles:\r\n2018-05-03T22:00:24.9899150Z \t\t\t\tCopying file from '/Users/user/myagent/_work/3/s/MobileCrm.UI/obj/iPhone/Release/MobileCrm.UI.dll' to '/Users/user/myagent/_work/3/s/MobileCrm.UI/bin/iPhone/Release/MobileCrm.UI.dll'\r\n2018-05-03T22:00:24.9935300Z \t\tDone building project \"/Users/user/myagent/_work/3/s/MobileCrm.UI/MobileCrm.UI.iOS.csproj\".\r\n2018-05-03T22:00:25.1296980Z \t\tProject \"/Users/user/myagent/_work/3/s/MobileCrm/MobileCrm.iOS.csproj\" (default target(s)):\r\n2018-05-03T22:00:25.1319610Z \t\t\tTarget PrepareForBuild:\r\n2018-05-03T22:00:25.1333130Z \t\t\t\tConfiguration: Release Platform: iPhone\r\n2018-05-03T22:00:25.1368150Z \t\t\t\tCreated directory \"bin/iPhone/Release/\"\r\n2018-05-03T22:00:25.1381790Z \t\t\t\tCreated directory \"obj/iPhone/Release/\"\r\n2018-05-03T22:00:25.2029640Z Exception: System.Xml.XmlException: Root element is missing.\r\n2018-05-03T22:00:25.2043990Z   at System.Xml.XmlTextReaderImpl.Throw (System.Exception e) [0x00027] in <1896cc19925e4a9db1a9086d4d328e07>:0 \r\n2018-05-03T22:00:25.2057710Z   at System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo (System.String res) [0x00017] in <1896cc19925e4a9db1a9086d4d328e07>:0 \r\n2018-05-03T22:00:25.2072770Z   at System.Xml.XmlTextReaderImpl.ParseDocumentContent () [0x0035d] in <1896cc19925e4a9db1a9086d4d328e07>:0 \r\n2018-05-03T22:00:25.2090490Z   at System.Xml.XmlTextReaderImpl.Read () [0x0008c] in <1896cc19925e4a9db1a9086d4d328e07>:0 \r\n2018-05-03T22:00:25.2104200Z   at System.Xml.XmlReader.ReadToDescendant (System.String name) [0x0006a] in <1896cc19925e4a9db1a9086d4d328e07>:0 \r\n2018-05-03T22:00:25.2119820Z   at Xamarin.MacDev.PropertyListFormat+XmlFormat.StartReading (System.IO.Stream input) [0x00034] in <c6204894ca30465693c21ceb96574847>:0 \r\n2018-05-03T22:00:25.2133580Z \t\t\tTarget _CoreCompileInterfaceDefinitions:\r\n2018-05-03T22:00:25.2147170Z /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets: error : Error executing task IBTool: Failed to parse PList data type: \r\n2018-05-03T22:00:25.2161060Z \t\t\t\tBuild FAILED.\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[logsVSO.txt](https://github.com/xamarin/xamarin-macios/files/2010873/logsVSO.txt)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8327272171","Type":"PullRequestEvent","CreatedAt":"2018-09-26T20:03:43","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4883","RelatedDescription":"Opened pull request \"[xcode10] XM/AppKit audit\" (#4883) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8326882882","Type":"PullRequestEvent","CreatedAt":"2018-09-26T18:51:48","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4882","RelatedDescription":"Merged pull request \"[CoreMedia] Add missing attr since we support older versions of Mac OS X.\" (#4882) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":199,"FavoriteCount":108,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":44,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":178,"FavoriteCount":88,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-27T05:30:53.3004049Z","RunDurationInMilliseconds":3753}