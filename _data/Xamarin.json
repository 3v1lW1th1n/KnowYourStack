{"Data":{"Blog":{"FeedItems":[{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7720853158","Type":"IssuesEvent","CreatedAt":"2018-05-24T01:39:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1493","RelatedDescription":"Closed issue \"\"make prepare\" failing on building xamarin-android from source.\" (#1493) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n(not reproducible in all environments, but I can reproduce on both of my Macs)\r\n\r\n1. Do a new checkout of xamarin-android d15-6 branch (issue affect master also, but output is different) \r\n2. Run **make prepare**\r\n\r\n### Expected Behavior\r\nmake prepare step will succeed\r\n\r\n### Actual Behavior\r\nmake prepare step fails with \r\n```\r\nbuild-tools/scripts/jdk.mk:130: *** missing separator.  Stop.\r\nmake: *** [prepare-external] Error 2\r\n```\r\n\r\n## Notes\r\n\r\nAfter much discussion and testing, it was determined that the command: \r\n```\r\n_DARWIN_JDK_FALLBACK_DIRS := $(wildcard /Library/Java/JavaVirtualMachines/jdk*)\r\n_DARWIN_JDK_ROOT := $(shell ls -dtr $(_DARWIN_JDK_FALLBACK_DIRS) | sort | tail -1)\r\n```\r\nin the jdk.mk file was causing some erroneous characters in the path that was later used in `JI_JVM_PATH`, which is evaluated on line 130 and caused the **make prepare** step to fail with the \"missing separator\" error. \r\n\r\nAfter `_DARWIN_JDK_ROOT` was assigned as above, outputting it with:\r\n```\r\necho _DARWIN_JDK_ROOT=$(_DARWIN_JDK_ROOT)\r\n```\r\n\r\nresulted in very odd output:\r\n```\r\necho _DARWIN_JDK_ROOT=/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk\r\n_DARWIN_JDK_ROOT=/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk\r\nkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkin/sh: 49m: command not found\r\nmake: *** [jonp] Error 127\r\n```\r\n\r\nThis strange output causes the jdk.mk file to stop on line 130 (using the d15-6 branch of xamarin-android) as the path was obviously not correct in the `JI_JVM_PATH` and apparently was deemed as \"missing a separator.\" \r\n\r\nThat strange output can be reproduced more simply with the following in a makefile: \r\n```\r\n_DARWIN_JDK_ROOT := $(shell ls -d /path/to/any/folder)\r\njonp:\r\n        echo _DARWIN_JDK_ROOT=$(_DARWIN_JDK_ROOT)\r\n```\r\n\r\nI have attached a zipped folder that should serve as a complete repro called testmakefile.zip\r\n[testmakefile.zip](https://github.com/xamarin/xamarin-android/files/1861712/testmakefile.zip)\r\n\r\nNeither Jon P nor Alex K were able to reproduce this issue on their systems.\r\n\r\nI found an SO post that seems to indicate that using `$(shell ls ... )` in a makefile is unreliable and should be avoided, so perhaps we need to modify jdk.mk to avoid using `$(shell ls ...)` and instead use `$(shell find ...)` or `$(wildcard ...)` both of which worked to resolve this issue in the jdk.mk file.\r\n\r\ne.g.:\r\n```\r\n_DARWIN_JDK_ROOT := $(shell find $(_DARWIN_JDK_FALLBACK_DIRS) -depth 0 | sort -n | tail -1)\r\n```\r\nSO post: https://stackoverflow.com/a/10024479/2913599\r\n\r\nRelevant paragraph: \r\n> Finally, as a general rule (not really applicable to this example): as esperanto notes in comments, using the output from ls is not completely reliable (some details depend on file names and sometimes even the version of ls; some versions of ls attempt to sanitize output in some cases). Thus, as l0b0 and idelic note, if you're using GNU make you can use $(wildcard) and $(subst ...) to accomplish everything inside make itself (avoiding any \"weird characters in file name\" issues). (In sh scripts, including the recipe portion of makefiles, another method is to use find ... -print0 | xargs -0 to avoid tripping over blanks, newlines, control characters, and so on.)\r\n\r\n### Version Information\r\nmacOS 10.13.3\r\n\r\n### Log File\r\n\r\n[XAd15-6MakePrepareOutput.txt](https://github.com/xamarin/xamarin-android/files/1861667/XAd15-6MakePrepareOutput.txt)"},{"Id":"7719683852","Type":"IssuesEvent","CreatedAt":"2018-05-23T20:15:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1711","RelatedDescription":"Closed issue \"Unable to inflate a layout which has custom controls with mixed naming casing and is included through a library project reference\" (#1711) at xamarin/xamarin-android","RelatedBody":"A regression test related to https://bugzilla.xamarin.com/show_bug.cgi?id=23880 is failing against master (d15-8). Attempting to inflate a layout with some custom controls using different namespace casing from a library project is no longer successful. this is a regression from d15-7.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download and run the attached project on device.\r\n\r\n[CustomControl.zip](https://github.com/xamarin/xamarin-android/files/2023162/CustomControl.zip)\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nInflating layouts with mixed cased custom control declarations works regardless of which project the layout belongs to.\r\n\r\n### Actual Behavior\r\n```\r\n05-21 18:31:12.620 15267 15267 E mono-rt : [ERROR] FATAL UNHANDLED EXCEPTION: Android.Views.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class classlibrary1.CustomTextView ---> Android.Views.InflateException: Binary XML file line #1: Error inflating class classlibrary1.CustomTextView ---> Java.Lang.ClassNotFoundException: Didn't find class \"classlibrary1.CustomTextView\" on path: DexPathList[[zip file \"/data/app/CustomControl.CustomControl-1/base.apk\"],nativeLibraryDirectories=[/data/app/CustomControl.CustomControl-1/lib/arm64, /system/fake-libs64, /data/app/CustomControl.CustomControl-1/base.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]\r\n05-21 18:31:12.620 15267 15267 E mono-rt :    --- End of inner exception stack trace ---\r\n05-21 18:31:12.620 15267 15267 E mono-rt :    --- End of inner exception stack trace ---\r\n05-21 18:31:12.620 15267 15267 E mono-rt :   at (wrapper dynamic-method) System.Object.6aa6b78e-e820-4a0d-af04-cae4655c198e(intptr,intptr,intptr)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :   --- End of managed Android.Views.InflateException stack trace ---\r\n05-21 18:31:12.620 15267 15267 E mono-rt : android.view.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class classlibrary1.CustomTextView\r\n05-21 18:31:12.620 15267 15267 E mono-rt : Caused by: android.view.InflateException: Binary XML file line #1: Error inflating class classlibrary1.CustomTextView\r\n05-21 18:31:12.620 15267 15267 E mono-rt : Caused by: java.lang.ClassNotFoundException: Didn't find class \"classlibrary1.CustomTextView\" on path: DexPathList[[zip file \"/data/app/CustomControl.CustomControl-1/base.apk\"],nativeLibraryDirectories=[/data/app/CustomControl.CustomControl-1/lib/arm64, /system/fake-libs64, /data/app/CustomControl.CustomControl-1/base.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at java.lang.ClassLoader.loadClass(ClassLoader.java:380)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.createView(LayoutInflater.java:609)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:787)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:727)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.rInflate(LayoutInflater.java:858)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:821)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.inflate(LayoutInflater.java:518)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.inflate(LayoutInflater.java:426)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.view.LayoutInflater.inflate(LayoutInflater.java:377)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at md55a979b20f205572c4e768e1416c32f1f.MainActivity.n_onCreate(Native Method)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at md55a979b20f205572c4e768e1416c32f1f.MainActivity.onCreate(MainActivity.java:29)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.Activity.performCreate(Activity.java:6682)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1118)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2619)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2727)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.ActivityThread.-wrap12(ActivityThread.java)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1478)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.os.Handler.dispatchMessage(Handler.java:102)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.os.Looper.loop(Looper.java:154)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at android.app.ActivityThread.main(ActivityThread.java:6121)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at java.lang.reflect.Method.invoke(Native Method)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)\r\n05-21 18:31:12.620 15267 15267 E mono-rt :      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:779)\r\n```\r\n\r\n### Version Information\r\nmonodroid/master/de662f58.\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#619948](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/619948)"},{"Id":"7719682681","Type":"PullRequestEvent","CreatedAt":"2018-05-23T20:15:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1718","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix up library project java classes\" (#1718) at xamarin/xamarin-android","RelatedBody":"Commit a50e00bb removed one of the calls to `ConvertResourcesCases`.\r\nThis was responsible for the library project layouts not being\r\nupdated with the md5 generated java class names.\r\n\r\nHowever rather than adding the call back in we can expand the\r\ncall in `_GenerateJavaStubs` to include the library prjects.\r\nThis makes more sense because that is the target in which we\r\ngenerate the stubs in the first place."},{"Id":"7719656451","Type":"PullRequestEvent","CreatedAt":"2018-05-23T20:09:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1719","RelatedDescription":"Merged pull request \"[monodroid] Add Java.Interop.dll.config for host JI assembly\" (#1719) at xamarin/xamarin-android","RelatedBody":"Make sure the `Java.Interop.dll` has `java_interop_jnienv_get_java_vm`\r\nfunction available, through the *DllMap* in the config file. The function is called from [JniEnvironment.cs](https://github.com/xamarin/java.interop/blob/master/src/Java.Interop/Java.Interop/JniEnvironment.cs#L168).\r\n\r\nThis code path is reached during `jnimarshalmethod-gen.exe` run."},{"Id":"7719314114","Type":"PullRequestEvent","CreatedAt":"2018-05-23T19:00:08","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1725","RelatedDescription":"Opened pull request \"[build, macOS] More changes to not require Xcode for building\" (#1725) at xamarin/xamarin-android","RelatedBody":"A follow up to 9178d614ae881862623ca07b71c16fab8b164cdb, add `DISABLE_IOS=1`\r\nto a handful more locations so that Mono can be built without Xcode installed\r\non the system."},{"Id":"7719301399","Type":"PullRequestEvent","CreatedAt":"2018-05-23T18:57:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1724","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Disable per-TFN IntermediateOutputPath\" (#1724) at xamarin/xamarin-android","RelatedBody":"Fixes: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/620311\r\n\r\nDefaulting `$(AppendTargetFrameworkToIntermediateOutputPath)` to True\r\nis breaking QA unit tests, and we still have no good idea how much\r\nhavoc this will wreak upon our customers.\r\n\r\nDefault `$(AppendTargetFrameworkToIntermediateOutputPath)` to False so\r\nthat the new `$(IntermediateOutputPath)` mechanism it implies\r\n(13d216fd) can be opted-in to instead of out of."},{"Id":"7719122930","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:23:08","Actor":"brminnick","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1723","RelatedDescription":"Opened issue \"Feature Request: Change the Default HttpClient Implementation to AndroidClientHandler, instead of HttpClientHandler\" (#1723) at xamarin/xamarin-android","RelatedBody":"Feature Request: Change the default HttpClient Implementation to use `AndroidClientHandler`\r\n\r\nThe default HttpClient Implementation today is `HttpClientHandler`.\r\n\r\n<img width=\"1729\" alt=\"screen shot 2018-05-23 at 11 19 15 am\" src=\"https://user-images.githubusercontent.com/13558917/40443428-25410198-5e7b-11e8-9be1-c3c8f96e1e15.png\">\r\n"},{"Id":"7719086139","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:15:52","Actor":"novatekinno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1722","RelatedDescription":"Opened issue \"Xamarin Android Designer Does Not Detect Changes Unless Switch to Source Tab Made\" (#1722) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n0. Install current version of Visual Studio Community & Mobile Development with .NET tools. All default selections.\r\n1. Create a Single View Android App\r\n2. Open the content_main.axml layout in the Designer\r\n3. Drag in a Text (Medium) control.\r\n4. Notice the file name tab above does not show an asterisk for an unsaved change.\r\n5. Press the Source tab below the design view. Notice there is now an unsaved change detected.\r\n\r\n### Expected Behavior\r\nChanges in the design view will show unsaved changes. Closing the design view without saving will prompt the user to save.\r\n\r\n### Actual Behavior\r\nChanges in design view will not be persisted when closing unless the user tabs over to the Source view and then saves and closes the file.\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"7717264856","Type":"PullRequestEvent","CreatedAt":"2018-05-23T13:18:11","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1719","RelatedDescription":"Opened pull request \"[monodroid] Add Java.Interop.dll.config for host JI assembly\" (#1719) at xamarin/xamarin-android","RelatedBody":"Make sure the `Java.Interop.dll` has `java_interop_jnienv_get_java_vm`\r\nfunction available, through the *DllMap* in the config file. The function is called from [JniEnvironment.cs](https://github.com/xamarin/java.interop/blob/master/src/Java.Interop/Java.Interop/JniEnvironment.cs#L168).\r\n\r\nThis code path is reached during `jnimarshalmethod-gen.exe` run."},{"Id":"7716450263","Type":"IssuesEvent","CreatedAt":"2018-05-23T10:43:04","Actor":"yinyue200","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1676","RelatedDescription":"Closed issue \"CS0433 The type ValueTask<TResult> exists in both System.Threading.Tasks.Extensions and mscorlib in Xamarin.Android 8.3\" (#1676) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build it\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n**Repro project**: [https://github.com/yinyue200/taskextest](https://github.com/yinyue200/taskextest)\r\n\r\n### Expected Behavior\r\n\r\nBuild success\r\n\r\n### Actual Behavior\r\n\r\nThe type ValueTask<TResult> exists in both \"System.Threading.Tasks.Extensions, Version=4.1.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" and \"mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\"\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nVisual C++ 2017   00369-90000-00000-AA333\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017   15.0.40501.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# 工具   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\n在 IDE 中使用的 C# 组件。根据项目类型和设置，可能会使用不同版本的编译器。\r\n\r\nClear MEF Component Cache   1.4\r\nClears the Visual Studio MEF component cache to fix issues with cache corruption.\r\n\r\nCookiecutter   15.7.18116.1\r\n提供以 cookiecutter 格式查找、实例化和自定义模板的工具。\r\n\r\nDotfuscator Community Edition   5.34.0.6830-9173b9a63\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nGitHub.VisualStudio   2.5.1.2234\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP 项目系统   2.0\r\nJavaScript UWP 项目系统\r\n\r\nJavaScript 语言服务   2.0\r\nJavaScript 语言服务\r\n\r\nMarkdown Editor   1.12.233\r\nA full featured Markdown editor with live preview and syntax highlighting. Supports GitHub flavored Markdown.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ 向导   1.0\r\nMicrosoft Visual C++ 向导\r\n\r\nMicrosoft Visual Studio VC 软件包   1.0\r\nMicrosoft Visual Studio VC 软件包\r\n\r\nMicrosoft 用于 Visual Studio 的持续交付工具   0.3\r\n自动化来自 Visual Studio IDE 内的持续生成集成和持续生成交付配置。\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet 包管理器   4.6.0\r\nVisual Studio 中的 NuGet 包管理器。有关 NuGet 的详细信息，请访问 http://docs.nuget.org/。\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18116.1\r\n为 Python 开发人员提供 IntelliSense、项目、模板、调试、交互窗口和其他支持。\r\n\r\nPython - Django 支持   15.7.18116.1\r\n为 Django Web 框架提供模板和集成。\r\n\r\nPython - IronPython 支持   15.7.18116.1\r\n为基于 IronPython 的项目提供模板和集成。\r\n\r\nPython - 分析支持   15.7.18116.1\r\n对 Python 项目的分析支持。\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResXManager   1.19.1082.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic 工具   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\n在 IDE 中使用 Visual Basic 组件。根据项目类型和设置，可能会使用不同版本的编译器。\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 16ecf5a30ad868d183c58e4a71a71c23d4ed3ba9.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code 调试适配器主机包   1.0\r\n用于在 Visual Studio 中托管 Visual Studio Code 调试适配器的互操作层\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.01\r\nVisual Studio Tools for Universal Windows Apps 让你能够构建一种通用的应用体验，运行 Windows 10 的每种设备都可以获得这种体验，如手机、平板电脑、PC 等。它包含 Microsoft Windows 10 软件开发工具包。\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.442 (396b18cef)\r\n用于启用 Xamarin.iOS 和 Xamarin.Android 的开发的 Visual Studio 扩展。\r\n\r\nXamarin Designer   4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.177 (7e782c1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n多语言应用工具包   4.0\r\n多语言应用程序工具包可以帮助您通过提供档案管理、 伪和机器翻译，翻译编辑器中，定位您的 Windows 应用商店应用程序和构建集成。http://aka.ms/matinstall\r\n\r\n通用 Azure 工具   1.10\r\n通过 Azure 移动服务和 Microsoft Azure Tools 提供通用服务。\r\n\r\n用于容器的 Microsoft Visual Studio Tools   1.1\r\n在目标环境中开发、运行、验证 ASP.NET Core 应用程序。按 F5，应用程序经调试后直接进入容器，或者按 Ctrl+F5 可编辑和刷新应用，无需重新生成容器。\r\n\r\n### Log File\r\n\r\nN/A\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7715936320","Type":"PullRequestEvent","CreatedAt":"2018-05-23T09:11:38","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1718","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix up library project java classes\" (#1718) at xamarin/xamarin-android","RelatedBody":"Commit a50e00bb removed one of the calls to `ConvertResourcesCases`.\r\nThis was responsible for the library project layouts not being\r\nupdated with the md5 generated java class names.\r\n\r\nHowever rather than adding the call back in we can expand the\r\ncall in `_GenerateJavaStubs` to include the library prjects.\r\nThis makes more sense because that is the target in which we\r\ngenerate the stubs in the first place."},{"Id":"7715708007","Type":"PullRequestEvent","CreatedAt":"2018-05-23T08:31:05","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1717","RelatedDescription":"Opened pull request \"Use java-interop sources in monodroid runtime libraries\" (#1717) at xamarin/xamarin-android","RelatedBody":"This PR contains patch from https://github.com/xamarin/xamarin-android/pull/1675 which had to be reverted due to problem in win hosts compilation.\r\n\r\nIt contains the original patch plus updates to build with newer Java.Interop.\r\n\r\nIt needs to be rebased once https://github.com/xamarin/java.interop/pull/323 is merged."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7721152762","Type":"PullRequestEvent","CreatedAt":"2018-05-24T03:28:43","Actor":"chkn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2816","RelatedDescription":"Opened pull request \"Initial implementation of Segues\" (#2816) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSegues are objects that represent navigational actions. These objects can be created and wired up entirely in XAML without any codebehind (or with code, if you prefer).\r\n\r\nThis PR is an evolution of https://github.com/chkn/Xamarin.Forms.Segues integrated into Core. This integration has some benefits:\r\n\r\n- Integrates into navigation\r\n    + New `NavigationAction` enum maps to `INavigation` methods\r\n    + New internal type, `ValueSegue`: a lightweight struct that holds either a simple `NavigationAction` or a full `Segue` instance\r\n    + A lot of navigation internals have been refactored in terms of these, which I believe simplifies and streamlines things.\r\n- Pay only for what you use\r\n    + Overloads of new methods are provided that take `NavigationAction` when a full `Segue` instance is not needed\r\n    + `{Segue}` markup extension does not actually instantiate `Segue` (returns a lightweight `ICommand` that triggers the same behavior)\r\n    + Full `Segue` instance can be provided by user if they want to enable/disable it, subclass it, bind properties, or to perform actions when the segue is executed.\r\n- Ultimately, will enable custom transitions (to come later in a separate PR)\r\n\r\nI've included the platform implementation for iOS only for now. If we decide we want to proceed with this approach, I could implement Android and UWP as well.\r\n\r\n#### NavigationAction\r\n\r\nThis introduces the `NavigationAction` enum, whose values mostly represent method calls on `INavigation`. However, there are a couple differences:\r\n\r\n##### Show\r\n\r\nThis PR introduces `INavigation.ShowAsync` and `NavigationAction.Show`. This action is designed to do the right thing in most common cases, and as such, is the default `NavigationAction` for segues. If the user does not want this default behavior, they can specify one of the other navigation actions explicitly.\r\n\r\nBehavior depends on the context. Here are the rules:\r\n\r\n- If the source page's ancestor is a `NavigationPage`, calls `INavigation.PushAsync`.\r\n- Otherwise, calls `INavigation.PushModalAsync`.\r\n\r\nI also had a couple other interesting ideas for this action in the context of a `MultiPage` or `MasterDetailPage`, but I did not implement them for this PR.\r\n\r\n**Caveat:** Throws an `InvalidOperationException` if this action is used when navigation is not rooted (i.e. `NavigationProxy.Inner == null`). It might be possible to remove this limitation, but there are some issues that would need to be resolved.\r\n\r\n##### Pop\r\n\r\nThis PR also introduces `NavigationAction.Pop`. Note that this is NOT the equivalent of calling `INavigation.PopAsync`, which is an existing API that corresponds to the new `NavigationAction.PopPushed`.\r\n\r\nLike the above, `NavigationAction.Pop` tries to do the right thing depending on the context:\r\n\r\n- If there is anything on the modal stack, call `INavigation.PopModalAsync`.\r\n- Otherwise, call `INavigation.PopAsync`.\r\n\r\n##### MainPage\r\n\r\nSometimes you either don't want stack-based navigation, or you want to reset the root of your app easily. As such, `NavigationAction.MainPage` is included that trivially sets `Application.Current.MainPage` to the target page.\r\n\r\n#### Native Segues\r\n\r\nSegues may be used to navigate to native screens. This functionality is analogous to the native view support (https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/native-views/). \r\n\r\n### Examples ###\r\n\r\n#### Attach a segue to a button from XAML\r\n\r\n```xml\r\n<Button Text=\"Go to next page\"\r\n        Command=\"{Segue}\"\r\n        Segue.Target=\"{x:Type local:NextPage}\" />\r\n```\r\nNote that `Segue.Target` can also be a `DataTemplate`.\r\n\r\n#### Attach a segue to a button from code\r\n\r\n```csharp\r\n// Attaches a segue to be executed when the button is clicked\r\nbutton.SetSegue(NavigationAction.Show, new DataTemplate(typeof(NextPage)));\r\n```\r\n\r\n#### Imperatively perform a segue from code\r\n\r\n```csharp\r\n// Executes the segue now\r\nawait Navigation.NavigateAsync(NavigationAction.Show, new NextPage());\r\n```\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n\r\n```csharp\r\nnamespace Xamarin.Forms\r\n{\r\n    // The following public types have been added:\r\n    public enum NavigationAction\r\n    public class NavigationActionConverter : TypeConverter\r\n    public class Segue : BindableObject, ISegueExecution\r\n    public class SegueBeforeExecuteEventArgs : EventArgs\r\n    public static class SegueExtensions\r\n    public class SegueTarget\r\n\r\n    // The following members have been added:\r\n    Task INavigation.ShowAsync(Page page);\r\n    Task INavigation.ShowAsync(Page page, bool animated);\r\n    Task INavigation.SegueAsync(Segue segue, SegueTarget target);\r\n\r\n    public event EventHandler<SegueRequestedEventArgs> NavigationPage.SegueRequested;\r\n\r\n    public Task NavigationProxy.ShowAsync(Page page)\r\n    public Task NavigationProxy.ShowAsync(Page page, bool animated)\r\n    public Task NavigationProxy.SegueAsync(Segue segue, SegueTarget target)\r\n}\r\n\r\nnamespace Xamarin.Forms.Internals\r\n{\r\n    // The following public types have been added:\r\n    public interface ICommandableElement\r\n    public interface ISegueExecution\r\n    public class SegueRequestedEventArgs\r\n    public struct ValueSegue\r\n}\r\n\r\nnamespace Xamarin.Forms.Xaml\r\n{\r\n    public class SegueExtension : IMarkupExtension<ICommand>\r\n}\r\n\r\nnamespace Xamarin.Forms.Platform.iOS\r\n{\r\n    // The following public types have been added:\r\n    public class NativePageWrapper\r\n    public class NativePageWrapperRenderer : IVisualElementRenderer\r\n    public sealed class ViewControllerSegueTarget : SegueTarget\r\n\r\n    // The following members have been added:\r\n    public static Page PageExtensions.ToPage(this UIViewController viewController)\r\n}\r\n```\r\n\r\nChanged:\r\n\r\n```csharp\r\nnamespace Xamarin.Forms\r\n{\r\n    // The following public types now implement `Xamarin.Forms.Internals.ICommandableElement`:\r\n    public class Button : ICommandableElement\r\n    public class TextCell : ICommandableElement\r\n    public class ClickGestureRecognizer : ICommandableElement\r\n    public class Entry : ICommandableElement\r\n    public class SearchBar : ICommandableElement\r\n    public class MenuItem : ICommandableElement\r\n    public class TapGestureRecognizer : ICommandableElement\r\n}\r\n```\r\n\r\n### Behavioral Changes ###\r\n\r\nNone intended.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if someone can point me at similar tests, I will add some)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7721133255","Type":"IssuesEvent","CreatedAt":"2018-05-24T03:21:37","Actor":"DennisWelu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2815","RelatedDescription":"Opened issue \"Picker still attempts to set SelectedItem when BindingContext goes to null\" (#2815) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen the BindingContext is set to null and the Picker has an ItemsSource set, then the binding still fires back a change to the source for the SelectedItem. When this occurs the SelectedItem binding causes the bound source to be set to null.\r\n\r\n### Steps to Reproduce\r\n1. Add a Picker with a binding to ItemsSource and SelectedItem.\r\n2. Set a valid binding context.\r\n3. Set the binding context back to null.\r\n\r\n### Expected Behavior\r\nThe SelectedItem binding should not fire back a value to the source. Other controls do not operate this way when their binding context is set to null.\r\n\r\n### Actual Behavior\r\nThe binding fires a value back to the source and since the ItemsSource has already been cleared at this point the value is always null for SelectedItem.\r\n\r\n### Reproduction Link\r\n[PickerBindingContextNull.zip](https://github.com/xamarin/Xamarin.Forms/files/2033682/PickerBindingContextNull.zip)\r\n\r\nThis is very similar to another issue but it is thought they may not be the same thing: https://github.com/xamarin/Xamarin.Forms/issues/2499"},{"Id":"7720606874","Type":"IssuesEvent","CreatedAt":"2018-05-24T00:06:48","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2777","RelatedDescription":"Closed issue \"[Android] The method Dispose in TabbedRenderer would be called twice if the page which extends TabbedPage is popped out.\" (#2777) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nIn Android ,The method Dispose in TabbedRenderer would be called twice if the page which extends TabbedPage is popped out. \r\n### Steps to Reproduce\r\n\r\n1.  Custom a page extends TabbedPage\r\n2.  Custom a renderer extens TabbedRenderer \r\n3.  Use the custom page in project \r\n4.  pop out the custom page\r\n\r\n### Expected Behavior\r\nhe method Dispose in TabbedRenderer should be called once.\r\n\r\n### Actual Behavior\r\nThe method Dispose in TabbedRenderer would be called twice \r\n\r\n### Basic Information\r\n\r\n- Version with issue:Xamarin.Forms Version >= 3.0\r\n- Last known good version: Xamarin.Forms Version < 3.0\r\n- IDE: Vistual Studio 2017  v15.7.1\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android:  Android8.1<!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->V27.0.2\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7720453356","Type":"IssuesEvent","CreatedAt":"2018-05-23T23:16:00","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2812","RelatedDescription":"Closed issue \"When upgrading nuget (to XF3) receive \"This collection is read only\"  VS2017\" (#2812) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSame issue as reported in this bugzilla:\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=61113\r\n\r\nVS2017 - Trying to upgrade a really simple basic starter app from XamForms2.5 to 3.0.  Some packages updated, some don't.  For example `Xamarin.Android.Support.Core.Utils` won't install with Visual Studio error pane reporting \"This collection is read-only.\"\r\n\r\n![image](https://user-images.githubusercontent.com/11351506/40440031-c718a5a2-5e8a-11e8-829e-b5dc445f5ecc.png)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Simple project that is XamForms 2.5\r\n2. Try to update to XamForms 3.0\r\n3. or - try to update all of the existing nugets in the project - some succeed some fail.\r\n\r\n### Expected Behavior\r\nTo actually be able to upgrade Xamarin without it always being a nightmare\r\n\r\n### Actual Behavior\r\nNightmare\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7720441664","Type":"IssuesEvent","CreatedAt":"2018-05-23T23:12:19","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2733","RelatedDescription":"Closed issue \"iphone 5 UseSafeArea issue\" (#2733) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nI am facing toolbar content overlapping issue before, and after adding following a line of code resolve issue for iPhone X, iPhone 6s plus etc. but not resolve for iPhone 5\r\n\r\n`On<Xamarin.Forms.PlatformConfiguration.iOS>().SetUseSafeArea(true);`\r\n\r\n### Screenshots\r\n\r\n![iphonesissue](https://user-images.githubusercontent.com/35361721/40101888-78d1d26c-5906-11e8-8ccb-287973bb7a33.jpg)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7720123157","Type":"PullRequestEvent","CreatedAt":"2018-05-23T21:45:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4115","RelatedDescription":"Merged pull request \"[msbuild] Log the name of the ibtool/actool log file if we cannot par…\" (#4115) at xamarin/xamarin-macios","RelatedBody":"…se it\r\n\r\nImproves diagnostics for https://github.com/xamarin/xamarin-macios/issues/4096"},{"Id":"7719943505","Type":"IssuesEvent","CreatedAt":"2018-05-23T21:06:41","Actor":"luhenry","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4097","RelatedDescription":"Closed issue \"[mono2018-04]ThreadPrincipalTests.PrincipalFlowsToAsyncTask failure on device\" (#4097) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update System to xamarin.macios from mono2018-04 branch, 11.11.0.398 (master: 1e1a347b) \r\n2. Execute mscorlib tests on device\r\n\r\n### Expected Behavior\r\nAll tests pass. \r\n### Actual Behavior\r\n[FAIL] ThreadPrincipalTests.PrincipalFlowsToAsyncTask : System.NotSupportedException : Linked Away\r\n### Environment\r\n\r\n```\r\nOperating System: Mac OS X 10.13.4\r\nMono version: 5.14.0.84 (ef73a4955df)  (2018-05-15 21:55:01 -04:00)\r\nXA version: 8.3.0.19 (HEAD/342b2ce96) \r\nXI version: 11.11.0.398 (master: 1e1a347b) \r\nXM version: 4.5.0.398 (master: 1e1a347b)  (2018-05-15 11:45:38 -04:00)\r\nXS version: 7.5.1.22 (60442dd)  (2018-05-14 21:43:39 -04:00)\r\n[Device] Name: XQA-AppleTV-2, Identifier: b4bdf4adae9fadc66c4ed145b08d35266ec7262c, Version: 9.2.1, Arch: , FormFactor: AppleTV, PairedPhone: \r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nTest Logs: http://xqa.blob.core.windows.net/gist/mscorlib-tvos02-28-59b4bdf4adae9fadc66c4ed145b08d35266ec7262c02-28-59-481215a1262b4887ba06a12085cd8b24.zip\r\n\r\nBuild log: http://xqa.blob.core.windows.net/gist/report-d44aac155d8d497badf3dcc5efad37a0.txt\r\n\r\n### Example Project (If Possible)\r\n\r\nxamarin-macios/tests/bcl-test/mscorlib/mscorib.csproj\r\n"},{"Id":"7719815999","Type":"PullRequestEvent","CreatedAt":"2018-05-23T20:41:26","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4118","RelatedDescription":"Opened pull request \"Bump mono to head of 2018-02\" (#4118) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7719596778","Type":"IssuesEvent","CreatedAt":"2018-05-23T19:57:44","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4108","RelatedDescription":"Closed issue \"mmp-tests run on debug fail locally\" (#4108) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\nOpen mmptest in VSfM and run locally\r\n\r\n### Expected Behavior\r\n\r\nOur tests to match build machine status\r\n\r\n### Actual Behavior\r\n\r\nAbout 19 test failures. I believe some of them are related to debug symbols, but have not researched further.\r\n\r\n### Environment\r\n\r\nmaster"},{"Id":"7719423155","Type":"IssuesEvent","CreatedAt":"2018-05-23T19:21:58","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4116","RelatedDescription":"Closed issue \"Xamarin.Mac Full should internally compile against 4.{5,6,7}-api instead of 4.5 to prevent mono mismatches\" (#4116) at xamarin/xamarin-macios","RelatedBody":"This is a request from VSfM components to fix a case that can occur when:\r\n\r\n- Using XM System TargetFramework\r\n- On a machine with an \"older\" mono\r\n- Crashes look like this:\r\n\r\n```\r\nSystem.MissingMethodException: Method 'System.Runtime.InteropServices.Marshal.PtrToStringUTF8' not found.\r\n  at ObjCRuntime.Class.ResolveAssembly (System.IntPtr assembly_name) [0x00025] in <e0fc6dbbbd464bec93f9c51c7060c780>:0 \r\n  at ObjCRuntime.Class.ResolveFullTokenReference (System.UInt32 token_reference) [0x00050] in <e0fc6dbbbd464bec93f9c51c7060c780>:0 \r\n  at ObjCRuntime.Class.ResolveTokenReference (System.UInt32 token_reference, System.UInt32 implicit_token_type) [0x00015] in <e0fc6dbbbd464bec93f9c51c7060c780>:0 \r\n```\r\n\r\nThe ideal fix is to change XM's platform assembly to compile against an API facade instead of the \"real\" 4.5 binaries we bundle, since System mono _does not_ necessarily have the same \"public but not in real .NET\" surface.\r\n"},{"Id":"7719256482","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:48:59","Actor":"dougcs8","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4117","RelatedDescription":"Opened issue \"No way to configure NSPixelFormat for MonoMacGameView so it will always use legacy OpenGL 2\" (#4117) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<--\r\nPlease fill in the *entire* template below.\r\n\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\n\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a MonoMacGameView\r\n2. Context will always be legacy OpenGL 2\r\n3. Do not see a way to work around this not even with overriding\r\n\r\n### Expected Behavior\r\n\r\nA way to set the pixel format to something other then the default\r\n\r\n### Actual Behavior\r\n\r\npixel format can not be changed from default\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\n\r\nXamarin studio 6.3, Xamarin Mac\r\n\r\n2. \r\n\r\nMonoMacGameView constructor (NSOpenGLContext arg is for a shared context so that won't help)\r\n\r\n### Build Logs\r\n\r\n### Example Project (If Possible)\r\n\r\n"},{"Id":"7718679019","Type":"IssuesEvent","CreatedAt":"2018-05-23T16:57:36","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4116","RelatedDescription":"Opened issue \"Xamarin.Mac Full should internally compile against 4.{5,6,7}-api instead of 4.5 to prevent mono mismatches\" (#4116) at xamarin/xamarin-macios","RelatedBody":"This is a request from VSfM components to fix a case that can occur when:\r\n\r\n- Using XM System TargetFramework\r\n- On a machine with an \"older\" mono\r\n- Crashes look like this:\r\n\r\n```\r\nSystem.MissingMethodException: Method 'System.Runtime.InteropServices.Marshal.PtrToStringUTF8' not found.\r\n  at ObjCRuntime.Class.ResolveAssembly (System.IntPtr assembly_name) [0x00025] in <e0fc6dbbbd464bec93f9c51c7060c780>:0 \r\n  at ObjCRuntime.Class.ResolveFullTokenReference (System.UInt32 token_reference) [0x00050] in <e0fc6dbbbd464bec93f9c51c7060c780>:0 \r\n  at ObjCRuntime.Class.ResolveTokenReference (System.UInt32 token_reference, System.UInt32 implicit_token_type) [0x00015] in <e0fc6dbbbd464bec93f9c51c7060c780>:0 \r\n```\r\n\r\nThe ideal fix is to change XM's platform assembly to compile against an API facade instead of the \"real\" 4.5 binaries we bundle, since System mono _does not_ necessarily have the same \"public but not in real .NET\" surface.\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"999389007191728134","CreatedAt":"2018-05-23T20:38:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to secure and version your #Xamarin apps in this guest post on Mobile.BuildTools: https://t.co/NTtOmsdDTl https://t.co/ks5Q3K2joU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"998953429568573440","CreatedAt":"2018-05-22T15:47:11+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/2E1zBel6Cr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":19,"RawContent":null},{"Id":"998352195631435777","CreatedAt":"2018-05-20T23:58:06+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/tO3s7DT35f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":44,"RawContent":null},{"Id":"997143964397572096","CreatedAt":"2018-05-17T15:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/LeAoHXXaA6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"996824503241052160","CreatedAt":"2018-05-16T18:47:36+00:00","UserScreenname":"xamarinhq","Text":"Get started with #XamarinEssentials cross-platform APIs: https://t.co/sW5UgLfeGb https://t.co/Bw4ufWhGP8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":150,"FavoriteCount":79,"RawContent":null},{"Id":"996785351665463297","CreatedAt":"2018-05-16T16:12:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/UZ5l6JaWcB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"996750580969365506","CreatedAt":"2018-05-16T13:53:51+00:00","UserScreenname":"xamarinhq","Text":"Learn about some small changes coming as we integrate https://t.co/iLyxWYOFfj content into Microsoft sites: https://t.co/RcvPgvkPTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null},{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":34,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"995013274252009473","CreatedAt":"2018-05-11T18:50:25+00:00","UserScreenname":"xamarinhq","Text":"On this week's epsiode of the #XamarinPodcast, get the #MSBuild 2018 recap for mobile developers: https://t.co/UhjdSxsePY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":9,"RawContent":null},{"Id":"994975698736570368","CreatedAt":"2018-05-11T16:21:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/iXX9NqH3wX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"994612280980660225","CreatedAt":"2018-05-10T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/TjAVAcfe1a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":21,"RawContent":null},{"Id":"994284793184563200","CreatedAt":"2018-05-09T18:35:42+00:00","UserScreenname":"xamarinhq","Text":"Everything the #Xamarin developer should know from #MSBuild, all in one place: https://t.co/wZn2oaz7l5 https://t.co/GmsEImV7Bq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":143,"FavoriteCount":76,"RawContent":null}]}},"RunOn":"2018-05-24T05:30:44.3391441Z","RunDurationInMilliseconds":4482}