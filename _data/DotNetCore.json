{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing the .NET Framework 4.7.2","PublishedOn":"2018-04-30T20:56:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of the .NET Framework 4.7.2. It’s included in the Windows 10 April 2018 Update. .NET Framework 4.7.2 is also available on Windows 7+ and Windows Server 2008...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/","RawContent":null},{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":63,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":40,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":66,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7633311174","Type":"PullRequestEvent","CreatedAt":"2018-05-06T02:58:05","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17890","RelatedDescription":"Merged pull request \"Delete unnecessary internal layer of Span globalization helpers\" (#17890) at dotnet/coreclr","RelatedBody":"This makes the code smaller and faster. For example, the following is about 1.4x faster with this change:\r\n\r\n```\r\nReadOnlySpan<char> s1 = \"Hello world\";\r\nReadOnlySpan<char> s2 = \"world\";\r\nfor (int i = 0; i < 100000000; i++) s1.EndsWith(s2, StringComparison.OrdinalIgnoreCase);\r\n```\r\n\r\nAlso, I have ported GetCaseCompareOfComparisonCulture code size optimization from #16434 while I was on it because of it fit well with the rest of the changes.\r\n\r\nEdit: The implementation had a bug. The improvement for above example is only 1.4x."},{"Id":"7632920710","Type":"PullRequestEvent","CreatedAt":"2018-05-05T20:50:20","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17892","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to rtm-26505-03, rtm-26505-03, respectively (release/2.1)\" (#17892) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7632629418","Type":"IssuesEvent","CreatedAt":"2018-05-05T17:23:08","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17870","RelatedDescription":"Closed issue \"CoreCLR failed to run test \"baseservices.exceptions.XUnitWrapper\" crashed\" (#17870) at dotnet/coreclr","RelatedBody":"CoreCLR failed to run test \"baseservices.exceptions.XUnitWrapper\" crashed on Windows with VS2017 Update2. This issue is caused by master branch revision [0d96346](https://github.com/dotnet/coreclr/commit/0d963469bb16a734d07c1760f392cf325b17d0e4). Could you please help take a look at this? Thank you!\r\n\r\n**You can repro this issue as the steps below:**\r\n1. git clone https://github.com/dotnet/coreclr D:\\CoreCLR\\src\r\n2. Open a clean x86 prompt (C:\\windows\\syswow64\\cmd.exe) and browse to D:\\CoreCLR\\src\r\n3. build x86 release -Rebuild -- /clp:ShowCommandLine\r\n4. build-test.cmd x86 release -- /clp:ShowCommandLine\r\n5. tests\\runtest.cmd x86 release\r\n\r\n**Error info:**\r\nThe whole log file please see attachment.\r\n[log_x86_test.log](https://github.com/dotnet/coreclr/files/1970337/log_x86_test.log)\r\n To run the test:\r\n  > set CORE_ROOT=D:\\CoreCLR\\src\\bin\\tests\\Windows_NT.x86.Release\\Tests\\Core_Root\r\n  > D:\\CoreCLR\\src\\bin\\tests\\Windows_NT.x86.Release\\baseservices\\exceptions\\WindowsEventLog\\WindowsEventLog\\WindowsEventLog.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n          D:\\CoreCLR\\src\\bin\\tests\\Windows_NT.x86.Release\\TestWrappers\\baseservices.exceptions\\baseservices.exceptions.XUnitWrapper.cs(107,0): at baseservices_exceptions._WindowsEventLog_WindowsEventLog_WindowsEventLog_._WindowsEventLog_WindowsEventLog_WindowsEventLog_cmd()\r\n"},{"Id":"7632622032","Type":"PullRequestEvent","CreatedAt":"2018-05-05T17:18:03","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17889","RelatedDescription":"Merged pull request \"Remove use of ByReference<T> in Memmove ABI\" (#17889) at dotnet/coreclr","RelatedBody":"This is a follow-up to https://github.com/dotnet/coreclr/pull/15947. Now that Roslyn's ref reassignment feature is available, we can use that rather than the earlier workaround of passing `ByReference<T>` through `Memmove`'s internal ABI.\r\n\r\nOn x64, there's no difference in the codegen between using `ByReference<T>` vs. ref reassignment. On x86, this change results in an approx. 15% decrease in codegen size for the `Memmove` method, and there is a commensurate increase in throughput in my brief testing. This is expected, as we knew during the original change that RyuJIT x86 doesn't quite optimize passing `ByReference<T>` around as well as its x64 counterpart does."},{"Id":"7632616418","Type":"PullRequestEvent","CreatedAt":"2018-05-05T17:14:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17888","RelatedDescription":"Merged pull request \"disable dialog box for forced unhandled exception\" (#17888) at dotnet/coreclr","RelatedBody":"Fix for #17870 \r\nWindows Event Log tests trigger an unhandled exception on purpose to test event logging. If we run this test from Desktop UI, it pops up a dialog box, and if the user doesn't click on \"Close\", it'll cause a timeout on the test and fail. This fix disables the dialog box from popping up so that tests will pass without having to click on the button."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7633379428","Type":"IssuesEvent","CreatedAt":"2018-05-06T04:08:03","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/issues/9208","RelatedDescription":"Reopened issue \"Can't invoke global tool in bash\" (#9208) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nInstall a global tool.\r\n\r\n## Expected  behavior\r\n\r\nGlobal tool should exist.\r\n\r\n## Actual behavior\r\n\r\n```\r\nroot@f43f17fa565a:/# dotnet tool list -g\r\nPackage Id           Version      Commands\r\n------------------------------------------\r\nnuke.globaltool      1.0.0        nuke\r\nroot@f43f17fa565a:/# bash\r\nroot@f43f17fa565a:/# nuke\r\nbash: nuke: command not found\r\n```\r\n\r\nEverything works inside Windows.\r\n\r\n## Environment data\r\n```\r\nroot@f43f17fa565a:/# dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008530\r\n Commit:    822ae6d43a\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         debian.9-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008530/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview2-26406-04\r\n  Commit:  6833f3026b\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-preview2-008530 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7633366397","Type":"IssuesEvent","CreatedAt":"2018-05-06T03:55:02","Actor":"matkoch","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9208","RelatedDescription":"Closed issue \"Can't invoke global tool in bash\" (#9208) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nInstall a global tool.\r\n\r\n## Expected  behavior\r\n\r\nGlobal tool should exist.\r\n\r\n## Actual behavior\r\n\r\n```\r\nroot@f43f17fa565a:/# dotnet tool list -g\r\nPackage Id           Version      Commands\r\n------------------------------------------\r\nnuke.globaltool      1.0.0        nuke\r\nroot@f43f17fa565a:/# bash\r\nroot@f43f17fa565a:/# nuke\r\nbash: nuke: command not found\r\n```\r\n\r\nEverything works inside Windows.\r\n\r\n## Environment data\r\n```\r\nroot@f43f17fa565a:/# dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008530\r\n Commit:    822ae6d43a\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         debian.9-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008530/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview2-26406-04\r\n  Commit:  6833f3026b\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-preview2-008530 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7633361026","Type":"IssuesEvent","CreatedAt":"2018-05-06T03:49:21","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9209","RelatedDescription":"Closed issue \"dotnet tool install --source-feed doesn't support relative local paths\" (#9209) at dotnet/cli","RelatedBody":"As described in the headline. On Windows this would work. On UNIX an absolute path is required.\r\n\r\n"},{"Id":"7632957805","Type":"IssuesEvent","CreatedAt":"2018-05-05T21:18:27","Actor":"matkoch","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9209","RelatedDescription":"Opened issue \"dotnet tool install --source-feed doesn't support relative local paths\" (#9209) at dotnet/cli","RelatedBody":"As described in the headline. On Windows this would work. On UNIX an absolute path is required.\r\n\r\n"},{"Id":"7632708407","Type":"IssuesEvent","CreatedAt":"2018-05-05T18:16:49","Actor":"matkoch","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9208","RelatedDescription":"Opened issue \"Can't invoke global tool in BAHS\" (#9208) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nInstall a global tool.\r\n\r\n## Expected  behavior\r\n\r\nGlobal tool should exist.\r\n\r\n## Actual behavior\r\n\r\n```\r\nroot@f43f17fa565a:/# dotnet tool list -g\r\nPackage Id           Version      Commands\r\n------------------------------------------\r\nnuke.globaltool      1.0.0        nuke\r\nroot@f43f17fa565a:/# bash\r\nroot@f43f17fa565a:/# nuke\r\nbash: nuke: command not found\r\n```\r\n\r\nEverything works inside Windows.\r\n\r\n## Environment data\r\n```\r\nroot@f43f17fa565a:/# dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008530\r\n Commit:    822ae6d43a\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         debian.9-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.300-preview2-008530/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview2-26406-04\r\n  Commit:  6833f3026b\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-preview2-008530 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7632241162","Type":"IssuesEvent","CreatedAt":"2018-05-05T13:03:15","Actor":"dotnet-mc-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9207","RelatedDescription":"Opened issue \"SourceCode build failures in 'prodcon/cli/release/2.1.3xx/' - '20180505.01'\" (#9207) at dotnet/cli","RelatedBody":"There were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1661877\r\n  - **Agent:** DDVSOLINUXAGE009\r\n  - **Error log:** \u001b[?1h\u001b=\u001b[39;49m\u001b[36m    15>\u001b[39;49m\u001b[39;49m\u001b[31m/opt/code/build/test/RunTest.proj(0,0): error MSB6006: \"dotnet\" exited with code 1....\r\n\r\n@mmitche, @livarcocc\r\n"},{"Id":"7631811466","Type":"IssuesEvent","CreatedAt":"2018-05-05T07:19:24","Actor":"seanmars","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9206","RelatedDescription":"Opened issue \"Can generate the file without BOM?\" (#9206) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet new xxx\r\n\r\n## Expected  behavior\r\nGenerate the all file without BOM\r\n\r\n## Actual behavior\r\nGenerate the all file with BOM\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nProduct Information:\r\n Version:            2.1.104\r\n Commit SHA-1 hash:  48ec687460\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.104\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.6\r\n  Build    : 74b1c703813c8910df5b96f304b0f2b78cdf194d\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7619511676","Type":"PullRequestEvent","CreatedAt":"2018-05-02T21:29:23","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/722","RelatedDescription":"Merged pull request \"Fix LockFileCache when SDK and trimming task are using different NuGet dlls\" (#722) at dotnet/standard","RelatedBody":"Previously I copied the SDK caching code for caching the loaded lock file across task boundaries.\r\n\r\nThis became a problem when the SDK updated their NuGet version.\r\n\r\nWe didn't agree on the type that belonged in the cache.\r\n\r\nAvoid this by using a versioned prefix for the cache key.  Of course we will no longer share the read if we happen to be on the same version, but this is safer.\r\n\r\n/cc @nguerrera @dsplaisted "},{"Id":"7619284155","Type":"PullRequestEvent","CreatedAt":"2018-05-02T20:41:05","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/722","RelatedDescription":"Opened pull request \"Fix LockFileCache when SDK and trimming task are using different NuGet dlls\" (#722) at dotnet/standard","RelatedBody":"Previously I copied the SDK caching code for caching the loaded lock file across task boundaries.\r\n\r\nThis became a problem when the SDK updated their NuGet version.\r\n\r\nWe didn't agree on the type that belonged in the cache.\r\n\r\nAvoid this by using a versioned prefix for the cache key.  Of course we will no longer share the read if we happen to be on the same version, but this is safer.\r\n\r\n/cc @nguerrera @dsplaisted "},{"Id":"7613299458","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:42:40","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/721","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02801-01 (master)\" (#721) at dotnet/standard","RelatedBody":""},{"Id":"7612161291","Type":"IssuesEvent","CreatedAt":"2018-05-01T16:31:35","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/719","RelatedDescription":"Closed issue \"Different build output for classic projects: NuGet packages vs project reference. Is this on purpose?\" (#719) at dotnet/standard","RelatedBody":"Hi there,\r\n\r\nI have a WPF app (.NET Framework 4.6.1, classic .csproj) that references a .NET Standard 1.3 project that itself references another Multi-targeted project (.NET Standard 1.3 and .NET Framework 4.6.1).\r\n\r\nI've set `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` in the csproj file of the WPF app, but seems this is only important for NuGet packages?\r\n\r\nI would expect that the WPF app gets these dlls in the output directory:\r\n\r\n![image](https://user-images.githubusercontent.com/7116546/39395631-e0f9a786-4ae0-11e8-91f4-ecacadee72fc.png)\r\n\r\nBut it actually copies these dlls to the output directory:\r\n\r\n![image](https://user-images.githubusercontent.com/7116546/39395639-ee646884-4ae0-11e8-9ecb-78f0eff1afcd.png)\r\n\r\nIf the Storage Lib is referenced as a NuGet package, it works as expected:\r\n\r\n![image](https://user-images.githubusercontent.com/7116546/39395643-fe20684a-4ae0-11e8-8d8a-d2015b262057.png)\r\n\r\nIs this the expected behavior? When migrating the WPF app to SDK-style project format, it works also as expected as shown in the first picture.\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7633443360","Type":"PullRequestEvent","CreatedAt":"2018-05-06T05:14:57","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29519","RelatedDescription":null,"RelatedBody":"From [ad-hoc logging before](https://github.com/dotnet/corefx/issues/27662#issuecomment-375015547)\r\n\r\n* In CI test runs I see ext2 on most distros and XFS on Centos/RHEL\r\n* In official test runs, I see tmpfs on Fedora, ext2 on SLES, OpenSuse, Ubuntu, Debian, RHEL69, XFS on RHEL73/74, Centos 73/74, Overlay on Alpine 36\r\n\r\nThis surprises me because I would have expected file enumeration to have failed on XFS in CI.\r\n\r\nAdd proper logging to check."},{"Id":"7633443271","Type":"PullRequestEvent","CreatedAt":"2018-05-06T05:14:52","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/29519","RelatedDescription":"Closed pull request \"Log filesystem of tests and temp\" (#29519) at dotnet/corefx","RelatedBody":"From [ad-hoc logging before](https://github.com/dotnet/corefx/issues/27662#issuecomment-375015547)\r\n\r\n* In CI test runs I see ext2 on most distros and XFS on Centos/RHEL\r\n* In official test runs, I see tmpfs on Fedora, ext2 on SLES, OpenSuse, Ubuntu, Debian, RHEL69, XFS on RHEL73/74, Centos 73/74, Overlay on Alpine 36\r\n\r\nThis surprises me because I would have expected file enumeration to have failed on XFS in CI.\r\n\r\nAdd proper logging to check."},{"Id":"7633312850","Type":"PullRequestEvent","CreatedAt":"2018-05-06T02:59:55","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29536","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#29536) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7632992727","Type":"IssuesEvent","CreatedAt":"2018-05-05T21:45:45","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/28545","RelatedDescription":"Closed issue \"Test failure: System.Net.Security.Tests.ServerAsyncAuthenticateTest/ServerAsyncAuthenticate_EachServerUnsupportedProtocol_Fail(protocol: Ssl3)\" (#28545) at dotnet/corefx","RelatedBody":"Opened on behalf of @Sunny-pu\n\nThe test `System.Net.Security.Tests.ServerAsyncAuthenticateTest/ServerAsyncAuthenticate_EachServerUnsupportedProtocol_Fail(protocol: Ssl3)` has failed.\n\nAssert.Throws() Failure\n    Expected: typeof(System.NotSupportedException)\n    Actual:   typeof(System.TimeoutException): Task timed out after 240000\n\n        Stack Trace:\n\n           at System.Threading.Tasks.TaskTimeoutExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\n       at System.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncSslHelper(SslProtocols clientSslProtocols, SslProtocols serverSslProtocols, Boolean expectedToFail) in /Users/buildagent/agent/_work/391/s/corefx/src/System.Net.Security/tests/FunctionalTests/ServerAsyncAuthenticateTest.cs:line 137\nBuild : Master - 20180328.01 (Core Tests)\nFailing configurations:\n- OSX.1012.Amd64-x64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20180328.01/workItem/System.Net.Security.Tests/analysis/xunit/System.Net.Security.Tests.ServerAsyncAuthenticateTest~2FServerAsyncAuthenticate_EachServerUnsupportedProtocol_Fail(protocol:%20Ssl3)"},{"Id":"7632991679","Type":"IssuesEvent","CreatedAt":"2018-05-05T21:45:05","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/28556","RelatedDescription":"Closed issue \"Test failure: System.Net.Security.Tests / ServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success\" (#28556) at dotnet/corefx","RelatedBody":"From https://github.com/dotnet/corefx/pull/28536\r\n\r\nOSX.1012.Amd64.Open-x64-Debug\r\nServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success\r\n\r\nhttps://mc.dot.net/#/user/dotnet-maestro-bot/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/ba6b4d98a37a5a76991d7f3a27320924081a7b24/workItem/System.Net.Security.Tests/analysis/xunit/System.Net.Security.Tests.ServerAsyncAuthenticateTest~2FServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success(serverProtocol:%20Tls11)\r\n```text\r\nUnhandled Exception of Type System.TimeoutException\r\nMessage :\r\nSystem.TimeoutException : Task timed out after 240000\r\nStack Trace :\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_false_prtest/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 23\r\n   at System.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncSslHelper(SslProtocols clientSslProtocols, SslProtocols serverSslProtocols, Boolean expectedToFail) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_false_prtest/src/System.Net.Security/tests/FunctionalTests/ServerAsyncAuthenticateTest.cs:line 134\r\n   at System.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_AllClientVsIndividualServerSupportedProtocols_Success(SslProtocols serverProtocol) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_false_prtest/src/System.Net.Security/tests/FunctionalTests/ServerAsyncAuthenticateTest.cs:line 95\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\ncc @davidsh "},{"Id":"7632988218","Type":"IssuesEvent","CreatedAt":"2018-05-05T21:42:13","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26344","RelatedDescription":"Closed issue \"Test failure: System.Net.Security.Tests.ServerAsyncAuthenticateTest / ServerAsyncAuthenticate_MismatchProtocols_Fails\" (#26344) at dotnet/corefx","RelatedBody":"The test: System.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_MismatchProtocols_Fails has failed.\r\n\r\nAssert.Throws() Failure\\n\r\nExpected: typeof(System.Security.Authentication.AuthenticationException)\\n\r\nActual: typeof(System.NullReferenceException): Object reference not set to an instance of an object.\r\n\r\n~~~\r\nSTACK TRACE:\r\nat System.Net.Security.SafeDeleteSslContext.Dispose(Boolean disposing) in /mnt/j/workspace/dotnet_corefx/master/ubuntu16.10_debug/src/Common/src/System/Net/Security/Unix/SafeDeleteSslContext.cs:line 65 at System.Net.Security.SecureChannel.Close() in /mnt/j/workspace/dotnet_corefx/master/ubuntu16.10_debug/src/System.Net.Security/src/System/Net/Security/SecureChannel.cs:line 182 at System.Net.Security.SslState.Close() in /mnt/j/workspace/dotnet_corefx/master/ubuntu16.10_debug/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 473 at System.Net.Security.SslStream.Dispose(Boolean disposing) in /mnt/j/workspace/dotnet_corefx/master/ubuntu16.10_debug/src/System.Net.Security/src/System/Net/Security/SslStream.cs:line 661 at System.IO.Stream.Close() in /root/coreclr/src/mscorlib/src/System/IO/Stream.cs:line 239 at System.Net.Security.Tests.ServerAsyncAuthenticateTest.<ServerAsyncSslHelper>d__11.MoveNext() in /mnt/j/workspace/dotnet_corefx/master/ubuntu16.10_debug/src/System.Net.Security/tests/FunctionalTests/ServerAsyncAuthenticateTest.cs:line 185 --- End of stack trace from previous location where exception was thrown ---\r\n~~~\r\nDetails:\r\nhttps://ci.dot.net/job/dotnet_corefx/job/master/job/ubuntu16.10_debug/4517/testReport/System.Net.Security.Tests/ServerAsyncAuthenticateTest/ServerAsyncAuthenticate_MismatchProtocols_Fails_serverProtocol__Tls__clientProtocol__Tls11__expectedException__typeof_System_Security_Authentication_AuthenticationException__/\r\n"},{"Id":"7632982919","Type":"IssuesEvent","CreatedAt":"2018-05-05T21:37:53","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/3832","RelatedDescription":"Closed issue \"Test: Add the Cipher Related tests to verify cipher Algorithms not present in the enum.\" (#3832) at dotnet/corefx","RelatedBody":"Add the Cipher Related tests to verify cipher Algorithms not present in the enum.\n"},{"Id":"7632789267","Type":"IssuesEvent","CreatedAt":"2018-05-05T19:14:15","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/5888","RelatedDescription":"Closed issue \"WebUtility.UrlDecode to take StringBuilder\" (#5888) at dotnet/corefx","RelatedBody":"`WebUtility.UrlDecode` could take a string builder; `UrlDecoder` could be a struct and use `System.Buffers` for its arrays for reduced allocations.\n"},{"Id":"7632783873","Type":"IssuesEvent","CreatedAt":"2018-05-05T19:10:13","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29210","RelatedDescription":"Closed issue \"How to trace System.Net ?\" (#29210) at dotnet/corefx","RelatedBody":"I am following the similar steps of [Network Tracing in .NET Framework](https://docs.microsoft.com/en-us/dotnet/framework/network-programming/network-tracing) for CoreClr web app.\r\n\r\nHowever, I don't see the `network.log` getting generated.\r\nWhen I do the same steps in .Net Framework web app, it does generate the log file.\r\n\r\nSample coreclr web app with config file : [TraceSystemNetCoreClrNotWorking.zip](https://github.com/dotnet/corefx/files/1926810/TraceSystemNetCoreClrNotWorking.zip)\r\nSample .Net Framework project which is working : [TraceSystemNetNetFrameworkWorking.zip](https://github.com/dotnet/corefx/files/1926818/TraceSystemNetNetFrameworkWorking.zip)\r\n\r\nNote : Change the absolute path in `WebApplication1.web.config` while trying above app locally.\r\n\r\nI need this so that i can debug the network connection failures in production.\r\n\r\n"},{"Id":"7632746974","Type":"IssuesEvent","CreatedAt":"2018-05-05T18:43:12","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29474","RelatedDescription":"Closed issue \"StartsWith/EndsWith not giving expected results on Linux\" (#29474) at dotnet/corefx","RelatedBody":"Both of these are passing on Windows but failing on Linux (Ubuntu 16.04 over WSL). Also fails if I use the invariant comparison.\r\n```C#\r\nDebug.Assert(\"\\r\\n\".EndsWith(\"\\n\"));\r\nDebug.Assert(\"\\r\\n\".StartsWith(\"\\r\"));\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7633447098","Type":"PullRequestEvent","CreatedAt":"2018-05-06T05:18:44","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26660","RelatedDescription":"Opened pull request \"Set nullability of foreach iteration variable\" (#26660) at dotnet/roslyn","RelatedBody":"Fixes #26631."},{"Id":"7633070837","Type":"PullRequestEvent","CreatedAt":"2018-05-05T22:52:31","Actor":"svick","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26659","RelatedDescription":"Opened pull request \" Fixed exception message in GetSemanticModel\" (#26659) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/26658.\r\n\r\nFor example, for this code:\r\n\r\n```c#\r\nvar tree1 = SyntaxFactory.ParseSyntaxTree(\"\");\r\nvar tree2 = SyntaxFactory.ParseSyntaxTree(@\"class C\r\n{\r\nvoid M() {}\r\n}\", path: \"C.cs\");\r\n\r\nvar compilation = CSharpCompilation.Create(null).AddSyntaxTrees(tree1);\r\n\r\ncompilation.GetSemanticModel(tree2);\r\n```\r\n\r\nthe exception changes from:\r\n\r\n```\r\nSystem.ArgumentException : SyntaxTree 'class C\r\n{\r\n    void M() {}\r\n}' not found to remove\r\nParameter name: syntaxTree\r\n```\r\n\r\nto:\r\n\r\n```\r\nSystem.ArgumentException : SyntaxTree 'C.cs' not found\r\nParameter name: syntaxTree\r\n```\r\n\r\nQuestions:\r\n\r\n1. Is this the best way to display a `SyntaxTree` in an exception message?\r\n2. I have also changed the name of the `SyntaxTreeNotFoundTo` resource and copied translations from the old resource to the new one (which also removed BOM from the translation files). Is that okay?"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7633372622","Type":"PullRequestEvent","CreatedAt":"2018-05-06T04:01:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5775","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5775) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7633314183","Type":"PullRequestEvent","CreatedAt":"2018-05-06T03:01:00","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5775","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5775) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7632970566","Type":"PullRequestEvent","CreatedAt":"2018-05-05T21:28:24","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5767","RelatedDescription":"Merged pull request \"Enable resolving of .netmodule references\" (#5767) at dotnet/corert","RelatedBody":"This PR addresses issue https://github.com/dotnet/corert/issues/5766\r\n\r\n`HandleKind.ModuleReference` was not handled until now and resulted in a `BadImageFormatException`.\r\n\r\nThe newly added method `ResolveModuleReference` now takes care of this scenario.\r\n\r\nMost code could be shared with `ResolveAssemblyReference` but this required to use a plain string instead of an `AssemblyName` object in a couple of places.\r\n"},{"Id":"7629179608","Type":"PullRequestEvent","CreatedAt":"2018-05-04T15:15:25","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5774","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5774) at dotnet/corert","RelatedBody":""},{"Id":"7629174852","Type":"PullRequestEvent","CreatedAt":"2018-05-04T15:14:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5774","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5774) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7633367126","Type":"IssuesEvent","CreatedAt":"2018-05-06T03:55:44","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1100","RelatedDescription":"Closed issue \"PP file output is not generated during the build\" (#1100) at dotnet/sdk","RelatedBody":"PP file output is not being generated during the build.\r\n\r\n### Steps\r\n1. dotnet new\r\n1. dotnet add package contentfilesexample -v 1.0.2\r\n1. dotnet restore\r\n1. Add to Program.cs ``Console.WriteLine(ExampleReader.GetDataText());``\r\n1. dotnet build\r\n\r\n### Expected\r\nExampleReader will be in the current namespace from the pp file.\r\n\r\n### Actual\r\nExampleReader does not exist\r\n\r\nOriginally reported here https://github.com/NuGet/Home/issues/4803 //cc @damianh\r\n\r\nFrom @natidea \r\n\r\nI took a look at the pp file transformation issue and found a couple of things:\r\n- For the [ContentFilesExample](https://www.nuget.org/packages/ContentFilesExample/) package, I don't see pp files listed as dependencies in the assets file. They occur in the \"libraries\" but we are only processing content from the active TFM here: [Microsoft.PackageDependencyResolution.targets#L213](https://github.com/natidea/sdk/blob/0e64439c0660590ef93b1d86a6811a056b791bd8/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.PackageDependencyResolution.targets#L213)\r\n- For the [LiteGuard](https://github.com/adamralph/liteguard) package, I do see the pp files in the dependencies, but they were not being processed because `CopyLocalLockFileAssemblies`=false here: [Microsoft.PackageDependencyResolution.targets#L414](https://github.com/natidea/sdk/blob/0e64439c0660590ef93b1d86a6811a056b791bd8/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.PackageDependencyResolution.targets#L414)\r\nI was able to fix this by setting the property in my project file:\r\n```xml\r\n    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\r\n```\r\nNow I can use the `Guard`. \r\n\r\nSo somewhere along the way, some concepts may have been crossed. We default `CopyLocalLockFileAssemblies` to [true](https://github.com/natidea/sdk/blob/0e64439c0660590ef93b1d86a6811a056b791bd8/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.PackageDependencyResolution.targets#L38) in that target file, but it gets set to false in [Microsoft.NET.Sdk.BeforeCommon.targets#L57](https://github.com/natidea/sdk/blob/0e64439c0660590ef93b1d86a6811a056b791bd8/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.Sdk.BeforeCommon.targets#L57). Perhaps the real issue is that the produce content assets task is tied to `ResolveLockFileCopyLocalProjectDeps` and should instead be triggered in some other way.\r\n"},{"Id":"7630909485","Type":"PullRequestEvent","CreatedAt":"2018-05-04T21:41:37","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2224","RelatedDescription":"Opened pull request \"Merge release/2.1.4xx to master\" (#2224) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7630837048","Type":"PullRequestEvent","CreatedAt":"2018-05-04T21:21:34","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/2191","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.8.0-preview1.5158 into sdk\" (#2191) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.8.0-preview1.5158 into sdk release/2.1.3xx branch"},{"Id":"7630835029","Type":"PullRequestEvent","CreatedAt":"2018-05-04T21:21:01","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/2220","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.8.0-preview1.5158 into sdk\" (#2220) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.8.0-preview1.5158 into sdk release/2.1.4xx branch"},{"Id":"7630653811","Type":"IssuesEvent","CreatedAt":"2018-05-04T20:36:31","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1502","RelatedDescription":"Closed issue \"Conflict resolution from desktop MSBuild fails to get assembly identity from cross-gen'ed linux binaries\" (#1502) at dotnet/sdk","RelatedBody":"1. Crete a new console project.\r\n2. Modify the contents to the following.\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <RuntimeIdentifier>centos.7-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Threading\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n3. dotnet restore\r\n4. dotnet publish --> works correctly\r\n5. msbuild /t:publish --> app will fail to start with a refdef mismatch for System.Threading.  \r\n\r\nThis is because the System.Threading.dll conflict isn't being resolved.  If you examine the log you'll see\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\runtime.linux-x64.microsoft.netcore.app\\2.0.0\\runtimes\\linux-x64\\lib\\netcoreapp2.0\\System.Threading.dll' and 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\system.threading\\4.3.0\\lib\\netstandard1.3\\System.Threading.dll'.  Could not determine a winner because 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\runtime.linux-x64.microsoft.netcore.app\\2.0.0\\runtimes\\linux-x64\\lib\\netcoreapp2.0\\System.Threading.dll' is not an assembly.\r\n```\r\n\r\nCompare this to the following in dotnet publish:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\runtime.linux-x64.microsoft.netcore.app\\2.0.0\\runtimes\\linux-x64\\lib\\netcoreapp2.0\\System.Threading.dll' and 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\system.threading\\4.0.11\\lib\\netstandard1.3\\System.Threading.dll'.  Choosing 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\runtime.linux-x64.microsoft.netcore.app\\2.0.0\\runtimes\\linux-x64\\lib\\netcoreapp2.0\\System.Threading.dll' because AssemblyVersion '4.1.0.0' is greater than '4.0.11.0'.\r\n```\r\n\r\nIt would seem that the [desktop implementation](https://github.com/dotnet/sdk/blob/a34f9e69bad5c38a897e7102a16a242a82fa278d/src/Tasks/Common/src/FileUtilities.net45.cs#L13-L22) for getting the assembly version can't handle the cross-gened assemblies, however the [core implementation ](https://github.com/dotnet/sdk/blob/a34f9e69bad5c38a897e7102a16a242a82fa278d/src/Tasks/Common/src/FileUtilities.netstandard.cs#L17-L40) can.\r\n\r\n"},{"Id":"7630653075","Type":"PullRequestEvent","CreatedAt":"2018-05-04T20:36:20","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2185","RelatedDescription":"Merged pull request \"Use MetadataReader to get assembly versions for conflict resolution\" (#2185) at dotnet/sdk","RelatedBody":"Use MetadataReader version of GetAssemblyVersion for:\r\n\r\n- netcoreapp version of Microsoft.NET.Build.Extensions.Tasks\r\n- All versions of Microsoft.NET.Build.Tasks\r\n\r\nThis doesn't use it for the .NET Framework version of Microsoft.NET.Build.Extensions in order to avoid loading the System.Reflection.Metadata assembly in vanilla .NET Framework build scenarios.\r\n\r\nThis does use MetadataReader for the SDK tasks in order to correctly read the assembly versions of cross-gened assemblies.\r\n\r\nFixes #1502"},{"Id":"7630649372","Type":"IssuesEvent","CreatedAt":"2018-05-04T20:35:24","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1538","RelatedDescription":"Closed issue \"ResolvePackageFileConflicts fails when paths have New Line characters\" (#1538) at dotnet/sdk","RelatedBody":"NewLine characters in HintPaths are causing an exception in ResolvePackageFileConflicts for projects that previously worked. E.g. \r\n\r\n```xml\r\n<Reference Include=\"System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\">\r\n      <HintPath>\r\n      ..\\..\\packages\\System.Collections.Immutable.1.3.1\\lib\\portable-net45+win8+wp8+wpa81\\System.Collections.Immutable.dll\r\n      </HintPath>\r\n</Reference>\r\n```\r\n\r\nStackTrace:\r\n```\r\nThe \"ResolvePackageFileConflicts\" task failed unexpectedly.\r\nSystem.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.GetFileName(String path)\r\n   at Microsoft.NET.Build.Tasks.ItemUtilities.GetTargetPath(ITaskItem item)\r\n   at Microsoft.NET.Build.Tasks.ItemUtilities.GetReferenceTargetPath(ITaskItem item)\r\n   at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.<>c.<ExecuteCore>b__35_1(ConflictItem ci)\r\n   at Microsoft.NET.Build.Tasks.ConflictResolution.ConflictResolver`1.ResolveConflicts(IEnumerable`1 conflictItems, Func`2 getItemKey, Action`1 foundConflict, Boolean commitWinner, Action`1 unresolvedConflict)\r\n   at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tServices (Services\\Services)\t\t\t\r\n```\r\n\r\nReports:\r\n- [VSFeedback](https://developercommunity.visualstudio.com/content/problem/99813/illegal-characters-in-path.html) | [484081](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/484081)\r\n- StackOverflow: https://stackoverflow.com/questions/45796041/visual-studio-illegal-characters-in-path\r\n- [VSFeedback](https://developercommunity.visualstudio.com/content/problem/98225/the-resolvepackagefileconflicts-task-failed-unexpe.html) | [482572](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/482572)\r\n\r\n/cc @dsplaisted "},{"Id":"7630648193","Type":"PullRequestEvent","CreatedAt":"2018-05-04T20:35:09","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2196","RelatedDescription":"Merged pull request \"Add trim for path in Item\" (#2196) at dotnet/sdk","RelatedBody":"**Customer scenario**\r\n\r\nIf there is an extra new line in hint path. The fullmsbuild build will fail with error \"Illegal characters in path\". Fix it by adding trim() when process the path.\r\n\r\nFor example:\r\n```xml\r\n<Reference Include=\"System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\">\r\n      <HintPath>\r\n      ..\\..\\packages\\System.Collections.Immutable.1.3.1\\lib\\portable-net45+win8+wp8+wpa81\\System.Collections.Immutable.dll\r\n      </HintPath>\r\n</Reference>\r\n```\r\n\r\n**Bugs this fixes**\r\n\r\nhttps://github.com/dotnet/sdk/issues/1538\r\n\r\n**Workarounds, if any**\r\n\r\nUse non new line instead\r\n```xml\r\n<HintPath>..\\..\\packages\\System.Collections.Immutable.1.3.1\\lib\\portable-net45+win8+wp8+wpa81\\System.Collections.Immutable.dll</HintPath>\r\n```\r\n\r\n**Risk**\r\n\r\nlow.\r\n\r\n**Performance impact**\r\n\r\nlow\r\n\r\n**Root cause analysis**\r\n\r\nNot enough regression test coverage.\r\n\r\n**How was the bug found?**\r\n\r\nIssue filed from Github\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"991311154747199488","CreatedAt":"2018-05-01T13:39:31+00:00","UserScreenname":"dotnet","Text":"Do you have questions about async and await in C#?  Join @csharpfritz and @billwagner at 10a ET / 7a PT / 14:00 UTC… https://t.co/Sdn4F5XeZ2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":20,"RawContent":null},{"Id":"991060228220178432","CreatedAt":"2018-04-30T21:02:26+00:00","UserScreenname":"dotnet","Text":"Announcing the .NET Framework 4.7.2 https://t.co/Tx658XoEZG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":554,"FavoriteCount":410,"RawContent":null},{"Id":"989532387775205376","CreatedAt":"2018-04-26T15:51:20+00:00","UserScreenname":"dotnet","Text":"Get the Azure Quick Start Guide for .NET Developers https://t.co/ALECzXryjk","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":49,"FavoriteCount":22,"RawContent":null},{"Id":"987375741204508673","CreatedAt":"2018-04-20T17:01:35+00:00","UserScreenname":"dotnet","Text":"Help us plan the future of .NET! https://t.co/R0QoZVvXx4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":126,"FavoriteCount":95,"RawContent":null},{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":153,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":62,"FavoriteCount":44,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":68,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2018-05-06T05:30:22.4796784Z","RunDurationInMilliseconds":7497}