{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Xamarin.Forms 2.5.0, Live Player, and What’s New in Visual Studio for Mac","PublishedOn":"2017-12-01T21:48:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover the latest news for mobile developers from Microsoft Connect(); 2017, including Xamarin.Forms 2.5.0 and awesome updates to the Live...","Href":"https://blog.xamarin.com/podcast-xamarin-forms-2-5-0-live-player-whats-new-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in December","PublishedOn":"2017-12-01T18:16:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET developer community is vastly expanding, so there&#8217;s more opportunity than ever to network with local user groups and learn about new and exciting releases, tooling, and updates to...","Href":"https://blog.xamarin.com/xamarin-developer-events-december/","RawContent":null},{"Title":"Supercharge Your Xamarin.Mac Application Startup Time","PublishedOn":"2017-11-30T20:31:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Startup performance matters, as it&#8217;s the first feature users come across when using your application. In this post, we&#8217;ll walk through some recent samples that improve Xamarin.Mac startup...","Href":"https://blog.xamarin.com/supercharge-xamarin-mac-application-startup-time/","RawContent":null},{"Title":"Upcoming Webinars | Get the Most Out of Android 8 Oreo and iOS 11","PublishedOn":"2017-11-29T20:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us on December 13 and December 14 for our newest webinar series, where we’ll show you how to make your Xamarin apps even better by adding the latest and greatest Android and iOS updates. Visual...","Href":"https://blog.xamarin.com/upcoming-webinars-get-the-most-out-of-android-8-oreo-and-ios-11-for-xamarin-developers/","RawContent":null},{"Title":"Schedule Meetings with Xamarin.Forms and the Microsoft Graph API","PublishedOn":"2017-11-28T18:07:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Meetings can be productive, provided they&#8217;re planned and scheduled properly. There are numerous tools available to schedule meetings, with Calendar for Outlook being one of the best tools in...","Href":"https://blog.xamarin.com/lets-schedule-meeting/","RawContent":null},{"Title":"Replacing Services With Jobs in Android Oreo 8.0","PublishedOn":"2017-11-27T21:04:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Before Android 8.0, Android apps would start a service that ran almost indefinitely, even when the app was in the background. This service can be handy for the app, and easy for the developer to...","Href":"https://blog.xamarin.com/replacing-services-jobs-android-oreo-8-0/","RawContent":null},{"Title":"Microsoft Connect 2017(); Xamarin Video Round-Up","PublishedOn":"2017-11-21T21:06:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); is always an exciting day for developers, with three days of exciting announcements, demos, and technical sessions. From the announcement of the General Availability of Visual...","Href":"https://blog.xamarin.com/microsoft-connect-2017-xamarin-video-round/","RawContent":null},{"Title":"Hello NuGet! a New Home for Xamarin Components","PublishedOn":"2017-11-20T22:19:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In 2013, we launched the Xamarin Component Store as a central location to find a rich ecosystem of UI controls and plugins for Xamarin developers targeting iOS and Android. Since then, the broader...","Href":"https://blog.xamarin.com/hello-nuget-new-home-xamarin-components/","RawContent":null},{"Title":"Xamarin Docs Now Available in Japanese and German","PublishedOn":"2017-11-20T18:12:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"日本語 &#124; Deutsch Earlier this year we published Spanish, Chinese, and Portuguese translations of our most useful documentation. I&#8217;m excited to announce that we&#8217;ve now added Japanese and...","Href":"https://blog.xamarin.com/xamarin-docs-now-available-japanese-german/","RawContent":null},{"Title":"Podcast: Connect(); 2017 Xamarin and App Center Recap","PublishedOn":"2017-11-17T22:08:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, I am joined by App Center program manager James White. We sit down and cover all of the amazing announcements from this years Connect(); 2017 event. Sit back,...","Href":"https://blog.xamarin.com/podcast-connect-2017-xamarin-app-center-recap/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6932520299","Type":"PullRequestEvent","CreatedAt":"2017-12-01T22:09:23","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1060","RelatedDescription":"Opened pull request \"Fix build on Debian\" (#1060) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=60901\r\n\r\nThe root cause of the bug is the condition in build-tools/libzip/libzip.props\r\nwhich checks whether to build libzip or not and, currently, does NOT build the\r\nlibrary only on Ubuntu machines. The reason for this was that, so far, none of\r\nus tested the build on Debian and it wasn't certain what, if any, changes would\r\nbe required (despite Ubuntu being based on Debian) in order for the build to\r\nwork on Debian proper and, possibly, other related distros.\r\n\r\nThis commit introduces a new msbuild property, `$(HostOsFlavor)` which can be\r\nused to cluster related distros/operating systems into groups with the purpose\r\nof sharing certain behaviors or operations - like building, or not, of libzip.\r\n\r\nThis commit also introduces a `make prepare` script to install dependencies on\r\nDebian (tested on Debian 9.1.2 64-bit) as well as rearranges the order in which\r\nwe check for distro-specific prepration script. We now first seek for script\r\nspecific to the current distro version/release and only then for the \"generic\"\r\nscript for this distribution.\r\n\r\nWith the changes in place `make prepare && make` work start-to-finish on Debian."},{"Id":"6931869509","Type":"PullRequestEvent","CreatedAt":"2017-12-01T19:26:36","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1059","RelatedDescription":"Opened pull request \"[java.interop] improve JavaCast() for interfaces\" (#1059) at xamarin/xamarin-android","RelatedBody":"Currently, interfaces generate `Invoker` classes such as:\r\n```\r\n// src/Mono.Android/obj/Debug/android-26/mcw/Java.Lang.IAppendable.cs\r\npartial class IAppendableInvoker {\r\n        public static IAppendable GetObject (IntPtr handle, JniHandleOwnership transfer)\r\n        {\r\n            return global::Java.Lang.Object.GetObject<IAppendable>(handle, transfer);\r\n        }\r\n}\r\n```\r\n\r\n`JavaCast` was previously looking up these `Invoker` types and calling\r\nthe `GetObject` method via reflection. We can simplify this by just calling\r\n`Java.Lang.Object.GetObject()` directly—bypassing all the reflection.\r\n\r\nOne day we might be able to drop the generated `Invoker` method from\r\ngenerator, but compiled bindings would break on older versions of\r\nXamarin.Android. It might be *instead* worthwhile look into allowing\r\nthe linker to strip these methods that are now not used anymore."},{"Id":"6930391828","Type":"PullRequestEvent","CreatedAt":"2017-12-01T14:09:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1057","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Timeout when calling adb or a process.\" (#1057) at xamarin/xamarin-android","RelatedBody":"We shouldn't wait forever for the process to finish. We should\r\ntimeout after a short period to make sure we don't hang on the\r\nCI system."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6934748244","Type":"PullRequestEvent","CreatedAt":"2017-12-02T22:44:31","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1315","RelatedDescription":"Opened pull request \"Xamarin Forms WPF Backend - Platform Project\" (#1315) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for WPF backend on Xamarin.Forms.\r\n\r\nNOTE: This PR only includes the Xamarin.Forms.Platform.WPF project. Other PRs will include maps, nuspec, ControlGallery...\r\n\r\n### API Changes (Xamarin.Forms.Core) ###\r\n\r\nAdded:\r\n\r\npublic const string Device.WPF = \"WPF\";\r\n\r\n### Behavioral Changes ###\r\n\r\nYou can create applications for **Windows 7/8/10** with Xamarin.Forms using the WPF backend.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6927210242","Type":"PullRequestEvent","CreatedAt":"2017-11-30T21:57:56","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1314","RelatedDescription":"Opened pull request \"Update sln; Revert Android SDK version\" (#1314) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNo code changes.\r\n\r\n### Bugs Fixed ###\r\n\r\nNo bugs fixed.\r\n\r\n### API Changes ###\r\n\r\nNone.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6927028878","Type":"PullRequestEvent","CreatedAt":"2017-11-30T21:18:01","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1313","RelatedDescription":"Opened pull request \"Establish CI Baseline\" (#1313) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDescribe your changes here.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6926654127","Type":"PullRequestEvent","CreatedAt":"2017-11-30T19:56:04","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1312","RelatedDescription":"Opened pull request \"Include .pdb in Maps nuget; Touchup create-nuget.bat\" (#1312) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNo code changes. \r\n\r\nIncluding debug sysmbols in Maps nuget (just like Core nuget) to aid in debugging maps bugs.\r\n\r\nRename `create-nuget.bat` to `.create-nuget.bat` and add env var to find nuget.exe as that's been stripped from the repository. \r\n\r\nGit ignore nuget packages and the doc xml generated in order to create nuget packages.\r\n\r\n### Bugs Fixed ###\r\n\r\nWork done in response to bug https://bugzilla.xamarin.com/show_bug.cgi?id=60140.\r\n\r\n### API Changes ###\r\n\r\nNone.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone."},{"Id":"6926601168","Type":"PullRequestEvent","CreatedAt":"2017-11-30T19:44:42","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1311","RelatedDescription":"Opened pull request \"[iOS] Device.OpenUriAction can open tel URIs with spaces again\" (#1311) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#734 enabled users to open URLs on iOS while properly passing the query strings.\r\n\r\n`NSUrl` is not happy when `tel` paths have spaces, however, so it crashes when attempting to parse it. \r\n\r\nSince `tel` paths won't have query strings, using the `AbsoluteUri` to let it encode properly.\r\n\r\nNote: this is #1296 pointed at 15-5.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=60691\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6926506246","Type":"PullRequestEvent","CreatedAt":"2017-11-30T19:24:42","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1030","RelatedDescription":"Merged pull request \"[iOS] Grouped ListViews will use always HeaderView instead of TitleForHeader\" (#1030) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`ListView` previously used `TitleForHeader` when using a `GroupDisplayBinding`. The downside to that is that it will not fire any event when it disappears. Now using a `HeaderView` in all cases so we can use `HeaderViewDisplayingEnded` to fire the `Disappearing` event. Also firing the `Appearing` event when the `HeaderView` is displayed.\r\n\r\n### Bugs Fixed ###\r\n\r\n- [Bug 45125 - ListView lacks a way to to get information about visible elements (such as FirstVisibleItem) to restore visual positions of elements](https://bugzilla.xamarin.com/show_bug.cgi?id=45125)\r\n\r\n### API Changes ###\r\n\r\nNone; API changes requested in the Bugzilla ticket will need to be addressed at a later date.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone beyond that described above.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6926344287","Type":"PullRequestEvent","CreatedAt":"2017-11-30T18:50:44","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1193","RelatedDescription":"Closed pull request \"UITest for ListView caching\" (#1193) at xamarin/Xamarin.Forms","RelatedBody":"UITest only"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6931635099","Type":"PullRequestEvent","CreatedAt":"2017-12-01T18:31:47","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3076","RelatedDescription":"Merged pull request \"[xtro] Fix broken build with Mono.Cecil 0.9.6.4.\" (#3076) at xamarin/xamarin-macios","RelatedBody":"Facts:\n\n* xtro-sharpie references Mono.Cecil 0.9.6 from a nuget.\n* If a local Mono.Cecil.dll can't be found (according to the HintPath in the\n  csproj, which points to the nuget), then msbuild will look in the system\n  Mono.\n* Mono 5.8 ships Mono.Cecil 0.10.\n* Mono.Cecil 0.10 is not source compatible with 0.9.6 (there's a small issue\n  with interfaces).\n* xtro-sharpie's source code works with v0.10.\n\nThis all means that xtro-sharpie will build fine as long as the 0.9.6 nuget\nhas *not* been restored. This can manifest itself confusingly (\"msbuild xtro-\nsharpie.sln\" works fine from the command line, open the solution in VSfM and\nit doesn't build anymore, not even from the command line, because VSfM\nautomatically restored nugets in the background).\n\nUpdate the source code to work with Mono.Cecil 0.9.6 because there's no 0.10\nnuget yet (yet keeping the code for v0.10 clearly marked as such for future\nupdates to v0.10).\n\nAlso bump from 0.9.6.1 to 0.9.6.4 since that's the latest available."},{"Id":"6931469776","Type":"PullRequestEvent","CreatedAt":"2017-12-01T17:51:53","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3079","RelatedDescription":"Opened pull request \"[tests] Add tests to verify that out-of-date symbols don't cause problems.\" (#3079) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6931368982","Type":"PullRequestEvent","CreatedAt":"2017-12-01T17:28:06","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3078","RelatedDescription":"Opened pull request \"[linker] Refactor and simplify code optimizations.\" (#3078) at xamarin/xamarin-macios","RelatedBody":"We had several types of code optimizations, where we'd determine a particular\nexpression is a constant, then remove the condition and the code for any dead\nbranches.\n\nUnfortunately each type of expression had its own logic to determine the\nsequence of code to remove, each slightly different depending on the actual\nconditional expression. This has led to bugs in the past, either when\nswitching between compilers (mcs/csc), or compilers have changed their emitted\ncode.\n\nSo implement a more generic version where each optimization just changes the\nspecific condition to a constant value, and then at the end we have a dead-\ncode-elimination pass that eliminates dead code based on those constant\nconditions.\n\nThis version is also a lot more defensive than the previous code, it will bail\nout without doing anything if it finds a code sequence it doesn't understand.\n\nThis also makes it easier to implement other similar code optimizations.\n\nSimple time measuring shows no slowdown in the linker, and the size\ndifference for monotouch-test is negligable at best (iPhone/Debug32):\n\n256 bytes more for the exectuable:\n\n    -rwxr-xr-x  1 rolf  staff  72890464 Dec  1 14:39 /Users/rolf/test/old/monotouchtest.app/monotouchtest\n    -rwxr-xr-x  1 rolf  staff  72890720 Dec  1 14:44 /Users/rolf/test/new/monotouchtest.app/monotouchtest\n\n3584 bytes less for Xamarin.iOS.dll:\n\n    -rw-r--r--  1 rolf  staff   2506240 Dec  1 14:39 /Users/rolf/test/old/monotouchtest.app/Xamarin.iOS.dll\n    -rw-r--r--  1 rolf  staff   2502656 Dec  1 14:44 /Users/rolf/test/new/monotouchtest.app/Xamarin.iOS.dll\n\nI don't know why the executable grew slightly, the IL diff for\nXamarin.iOS.dll shows nothing out of the ordinary:\nhttps://gist.github.com/rolfbjarne/33590ad651a21f9a9352ac9b97b9dc06"},{"Id":"6931326096","Type":"PullRequestEvent","CreatedAt":"2017-12-01T17:18:31","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3055","RelatedDescription":"Closed pull request \"[generator] CoreImage filters are never direct bindings.\" (#3055) at xamarin/xamarin-macios","RelatedBody":"CoreImage filter types are our own creation, and as such will never be direct bindings.\n\nThis means we must set the IsDirectBinding value to false manually, and we can\nalso remove the IsDirectBinding condition in the constructor, since it's\nredundant.\n\nAdditionally we can remove a condition in the introspection tests that\nexcluded the CoreImage filters from tests.\n\nGenerated diff: https://gist.github.com/rolfbjarne/88968a034b0cbfefb78651e831da6b5c"},{"Id":"6931175162","Type":"PullRequestEvent","CreatedAt":"2017-12-01T16:46:48","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3071","RelatedDescription":"Merged pull request \"[monotouch-test] Update permission checks.\" (#3071) at xamarin/xamarin-macios","RelatedBody":"Apparently iOS 11 shows system dialogs for more API, so sprinkle permission\r\nchecks in more places."},{"Id":"6930899856","Type":"PullRequestEvent","CreatedAt":"2017-12-01T15:52:26","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2779","RelatedDescription":"Merged pull request \"[MSBuild] Do not set CFBundleDevelopmentRegion if not present.\" (#2779) at xamarin/xamarin-macios","RelatedBody":"\r\n\r\nThis is a complicated fix. This is a regression introduced by Apple.\r\nCFLocaleCopyCurrent(), used in the iOS code, will return the value of\r\nthe application's CFBundleDevelopmentRegion Info.plist key if all of the\r\nfollowing conditions are true:\r\n\r\n* CFBundleDevelopmentRegion is present in the Info.plist\r\n* The CFBundleDevelopmentRegion language is in the list of preferred\r\nlanguages on the iOS device, but isn't the first one\r\n* There are no localized resources (i.e. no .lproj directory) in the app\r\nfor the first preferred locale\r\n\r\nThis differs from iOS 10 where the presence of the\r\nCFBundleDevelopmentRegion key had no effect.\r\n\r\nNote that if the CFBundleDevelopmentRegion key is not present at all,\r\nCFLocaleCopyCurrent() always returns the first preferred locale as it\r\ndid in iOS 10.\r\n\r\nWe are adding the key by default in the plist of the applications.\r\nShould this be done? The behaviour is the same as the one in Xcode. We\r\nshould probably disable this, and set it in the IDE as present with en\r\nas default to avoid confusions."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"937084968140001281","CreatedAt":"2017-12-02T22:24:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/1LrzR56fPj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":29,"RawContent":null},{"Id":"936715745370796033","CreatedAt":"2017-12-01T21:56:51+00:00","UserScreenname":"xamarinhq","Text":"Catch up with the @XamarinPodcast and learn about #XamarinForms 2.5.0, plus exciting updates to Live Player,… https://t.co/zBch3rb7K7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":16,"RawContent":null},{"Id":"936662898692313089","CreatedAt":"2017-12-01T18:26:52+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you (or online!) this December: https://t.co/O6L4GHyg4a https://t.co/wNIUbnJtoI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":5,"RawContent":null},{"Id":"936641572006957058","CreatedAt":"2017-12-01T17:02:07+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/DpaVdK5ZMf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"936334395631431685","CreatedAt":"2017-11-30T20:41:30+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your #Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/o6RntWMo4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"936280915675959296","CreatedAt":"2017-11-30T17:09:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to set up and configure an #Azure Notification Hub for your #Xamarin.iOS app: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":23,"RawContent":null},{"Id":"935969076786204672","CreatedAt":"2017-11-29T20:29:52+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinars on updating your #Xamarin apps to get the most out of iOS 11 and Android 8 O… https://t.co/RLOHI0RlUX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"935917018624217089","CreatedAt":"2017-11-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to provision a new iOS device and app in five minutes using #VS4Mac and the open source project fastlane: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"935600034816634880","CreatedAt":"2017-11-28T20:03:25+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":23,"RawContent":null},{"Id":"935552365058560001","CreatedAt":"2017-11-28T16:54:00+00:00","UserScreenname":"xamarinhq","Text":"5 ways to boost a #XamarinForms app's start up time: https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":37,"RawContent":null},{"Id":"935255661050585088","CreatedAt":"2017-11-27T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/TA7SMA9DLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":27,"RawContent":null},{"Id":"935193758232178688","CreatedAt":"2017-11-27T17:09:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/VW73seGwWt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":26,"RawContent":null},{"Id":"935006266874847232","CreatedAt":"2017-11-27T04:44:00+00:00","UserScreenname":"xamarinhq","Text":"Add local notifications to your Xamarin.Mac applications: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":18,"RawContent":null},{"Id":"934586249125548032","CreatedAt":"2017-11-26T00:55:00+00:00","UserScreenname":"xamarinhq","Text":"Native Android Facebook Authentication with #Azure #App Service https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":38,"RawContent":null},{"Id":"934103568986066944","CreatedAt":"2017-11-24T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with ActivityTask, a helper for async/await on Android: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":20,"RawContent":null},{"Id":"933741185478332416","CreatedAt":"2017-11-23T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to add augmented reality to your #Xamarin apps with #ARKit in #iOS11:… https://t.co/HII0XqDMRj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":31,"RawContent":null},{"Id":"933432266495275008","CreatedAt":"2017-11-22T20:29:29+00:00","UserScreenname":"xamarinhq","Text":"Details on moving from Xamarin components to #NuGet as we sunset the #Xamarin Component Store: https://t.co/tYuAmSeKee","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":96,"FavoriteCount":59,"RawContent":null},{"Id":"933379799699116033","CreatedAt":"2017-11-22T17:01:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Program Manager @davidortinau shares his tips for beating the learning curve: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"933081334129614849","CreatedAt":"2017-11-21T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"There was SO MUCH awesome content at #MSFTConnect last week! Whether you just couldn't get to it all, want to share… https://t.co/FJk5D8lEjH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":48,"RawContent":null},{"Id":"933017919218470912","CreatedAt":"2017-11-21T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/gIjmTghxVn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2017-12-03T05:30:39.3139812Z","RunDurationInMilliseconds":3938}