{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7253244674","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:55:38","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16417","RelatedDescription":"Opened pull request \"reenable readytorun\\tests\\mainv* for arm jitstress\" (#16417) at dotnet/coreclr","RelatedBody":"They were fixed in #16267."},{"Id":"7253235802","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:51:17","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16172","RelatedDescription":"Closed pull request \"[wip][do not merge]dummy change, test arm r2r\" (#16172) at dotnet/coreclr","RelatedBody":""},{"Id":"7253235598","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:51:10","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16171","RelatedDescription":"Closed pull request \"[WIP][R2R][RyuJit][ARM] Fix R2R relative indirection for arm.\" (#16171) at dotnet/coreclr","RelatedBody":""},{"Id":"7253219568","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:43:02","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16415","RelatedDescription":"Merged pull request \"Fix coreOverlayDir in Unix test instructions documentation\" (#16415) at dotnet/coreclr","RelatedBody":"\"Linux.x64.Debug\" was missing from the default directory that's created for Tests/Core_Root"},{"Id":"7253098591","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:44:48","Actor":"mmitche","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16412","RelatedDescription":"Merged pull request \"Set helix source correctly for prodcon build\" (#16412) at dotnet/coreclr","RelatedBody":""},{"Id":"7253096209","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:43:44","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16379","RelatedDescription":"Merged pull request \"Add ReadOnlySpan string-like ToLower/ToUpper API with globalization support\" (#16379) at dotnet/coreclr","RelatedBody":"Part of https://github.com/dotnet/corefx/issues/21395#issuecomment-359906138\r\n\r\n- ToLower\r\n- ToLowerInvariant\r\n- ToUpper\r\n- ToUpperInvariant\r\n\r\n**TODO:**\r\n- ~Add the allocating counterpart for slow span in corefx and add tests there.~\r\n\r\nRelated corefx PR: https://github.com/dotnet/corefx/pull/27193\r\n\r\ncc @jkotas, @stephentoub, @KrzysztofCwalina, @tarekgh, @JeremyKuhne "},{"Id":"7252975502","Type":"IssuesEvent","CreatedAt":"2018-02-16T01:53:26","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16400","RelatedDescription":"Closed issue \"error: no profile data available for file \"stacklevelsetter.cpp\"\" (#16400) at dotnet/coreclr","RelatedBody":"Opened on behalf of @jcagme\n\nWarnings: 5\nStatus Message: failed\n\nBuild : Master - 20180215.01 (Product Build)\nFailing configurations:\n- Linux\n  - Release-x64\n[Mission Control Build Info](https://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/build~2Fproduct~2F/build/20180215.01/workItem/Orchestration/analysis/external/Link)\n"},{"Id":"7252931964","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:36:27","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16416","RelatedDescription":"Opened pull request \"[RyuJit] delete liveness workarond for setFramePointerRequired.\" (#16416) at dotnet/coreclr","RelatedBody":"This RyuJit workaround (added in #15192) became unnecessary after #15597.\r\n\r\nPTAL @dotnet/jit-contrib "},{"Id":"7252928882","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:35:13","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16415","RelatedDescription":"Opened pull request \"Fix coreOverlayDir in Unix test instructions\" (#16415) at dotnet/coreclr","RelatedBody":""},{"Id":"7252910401","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:28:31","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16414","RelatedDescription":"Opened pull request \"Add CI perf repro script\" (#16414) at dotnet/coreclr","RelatedBody":"There wasn't any good way to reproduce what happens in CI for perf jobs because groovy can't be directly run. As a first step to solving this I created a python script that reproduces the perf leg I needed."},{"Id":"7252895448","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:22:59","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16413","RelatedDescription":"Opened pull request \"Fix for assert(sideEffList) in clr\\src\\jit\\optcse.cpp, Line: 2151\" (#16413) at dotnet/coreclr","RelatedBody":"If we return WALK_ABORT this assert will fire when the side effect list 'keepList' is empty.\r\nWith this fix we don't return WALK_ABORT when the keepList is empty, instead we place the CSE def\r\ninto the keepList"},{"Id":"7252874011","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:15:00","Actor":"mmitche","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16412","RelatedDescription":"Opened pull request \"Set helix source correctly for prodcon build\" (#16412) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7252843415","Type":"IssuesEvent","CreatedAt":"2018-02-16T01:04:02","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8478","RelatedDescription":"Closed issue \"Build won't finish\" (#8478) at dotnet/cli","RelatedBody":"@MeikelLP commented on [Tue Jan 23 2018](https://github.com/dotnet/buildtools/issues/1874)\n\nMy project wont build at all using `dotnet build`. Using the `-v diag` switch I can see that the problem seems to be the \"Copy\" Task. And after canceling it via Ctrl+C messages keep appearing in my terminal:\r\n\r\n```\r\n22:08:00.854  2:10>/usr/local/share/dotnet/sdk/2.1.4/Microsoft.Common.CurrentVersion.targets(4106,5): warning MSB4220: Waiting for the currently executing task \"Copy\" to cancel. [/Volumes/Speicher/projekte/Gitlab/MeikelLP/DataVisualizer/Core/Core.csproj]\r\n/usr/local/share/dotnet/sdk/2.1.4/Microsoft.Common.CurrentVersion.targets(4106,5): warning MSB4220: Waiting for the currently executing task \"Copy\" to cancel. [/Volumes/Speicher/projekte/Gitlab/MeikelLP/DataVisualizer/Core/Core.csproj]\r\n```\r\n\r\nThis is the last output from the command:\r\n```\r\n22:03:32.868  1:10>Target \"CopyFilesToOutputDirectory: (TargetId:107)\" in file \"/usr/local/share/dotnet/sdk/2.1.4/Microsoft.Common.CurrentVersion.targets\" from project \"/Volumes/Speicher/projekte/Gitlab/MeikelLP/DataVisualizer/Core/Core.csproj\" (target \"PrepareForRun\" depends on it):\r\n                   Set Property: CreateHardLinksForCopyFilesToOutputDirectoryIfPossible=false\r\n                   Set Property: CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible=false\r\n                   Set Property: CopyBuildOutputToOutputDirectory=true\r\n                   Set Property: CopyOutputSymbolsToOutputDirectory=true\r\n                   Using \"Copy\" task from assembly \"Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n                   Task \"Copy\" (TaskId:66)\r\n                     Task Parameter:SourceFiles=obj/Debug/netstandard2.0/DataVisualizer.Core.dll (TaskId:66)\r\n                     Task Parameter:DestinationFolder=bin/Debug/netstandard2.0/ (TaskId:66)\r\n                     Task Parameter:SkipUnchangedFiles=True (TaskId:66)\r\n                     Task Parameter:OverwriteReadOnlyFiles=False (TaskId:66)\r\n                     Task Parameter:UseHardlinksIfPossible=False (TaskId:66)\r\n                     Task Parameter:UseSymboliclinksIfPossible=False (TaskId:66)\r\n                     Copying file from \"obj/Debug/netstandard2.0/DataVisualizer.Core.dll\" to \"bin/Debug/netstandard2.0/DataVisualizer.Core.dll\". (TaskId:66)\r\n```\r\n\r\n\r\n.csproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <AssemblyName>DataVisualizer.Core</AssemblyName>\r\n    <RootNamespace>DataVisualizer.Core</RootNamespace>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"JetBrains.Annotations\" Version=\"11.1.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.DataAnnotations\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nSystem:\r\n* MacOS 10.13.2\r\n* .NET Core SDK 2.1.4\n\n---\n\n@MeikelLP commented on [Tue Jan 23 2018](https://github.com/dotnet/buildtools/issues/1874#issuecomment-359934392)\n\nI edited the .csproj (removed AssemblyName & RootNamespace) saved and ran `dotnet build`-> worked.\r\nI changed my edit back to the submitted version and ran `dotnet build`-> worked.\r\nWhy? That's super strange...\n\n"},{"Id":"7252286152","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:23:40","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8626","RelatedDescription":"Opened pull request \"Stop re-targeting Roslyn to the CLI runtime.\" (#8626) at dotnet/cli","RelatedBody":"Stop re-targeting Roslyn to the CLI runtime. It will roll-forward to the CLI runtime (2.1.0) through minor version roll-forward if necessary.\r\n\r\nFixes https://github.com/dotnet/cli/issues/8613\r\n"},{"Id":"7252188948","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:01:59","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8625","RelatedDescription":"Opened pull request \"Update CoreSetup, CoreSetup, CoreSetup, Roslyn to preview2-26209-04, preview2-26209-04, preview2-26209-04, beta1-62615-17, respectively (master)\" (#8625) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7252083445","Type":"PullRequestEvent","CreatedAt":"2018-02-15T21:39:28","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8609","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to master\" (#8609) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7251969109","Type":"PullRequestEvent","CreatedAt":"2018-02-15T21:14:58","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8619","RelatedDescription":"Merged pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#8619) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7252234877","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:11:54","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/653","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-02 (master)\" (#653) at dotnet/standard","RelatedBody":""},{"Id":"7251733856","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:24:37","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7249664432","Type":"IssuesEvent","CreatedAt":"2018-02-15T13:57:29","Actor":"MANYAM-HARI","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/652","RelatedDescription":"Opened issue \".net core 2.0 dependencies issue\" (#652) at dotnet/standard","RelatedBody":"![image](https://user-images.githubusercontent.com/14251849/36260023-17bf766c-1286-11e8-80af-09336a210ab3.png)\r\n![capture](https://user-images.githubusercontent.com/14251849/36260045-280e2b9e-1286-11e8-9ef7-ec22e87a1a73.PNG)\r\n\r\n"},{"Id":"7247555987","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:51:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7246800202","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:04:16","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/648","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02513-01 (master)\" (#648) at dotnet/standard","RelatedBody":""},{"Id":"7238206586","Type":"IssuesEvent","CreatedAt":"2018-02-13T13:54:17","Actor":"Ruud-cb","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/650","RelatedDescription":"Opened issue \"Duplicate 'Compile' items were included. Resources\" (#650) at dotnet/standard","RelatedBody":"I am getting the known error that is listed on this page:\r\nhttps://github.com/dotnet/core/blob/master/release-notes/1.0/sdk/1.0-rc3-default-compile-items.md\r\n\r\nWhile it sounds obvious to delete all the Compile items, it simply doesn't work. When you remove them the Resources.resx and the Resources.Designer.cs become separate items and after that I am unable to refer to them from all my other 10 projects.\r\nAlso the fact that the above link is regarding **dot.net CORE** and not **STANDARD** gives me a strange feeling that things have been sorted out correctly.\r\n\r\nWhat else, other then disabeling EnableDefaultCompileItems, can I do?\r\n\r\nMy Language.csproj:\r\n\r\n```\r\n <ItemGroup>\r\n    <Compile Include=\"Resources\\Resources.de.Designer.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>Resources.de.resx</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.Designer.cs\">\r\n      <DependentUpon>Resources.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.fr.Designer.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>Resources.fr.resx</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.tr.Designer.cs\">\r\n      <DependentUpon>Resources.tr.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.en.Designer.cs\">\r\n      <DependentUpon>Resources.en.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"T4\\CreateLocolizedKeys.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>CreateLocolizedKeys.tt</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n<ItemGroup>\r\n    <EmbeddedResource Include=\"Resources\\Resources.de.resx\">\r\n      <Generator>ResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.de.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.fr.resx\">\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.fr.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.tr.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.tr.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.en.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.en.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Babywatcher.Language</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\n\r\nI am unknown what consequences this has to the rest, but the current workaround is by adding these 2 property groups:\r\n\r\n```\r\n  <PropertyGroup>\r\n    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>\r\n</PropertyGroup>\r\n  <PropertyGroup>\r\n    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>\r\n  </PropertyGroup>\r\n```"},{"Id":"7234553536","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:00:10","Actor":"chadAtGA","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/649","RelatedDescription":"Opened issue \".net core console app reference .net standard class library with nuget pkg by file not project. \" (#649) at dotnet/standard","RelatedBody":"I created a simple .net core 2.0 console project and a simple .net standard 2.0 class library. I add a ref to the nuget package StackExchange.Redis and then use the redis in my class library. I build the release version of my standard 2.0 class library. Then I try and reference that dll by browsing not by project. I startup my console and it says that it cannot find the stackexchange redis dll. I have tried publishing it so all of the dlls are in the but it does not seem to make a difference. Calling ReturnInt no problems calling RetStringRetString it fails. I'm sure I'm missing something simple.\r\n\r\nHere is my class library\r\n\r\n public class Class1\r\n    {\r\n\t\tpublic int ReturnInt()\r\n\t\t{\r\n\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\r\n\t\tpublic string RetString()\r\n\t\t{\r\n\t\t\tStackExchange.Redis.ConnectionMultiplexer connectionMultiplexer = StackExchange.Redis.ConnectionMultiplexer.Connect(\"localhost\");\r\n\r\n\t\t\tif(connectionMultiplexer.IsConnected)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine(\"Connecte\");\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n    }"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7253287730","Type":"PullRequestEvent","CreatedAt":"2018-02-16T04:18:01","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27195","RelatedDescription":"Opened pull request \"Use NtCreateFile on Win32\" (#27195) at dotnet/corefx","RelatedBody":"NtCreateFile allows passing in a base handle which makes opening child directories much faster. This cuts anywhere from 3-10% of the time off of a GetFiles() call.\r\n\r\nIt is significantly faster as it avoids normalization and path parsing overhead.\r\n\r\ncc: @terrajobst, @danmosemsft "},{"Id":"7253254694","Type":"PullRequestEvent","CreatedAt":"2018-02-16T04:00:50","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27188","RelatedDescription":"Merged pull request \"Enforce ILLink AssemblyPath order\" (#27188) at dotnet/corefx","RelatedBody":"The order of assembly references should take project references first."},{"Id":"7253252784","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:59:58","Actor":"pjanotti","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27183","RelatedDescription":"Merged pull request \"Add msbuild.binlog to .gitignore\" (#27183) at dotnet/corefx","RelatedBody":"Very useful to debug build related issues adding to .gitignore"},{"Id":"7253251737","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:59:24","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27143","RelatedDescription":"Merged pull request \"Log libc version in our \"OS info logging test\"\" (#27143) at dotnet/corefx","RelatedBody":"Add logging of glibc version to our special test that logs the configuration of the machines it runs on.\r\n\r\nNote I'm putting the code in PlatformDetection.NonNetfx.cs so it runs on Windows as well -- this will help demonstrate it's safe on all platforms CoreFX tests on, to help the case for adding it to the CLI as telemetry (see https://github.com/dotnet/corefx/issues/24522)"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7253422312","Type":"IssuesEvent","CreatedAt":"2018-02-16T05:25:52","Actor":"AArnott","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24885","RelatedDescription":"Opened issue \"Analyzer packages are hard to create and do right\" (#24885) at dotnet/roslyn","RelatedBody":"Properly packaging up analyzers is not automatic. .NET SDK projects that contain analyzers pack themselves with the analyzer assembly in the lib folder instead of the `analyzers\\cs` folder. Fixing this requires suppressing default lib folder placement then writing a custom target to output the right set of assemblies. Care is required to properly suppress all (or most) package dependencies including to Roslyn itself.\r\n\r\n[StyleCop.Analyzers](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/pull/1674) discovered and [others](https://github.com/Microsoft/VSSDK-Analyzers/pull/23) later did as well, the little known fact that analyzers must not reference the roslyn Workspaces package although their code fixes are required to. To do this reliably, one must split these into *two* assemblies, yet we want to package them up together, which again the .NET SDK pack target makes awkward. Consider a package called My.Analyzers with these assemblies:\r\n\r\nMy.Analyzers.dll\r\nMy.Analyzers.CodeFixes.dll\r\n\r\nI tend to want My.Analyzers.CodeFixes.dll to reference My.Analyzers.dll (so that the code fixes can reference the analyzer Id property, share utilities, etc.) But that means I have to make my CodeFixes project do the actual packaging. This is particularly awkward because the package will be given the name of the first project, which NuGet doesn't like unless I give the first project an artificial package ID that won't matter since I need to set IsPackable=false on the analyzer project so that I don't get an analyzer-only package too. Gah! So many things to do. You can see this all in the VSSDK-Analyzers PR that I link to above.\r\n\r\nCan all this be simplified, both in build authoring, and with a (multi-)project template in VS?"},{"Id":"7253168809","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:17:32","Actor":"DustinCampbell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24882","RelatedDescription":"Merged pull request \"Merge dev15.7.x-vs-deps to features/quick-info-party\" (#24882) at dotnet/roslyn","RelatedBody":""},{"Id":"7253103596","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:47:04","Actor":"natidea","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24884","RelatedDescription":"Opened pull request \"Merge dev15.6.x to dev15.6.x-vs-deps\" (#24884) at dotnet/roslyn","RelatedBody":"This is a pull request from dev15.6.x into dev15.6.x-vs-deps.\r\n\r\n``` bash\r\ngit fetch --all\r\ngit checkout merges/dev15.6.x-to-dev15.6.x-vs-deps-20180215\r\ngit reset --hard upstream/dev15.6.x-vs-deps\r\ngit merge upstream/dev15.6.x\r\n# Fix merge conflicts\r\ngit commit\r\ngit push merges/dev15.6.x-to-dev15.6.x-vs-deps-20180215 --force\r\n```\r\n\r\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7252865260","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:11:54","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24883","RelatedDescription":"Opened pull request \"Fix SyntacticClassificationTagger's handling of workspace changes\" (#24883) at dotnet/roslyn","RelatedBody":"The SyntacticClassificationTagger builds a queue of work items. When it sees a workspace change of ProjectChanged, it sees if it needs to enqueue a new parse due to optiosn changing. If it sees a DocumentChange it also enqueues a new parse if it's the document (note: in active context) we are tracking. In all cases (and after these two) it also enqueues a task to ensure the _lastParsedDocument field is brought forward to the current version. That had asserts (and assumptions) that in that case the contents of the text editor would never change.\r\n\r\nThat assumption is not correct for two reasons:\r\n\r\n1. If a linked file is changing, we raise two DocumentChanged; both present the same OldSolution and NewSolution. If the non-active context gets its event raised first, then we would try to migrate the _lastParsedDocument forward, but that also is bringing forward a content change too.\r\n2. If a SolutionChanged event was raised (say for a refactoring) that also changed a document, we could get a document changing as well.\r\n\r\nThe code that migrated _lastParsedDocument, since it presumed the content didn't change, would then only set _lastParsedDocument but wouldn't set _lastParsedSnapshot. This meant things were out of sync,\r\nat least until the next parse that would reset them. I suspect this might be the cause of #23074.\r\n\r\nAs a fairly tactical fix, if the snapshots are different, I don't set _lastParsedDocument but rather enqueue a new parse operation. That way the two _lastParsed fields don't get out of sync and we still\r\nwill have a parse going that wil (eventually) refresh everything.\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7252773723","Type":"PullRequestEvent","CreatedAt":"2018-02-16T00:39:59","Actor":"DustinCampbell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24882","RelatedDescription":"Opened pull request \"Merge dev15.7.x-vs-deps to features/quick-info-party\" (#24882) at dotnet/roslyn","RelatedBody":""},{"Id":"7252743016","Type":"PullRequestEvent","CreatedAt":"2018-02-16T00:29:59","Actor":"DustinCampbell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/20554","RelatedDescription":"Merged pull request \"New Quick Info API\" (#20554) at dotnet/roslyn","RelatedBody":"This is a PR to create a new public Quick Info API (#11103)\r\n\r\n- [x] Move @mattwar's original PR (#13623) forward to the latest master bits and get it building.\r\n- [x] Get all tests passing and ensure Quick Info actually still works.\r\n- [x] Update with @CyrusNajmabadi's comments on the original PR (#13623).\r\n- [x] Close #13623.\r\n- [x] Finalize public API surface area.\r\n\r\ncc @dotnet/roslyn-ide "}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7253099230","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:45:07","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5392","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5392) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7252657594","Type":"PullRequestEvent","CreatedAt":"2018-02-16T00:02:21","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5391","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5391) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7250535030","Type":"PullRequestEvent","CreatedAt":"2018-02-15T16:28:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5390","RelatedDescription":"Merged pull request \"Make g_rgWellKnownMethodNames specific to binder\" (#5390) at dotnet/corert","RelatedBody":"Fixes #5388."},{"Id":"7248860326","Type":"PullRequestEvent","CreatedAt":"2018-02-15T10:56:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5390","RelatedDescription":"Opened pull request \"Make g_rgWellKnownMethodNames specific to binder\" (#5390) at dotnet/corert","RelatedBody":"Fixes #5388."},{"Id":"7248087195","Type":"PullRequestEvent","CreatedAt":"2018-02-15T07:44:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5389","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5389) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7247870182","Type":"PullRequestEvent","CreatedAt":"2018-02-15T06:20:04","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5389","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5389) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7247570389","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:59:07","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5385","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5385) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7251770510","Type":"IssuesEvent","CreatedAt":"2018-02-15T20:32:39","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1416","RelatedDescription":"Closed issue \"How to adequately test multi-targeting netstandard libraries?\" (#1416) at dotnet/sdk","RelatedBody":"I have several class libraries that I ship on nuget.org that build with .NET SDK multi-targeting so I can support multiple .netstandard versions as well as several desktop framework versions. Even PCL or two in some cases.\r\n\r\nHow can I adequately test all these? I currently have a test project that also multitargets, but there's no way for me to test the netstandard1.0 build of my library on .NET Framework, for example, because the test project will use a build of the library that targets something more specific to net452, which is the minimum the VS test framework supports.\r\n\r\nIn one case I actually want to test the same library (that targets net45) under two configurations. Right now I'm faking it up by having the test project target net451 and net452 and switch a configuration file during the build for just one of them. But that technique doesn't work when I want to test a netstandard1.0 library under two configurations running on netcoreapp1.0.\r\n\r\nI wish there were a way to use the `TargetFrameworks` MSBuild property with my own dimension added, sort of like this:\r\n\r\n```xml\r\n<TargetFrameworks>netcoreapp1.0*a;netcoreapp1.0*b;net45*a;net45*b;net46</TargetFrameworks>\r\n```\r\n\r\nIs there any thought on this?"},{"Id":"7250914318","Type":"PullRequestEvent","CreatedAt":"2018-02-15T17:35:47","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1962","RelatedDescription":"Merged pull request \"Update RepoToolset to 1.0.0-beta-62615-02\" (#1962) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256."},{"Id":"7247217740","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:20:29","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1963","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#1963) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7247210628","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:17:46","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1962","RelatedDescription":"Opened pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1962) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256."},{"Id":"7247206873","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:16:20","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":"Closed pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1961) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7247206140","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:16:04","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":null,"RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7247193874","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:11:23","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":"Closed pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1961) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7247185317","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:08:08","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":"Opened pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1961) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7246955220","Type":"IssuesEvent","CreatedAt":"2018-02-14T23:49:24","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1631","RelatedDescription":"Closed issue \"Release labels are missing for 2.0.0 (others?)\" (#1631) at dotnet/sdk","RelatedBody":"See https://github.com/dotnet/sdk/releases\r\n\r\nNote that it appears incomplete / out-of-date.\r\n\r\n/cc @livarcocc @nguerrera "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"963791622948388870","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/icP5AqPRuB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":44,"RawContent":null},{"Id":"963413986954895360","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/l9RlPrj5Ep","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"963128572595519489","CreatedAt":"2018-02-12T19:12:00+00:00","UserScreenname":"dotnet","Text":"You can run your application anywhere with .NET Core – join @coolsch as he talks about .NET in 2018 at… https://t.co/0sSc3B7yOQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"963083274636554240","CreatedAt":"2018-02-12T16:12:00+00:00","UserScreenname":"dotnet","Text":"Update your existing .NET application to take advantage of new features in Windows Forms and WPF with @csharpfritz… https://t.co/yjqbIthkKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"961657885137698816","CreatedAt":"2018-02-08T17:48:01+00:00","UserScreenname":"dotnet","Text":"Tomorrow is NOW! @DEVintersection Take a deep dive with the Microsoft’s AI team into machine learning, predictive a… https://t.co/5AcI4VRNyG","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":22,"FavoriteCount":16,"RawContent":null},{"Id":"961596291942961154","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"dotnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/kWer0gYtOp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null},{"Id":"961382608914518016","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/dMJ5QcKEcp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null},{"Id":"960930092372381696","CreatedAt":"2018-02-06T17:36:01+00:00","UserScreenname":"dotnet","Text":"Register now for @DEVintersection for a workshop package and go home with an awesome piece of hardware Xbox One X,… https://t.co/PqoYqNI5Ga","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"960633633370292224","CreatedAt":"2018-02-05T21:58:00+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Framework 4.7.2 Early Access build 3052! https://t.co/8lGEqT6FqM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":101,"FavoriteCount":81,"RawContent":null},{"Id":"959498964503425026","CreatedAt":"2018-02-02T18:49:14+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1 roadmap https://t.co/1QFI97S11f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":246,"FavoriteCount":191,"RawContent":null},{"Id":"959498759733301248","CreatedAt":"2018-02-02T18:48:25+00:00","UserScreenname":"dotnet","Text":"Entity Framework Core 2.1 Roadmap https://t.co/jyrJwFiQzJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":76,"RawContent":null},{"Id":"959492955391143939","CreatedAt":"2018-02-02T18:25:21+00:00","UserScreenname":"dotnet","Text":".NET Core 2.1 Roadmap https://t.co/v7JFqyVWWb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":211,"FavoriteCount":163,"RawContent":null}]}},"RunOn":"2018-02-16T05:30:19.4762354Z","RunDurationInMilliseconds":7838}