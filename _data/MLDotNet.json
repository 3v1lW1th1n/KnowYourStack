{"Data":{"GitHub":{"Issues":[{"Id":"433582178","IsPullRequest":false,"CreatedAt":"2019-04-16T04:48:12","Actor":"codemzs","Number":"3350","RawContent":null,"Title":"Stop using Preview structure and API in samples.","State":"open","Body":"From PR #3307 and @TomFinley 's [comment ](https://github.com/dotnet/machinelearning/pull/3307#pullrequestreview-225891973) it was learnt that samples should be rewritten to not use \"preview\" structure because we're writing sample code using a structure expressly and clearly intended purely for debugging in a preview window anyway. There are a number of samples that use preview structure, I will start converting these samples in batches and replace the usage of preview API/structure with something more appropriate like IDataView + getter or Enumerable(with class). We definitely don't want to be educating our users the wrong thing.\r\n\r\nCC: @TomFinley @shmoradims @natke @shauheen ","Url":"https://github.com/dotnet/machinelearning/issues/3350","RelatedDescription":"Open issue \"Stop using Preview structure and API in samples.\" (#3350)"},{"Id":"433577799","IsPullRequest":true,"CreatedAt":"2019-04-16T04:23:56","Actor":"ganik","Number":"3349","RawContent":null,"Title":"ApplyOnnxModel sample","State":"open","Body":"part of #1209 ","Url":"https://github.com/dotnet/machinelearning/pull/3349","RelatedDescription":"Open PR \"ApplyOnnxModel sample\" (#3349)"},{"Id":"433577110","IsPullRequest":true,"CreatedAt":"2019-04-16T04:20:17","Actor":"sfilipi","Number":"3348","RawContent":null,"Title":"CherryPicking #3316 - ColumCopying documentation  ","State":"open","Body":"Cherry picking #3316 \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3348","RelatedDescription":"Open PR \"CherryPicking #3316 - ColumCopying documentation  \" (#3348)"},{"Id":"433576785","IsPullRequest":true,"CreatedAt":"2019-04-16T04:18:59","Actor":"ganik","Number":"3347","RawContent":null,"Title":"ApplyOnnxModel transform","State":"closed","Body":"part of #1209 ","Url":"https://github.com/dotnet/machinelearning/pull/3347","RelatedDescription":"Closed or merged PR \"ApplyOnnxModel transform\" (#3347)"},{"Id":"432789856","IsPullRequest":true,"CreatedAt":"2019-04-16T01:59:14","Actor":"codemzs","Number":"3328","RawContent":null,"Title":"Dispose source image object in image transfomers.","State":"closed","Body":"fixes #3327\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3328","RelatedDescription":"Closed or merged PR \"Dispose source image object in image transfomers.\" (#3328)"},{"Id":"433532290","IsPullRequest":true,"CreatedAt":"2019-04-16T01:10:09","Actor":"codemzs","Number":"3346","RawContent":null,"Title":"test.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3346","RelatedDescription":"Closed or merged PR \"test.\" (#3346)"},{"Id":"433520461","IsPullRequest":true,"CreatedAt":"2019-04-15T23:30:57","Actor":"Ivanidzo4ka","Number":"3345","RawContent":null,"Title":"SymSGD documentation","State":"open","Body":"Documentation for SymSGD towards #2522 ","Url":"https://github.com/dotnet/machinelearning/pull/3345","RelatedDescription":"Open PR \"SymSGD documentation\" (#3345)"},{"Id":"433502239","IsPullRequest":true,"CreatedAt":"2019-04-15T22:18:33","Actor":"Ivanidzo4ka","Number":"3344","RawContent":null,"Title":"Cherry pick Projection documentation and Normalize changes to 1.0","State":"open","Body":"Documentation for Projection and Normalize transforms.\r\nOriginal PRs https://github.com/dotnet/machinelearning/pull/3232 and #3244","Url":"https://github.com/dotnet/machinelearning/pull/3344","RelatedDescription":"Open PR \"Cherry pick Projection documentation and Normalize changes to 1.0\" (#3344)"},{"Id":"433497836","IsPullRequest":true,"CreatedAt":"2019-04-15T22:03:46","Actor":"rogancarr","Number":"3343","RawContent":null,"Title":"Cherry Pick TreeEnsembleModelParameters Docs","State":"open","Body":"This PR cherry-picks the changes made in #3339 into the release branch.","Url":"https://github.com/dotnet/machinelearning/pull/3343","RelatedDescription":"Open PR \"Cherry Pick TreeEnsembleModelParameters Docs\" (#3343)"},{"Id":"433430119","IsPullRequest":true,"CreatedAt":"2019-04-15T21:59:26","Actor":"rogancarr","Number":"3339","RawContent":null,"Title":"Clarify documentation for GetFeatureWeights in TreeEnsembleModelParameters","State":"closed","Body":"This PR clarifies the documentation for `GetFeatureWeights()` in `TreeEnsembleModelParameters`. Since `IHaveFeatureWeights` has become `internal`, the `TreeEnsembleModelParameters` are now the only place where this method is visible, and it is unclear from the API what this returns. This PR adds documentation to specify that the \"weights\" returned are the cumulative split gains for all the trees in the ensemble.\r\n\r\nFixes #1850\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3339","RelatedDescription":"Closed or merged PR \"Clarify documentation for GetFeatureWeights in TreeEnsembleModelParameters\" (#3339)"},{"Id":"433407876","IsPullRequest":false,"CreatedAt":"2019-04-15T21:49:29","Actor":"wschin","Number":"3337","RawContent":null,"Title":"Math equations in docs","State":"closed","Body":"We need a formal way to write equations used in trainers and transforms. I personally like [Latex syntax](https://www.overleaf.com/learn/latex/Aligning_equations_with_amsmath). Any other comments please?\r\n\r\nExample:\r\n```latex\r\n\\sum_{i=1}^{\\infty} \\frac{1}{n^s}\r\n```\r\n\r\n[Example where this is needed in docs](https://github.com/dotnet/machinelearning/blob/059c761ca3b4f46a40d36c434c32733f063e7dab/src/Microsoft.ML.StandardTrainers/Standard/Online/AveragedPerceptron.cs#L46)","Url":"https://github.com/dotnet/machinelearning/issues/3337","RelatedDescription":"Closed issue \"Math equations in docs\" (#3337)"},{"Id":"433490616","IsPullRequest":false,"CreatedAt":"2019-04-15T21:40:55","Actor":"wschin","Number":"3342","RawContent":null,"Title":"Inconsistency between package versioning","State":"open","Body":"There there [ML.NET nuget](https://www.nuget.org/packages/Microsoft.ML/0.11.0) 0.11 and 1.0.0. There are [ML.Recommender](https://www.nuget.org/packages/Microsoft.ML.Recommender/0.12.0-preview) nuget 0.11 and 0.12. How should user know 0.12 is equivalent to 1.0.0? Other nugets (such as time series and fast tree) look ok but we might want to double-check.","Url":"https://github.com/dotnet/machinelearning/issues/3342","RelatedDescription":"Open issue \"Inconsistency between package versioning\" (#3342)"},{"Id":"433436814","IsPullRequest":true,"CreatedAt":"2019-04-15T19:14:07","Actor":"glebuk","Number":"3341","RawContent":null,"Title":"Cherrypick to release: \"Renamed WhatTheFeature and their abbreviations to FeatureContributionScorer.\"","State":"open","Body":"â€¦.  Note that this breaks model backwards compatibility. (#3252)\r\n\r\nCherrypicks PR #3252 and issue #3255  into release branch\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3341","RelatedDescription":"Open PR \"Cherrypick to release: \"Renamed WhatTheFeature and their abbreviations to FeatureContributionScorer.\"\" (#3341)"},{"Id":"433432052","IsPullRequest":false,"CreatedAt":"2019-04-15T19:01:37","Actor":"PeterPann23","Number":"3340","RawContent":null,"Title":"LightGBM Error, code is -1, error message is 'bad allocation'","State":"open","Body":"### System information\r\n\r\n- **Windows 10 **:10.0.18362 Build 18362\r\n- **.NET**: Version 4.7.3, Microsoft.ML 1.0 preview\r\n-** Microsoft.ML.LightGMB**: 0.11.27505.13@build By dlab -14DDVS...\r\n### Issue\r\n\r\n- **What did you do?**\r\nStarted training using following code:\r\n```\r\nvar pipeline = mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: nameof(PredictedResult.LabelIndex) , inputColumnName: nameof(Data.Label), sort: ValueToKeyMappingEstimator.SortOrder.Value)\r\n                       .Append(mlContext.Transforms.Normalize(mode: NormalizingEstimator.NormalizerMode.MinMax, outputColumnName: nameof(Data.Features)))\r\n                       .Append(mlContext.MulticlassClassification.Trainers.LightGbm(labelColumnName:nameof(Data.LabelIndex),  featureColumnName:nameof(Data.Features)))\r\n                       .Append(mlContext.Transforms.Conversion.MapValueToKey(nameof(PredictedResult.PredictedLabelIndex), nameof(PredictedResult.PredictedLabel)))\r\n                       .Append(mlContext.Transforms.CopyColumns(outputColumnName: nameof(PredictedResult.Scores), inputColumnName: DefaultColumnNames.Score));\r\n            // Train the model.\r\n            var model = pipeline.Fit(dataset.TrainSet);\r\n```\r\n\r\n- **What happened?**\r\nReceived error on log line:\r\n```\r\nException(s): LightGBM Error, code is -1, error message is 'bad allocation'.\r\nLog: 18:20:52:[Source=LightGBMMulticlass; Loading data for LightGBM, Kind=Trace] Channel disposed. Elapsed 02:24:12.0168791.6010992.81611.0110556.\r\n```\r\n\r\n- **What did you expect?**\r\nA error message that makes sense that I can understand what the issue is.\r\n\r\n### Source code / logs\r\n\r\nNo additional logs recorded, \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3340","RelatedDescription":"Open issue \"LightGBM Error, code is -1, error message is 'bad allocation'\" (#3340)"},{"Id":"433410476","IsPullRequest":true,"CreatedAt":"2019-04-15T18:04:18","Actor":"artidoro","Number":"3338","RawContent":null,"Title":"Samples template for ranking catalog","State":"open","Body":"Tracked under #2522.\r\n\r\nThis PR adds samples for `FastTree` ranking.\r\n\r\nThis PR also rewrites the samples for `LightGbm` ranking using a template file which will make it easier to maintain going forward.","Url":"https://github.com/dotnet/machinelearning/pull/3338","RelatedDescription":"Open PR \"Samples template for ranking catalog\" (#3338)"},{"Id":"433124981","IsPullRequest":false,"CreatedAt":"2019-04-15T07:04:27","Actor":"bhrnjica","Number":"3336","RawContent":null,"Title":"Cannot build the source code using Visual Studio 2019","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 1809\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n- **Visual Studio version** VS2019\r\n\r\n### Issue\r\n\r\n- I am trying to build the source code using Visual Studio 2019. I have downloaded the source code and followed the [developer guide ](https://github.com/dotnet/machinelearning/blob/master/docs/project-docs/developer-guide.md), and run the following ``build.cmd -Release -TargetArchitecture:x64``, the following errors appeared:\r\n```\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.0.1\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: 'x86_x64'\r\n  Commencing native build of dotnet/machinelearning\r\n\r\n  Calling \"C:\\sc\\github\\machinelearning\\src\\Native\\\\gen-buildsys-win.bat\" \"C:\\sc\\github\\machinelearning\\src\\Native\\\" \"15\r\n 2017\" x64\r\n  CMake Error in CMakeLists.txt:\r\n  -- Configuring incomplete, errors occurred!\r\n  See also \"C:/sc/github/machinelearning/bin/obj/x64.Release/Native/CMakeFiles/CMakeOutput.log\".\r\n  Failed to generate native component build project!\r\n    Generator\r\n\r\n      Visual Studio 15 2017 Win64\r\n\r\n    could not find any instance of Visual Studio.\r\n\r\nC:\\sc\\github\\machinelearning\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"C:\\sc\\github\\machinelearning\\src\\\r\nNative\\build.cmd\" Release x64 --mkllibpath C:\\sc\\github\\machinelearning\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\n\r\native\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nC:\\sc\\github\\machinelearning\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"C:\\sc\\github\\machinelearning\\src\\\r\nNative\\build.cmd\" Release x64 --mkllibpath C:\\sc\\github\\machinelearning\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\n\r\native\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\nSeems the build scripts are not updated in order to support Visual Studio 2019","Url":"https://github.com/dotnet/machinelearning/issues/3336","RelatedDescription":"Open issue \"Cannot build the source code using Visual Studio 2019\" (#3336)"},{"Id":"432811281","IsPullRequest":true,"CreatedAt":"2019-04-14T01:34:21","Actor":"shauheen","Number":"3333","RawContent":null,"Title":"Update release branch","State":"closed","Body":"This PR updates the 1.0 release branch with changes from Master branch.","Url":"https://github.com/dotnet/machinelearning/pull/3333","RelatedDescription":"Closed or merged PR \"Update release branch\" (#3333)"},{"Id":"432846916","IsPullRequest":false,"CreatedAt":"2019-04-13T13:19:48","Actor":"martasp","Number":"3335","RawContent":null,"Title":"Splitter/consolidator worker encountered exception","State":"open","Body":"### System information\r\n\r\nOS version/distro: Windows 10\r\n.NET Version (eg., dotnet --info):  dotnet core 2.2\r\nVersion : ML.NET v1.0.0-preview\r\n\r\n### Issue\r\n\r\n- **What did you do?** \r\nI used tensorflow model + SDCA sample to train my own data\r\n- **What happened?**\r\n when i have 800 labels it gives this error, but work when there are 100 labels in tags.tsv file.\r\n\r\n\r\n### Source code / logs\r\nTraining classification model\r\n#############################\r\n\r\nEXCEPTION\r\n#########\r\nSplitter/consolidator worker encountered exception while consuming source data\r\n\r\nPress any key to finish.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3335","RelatedDescription":"Open issue \"Splitter/consolidator worker encountered exception\" (#3335)"},{"Id":"432829391","IsPullRequest":false,"CreatedAt":"2019-04-13T09:42:50","Actor":"PeterPann23","Number":"3334","RawContent":null,"Title":"Documentation enhancement on the pipeline's impack on output schema","State":"open","Body":"I am looking over the various samples provided in the Cookbook as well as the sample projects. \r\nnone of them are actually going into the detail of how powerful the creation of the training pipeline is when it comes to generating and populating a prediction.\r\n\r\nPerhaps one could add some Dokumentation as to the differences between the networks as well as the population and addressing the naming. One could, with a multiclass state the accuracy of the predicted class as one does now, one could also show the nearest neighbour and the combined weight of both. The patient could have both diseases, the client could like both products with a \"likely hood\" in \"that order\" with that \"accuracy\".  \r\n\r\nI'd think that the [Cookbook ](https://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md)would be an ideal location for this. in a section with a title say \"**how do I Interpret a generated single prediction**\"","Url":"https://github.com/dotnet/machinelearning/issues/3334","RelatedDescription":"Open issue \"Documentation enhancement on the pipeline's impack on output schema\" (#3334)"},{"Id":"432802417","IsPullRequest":true,"CreatedAt":"2019-04-13T07:52:55","Actor":"Dmitry-A","Number":"3331","RawContent":null,"Title":"[AutoML] disable netfx build leg for now","State":"closed","Body":"will re-enable once I figure out the fix for not building/running mlnet test there","Url":"https://github.com/dotnet/machinelearning/pull/3331","RelatedDescription":"Closed or merged PR \"[AutoML] disable netfx build leg for now\" (#3331)"},{"Id":"432800688","IsPullRequest":true,"CreatedAt":"2019-04-13T03:04:33","Actor":"Dmitry-A","Number":"3330","RawContent":null,"Title":"[AutoML] try to fix mlnet tests on netfx","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3330","RelatedDescription":"Open PR \"[AutoML] try to fix mlnet tests on netfx\" (#3330)"},{"Id":"432797870","IsPullRequest":true,"CreatedAt":"2019-04-13T02:24:45","Actor":"Dmitry-A","Number":"3329","RawContent":null,"Title":"fix test cases, remove AppInsights ref from AutoML","State":"closed","Body":"Need to figure out how to refer to keys, on TODO list -- just fixed the hardcoded values for now","Url":"https://github.com/dotnet/machinelearning/pull/3329","RelatedDescription":"Closed or merged PR \"fix test cases, remove AppInsights ref from AutoML\" (#3329)"},{"Id":"432789398","IsPullRequest":true,"CreatedAt":"2019-04-13T01:08:31","Actor":"Dmitry-A","Number":"3326","RawContent":null,"Title":"code migration from machinelearning-automl to machinelearning repo feature branch take 2","State":"closed","Body":"Sorry I squash merged on the first try which is not what I want, gotta keep history. Changes here are:\r\n\r\n- Shuffle code to conform to ml.net folder structure\r\n- Add automl and automl test components to build\r\n- Fix issues so it builds\r\n\r\nNote this does NOT include running tests or publishing nuget packages, that will come in as a separate PR","Url":"https://github.com/dotnet/machinelearning/pull/3326","RelatedDescription":"Closed or merged PR \"code migration from machinelearning-automl to machinelearning repo feature branch take 2\" (#3326)"},{"Id":"432789801","IsPullRequest":false,"CreatedAt":"2019-04-13T00:46:44","Actor":"codemzs","Number":"3327","RawContent":null,"Title":"Image transfomers don't dispose source image.","State":"open","Body":"Image transformers such as grayscale and resize have images as input. After they process input images to produce output image they should dispose the input image because if they don't then we are at mercy of garbage collector cleaning the bitmap objects and if the GC has not done that and some code in the same process tries to open the same image referenced by the bitmap object that is not disposed then we get file in use exception.","Url":"https://github.com/dotnet/machinelearning/issues/3327","RelatedDescription":"Open issue \"Image transfomers don't dispose source image.\" (#3327)"},{"Id":"432788696","IsPullRequest":true,"CreatedAt":"2019-04-13T00:40:30","Actor":"Dmitry-A","Number":"3325","RawContent":null,"Title":"code migration from machinelearning-automl to machinelearning repo feature branch take 2","State":"closed","Body":"Shuffle code to conform to ml.net folder structure\r\nAdd automl and automl test components to build\r\nFix issues so it builds\r\nNote this does NOT include running tests or publishing nuget packages, that will come in as a separate PR","Url":"https://github.com/dotnet/machinelearning/pull/3325","RelatedDescription":"Closed or merged PR \"code migration from machinelearning-automl to machinelearning repo feature branch take 2\" (#3325)"},{"Id":"432783704","IsPullRequest":true,"CreatedAt":"2019-04-13T00:17:31","Actor":"Dmitry-A","Number":"3324","RawContent":null,"Title":"code migration from machinelearning-automl to machinelearning repo feature branch","State":"closed","Body":"- Shuffle code to conform to ml.net folder structure\r\n- Add automl and automl test components to build\r\n- Fix issues so it builds\r\n\r\nNote this does NOT include running tests or publishing nuget packages, that will come in as a separate PR","Url":"https://github.com/dotnet/machinelearning/pull/3324","RelatedDescription":"Closed or merged PR \"code migration from machinelearning-automl to machinelearning repo feature branch\" (#3324)"},{"Id":"432783609","IsPullRequest":false,"CreatedAt":"2019-04-12T23:56:10","Actor":"artidoro","Number":"3323","RawContent":null,"Title":"Multiclass Classification catalog does not contain EvaluateNonCalibrated","State":"open","Body":"The Multiclass Classification catalog has non calibrated trainers (`SdcaNonCalibratedMulticlassTrainer`) along with many calibrated trainers. \r\n\r\nCurrently there is only one `Evaluate` method, which assumes that the model is calibrated, and therefore produces `LogLoss` metrics. These metrics don't makes sense for the non calibrated trainers.\r\n\r\nWe should therefore add an evaluation method named `EvaluateNonCalibrated` for the non calibrated trainers.","Url":"https://github.com/dotnet/machinelearning/issues/3323","RelatedDescription":"Open issue \"Multiclass Classification catalog does not contain EvaluateNonCalibrated\" (#3323)"},{"Id":"432780856","IsPullRequest":true,"CreatedAt":"2019-04-12T23:37:05","Actor":"artidoro","Number":"3322","RawContent":null,"Title":"Multiclass Classification Samples Update","State":"open","Body":"Tracked under #2522 \r\n\r\nThis PR adds samples for `LbfgsMaximumEntropy` and `SdcaNonCalibrated` trainers.\r\n\r\nThis PR also removes dependency from Samples Utils in other multiclass classification samples and adds .tt files for all multiclass classification samples.\r\n\r\nNotice that this PR does not take care of Naive Bayes as it is in progress in #3246.","Url":"https://github.com/dotnet/machinelearning/pull/3322","RelatedDescription":"Open PR \"Multiclass Classification Samples Update\" (#3322)"},{"Id":"432778196","IsPullRequest":true,"CreatedAt":"2019-04-12T23:20:22","Actor":"rogancarr","Number":"3321","RawContent":null,"Title":"Cherry-pick GAM samples","State":"open","Body":"This PR cherry-picks the GAM samples into the Release branch.","Url":"https://github.com/dotnet/machinelearning/pull/3321","RelatedDescription":"Open PR \"Cherry-pick GAM samples\" (#3321)"},{"Id":"432774419","IsPullRequest":false,"CreatedAt":"2019-04-12T23:00:35","Actor":"vinodshanbhag","Number":"3320","RawContent":null,"Title":"AutoML feature request: Provide hooks to enable more usable APIs","State":"open","Body":"Current AutoML APIs look like this\r\nmlContext.Auto.CreateRegressionExperiment() \r\nmlContext.Auto.InferColumns() \r\n\r\nThis makes us like we are shipping organization boundaries!\r\nSo we propose we ship the following.\r\nmlContext.Regression.CreateAutoExperiment()\r\nmlContext.Data.AutoInferColumns()\r\n\r\nThe problem with implementing this is that an extension method needs to be implemented on RegressionCatalog and not MLContext -- this means that automl code cant have have access to mlContext - but it needs access to mlContext. Please enable same.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3320","RelatedDescription":"Open issue \"AutoML feature request: Provide hooks to enable more usable APIs\" (#3320)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-16T05:30:36.2531897Z","RunDurationInMilliseconds":737}