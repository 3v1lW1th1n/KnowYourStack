{"Data":{"Blog":{"FeedItems":[{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0","PublishedOn":"2019-09-23T16:00:29+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Announcing .NET Core 3.0\nWe’re excited to announce the release of .NET Core 3.0. It includes many improvements, including adding Windows Forms and WPF, adding new JSON APIs, support for ARM64 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/","RawContent":null},{"Title":"Release Candidate builds of Entity Framework Core 3.0 and Entity Framework 6.3 are now available","PublishedOn":"2019-09-16T21:47:32+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We previously said that preview 9 would be your last chance to test EF Core 3.0 and EF 6.3 before general availability. But it turns out that we made enough improvements to our libraries and across...","Href":"https://devblogs.microsoft.com/dotnet/release-candidate-builds-of-entity-framework-core-3-0-and-entity-framework-6-3-are-now-available/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:09+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.0 Release Candidate 1. Just like with Preview 9, we&#8217;ve focused on polishing .NET Core 3.0 for a final release. We are now getting very, very close. We...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"Finalization implementation details","PublishedOn":"2019-09-16T17:43:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Years ago I wrote a document on making finalization scanning concurrent. At the time there was an internal team that was using finalization as a way to resurrect objects and putting them back in their...","Href":"https://devblogs.microsoft.com/dotnet/finalization-implementation-details/","RawContent":null},{"Title":".NET Framework September 2019 Security and Quality Rollup","PublishedOn":"2019-09-10T18:54:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the September 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1142– .NET Framework Elevation of Privilege...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core September 2019 Updates – 2.1.13 and 2.2.7","PublishedOn":"2019-09-10T17:17:31+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core September 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-september-2019/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10486020433","Type":"IssuesEvent","CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Opened issue \".NET Core `latest` Docker tags updated to 3.0\" (#124) at dotnet/announcements","RelatedBody":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n"},{"Id":"10427072993","Type":"IssuesEvent","CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Opened issue \".NET Core 3.0 RC 1\" (#123) at dotnet/announcements","RelatedBody":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10387173702","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:23:27","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Opened issue \"September 2019 .NET Updates\" (#122) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10387041341","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:04:51","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32971\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.7\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.8, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n"},{"Id":"10348207363","Type":"IssuesEvent","CreatedAt":"2019-09-04T19:14:06","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Opened issue \".NET Core 3.0 Preview 9\" (#120) at dotnet/announcements","RelatedBody":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n[EF Core](https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10498153545","Type":"PullRequestEvent","CreatedAt":"2019-09-26T04:27:11","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26903","RelatedDescription":"Merged pull request \"CollectionsMarshal.AsSpan allow null refs\" (#26903) at dotnet/coreclr","RelatedBody":"As per https://github.com/dotnet/coreclr/pull/26867#discussion_r328323548\r\n\r\n@jkotas @GrabYourPitchforks @ahsonkhan @tannergooding does this change require api review?"},{"Id":"10498064013","Type":"PullRequestEvent","CreatedAt":"2019-09-26T04:03:33","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26762","RelatedDescription":"Merged pull request \"Stop unloading the profiler on shutdown to prevent segfaults on background threads\" (#26762) at dotnet/coreclr","RelatedBody":"Fixes #26687\r\n\r\nOn Linux we were seeing profilers crash in ELT hooks because the profiler would be shut down before all managed threads had exited. These checks will prevent slow path ELT from crashing, profiler vendors will have to deal with fast path ELT calls that come in after the profiler is shut down."},{"Id":"10498063945","Type":"IssuesEvent","CreatedAt":"2019-09-26T04:03:31","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26687","RelatedDescription":"Closed issue \"pProfInterface is used after being freed by TerminateProfiling\" (#26687) at dotnet/coreclr","RelatedBody":"It seems that `pProfInterface` can be accessed by `ProfileEnter`/`ProfileLeave`/`ProfileTailcall` callbacks after `TerminateProfiling()` was called.\r\n\r\nI was running our tests Pri1 with a sample profiler (https://github.com/microsoft/clr-samples/tree/master/ProfilingAPI/ELTProfiler) on linux-arm64 against my PR https://github.com/dotnet/coreclr/pull/26460 and I hit segmentation faults in GC/Scenarios/FinalizeTimeout test. \r\n\r\nThe issue can also be reproduced on linux-x64. \r\n\r\n**What happens:**\r\n1. `ProfilingAPIUtility::TerminateProfiling()` is called during system shutdown. After that point  `pProfInterface` is freed and set to `nullptr`.\r\n2. `ProfileEnter` or `ProfileLeave` callback is called by https://github.com/dotnet/coreclr/blob/9c8ba7773e506db05016f1c278a7a1ea27816dbf/tests/src/GC/Scenarios/FinalizeTimeout/FinalizeTimeout.cs#L75\r\nfrom a finalizer thread.\r\n3. Asserts when tries to access  `pProfInterface`  (e.g. https://github.com/dotnet/coreclr/blob/master/src/vm/proftoeeinterfaceimpl.cpp#L10259)\r\n\r\n**Steps to repro:**\r\n1) build CorProfiler.so - I suggest to alter the code in a sample profiler by removing the printf-s in EnterStub, LeaveStub and TailcallStub in CorProfiler.cpp to avoid cluttering your output.\r\n2) create file FinalizeTimeoutUnderProfiles.lldb with the following steps:\r\n```\r\nb ProfilingAPIUtility::LoadProfiler\r\nr\r\nwatchpoint set expression -- &g_profControlBlock.pProfInterface.m_val\r\ncont\r\ncont\r\n```\r\n3) set the environment \r\n```\r\nexport CORECLR_ENABLE_PROFILING=1\r\nexport CORECLR_PROFILER={cf0d821e-299b-5307-a3d8-b283c03916dd}\r\nexport CORECLR_PROFILER_PATH=<Path to CorProfiler.so>\r\nexport CORE_ROOT=<Path to coreclr/bin/tests/Linux.x64.Checked/Tests/Core_Root>\r\n```\r\n\r\n4) run the test under LLDB\r\n```\r\nlldb-8 -s FinalizeTimeoutUnderProfiles.lldb -- $CORE_ROOT/corerun $CORE_ROOT/../../GC/Scenarios/FinalizeTimeout/FinalizeTimeout/FinalizeTimeout.dll\r\n```\r\n\r\nYou will see that the debugger will stop at two watchpoints - the first time is during ProfilingAPIUtility::LoadProfiler, the second time - during ProfilingAPIUtility::TerminateProfiling(). \r\n\r\nThen it will stop during SIGSEGV.\r\n\r\n@davmason @noahfalk Is this a supported scenario for profiling?\r\ncc @dotnet/dotnet-diag \r\n\r\n**Related issues:** #22176 #22712"},{"Id":"10497721952","Type":"PullRequestEvent","CreatedAt":"2019-09-26T02:37:12","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26904","RelatedDescription":"Opened pull request \"[single-exe] Run from bundle on Windows\" (#26904) at dotnet/coreclr","RelatedBody":"### Changes\r\nThis commit has two main changes:\r\n* Add a simplified `corebundle` host on Windows, similar to `unixcorebundle`\r\n* Enable assemblies embedded within single-exe bundles to be loaded directly from the bundle.\r\n\r\nThe CoreCLR native binaries are not linked into the corebundle host yet, so there need to be located separately on disk beside the single-exe app.\r\n\r\n### `corebundle` host\r\nAdd a new CoreBundle host – the prototype host for single-file self-contained apps on Windows\r\nThis code is adapted from coreconsole, with a few changes:\r\n* This host uses the coreclr_initialize() interface similar to AppHost, unlike other Windows hosts in `coreclr\\src\\hosts`\r\n* The path computations are done in UTF8 (similar to unixcorebundle) and not Unicode\r\n* Calls bundle-handling logic, and sets up appropriate runtime properties.\r\n\r\n### `app_bundle` abstraction\r\n* Added the `app_bundle_t` class to represent the bundle for the currently executing application\r\n* This class is the bundle-processing module's interface with the outside world, and shares code common to `corebundle` and `unixcorebundle`\r\n\r\n### Bundle Processing code \r\n* Move `bundle` directory to `coreclr/src/hosts` so that it can be shared by `corebundle` and `unixcorebundle`\r\n* Remove dummy tracing code and trace files\r\n* Add Windows PAL definitions so that bundle handling works on the Windows host\r\n* Remove some unnecessary PAL definitions\r\n\r\n### Loading the contents of the bundle\r\n* IL assemblies are loaded directly from the bundle using `FlatImageLayout`\r\n* R2R assemblies are loaded through `ConvertedImageLayout` which involves copying sections to appropriate offsets.\r\n\r\n### Limitations\r\nThere are a few shortcomings to running single-exe apps on Windows, as compared to Linux.\r\nThe Windows mapping routines have the following limitations:\r\n* [CreateFileMapping](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createfilemappinga) has no option to create a mapping for a part of the file (no offset argument).\r\n    This means that:\r\n    * We cannot use the (SEC_IMAGE) attribute to perform automatic section-wise loading (circumventinc alignment requirements) of bundled assemblies directly.\r\n    * Instead we need to map each section independently.\r\n* [MapViewOfFile]( https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffileex) can only map parts of a file aligned at [memory allocation granularity]( https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/ns-sysinfoapi-system_info), which is 64KB.\r\n    This means that:\r\n    * Each section within the assemblies should be aligned at 64KB – which is not guaranteed by the crossgen compiler.\r\n        * We therefore map the entire assembly and perform an in-memory copy of the sections to appropriate offsets.\r\n        * This behavior is achieved by using `ConvertedImageLayout`\r\n    * In order to memory-map one embedded assembly at a time, the assemblies in the bundle must be aligned at 64KB boundaries.\r\n        * A prototype bundler with this behavior for testing purposes is available in this branch: https://github.com/swaroop-sridhar/core-setup/tree/single-exe\r\n        * This change is strictly not necessary while copying out individual sections after memory-map (because we can align-down and map)\r\n        * But this change is closer to the final no-copy solution.\r\n\r\nIn the long term, the solution to the mapping problem would involve considerations such as:\r\n* Use the new crossgen AOT compiler to compile all assemblies in a version bubble into one PE assembly, with a few aligned sections.\r\n* Create the big-assembly into the host with proper alignment, so that the single-exe bundle can be loaded without copies at run time.\r\n\r\n### Steps to build/run\r\nThe following steps will work for most apps, minor adjustments may be necessary.\r\n\r\n* `dotnet publish -r win-x64 -c release -o pub`\r\n* `copy pub\\<managed-dlls> source`\r\n* `copy coreclr\\bin\\Product\\Windows.x64.Release\\corebundle.exe source\\<app>.exe`\r\n* `copy coreclr\\bin\\Product\\Windows.x64.Release\\System.Private.Corelib.dll source`\r\n* Copy the `Microsoft.NET.Hostmodel.dll` built from [this branch]() to  `coreclr\\bin\\Product\\Windows.x64.Release\\` \r\n* `dotnet coreclr\\bin\\Product\\Windows.x64.Release\\bundle.dll --source source --host <app>.exe -o run`\r\n* `copy coreclr\\bin\\Product\\Windows.x64.Release\\<coreclr-native-dlls> run` \r\n* Run `run\\<app>.exe` \r\n"},{"Id":"10497714915","Type":"PullRequestEvent","CreatedAt":"2019-09-26T02:35:29","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26903","RelatedDescription":"Opened pull request \"CollectionsMarshal.AsSpan allow null refs\" (#26903) at dotnet/coreclr","RelatedBody":"As per https://github.com/dotnet/coreclr/pull/26867#discussion_r328323548\r\n\r\n@jkotas @ahsonkhan @tannergooding does this change require api review?"},{"Id":"10497636570","Type":"IssuesEvent","CreatedAt":"2019-09-26T02:16:28","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26902","RelatedDescription":"Closed issue \"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected\" (#26902) at dotnet/coreclr","RelatedBody":""},{"Id":"10497635695","Type":"IssuesEvent","CreatedAt":"2019-09-26T02:16:16","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26902","RelatedDescription":"Opened issue \"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected\" (#26902) at dotnet/coreclr","RelatedBody":""},{"Id":"10497544491","Type":"IssuesEvent","CreatedAt":"2019-09-26T01:54:09","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26901","RelatedDescription":"Opened issue \"Test failed: readytorun\\tests\\mainv2\\mainv2.cmd\" (#26901) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-outerloop #20190925.5 Run Test Pri1 R2R Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=366103)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8575ec0e-9d36-4c88-a1e7-c4856b46c287/workitems/PayloadGroup0/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nRunCrossGen=1 \r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nreadytorun\\tests\\mainv2\\mainv2.cmd [FAIL]\r\n      Error compiling mainv2.exe: The system cannot find the file specified. (0x80070002 (COR_E_FILENOTFOUND))\r\n      Error: file \"mainv2.exe\" or one of its dependencies was not found\r\n      Access is denied.\r\n      Error compiling test.dll: The system cannot find the file specified. (0x80070002 (COR_E_FILENOTFOUND))\r\n      Error: file \"test.dll\" or one of its dependencies was not found\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\8575ec0e-9d36-4c88-a1e7-c4856b46c287\\Work\\d6b68a03-0834-4231-b310-ce18889704b5\\Exec\\readytorun\\tests\\Reports\\readytorun.tests\\mainv2\\mainv2.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n              1 file(s) copied.\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image fieldgetter.ni.dll generated successfully.\r\n              0 file(s) copied.\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n       \"C:\\dotnetbuild\\work\\8575ec0e-9d36-4c88-a1e7-c4856b46c287\\Payload\\corerun.exe\" mainv2.dll \r\n      Expected: 100\r\n      Actual: -532462766\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10497452172","Type":"PullRequestEvent","CreatedAt":"2019-09-26T01:30:51","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26900","RelatedDescription":"Opened pull request \"Fix Segfault in PerfInfo Image Logging\" (#26900) at dotnet/coreclr","RelatedBody":"Harden perfinfo.map image logging by skipping dynamically generated assemblies and being more robust around base address logging.\r\n\r\nFixes #26883 "},{"Id":"10497343491","Type":"PullRequestEvent","CreatedAt":"2019-09-26T01:02:55","Actor":"davidwrighton","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26899","RelatedDescription":"Opened pull request \"New profile data format \" (#26899) at dotnet/coreclr","RelatedBody":"- Called tibc (for textual ibc)\r\n- Represented as JSON text\r\n- Extensible\r\n- Does not require an ibcmerge step to work with the IBC file, in particular, the files are not tied to a specific binary\r\n- Added tibcmgr, which can be used to convert an ibc+.dll pair into a tibc file.\r\n- crossgen2 was also enhanced to consume the tibc file format\r\n  - It merges all input tibc into a composite profile data for consumption by the rest of crossgen2\r\n  - Also, various policies about generic placement are employed"},{"Id":"10497246444","Type":"PullRequestEvent","CreatedAt":"2019-09-26T00:36:45","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26711","RelatedDescription":"Merged pull request \"Introduce Utf8Span, which is a span of UTF-8 text\" (#26711) at dotnet/coreclr","RelatedBody":"This is an implementation of the `Utf8Span` type as described at https://github.com/dotnet/corefxlab/issues/2350. The goal of this type is to have a proper type that can represent a slice of guaranteed well-formed immutable UTF-8 data and to allow callers to perform text-like operations on that data. Some code samples follow.\r\n\r\n```cs\r\n/*\r\n * splitting: both syntaxes below are valid\r\n */\r\n\r\nUtf8Span name = u\"Doe, John\";\r\n(Utf8Span lastName, Utf8Span firstName) = name.Split(',', Utf8StringSplitOptions.TrimEntries);\r\n\r\nforeach (Utf8Span entry in name.Split(',', Utf8StringSplitOptions.TrimEntries)\r\n{\r\n    /* do something */\r\n}\r\n\r\n/*\r\n * text manipulation\r\n */\r\n\r\nSpan<byte> asUpper = GetScratchBuffer();\r\n\r\nint bytesWritten = name.ToUpperInvariant(asUpper);\r\nif (bytesWritten < 0) { /* FAIL */ }\r\n\r\nasUpper = asUpper.Slice(0, bytesWritten);\r\n\r\n/*\r\n * simple equality comparison\r\n */\r\n\r\nUtf8Span httpVerb = GetVerb();\r\nif (httpVerb == u\"GET\") { /* do something */ }\r\nelse if (httpVerb == u\"POST\") { /* do something else */ }\r\n\r\n/*\r\n * p/invoke\r\n */\r\n\r\n[DllImport(...)]\r\nprivate static extern int ExportedFunction(byte* pbData, int cbData);\r\n\r\nUtf8Span theSpan = GetSpan();\r\nfixed (byte* pbPinned = theSpan) // can be pinned as a byte*\r\n{\r\n    ExportedFunction(pbPinned, theSpan.Bytes.Length);\r\n}\r\n\r\n/*\r\n * searching and slicing\r\n * (if you don't want to use the Split* methods)\r\n */\r\n\r\nUtf8Span theSpan = u\"8♦ A♦ 10♠ 2♥ Q♥\";\r\n\r\nif (theSpan.Contains('♠')) {\r\n    Console.WriteLine(\"You have a spade!\");\r\n}\r\n\r\nif (theSpan.TryFind('♥', out Range match))\r\n{\r\n    Console.WriteLine(\"You have a heart!\");\r\n\r\n    // 'match' is a System.Range representing where in the original span the search term was found\r\n    Utf8Span theHeart = theSpan[match]; // == \"♥\"\r\n    Utf8Span before = theSpan[..match.Start]; // == \"8♦ A♦ 10♠ 2\"\r\n    Utf8Span after = theSpan[match.End..]; // == \" Q♥\"\r\n}\r\nelse\r\n{\r\n    Console.WriteLine(\"You do not have a heart.\");\r\n}\r\n\r\n// Below line will throw an exception because it's trying to split within a multi-byte subsequence,\r\n// and the resulting slice would end up containing ill-formed UTF-8 data.\r\nUtf8Span slice = ((Utf8Span)u\"😀\")[1..];\r\n```\r\n\r\nUnit tests are located at https://github.com/GrabYourPitchforks/corefx/tree/dev2/utf8string/src/System.Utf8String.Experimental/tests/System and will be merged into corefx as a separate PR.\r\n\r\nWork items that aren't part of this PR, since I was trying to keep the size manageable:\r\n\r\n * Also changing `Utf8String` to have the \"correct by construction\" semantics at https://github.com/dotnet/corefxlab/issues/2350, including modifications to its ctors, removal of the `this[int]` indexer, and getting its API to have parity with `Utf8Span`.\r\n * Removing `Char8` from the repo entirely.\r\n * Optimizing the `Utf8Span` code paths to avoid allocations / transcoding and instead to call into ICU if available on the current OS. On Windows, we'll need to consider how the CLDR tables carried by ICU differ from the tables carried by NLS.\r\n\r\n_Note to reviewers:_\r\n\r\nThis API has not yet been approved. That shouldn't block checkin, as this whole feature is behind a feature flag. Once the entire feature is run through LDM and the design review committee we can react to API changes and remove the feature flag.\r\n\r\nThere are some code changes that __are not__ behind feature flags, and those changes might require extra scrutiny. In particular, `CompareInfo.IndexOf` and `Unsafe.IsNull` require closer inspection."},{"Id":"10497243759","Type":"PullRequestEvent","CreatedAt":"2019-09-26T00:35:59","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26581","RelatedDescription":"Merged pull request \"Reuse managed test components across all *nix flavors\" (#26581) at dotnet/coreclr","RelatedBody":"Today CoreCLR pipelines build tests on the same OS flavors they are\r\nsupposed to run on. This is wasteful as we produce identical\r\nmanaged test artifacts on OSX, Linux, Linux_musl and Linux_rhel6.\r\n\r\nWith this change, the pipeline construction analyzes the set of\r\nOS / architecture combos to run tests on and picks the \"best\"\r\nOS (or rather the OS that runs on the fastest lab HW) for build\r\nof the managed test components.\r\n\r\nNative test components are newly built as part of the product build\r\nas these do need to be built separately for each targeting OS.\r\nProduct build zips them up and publishes them to Azure as an artifact\r\nthat gets subsequently downloaded and stitched together with\r\nmanaged test components in the test run job.\r\n\r\nImplementation-wise the change basically proceeds in two steps.\r\nIn platform-matrix.yml we first identify the exact set of OS / arch\r\ncombos to run. Using this information we subsequently identify\r\nthe OS to build managed components on for each combo; this information\r\nis passed to test-job.yml which skips managed test build for those\r\nOS-es that are expecting the managed components to be built on a\r\ndifferent OS.\r\n\r\nProduct build (build-job.yml) contains the additional logic to\r\nbuild native test artifacts and publish them to Azure for perusal\r\nby the test run job that downloads and unzips both managed and native\r\nartifacts into the final test folder before publishing to Helix.\r\n\r\nSome points of note:\r\n\r\n1) Synthesizing the various derived properties (activity flags for each\r\nOS-architecture combo, OS to use for building managed artifacts)\r\nrequired splitting the platform-matrix script into three parts.\r\nThe pre-existing platform-matrix only calculates the activity flags\r\nand calls platform-matrix-combos; this script calculates the OS to use\r\nfor building *nix managed artifacts for each architecture and calls\r\nplatform-matrix-managed-test-build which contains most of\r\nthe previous contents of platform-matrix detailing the individual\r\nOS/architecture combos, their corresponding machine pools and\r\nother details. The platform-matrix-combos script can be used to\r\ntune the OS selection to reflect performance of the various machine\r\npools.\r\n\r\n2) build-job now also needs testGroup in order to synthesize the\r\nappropriate \"priority\" value for building the native test components.\r\nIn run jobs, we need to unpack the build product, otherwise sending\r\nto Helix fails. It might be worth investigating what parts of the\r\nproduct build Helix submission needs and perhaps zipping it up\r\nas a separate smaller archive. Likewise I'm thinking we could avoid\r\nunzipping the entire GIT enlistment in test run jobs and just\r\nuse a small subset with the necessary scripts etc. I don't want to\r\nmake this change any more complex, this is just an idea for\r\nfuture optimizations.\r\n\r\n3) In the dir.targets script, I had to rename the property\r\nCopyNativeProjectReferences to _CopyNativeProjectReferences\r\nas it was somehow weirdly interacting with the target\r\nwith the same name - within the target,\r\n$(CopyNativeProjectReferences) returned true even after\r\nthe property had been set to false in the above logic.\r\nI had to clean this up overall as it was otherwise crashing\r\nthe run job when copying the native artifacts to the test\r\noutput folder for tests conditionally disabled on Unix using\r\nthe DisableProjectBuild clause.\r\n\r\nThanks\r\n\r\nTomas\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10498222230","Type":"PullRequestEvent","CreatedAt":"2019-09-26T04:45:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12719","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12719) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190925.5\r\n- **Date Produced**: 9/26/2019 4:26 AM\r\n- **Commit**: ed48cd2ff86ab59400555a413efc8d7535a45e32\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-rc2.19475.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n"},{"Id":"10498207903","Type":"IssuesEvent","CreatedAt":"2019-09-26T04:41:38","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12716","RelatedDescription":"Closed issue \"How do I generate framework-dependent deployments in .Net Core 3.0?\" (#12716) at dotnet/cli","RelatedBody":"Hey,\r\n\r\nI'm trying to get pre-3.0 behaviour of `dotnet publish` without specifying runtime to build for, as I want to get a generic `Program.dll` file to run with `dotnet` utility.\r\n\r\nRight now I'm getting framework-dependent executable in above place, which is alright in regards to the **[docs of changes](https://docs.microsoft.com/dotnet/core/deploying/#framework-dependent-executables-fde)**.\r\n\r\nMy question is, how can I generate FDD again? My target use case is publishing that generic `Program.dll` project to run in OS-independent environment, I don't want `Program.exe` bundled there, because it's entirely useless for user running my `Program.dll` e.g. on Linux, and vice-versa, publishing generic build on Linux has entirely useless ELF binary for Windows users.\r\n\r\nIs there any way to tell `dotnet` **NOT** to generate FDE during generic publish? I swear I went through all the docs, manuals and even internal documentation and I could not find a single mention of a switch that allows to do so, it feels like FDE is a direct replacement of FDD and not an option. I wish you can prove me wrong here, because FDE is completely inappropriate for my use case and FDD is everything that I need.\r\n\r\nThank you in advance for answering."},{"Id":"10497857001","Type":"PullRequestEvent","CreatedAt":"2019-09-26T03:10:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12718","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12718) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190925.7\r\n- **Date Produced**: 9/26/2019 1:58 AM\r\n- **Commit**: e24aa3ed525c33a8d356e3f372264e61c5b052e6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19475.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10497611054","Type":"PullRequestEvent","CreatedAt":"2019-09-26T02:10:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12717","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12717) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190925.6\r\n- **Date Produced**: 9/26/2019 1:03 AM\r\n- **Commit**: 5fa4772596a1c18d62a179f39704160c7f6dc223\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19475.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10494822801","Type":"PullRequestEvent","CreatedAt":"2019-09-25T17:52:06","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1575","RelatedDescription":"Opened pull request \"Update to non prerelease\" (#1575) at dotnet/standard","RelatedBody":""},{"Id":"10494249411","Type":"PullRequestEvent","CreatedAt":"2019-09-25T16:34:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1574","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1574) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10492040525","Type":"PullRequestEvent","CreatedAt":"2019-09-25T12:30:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1573","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1573) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 7:06 PM\r\n- **Commit**: da147ece700c2502b91e57d99213feadcfb9c1f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19474.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10491960045","Type":"PullRequestEvent","CreatedAt":"2019-09-25T12:20:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1573","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1573) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 7:06 PM\r\n- **Commit**: da147ece700c2502b91e57d99213feadcfb9c1f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19474.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10491885706","Type":"PullRequestEvent","CreatedAt":"2019-09-25T12:11:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1572","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1572) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:15 AM\r\n- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19473.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10491809856","Type":"PullRequestEvent","CreatedAt":"2019-09-25T12:00:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1572","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1572) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:15 AM\r\n- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19473.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10490498754","Type":"IssuesEvent","CreatedAt":"2019-09-25T09:07:45","Actor":"NicolasDorier","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1571","RelatedDescription":"Opened issue \"Github does not render the diff files of netstandard2.1 correctly\" (#1571) at dotnet/standard","RelatedBody":"In the [diff for netstandard2.1](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.1_diff.md), Github is showing `(Sorry about that, but we can’t show files that are this big right now.)` instead of a nicely formatted diff.\r\n\r\nProposed workaround:\r\n\r\n* Ping the github team to increase the limit\r\n* Send the dotnet team in holiday during the development of netstandard2.2 so the diff file get smaller.\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10498294029","Type":"PullRequestEvent","CreatedAt":"2019-09-26T05:03:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41340","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#41340) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10498277503","Type":"PullRequestEvent","CreatedAt":"2019-09-26T04:59:40","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41336","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#41336) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"},{"Id":"10498254853","Type":"PullRequestEvent","CreatedAt":"2019-09-26T04:53:39","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41328","RelatedDescription":"Merged pull request \"Add Español Windows 19H1 queue in PRs\" (#41328) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10497764761","Type":"PullRequestEvent","CreatedAt":"2019-09-26T02:47:45","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38868","RelatedDescription":"Opened pull request \"Generate direct GetHashCode calls for value types when they would be non-boxing\" (#38868) at dotnet/roslyn","RelatedBody":"Closes #31984."},{"Id":"10497667290","Type":"PullRequestEvent","CreatedAt":"2019-09-26T02:23:44","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38867","RelatedDescription":"Opened pull request \"[WIP] Fix compiler package setup for CPS based projects\" (#38867) at dotnet/roslyn","RelatedBody":""},{"Id":"10497552730","Type":"IssuesEvent","CreatedAt":"2019-09-26T01:56:12","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38866","RelatedDescription":"Opened issue \"EnC: Investigate cases when semantic analysis results shouldn't be cached per document\" (#38866) at dotnet/roslyn","RelatedBody":"Tracking TODO in code.\r\n\r\nIt is possible that the result of Rude Edit semantic analysis of an unchanged document will change if there another document is updated. If we encounter a significant case of this we should consider caching such a result per project, rather then per document. Also, we might be observing an older semantics if the document that is causing the change is out-of-sync --\r\ne.g. the binary was built with an overload C.M(object), but a generator updated class C to also contain C.M(string), which change we have not observed yet. Then call-sites of C.M in a changed document observed by the analysis will be seen as C.M(object) instead of the true C.M(string)."},{"Id":"10497297985","Type":"IssuesEvent","CreatedAt":"2019-09-26T00:50:55","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38865","RelatedDescription":"Opened issue \"Crash in suppression\" (#38865) at dotnet/roslyn","RelatedBody":"Not sure how to repro this.\r\n\r\nGot this error:\r\n\r\n```\r\n\r\nSystem.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. Parameter name: length   at Microsoft.CodeAnalysis.Text.TextSpan..ctor(Int32 start, Int32 length)   at Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider.PragmaHelpers.NormalizeTriviaOnTokens(AbstractSuppressionCodeFixProvider fixer, Document& document, SuppressionTargetInfo& suppressionTargetInfo)   at Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider.<GetSuppressionsAsync>d__30.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)   at Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider.<GetSuppressionsAsync>d__28.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.<PerformFunctionAsync>d__3`1.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n--\r\n```"},{"Id":"10497116991","Type":"PullRequestEvent","CreatedAt":"2019-09-26T00:02:17","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38864","RelatedDescription":"Opened pull request \"Merge master to features/local-function-attributes\" (#38864) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10497116338","Type":"PullRequestEvent","CreatedAt":"2019-09-26T00:02:09","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38863","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#38863) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10496318197","Type":"PullRequestEvent","CreatedAt":"2019-09-25T21:19:00","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7798","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7798) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10496308214","Type":"PullRequestEvent","CreatedAt":"2019-09-25T21:17:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7797) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub"},{"Id":"10485089955","Type":"PullRequestEvent","CreatedAt":"2019-09-24T16:58:39","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7797) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10478497423","Type":"IssuesEvent","CreatedAt":"2019-09-24T00:16:59","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."},{"Id":"10469447456","Type":"IssuesEvent","CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Opened issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796) at dotnet/corert","RelatedBody":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]"},{"Id":"10456718650","Type":"IssuesEvent","CreatedAt":"2019-09-20T02:21:36","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Opened issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10498313732","Type":"PullRequestEvent","CreatedAt":"2019-09-26T05:09:11","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3658","RelatedDescription":"Merged pull request \"Speed up tests\" (#3658) at dotnet/sdk","RelatedBody":"1. Use isolated node reuse for tests\r\n2. Use msbuild /restore instead of separate restore invocations"},{"Id":"10498065957","Type":"PullRequestEvent","CreatedAt":"2019-09-26T04:04:02","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3656","RelatedDescription":"Merged pull request \"Change the installed 2.2 runtime to 2.2.7.\" (#3656) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"498619362","IsPullRequest":true,"CreatedAt":"2019-09-26T04:27:10","Actor":"benaadams","Number":"26903","RawContent":null,"Title":"CollectionsMarshal.AsSpan allow null refs","State":"closed","Body":"As per https://github.com/dotnet/coreclr/pull/26867#discussion_r328323548\r\n\r\n@jkotas @GrabYourPitchforks @ahsonkhan @tannergooding does this change require api review?","Url":"https://github.com/dotnet/coreclr/pull/26903","RelatedDescription":"Closed or merged PR \"CollectionsMarshal.AsSpan allow null refs\" (#26903)"},{"Id":"498619908","IsPullRequest":true,"CreatedAt":"2019-09-26T02:37:12","Actor":"swaroop-sridhar","Number":"26904","RawContent":null,"Title":"[single-exe] Run from bundle on Windows","State":"open","Body":"### Changes\r\nThis commit has two main changes:\r\n* Add a simplified `corebundle` host on Windows, similar to `unixcorebundle`\r\n* Enable assemblies embedded within single-exe bundles to be loaded directly from the bundle.\r\n\r\nThe CoreCLR native binaries are not linked into the corebundle host yet, so there need to be located separately on disk beside the single-exe app.\r\n\r\n### `corebundle` host\r\nAdd a new CoreBundle host – the prototype host for single-file self-contained apps on Windows\r\nThis code is adapted from coreconsole, with a few changes:\r\n* This host uses the coreclr_initialize() interface similar to AppHost, unlike other Windows hosts in `coreclr\\src\\hosts`\r\n* The path computations are done in UTF8 (similar to unixcorebundle) and not Unicode\r\n* Calls bundle-handling logic, and sets up appropriate runtime properties.\r\n\r\n### `app_bundle` abstraction\r\n* Added the `app_bundle_t` class to represent the bundle for the currently executing application\r\n* This class is the bundle-processing module's interface with the outside world, and shares code common to `corebundle` and `unixcorebundle`\r\n\r\n### Bundle Processing code \r\n* Move `bundle` directory to `coreclr/src/hosts` so that it can be shared by `corebundle` and `unixcorebundle`\r\n* Remove dummy tracing code and trace files\r\n* Add Windows PAL definitions so that bundle handling works on the Windows host\r\n* Remove some unnecessary PAL definitions\r\n\r\n### Loading the contents of the bundle\r\n* IL assemblies are loaded directly from the bundle using `FlatImageLayout`\r\n* R2R assemblies are loaded through `ConvertedImageLayout` which involves copying sections to appropriate offsets.\r\n\r\n### Limitations\r\nThere are a few shortcomings to running single-exe apps on Windows, as compared to Linux.\r\nThe Windows mapping routines have the following limitations:\r\n* [CreateFileMapping](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createfilemappinga) has no option to create a mapping for a part of the file (no offset argument).\r\n    This means that:\r\n    * We cannot use the (SEC_IMAGE) attribute to perform automatic section-wise loading (circumventinc alignment requirements) of bundled assemblies directly.\r\n    * Instead we need to map each section independently.\r\n* [MapViewOfFile]( https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-mapviewoffileex) can only map parts of a file aligned at [memory allocation granularity]( https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/ns-sysinfoapi-system_info), which is 64KB.\r\n    This means that:\r\n    * Each section within the assemblies should be aligned at 64KB – which is not guaranteed by the crossgen compiler.\r\n        * We therefore map the entire assembly and perform an in-memory copy of the sections to appropriate offsets.\r\n        * This behavior is achieved by using `ConvertedImageLayout`\r\n    * In order to memory-map one embedded assembly at a time, the assemblies in the bundle must be aligned at 64KB boundaries.\r\n        * A prototype bundler with this behavior for testing purposes is available in this branch: https://github.com/swaroop-sridhar/core-setup/tree/single-exe\r\n        * This change is strictly not necessary while copying out individual sections after memory-map (because we can align-down and map)\r\n        * But this change is closer to the final no-copy solution.\r\n\r\nIn the long term, the solution to the mapping problem would involve considerations such as:\r\n* Use the new crossgen AOT compiler to compile all assemblies in a version bubble into one PE assembly, with a few aligned sections.\r\n* Create the big-assembly into the host with proper alignment, so that the single-exe bundle can be loaded without copies at run time.\r\n\r\n### Steps to build/run\r\nThe following steps will work for most apps, minor adjustments may be necessary.\r\n\r\n* `dotnet publish -r win-x64 -c release -o pub`\r\n* `copy pub\\<managed-dlls> source`\r\n* `copy coreclr\\bin\\Product\\Windows.x64.Release\\corebundle.exe source\\<app>.exe`\r\n* `copy coreclr\\bin\\Product\\Windows.x64.Release\\System.Private.Corelib.dll source`\r\n* Copy the `Microsoft.NET.Hostmodel.dll` built from [this branch]() to  `coreclr\\bin\\Product\\Windows.x64.Release\\` \r\n* `dotnet coreclr\\bin\\Product\\Windows.x64.Release\\bundle.dll --source source --host <app>.exe -o run`\r\n* `copy coreclr\\bin\\Product\\Windows.x64.Release\\<coreclr-native-dlls> run` \r\n* Run `run\\<app>.exe` \r\n","Url":"https://github.com/dotnet/coreclr/pull/26904","RelatedDescription":"Open PR \"[single-exe] Run from bundle on Windows\" (#26904)"},{"Id":"498613768","IsPullRequest":false,"CreatedAt":"2019-09-26T02:16:27","Actor":"AriNuer","Number":"26902","RawContent":null,"Title":"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/issues/26902","RelatedDescription":"Closed issue \"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected\" (#26902)"},{"Id":"498607621","IsPullRequest":false,"CreatedAt":"2019-09-26T01:54:09","Actor":"VincentBu","Number":"26901","RawContent":null,"Title":"Test failed: readytorun\\tests\\mainv2\\mainv2.cmd","State":"open","Body":"**Job:**\r\n[coreclr-outerloop #20190925.5 Run Test Pri1 R2R Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=366103)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8575ec0e-9d36-4c88-a1e7-c4856b46c287/workitems/PayloadGroup0/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nRunCrossGen=1 \r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nreadytorun\\tests\\mainv2\\mainv2.cmd [FAIL]\r\n      Error compiling mainv2.exe: The system cannot find the file specified. (0x80070002 (COR_E_FILENOTFOUND))\r\n      Error: file \"mainv2.exe\" or one of its dependencies was not found\r\n      Access is denied.\r\n      Error compiling test.dll: The system cannot find the file specified. (0x80070002 (COR_E_FILENOTFOUND))\r\n      Error: file \"test.dll\" or one of its dependencies was not found\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\8575ec0e-9d36-4c88-a1e7-c4856b46c287\\Work\\d6b68a03-0834-4231-b310-ce18889704b5\\Exec\\readytorun\\tests\\Reports\\readytorun.tests\\mainv2\\mainv2.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n              1 file(s) copied.\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image fieldgetter.ni.dll generated successfully.\r\n              0 file(s) copied.\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n       \"C:\\dotnetbuild\\work\\8575ec0e-9d36-4c88-a1e7-c4856b46c287\\Payload\\corerun.exe\" mainv2.dll \r\n      Expected: 100\r\n      Actual: -532462766\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26901","RelatedDescription":"Open issue \"Test failed: readytorun\\tests\\mainv2\\mainv2.cmd\" (#26901)"},{"Id":"498601272","IsPullRequest":true,"CreatedAt":"2019-09-26T01:30:49","Actor":"brianrob","Number":"26900","RawContent":null,"Title":"Fix Segfault in PerfInfo Image Logging","State":"open","Body":"Harden perfinfo.map image logging by skipping dynamically generated assemblies and being more robust around base address logging.\r\n\r\nFixes #26883 ","Url":"https://github.com/dotnet/coreclr/pull/26900","RelatedDescription":"Open PR \"Fix Segfault in PerfInfo Image Logging\" (#26900)"},{"Id":"498594045","IsPullRequest":true,"CreatedAt":"2019-09-26T01:02:55","Actor":"davidwrighton","Number":"26899","RawContent":null,"Title":"New profile data format ","State":"open","Body":"- Called tibc (for textual ibc)\r\n- Represented as JSON text\r\n- Extensible\r\n- Does not require an ibcmerge step to work with the IBC file, in particular, the files are not tied to a specific binary\r\n- Added tibcmgr, which can be used to convert an ibc+.dll pair into a tibc file.\r\n- crossgen2 was also enhanced to consume the tibc file format\r\n  - It merges all input tibc into a composite profile data for consumption by the rest of crossgen2\r\n  - Also, various policies about generic placement are employed","Url":"https://github.com/dotnet/coreclr/pull/26899","RelatedDescription":"Open PR \"New profile data format \" (#26899)"},{"Id":"498392529","IsPullRequest":true,"CreatedAt":"2019-09-26T00:31:19","Actor":"franksinankaya","Number":"26887","RawContent":null,"Title":"Replace lateArgInx with GetLateArgInx","State":"closed","Body":"@am11  @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26887","RelatedDescription":"Closed or merged PR \"Replace lateArgInx with GetLateArgInx\" (#26887)"},{"Id":"498407034","IsPullRequest":true,"CreatedAt":"2019-09-26T00:31:10","Actor":"franksinankaya","Number":"26891","RawContent":null,"Title":"Replace isVararg with GetIsVararg()","State":"closed","Body":"@am11  @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26891","RelatedDescription":"Closed or merged PR \"Replace isVararg with GetIsVararg()\" (#26891)"},{"Id":"498395386","IsPullRequest":true,"CreatedAt":"2019-09-25T23:52:59","Actor":"franksinankaya","Number":"26888","RawContent":null,"Title":"Replace lvArgInitReg with GetArgInitReg","State":"closed","Body":"@am11  @jkotas @janvorli @sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/26888","RelatedDescription":"Closed or merged PR \"Replace lvArgInitReg with GetArgInitReg\" (#26888)"},{"Id":"498407085","IsPullRequest":true,"CreatedAt":"2019-09-25T21:54:53","Actor":"jashook","Number":"26892","RawContent":null,"Title":"Disable test that timeouts in outerloop","State":"closed","Body":"Test relies on gc stress.","Url":"https://github.com/dotnet/coreclr/pull/26892","RelatedDescription":"Closed or merged PR \"Disable test that timeouts in outerloop\" (#26892)"},{"Id":"498533662","IsPullRequest":true,"CreatedAt":"2019-09-25T21:51:50","Actor":"Dotnet-GitSync-Bot","Number":"26898","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/26898","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#26898)"},{"Id":"498525143","IsPullRequest":true,"CreatedAt":"2019-09-25T21:08:55","Actor":"sdmaclea","Number":"26897","RawContent":null,"Title":"WIP Initial perf jitdump implementation","State":"open","Body":"This initial commit:\r\n\r\n- creates the jit-%d.dump file\r\n- writes the file header\r\n- creates the mmap mark\r\n- adds `JIT_CODE_LOAD` records for JIT generated code and for stubs.\r\n\r\nIt has been lightly tested on Ubuntu 16.04 with perf built from Ubuntu-azure-4.15.0-1057.62 with the patch https://lkml.org/lkml/2019/9/20/862 \r\n\r\n```bash\r\nexport COMPlus_PerfMapEnabled=1\r\n~/git/linux-azure-xenial/tools/perf/perf record -k 1 /home/stmaclea/git/coreclr/bin/tests/Linux.x64.Debug/Tests/Core_Root/corerun helloworld.dll\r\n~/git/linux-azure-xenial/tools/perf/perf --debug verbose=10 inject --input perf.data --jit --output perfjit.data\r\n~/git/linux-azure-xenial/tools/perf/perf report --input perfjit.data\r\n```\r\n\r\nBasic functionality seems correct, however there are sample which are hitting in `perf-*.map`, but not found in `jit-*.dump`.\r\n\r\nIt needs to be further debugged.\r\n\r\nFixes #26842 \r\n\r\n/cc @dotnet/dotnet-diag ","Url":"https://github.com/dotnet/coreclr/pull/26897","RelatedDescription":"Open PR \"WIP Initial perf jitdump implementation\" (#26897)"},{"Id":"498465160","IsPullRequest":false,"CreatedAt":"2019-09-25T18:57:59","Actor":"danmosemsft","Number":"26896","RawContent":null,"Title":"Improve Find References/Go To Definition experience in VS Code for VM code","State":"open","Body":"I added a `.vscode/c_cpp_properties.json` in https://github.com/dotnet/coreclr/pull/24540 to get better Go To Definition in VS Code in the VM code.\r\n\r\nUnfortunately this required pasting in lots of include paths and defines that would be better to be discovered from the build process.\r\n\r\nIt looks like VS Code support CMAKE  \"compile commands\" may allow us to achieve that: \r\nhttps://cmake.org/cmake/help/v3.5/variable/CMAKE_EXPORT_COMPILE_COMMANDS.html\r\n\r\nBTW, The C++ Find All References shipped last month (https://github.com/microsoft/vscode-cpptools/issues/15) which would make good VS Code integration more valuable than before.","Url":"https://github.com/dotnet/coreclr/issues/26896","RelatedDescription":"Open issue \"Improve Find References/Go To Definition experience in VS Code for VM code\" (#26896)"},{"Id":"498424506","IsPullRequest":false,"CreatedAt":"2019-09-25T18:55:15","Actor":"rdtek","Number":"26894","RawContent":null,"Title":"Fast memory allocation and zero initialisation","State":"closed","Body":"# Fast memory allocation and zero initialisation\r\n\r\nIs there a fast way to allocate and zero initialise a large block of memory using .Net Core?\r\n\r\nLooking for a solution that works on both Windows and Linux platforms.\r\n\r\nIt seems the fastest method on Windows is to call kernel32 HeapAlloc function via PInvoke, this allocates and zeros a 1GB block of memory in less than 2 milliseconds.\r\n\r\nHowever, I haven't found a way to achieve similar results on Linux whilst only using .Net Core.\r\n\r\nI've tried the Marshal.AllocHGlobal method which does not zero the memory, and then zeroing the memory using Marshal.Copy to copy an array of zero bytes into the memory, but this gives poor performance i.e. 800 milliseconds compared to the 2 milliseconds above.\r\n\r\nDoes .Net Core provide a cross platform API that would give similar performance as Windows HeapAlloc or something like the C function calloc?\r\n\r\nCode example below:\r\n\r\n```\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace MemoryApp\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            const int sizeBytes = 1_000_000_000;\r\n\r\n            Console.WriteLine($\"Allocating memory of size: {sizeBytes} bytes.\");\r\n\r\n            const int totalAttempts = 20;\r\n\r\n            for (int i = 0; i < totalAttempts; i++)\r\n            {\r\n                var stopwatch = Stopwatch.StartNew();\r\n\r\n                var allocatedMemory = new AllocatedMemory(sizeBytes);\r\n                \r\n                stopwatch.Stop();\r\n                \r\n                Console.WriteLine($\"Allocated memory in {stopwatch.ElapsedTicks} ticks ({stopwatch.ElapsedMilliseconds} milliseconds).\");\r\n\r\n                allocatedMemory.Dispose();\r\n            }\r\n\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n\r\n    public unsafe class AllocatedMemory : IDisposable\r\n    {\r\n        public byte* MemoryAddress { get; }\r\n\r\n#if USE_WINDOWS_HEAP\r\n        private IntPtr _heapPtr;\r\n#else\r\n        private IntPtr _memoryPtr;\r\n#endif\r\n\r\n        public AllocatedMemory(int sizeInBytes)\r\n        {\r\n#if USE_WINDOWS_HEAP\r\n            var heapFlags = HeapFlags.HEAP_GENERATE_EXCEPTIONS | HeapFlags.HEAP_ZERO_MEMORY;\r\n\r\n            _heapPtr = Heap.HeapCreate(heapFlags, 0, 0);\r\n            MemoryAddress = (byte*)Heap.HeapAlloc(_heapPtr, heapFlags, (uint)sizeInBytes);\r\n#else\r\n            // Memory allocated but not zeroed\r\n            _memoryPtr = Marshal.AllocHGlobal((IntPtr)sizeInBytes);\r\n\r\n            // Zero the memory\r\n            Marshal.Copy(new byte[sizeInBytes], 0, _memoryPtr, sizeInBytes);\r\n            MemoryAddress = (byte*)_memoryPtr;\r\n#endif\r\n        }\r\n\r\n        ~AllocatedMemory()\r\n        {\r\n            Dispose(false);\r\n        }\r\n\r\n        public void Dispose()\r\n        {\r\n            Dispose(true);\r\n            GC.SuppressFinalize(this);\r\n        }\r\n\r\n        protected virtual void Dispose(bool disposing)\r\n        {\r\n            if (disposing)\r\n            {\r\n                if (MemoryAddress != null)\r\n                {\r\n#if USE_WINDOWS_HEAP\r\n                    Heap.HeapDestroy(_heapPtr);\r\n#else\r\n                    Marshal.FreeHGlobal(_memoryPtr);\r\n#endif\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n#if USE_WINDOWS_HEAP\r\n    public class Heap\r\n    {\r\n        [DllImport(\"kernel32.dll\", SetLastError = true)]\r\n        public static extern IntPtr HeapCreate(HeapFlags flOptions, uint dwInitialsize, uint dwMaximumSize);\r\n\r\n        [DllImport(\"kernel32.dll\", SetLastError = true)]\r\n        public static extern IntPtr HeapAlloc(IntPtr hHeap, HeapFlags dwFlags, uint dwSize);\r\n\r\n        [DllImport(\"kernel32.dll\", SetLastError = true)]\r\n        public static extern bool HeapDestroy(IntPtr hHeap);\r\n    }\r\n    \r\n    [Flags]\r\n    public enum HeapFlags\r\n    {\r\n        HEAP_NO_SERIALIZE = 0x1,\r\n        HEAP_GENERATE_EXCEPTIONS = 0x4,\r\n        HEAP_ZERO_MEMORY = 0x8\r\n    }\r\n#endif\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26894","RelatedDescription":"Closed issue \"Fast memory allocation and zero initialisation\" (#26894)"},{"Id":"498432311","IsPullRequest":true,"CreatedAt":"2019-09-25T17:49:26","Actor":"tannergooding","Number":"26895","RawContent":null,"Title":"Refactoring the ARM Hardware Intrinsics based on the latest design decisions.","State":"open","Body":"This is just the `System.Private.Corelib` changes from https://github.com/dotnet/coreclr/pull/25508.\r\n\r\nIt was pulled out so that the reference assemblies in CoreFX can be updated and https://github.com/dotnet/coreclr/pull/25508 can actually test the changes being made.","Url":"https://github.com/dotnet/coreclr/pull/26895","RelatedDescription":"Open PR \"Refactoring the ARM Hardware Intrinsics based on the latest design decisions.\" (#26895)"},{"Id":"498414583","IsPullRequest":true,"CreatedAt":"2019-09-25T17:10:38","Actor":"dotnet-maestro-bot","Number":"26893","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/26893","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#26893)"},{"Id":"498000721","IsPullRequest":true,"CreatedAt":"2019-09-25T17:05:05","Actor":"Anipik","Number":"26875","RawContent":null,"Title":"update branding for servicing","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26875","RelatedDescription":"Closed or merged PR \"update branding for servicing\" (#26875)"},{"Id":"498403122","IsPullRequest":false,"CreatedAt":"2019-09-25T16:45:31","Actor":"Pilchie","Number":"26890","RawContent":null,"Title":"ArgumentException due to incompatible delegate type when COMPlus_EnableEventLog set on Linux","State":"open","Body":"_From @mjrousos on Tuesday, September 24, 2019 5:33:20 PM_\r\n\r\n### Describe the bug\r\nOn Linux, no requests can be served if the COMPlus_EnableEventLog variable is set. The following exception is thrown:\r\n\r\n```\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.ArgumentException: Cannot bind to the target method because its signature is not compatible with that of the delegate type.\r\n   at System.Reflection.RuntimeMethodInfo.CreateDelegateInternal(Type delegateType, Object firstArgument, DelegateBindingFlags bindingFlags)\r\n   at System.Reflection.RuntimeMethodInfo.CreateDelegate(Type delegateType)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.TransformSpec.PropertySpec.PropertyFetch.TypedFetchProperty`2..ctor(Type type, PropertyInfo property)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n   at System.Activator.CreateInstance(Type type, Object[] args)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.TransformSpec.PropertySpec.PropertyFetch.FetcherForProperty(Type type, PropertyInfo propertyInfo)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.TransformSpec.PropertySpec.Fetch(Object obj)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.TransformSpec.Morph(Object obj)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.FilterAndTransform.Morph(Object args)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.FilterAndTransform.<>c__DisplayClass2_1.<.ctor>b__2(KeyValuePair`2 evnt)\r\n   at System.Diagnostics.DiagnosticSourceEventSource.CallbackObserver`1.OnNext(T value)\r\n   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)\r\n   at Microsoft.AspNetCore.Mvc.MvcCoreDiagnosticListenerExtensions.AfterActionImpl(DiagnosticListener diagnosticListener, ActionDescriptor actionDescriptor, HttpContext httpContext, RouteData routeData)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n\r\nThe COMPlus_EnableEventLog variable is needed for some diagnostic scenarios such as gathering system events with PerfCollect.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using ASP.NET Core 3.0 on Linux, `dotnet new mvc` (or any ASP.NET Core template)\r\n2. `export COMPlus_EnableEventLog=1`\r\n3. `dotnet run`\r\n4. Try to navigate to one of the app's endpoints and observe the exception.\r\n\r\n### Expected behavior\r\nThe app should work, of course (and emit events for use with PerfCollect/PerfView)\r\n\r\n### Additional context\r\n\r\n```\r\nmikerou@MikeRou-SB:/mnt/d/scratch/AspNetCoreRepro$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /home/mikerou/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.2.300 [/home/mikerou/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/home/mikerou/dotnet/sdk]\r\n  3.0.100-preview9-014004 [/home/mikerou/dotnet/sdk]\r\n  3.0.100 [/home/mikerou/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.5 [/home/mikerou/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.5 [/home/mikerou/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/home/mikerou/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [/home/mikerou/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/home/mikerou/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/home/mikerou/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/home/mikerou/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [/home/mikerou/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/home/mikerou/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n_Copied from original issue: aspnet/AspNetCore#14390_","Url":"https://github.com/dotnet/coreclr/issues/26890","RelatedDescription":"Open issue \"ArgumentException due to incompatible delegate type when COMPlus_EnableEventLog set on Linux\" (#26890)"},{"Id":"498399662","IsPullRequest":true,"CreatedAt":"2019-09-25T16:38:16","Actor":"dotnet-maestro[bot]","Number":"26889","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9d917c39-9eee-4aa5-f8e9-08d6910be5f1)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:9d917c39-9eee-4aa5-f8e9-08d6910be5f1)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26889","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#26889)"},{"Id":"498388035","IsPullRequest":true,"CreatedAt":"2019-09-25T16:15:29","Actor":"dotnet-maestro[bot]","Number":"26886","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26886","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#26886)"},{"Id":"498364946","IsPullRequest":true,"CreatedAt":"2019-09-25T15:34:09","Actor":"chipitsine","Number":"26885","RawContent":null,"Title":"resolve several issues found by cppcheck","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26885","RelatedDescription":"Open PR \"resolve several issues found by cppcheck\" (#26885)"},{"Id":"498359028","IsPullRequest":true,"CreatedAt":"2019-09-25T15:24:26","Actor":"mikedn","Number":"26884","RawContent":null,"Title":"[WIP] Enable GitHub_7147","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26884","RelatedDescription":"Open PR \"[WIP] Enable GitHub_7147\" (#26884)"},{"Id":"498316216","IsPullRequest":false,"CreatedAt":"2019-09-25T14:15:39","Actor":"klesta490","Number":"26883","RawContent":null,"Title":"[Linux] Segfault when AssemblyBuilder.DefineDynamicAssembly and PerfMap","State":"open","Body":"Hi!\r\nWhen I build app with final **.NET Core v3.0.0** and run it with\r\n`COMPlus_PerfMapEnabled=1`\r\n\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n     AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"Sth.dll\"), AssemblyBuilderAccess.RunAndCollect);\r\n}\r\n```\r\n\r\nI get instantly **Segmentation faul**t.\r\n\r\nIt seems it is working fine on Preview9 (I was not testing any other versions).\r\n\r\nIt migh be related to [Link](https://github.com/dotnet/coreclr/issues/26830) \r\n\r\n\r\nFun fact,\r\nwith `COMPlus_PerfMapEnabled=1`  \r\nI get segfault for \r\n\r\n`dotnet new console`\r\n`dotnet tool install -g dotnet-sos`   \r\nThat makes it real fun to diagnose.\r\n\r\nMaybe this stack trace helps\r\n```\r\nframe #0: 0x00007f5a43d32caa libcoreclr.so`PerfInfo::LogImage(PEFile, char16_t) + 90\r\nframe #1: 0x00007f5a43d31e57 libcoreclr.so`PerfMap::LogImage(PEFile*) + 279\r\nframe #2: 0x00007f5a43e6c56a libcoreclr.so`Assembly::CreateDynamic(AppDomain, CreateDynamicAssemblyArgs) + 2538\r\nframe #3: 0x00007f5a43ec052a libcoreclr.so`AppDomainNative::CreateDynamicAssembly(AssemblyNameBaseObject, StackCrawlMark, int) + 234\r\n```\r\nOf course I can disable it, but this prevents me from profiling apps :-(","Url":"https://github.com/dotnet/coreclr/issues/26883","RelatedDescription":"Open issue \"[Linux] Segfault when AssemblyBuilder.DefineDynamicAssembly and PerfMap\" (#26883)"},{"Id":"498071525","IsPullRequest":false,"CreatedAt":"2019-09-25T13:50:43","Actor":"AriNuer","Number":"26877","RawContent":null,"Title":"Assert failure(PID 5640 [0x00001608], Thread: 3936 [0x0f60]): !\"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected\"","State":"closed","Body":"**Job:**\r\ncoreclr-corefx: [#20190924.1 Run Test Pri1 CoreFX Windows_NT x86 checked](https://dnceng.visualstudio.com/public/_build/results?buildId=364181)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/1251ceea-ddad-47e1-ad0a-4a3266d8af9e/workitems/System.Runtime.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x86\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x86 machine.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\1251ceea-ddad-47e1-ad0a-4a3266d8af9e\\Work\\ac8413bb-8b7a-4fdf-9e4a-6368a8bf0e12\\Exec>\"C:\\dotnetbuild\\work\\1251ceea-ddad-47e1-ad0a-4a3266d8af9e\\Payload\\dotnet.exe\" exec --runtimeconfig System.Runtime.Tests.runtimeconfig.json xunit.console.dll System.Runtime.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\1251ceea-ddad-47e1-ad0a-4a3266d8af9e\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Runtime.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Tests (found 5376 of 5409 test cases)\r\n  Starting:    System.Runtime.Tests (parallel test collections = on, max threads = 2)\r\n    System.Tests.ArgIteratorTests.ArgIterator_Throws_PlatformNotSupportedException [SKIP]\r\n      Condition(s) not met: \"IsArgIteratorNotSupported\"\r\n    System.Tests.IntPtrTests.Size [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n    System.Tests.IntPtrTests.Add [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n    System.Tests.IntPtrTests.Subtract [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n    System.Tests.IntPtrTests.ImplicitCast [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n    System.Tests.IntPtrTests.GetHashCodeRespectAllBits [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n    System.Tests.IntPtrTests.Ctor_VoidPointer_ToPointer [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n    System.Tests.IntPtrTests.Ctor_Long [SKIP]\r\n      Condition(s) not met: \"Is64Bit\"\r\n\r\nAssert failure(PID 5640 [0x00001608], Thread: 3936 [0x0f60]): !\"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected\"\r\n\r\nCORECLR! DoJITFailFast + 0xA2 (0x72d72cb3)\r\nCORECLR! CrawlFrame::SetCurGSCookie + 0x13 (0x72cd06e1)\r\nCORECLR! CrawlFrame::GotoNextFrame + 0x8D (0x72cceae9)\r\nCORECLR! StackFrameIterator::NextRaw + 0x938 (0x72ccfe46)\r\nCORECLR! StackFrameIterator::Next + 0x46 (0x72ccf4ca)\r\nCORECLR! Thread::StackWalkFramesEx + 0x180 (0x72cd0a5c)\r\nCORECLR! Thread::StackWalkFrames + 0x159 (0x72cd085c)\r\nCORECLR! UnwindFrames + 0x7D (0x72d1c0b2)\r\nCORECLR! COMPlusAfterUnwind + 0x16C (0x72cfdfb3)\r\nCORECLR! CPFH_RealFirstPassHandler + 0xE1E (0x72d00936)\r\n    File: f:\\workspace\\_work\\1\\s\\src\\vm\\jithelpers.cpp Line: 5057\r\n    Image: C:\\dotnetbuild\\work\\1251ceea-ddad-47e1-ad0a-4a3266d8af9e\\Payload\\dotnet.exe\r\n\r\n----- end Tue 09/24/2019 10:50:35.65 ----- exit code -1073740286 ----------------------------------------------------------\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/26877","RelatedDescription":"Closed issue \"Assert failure(PID 5640 [0x00001608], Thread: 3936 [0x0f60]): !\"About to FailFast. set ComPlus_AssertOnFailFast=0 if this is expected\"\" (#26877)"},{"Id":"498276908","IsPullRequest":false,"CreatedAt":"2019-09-25T13:10:25","Actor":"viewizard","Number":"26882","RawContent":null,"Title":"[RyuJIT/ARM32] low performance compared to amd64 investigation, data memory barrier usage.","State":"open","Body":"Initial thread was started by @alpencolt #23520\r\nInitial performance test results generated by @alpencolt\r\nhttps://gist.github.com/alpencolt/0580af0be86e49bb9d89508dabcd8615\r\n\r\nDuring arm32 performance investigation we found, that the one of the point of performance degradation is data memory barrier usage. Note, that in case of arm32 we use it for volatile variables, plus, it present in atomic memory access functions.\r\n\r\nFor example, ```__sync_val_compare_and_swap(value, comp_val, new_val)``` implementation for armv7 looks like:\r\n```\r\n  sub sp, sp, #8\r\n  movs r3, #1\r\n  add r1, sp, #4\r\n  str r3, [sp, #4]\r\n  movs r3, #0\r\n  dmb ish\r\n.L2:\r\n  ldrex r2, [r1]\r\n  cmp r2, #5\r\n  bne .L3\r\n  strex r0, r3, [r1]\r\n  cmp r0, #0\r\n  bne .L2\r\n.L3:\r\n  dmb ish\r\n  add sp, sp, #8\r\n  bx lr\r\n```\r\nin the same time, for arm64 we have\r\n```\r\n  mov QWORD PTR [rsp-8], 1\r\n  xor edx, edx\r\n  mov eax, 5\r\n  lock cmpxchg QWORD PTR [rsp-8], rdx\r\n  ret\r\n```\r\n</br>\r\n\r\n\r\nWe also compared the results of tests running with a setting flag COMPlus_JitNoMemoryBarriers and without it.\r\nFor example:\r\nhttps://github.com/dotnet/performance/tree/master/src/benchmarks/micro/corefx/System.Collections/Concurrent\r\n#### System.Collections.Concurrent.Count\r\nResults running with COMPlus_JitNoMemoryBarriers = \"\":\r\n```\r\n[2019/08/08 11:33:37][INFO] | Method | Size |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n[2019/08/08 11:33:37][INFO] |------- |----- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n[2019/08/08 11:33:37][INFO] |  Stack |  512 | 1.103 us | 0.0014 us | 0.0012 us | 1.103 us | 1.102 us | 1.106 us |           - |           - |           - |                   - |\r\n```\r\nResults running with COMPlus_JitNoMemoryBarriers = 1:\r\n```\r\n[2019/08/08 11:49:19][INFO] | Method | Size |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n[2019/08/08 11:49:19][INFO] |------- |----- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n[2019/08/08 11:49:19][INFO] |  Stack |  512 | 1.047 us | 0.0005 us | 0.0005 us | 1.046 us | 1.046 us | 1.047 us |           - |           - |           - |                   - |\r\n```\r\n#### System.Collections.Concurrent.IsEmpty\r\nResults running with COMPlus_JitNoMemoryBarriers = \"\":\r\n```\r\n[2019/08/08 12:01:06][INFO] | Method | Size |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n[2019/08/08 12:01:06][INFO] |------- |----- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n[2019/08/08 12:01:06][INFO] |  Stack |    0 | 62.26 ns | 0.8814 ns | 0.7360 ns | 61.98 ns | 61.78 ns | 63.90 ns |           - |           - |           - |                   - |\r\n[2019/08/08 12:01:06][INFO] |  Stack |  512 | 67.73 ns | 4.5348 ns | 5.2223 ns | 65.76 ns | 63.02 ns | 76.57 ns |           - |           - |           - |                   - |\r\n```\r\nResults running with COMPlus_JitNoMemoryBarriers = 1:\r\n```\r\n[2019/08/08 12:08:37][INFO] | Method | Size |      Mean |     Error |    StdDev |    Median |       Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n[2019/08/08 12:08:37][INFO] |------- |----- |----------:|----------:|----------:|----------:|----------:|---------:|------------:|------------:|------------:|--------------------:|\r\n[2019/08/08 12:08:37][INFO] |  Stack |    0 | 0.9811 ns | 0.0621 ns | 0.0581 ns | 0.9774 ns | 0.8880 ns | 1.080 ns |           - |           - |           - |                   - |\r\n[2019/08/08 12:08:37][INFO] |  Stack |  512 | 0.9913 ns | 0.0864 ns | 0.0809 ns | 0.9951 ns | 0.8675 ns | 1.124 ns |           - |           - |           - |                   - |\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26882","RelatedDescription":"Open issue \"[RyuJIT/ARM32] low performance compared to amd64 investigation, data memory barrier usage.\" (#26882)"},{"Id":"498188758","IsPullRequest":false,"CreatedAt":"2019-09-25T10:15:35","Actor":"zeroskyx","Number":"26881","RawContent":null,"Title":"Determine whether a running app is \"PublishSingleFile\" or not","State":"open","Body":"Greetings,\r\n\r\nusing the new PublishSingleFile feature in .NET Core 3, is it possible to determine during runtime whether the running application is a PublishSingleFile-app or not?\r\n\r\nThanks in advance\r\n-Simon","Url":"https://github.com/dotnet/coreclr/issues/26881","RelatedDescription":"Open issue \"Determine whether a running app is \"PublishSingleFile\" or not\" (#26881)"},{"Id":"498124077","IsPullRequest":false,"CreatedAt":"2019-09-25T08:56:11","Actor":"neyromant","Number":"26880","RawContent":null,"Title":" EventListener does not receive events from RuntimeEventSource until dotnet-counters is explicitly started","State":"closed","Body":"Hi.\r\nI wrote simple code for in-proc receive stat events from [RuntimeEventSource](https://github.com/dotnet/coreclr/blob/release/3.0/src/System.Private.CoreLib/src/System/Diagnostics/Eventing/RuntimeEventSource.cs)\r\n```\r\nusing System;\r\nusing System.Diagnostics.Tracing;\r\n\r\nnamespace TestEventSource\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var eventListener = new CustomEventListener();\r\n            Console.WriteLine(\"Press Enter to stop\");\r\n            Console.ReadLine();\r\n            eventListener.Dispose();\r\n        }\r\n    }\r\n\r\n    class CustomEventListener : EventListener\r\n    {\r\n        protected override void OnEventSourceCreated(EventSource eventSource)\r\n        {\r\n            if(eventSource.Name == \"System.Runtime\")\r\n                EnableEvents(eventSource, EventLevel.Verbose, EventKeywords.All);\r\n        }\r\n\r\n        protected override void OnEventWritten(EventWrittenEventArgs eventData)\r\n        {\r\n            Console.WriteLine($\"Event written at {DateTime.Now}\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThe problem: OnEventWritten calls only if I run 'dotnet-counters' tool for this console app.\r\n\r\nCan I subscribe to RuntimeEventSource events from my application to get the statistics it provides?\r\n\r\nI try to run under Windows 10.\r\ndotnet --version\r\n3.0.100\r\n","Url":"https://github.com/dotnet/coreclr/issues/26880","RelatedDescription":"Closed issue \" EventListener does not receive events from RuntimeEventSource until dotnet-counters is explicitly started\" (#26880)"},{"Id":"498085813","IsPullRequest":false,"CreatedAt":"2019-09-25T06:52:20","Actor":"AriNuer","Number":"26879","RawContent":null,"Title":"System.Net.HttpListener.Tests failure in CoreFX","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstress2-jitstressregs: #20190924.1](https://dnceng.visualstudio.com/public/_build/results?buildId=364155)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/5e5765f9-a036-4e33-8a3d-43ba8278921f/workitems/System.Net.HttpListener.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x86\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=0\r\nset COMPlus_JitStress=2\r\nset COMPlus_JitStressRegs=1\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x86 machine.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\5e5765f9-a036-4e33-8a3d-43ba8278921f\\Work\\1dba70ff-0179-46b0-9d11-2f5426d8de38\\Exec>\"C:\\dotnetbuild\\work\\5e5765f9-a036-4e33-8a3d-43ba8278921f\\Payload\\dotnet.exe\" exec --runtimeconfig System.Net.HttpListener.Tests.runtimeconfig.json xunit.console.dll System.Net.HttpListener.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\5e5765f9-a036-4e33-8a3d-43ba8278921f\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Net.HttpListener.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Net.HttpListener.Tests (found 217 of 298 test cases)\r\n  Starting:    System.Net.HttpListener.Tests (parallel test collections = on, max threads = 2)\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.MinSendBytesPerSecond_SetAfterStop_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   10485760\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(332,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.MinSendBytesPerSecond_SetAfterStop_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.EntityBody_SetTimeoutAfterStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(224,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.EntityBody_SetTimeoutAfterStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.EntityBody_SetTimeoutNoStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(213,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.EntityBody_SetTimeoutNoStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.IdleConnection_SetTimeoutNoStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(273,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.IdleConnection_SetTimeoutNoStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.IdleConnection_SetTimeoutAfterStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(283,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.IdleConnection_SetTimeoutAfterStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.DrainEntityBody_SetTimeoutNoStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(189,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.DrainEntityBody_SetTimeoutNoStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.MinSendBytesPerSecond_SetNoStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   10485760\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(298,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.MinSendBytesPerSecond_SetNoStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.HeaderWait_SetTimeoutNoStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(234,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.HeaderWait_SetTimeoutNoStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.MinSendBytesPerSecond_SetAfterStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   10485760\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(308,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.MinSendBytesPerSecond_SetAfterStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.RequestQueue_SetTimeoutNoStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.HeaderWait_SetTimeoutAfterStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(241,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.HeaderWait_SetTimeoutAfterStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.RequestQueue_SetTimeoutAfterStart_GetReturnsNewValue [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 0\r\n      Actual:   300\r\n      Stack Trace:\r\n        /_/src/System.Net.HttpListener/tests/HttpListenerTimeoutManagerTests.cs(262,0): at System.Net.Tests.HttpListenerTimeoutManagerWindowsTests.RequestQueue_SetTimeoutAfterStart_GetReturnsNewValue()\r\n    System.Net.Tests.HttpListenerTimeoutManagerUnixTests.DrainEntityBody_Roundtrips [SKIP]\r\n      Condition(s) not met: \"IsManagedImplementation\"\r\n    System.Net.Tests.HttpListenerTimeoutManagerUnixTests.UnsupportedProperties_Throw [SKIP]\r\n      Condition(s) not met: \"IsManagedImplementation\"\r\n    System.Net.Tests.HttpListenerTimeoutManagerUnixTests.IdleConnection_Roundtrips [SKIP]\r\n      Condition(s) not met: \"IsManagedImplementation\"\r\n    System.Net.Tests.HttpListenerTimeoutManagerUnixTests.Properties_DefaultValues [SKIP]\r\n      Condition(s) not met: \"IsManagedImplementation\"\r\n  Finished:    System.Net.HttpListener.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Net.HttpListener.Tests  Total: 549, Errors: 0, Failed: 12, Skipped: 4, Time: 63.171s\r\n----- end Tue 09/24/2019  8:46:28.65 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26879","RelatedDescription":"Open issue \"System.Net.HttpListener.Tests failure in CoreFX\" (#26879)"},{"Id":"498073213","IsPullRequest":false,"CreatedAt":"2019-09-25T06:21:14","Actor":"kolyana","Number":"26878","RawContent":null,"Title":" Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0","State":"open","Body":"Hello guys, i'm getting this exception when starting to reference netstandard2.0 library(custom) to created from template .netcore3.0 API project.\r\n\r\nCode usage\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Extensions.Logging;\r\nusing Custom.AspNetCore.Builder;\r\n\r\nnamespace WebApplication5\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IHostBuilder CreateHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .ConfigureWebHostDefaults(webBuilder =>\r\n                {\r\n                    webBuilder.UseInfrastructure(\"Test\", \"TestApp\"); // custom library call\r\n                    webBuilder.UseStartup<Startup>();\r\n                });\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\nTarget\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"2.2.5\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Azure.Containers.Tools.Targets\" Version=\"1.9.5\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"D:\\SBTech\\sbtech.aspnetcore.hosting\\src\\SBTech.AspNetCore.Hosting\\SBTech.AspNetCore.Hosting.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nCustom netstandard2.0 lib\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  \r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"App.Metrics.AspNetCore.Mvc\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Abstractions\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.2.7\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Versioning\" Version=\"2.3.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.HealthChecks\" Version=\"1.0.0\" />\r\n    <PackageReference Include=\"Consul\" Version=\"0.7.2.6\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"2.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nException\r\n\r\n```\r\nSystem.AggregateException\r\n  HResult=0x80131500\r\n  Message=Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: Microsoft.AspNetCore.Mvc.Routing.MvcRouteHandler Lifetime: Singleton ImplementationType: Microsoft.AspNetCore.Mvc.Routing.MvcRouteHandler': Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.) (Error while validating the service descriptor 'ServiceType: Microsoft.AspNetCore.Mvc.Routing.MvcAttributeRouteHandler Lifetime: Transient ImplementationType: Microsoft.AspNetCore.Mvc.Routing.MvcAttributeRouteHandler': Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.) (Error while validating the service descriptor 'ServiceType: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector Lifetime: Singleton ImplementationType: Microsoft.AspNetCore.Mvc.Versioning.ApiVersionActionSelector': Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.)\r\n  Source=Microsoft.Extensions.DependencyInjection\r\n  StackTrace:\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)\r\n   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)\r\n   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)\r\n   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\r\n   at Microsoft.Extensions.Hosting.HostBuilder.Build()\r\n   at WebApplication5.Program.Main(String[] args) in C:\\Users\\source\\repos\\WebApplication5\\WebApplication5\\Program.cs:line 17\r\n\r\nInner Exception 1:\r\nInvalidOperationException: Error while validating the service descriptor 'ServiceType: Microsoft.AspNetCore.Mvc.Routing.MvcRouteHandler Lifetime: Singleton ImplementationType: Microsoft.AspNetCore.Mvc.Routing.MvcRouteHandler': Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.\r\n\r\nInner Exception 2:\r\nTypeLoadException: Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/26878","RelatedDescription":"Open issue \" Could not load type 'Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0\" (#26878)"},{"Id":"498007366","IsPullRequest":true,"CreatedAt":"2019-09-25T02:07:04","Actor":"sandreenko","Number":"26876","RawContent":null,"Title":"[WIP] test PR","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26876","RelatedDescription":"Open PR \"[WIP] test PR\" (#26876)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"498655234","IsPullRequest":true,"CreatedAt":"2019-09-26T04:45:18","Actor":"dotnet-maestro[bot]","Number":"12719","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190925.5\r\n- **Date Produced**: 9/26/2019 4:26 AM\r\n- **Commit**: ed48cd2ff86ab59400555a413efc8d7535a45e32\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-rc2.19475.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12719","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12719)"},{"Id":"498554038","IsPullRequest":false,"CreatedAt":"2019-09-26T04:41:38","Actor":"JustArchi","Number":"12716","RawContent":null,"Title":"How do I generate framework-dependent deployments in .Net Core 3.0?","State":"closed","Body":"Hey,\r\n\r\nI'm trying to get pre-3.0 behaviour of `dotnet publish` without specifying runtime to build for, as I want to get a generic `Program.dll` file to run with `dotnet` utility.\r\n\r\nRight now I'm getting framework-dependent executable in above place, which is alright in regards to the **[docs of changes](https://docs.microsoft.com/dotnet/core/deploying/#framework-dependent-executables-fde)**.\r\n\r\nMy question is, how can I generate FDD again? My target use case is publishing that generic `Program.dll` project to run in OS-independent environment, I don't want `Program.exe` bundled there, because it's entirely useless for user running my `Program.dll` e.g. on Linux, and vice-versa, publishing generic build on Linux has entirely useless ELF binary for Windows users.\r\n\r\nIs there any way to tell `dotnet` **NOT** to generate FDE during generic publish? I swear I went through all the docs, manuals and even internal documentation and I could not find a single mention of a switch that allows to do so, it feels like FDE is a direct replacement of FDD and not an option. I wish you can prove me wrong here, because FDE is completely inappropriate for my use case and FDD is everything that I need.\r\n\r\nThank you in advance for answering.","Url":"https://github.com/dotnet/cli/issues/12716","RelatedDescription":"Closed issue \"How do I generate framework-dependent deployments in .Net Core 3.0?\" (#12716)"},{"Id":"498629723","IsPullRequest":true,"CreatedAt":"2019-09-26T03:10:17","Actor":"dotnet-maestro[bot]","Number":"12718","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190925.7\r\n- **Date Produced**: 9/26/2019 1:58 AM\r\n- **Commit**: e24aa3ed525c33a8d356e3f372264e61c5b052e6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19475.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19475.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12718","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12718)"},{"Id":"498612049","IsPullRequest":true,"CreatedAt":"2019-09-26T02:10:17","Actor":"dotnet-maestro[bot]","Number":"12717","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190925.6\r\n- **Date Produced**: 9/26/2019 1:03 AM\r\n- **Commit**: 5fa4772596a1c18d62a179f39704160c7f6dc223\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19475.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19475.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12717","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12717)"},{"Id":"498507323","IsPullRequest":true,"CreatedAt":"2019-09-25T21:05:41","Actor":"dotnet-maestro[bot]","Number":"12715","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190925.5\r\n- **Date Produced**: 9/25/2019 7:20 PM\r\n- **Commit**: 6e9e6063bae350861e7351177abe0174587b63ab\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19475.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19475.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19475.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19475.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19475.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12715","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12715)"},{"Id":"498315103","IsPullRequest":false,"CreatedAt":"2019-09-25T19:47:20","Actor":"mthalman","Number":"12706","RawContent":null,"Title":"dotnet new command says netcoreapp3.1 TFM is not valid","State":"closed","Body":"## Steps to reproduce\r\n1. Install 3.1 SDK from Release/3.1.1XX branch.\r\n2. Run `dotnet new console --framework netcoreapp3.1 --no-restore`\r\n\r\n## Expected  behavior\r\nCreates the project.\r\n\r\n## Actual behavior\r\n```\r\nError: Invalid parameter(s):\r\n--framework netcoreapp3.1\r\n    'netcoreapp3.1' is not a valid value for --framework (Framework).\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014065\r\n Commit:    76a361bbf8\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.1.100-preview1-014065/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19470.9\r\n  Commit:  72b39b0473\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview1-014065 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19473.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19470.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12706","RelatedDescription":"Closed issue \"dotnet new command says netcoreapp3.1 TFM is not valid\" (#12706)"},{"Id":"498432720","IsPullRequest":true,"CreatedAt":"2019-09-25T18:40:49","Actor":"dotnet-maestro[bot]","Number":"12712","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190925.2\r\n- **Date Produced**: 9/25/2019 4:38 PM\r\n- **Commit**: eb6da1426884742a9dedbbfd00820dacc27838c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19475.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19475.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19475.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19475.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19475.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12712","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12712)"},{"Id":"498083206","IsPullRequest":false,"CreatedAt":"2019-09-25T18:25:27","Actor":"elonmallin","Number":"12703","RawContent":null,"Title":"dotnet pack with nuspec doesn't fill in $version$ and other variables","State":"closed","Body":"There seems to be an issue when using a `nuspec` file with `dotnet pack` like `dotnet pack myproject.csproj -p:NuspecFile=myproject.nuspec`. The variables like `$version$` are not filled out.\r\n\r\n## Steps to reproduce\r\n1. Create a .NET Standard 2.0 library project in VS2019.\r\n2. Create a `nuspec` file and put it in the root folder:\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package >\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <owners>$author$</owners>\r\n    <licenseUrl>http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE</licenseUrl>\r\n    <projectUrl>http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE</projectUrl>\r\n    <iconUrl>http://ICON_URL_HERE_OR_DELETE_THIS_LINE</iconUrl>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>$description$</description>\r\n    <releaseNotes></releaseNotes>\r\n    <copyright>Copyright 2019</copyright>\r\n    <tags>$tags$</tags>\r\n    <references>\r\n      <reference file=\"LibraryThatIWantToIncludeAlso.dll\" />\r\n    </references>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"lib\\netstandard2.0\\LibraryThatIWantToIncludeAlso.dll\" target=\"lib\\netstandard2.0\\\" />\r\n  </files>\r\n</package>\r\n```\r\n3. Run `dotnet pack myproject.csproj -p:NuspecFile=myproject.nuspec`.\r\n\r\n## Expected  behavior\r\n`dotnet` packs the project to a nuget package and uses the variables from the `csproj`.\r\n\r\nMy `csproj`:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <!-- Added this manually but still doesn't work, also tried PackageVersion. The other vars were added by default. -->\r\n    <Version>1.0.0</Version>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <Authors>Me</Authors>\r\n    <Company>Me Corp</Company>\r\n    <Product>My library</Product>\r\n    <Description>This is my library.</Description>\r\n    <PackageTags>MyLib</PackageTags>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Reference Include=\"My3rdPartyApi\">\r\n      <HintPath>lib\\netstandard2.0\\My3rdPartyApi.dll</HintPath>\r\n      <Private>true</Private>\r\n    </Reference>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n## Actual behavior\r\n```console\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error : An error occured while trying to parse the value '' of property 'version' in the manifest file. [C:\\Users\\me\\myproject.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error :   Value cannot be null or an empty string. [C:\\Users\\me\\myproject.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.401\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(198,5): error :   Parameter name: value [C:\\Users\\me\\myproject.csproj]\r\n```\r\n\r\n## Additional info\r\nIf I use `nuget pack myproject.csproj` it will automatically find the `nuspec` file and use it as well and fill out the `$version$` and other variables.\r\n\r\nI would expect `dotnet pack` to be able to behave similarly.\r\n\r\nActually the only reason I'm using a `nuspec` file is because I want to include a 3rd party DLL in my package which my library wraps. But this doesn't seem possible without a `nuspec` file?\r\n\r\n## Environment data\r\n<details>\r\n<summary><strong>.NET Core SDK (reflecting any global.json):</strong>\r\n</summary>\r\n\r\n```console\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  1.1.6 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.9 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.11 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12703","RelatedDescription":"Closed issue \"dotnet pack with nuspec doesn't fill in $version$ and other variables\" (#12703)"},{"Id":"498421257","IsPullRequest":true,"CreatedAt":"2019-09-25T18:15:52","Actor":"dotnet-maestro[bot]","Number":"12711","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190925.14\r\n- **Date Produced**: 9/25/2019 4:45 PM\r\n- **Commit**: f3b70774443dd39f9b96bbcc59cf7c8a6c7a8858\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-rc2.19475.14\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12711","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12711)"},{"Id":"498444312","IsPullRequest":false,"CreatedAt":"2019-09-25T18:13:58","Actor":"dagood","Number":"12713","RawContent":null,"Title":"\"dotnet new -l\" using a 3.1.100 preview SDK welcomes me to .NET Core 3.0 instead","State":"open","Body":"(Copying from mail) Encountered by scenario testing on .NET Core 3.1.100-preview1-014066 SDK:\r\n\r\n![welcome](https://user-images.githubusercontent.com/12819531/65627984-1e6c1900-df96-11e9-92f6-756a8ef87408.png)\r\n\r\nIt looks like this string controls it:\r\n\r\nhttps://github.com/dotnet/cli/blob/5dd9784ad7f75ee4ebd74f7a177667470c9ec36e/src/Microsoft.DotNet.Configurer/LocalizableStrings.resx#L121\r\n","Url":"https://github.com/dotnet/cli/issues/12713","RelatedDescription":"Open issue \"\"dotnet new -l\" using a 3.1.100 preview SDK welcomes me to .NET Core 3.0 instead\" (#12713)"},{"Id":"498400598","IsPullRequest":true,"CreatedAt":"2019-09-25T17:35:52","Actor":"dotnet-maestro[bot]","Number":"12708","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190925.1\r\n- **Date Produced**: 9/25/2019 4:23 PM\r\n- **Commit**: 440c9d62ccca2793c8b2477dde6d85f8826e6eeb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-preview1.19475.1\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12708","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#12708)"},{"Id":"498403026","IsPullRequest":true,"CreatedAt":"2019-09-25T17:20:41","Actor":"dotnet-maestro[bot]","Number":"12710","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190925.2\r\n- **Date Produced**: 9/25/2019 4:25 PM\r\n- **Commit**: bf9d79d8a0480e569712839b8b8d38bfbf14ea37\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19475.2\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12710","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#12710)"},{"Id":"498400872","IsPullRequest":true,"CreatedAt":"2019-09-25T16:40:51","Actor":"dotnet-maestro[bot]","Number":"12709","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12709","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#12709)"},{"Id":"498393507","IsPullRequest":true,"CreatedAt":"2019-09-25T16:25:50","Actor":"dotnet-maestro[bot]","Number":"12707","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12707","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#12707)"},{"Id":"498222850","IsPullRequest":false,"CreatedAt":"2019-09-25T11:26:18","Actor":"MarcoRossignoli","Number":"12705","RawContent":null,"Title":"Copy dll from global‑packages to output","State":"open","Body":"Hi I'm Marco from coverlet https://github.com/tonerdo/coverlet\r\n\r\nWe have an issue with instrumentation through cecil, I'll explain what's happen.\r\nCoverlet is usable through 3 drivers, msbuild, dotnet tool and vstest collectors, and it works for full and core .NET\r\nAfter a user fire the test command with coverage enabled coverlet instrument needed assemblies.\r\nTo do that we use Mono.Cecil.\r\nMono.Cecil sometimes need to load referenced assemblies, but it fails to load transitive reference(for instance testing apps that uses`Microsoft.Extensions.Logging.Abstractions`)\r\nDefault cecil resolver does not resolve from global-packages location.\r\nOne solution users try is to reference missed dll in csproj, but it doesn't work because there is no way to \"copy PackageReference dll to output folder\", i.e. on test project:\r\n```xml\r\n   ...\r\n   <PackageReference Include=\"Microsoft.Extensions.Logging.Abstractions\" Version=\"2.2.0\" />\r\n   ...\r\n```\r\nNow my question: is there a way to force the copy of `PackageReference` dll on output folder?\r\nAnother approach I'm testing is to resolve reference [by myself on custom resolver](https://github.com/tonerdo/coverlet/compare/master...MarcoRossignoli:globakpackagesload)(with one of our user case it works)...but I think's it not possible, because for instance with dotnet tool I'll instrument always with \"dotnet core runtime\" but I could test full framework app, so I'll load incorrect dll...again with multitarget libs it's a hell, because we need to implement all loading rule with runtime/version matrix.\r\n\r\nCurrent workaround is manual copy dll on output folder.\r\nCoverlet reference issue https://github.com/tonerdo/coverlet/issues/560\r\n\r\ncc: @tonerdo","Url":"https://github.com/dotnet/cli/issues/12705","RelatedDescription":"Open issue \"Copy dll from global‑packages to output\" (#12705)"},{"Id":"498136709","IsPullRequest":false,"CreatedAt":"2019-09-25T08:40:32","Actor":"Trolldemorted","Number":"12704","RawContent":null,"Title":"PublishTrimmed trims too much (Could not load type 'System.Text.Json.JsonSerializer')","State":"open","Body":"## Steps to reproduce\r\n- checkout https://github.com/VncDotnet/VncMatrix/tree/66fa86b446d2302ac4ae48723f8730e00dc720bd\r\n- run  `dotnet publish -r win-x64 -c Debug /p:PublishSingleFile=true /p:PublishTrimmed=true --self-contained`\r\n- run the built binary: `C:\\Users\\Benni\\repositories\\VncMatrix\\VncMatrix\\bin\\Debug\\netcoreapp3.0\\win-x64\\publish>VncMatrix.exe`\r\n\r\n## Expected  behavior\r\nThe program starts successfully.\r\n\r\n## Actual behavior\r\n![grafik](https://user-images.githubusercontent.com/10261186/65583916-5d8f6f80-df80-11e9-83c4-5952e2c5e44f.png)\r\n\r\nNote that this window only appears if you run the binary from a console - if I doubleclick it in an explorer window, the process exits without displaying that error window. Is that intended or a seperate bug? Shouldn't it be the other way round?\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nPS C:\\Users\\Benni\\repositories\\VncMatrix\\VncMatrix> dotnet --info                                                                                                                                                                                                               .NET Core SDK (gemäß \"global.json\"):                                                                                                                                                                                                                                             Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview9-014004 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12704","RelatedDescription":"Open issue \"PublishTrimmed trims too much (Could not load type 'System.Text.Json.JsonSerializer')\" (#12704)"},{"Id":"497978403","IsPullRequest":false,"CreatedAt":"2019-09-24T23:57:53","Actor":"javadparvaresh","Number":"12702","RawContent":null,"Title":"dotnet build failed exit code","State":"open","Body":"## Steps to reproduce\r\nWhen `dotnet build` fails with error, it doesn't return `-1` exit code and also it prints out Build succeeded`.\r\nin previous  version when one of projects failed to build all build process was failing. \r\n\r\n## Expected  behavior\r\nWhen one or more project fails to build, it should return `-1` exit code.\r\n\r\n## Actual behavior\r\nWhen one or more project fails to build, it returns success exit code.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12702","RelatedDescription":"Open issue \"dotnet build failed exit code\" (#12702)"},{"Id":"497970601","IsPullRequest":false,"CreatedAt":"2019-09-24T23:47:31","Actor":"Kinematics","Number":"12701","RawContent":null,"Title":"Package dependency directory has changed since preview","State":"closed","Body":"## Steps to reproduce\r\nBuild project with any of various Microsoft.Extensions.XYZ packages (eg: Microsoft.Extensions.Configuration) using .NET Core 3.0 release.\r\n\r\n## Actual behavior\r\n\r\nThe `Appname.deps.json` file that is produced on build points to reference directories such as \"lib/**netcoreapp3.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\n## Expected  behavior\r\n\r\nPreviously, when using preview builds of .NET Core 3, and also what I would normally expect, the `.deps.json` file that is produced on build pointed to reference directories such as \"lib/**netstandard2.0**/Microsoft.Extensions.Configuration.dll\".\r\n\r\nIf I check in the packages repository on my drive, there are subdirectories for both `netstandard2.0` and `netcoreapp3.0`.  Since these extensions are just .dll libraries, and not full apps, I would expect the dependencies to be referenced using netstandard rather than netcoreapp.  If there are dependencies on anything that is netstandard2.1 dependent (corresponding to netcoreapp3.0), I would expect a netstandard2.1 subdirectory to be used instead.\r\n\r\nThis introduces uncertainty regarding usage and accessibility of dependency files, since some other packages still point to `netstandard2.0` directories.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12701","RelatedDescription":"Closed issue \"Package dependency directory has changed since preview\" (#12701)"},{"Id":"497956733","IsPullRequest":true,"CreatedAt":"2019-09-24T23:11:37","Actor":"dotnet-maestro[bot]","Number":"12700","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190919.1\r\n- **Date Produced**: 9/24/2019 10:10 PM\r\n- **Commit**: 902380600200731914d936fca50b60e3e06dcb16\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19469.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12700","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12700)"},{"Id":"497906057","IsPullRequest":false,"CreatedAt":"2019-09-24T20:25:12","Actor":"javadparvaresh","Number":"12699","RawContent":null,"Title":"`dotnet run` fails to restore packages run application outside of the project directory","State":"open","Body":"## Steps to reproduce\r\nMy solution structure is something like this:\r\n\r\n```\r\n+ solution.sln\r\n+ src\r\n- - + Project1\r\n- - - + project1.csproj\r\n- - + Project2\r\n- - - + project2.csproj\r\n```\r\n\r\n> The `Project1` has referenced by `Project2`.\r\n\r\nI tried to execute `dotnet run  --project=$PWD/src/Project1/project1.csproj` but it seems in restore process, The paths can't resolve properly and it returns `error CS0012`, but if i run the command inside project2 it will work perfectly.\r\n\r\n\r\n## Expected  behavior\r\nby running `dotnet run --project=$PWD/src/project2/project2.csproj` it should restore dependencies, build and run the project.\r\n\r\n## Actual behavior\r\nby running `dotnet run --project=$PWD/src/project2/project2.csproj` it throw errors which the dependencies not found.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12699","RelatedDescription":"Open issue \"`dotnet run` fails to restore packages run application outside of the project directory\" (#12699)"},{"Id":"497842206","IsPullRequest":true,"CreatedAt":"2019-09-24T18:40:22","Actor":"dotnet-maestro[bot]","Number":"12698","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190918.1\r\n- **Date Produced**: 9/18/2019 7:40 PM\r\n- **Commit**: 744d7099d35de3a556e12088c6a829dcaebc3432\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview1.19468.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12698","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12698)"},{"Id":"497828033","IsPullRequest":true,"CreatedAt":"2019-09-24T18:10:40","Actor":"dotnet-maestro[bot]","Number":"12697","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190924.1\r\n- **Date Produced**: 9/24/2019 4:18 PM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19474.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12697","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12697)"},{"Id":"497817953","IsPullRequest":false,"CreatedAt":"2019-09-24T17:14:21","Actor":"mkArtakMSFT","Number":"12696","RawContent":null,"Title":"dotnet publish (3.0)","State":"open","Body":"_From @pranavkm on Monday, September 23, 2019 6:04:07 PM_\r\n\r\n_From @zygimantas on Monday, September 23, 2019 5:46:20 PM_\r\n\r\n\r\n[Enter feedback here]\r\n\r\n.NET 3.0 breaking change - I had to change after upgrade from 2.2 to 3.0:\r\n\r\n`dotnet publish --configuration=Release --no-restore --output=../../dist src/Website`\r\n\r\nto\r\n\r\n`dotnet publish --configuration=Release --no-restore --output=dist src/Website`\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 76f39eec-9dd1-6167-56ec-47b26e0b5063\r\n* Version Independent ID: f9f2b0f3-01eb-cf58-8767-194fe0fc0e44\r\n* Content: [Migrate from ASP.NET Core 2.2 to 3.0 Preview](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-3.0&tabs=visual-studio#feedback)\r\n* Content Source: [aspnetcore/migration/22-to-30.md](https://github.com/aspnet/AspNetCore.Docs/blob/master/aspnetcore/migration/22-to-30.md)\r\n* Product: **aspnet-core**\r\n* Technology: **aspnetcore-migration**\r\n* GitHub Login: @Rick-Anderson\r\n* Microsoft Alias: **riande**\r\n\r\n_Copied from original issue: aspnet/AspNetCore.Docs#14494_\r\n\r\n_Copied from original issue: aspnet/AspNetCore#14262_","Url":"https://github.com/dotnet/cli/issues/12696","RelatedDescription":"Open issue \"dotnet publish (3.0)\" (#12696)"},{"Id":"497689648","IsPullRequest":false,"CreatedAt":"2019-09-24T15:53:56","Actor":"RobSwDev","Number":"12693","RawContent":null,"Title":"dotnet tools and runtime versions","State":"closed","Body":"## Steps to reproduce\r\nWe are using sgen to generate Xml Serialization assemblies. We've started to use the dotnet tool [microsoft.xmlserializer.generator](https://www.nuget.org/packages/Microsoft.XmlSerializer.Generator/2.1.0).  This worked initially. However, after installing net core 3.0, it stopped working on some machines, while continuing to work on others.\r\n\r\nThe issue *seems* to be this:\r\nThe tool asks for runtime 2.1.0\r\nIf that runtime does not exist, it will roll forward to the first available 2.1.x or 2.2.x\r\nHowever, once we installed net core 3 sdk, the \"roll forward\" behaviour is disabled. \r\nAfter this, it seems to choose the lowest 2.x.\r\n\r\nOn my machine, my earliest 2.x is 2.1.6, which works.\r\nOn other build machines that have runtime 2.0.9, it fails.\r\nI can get it to work on these machines by removing the 2.0.9 runtime, so that the lowest 2.x is > 2.1.\r\n\r\nThe tool fails with\r\n`Method 'System.Xml.Serialization.XmlSerializer.GenerateSerializer' was not found. This is likely because you are using an older version of the framework. Please update to .NET Core v2.1 or later.`\r\n\r\nOutput from the tool diagnostics:\r\n```\r\nPackagedCommandSpecFactory: Looking for prefercliruntime file at `C:\\Users\\user\\.nuget\\packages\\microsoft.xmlserializer.generator\\2.1.0\\lib\\netstandard2.0\\..\\..\\prefercliruntime`\r\nPackagedCommandSpecFactory: Ignoring prefercliruntime file as the tool target framework (2.0.0) has a different major version than the current CLI runtime (3.0.0-preview8-28405-07)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12693","RelatedDescription":"Closed issue \"dotnet tools and runtime versions\" (#12693)"},{"Id":"497691855","IsPullRequest":false,"CreatedAt":"2019-09-24T15:50:09","Actor":"javadparvaresh","Number":"12694","RawContent":null,"Title":"Terminal Freezes for a seconds on boot","State":"closed","Body":"## Steps to reproduce\r\nUbuntu 18\r\nTerminator : \r\ndotnet-cli version : 3.0.100\r\n\r\n## Expected  behavior\r\nTerminal freezes after for about 10 seconds until application booted and started working \r\n\r\n## Actual behavior\r\nAs soon as you call `dotnet run` command, it freezes terminal for a seconds until firs log prints out, then it start working\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12694","RelatedDescription":"Closed issue \"Terminal Freezes for a seconds on boot\" (#12694)"},{"Id":"497763032","IsPullRequest":false,"CreatedAt":"2019-09-24T15:28:36","Actor":"javadparvaresh","Number":"12695","RawContent":null,"Title":"`Project cannot be packaged` warning even when `<IsPackable>true</IsPackable>` in project file has defined","State":"open","Body":"## Steps to reproduce\r\nI have a `netcoreapp2.2` project which i'm trying to build by using `dotnet (3.0.100)` getting the `warning` for `warning : This project cannot be packaged because packaging has been disabled. Add <IsPackable>true</IsPackable> to the project file to enable producing a package from this project.`\r\n\r\n\r\n## Expected  behavior\r\nIgnore projects which has defined `<IsPackable>true</IsPackable>`.\r\n\r\n## Actual behavior\r\nNow cli prints out a warning which should not.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [/usr/share/dotnet/sdk]\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.103 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12695","RelatedDescription":"Open issue \"`Project cannot be packaged` warning even when `<IsPackable>true</IsPackable>` in project file has defined\" (#12695)"},{"Id":"497242401","IsPullRequest":false,"CreatedAt":"2019-09-23T19:22:29","Actor":"Zanadar","Number":"12692","RawContent":null,"Title":"Please publish SDK 3.0.100+dependencies","State":"closed","Body":"Hello! \r\nVery excited about this new release. Congrats!\r\nWhen you get a chance can we get a `+dependencies` release, please? \r\nThanks you.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12692","RelatedDescription":"Closed issue \"Please publish SDK 3.0.100+dependencies\" (#12692)"},{"Id":"497239994","IsPullRequest":true,"CreatedAt":"2019-09-23T17:52:25","Actor":"am11","Number":"12691","RawContent":null,"Title":"Update manpages using dockerized pandoc tool","State":"open","Body":"Using `run_docker.sh` and fixes from https://github.com/dotnet/cli/pull/12690.\r\n","Url":"https://github.com/dotnet/cli/pull/12691","RelatedDescription":"Open PR \"Update manpages using dockerized pandoc tool\" (#12691)"},{"Id":"497235172","IsPullRequest":true,"CreatedAt":"2019-09-23T17:41:26","Actor":"am11","Number":"12690","RawContent":null,"Title":"Add Dockerfile for manpage tool and fixes","State":"open","Body":"* Simplify usage with docker: `run_docker.sh`\r\n* Add support for git to acquire dotnet/docs repo\r\n* Fix bug in `remove_references` filter which was throwing on processing `dotnet-test.md`\r\n  * filter breaks with this pattern: ``[some `code`](/path)``\r\n  * change filter to return nested AST generated array as is (without next sibling, which is path)\r\n    to fulfill its purpose\r\n\r\n---\r\n\r\nI will send separate PR for manpage update.","Url":"https://github.com/dotnet/cli/pull/12690","RelatedDescription":"Open PR \"Add Dockerfile for manpage tool and fixes\" (#12690)"},{"Id":"498496832","IsPullRequest":false,"CreatedAt":"2019-09-20T14:40:14","Actor":"FinexTech","Number":"12714","RawContent":null,"Title":"output parameter for command \"dotnet publish\" works wrong ","State":"open","Body":"We use dotnet version '3.0.100-rc1-014190'.\r\nDocumentation for output parameter states: ' If the path is relative, the output directory generated is relative to the project file location, not to the current working directory.'\r\nTo publish application we use next command: 'dotnet publish -r linux-musl-x64 -c \"Release\" --self-contained=false -o \"out\"  PATH_TO_SOLUTION'\r\nPublish result of all projects is copied into folder relative to the working directory.\r\nPrevious dotnet version creates out folders relative to project file locations.\r\nIs it expected behavior?\r\nThanks.\r\n","Url":"https://github.com/dotnet/cli/issues/12714","RelatedDescription":"Open issue \"output parameter for command \"dotnet publish\" works wrong \" (#12714)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"498433598","IsPullRequest":true,"CreatedAt":"2019-09-25T17:52:05","Actor":"mmitche","Number":"1575","RawContent":null,"Title":"Update to non prerelease","State":"open","Body":"","Url":"https://github.com/dotnet/standard/pull/1575","RelatedDescription":"Open PR \"Update to non prerelease\" (#1575)"},{"Id":"498397654","IsPullRequest":true,"CreatedAt":"2019-09-25T16:34:10","Actor":"dotnet-maestro[bot]","Number":"1574","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1574","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1574)"},{"Id":"498249739","IsPullRequest":true,"CreatedAt":"2019-09-25T12:30:34","Actor":"dotnet-maestro[bot]","Number":"1573","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 7:06 PM\r\n- **Commit**: da147ece700c2502b91e57d99213feadcfb9c1f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19474.3\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19474.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1573","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1573)"},{"Id":"498239365","IsPullRequest":true,"CreatedAt":"2019-09-25T12:10:59","Actor":"dotnet-maestro[bot]","Number":"1572","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:15 AM\r\n- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19473.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1572","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1572)"},{"Id":"498151562","IsPullRequest":false,"CreatedAt":"2019-09-25T09:07:45","Actor":"NicolasDorier","Number":"1571","RawContent":null,"Title":"Github does not render the diff files of netstandard2.1 correctly","State":"open","Body":"In the [diff for netstandard2.1](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.1_diff.md), Github is showing `(Sorry about that, but we can’t show files that are this big right now.)` instead of a nicely formatted diff.\r\n\r\nProposed workaround:\r\n\r\n* Ping the github team to increase the limit\r\n* Send the dotnet team in holiday during the development of netstandard2.2 so the diff file get smaller.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1571","RelatedDescription":"Open issue \"Github does not render the diff files of netstandard2.1 correctly\" (#1571)"},{"Id":"497649559","IsPullRequest":true,"CreatedAt":"2019-09-24T12:24:38","Actor":"dotnet-maestro[bot]","Number":"1570","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190923.4\r\n- **Date Produced**: 9/23/2019 10:04 PM\r\n- **Commit**: 485441f79ead7878af206a6af61a300e1458616a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19473.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19473.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1570)"},{"Id":"497622081","IsPullRequest":false,"CreatedAt":"2019-09-24T11:15:45","Actor":"GammaFour","Number":"1569","RawContent":null,"Title":"Massive problems with no support of UWP in .NET Standard 2.1","State":"open","Body":"How can you release .NET Standard 2.1 and not support UWP. I made the mistake of upgrading my NuGet packages yesterday to the recommended versions and I've been untangling this mess ever since. My server code wants to be .NET Standard 2.1. So I go through and retarget all my common libraries only to find that I've screwed the pooch on my UWP client. This is seriously a big miss.","Url":"https://github.com/dotnet/standard/issues/1569","RelatedDescription":"Open issue \"Massive problems with no support of UWP in .NET Standard 2.1\" (#1569)"},{"Id":"497566465","IsPullRequest":false,"CreatedAt":"2019-09-24T09:24:09","Actor":"nikolay-dimitrov","Number":"1568","RawContent":null,"Title":"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found","State":"open","Body":"I have custom method over DbContext(EF 6.3) with class library targeting .NET Framework 4.7.1\r\nIm trying to migrate to .NET Standart 2.1 but into the both cases i got this error when im calling the method above from any places(the example is calling from .NET Standart 2.1 library with installed EF 6.3)\r\n\r\n    public static async Task<IList<T>> SqlQueryAsync<T>(this DbContext db, CommandType type, string sql, List<SqlParameter> parameters) where T : new()\r\n        {\r\n            var conn = db.Database.Connection.State;\r\n\r\n            if (conn == ConnectionState.Closed)\r\n                await db.Database.Connection.OpenAsync();\r\n            using (var command =  db.Database.Connection.CreateCommand())\r\n            {\r\n                command.CommandText = sql;\r\n                command.CommandType = type;\r\n                if (parameters != null && parameters.Count() > 0)\r\n                {\r\n                    foreach (var item in parameters)\r\n                    {\r\n                        DbParameter p = command.CreateParameter();\r\n                        p.DbType = item.DbType;\r\n                        p.ParameterName = item.ParameterName;\r\n                        p.Value = item.Value;\r\n                        command.Parameters.Add(p);\r\n                    }\r\n                }\r\n                var propts = typeof(T).GetProperties();\r\n                var rtnList = new List<T>();\r\n                T model;\r\n                object val;\r\n                using (var reader = await command.ExecuteReaderAsync())\r\n                {\r\n                    while (await reader.ReadAsync())\r\n                    {\r\n                        model = new T();\r\n                        foreach (var l in propts)\r\n                        {\r\n\r\n                            if (Enumerable.Range(0, reader.FieldCount).Any(i => string.Equals(reader.GetName(i), l.Name, StringComparison.OrdinalIgnoreCase)))\r\n                            {\r\n                                val = reader[l.Name];\r\n                                if (val == DBNull.Value)\r\n                                    l.SetValue(model, null);\r\n                                else\r\n                                    l.SetValue(model, val);\r\n                            }\r\n                            \r\n                        }\r\n                        rtnList.Add(model);\r\n                    }\r\n                }\r\n                return rtnList;\r\n            }\r\n        }\r\n\r\nI found simular issue https://github.com/dotnet/corefx/issues/27247# but the proposals there do not resolve the error","Url":"https://github.com/dotnet/standard/issues/1568","RelatedDescription":"Open issue \"Reference to type 'SqlParameter' claims it is defined in 'System.Data', but it could not be found\" (#1568)"},{"Id":"497516549","IsPullRequest":false,"CreatedAt":"2019-09-24T07:46:11","Actor":"YZahringer","Number":"1567","RawContent":null,"Title":".NET Standard 2.1 support on Universal Windows Platform","State":"open","Body":"Regarding the support of `.NET Standard 2.1` in UWP projects, it is written that it will be supported in the upcoming version.\r\n\r\nThis means that there will be the same problem as with the `.NET Standard 2.0` version and that we will not be able to target older versions of Windows 10? `.NET Standard 2.0` requires as min target version Windows 10 Fall Creators Update `16299`.\r\n\r\nThis is a big problem for my projects and backward compatibility. I can't remove support for older versions of Windows 10, especially `LTSC` editions. This means that my projects are blocked in `.NET Standard 1.4` and it also blocks any dependency updates:\r\n- `Xamarin.Forms 2.5` because version `>=3.0` requires `.NET Standard 2.0`\r\n- `Microsoft.EntityFrameworkCore 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n- `.NET Core 1.1` because version `>=2.0` requires `.NET Standard 2.0`\r\n\r\nI can't ask my users to have the latest version installed, especially in business applications and Windows `LTSC` editions. I have to wait several years before removing the support of an old version.\r\n\r\nIs it planned to continue support the min target version `16299` of UWP projects with `.NET Standard 2.1`? I understand the constraints, but with Xcode I can still min target `iOS 7` and with Android I can still min target `4.4 KitKat`, still with the latest version of frameworks. And with Windows I can only support the latest version? That doesn't make much sense.","Url":"https://github.com/dotnet/standard/issues/1567","RelatedDescription":"Open issue \".NET Standard 2.1 support on Universal Windows Platform\" (#1567)"},{"Id":"497453537","IsPullRequest":false,"CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Number":"1566","RawContent":null,"Title":"Grpc .net client issue with .NET Core and .NET standard (2.0)","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566)"},{"Id":"497424795","IsPullRequest":false,"CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Number":"1565","RawContent":null,"Title":"Where to download the netstandard.dll 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Open issue \"Where to download the netstandard.dll 2.1?\" (#1565)"},{"Id":"497309683","IsPullRequest":true,"CreatedAt":"2019-09-23T20:25:00","Actor":"terrajobst","Number":"1564","RawContent":null,"Title":"Ns21 summary","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Closed or merged PR \"Ns21 summary\" (#1564)"},{"Id":"497303937","IsPullRequest":true,"CreatedAt":"2019-09-23T20:15:45","Actor":"terrajobst","Number":"1563","RawContent":null,"Title":"Update diffs to final product","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Closed or merged PR \"Update diffs to final product\" (#1563)"},{"Id":"497024033","IsPullRequest":false,"CreatedAt":"2019-09-23T10:49:00","Actor":"yb199478","Number":"1562","RawContent":null,"Title":"Is it possible to add a method that kills the process tree?","State":"open","Body":".Net standard does not provide any method to kill a process tree.","Url":"https://github.com/dotnet/standard/issues/1562","RelatedDescription":"Open issue \"Is it possible to add a method that kills the process tree?\" (#1562)"},{"Id":"496771346","IsPullRequest":true,"CreatedAt":"2019-09-22T12:23:49","Actor":"dotnet-maestro[bot]","Number":"1561","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1561)"},{"Id":"496650404","IsPullRequest":true,"CreatedAt":"2019-09-21T12:33:22","Actor":"dotnet-maestro[bot]","Number":"1560","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 4:58 PM\r\n- **Commit**: 0286bce5fd360207ca707fe7024248be428cf0e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1560","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1560)"},{"Id":"496648540","IsPullRequest":true,"CreatedAt":"2019-09-21T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1559","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1559","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1559)"},{"Id":"496322557","IsPullRequest":true,"CreatedAt":"2019-09-20T12:34:19","Actor":"dotnet-maestro[bot]","Number":"1558","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1558)"},{"Id":"496312709","IsPullRequest":true,"CreatedAt":"2019-09-20T12:11:37","Actor":"dotnet-maestro[bot]","Number":"1557","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1557)"},{"Id":"496006418","IsPullRequest":true,"CreatedAt":"2019-09-19T20:28:51","Actor":"dotnet-maestro[bot]","Number":"1556","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1556)"},{"Id":"495468017","IsPullRequest":false,"CreatedAt":"2019-09-19T14:08:45","Actor":"mstoffel-infraserv","Number":"1553","RawContent":null,"Title":"Regex Match Hangs forever","State":"closed","Body":"During processing with one of our applications we ran into an issue with Regex Match method hanging forever with a specific regular expression and specific text. See attached code for details.\r\n[BadRegex.zip](https://github.com/dotnet/standard/files/3628478/BadRegex.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1553","RelatedDescription":"Closed issue \"Regex Match Hangs forever\" (#1553)"},{"Id":"495764912","IsPullRequest":true,"CreatedAt":"2019-09-19T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1555","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1555)"},{"Id":"495754976","IsPullRequest":true,"CreatedAt":"2019-09-19T12:21:51","Actor":"dotnet-maestro[bot]","Number":"1554","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 8:56 PM\r\n- **Commit**: a28ee518026d2c5d477472f44d391cf9379fc7cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19468.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1554","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1554)"},{"Id":"495184946","IsPullRequest":true,"CreatedAt":"2019-09-18T12:19:39","Actor":"dotnet-maestro[bot]","Number":"1552","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190917.6\r\n- **Date Produced**: 9/18/2019 3:17 AM\r\n- **Commit**: 4ca1feeeb484e8a7089ce8a9d377703ad5b8a53e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19467.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1552","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1552)"},{"Id":"494584582","IsPullRequest":true,"CreatedAt":"2019-09-17T12:26:25","Actor":"dotnet-maestro[bot]","Number":"1551","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190916.8\r\n- **Date Produced**: 9/17/2019 7:53 AM\r\n- **Commit**: 4aea703673e942756c02b222e6b5babaf8612a25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19466.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1551","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1551)"},{"Id":"494010485","IsPullRequest":true,"CreatedAt":"2019-09-16T12:21:02","Actor":"dotnet-maestro[bot]","Number":"1550","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190915.2\r\n- **Date Produced**: 9/15/2019 6:42 PM\r\n- **Commit**: e8efb815275c8323fedc950ca3596474fa5e23c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19465.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1550","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1550)"},{"Id":"493907721","IsPullRequest":false,"CreatedAt":"2019-09-16T08:19:30","Actor":"HamidTheGeek","Number":"1549","RawContent":null,"Title":"SqlParameter.DbType is set to Datetime when I am setting it to Time","State":"open","Body":"It seems like an intentional behavior but I don't get the reason. \r\n\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nConsole.WriteLine(param.DbType.ToString());\r\n```\r\n`DateTime` will be printed in the console. Therefore, the following value would be `false`.\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nvar value = param.DbType == DbType.Time;\r\n```\r\n\r\nI have tested this in `netstandard2.0`.","Url":"https://github.com/dotnet/standard/issues/1549","RelatedDescription":"Open issue \"SqlParameter.DbType is set to Datetime when I am setting it to Time\" (#1549)"},{"Id":"493730129","IsPullRequest":true,"CreatedAt":"2019-09-15T12:21:32","Actor":"dotnet-maestro[bot]","Number":"1548","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190914.4\r\n- **Date Produced**: 9/15/2019 5:48 AM\r\n- **Commit**: cbcc2a5e6f8be1e43b16874ed358c18c5d6bcd5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19464.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1548","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1548)"},{"Id":"493617725","IsPullRequest":true,"CreatedAt":"2019-09-14T12:32:41","Actor":"dotnet-maestro[bot]","Number":"1547","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190913.7\r\n- **Date Produced**: 9/14/2019 3:54 AM\r\n- **Commit**: f07730eedb1f7e2cb5e178d988bc2255f7ce7021\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19463.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1547","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1547)"},{"Id":"493616084","IsPullRequest":true,"CreatedAt":"2019-09-14T12:11:29","Actor":"dotnet-maestro[bot]","Number":"1546","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.3\r\n- **Date Produced**: 9/13/2019 11:47 PM\r\n- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19463.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1546","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1546)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"498660442","IsPullRequest":true,"CreatedAt":"2019-09-26T05:03:51","Actor":"Dotnet-GitSync-Bot","Number":"41340","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corefx/pull/41340","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#41340)"},{"Id":"498590253","IsPullRequest":true,"CreatedAt":"2019-09-26T04:59:40","Actor":"Dotnet-GitSync-Bot","Number":"41336","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corefx/pull/41336","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#41336)"},{"Id":"498517814","IsPullRequest":true,"CreatedAt":"2019-09-26T04:53:39","Actor":"ViktorHofer","Number":"41328","RawContent":null,"Title":"Add Español Windows 19H1 queue in PRs","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/41328","RelatedDescription":"Closed or merged PR \"Add Español Windows 19H1 queue in PRs\" (#41328)"},{"Id":"498641933","IsPullRequest":false,"CreatedAt":"2019-09-26T03:54:30","Actor":"weidongxu-microsoft","Number":"41339","RawContent":null,"Title":"SendAsync method of System.Net.Http.HttpClient behaves differently on .NET Framework and .NET Core for a response with Content-Location header","State":"open","Body":"Sample code to reproduce (ask for a response with **Content-Location** header):\r\n\r\n```\r\n            HttpClient httpClient = new HttpClient();\r\n            HttpRequestMessage request = new HttpRequestMessage()\r\n            {\r\n                Method = HttpMethod.Post,\r\n                RequestUri = new Uri(\"https://httpbin.org/response-headers?Content-Location=https%3A%2F%2Ffoo\")\r\n            };\r\n            Console.WriteLine(\"before httpClient.SendAsync: \" + request.RequestUri);\r\n            var response = httpClient.SendAsync(request);\r\n            response.Wait();\r\n            Console.WriteLine(\"after httpClient.SendAsync: \" + request.RequestUri);\r\n```\r\n\r\nOn .NET Framework (4.6.1 or 4.8), output is:\r\n\r\n```\r\nbefore httpClient.SendAsync: https://httpbin.org/response-headers?Content-Location=https%3A%2F%2Ffoo\r\nafter httpClient.SendAsync: https://foo/\r\n```\r\n\r\nOn .NET Core (2.1 or 2.2), output is:\r\n\r\n```\r\nbefore httpClient.SendAsync: https://httpbin.org/response-headers?Content-Location=https%3A%2F%2Ffoo\r\nafter httpClient.SendAsync: https://httpbin.org/response-headers?Content-Location=https%3A%2F%2Ffoo\r\n```\r\n\r\nIn realworld we are using PUT, instead of POST as in sample code, anyway got same behaviour.\r\n\r\nI am not sure which is the expected behaviour, but IMO SendAsync method should not modify input parameter, at least not for Content-Location in PUT/POST, which is not defined in RFC 2616.","Url":"https://github.com/dotnet/corefx/issues/41339","RelatedDescription":"Open issue \"SendAsync method of System.Net.Http.HttpClient behaves differently on .NET Framework and .NET Core for a response with Content-Location header\" (#41339)"},{"Id":"498625382","IsPullRequest":false,"CreatedAt":"2019-09-26T02:55:34","Actor":"douglasg14b","Number":"41338","RawContent":null,"Title":"JSON Serialization Name Collision with hidden properties","State":"open","Body":"Take Two Classes:\r\n\r\n```cs\r\npublic class ClassA\r\n{\r\n    public List<int> SomeList { get; set; }\r\n}\r\n\r\npublic class ClassB : ClassA\r\n{\r\n    new public IEnumerable<int> SomeList { get; set; }\r\n}\r\n```\r\n\r\nIf `ClassB` is serialized an exception is thrown:\r\n\r\n>The JSON property name for 'ClassB.SomeList' collides with another property.\r\n\r\nThis seems like unwanted behavior.","Url":"https://github.com/dotnet/corefx/issues/41338","RelatedDescription":"Open issue \"JSON Serialization Name Collision with hidden properties\" (#41338)"},{"Id":"498601637","IsPullRequest":false,"CreatedAt":"2019-09-26T01:32:13","Actor":"fvoncina","Number":"41337","RawContent":null,"Title":"Problems serializing Dictionary<string,string> when is a property of an object","State":"open","Body":"When I try to serialize a Dictionary<string, string> directly like this:\r\n```csharp\r\nvar dic = new Dictionary<string, string>\r\n{\r\n    {\"key1\",\"value1\" },\r\n    {\"key2\",\"value2\" },\r\n};\r\nvar json = System.Text.Json.JsonSerializer.Serialize(dic);\r\n```\r\nI get the right output:\r\n```json\r\n{\"key1\":\"value1\",\"key2\":\"value2\"}\r\n```\r\n\r\nBut when the dictionary is a property of an object, the Dictionary is not serialized at all:\r\n```csharp\r\npublic class Dto\r\n{\r\n    public string Id { get; set; }\r\n    public IDictionary<string, string> Dic = new Dictionary<string, string>();\r\n}\r\n\r\nvar dto = new Dto { Id = \"aaaaaa\" };\r\ndto.Dic.Add(\"key1\", \"aaaa\");\r\ndto.Dic.Add(\"key2\", \"bbbb\");            \r\nvar json = System.Text.Json.JsonSerializer.Serialize(dto);\r\n```\r\nResult:\r\n```json\r\n{\"Id\":\"aaaaaa\"}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41337","RelatedDescription":"Open issue \"Problems serializing Dictionary<string,string> when is a property of an object\" (#41337)"},{"Id":"498572859","IsPullRequest":false,"CreatedAt":"2019-09-25T23:31:49","Actor":"StephenBonikowsky","Number":"41335","RawContent":null,"Title":"Update WCF pkg versions in the compat pack.","State":"open","Body":"- [ ] release/3.0\r\n         Update the WCF packages in the compat pack to version 4.6.0 for the next servicing release '3.0.1'.\r\n\r\n- [ ] release/3.1 and master\r\n         The WCF master branch (vNext for us is release 3.1) has numerous new APIs not added in release/3.0.0 which we would like to see reflected in the 'apisof.net'.\r\n         Our master branch default channel: `(497)  https://github.com/dotnet/wcf @ refs/heads/master -> .NET Core 5 Dev`","Url":"https://github.com/dotnet/corefx/issues/41335","RelatedDescription":"Open issue \"Update WCF pkg versions in the compat pack.\" (#41335)"},{"Id":"498565317","IsPullRequest":false,"CreatedAt":"2019-09-25T23:04:35","Actor":"StephenBonikowsky","Number":"41334","RawContent":null,"Title":"Create WCF binary drops for adding new APIs to docs.microsoft.com","State":"open","Body":"- [ ] Drop for .NET Core 2.1 using WCF packages version 4.5.3\r\n\r\n- [ ] Drop for .NET Core 3.0 using WCF packages version 4.6.0\r\n\r\nWCF Packages...\r\n[System.ServiceModel.Duplex](https://www.nuget.org/packages/System.ServiceModel.Duplex/)\r\n[System.ServiceModel.Http](https://www.nuget.org/packages/System.ServiceModel.Http/)\r\n[System.ServiceModel.NetTcp](https://www.nuget.org/packages/System.ServiceModel.NetTcp/)\r\n[System.ServiceModel.Primitives](https://www.nuget.org/packages/System.ServiceModel.Primitives/)\r\n[System.ServiceModel.Security](https://www.nuget.org/packages/System.ServiceModel.Security/)\r\n\r\n@mairaw Once the docs are created would it be possible to get a list of them so that we can review them. I assume that since all the APIs we've added in Core also exist in the full framework the docs will basically be a copy. There are some where we may want to make some additional changes due to functionality changes in porting them to Core.\r\n\r\nThanks.","Url":"https://github.com/dotnet/corefx/issues/41334","RelatedDescription":"Open issue \"Create WCF binary drops for adding new APIs to docs.microsoft.com\" (#41334)"},{"Id":"498551717","IsPullRequest":false,"CreatedAt":"2019-09-25T22:17:32","Actor":"GrabYourPitchforks","Number":"41333","RawContent":null,"Title":"Breaking change proposal: OrdinalIgnoreCase string comparison, ToUpperInvariant, and ToLowerInvariant to use ICU on all platforms","State":"open","Body":"## Proposal\r\n\r\n.NET Core provides APIs to compare strings for ordinal case-insensitive equality (such as via `StringComparer.OrdinalIgnoreCase`). The current implementation of this API is to call `ToUpperInvariant` on each string, then compare the resulting uppercase strings for bitwise equality.\r\n\r\n.NET Core also provides methods to convert `char`s, `Rune`s, and `string`s to uppercase or lowercase using the \"invariant\" culture (`ToUpperInvariant` / `ToLowerInvariant`). The current implementation of this API is to p/invoke [NLS](https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-lcmapstringex) on Windows or [ICU](https://ssl.icu-project.org/apiref/icu4c/) on non-Windows.\r\n\r\nI propose changing the logic so that .NET Core carries its own copy of the ICU \"simple\" casing tables, and we consult our copies of those tables on all operating systems. This would affect string comparison only when using an `OrdinalIgnoreCase` comparison, and it would affect string casing only when using `CultureInfo.InvariantCulture`.\r\n\r\n## Justification\r\n\r\nToday, when processing UTF-8 data in a case-insensitive manner (such as via `Equals(..., OrdinalIgnoreCase)`), we must first transcode the data to UTF-16 so that it can go through the normal p/invoke routines. This transcoding and p/invoke adds unnecessary overhead. With this proposal, we'd be able to consult our own local copies of the casing table, which eliminates much of this overhead and streamlines the comparison process. This performance boost should also be applicable to existing UTF-16 APIs such as `string.ToUpperInvariant` and `string.ToLowerInvariant` since we'd be able to optimize those calls.\r\n\r\nAs mentioned earlier, today's casing tables involve p/invoking NLS or ICU, depending on platform. This means that comparison / invariant casing APIs could provide different results on different operating systems. Even within the same operating system family, the casing tables can change based on OS version. (Windows 10 1703 has different casing tables than Windows 10 1903, for instance.)\r\n\r\nHere are some concrete examples demonstrating the problems:\r\n\r\n```cs\r\n// 'ß' is U+00DF LATIN SMALL LETTER SHARP S\r\n// 'ẞ' is U+1E9E LATIN CAPITAL LETTER SHARP S\r\n\r\nstring toUpper = \"ß\".ToUpperInvariant(); // returns \"ß\" on all OSes\r\nstring toLower = \"ẞ\".ToLowerInvariant(); // returns \"ẞ\" on Windows, otherwise \"ß\"\r\nbool areEqual = \"ß\".Equals(\"ẞ\", StringComparison.OrdinalIgnoreCase); // returns \"False\" on Windows, otherwise \"True\"\r\n```\r\n\r\nWith this proposal, the code above will behave the same across all OSes. They would follow what is today's non-Windows behavior. They'd be locked to whatever version of the Unicode data we include in the product as part of the `CharUnicodeInfo` class. This data changes each release to reflect recent modifications to the Unicode Standard. As of this writing, the data contained within the `CharUnicodeInfo` class follows the Unicode Standard 11.0.0.\r\n\r\n## Breaking change discussion\r\n\r\nAffected APIs:\r\n\r\n * `string` / `char` / `Rune` equality methods or hash code generation routines which take `StringComparison.OrdinalIgnoreCase` as a parameter. All other comparisons are unchanged.\r\n * `string` / `char` / `Rune` case changing methods when `CultureInfo.InvariantCulture` is provided. All other cultures are unchanged.\r\n * Extension methods on `ReadOnlySpan<char>` which provide equivalent functionality to the above.\r\n * `StringComparer.OrdinalIgnoreCase`. All other `StringComparer` instances are unchanged.\r\n * Case changing methods on `CultureInfo.InvariantCulture.TextInfo`.\r\n\r\nIf `GlobalizationMode.Invariant` is specified, the behavior will be the same as it is today, where non-ASCII characters remain unchanged.\r\n\r\nApplications which depend on `OrdinalIgnoreCase` equality being stable may be affected by this proposed change. That is, if an application relies on `\"ß\"` and `\"ẞ\"` being not equal under an `OrdinalIgnoreCase` comparer, that application is likely to experience odd behavior in the future.\r\n\r\nIn general, applications _cannot_ rely on such behavior anyway, because as previously mentioned the operating system historically has updated casing tables under the covers without the application getting a say. For example, after installing a new Windows version, a comparison which previously returned _false_ might start returning _true_:\r\n\r\n```cs\r\nstring a = \"ꝍ\"; // U+A74D\r\nstring b = \"Ꝍ\"; // U+A74C\r\n\r\n// today, may be \"True\" or \"False\" depending on which Windows version the app is running on.\r\n// with this proposal, always returns \"True\"\r\nbool areEqual = string.Equals(a, b, StringComparison.OrdinalIgnoreCase);\r\n```\r\n\r\nFurthermore, the string equality and case mapping information might be different between a web frontend application and the database it's using for backend storage. So performing such checks at the application level was never 100% reliable to begin with.\r\n\r\nThere is a potential oddity with this proposal: depending on operating system, two strings which compare as equal using `OrdinalIgnoreCase` might compare as not equal using `InvariantCultureIgnoreCase`. For example:\r\n\r\n```cs\r\n// with this proposal, returns \"True\" across all OSes\r\nbool equalsOIC = \"ß\".Equals(\"ẞ\", StringComparison.OrdinalIgnoreCase);\r\n\r\n// with this proposal, returns \"False\" on Windows, \"True\" otherwise\r\nbool equalsICIC = \"ß\".Equals(\"ẞ\", StringComparison.InvariantCultureIgnoreCase);\r\n```\r\n\r\nI don't expect this to trip up most applications because I don't believe it to be common for an application to compare a string pair using two _different_ comparers, but it is worth pointing out as a curious edge case.\r\n\r\nThis may also lead to a discrepancy between managed code which uses `StringComparison.OrdinalIgnoreCase` and unmanaged code (including within the runtime) which uses [`CompareStringOrdinal`](https://docs.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-comparestringordinal) on Windows. I cannot think offhand of any components which do this, but we need to be mindful that such a discrepancy might occur.","Url":"https://github.com/dotnet/corefx/issues/41333","RelatedDescription":"Open issue \"Breaking change proposal: OrdinalIgnoreCase string comparison, ToUpperInvariant, and ToLowerInvariant to use ICU on all platforms\" (#41333)"},{"Id":"498550737","IsPullRequest":false,"CreatedAt":"2019-09-25T22:14:34","Actor":"barryhagan","Number":"41332","RawContent":null,"Title":"Unable to read ReturnTypeCustomAttributes when using System.Reflection.MetadataLoadContext","State":"open","Body":"I was trying to use SR.MetadataLoadContext 4.6.0  in order to reflect an assembly and inspect for nullable reference types.    In order to do that I must get the custom attributes for a method's `ReturnType` using `ReturnTypeCustomAttributes`.\r\n\r\nIf you attempt to call `ICustomAttributeProvider.GetCustomAttributes(bool)` on `ReturnTypeCustomAttributes`, you get the following exception:\r\n\r\n```console\r\nUnhandled exception: System.InvalidOperationException: The requested operation cannot be used on objects loaded by a MetadataLoadContext.\r\n   at System.Reflection.TypeLoading.RoParameter.GetCustomAttributes(Boolean inherit)\r\n```\r\n\r\nIs there another way to get the custom attributes for a return type to inspect `NullableAttribute` and `NullableContextAttribute` with MetadataLoadContext?\r\n\r\nCurrent unwanted workaround is to reflect the property from the interface implementation, which lets me see the attributes:\r\n```csharp\r\nMethodInfo mi;\r\nvar attributes = mi.ReturnTypeCustomAttributes.GetType().GetProperty(\"CustomAttributes\").GetValue(mi) as IEnumerable<CustomAttributeData>;\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/41332","RelatedDescription":"Open issue \"Unable to read ReturnTypeCustomAttributes when using System.Reflection.MetadataLoadContext\" (#41332)"},{"Id":"498533727","IsPullRequest":true,"CreatedAt":"2019-09-25T22:11:29","Actor":"Dotnet-GitSync-Bot","Number":"41330","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/41330","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#41330)"},{"Id":"498536329","IsPullRequest":true,"CreatedAt":"2019-09-25T21:36:49","Actor":"bartonjs","Number":"41331","RawContent":null,"Title":"Clear out RSA decryption array-returning residuals.","State":"open","Body":"Initial draft has a non-resource exception and some commented out code to see if the UAP failure from the last PR that had this is repeatable so we can get exception diagnostics from it.","Url":"https://github.com/dotnet/corefx/pull/41331","RelatedDescription":"Open PR \"Clear out RSA decryption array-returning residuals.\" (#41331)"},{"Id":"498297998","IsPullRequest":false,"CreatedAt":"2019-09-25T21:22:45","Actor":"mshobohm","Number":"41313","RawContent":null,"Title":"StartsWith extremly slow on Linux if Culture is not en-US","State":"closed","Body":"I noticed some situations where String.StartsWith is getting extremly slow on Linux-x64 under certain conditions:\r\n - CultureInfo of the Thread is not en-US (depending on OS-Environment) \r\n- using StringComparison.CurrentCulture (which is default for .NET Core!!!!)\r\nOutput of my test program on Linux:\r\nsc: CurrentCulture       ci: en-US  time:                28443 µs\r\nsc: CurrentCulture       ci: en-EN  time:              1722245 µs\r\nsc: CurrentCulture       ci: de-DE  time:              1381201 µs\r\nsc: CurrentCulture       ci: fr-FR  time:              1411512 µs\r\nsc: InvariantCulture     ci: en-US  time:                 6705 µs\r\nsc: Ordinal              ci: en-US  time:                 1355 µs\r\n\r\n\r\n[StartsWithSlow.zip](https://github.com/dotnet/corefx/files/3652751/StartsWithSlow.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/41313","RelatedDescription":"Closed issue \"StartsWith extremly slow on Linux if Culture is not en-US\" (#41313)"},{"Id":"498525660","IsPullRequest":false,"CreatedAt":"2019-09-25T21:10:13","Actor":"WayneHiller","Number":"41329","RawContent":null,"Title":"System.Text.Json issue with database results return by Dapper","State":"open","Body":"Trying to serialize the results of this Dapper query.\r\n\r\n```\r\nvar installations = (await Db.QueryAsync<object>( @\"select InstallationID AS Value, Name AS Text\r\n                                                   from [AIS].[Abs].Installation\" )).ToList();\r\nvar inst = JsonSerializer.Serialize( installations );\r\n```\r\n\r\nThe error I get is:\r\n```\r\nMessage: \r\n    System.InvalidCastException : Unable to cast object of type '<GetEnumerator>d__9' to type 'System.Collections.IDictionaryEnumerator'.\r\n  Stack Trace: \r\n    JsonSerializer.HandleDictionary(JsonClassInfo elementClassInfo, JsonSerializerOptions options, Utf8JsonWriter writer, WriteStack& state)\r\n    JsonSerializer.Write(Utf8JsonWriter writer, Int32 originalWriterDepth, Int32 flushThreshold, JsonSerializerOptions options, WriteStack& state)\r\n    JsonSerializer.WriteCore(Utf8JsonWriter writer, PooledByteBufferWriter output, Object value, Type type, JsonSerializerOptions options)\r\n    JsonSerializer.WriteCore(PooledByteBufferWriter output, Object value, Type type, JsonSerializerOptions options)\r\n    JsonSerializer.WriteCoreString(Object value, Type type, JsonSerializerOptions options)\r\n    JsonSerializer.Serialize[TValue](TValue value, JsonSerializerOptions options)\r\n```\r\n\r\nShould this work? Works fine in Json.Net.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41329","RelatedDescription":"Open issue \"System.Text.Json issue with database results return by Dapper\" (#41329)"},{"Id":"498516798","IsPullRequest":true,"CreatedAt":"2019-09-25T20:50:30","Actor":"dotnet-maestro[bot]","Number":"41327","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190925.2\r\n- **Date Produced**: 9/25/2019 5:58 PM\r\n- **Commit**: 68ff240063fc2ddb9b03275ae5d5063a09d38ace\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.1-servicing.19475.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.1-servicing.19475.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.1-servicing.19475.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41327","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#41327)"},{"Id":"498424844","IsPullRequest":true,"CreatedAt":"2019-09-25T20:47:18","Actor":"riarenas","Number":"41318","RawContent":null,"Title":"Change dependsOn Parameter when calling post-build tempalte to react …","State":"closed","Body":"…to Arcade breaking change\r\n\r\nTest build for this: https://dev.azure.com/dnceng/internal/_build/results?buildId=365845&view=results (canceled the builds, but the stage flow looks correct again)","Url":"https://github.com/dotnet/corefx/pull/41318","RelatedDescription":"Closed or merged PR \"Change dependsOn Parameter when calling post-build tempalte to react …\" (#41318)"},{"Id":"498508582","IsPullRequest":false,"CreatedAt":"2019-09-25T20:32:21","Actor":"davidfowl","Number":"41326","RawContent":null,"Title":"API Proposal: Add Encoder/Decoder for new System.Buffer types","State":"open","Body":"#41166 Discusses APIs for the Encoding classes in while this issue is about the stateful **Encoder** and **Decoder** types:\r\n\r\n```C#\r\npublic static class EncodingExtensions\r\n{\r\n        public static void Convert(this Encoder encoder,\r\n            ReadOnlySpan<char> chars,\r\n            IBufferWriter<byte> writer,\r\n            bool flush,\r\n            int maxBytesPerChar,\r\n            int out charsUsed,\r\n            out SequencePosition charsUsedPosition,\r\n            out int bytesUsed,\r\n            out bool completed);\r\n\r\n        public static void Convert(\r\n            this Encoder encoder,\r\n            in ReadOnlySequence<char> chars,\r\n            IBufferWriter<byte> writer,\r\n            bool flush,\r\n            int maxBytesPerChar,\r\n            out SequencePosition charsUsedPosition,\r\n            out long bytesUsed,\r\n            out bool completed);\r\n\r\n        public static void Convert(\r\n            this Decoder decoder,\r\n            in ReadOnlySequence<byte> bytes,\r\n            Span<char> chars,\r\n            bool flush,\r\n            out SequencePosition bytesUsedPosition,\r\n            out int charsUsed,\r\n            out bool completed);\r\n\r\n        public static void Convert(\r\n            this Decoder decoder,\r\n            in ReadOnlySequence<byte> bytes,\r\n            IBufferWriter<char> writer,\r\n            bool flush,\r\n            int maxCharsPerByte,\r\n            out SequencePosition bytesUsedPosition,\r\n            out long charsUsed,\r\n            out bool completed);\r\n}\r\n```\r\n\r\nThese extensions would likely live in the same assembly as these abstractions since encoding couldn't directly take a dependency on those types (unless we push them lower in the stack).\r\n\r\ncc @GrabYourPitchforks ","Url":"https://github.com/dotnet/corefx/issues/41326","RelatedDescription":"Open issue \"API Proposal: Add Encoder/Decoder for new System.Buffer types\" (#41326)"},{"Id":"498504577","IsPullRequest":false,"CreatedAt":"2019-09-25T20:26:36","Actor":"marian-margeta","Number":"41325","RawContent":null,"Title":"Deserialize interfaces using System.Text.Json.JsonSerializer","State":"open","Body":"How can I deserialize json to a class type that contain interface properties? I have a tree based structure that looks like this:\r\n```csharp\r\ninterface INode { }\r\n\r\nclass Node : INode\r\n{\r\n    public List<INode> Nodes { get; set; }\r\n}\r\n\r\nclass Leaf : INode\r\n{\r\n    public string Value { get; set; }\r\n}\r\n```\r\n\r\nWith Json.NET I am able to deserialize it by defining custom JsonConverter:\r\n```csharp\r\nclass InterfaceJsonConverter : JsonConverter\r\n{\r\n    public override bool CanConvert(Type objectType)\r\n    {\r\n        return objectType.IsInterface && typeof(INode).IsAssignableFrom(objectType);\r\n    }\r\n    ....\r\n}\r\n```\r\n\r\nWith with System.Text.Json.JsonSerializer I can also implement custom converter that inherits from `JsonConverter<INode>`. However, when I try to deserialize the json, I get following exception:\r\n```\r\nNotSupportedException:  Deserialization of interface types is not supported.\r\n```\r\n\r\nIs it a way how to deserialize interfaces using JsonSerializer at this time? If not is it planned for future releases? ","Url":"https://github.com/dotnet/corefx/issues/41325","RelatedDescription":"Open issue \"Deserialize interfaces using System.Text.Json.JsonSerializer\" (#41325)"},{"Id":"498487919","IsPullRequest":false,"CreatedAt":"2019-09-25T19:50:18","Actor":"GrabYourPitchforks","Number":"41324","RawContent":null,"Title":"Breaking change proposal: StringInfo and TextElementEnumerator to support extended grapheme clusters","State":"open","Body":"## Proposal\r\n\r\nThe `StringInfo` class (see [MSDN docs](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.stringinfo)) and `TextElementEnumerator` class provide APIs to get information about single display characters (sometimes called \"graphemes\") in a string. This is useful for applications which need to avoid breaking grapheme clusters improperly, such as applications which perform automatic text truncation or word wrapping.\r\n\r\nToday, the logic in this type uses a very old, outdated algorithm which has since been superceded by [UAX29](https://www.unicode.org/reports/tr29/). I propose updating the logic in `StringInfo` so that it uses the concept of _extended grapheme clusters_ for determining the boundaries of single display characters. The logic would only be updated to understand culture-invariant grapheme cluster boundaries, not culture-aware word or sentence boundaries as specified elsewhere in UAX29.\r\n\r\nThis issue covers __only__ the breaking change proposal and doesn't discuss changing or adding API surface. For discussion on potential new API surface on these types, see other issues such as https://github.com/dotnet/corefx/issues/13824.\r\n\r\n## Justification\r\n\r\nConsider the sequence \"🤹🏽‍♀️\", which represents a woman with medium skin tone juggling. This sequence actually consists of five distinct Unicode scalar values (`Rune`s, if you prefer):\r\n\r\n * `U+1F939 JUGGLING`\r\n * `U+1F3FD EMOJI MODIFIER FITZPATRICK TYPE-4`\r\n * `U+200D ZERO WIDTH JOINER`\r\n * `U+2640 FEMALE SIGN`\r\n * `U+FE0F VARIATION SELECTOR-16`\r\n\r\nThe base emoji character is the juggler, and the Fitzpatrick modifier (\"medium skin tone\") and female sign are applied atop the base character to form the single logical grapheme. The zero-width joiner and variation selector-16 are the \"glue\" that keeps everything together.\r\n\r\nBecause the `StringInfo` type has no knowledge of extended grapheme clusters, asking it to enumerate the display characters in the string will result in the following sequence:\r\n\r\n * `U+1F939` (🤹)\r\n * `U+1F3FD` (🏽)\r\n * `U+200D`\r\n * `U+2640 U+FE0F` (♀)\r\n\r\nThat is, today's `StringInfo` says that this should actually be displayed as _four different characters_ one after another: 🤹, 🏽, (blank), ♀. With this proposal, `StringInfo` would properly return that the entire string consists of a single logical grapheme.\r\n\r\nAs another example, consider the string \"I♥🇨🇭\", which is a three-display-character string consisting of the letter 'I', a heart, and the Swiss flag. (Depending on your operating system, the letters 'CH' may be displayed instead of the Swiss flag.) This sequence consists of four distinct Unicode scalar values:\r\n\r\n * `U+0049 LATIN CAPITAL LETTER I`\r\n * `U+2665 BLACK HEART SUIT`\r\n * `U+1F1E8 REGIONAL INDICATOR SYMBOL LETTER C`\r\n * `U+1F1ED REGIONAL INDICATOR SYMBOL LETTER H`\r\n\r\nToday's `StringInfo` will improperly return that this consists of four distinct display characters: 'I', '♥', '🇨', '🇭'. With this proposal, the '🇨' and '🇭' will be kept together a single '🇨🇭' character. This should keep the Swiss flag from being improperly split.\r\n\r\n## Breaking change discussion\r\n\r\nThough this does \"fix\" the `StringInfo` and `TextElementEnumerator` types to be compliant with the guidance laid out in UAX29, it does represent a breaking change from the existing behavior of `StringInfo`. Applications whose correct behavior relies on the older standard may encounter unexpected behaviors if this change is approved. I cannot think of examples of any such applications, but I did nevertheless want to call out the potential for breaks.","Url":"https://github.com/dotnet/corefx/issues/41324","RelatedDescription":"Open issue \"Breaking change proposal: StringInfo and TextElementEnumerator to support extended grapheme clusters\" (#41324)"},{"Id":"498466860","IsPullRequest":true,"CreatedAt":"2019-09-25T19:01:57","Actor":"steveharter","Number":"41323","RawContent":null,"Title":"Add System.Object converter sample to support bool, double, string, DateTime and DateTimeOffset","State":"open","Body":"Sample converter and tests for converting JSON to System.Object-declared properties mapping the token type to:\r\n- TokenType.True -> System.Bool (true)\r\n- TokenType.False-> System.Bool (false)\r\n- TokenType.Number -> System.Double\r\n- TokenType.String -> System.String or System.DateTime or System.DateTimeOffset\r\n- TokenType.Null -> null (default behavior is same)\r\n- Other (object, array) -> JsonElement\r\n\r\nrelated to discussion from https://github.com/dotnet/corefx/issues/38713","Url":"https://github.com/dotnet/corefx/pull/41323","RelatedDescription":"Open PR \"Add System.Object converter sample to support bool, double, string, DateTime and DateTimeOffset\" (#41323)"},{"Id":"498444095","IsPullRequest":true,"CreatedAt":"2019-09-25T18:13:28","Actor":"buyaa-n","Number":"41322","RawContent":null,"Title":"Annotate System.IO.Compression for nullable","State":"open","Body":"Contributes to #40623\r\ncc: @dotnet/nullablefc","Url":"https://github.com/dotnet/corefx/pull/41322","RelatedDescription":"Open PR \"Annotate System.IO.Compression for nullable\" (#41322)"},{"Id":"498443339","IsPullRequest":false,"CreatedAt":"2019-09-25T18:11:42","Actor":"davidfowl","Number":"41321","RawContent":null,"Title":"FileSystemWatcher.EnableRaisingEvents captures the ExecutionContext","State":"open","Body":"This might be deemed a feature but it can unintentionally end up rooting async locals for a very long time. The way this happens is extremely implicit which is why it feels like it should be improved (or at least be given a cleaner way to opt out). \r\n\r\nOn Windows, the flow looks like this:\r\n\r\n```\r\nFileSystemWatcher.EnableRaisingEvents -> new PreAllocatedOverlapped -> new ThreadPoolBoundHandleOverlapped -> Overlapped.Pack -> ExecutionContext.Capture()\r\n```\r\n\r\nOn Linux:\r\n\r\n```\r\nFileSystemWatcher.EnableRaisingEvents -> RunningInstance.Start -> Task.Factory.StartNew() -> ExecutionContext.Capture()\r\n```\r\nThis happens as a result of setting the property which IMO is extremely implicit and indirect. If it's desirable to capture the `ExecutionContext` then it should be captured explicitly in the consturctor (with a boolean option to turn it off), not indirectly by the property setter.\r\n\r\nThis is a result of looking at a customer application that might have been doing bad things but it was magnified by the fact that async locals from the http request were being captured by the file watcher.","Url":"https://github.com/dotnet/corefx/issues/41321","RelatedDescription":"Open issue \"FileSystemWatcher.EnableRaisingEvents captures the ExecutionContext\" (#41321)"},{"Id":"498425495","IsPullRequest":false,"CreatedAt":"2019-09-25T17:34:35","Actor":"Gavvers","Number":"41319","RawContent":null,"Title":"OdbcCommand ExecuteReaderObject SchemaOnly Confusion","State":"open","Body":"Hello,\r\n\r\nI was reading through the [OdbcCommand source](https://github.com/dotnet/corefx/blob/master/src/System.Data.Odbc/src/System/Data/Odbc/OdbcCommand.cs) and became confused about a couple of if-statements that seemed contradictory. \r\n\r\nThe code in question starts at [708](https://github.com/dotnet/corefx/blob/ac99a1b7168bd32046a954c3f06012c0fa909bed/src/System.Data.Odbc/src/System/Data/Odbc/OdbcCommand.cs#L708)\r\n\r\n```\r\nif (!localReader.IsBehavior(CommandBehavior.SchemaOnly))\r\n {\r\n     // Can't get the KeyInfo after command execution (SQL Server only since it does not support multiple\r\n    // results on the same connection). Stored procedures (SP) do not return metadata before actual execution\r\n    // Need to check the column count since the command type may not be set to SP for a SP.\r\n    if ((localReader.IsBehavior(CommandBehavior.KeyInfo) || localReader.IsBehavior(CommandBehavior.SchemaOnly))\r\n        && (CommandType != CommandType.StoredProcedure))\r\n    {\r\n    ...\r\n```\r\n\r\nSo on 708, SchemaOnly command behaviors are excluded from the following code block, but inside said code block, SchemaOnly is tested again. It seems to me that that SchemaOnly test will always fail, no?","Url":"https://github.com/dotnet/corefx/issues/41319","RelatedDescription":"Open issue \"OdbcCommand ExecuteReaderObject SchemaOnly Confusion\" (#41319)"},{"Id":"498398521","IsPullRequest":true,"CreatedAt":"2019-09-25T16:35:52","Actor":"dotnet-maestro[bot]","Number":"41317","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19474.3\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19474.3\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41317","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#41317)"},{"Id":"498312366","IsPullRequest":true,"CreatedAt":"2019-09-25T16:31:34","Actor":"Dotnet-GitSync-Bot","Number":"41314","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/41314","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#41314)"},{"Id":"498395709","IsPullRequest":true,"CreatedAt":"2019-09-25T16:30:03","Actor":"dotnet-maestro[bot]","Number":"41316","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19474.3\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19474.3\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19474.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41316","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#41316)"},{"Id":"498379181","IsPullRequest":false,"CreatedAt":"2019-09-25T15:58:38","Actor":"ericstj","Number":"41315","RawContent":null,"Title":"System.Private assemblies don't get stable product version in AssemblyInformationalVersion","State":"open","Body":"This is true for all System.Private assemblies that ship in the shared framework and needs to be fixed in CoreFx and CoreCLR.\r\n\r\nThank you @mjsabby for the report and @dagood for investigating.\r\n\r\nBug is here in CoreFx: \r\nhttps://github.com/dotnet/corefx/blob/4ac4c0367003fe3973a3648eb0715ddb0e3bbcea/Directory.Build.props#L393\r\n\r\nTo fix we may want to change the behavior to consider IsNetCoreApp where we don't set this for libraries that are part of the shared framework.  For CoreCLR we might just explicitly set it in the corelib project.","Url":"https://github.com/dotnet/corefx/issues/41315","RelatedDescription":"Open issue \"System.Private assemblies don't get stable product version in AssemblyInformationalVersion\" (#41315)"},{"Id":"498289937","IsPullRequest":true,"CreatedAt":"2019-09-25T14:38:16","Actor":"dotnet-maestro[bot]","Number":"41312","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 7:06 PM\r\n- **Commit**: da147ece700c2502b91e57d99213feadcfb9c1f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19474.3\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19474.3\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190924.1\r\n- **Date Produced**: 9/24/2019 12:45 PM\r\n- **Commit**: 8dac25a9de201d6ec24c245f79cd964bfbb35502\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19474.1\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41312","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx dotnet/standard\" (#41312)"},{"Id":"498243847","IsPullRequest":true,"CreatedAt":"2019-09-25T13:31:39","Actor":"dotnet-maestro[bot]","Number":"41311","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190924.1\r\n- **Date Produced**: 9/24/2019 4:18 PM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19474.1\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19474.1\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41311","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#41311)"},{"Id":"498430003","IsPullRequest":false,"CreatedAt":"2019-09-25T01:45:19","Actor":"ClementeGao","Number":"41320","RawContent":null,"Title":"The SSL connection could not be established, see inner exception.","State":"open","Body":"# Issue Title\r\nWhen I initiate a request with a certificate   The program has an error    is   The SSL connection could not be established, see inner exception.\r\n\r\n# General\r\n\r\n```\r\n  private static string HttpPost(string url, string postdata, X509Certificate cer)\r\n        {\r\n            using (HttpClientHandler handler = new HttpClientHandler())\r\n            {\r\n                var httpClientHandler = new HttpClientHandler\r\n                {\r\n                    ServerCertificateCustomValidationCallback = (message, certificate2, arg3, arg4) => true\r\n                };\r\n                handler.ClientCertificates.Add(cer);\r\n                using (HttpClient httpClient = new HttpClient(handler))\r\n                {\r\n                    //AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false);\r\n                    HttpContent httpContent = new StringContent(postdata);\r\n                    var response = httpClient.PostAsync(url, httpContent).Result;\r\n\r\n                    var body = response.Content.ReadAsStringAsync().Result;\r\n\r\n                    return body;\r\n                }\r\n            }\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/41320","RelatedDescription":"Open issue \"The SSL connection could not be established, see inner exception.\" (#41320)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"498622963","IsPullRequest":true,"CreatedAt":"2019-09-26T02:47:45","Actor":"jnm2","Number":"38868","RawContent":null,"Title":"Generate direct GetHashCode calls for value types when they would be non-boxing","State":"open","Body":"Closes #31984.\r\n\r\n⚠ I updated the PR to reflect my discovery at https://github.com/dotnet/roslyn/issues/31984#issuecomment-535310922.","Url":"https://github.com/dotnet/roslyn/pull/38868","RelatedDescription":"Open PR \"Generate direct GetHashCode calls for value types when they would be non-boxing\" (#38868)"},{"Id":"498616013","IsPullRequest":true,"CreatedAt":"2019-09-26T02:23:43","Actor":"jmarolf","Number":"38867","RawContent":null,"Title":"[WIP] Fix compiler package setup for CPS based projects","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38867","RelatedDescription":"Open PR \"[WIP] Fix compiler package setup for CPS based projects\" (#38867)"},{"Id":"498608202","IsPullRequest":false,"CreatedAt":"2019-09-26T01:56:11","Actor":"tmat","Number":"38866","RawContent":null,"Title":"EnC: Investigate cases when semantic analysis results shouldn't be cached per document","State":"open","Body":"Tracking TODO in code.\r\n\r\nIt is possible that the result of Rude Edit semantic analysis of an unchanged document will change if there another document is updated. If we encounter a significant case of this we should consider caching such a result per project, rather then per document. Also, we might be observing an older semantics if the document that is causing the change is out-of-sync --\r\ne.g. the binary was built with an overload C.M(object), but a generator updated class C to also contain C.M(string), which change we have not observed yet. Then call-sites of C.M in a changed document observed by the analysis will be seen as C.M(object) instead of the true C.M(string).","Url":"https://github.com/dotnet/roslyn/issues/38866","RelatedDescription":"Open issue \"EnC: Investigate cases when semantic analysis results shouldn't be cached per document\" (#38866)"},{"Id":"498591345","IsPullRequest":false,"CreatedAt":"2019-09-26T00:50:55","Actor":"CyrusNajmabadi","Number":"38865","RawContent":null,"Title":"Crash in suppression","State":"open","Body":"Not sure how to repro this.\r\n\r\nGot this error:\r\n\r\n```\r\n\r\nSystem.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. Parameter name: length   at Microsoft.CodeAnalysis.Text.TextSpan..ctor(Int32 start, Int32 length)   at\r\n Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider.PragmaHelpers.NormalizeTriviaOnTokens(AbstractSuppressionCodeFixProvider fixer, Document& document, SuppressionTargetInfo& suppressionTargetInfo)   at\r\n Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider.<GetSuppressionsAsync>d__30.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at\r\n System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)   at\r\n System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)   at Microsoft.CodeAnalysis.CodeFixes.Suppression.AbstractSuppressionCodeFixProvider.<GetSuppressionsAsync>d__28.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at\r\n System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)   at\r\n System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.<PerformFunctionAsync>d__3`1.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at\r\n Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n--\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38865","RelatedDescription":"Open issue \"Crash in suppression\" (#38865)"},{"Id":"498580282","IsPullRequest":true,"CreatedAt":"2019-09-26T00:02:16","Actor":"dotnet-bot","Number":"38864","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38864","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#38864)"},{"Id":"498580238","IsPullRequest":true,"CreatedAt":"2019-09-26T00:02:07","Actor":"dotnet-bot","Number":"38863","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38863","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#38863)"},{"Id":"498573891","IsPullRequest":true,"CreatedAt":"2019-09-25T23:36:02","Actor":"agocke","Number":"38862","RawContent":null,"Title":"Add test for SkipLocalsInit in default interface implementations","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38862","RelatedDescription":"Open PR \"Add test for SkipLocalsInit in default interface implementations\" (#38862)"},{"Id":"498318044","IsPullRequest":true,"CreatedAt":"2019-09-25T23:32:10","Actor":"nnpcYvIVl","Number":"38849","RawContent":null,"Title":"Update IOperationTests_IDelegateCreationExpression.vb","State":"closed","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38849","RelatedDescription":"Closed or merged PR \"Update IOperationTests_IDelegateCreationExpression.vb\" (#38849)"},{"Id":"498443430","IsPullRequest":true,"CreatedAt":"2019-09-25T23:27:56","Actor":"jcouv","Number":"38853","RawContent":null,"Title":"x == default is valid object equality for reference types","State":"closed","Body":"Since we've received significant feedback on part of the compat break we took in 16.4p1, we're making a refinement to reduce the negative impact.\r\n`t == default` for unconstrained types will remain an error (introduced in 16.4p1), but `x == default` will be re-allowed for reference types (could bind as object equality).\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/38643\r\nRelates to https://github.com/dotnet/roslyn/pull/37596 (16.4p1 breaking changes)","Url":"https://github.com/dotnet/roslyn/pull/38853","RelatedDescription":"Closed or merged PR \"x == default is valid object equality for reference types\" (#38853)"},{"Id":"498313437","IsPullRequest":true,"CreatedAt":"2019-09-25T23:26:18","Actor":"nnpcYvIVl","Number":"38847","RawContent":null,"Title":"Update DecisionDagBuilder.cs","State":"closed","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38847","RelatedDescription":"Closed or merged PR \"Update DecisionDagBuilder.cs\" (#38847)"},{"Id":"498475788","IsPullRequest":true,"CreatedAt":"2019-09-25T23:02:21","Actor":"dotnet-bot","Number":"38856","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38856","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#38856)"},{"Id":"498563153","IsPullRequest":true,"CreatedAt":"2019-09-25T22:56:06","Actor":"nnpcYvIVl","Number":"38861","RawContent":null,"Title":"Spelling fixes","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38861","RelatedDescription":"Open PR \"Spelling fixes\" (#38861)"},{"Id":"498552246","IsPullRequest":true,"CreatedAt":"2019-09-25T22:19:06","Actor":"jcouv","Number":"38860","RawContent":null,"Title":"Avoid crash on concat on enum with ToString member","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/38858","Url":"https://github.com/dotnet/roslyn/pull/38860","RelatedDescription":"Open PR \"Avoid crash on concat on enum with ToString member\" (#38860)"},{"Id":"498539497","IsPullRequest":true,"CreatedAt":"2019-09-25T21:45:08","Actor":"mavasani","Number":"38859","RawContent":null,"Title":"Add analyzer driver editorconfig option for end users to configure ge…","State":"open","Body":"…nerated code\r\n\r\nImplements https://github.com/dotnet/roslyn/issues/38674#issuecomment-534621058\r\nFixes #3705","Url":"https://github.com/dotnet/roslyn/pull/38859","RelatedDescription":"Open PR \"Add analyzer driver editorconfig option for end users to configure ge…\" (#38859)"},{"Id":"498534763","IsPullRequest":false,"CreatedAt":"2019-09-25T21:32:41","Actor":"jcouv","Number":"38858","RawContent":null,"Title":"Enum with ToString member crashes in string concatenation","State":"open","Body":"@vertygo reported a crash in [another thread](https://github.com/dotnet/roslyn/issues/38725#issuecomment-534981484).\r\nFrom investigating the crash dump file that he shared with me, I narrowed down a repro. The issue happens if you have an enum with a `ToString` member and use it in a string concatenation.\r\n\r\n```C#\r\nusing System;\r\npublic class C \r\n{\r\n    public void M(D c) \r\n    {\r\n        _ = c + \"\";\r\n    }\r\n}\r\npublic enum D { A = 1, B = 2, ToString = 4 }\r\n```\r\n\r\n[sharplab](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDYB8ACAmARgFgAoHAZgAJ9KBhS0gb1MteqpwBZKBZACgAilAMYBKBiTaVmkqWwD6lALwjKAakoAiTQG4WbAL6kjZKnAB2AVzCUhjSgEFllAkkoAhZ3jcAVAPYAyjAIaOYA5s7cBkA=)","Url":"https://github.com/dotnet/roslyn/issues/38858","RelatedDescription":"Open issue \"Enum with ToString member crashes in string concatenation\" (#38858)"},{"Id":"497989251","IsPullRequest":false,"CreatedAt":"2019-09-25T21:29:56","Actor":"CyrusNajmabadi","Number":"38840","RawContent":null,"Title":"Test output contains hundreds of useless messages.","State":"closed","Body":"Messages are of the form:\r\n\r\n```\r\n[9/24/2019 5:42:57.705 PM Informational] Updating view 437433286\r\n[9/24/2019 5:42:57.710 PM Informational] Updating view 437433286\r\n[9/24/2019 5:42:58.251 PM Informational] [xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.1-pre.build.4059 (32-bit Desktop .NET 4.0.30319.42000)\r\n[9/24/2019 5:42:58.783 PM Informational] [xUnit.net 00:00:00.53]   Starting:    Microsoft.CodeAnalysis.EditorFeatures2.UnitTests\r\n[9/24/2019 5:43:00.080 PM Informational] Trying to update view 437433286\r\n[9/24/2019 5:43:00.080 PM Informational] Updating view 437433286\r\n[9/24/2019 5:43:00.135 PM Informational] Updating view 437433286\r\n```\r\n\r\nLooks like someone may have left in unintentional debug spew, causing all these pointless \"updating view\" messages to go into the output log.","Url":"https://github.com/dotnet/roslyn/issues/38840","RelatedDescription":"Closed issue \"Test output contains hundreds of useless messages.\" (#38840)"},{"Id":"498512922","IsPullRequest":false,"CreatedAt":"2019-09-25T20:42:04","Actor":"CyrusNajmabadi","Number":"38857","RawContent":null,"Title":"Crash in add-import","State":"open","Body":"Getting this callstack that is bringing down add-import:\r\n\r\n```\r\nSystem.InvalidOperationException : This instance must be flushed before being reinitialized.\r\n   at Nerdbank.Streams.BufferTextWriter.Initialize(IBufferWriter`1 bufferWriter,Encoding encoding)\r\n   at StreamJsonRpc.JsonMessageFormatter.WriteJToken(IBufferWriter`1 contentBuffer,JToken json)\r\n   at StreamJsonRpc.JsonMessageFormatter.Serialize(IBufferWriter`1 contentBuffer,JsonRpcMessage message)\r\n   at StreamJsonRpc.HeaderDelimitedMessageHandler.Write(JsonRpcMessage content,CancellationToken cancellationToken)\r\n   at StreamJsonRpc.PipeMessageHandler.WriteCoreAsync(JsonRpcMessage content,CancellationToken cancellationToken)\r\n   at async StreamJsonRpc.MessageHandlerBase.WriteAsync(<Unknown Parameters>)\r\n   at async StreamJsonRpc.JsonRpc.TransmitAsync(<Unknown Parameters>)\r\n   at System.Threading.Tasks.ValueTask.ThrowIfCompletedUnsuccessfully()\r\n   at async StreamJsonRpc.JsonRpc.InvokeCoreAsync[TResult](<Unknown Parameters>)\r\n   at async Microsoft.ServiceHub.Framework.RemoteServiceBroker.GetPipeAsync(<Unknown Parameters>)\r\n   at async Microsoft.ServiceHub.Client.HubClient.GetPipeAsync(<Unknown Parameters>)\r\n   at async Microsoft.ServiceHub.Client.HubClient.RequestServiceAsync(<Unknown Parameters>)\r\n   at async Microsoft.VisualStudio.LanguageServices.Remote.ServiceHubRemoteHostClient.Connections.RetryRemoteCallAsync[TException,TResult](<Unknown Parameters>)\r\n   at async Microsoft.VisualStudio.LanguageServices.Remote.ServiceHubRemoteHostClient.Connections.RequestServiceAsync(<Unknown Parameters>)\r\n   at async Microsoft.VisualStudio.LanguageServices.Remote.ServiceHubRemoteHostClient.ConnectionManager.TryCreateNewConnectionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Remote.RemoteHostClientExtensions.TryCreateSessionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Remote.RemoteHostClientExtensions.TryCreateCodeAnalysisSessionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Remote.RemoteHostClientExtensions.TryRunCodeAnalysisRemoteAsync[T](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.GetFixesAsync[TSimpleNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.GetFixesForDiagnosticsAsync[TSimpleNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.AddImport.AbstractAddImportCodeFixProvider.RegisterCodeFixesAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.CodeFixService.GetCodeFixesAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n```\r\n\r\nSomething is up with OOP.","Url":"https://github.com/dotnet/roslyn/issues/38857","RelatedDescription":"Open issue \"Crash in add-import\" (#38857)"},{"Id":"498461807","IsPullRequest":true,"CreatedAt":"2019-09-25T18:50:34","Actor":"CyrusNajmabadi","Number":"38855","RawContent":null,"Title":"Provide signature help for collection initializers","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/38850\r\n\r\nLooks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/65630637-acda9d80-df8a-11e9-93c8-92c9e2591705.png)\r\n\r\nTodo:\r\n\r\n- [x] VB support\r\n- [x] Tests","Url":"https://github.com/dotnet/roslyn/pull/38855","RelatedDescription":"Open PR \"Provide signature help for collection initializers\" (#38855)"},{"Id":"498456993","IsPullRequest":false,"CreatedAt":"2019-09-25T18:40:20","Actor":"vsfeedback","Number":"38854","RawContent":null,"Title":"show Potential Fixes","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/736875/show-potential-fixes-1.html)._\n\n---\nunable to see show potential fixes option if the list is huge (refer attachment for better understanding)\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/17/2019, 11:34 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/19/2019, 03:00 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38854","RelatedDescription":"Open issue \"show Potential Fixes\" (#38854)"},{"Id":"498309326","IsPullRequest":true,"CreatedAt":"2019-09-25T17:10:40","Actor":"nnpcYvIVl","Number":"38845","RawContent":null,"Title":"Update AbstractAddAccessibilityModifiersCodeFixProvider.cs","State":"closed","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38845","RelatedDescription":"Closed or merged PR \"Update AbstractAddAccessibilityModifiersCodeFixProvider.cs\" (#38845)"},{"Id":"498311456","IsPullRequest":true,"CreatedAt":"2019-09-25T17:10:15","Actor":"nnpcYvIVl","Number":"38846","RawContent":null,"Title":"Update SyntaxGeneratorTests.cs","State":"closed","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38846","RelatedDescription":"Closed or merged PR \"Update SyntaxGeneratorTests.cs\" (#38846)"},{"Id":"498315464","IsPullRequest":true,"CreatedAt":"2019-09-25T17:09:42","Actor":"nnpcYvIVl","Number":"38848","RawContent":null,"Title":"Update TypeImportCompletionItem.cs","State":"closed","Body":"Spelling fix","Url":"https://github.com/dotnet/roslyn/pull/38848","RelatedDescription":"Closed or merged PR \"Update TypeImportCompletionItem.cs\" (#38848)"},{"Id":"498413969","IsPullRequest":false,"CreatedAt":"2019-09-25T17:09:20","Actor":"vsfeedback","Number":"38852","RawContent":null,"Title":"Falsy compiler warning: \"Not exhaustive check\" [CS8509]","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/744153/falsy-compiler-warning-not-exhaustive-check-cs8509.html)._\n\n---\n<p>If we use switch expression like this:</p>\n<pre>something switch {\n    { } =&gt; <span class=hljs-number>1,</span>\n    <span class=hljs-keyword>null</span> =&gt; <span class=hljs-number>2</span>\n}\n</pre>\n<p>Complier will complain, that this switch is not exhaustive, because it does not include <em>discard arm</em> (default).<br>\nSince this is not true, then the warning should <strong>not</strong> be reported here.</p>\n<p><strong>Note:</strong> it is not even possible to somehow add the discard branch (in any place) to satify the compiler, becuase that would lead to the compilation error:<br>\nError CS8510: The pattern has already been handled by a previous arm of the switch expression.</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/24/2019, 01:08 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38852","RelatedDescription":"Open issue \"Falsy compiler warning: \"Not exhaustive check\" [CS8509]\" (#38852)"},{"Id":"498387321","IsPullRequest":true,"CreatedAt":"2019-09-25T16:14:10","Actor":"dotnet-maestro[bot]","Number":"38851","RawContent":null,"Title":"[release/dev16.3-vs-deps] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ef0a7d9c-37a9-4bca-b183-08d73687fe54)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:ef0a7d9c-37a9-4bca-b183-08d73687fe54)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/38851","RelatedDescription":"Open PR \"[release/dev16.3-vs-deps] Update dependencies from dotnet/arcade\" (#38851)"},{"Id":"498346985","IsPullRequest":false,"CreatedAt":"2019-09-25T15:04:40","Actor":"terrajobst","Number":"38850","RawContent":null,"Title":"Signature help in collection inializers","State":"open","Body":"Collection initializers are just a syntactic sugar for calling an `Add()` method. When calling the `Add()` method explicitly, I get signature help:\r\n\r\n<img width=\"487\" alt=\"ci1\" src=\"https://user-images.githubusercontent.com/5169960/65613389-cc61ce00-df6a-11e9-949d-4f60050a5537.png\">\r\n\r\nHowever, when using the collection initializer syntax, I don't:\r\n\r\n<img width=\"237\" alt=\"ci2\" src=\"https://user-images.githubusercontent.com/5169960/65613387-cc61ce00-df6a-11e9-90b4-f904ed4c5b3e.png\">\r\n\r\n**Version Used**: \r\n\r\nMicrosoft Visual Studio Enterprise 2019 Int Preview\r\nVersion 16.4.0 Preview 2.0 [29322.22.master]\r\nVisualStudio.16.IntPreview/16.4.0-pre.2.0+29322.22.master","Url":"https://github.com/dotnet/roslyn/issues/38850","RelatedDescription":"Open issue \"Signature help in collection inializers\" (#38850)"},{"Id":"498289274","IsPullRequest":false,"CreatedAt":"2019-09-25T13:31:26","Actor":"onovotny","Number":"38844","RawContent":null,"Title":"Incorrect analysis: IDE0059 Unnecessary assignment of a value","State":"open","Body":"**Version Used**: 16.4\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open up SignService.sln from https://github.com/dotnet/SignService\r\n2. See messages\r\n\r\n**Expected Behavior**:\r\nNo false analysis\r\n\r\n\r\n**Actual Behavior**:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nMessage\tIDE0059\tUnnecessary assignment of a value to 'ppKey'\tSignService\tD:\\dev\\SignService\\src\\SignService\\Utils\\DistinguishedNameParser.cs\t23\tActive\r\nMessage\tIDE0059\tUnnecessary assignment of a value to 'ppVal'\tSignService\tD:\\dev\\SignService\\src\\SignService\\Utils\\DistinguishedNameParser.cs\t23\tActive\r\n```\r\nThose out variables are used in a while loop and then passed into `Marshal.PtrToStringUni`.\r\n\r\nhttps://github.com/dotnet/SignService/blob/aa17184f886b647042c0d6d8323e2d21943e3fb5/src/SignService/Utils/DistinguishedNameParser.cs#L23-L30\r\n\r\nThe suggestion to use a discard is wrong.\r\n","Url":"https://github.com/dotnet/roslyn/issues/38844","RelatedDescription":"Open issue \"Incorrect analysis: IDE0059 Unnecessary assignment of a value\" (#38844)"},{"Id":"498240042","IsPullRequest":true,"CreatedAt":"2019-09-25T12:02:15","Actor":"dotnet-bot","Number":"38843","RawContent":null,"Title":"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps\ngit reset --hard upstream/release/dev16.4-preview1-vs-deps\ngit merge upstream/release/dev16.4-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38843","RelatedDescription":"Open PR \"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps\" (#38843)"},{"Id":"498167722","IsPullRequest":false,"CreatedAt":"2019-09-25T09:36:48","Actor":"Tan90909090","Number":"38842","RawContent":null,"Title":"IDE0063 code fixer deletes indents","State":"open","Body":"**Version Used**: Visual Studio 2019 Version 16.3.0\r\n\r\n**Steps to Reproduce**:\r\n1. Set csproj's `LangVersion` to `latest`\r\n2. Write a following code:\r\n```cs\r\nusing System;\r\nusing System.IO;\r\n\r\nclass C\r\n{\r\n    static void Main()\r\n    {\r\n        // IDE0063 'using' statement can be simplified\r\n        using (var stream = new MemoryStream())\r\n        {\r\n            _ = new Action(\r\n                    () => { }\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n3. Apply `Use simple 'using' statement`\r\n\r\n**Expected Behavior**:\r\nCode fixer keeps indents like this:\r\n```cs\r\nusing System;\r\nusing System.IO;\r\n\r\nclass C\r\n{\r\n    static void Main()\r\n    {\r\n        // IDE0063 'using' statement can be simplified\r\n        using var stream = new MemoryStream();\r\n        _ = new Action(\r\n                () => { }\r\n            );\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\nCode fixer deletes indents:\r\n```cs\r\nusing System;\r\nusing System.IO;\r\n\r\nclass C\r\n{\r\n    static void Main()\r\n    {\r\n        // IDE0063 'using' statement can be simplified\r\n        using var stream = new MemoryStream();\r\n        _ = new Action(\r\n() => { }\r\n);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38842","RelatedDescription":"Open issue \"IDE0063 code fixer deletes indents\" (#38842)"},{"Id":"497988181","IsPullRequest":true,"CreatedAt":"2019-09-25T05:14:19","Actor":"JoeRobich","Number":"38839","RawContent":null,"Title":"Update required version of VS in Building doc","State":"closed","Body":"Now that we've merged 16.3-vs-deps back, we should update the required version of VS.","Url":"https://github.com/dotnet/roslyn/pull/38839","RelatedDescription":"Closed or merged PR \"Update required version of VS in Building doc\" (#38839)"},{"Id":"497989930","IsPullRequest":true,"CreatedAt":"2019-09-25T00:47:01","Actor":"CyrusNajmabadi","Number":"38841","RawContent":null,"Title":"Fix crash that would happen when renaming in mixed f#/c# project.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/28474","Url":"https://github.com/dotnet/roslyn/pull/38841","RelatedDescription":"Open PR \"Fix crash that would happen when renaming in mixed f#/c# project.\" (#38841)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"498529328","IsPullRequest":true,"CreatedAt":"2019-09-25T21:18:59","Actor":"Dotnet-GitSync-Bot","Number":"7798","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams @stephentoub","Url":"https://github.com/dotnet/corert/pull/7798","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corefx\" (#7798)"},{"Id":"497810701","IsPullRequest":true,"CreatedAt":"2019-09-25T21:17:24","Actor":"Dotnet-GitSync-Bot","Number":"7797","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7797)"},{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"},{"Id":"494589847","IsPullRequest":true,"CreatedAt":"2019-09-17T14:13:36","Actor":"Dotnet-GitSync-Bot","Number":"7794","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7794)"},{"Id":"494273259","IsPullRequest":true,"CreatedAt":"2019-09-16T23:13:23","Actor":"Dotnet-GitSync-Bot","Number":"7793","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7793)"},{"Id":"493430075","IsPullRequest":false,"CreatedAt":"2019-09-16T15:38:33","Actor":"RalfKornmannEnvision","Number":"7790","RawContent":null,"Title":"GC on ARM64 based \"kind of unix\" system","State":"closed","Body":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790)"},{"Id":"493684541","IsPullRequest":true,"CreatedAt":"2019-09-15T07:35:11","Actor":"Dotnet-GitSync-Bot","Number":"7792","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7792)"},{"Id":"493500562","IsPullRequest":true,"CreatedAt":"2019-09-14T14:02:26","Actor":"MichalStrehovsky","Number":"7791","RawContent":null,"Title":"Fix casting to pointers","State":"closed","Body":"Porting a fix made for .NET Native.\r\n\r\nA popular game engine has a `castclass void*` IL instruction in one of the generated files it ships with. This construct is weird enough that it crashes the .NET Native compiler. It doesn't crash the CoreRT compiler, but we still want the runtime side of the fix.","Url":"https://github.com/dotnet/corert/pull/7791","RelatedDescription":"Closed or merged PR \"Fix casting to pointers\" (#7791)"},{"Id":"492984849","IsPullRequest":true,"CreatedAt":"2019-09-13T13:52:21","Actor":"Dotnet-GitSync-Bot","Number":"7789","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @NextTurn","Url":"https://github.com/dotnet/corert/pull/7789","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7789)"},{"Id":"489459547","IsPullRequest":true,"CreatedAt":"2019-09-12T19:12:20","Actor":"cshung","Number":"7775","RawContent":null,"Title":"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7775","RelatedDescription":"Closed or merged PR \"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization\" (#7775)"},{"Id":"492918947","IsPullRequest":true,"CreatedAt":"2019-09-12T19:11:42","Actor":"Dotnet-GitSync-Bot","Number":"7788","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @TylerBrinkley @tarekgh @obligaron @marek-safar @jkotas @sywhang","Url":"https://github.com/dotnet/corert/pull/7788","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7788)"},{"Id":"491162081","IsPullRequest":true,"CreatedAt":"2019-09-11T00:16:26","Actor":"Dotnet-GitSync-Bot","Number":"7786","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7786","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7786)"},{"Id":"490571600","IsPullRequest":true,"CreatedAt":"2019-09-09T17:52:58","Actor":"davidwrighton","Number":"7779","RawContent":null,"Title":"Resource writing","State":"closed","Body":"- Refactor the win32 resource reading code to use more natural managed data structures\r\n- Build a Win32 resource emitter on top of refactored data structures\r\n- Replace resource section copy logic with new node to generate win32 resources","Url":"https://github.com/dotnet/corert/pull/7779","RelatedDescription":"Closed or merged PR \"Resource writing\" (#7779)"},{"Id":"491229182","IsPullRequest":false,"CreatedAt":"2019-09-09T17:33:38","Actor":"RalfKornmannEnvision","Number":"7787","RawContent":null,"Title":"finally funclets brocken for ARM64!?","State":"open","Body":"I am not sure if this is a corert or coreclr issue but as I am working on a corert port for an custom ARM64 system I start with posting it here.\r\n\r\nAfter adding code to the objectwriter and the ilcompiler I managed to get a simple hello world app running to the main method. But it than crashed during the shutdown. After some debugging i figured out that the static constructors are never called. After some more debugging I noticed that ClassConstructorRunner.GetCctor corrupts the stack frame,\r\n\r\nIt happens at the end of the method in an assembler block that i believe is the finally funclet for the using. It looks like this\r\n\r\n  28667c: a9be7bfd stp x29, x30, [sp, #-32]!\r\n  286680: f90013f3 str x19, [sp, #32]\r\n  286684: 9103a3a0 add x0, x29, #0xe8\r\n  286688: 97fc0d42 bl 189b90 <S_P_CoreLib_System_Threading_LockHolder__Dispose>\r\n  28668c: d503201f nop\r\n  286690: d503201f nop\r\n  286694: f94013f3 ldr x19, [sp, #32]\r\n  286698: a8c27bfd ldp x29, x30, [sp], #32\r\n  28669c: d65f03c0 ret\r\n\r\nThe fact that x19 is stored with an offset of 32 looks strange for me and it overwrites the already stored data. Based on other stackframes I would expect an offset of 16 here. Or the new stackframe for the funclet needs to be 16 bytes larger.\r\n\r\nDisclaimer: As the development system for the custom ARM64 system runs on windows I although use a ARM64 jit that is build to run on X64. Very simular to the protonojit but not as alt jit to get all the data needed to write the arm64 elf file that the linker for the custom ARM64 system needs. Unfortunately I don't have an ARM64 windows or linux system to check if a non cross jit generates the same code.\r\n\r\nI assume there is no ready to use jit for my use case and I need to build it anyway. In this case I could properly fix the issue but I would need a hint how the code is expected to look like.  ","Url":"https://github.com/dotnet/corert/issues/7787","RelatedDescription":"Open issue \"finally funclets brocken for ARM64!?\" (#7787)"},{"Id":"490799316","IsPullRequest":true,"CreatedAt":"2019-09-08T23:57:41","Actor":"MichalStrehovsky","Number":"7785","RawContent":null,"Title":"Mark unsafe intrinsics as reflection blocked","State":"closed","Body":"Keeping these reflection enabled pulls in quite a bit of junk (generic dictionaries, standalone method bodies, bookkeeping) that adds up to 1.5% of the size of Hello World...","Url":"https://github.com/dotnet/corert/pull/7785","RelatedDescription":"Closed or merged PR \"Mark unsafe intrinsics as reflection blocked\" (#7785)"},{"Id":"490775070","IsPullRequest":false,"CreatedAt":"2019-09-08T21:11:53","Actor":"mrzaxaryan","Number":"7784","RawContent":null,"Title":"Non-trivial marshalling is not yet supported by this compiler.","State":"closed","Body":"Can't save image to MemoryStream \r\n.NET Core v3.0.0-preview9\r\nVisual Studio 16.3.0 Preview 3.0\r\nException: `System.Exception: Method '[System.Drawing.Common]System.Drawing.SafeNativeMethods+Gdip.GdipSaveImageToStream(HandleRef,IStream,Guid&,HandleRef)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipSaveImageToStream(HandleRef, Interop.Ole32.IStream, Guid&, HandleRef) + 0x39\r\n   at System.Drawing.Image.Save(Stream, ImageCodecInfo, EncoderParameters) + 0x1af`\r\n","Url":"https://github.com/dotnet/corert/issues/7784","RelatedDescription":"Closed issue \"Non-trivial marshalling is not yet supported by this compiler.\" (#7784)"},{"Id":"490757817","IsPullRequest":true,"CreatedAt":"2019-09-08T20:09:59","Actor":"MichalStrehovsky","Number":"7782","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/commit/cd42ee8fe410f71026467ad2e90116115b85f68d\r\nPorts https://github.com/dotnet/coreclr/commit/740752c9d206a465e96a4d01e7dafb6adb6ded63","Url":"https://github.com/dotnet/corert/pull/7782","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7782)"},{"Id":"490760342","IsPullRequest":true,"CreatedAt":"2019-09-08T20:08:39","Actor":"MichalStrehovsky","Number":"7783","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7783","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#7783)"},{"Id":"490704961","IsPullRequest":true,"CreatedAt":"2019-09-08T05:12:25","Actor":"Dotnet-GitSync-Bot","Number":"7781","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7781","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7781)"},{"Id":"490412146","IsPullRequest":true,"CreatedAt":"2019-09-08T00:46:12","Actor":"trylek","Number":"7777","RawContent":null,"Title":"Output raw test lists for the individual outcomes from SuperIlc","State":"closed","Body":"This change tweaks SuperIlc to emit simple line-oriented test lists\r\nfor the various compilation and execution outcomes. I found this\r\nquite useful for comparing various runs. I have also deleted a bit\r\nof dead code I noticed.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7777","RelatedDescription":"Closed or merged PR \"Output raw test lists for the individual outcomes from SuperIlc\" (#7777)"},{"Id":"490662770","IsPullRequest":false,"CreatedAt":"2019-09-07T17:55:27","Actor":"nexon33","Number":"7780","RawContent":null,"Title":"Implement GetInterfaceMap","State":"open","Body":"I want to be able to render a view in asp.net core, I need the controller inheritance to be able to call View();\r\nIs there any simple way of doing this or should I forget about it for now?","Url":"https://github.com/dotnet/corert/issues/7780","RelatedDescription":"Open issue \"Implement GetInterfaceMap\" (#7780)"},{"Id":"490072419","IsPullRequest":true,"CreatedAt":"2019-09-06T23:34:35","Actor":"davidwrighton","Number":"7776","RawContent":null,"Title":"Partial compilation and generic ibc processing","State":"closed","Body":"- Support for partial compilation\r\n- Support for parsing generics in IBC data\r\n - Bonus feature of searching referenced and input assemblies for types if the module in the IBC data is invalid","Url":"https://github.com/dotnet/corert/pull/7776","RelatedDescription":"Closed or merged PR \"Partial compilation and generic ibc processing\" (#7776)"},{"Id":"490437186","IsPullRequest":true,"CreatedAt":"2019-09-06T22:57:58","Actor":"Dotnet-GitSync-Bot","Number":"7778","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7778","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7778)"},{"Id":"489360143","IsPullRequest":true,"CreatedAt":"2019-09-05T19:38:18","Actor":"fadimounir","Number":"7772","RawContent":null,"Title":"Compile cross-module generics in the same version bubble.","State":"closed","Body":"This work is related to the single-exe prototype, but after discussing with @davidwrighton, these are changes that we can have in master as well.\r\n\r\nCompiling generics from external modules in the version bubble is enabled using a command line switch.\r\n\r\nOther changes: Changing signatures in hashtable of instantiations to include owning type as a way of encoding the module override info\r\n","Url":"https://github.com/dotnet/corert/pull/7772","RelatedDescription":"Closed or merged PR \"Compile cross-module generics in the same version bubble.\" (#7772)"},{"Id":"489380977","IsPullRequest":true,"CreatedAt":"2019-09-05T14:33:56","Actor":"MichalStrehovsky","Number":"7773","RawContent":null,"Title":"Get jitwrapper building on x86","State":"closed","Body":"CoreCLR repo is going to build it that way. I could exclude that outside x64, but it's just better to fix it...","Url":"https://github.com/dotnet/corert/pull/7773","RelatedDescription":"Closed or merged PR \"Get jitwrapper building on x86\" (#7773)"},{"Id":"489406467","IsPullRequest":true,"CreatedAt":"2019-09-04T23:16:31","Actor":"Dotnet-GitSync-Bot","Number":"7774","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @NextTurn","Url":"https://github.com/dotnet/corert/pull/7774","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7774)"},{"Id":"488925681","IsPullRequest":true,"CreatedAt":"2019-09-04T16:39:39","Actor":"Dotnet-GitSync-Bot","Number":"7771","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7771","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7771)"},{"Id":"488893657","IsPullRequest":true,"CreatedAt":"2019-09-04T02:16:33","Actor":"Dotnet-GitSync-Bot","Number":"7770","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7770","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7770)"},{"Id":"488826953","IsPullRequest":true,"CreatedAt":"2019-09-04T01:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7769","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7769","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7769)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"495584268","IsPullRequest":true,"CreatedAt":"2019-09-26T05:09:11","Actor":"nguerrera","Number":"3658","RawContent":null,"Title":"Speed up tests","State":"closed","Body":"1. Use isolated node reuse for tests\r\n2. Use msbuild /restore instead of separate restore invocations","Url":"https://github.com/dotnet/sdk/pull/3658","RelatedDescription":"Closed or merged PR \"Speed up tests\" (#3658)"},{"Id":"494997302","IsPullRequest":true,"CreatedAt":"2019-09-26T04:04:02","Actor":"livarcocc","Number":"3656","RawContent":null,"Title":"Change the installed 2.2 runtime to 2.2.7.","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3656","RelatedDescription":"Closed or merged PR \"Change the installed 2.2 runtime to 2.2.7.\" (#3656)"},{"Id":"498578523","IsPullRequest":false,"CreatedAt":"2019-09-25T23:55:16","Actor":"livarcocc","Number":"3678","RawContent":null,"Title":"Turn wpf vb template tests back","State":"open","Body":"Turned the test off because the wpf vb template has been removed for now.\r\n\r\ncc @KathleenDollard ","Url":"https://github.com/dotnet/sdk/issues/3678","RelatedDescription":"Open issue \"Turn wpf vb template tests back\" (#3678)"},{"Id":"497966698","IsPullRequest":true,"CreatedAt":"2019-09-25T23:42:33","Actor":"dsplaisted","Number":"3673","RawContent":null,"Title":"Fix build error when UserSecretsId property is defined but API is not referenced","State":"closed","Body":"Fixes dotnet/core#3290","Url":"https://github.com/dotnet/sdk/pull/3673","RelatedDescription":"Closed or merged PR \"Fix build error when UserSecretsId property is defined but API is not referenced\" (#3673)"},{"Id":"498458933","IsPullRequest":false,"CreatedAt":"2019-09-25T18:44:27","Actor":"nguerrera","Number":"3677","RawContent":null,"Title":"Make perf tests run out of band","State":"open","Body":"See discussion #3654, #3676, #3655\r\n\r\nWe should not block the official build on them and end up having to turn them off in an urgent situation as was done for 3.0 release.","Url":"https://github.com/dotnet/sdk/issues/3677","RelatedDescription":"Open issue \"Make perf tests run out of band\" (#3677)"},{"Id":"498447740","IsPullRequest":true,"CreatedAt":"2019-09-25T18:21:11","Actor":"nguerrera","Number":"3676","RawContent":null,"Title":"Revert \"Remove perf from builds\"","State":"open","Body":"Revert #3654\r\n\r\nFix #3655","Url":"https://github.com/dotnet/sdk/pull/3676","RelatedDescription":"Open PR \"Revert \"Remove perf from builds\"\" (#3676)"},{"Id":"498396299","IsPullRequest":true,"CreatedAt":"2019-09-25T16:31:13","Actor":"dotnet-maestro[bot]","Number":"3675","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3675","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3675)"},{"Id":"498386287","IsPullRequest":true,"CreatedAt":"2019-09-25T16:12:09","Actor":"dotnet-maestro[bot]","Number":"3674","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3674","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3674)"},{"Id":"497578216","IsPullRequest":false,"CreatedAt":"2019-09-24T23:55:42","Actor":"fugaku","Number":"3667","RawContent":null,"Title":"Error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"I'm trying to upgrade my library project from .net core 2.2 to .net core 3.0 using below setup for the `.csproj`\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"LibLog\" Version=\"5.0.6\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.6\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n    <PackageReference Include=\"System.Runtime.Loader\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nI have this dotnet sdk versions installed\r\n```\r\n.NET Core SDK (reflecting any global.json):                                                                                                                                                    Version:   3.0.100                                                                                                                                                                            Commit:    04339c3a26                                                                                                                                                                                                                                                                                                                                                                      Runtime Environment:                                                                                                                                                                           OS Name:     Windows                                                                                                                                                                          OS Version:  10.0.18362                                                                                                                                                                       OS Platform: Windows                                                                                                                                                                          RID:         win10-x64                                                                                                                                                                        Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\                                                                                                                                                                                                                                                                                                                                          Host (useful for support):                                                                                                                                                                      Version: 3.0.0                                                                                                                                                                                Commit:  7d57652f33                                                                                                                                                                                                                                                                                                                                                                       .NET Core SDKs installed:                                                                                                                                                                       2.1.200 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.302 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.503 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.504 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.505 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.507 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.602 [C:\\Program Files\\dotnet\\sdk]                                                                                                                                                         2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]Modules\\CustomsInventory.Modules>\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\nBuilding the project gives me the error \r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(263,5): error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n```\r\n\r\nIs there any documentation regarding referencing Microsoft.AspNetCore.* libraries from a netstandard projects ?","Url":"https://github.com/dotnet/sdk/issues/3667","RelatedDescription":"Closed issue \"Error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3667)"},{"Id":"497919543","IsPullRequest":false,"CreatedAt":"2019-09-24T20:55:16","Actor":"nguerrera","Number":"3672","RawContent":null,"Title":"It_publishes_and_runs_self_contained_wpf_app assumes `dotnet new wpf` targets 3.0","State":"open","Body":"Test is failing in merge of core-sdk 3.0 to 3.1 as it starts running is unprepared for the fact that `dotnet new wpf` now targets 3.1.","Url":"https://github.com/dotnet/sdk/issues/3672","RelatedDescription":"Open issue \"It_publishes_and_runs_self_contained_wpf_app assumes `dotnet new wpf` targets 3.0\" (#3672)"},{"Id":"497912531","IsPullRequest":false,"CreatedAt":"2019-09-24T20:39:51","Actor":"nguerrera","Number":"3671","RawContent":null,"Title":"ReadyToRun failing in 3.1 due to bad assumption about known framework references","State":"open","Body":"```\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\nD:\\Src\\core-sdk\\artifacts\\bin\\redist\\Debug\\dotnet-with-previous-runtimes\\sdk\\3.1.100-preview1-014353\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [D:\\Src\\core-sdk\\artifacts\\tmp\\Debug\\dotnetSdkTests\\GetPublishCom---86179EA5\\HelloWorldWithSubDirs.csproj]\r\n```\r\n\r\nThe code is doing a SingleOrDefault on the KnownFrameworkReferences with Microsoft.NETCore.App framework name, but now there are two that are known: 3.0 and 3.1 so it fails.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3671","RelatedDescription":"Open issue \"ReadyToRun failing in 3.1 due to bad assumption about known framework references\" (#3671)"},{"Id":"497674518","IsPullRequest":false,"CreatedAt":"2019-09-24T13:02:29","Actor":"smoothdeveloper","Number":"3670","RawContent":null,"Title":"Suggestion: location of global.json (and like files), should they move to a .dotnet subfolder?","State":"open","Body":"Asking if `global.json` (and other similar files) could be resolved from a `.dotnet` subfolder rather than at the root of repository.\r\n\r\nMotives:\r\n1. root folder is a crawded place\r\n1. `global.json` is to  generic of a name, doesn't convey anything related to dotnet, moving it to a folder, and maybe renaming it?\r\n\r\nSorry if this issue has been brought up, tried to search, and it has been bothering me due to point 1.","Url":"https://github.com/dotnet/sdk/issues/3670","RelatedDescription":"Open issue \"Suggestion: location of global.json (and like files), should they move to a .dotnet subfolder?\" (#3670)"},{"Id":"497672701","IsPullRequest":false,"CreatedAt":"2019-09-24T12:59:18","Actor":"retifrav","Number":"3669","RawContent":null,"Title":"dotnet build ignores .config files from .csproj CopyToOutputDirectory","State":"open","Body":"I noticed that `.csproj` rule\r\n\r\n```\r\n<ItemGroup>\r\n  <None Update=\"log4net.config\" CopyToOutputDirectory=\"Always\" />\r\n</ItemGroup>\r\n```\r\n\r\nis ignored for files with `.config` extension when performing `dotnet build`.\r\n\r\nI've done some testing with the following project:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Update=\"ololo.config\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"ololo.config2\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"ololo.confi\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"log4net.config\" CopyToOutputDirectory=\"Always\" />\r\n    <None Update=\"some.txt\" CopyToOutputDirectory=\"Always\" />\r\n  </ItemGroup>\r\n\r\n  ...\r\n\r\n</Project>\r\n```\r\n\r\nThe following files are successfully copied to the output directory:\r\n\r\n- `ololo.config2`\r\n- `ololo.confi`\r\n- `some.txt`\r\n\r\nBut these files are not copied:\r\n\r\n- `ololo.config`\r\n- `log4net.config`\r\n\r\nLike I said, this happens on `dotnet build`. At the same time `dotnet publish` works fine and copies all the files.\r\n\r\nMy environment:\r\n\r\n```\r\n> dotnet --info\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3669","RelatedDescription":"Open issue \"dotnet build ignores .config files from .csproj CopyToOutputDirectory\" (#3669)"},{"Id":"497596539","IsPullRequest":false,"CreatedAt":"2019-09-24T10:21:19","Actor":"gmeks","Number":"3668","RawContent":null,"Title":" error MSB6006: \"dotnet.exe\" exited with code -532462766. (With PublishTrimmed=true)","State":"open","Body":"Host (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\nIf i enabled PublishTrimmed=true when trying to publish a .net Core 3.0 application ( Newly updated from .net Core 2.2) i get the following error:\r\nC:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent>dotnet publish -c Release -r win10-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n```\r\n  Restore completed in 26,23 ms for C:\\SourceCode\\PlaniaHomeMVC\\PlaniaHomeShared\\PlaniaHomeShared.csproj.\r\n  Restore completed in 40,52 ms for C:\\SourceCode\\PlaniaHomeMVC\\HomeAgentShared\\HomeAgentShared.csproj.\r\n  Restore completed in 40,68 ms for C:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent\\BuildServerAgent.csproj.\r\n  PlaniaHomeShared -> C:\\SourceCode\\PlaniaHomeMVC\\PlaniaHomeShared\\bin\\Release\\netcoreapp3.0\\PlaniaHomeShared.dll\r\n  HomeAgentShared -> C:\\SourceCode\\PlaniaHomeMVC\\HomeAgentShared\\bin\\Release\\netcoreapp3.0\\HomeAgentShared.dll\r\n  BuildServerAgent -> C:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent\\bin\\Release\\netcoreapp3.0\\win10-x64\\BuildServerAgent.dll\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(87,5): error MSB6006: \"dotnet.exe\" exited with code -532462766. [C:\\SourceCode\\PlaniaHomeMVC\\BuildServerAgent\\BuildServerAgent.csproj]\r\n\r\n```\r\nAnd im unsure what i have done wrong, i assume i missed something in the upgrade to .NET Core 3.0. If i remove PublishTrimmed it works","Url":"https://github.com/dotnet/sdk/issues/3668","RelatedDescription":"Open issue \" error MSB6006: \"dotnet.exe\" exited with code -532462766. (With PublishTrimmed=true)\" (#3668)"},{"Id":"497330597","IsPullRequest":false,"CreatedAt":"2019-09-24T05:53:28","Actor":"giordi91","Number":"3665","RawContent":null,"Title":"Issues comparing types from hosted .net core contexts in c++","State":"closed","Body":"Good evening, apologies if this is not the right place for this question. If this is the case please let me know. \r\n\r\nI am working on a project where I am hosting a .net core 3.0 context in my c++ application, trying to use c# as scripting language. The main idea is to bootstrap a high level c# class, and do all the heavy lifting inside there and minimize as much as possible c++ and c# interaction. Here is a structure of my project:\r\n\r\n![Untitled Diagram(1)](https://user-images.githubusercontent.com/2525797/65462034-dab9c800-de4c-11e9-894b-1d9cc447e432.png)\r\n\r\nThe c++ application starts and loads a \"context.dll\" This is the c# class I will be using to do the heavy lifting, such class is loaded using hostfxr.I get a delegate to a static function and call it. \r\nThat context.dll is then used to load scripting dlls. Basically user defined classes. I am interested on all classes which inherit from \"ScriptingComponent\" base class. Such class is defined in core.dll \r\nI do not explicitly load such .dll It is set as reference in the context.dll project. The context.dll uses the ScriptingComponent symbol to use reflection on the loaded assemblies. \r\n\r\nThe context.dll loads then script.dll, Inside that dll there is a signle class, inheriting from Scriptable component. To do the loading I was using AssemblyLoadContext.Default.LoadFromPath, the issue with that was it did not correctly resolve the core.dll dependency. Then I moved to use the same code showed here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nThis allowed to correctly resolve the core.dll dependency of the script.dll library. Everything seems to work fine but then every method I am using of reflection to ask if the class in script.dll inherits from ScriptableComponents it fails. \r\nI can post a lot of tests I did to make sure 100% that they are the same, even the GUID \r\nwas exactly the same, although my comparison fails.\r\n \r\nNow that made me thinking, might that be that symbol is loaded twice into two different contexts? The first is contex.dll which loads the Symbol from core.dll, but then the symbol might be loaded again as a dependency of script.dll and somehow the two don't match across contexts?\r\n\r\nThis is the context of core.dll, a single base class and nothing else\r\n```c#\r\n    public class ScriptableComponent\r\n    {\r\n        public virtual void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From base\");\r\n        }\r\n\r\n        public virtual void PostAnimationEval()\r\n        {\r\n        }\r\n    }\r\n```\r\n\r\nMy script.dll has this inside, a single base class inheriting from ScriptableComponent:\r\n```c#\r\npublic class TestLib : ScriptableComponent\r\n    {\r\n        public override void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From override\");\r\n        }\r\n    }\r\n```\r\n\r\nFinally in the context.dll I load the assembly and check for the types inherithing from my type.\r\n```c#\r\n                PluginLoadContext loadContext = new PluginLoadContext(path);             \r\n                Assembly ass = loadContext.LoadFromAssemblyName(new AssemblyName(assemblyName));\r\n\r\n                List<MethodInfo> methods = new List<MethodInfo>();\r\n\r\n                foreach (Type type in ass.GetTypes())\r\n                {\r\n\r\n                    if(type.IsSubclassOf(typeof(ScriptableComponent)))\r\n                    {\r\n                        Console.WriteLine(\"Found scriptable component: \" + type.Name);\r\n                    }\r\n                 }\r\n```\r\n\r\nThe documentation of the Microsoft tutorial on plugin architecture mentions that AssemblyLoadContext is made to load stuff in isolation, might that be the prolem? Ideally I would want to load in the same context my main dll (contex.dll) is in. \r\n\r\nCan you advice on the matter? \r\nI understand is not a simple issue and hope it is not too confusing.","Url":"https://github.com/dotnet/sdk/issues/3665","RelatedDescription":"Closed issue \"Issues comparing types from hosted .net core contexts in c++\" (#3665)"},{"Id":"497396166","IsPullRequest":true,"CreatedAt":"2019-09-24T00:49:46","Actor":"wli3","Number":"3666","RawContent":null,"Title":"WIP Helix test","State":"open","Body":"will that work?","Url":"https://github.com/dotnet/sdk/pull/3666","RelatedDescription":"Open PR \"WIP Helix test\" (#3666)"},{"Id":"497311467","IsPullRequest":false,"CreatedAt":"2019-09-23T20:28:38","Actor":"yingnanl","Number":"3664","RawContent":null,"Title":"Set GCCpuGroup and Thread_UseAllCpuGroups via project file options","State":"open","Body":"Currently I can set ServerGarbageCollection by project file options as below.\r\n\r\n  <PropertyGroup>\r\n    <ServerGarbageCollection>true</ServerGarbageCollection>\r\n    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>    \r\n  </PropertyGroup>\r\n\r\nIs it ok to support GCCpuGroup and Thread_UseAllCpuGroups too?","Url":"https://github.com/dotnet/sdk/issues/3664","RelatedDescription":"Open issue \"Set GCCpuGroup and Thread_UseAllCpuGroups via project file options\" (#3664)"},{"Id":"497008416","IsPullRequest":false,"CreatedAt":"2019-09-23T10:12:46","Actor":"giordi91","Number":"3663","RawContent":null,"Title":"Debugging .net core 3.0 from hosted application","State":"open","Body":"I am hosting a .net core 3.0 context into my c++ application. Unluckily no matter what I try I am  not able to debug the c# code. Is there any way to do so? \r\n\r\nI am loading an entry point assembly using hostfxr.h as shown in the dotnet/samples. Then from inside c# I am loading all the other c# dlls using the documentation from here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nEverything works fine, I am mostly missing the ability to debug the c# code. That is the main reason I picked c# over other languages for the integration. \r\n\r\nI have enabled native code debugging in my c# application, but that did not help. Do I need to load the pbd files manually somehow?\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3663","RelatedDescription":"Open issue \"Debugging .net core 3.0 from hosted application\" (#3663)"},{"Id":"496402326","IsPullRequest":false,"CreatedAt":"2019-09-20T15:02:40","Actor":"rainersigwald","Number":"3662","RawContent":null,"Title":"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata","State":"open","Body":"_From @joeltankam on Friday, September 20, 2019 2:22:39 PM_\r\n\r\n### Steps to reproduce\r\n\r\nI encounter some missing metadata to `ReferenceCopyLocalPaths` item since migrating to `Microsoft.NET.Sdk` format in project files.\r\n\r\nLets consider the following project file :\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net471</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI use the following code to print metadata from `ReferenceCopyLocalPaths` items : \r\n\r\n```xml\r\n  <UsingTask TaskName=\"GetMetadataTask\" TaskFactory=\"CodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.v4.0.dll\" >\r\n    <ParameterGroup>\r\n      <Items ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\" Required=\"true\" />\r\n      <MetadataString Output=\"true\" />\r\n    </ParameterGroup>\r\n    <Task>\r\n      <Using Namespace=\"System\"/>\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n        <![CDATA[\r\n            StringBuilder metadata = new StringBuilder();\r\n            foreach (var item in Items)\r\n            {\r\n                metadata.AppendFormat(\"{0}\\r\\n\", item);\r\n                foreach (string name in item.MetadataNames)\r\n                {\r\n                    metadata.AppendFormat(\"  {0}={1}\\r\\n\", name, item.GetMetadata(name));\r\n                }\r\n                metadata.AppendFormat(\"\\r\\n\");\r\n            }\r\n            MetadataString = metadata.ToString();\r\n        ]]>\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <PrintItems Include=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\" />\r\n    </ItemGroup>\r\n    <GetMetadataTask Items=\"@(PrintItems)\">\r\n      <Output TaskParameter=\"MetadataString\" PropertyName=\"MyBeautifulMetadata\"/>\r\n    </GetMetadataTask>\r\n    <Message Importance=\"High\" Text=\"$(MyBeautifulMetadata)\" />\r\n  </Target>\r\n```\r\n\r\n### Expected  behavior\r\nWhen using old project files format, I had the following metadata : \r\n\r\n```txt\r\n  ItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\n### Actual behavior\r\n\r\nNow I get the following : \r\n\r\n```txt\r\nItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\nThe difference being the absence of : \r\n\r\n```txt\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n```\r\n\r\nHowever, I need the `NuGetSourceType` metadata in my build process. \r\nIs there please any reason why this this metadata disappeared ? Is there a way to set it back ?\r\n\r\nI currently use this custom target to set back `NuGetSourceType` :\r\n\r\n```xml\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveReferences\">\r\n    <ItemGroup>\r\n      <ReferenceCopyLocalPaths Update=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\">\r\n        <NuGetSourceType>Package</NuGetSourceType>\r\n      </ReferenceCopyLocalPaths>\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.9.21.664\r\n.NET Core SDK version : 2.2.108\r\nVisual Studio : Professional 2017, v 15.9.16\r\n\r\n\r\n_Copied from original issue: microsoft/msbuild#4754_","Url":"https://github.com/dotnet/sdk/issues/3662","RelatedDescription":"Open issue \"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata\" (#3662)"},{"Id":"494301303","IsPullRequest":false,"CreatedAt":"2019-09-19T23:50:33","Actor":"wli3","Number":"3649","RawContent":null,"Title":"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64","State":"closed","Body":"https://github.com/dotnet/sdk/blob/fe6b50c78426124e34e56ecb7df8b6b86e6e0b48/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L118\r\n\r\ndoes not consider ARM and ARM64","Url":"https://github.com/dotnet/sdk/issues/3649","RelatedDescription":"Closed issue \"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64\" (#3649)"},{"Id":"496051527","IsPullRequest":false,"CreatedAt":"2019-09-19T22:15:19","Actor":"billwert","Number":"3661","RawContent":null,"Title":"PrepareForReadyToRunCompilation task fails on 5.0","State":"open","Body":"Trying to publish with ready to run on a console app with the 5.0 SDK fails as below.\r\n\r\ncc: @nguerrera @fadimounir \r\n\r\n```console\r\nC:\\test>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-014713\r\n Commit:    60688b13db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18986\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha1.19468.6\r\n  Commit:  30c4a25a9a\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-alpha1-014713 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0-alpha1.19468.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n```console\r\nC:\\test>dotnet publish -c Release -bl /p:PublishReadyToRun=true -r win-x64\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19456-02+ee8294b55 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\MSBuild.dll -bl -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll -maxcpucount -property:Configuration=Release -property:RuntimeIdentifier=win-x64 /p:PublishReadyToRun=true -restore -target:Publish -verbosity:m .\\test.csproj\r\n  Restore completed in 2.38 sec for C:\\test\\test.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  test -> C:\\test\\bin\\Release\\netcoreapp3.0\\win-x64\\test.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/PrepareForReadyToRunCompilation.cs:line 69 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\test\\test.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3661","RelatedDescription":"Open issue \"PrepareForReadyToRunCompilation task fails on 5.0\" (#3661)"},{"Id":"495449618","IsPullRequest":true,"CreatedAt":"2019-09-19T16:35:52","Actor":"wli3","Number":"3657","RawContent":null,"Title":"Default app host runtime identifier for arm and arm64","State":"closed","Body":"Fix https://github.com/dotnet/sdk/issues/3649\r\n\r\nDue to https://github.com/dotnet/sdk/issues/3636 I cannot test it. And https://github.com/dotnet/sdk/issues/3636 's fix will be in core-sdk. So I think we should check it in for now.","Url":"https://github.com/dotnet/sdk/pull/3657","RelatedDescription":"Closed or merged PR \"Default app host runtime identifier for arm and arm64\" (#3657)"},{"Id":"495755187","IsPullRequest":true,"CreatedAt":"2019-09-19T12:02:08","Actor":"dotnet-maestro[bot]","Number":"3660","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:15 AM\r\n- **Commit**: ef4b288de587f0b86e65b3950e9095f714808ade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19473.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19473.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3660","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3660)"},{"Id":"495642530","IsPullRequest":false,"CreatedAt":"2019-09-19T08:13:09","Actor":"thomaslevesque","Number":"3659","RawContent":null,"Title":"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7","State":"open","Body":"As I understand it, .NET Core 3 SDK installer is supposed to uninstall previous versions.\r\nHowever, I had preview7 and just installed RC1, and preview7 wasn't removed:\r\n\r\n```\r\n> dotnet --info\r\n...\r\n    .NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nIs this expected?\r\n\r\nAlso, preview7 no longer appears in \"Apps and features\", so I'm not sure how to remove it...","Url":"https://github.com/dotnet/sdk/issues/3659","RelatedDescription":"Open issue \"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7\" (#3659)"},{"Id":"494904114","IsPullRequest":true,"CreatedAt":"2019-09-18T18:17:46","Actor":"wli3","Number":"3652","RawContent":null,"Title":"Block non library","State":"closed","Body":"Instead of blocking exe only, considering there are also StaticLibrary and empty (utility)","Url":"https://github.com/dotnet/sdk/pull/3652","RelatedDescription":"Closed or merged PR \"Block non library\" (#3652)"},{"Id":"494996231","IsPullRequest":false,"CreatedAt":"2019-09-18T05:26:58","Actor":"mmitche","Number":"3655","RawContent":null,"Title":"Reenable Helix perf on 3.0.1xx ","State":"open","Body":"Re-enable helix perf on 3.0.1xx. Removed at: https://github.com/dotnet/sdk/pull/3654","Url":"https://github.com/dotnet/sdk/issues/3655","RelatedDescription":"Open issue \"Reenable Helix perf on 3.0.1xx \" (#3655)"},{"Id":"494995531","IsPullRequest":true,"CreatedAt":"2019-09-18T05:25:16","Actor":"mmitche","Number":"3654","RawContent":null,"Title":"Remove perf from builds","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3654","RelatedDescription":"Closed or merged PR \"Remove perf from builds\" (#3654)"},{"Id":"494906082","IsPullRequest":true,"CreatedAt":"2019-09-18T05:15:21","Actor":"dotnet-maestro[bot]","Number":"3653","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6251\r\n- **Date Produced**: 9/17/2019 11:35 PM\r\n- **Commit**: b75150f2f4127a77a166c9552845e86fb24a3282\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6251\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3653","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3653)"},{"Id":"494846089","IsPullRequest":false,"CreatedAt":"2019-09-17T20:52:01","Actor":"wli3","Number":"3651","RawContent":null,"Title":"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/3651","RelatedDescription":"Open issue \"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)\" (#3651)"},{"Id":"494423594","IsPullRequest":false,"CreatedAt":"2019-09-17T06:18:24","Actor":"dasMulli","Number":"3650","RawContent":null,"Title":"Warn on publishing solutions / path forward for publishing solutions","State":"open","Body":"There are many issues with doing a publish on solution files.\r\n\r\nI suggest emitting a Warning when trying to do so. I think this may be possible through solution extension points.\r\n\r\nso `dotnet publish the.sln` would emit something like `NETSDK999: Publishing whole solutions can lead to unintended side-effects`.\r\nThis could then be disabled with `dotnet publish the.sln -p:WarnOnPublishingSolutions=False`.\r\n\r\nWhile there are suggestions of allowing base paths for solution publishing to create folders for each project are possible, it has a few edge cases (same csproj names in different solution folders etc.).","Url":"https://github.com/dotnet/sdk/issues/3650","RelatedDescription":"Open issue \"Warn on publishing solutions / path forward for publishing solutions\" (#3650)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1177009895125737478","CreatedAt":"2019-09-26T00:00:01+00:00","UserScreenname":"dotnet","Text":"…and that's a wrap!!! THANK YOU!!! from all of us at #dotNETconf! 👏 👏 👏 \n\nWatch for our on demand sessions - we'll… https://t.co/h1k6wRrSLg","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":42,"FavoriteCount":5,"RawContent":null},{"Id":"1177001086831538184","CreatedAt":"2019-09-25T23:25:01+00:00","UserScreenname":"dotnet","Text":"Be an A11Y. Build Accessible Web Sites for Everyone is streaming live @ #dotNETConf with @rachelappel The last sess… https://t.co/Cqy7FgAB9Z","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"1176993538233516032","CreatedAt":"2019-09-25T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Mixed Reality with Xamarin and Azure Spatial Anchors with @SweekritiS. Tune in:… https://t.co/VtnLnD72W9","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null},{"Id":"1176985986494021632","CreatedAt":"2019-09-25T22:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: How containerized #SQLServer makes development easier with @michaeljolley. Watch here:… https://t.co/9sHXsLEbvX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":16,"FavoriteCount":4,"RawContent":null},{"Id":"1176978438521008129","CreatedAt":"2019-09-25T21:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf, @MillerMark gives us the science behind creating great UI. Check it out:… https://t.co/reMT35s4iH","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":11,"FavoriteCount":1,"RawContent":null},{"Id":"1176970887410659330","CreatedAt":"2019-09-25T21:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Modeling Relational Data using #CosmosDB with @southpolesteve. Tune in here:… https://t.co/Fhwy6hw0n3","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1176963337957064704","CreatedAt":"2019-09-25T20:55:01+00:00","UserScreenname":"dotnet","Text":"Flat-tops, feature flags, and finite state machines... Disaster resilience the Waffle House way with @wiredferret i… https://t.co/BmJZBZxRCx","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"1176955788922904576","CreatedAt":"2019-09-25T20:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf, @ardalis gives us a tour of Microsoft's Reference #ASPNET Core App, eShopOnWeb. Check… https://t.co/g5arV1PVGg","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":22,"FavoriteCount":7,"RawContent":null},{"Id":"1176948239322484736","CreatedAt":"2019-09-25T19:55:01+00:00","UserScreenname":"dotnet","Text":"Get a gentle intro to Azure #CosmosDB for @ASPNET and #SQLServer devs. @_s_hari is streaming now at #dotNETConf:… https://t.co/zBrBJoz6cT","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"1176945465516072961","CreatedAt":"2019-09-25T19:44:00+00:00","UserScreenname":"dotnet","Text":"ICYMI Check out this video with Bart De Smet talking about the System.Linq.Async nuget package that adds some commo… https://t.co/ZrFVZMo6NK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":19,"RawContent":null},{"Id":"1176940689617297408","CreatedAt":"2019-09-25T19:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Architecting .NET Microservices in a Docker Ecosystem with @rebaihamida. Watch here:… https://t.co/X1TJluYztU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":25,"FavoriteCount":4,"RawContent":null},{"Id":"1176933139450605568","CreatedAt":"2019-09-25T18:55:01+00:00","UserScreenname":"dotnet","Text":"Let's go beyond the basics... happening now @ #dotNETConf, @mjrousos discusses modernizing .NET applications with .… https://t.co/oossHhkmnJ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"1176925591091765248","CreatedAt":"2019-09-25T18:25:01+00:00","UserScreenname":"dotnet","Text":"Put the \".NET\" into \"KuberNETes.\" Happening now @ #dotNETConf, @EltonStoneman is streaming live:… https://t.co/arx9iGoVZ5","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":36,"FavoriteCount":5,"RawContent":null},{"Id":"1176918038752518145","CreatedAt":"2019-09-25T17:55:01+00:00","UserScreenname":"dotnet","Text":"Boost your #Xamarin development Productivity. @maddyleger1 is up next at @ #dotNETConf. Happening now:… https://t.co/HleHrVut3t","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":8,"RawContent":null},{"Id":"1176910489168818178","CreatedAt":"2019-09-25T17:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Updateable Static Sites for .NET Developers @jtowermi. Tune in: https://t.co/irKAH46tsn https://t.co/nNbdRkllPc","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"1176902940147290112","CreatedAt":"2019-09-25T16:55:01+00:00","UserScreenname":"dotnet","Text":"Fall into the Pit of Success. \n\n@jeffreypalermo's session on #AzureDevOps for .NET is happening now @ #dotNETConf.… https://t.co/ZSl7sS3Ii6","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1176895389926117377","CreatedAt":"2019-09-25T16:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: @ASPNET Razor: Into the Razor'verse with @EdCharbeneau. Tune in:… https://t.co/7KxrZa244s","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":16,"FavoriteCount":2,"RawContent":null},{"Id":"1176887840480718848","CreatedAt":"2019-09-25T15:55:01+00:00","UserScreenname":"dotnet","Text":"Get an introduction to Akka .NET. Happening now @ #dotNETConf, the when and how to use the actor model with… https://t.co/jmcmam2EQt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":35,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2019-09-26T05:30:41.6805778Z","RunDurationInMilliseconds":16690}