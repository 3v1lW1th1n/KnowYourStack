{"Data":{"GitHub":{"Issues":[{"Id":"453740725","IsPullRequest":false,"CreatedAt":"2019-06-08T01:12:10","Actor":"deepakkumar1984","Number":"3846","RawContent":null,"Title":"ML.NET support for CNTK","State":"open","Body":"Does ML.NET support CNTK? I see support for Tensorflow, what about the MS initiative for CNTK. Is that abandon now?","Url":"https://github.com/dotnet/machinelearning/issues/3846","RelatedDescription":"Open issue \"ML.NET support for CNTK\" (#3846)"},{"Id":"453664353","IsPullRequest":false,"CreatedAt":"2019-06-07T19:37:37","Actor":"writetokavitha","Number":"3845","RawContent":null,"Title":"Equivalent of SVM.SVC of slkearn","State":"open","Body":"We use the following from sklearn for training our model for multi-class text classification\r\nWhat would be the equivalent in ML.Net ?\r\n\r\nclfsvm = Pipeline([('vect', CountVectorizer(tokenizer=tokenize, lowercase=True, stop_words=stop_words, ngram_range=(2,2))),\r\n                          ('tfidf', TfidfTransformer(use_idf = False)),\r\n                             ('clf', SVC(kernel = 'linear', probability = True)),])\r\nclfsvm.fit(df_train, df_label)\r\n\r\nhttps://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3845","RelatedDescription":"Open issue \"Equivalent of SVM.SVC of slkearn\" (#3845)"},{"Id":"453661554","IsPullRequest":false,"CreatedAt":"2019-06-07T19:29:07","Actor":"writetokavitha","Number":"3844","RawContent":null,"Title":"Porting algorithm - Multinomial NB","State":"open","Body":"\r\n@codemzs Not finding multinomial NB as part of the ML.Net algorithms which we use for intent detection.\r\n\r\n\r\nFrom nb sci kit learn libraries:\r\nhttps://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html\r\n\r\nclfnb = Pipeline([('vect', CountVectorizer(tokenizer=None, lowercase=True, stop_words=None, ngram_range=(1,2))), \r\n                  ('tfidf', TfidfTransformer(use_idf = True)),\r\n                  ('clf', MultinomialNB()),])\r\nclfnb.fit(df_train, df_label)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3844","RelatedDescription":"Open issue \"Porting algorithm - Multinomial NB\" (#3844)"},{"Id":"453654650","IsPullRequest":false,"CreatedAt":"2019-06-07T19:08:22","Actor":"writetokavitha","Number":"3843","RawContent":null,"Title":"Missing algorithms - SGD modified_huber","State":"open","Body":"@codemzs \r\nI am from the marketing automation team at MSFT and doing intent detection on lead emails. We use the SGD and SVM in sci-kit learn in production and find it missing in ML.Net. Could you look into adding\r\nSGD with following loss function:\r\nloss=\"hinge\": (soft-margin) linear Support Vector Machine,\r\nloss=\"modified_huber\": smoothed hinge loss,\r\nloss=\"log\": logistic regression,\r\n\r\nWe are getting 10%+ points increase in accuracy using modified_huber rather than hinge or log loss function. All the loss functions would be important for us priority would be\r\n1. Modified_huber\r\n2. hinge\r\n3. log\r\n\r\nhttps://scikit-learn.org/stable/modules/sgd.html#classification\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3843","RelatedDescription":"Open issue \"Missing algorithms - SGD modified_huber\" (#3843)"},{"Id":"453651267","IsPullRequest":true,"CreatedAt":"2019-06-07T18:58:29","Actor":"shmoradims","Number":"3842","RawContent":null,"Title":"Revert \"Publish nugets to temporary myget feed (#3400)\"","State":"open","Body":"This reverts commit 0a90bbb49da69765c2ff870078fdabfb20783a58.\r\n\r\nshmoradi myget feed is downgraded to 200MB of space after a month and needs to be replaced with a permanent solution. It was created as a workaround before //build. Disabling it for now to prevent the failure in publishing step.","Url":"https://github.com/dotnet/machinelearning/pull/3842","RelatedDescription":"Open PR \"Revert \"Publish nugets to temporary myget feed (#3400)\"\" (#3842)"},{"Id":"453624657","IsPullRequest":false,"CreatedAt":"2019-06-07T17:45:41","Actor":"shmoradims","Number":"3841","RawContent":null,"Title":"CreateTextLoader documentation is missing details","State":"open","Body":"The following parameters of CreateTextLoader API are missing detailed explanation and proper example:\r\n\r\n* allowSparse: what is the sparse format?  + example\r\n* allowQuoting: what does this exactly mean? does quoting cause the separator within quotes to be skipped? Is it single quotes or double quotes?\r\n* hasHeader: seems like hasHeader only causes the header line to be skipped, but it doesn't help with automatic detection of column names. Is that the case?\r\n * dataSample: needs sample\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a745f3b1-1356-0888-4804-f6141496da18\r\n* Version Independent ID: 0a2d7c9e-9319-8393-bb4a-058bf72450ba\r\n* Content: [TextLoaderSaverCatalog.CreateTextLoader Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.textloadersavercatalog.createtextloader?view=ml-dotnet#Microsoft_ML_TextLoaderSaverCatalog_CreateTextLoader_Microsoft_ML_DataOperationsCatalog_Microsoft_ML_Data_TextLoader_Column___System_Char_System_Boolean_Microsoft_ML_Data_IMultiStreamSource_System_Boolean_System_Boolean_System_Boolean_)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TextLoaderSaverCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TextLoaderSaverCatalog.xml)","Url":"https://github.com/dotnet/machinelearning/issues/3841","RelatedDescription":"Open issue \"CreateTextLoader documentation is missing details\" (#3841)"},{"Id":"453605771","IsPullRequest":true,"CreatedAt":"2019-06-07T16:52:33","Actor":"justinormont","Number":"3840","RawContent":null,"Title":"Broken docs images for ranking metrics","State":"open","Body":"Fixes two broken links to images at https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.rankingmetrics?view=ml-dotnet-1.1.0\r\n\r\nIssues fixed by this PR:\r\n* Linking to GitHub's webpage for the images, and not the images it self\r\n* Linking to the master branch, which will change overtime, potentially breaking older versions of the docs\r\n\r\nIssues NOT fixed by this PR:\r\n* Linking at all to GitHub -- Do we have a way to have the docs make its own copy of the image? Currently the user's browser will pull the image from GitHub while on docs.microsoft.com. Perhaps this will be fixed when this PR fixes the link?\r\n* NDCG.png has a transparent background; DCG.png one does not \r\n* We may want a check-in test which verifies document image links\r\n\r\nFeel free to push to this PR if you can fix any of the additional above items.","Url":"https://github.com/dotnet/machinelearning/pull/3840","RelatedDescription":"Open PR \"Broken docs images for ranking metrics\" (#3840)"},{"Id":"453271903","IsPullRequest":true,"CreatedAt":"2019-06-07T13:48:58","Actor":"shmoradims","Number":"3835","RawContent":null,"Title":"Explain MLContext seed parameter","State":"closed","Body":"Fixes #3048.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3835","RelatedDescription":"Closed or merged PR \"Explain MLContext seed parameter\" (#3835)"},{"Id":"453482406","IsPullRequest":false,"CreatedAt":"2019-06-07T12:12:32","Actor":"zeroskyx","Number":"3839","RawContent":null,"Title":"Provide a simple sample for in-memory object detection (images)","State":"open","Body":"Greetings,\r\n\r\nthanks for providing ML.net to us, you're really doing great work for the .NET community here.\r\n\r\nWith ML.net 1.1.0 you introduced the possibility to use in-memory data such as images (#3263) along with two samples to use them.  \r\nI'm still having trouble conveying the concept to using in-memory images for the [object detection sample](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ObjectDetection_Onnx).\r\n\r\nWould it be possible to adapt the sample with the alternative to load an image from memory (`Bitmap.FromFile()` for instance) or explain how we could do that here?\r\n\r\nThanks in advance, best regards and keep up the great work\r\n-Simon\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3839","RelatedDescription":"Open issue \"Provide a simple sample for in-memory object detection (images)\" (#3839)"},{"Id":"453305449","IsPullRequest":false,"CreatedAt":"2019-06-07T01:43:25","Actor":"daholste","Number":"3838","RawContent":null,"Title":"Enable Binary Classification Metric Calculation on Huge Datasets","State":"open","Body":"From experimenting, it seems like calculating binary classification metrics does not scale to huge datasets. Taking a heap dump to examine the high memory usage (before the program runs out of memory), I see a list of floats used by `UnweightedAucAggregator`. It looks like, to calculate AUC, every prediction is kept in memory. It also looks like there is already substantial logic to account for this scenario -- there's logic to reservoir sample predictions, and then calculate AUC on the sample. However, it looks like the size of the internal parameter `MaxAucExamples` to control the size of this reservoir sample is always set to -1, and not exposed to the end user?https://github.com/dotnet/machinelearning/blob/610ffcb67083c2e5e6e1a14884ba24b1da0384c7/src/Microsoft.ML.Data/Evaluators/BinaryClassifierEvaluator.cs#L45 \r\nPerhaps we should somehow expose this parameter to enable binary metric calculation on huge datasets, or set the parameter to some reasonable default\r\n@justinormont, @vinodshanbhag ","Url":"https://github.com/dotnet/machinelearning/issues/3838","RelatedDescription":"Open issue \"Enable Binary Classification Metric Calculation on Huge Datasets\" (#3838)"},{"Id":"453293558","IsPullRequest":true,"CreatedAt":"2019-06-07T00:33:03","Actor":"wschin","Number":"3837","RawContent":null,"Title":"Bump ONNXRuntime version","State":"open","Body":"Toward #3836. We will have to increase the number of tests to have higher code coverage.\r\n\r\nThose initial failed tests are caused by an incorrect field in ResNet18 ONNX model. Its last layer (AveragePool) should only have 4 integers as `pads` but found 6. To fix this problem, we need to update ML.NET's model blob on azure (under internal TLC subscription).","Url":"https://github.com/dotnet/machinelearning/pull/3837","RelatedDescription":"Open PR \"Bump ONNXRuntime version\" (#3837)"},{"Id":"453293411","IsPullRequest":false,"CreatedAt":"2019-06-07T00:32:10","Actor":"wschin","Number":"3836","RawContent":null,"Title":"ONNXTransformer can be upgraded","State":"open","Body":"ONNXRuntime has released 0.4.0 version, so ML.NET needs to be upgraded to include newly added features.\r\n\r\nWorking items:\r\n- Add new types to enable ONNX dictionary and sequence.\r\n- Enrich tests.","Url":"https://github.com/dotnet/machinelearning/issues/3836","RelatedDescription":"Open issue \"ONNXTransformer can be upgraded\" (#3836)"},{"Id":"452037688","IsPullRequest":false,"CreatedAt":"2019-06-06T21:27:35","Actor":"PeterPann23","Number":"3817","RawContent":null,"Title":"how will you know this at the time of coding...","State":"closed","Body":"I guess it would be appropriate to set this value at runtime as a developer can hardly know what runtime value will be in effect without knowing the data.\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 8d7b6ec7-078a-9f61-3250-ceba1a3a1846\n* Version Independent ID: 13902a2a-592f-a075-a68e-b09002f8e714\n* Content: [LightGbmBinaryTrainer.Options.WeightOfPositiveExamples Field (Microsoft.ML.Trainers.LightGbm)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmbinarytrainer.options.weightofpositiveexamples?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmBinaryTrainer+Options.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers.LightGbm/LightGbmBinaryTrainer+Options.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3817","RelatedDescription":"Closed issue \"how will you know this at the time of coding...\" (#3817)"},{"Id":"453168729","IsPullRequest":true,"CreatedAt":"2019-06-06T18:09:46","Actor":"codemzs","Number":"3834","RawContent":null,"Title":"Move Time Series, TensorFlow and OnnxConverter nugets to stable project","State":"open","Body":"fixes #3833\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3834","RelatedDescription":"Open PR \"Move Time Series, TensorFlow and OnnxConverter nugets to stable project\" (#3834)"},{"Id":"453168427","IsPullRequest":false,"CreatedAt":"2019-06-06T18:08:58","Actor":"codemzs","Number":"3833","RawContent":null,"Title":"Move Time Series, TensorFlow and OnnxConverter nugets to stable project.","State":"open","Body":"We plan to GA them in 1.2 release.","Url":"https://github.com/dotnet/machinelearning/issues/3833","RelatedDescription":"Open issue \"Move Time Series, TensorFlow and OnnxConverter nugets to stable project.\" (#3833)"},{"Id":"452666106","IsPullRequest":true,"CreatedAt":"2019-06-06T12:14:33","Actor":"shmoradims","Number":"3831","RawContent":null,"Title":"Add default and missing value definitions for ML.NET types","State":"closed","Body":"Fixes #3443.\r\n\r\nThis PR has two related parts:\r\n\r\n1) Add default and missing values definitions. DataKind page, seems the best place to have all of that information in one place. The documented definitions come from [IsNa region](https://github.com/dotnet/machinelearning/blob/2960b273ee0eda1d3a285a4b46a58a4d6d7b6926/src/Microsoft.ML.Data/Data/Conversion.cs#L739) and [IsDefault region](https://github.com/dotnet/machinelearning/blob/2960b273ee0eda1d3a285a4b46a58a4d6d7b6926/src/Microsoft.ML.Data/Data/Conversion.cs#L749).\r\n\r\n2) Fix the docs of CountFeatureSelectingEstimator to include missing value in addition to default value. Previously, we incorrectly thought only non-default values matter. But digging into [the code](https://github.com/dotnet/machinelearning/blob/5163413f3cfab430e49f6fb2a690c160fde46b58/src/Microsoft.ML.Transforms/CountFeatureSelection.cs#L433), it's clear that the check is for non-default AND non-missing.","Url":"https://github.com/dotnet/machinelearning/pull/3831","RelatedDescription":"Closed or merged PR \"Add default and missing value definitions for ML.NET types\" (#3831)"},{"Id":"452239328","IsPullRequest":true,"CreatedAt":"2019-06-06T00:32:09","Actor":"daholste","Number":"3823","RawContent":null,"Title":"[AutoML] Enable style cop rules & resolve errors","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3823","RelatedDescription":"Closed or merged PR \"[AutoML] Enable style cop rules & resolve errors\" (#3823)"},{"Id":"452731072","IsPullRequest":false,"CreatedAt":"2019-06-05T21:43:53","Actor":"shmoradims","Number":"3832","RawContent":null,"Title":"Add an example for key type's missing value","State":"open","Body":"Related to #3831. Add an in-memory example to explain key type's missing value 0.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3832","RelatedDescription":"Open issue \"Add an example for key type's missing value\" (#3832)"},{"Id":"452176125","IsPullRequest":true,"CreatedAt":"2019-06-05T19:32:07","Actor":"daholste","Number":"3821","RawContent":null,"Title":"Add AutoML as a best friend assembly to Microsoft.ML.Core","State":"closed","Body":"This resolves https://github.com/dotnet/machinelearning/issues/3813 for AutoML","Url":"https://github.com/dotnet/machinelearning/pull/3821","RelatedDescription":"Closed or merged PR \"Add AutoML as a best friend assembly to Microsoft.ML.Core\" (#3821)"},{"Id":"452659656","IsPullRequest":false,"CreatedAt":"2019-06-05T18:43:22","Actor":"Ianpwest","Number":"3830","RawContent":null,"Title":"Fit() never returns when running in an ASP.NET MVC Full .NET Framework 4.6.1 / 4.7.2","State":"open","Body":"When running the sentiment analysis sample this line never returns. No exception is thrown.\r\n`// STEP 4: Train the model fitting to the DataSet\r\n            ITransformer trainedModel = trainingPipeline.Fit(trainingData);`\r\n\r\nThis is not the case in .net core web apps or .NET Framework 4.6.1 console apps. Only MVC.\r\n\r\nYou can recreate the issue by creating a brand new ASP.NET MVC .NET Framework 4.6.1 Web Application. Changing to target x64. Installing the Microsoft.ML nuget and running the sentiment analysis code.\r\n\r\nThanks.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3830","RelatedDescription":"Open issue \"Fit() never returns when running in an ASP.NET MVC Full .NET Framework 4.6.1 / 4.7.2\" (#3830)"},{"Id":"452587012","IsPullRequest":false,"CreatedAt":"2019-06-05T16:03:50","Actor":"baruchiro","Number":"3829","RawContent":null,"Title":"Support dynamic types when working with IDataView","State":"open","Body":"### Issue\r\n\r\nI want to read my data from the `.csv` file. I think it may be done without strongly-typing my objects. In C#, we have two potential abilities: [_Anonymous Types_](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/anonymous-types) and [_Dynamic Types_](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/using-type-dynamic). \r\n\r\nI tried to check how the existing code could be adapted, but I could not fully understand the code.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3829","RelatedDescription":"Open issue \"Support dynamic types when working with IDataView\" (#3829)"},{"Id":"452399201","IsPullRequest":false,"CreatedAt":"2019-06-05T09:24:31","Actor":"modios","Number":"3828","RawContent":null,"Title":"Provide access to eigenvalues used for PCA transformation","State":"open","Body":"In PcaTransformer.cs, class TransformInfo has an eigenvectors field. I assume it stores the eigenvectors retrieved from the SVD decomposition. Can we have access to the eigenvalues that the SVD provided.\r\n\r\nI think it might be useful to store and provide the eigenvalues used during the PCA. Is this possible?\r\ni.e I see in Accord you can do something like pca.Eigenvalues. \r\nhttp://accord-framework.net/docs/html/T_Accord_Statistics_Analysis_PrincipalComponentAnalysis.htm\r\n\r\nThank you!\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3828","RelatedDescription":"Open issue \"Provide access to eigenvalues used for PCA transformation\" (#3828)"},{"Id":"452270117","IsPullRequest":true,"CreatedAt":"2019-06-05T01:01:01","Actor":"eerhardt","Number":"3827","RawContent":null,"Title":" Add Microsoft.Extensions.ML integration package.","State":"open","Body":"This package makes it easier to use ML.NET with app models that support Microsoft.Extensions - i.e. ASP.NET and Azure Functions.\r\n\r\nSpecifically it contains functionality for:\r\n\r\n- Dependency Injection\r\n- Pooling PredictionEngines\r\n- Reloading models when the file or URI has changed\r\n- Hooking ML.NET logging to Microsoft.Extensions.Logging\r\n\r\nFix #3239\r\n\r\ncc @glennc - Note that the only major change I made to your code was to remove the `IPredictionEnginePoolBuilder` interface in favor of using a simple class instead.\r\n\r\nAfter this is merged to master, we can remove the `features/IntegrationPackage` branch.","Url":"https://github.com/dotnet/machinelearning/pull/3827","RelatedDescription":"Open PR \" Add Microsoft.Extensions.ML integration package.\" (#3827)"},{"Id":"452254954","IsPullRequest":true,"CreatedAt":"2019-06-05T00:51:15","Actor":"codemzs","Number":"3825","RawContent":null,"Title":"Update readme.","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3825","RelatedDescription":"Closed or merged PR \"Update readme.\" (#3825)"},{"Id":"452259513","IsPullRequest":false,"CreatedAt":"2019-06-05T00:07:05","Actor":"Anipik","Number":"3826","RawContent":null,"Title":"String column being getting converted to int","State":"open","Body":"My dataset looks something like this\r\n\r\n```\r\nID\tArea\tTitle\tDescription\r\n\"7\"\tarea-System.Runtime.InteropServices\t\"Splitting XLinq classes into separate files, after rebasing the commits.\"\t\"\"\r\n\"12\"\tarea-System.Runtime.InteropServices\t\"Remove or cache some unnecessary allocations\"\t\"I noticed a few places where allocations were occurring unnecessary: - Across several of the immutable and XML collection types, the ICollection.CopyTo implementations were calling Array.SetValue in a loop; the second parameter to SetValue is a params array, so each iteration of the loop was resulting in allocating a new array... I've lifted that implicit allocation out to be an explicit one before the loop. - In a couple of places in the XML library and the metadata reader, string.Trim\\* was being used, either with an array of the same characters unnecessarily being allocated each time, or an implicitly allocated array of constant chars to fill a params array parameter.  I've replaced those with statically cached arrays. - In a couple of places in the XML library, a string was being constructed around a single character via creating a new char array; I've replaced that with usage of string's ctor that takes a character and a count, avoiding the unnecessary char[] allocation. \"\r\n\"13\"\tarea-System.Runtime.InteropServices\t\"Remove unnecessary unsafe code flag.\"\t\"The Immutable PCL targets platforms that include those that don't support unsafe code. Opening the solution in VS2015 results in a warning in the error list about this. But features that required unsafe code were recently removed so we don't need this flag any more. \"\r\n\"17\"\tarea-System.Xml\t\"Some XPath.XDocument tests are failing\"\t\"Some XPath.XDocument queries have different results than other XPath navigators. This might be an old behavior or newly introduced bug.  Failing tests: build /p=IncludeTraits=ActiveIssue=17 \"\r\n\"20\"\tarea-System.Xml\t\"2 XPath.XDocument tests fail because of lacking feature\"\t\"XPath.XDocument navigator doesn't support MoveToId(string).  Verify if this was ever supported. If it was, verify if we want to support it in the future. If it wasn't move the tests to a different file and remove them from XPath.XDocument.Tests project.  Failing tests: NodeSetFunctionsTest2267 MatchesTest2352  <!--- @huboard:{\"order\":20.0,\"milestone_order\":20,\"custom_state\":\"\"} --> \"\r\n\"22\"\tarea-System.Numerics\t\"Two Numerics Tests are failing only on our CI server\"\t\"Two of the tests in our System.Numerics.Vectors suite are failing only on our CI build server, and potentially only intermittently:  Vector2NormalizeTest1 Vector4NormalizeTest2  Given that these are very similar to other tests which cover a similar edge-case (especially the Vector3 normalization tests, which aren't failing), we will need to investigate why these tests in particular are failing on our build server. This may have been a point-in-time issue as we brought up our build infrastructure, and may not re-surface again. \"\r\n\"36\"\tarea-System.Numerics\t\"SIMD test failures on non-ENU configurations.\"\t\"After pulling both of @adamralph 's pull requests #31 and #32, I'm continuing to see test failures for SIMD on a DEU (German) test environment.  Here's a representative error: d:\\oss\\corefx\\src\\System.Numerics.Vectors\\tests\\GenericVectorTests.cs(545): error : System.Numerics.Tests.GenericVe ctorTests.ToStringCurrencySByte: Assert.Equal() Failure\\r\\nPosition: First difference is at position 8\\r\\nExpected:  <97,00 ?, -108,00 ?, 22,00 ?, 29,00 ?, 49,00 ?, 60,00 ?, 103,00 ?, 58,00 ?, -62,00 ?, -124,00 ?, -117,00 ?, 48,00 ?, 15,00 ?, -35,00 ?, -13,00 ?, -34,00 ?>\\r\\nActual:   <97,00 ?. -108,00 ?. 22,00 ?. 29,00 ?. 49,00 ?. 60,00 ?. 103 ,00 ?. 58,00 ?. -62,00 ?. -124,00 ?. -117,00 ?. 48,00 ?. 15,00 ?. -35,00 ?. -13,00 ?. -34,00 ?> [D:\\oss\\corefx\\bin\\ tools\\fxbuild.proj]  Observe that expected separates elements with a comma, actual separates elements with a dot. \"\r\n\"41\"\tarea-System.Numerics\t\"Quaternion operator overloads should be using the respective methods\"\t\"Quaternion declares a handful of methods to perform addition, subtraction and multiplication, and provides the respective overloads for these operations.  However, instead of re-using the `Add`, `Multiply` etc. methods, the code is re-written in the operator overloads. The operators should be using their respective methods rather than re-declaring the same code.  This is under the assumption that the JIT inlines the methods when they are used in the operator overloads. \"\r\n\"49\"\tarea-Infrastructure\t\"Add Linux/Mac build script\"\t\"A `build.sh` should be added alongside `build.cmd` to build corefx on Linux/Mac. \"\r\n```\r\n\r\n\r\nI want the auto-ml bot to consider the first column as a string but it is always converting it to float column\r\nIt would be nice to have some way of specifying the column types.\r\n\r\ncc @danmosemsft @eerhardt @daholste ","Url":"https://github.com/dotnet/machinelearning/issues/3826","RelatedDescription":"Open issue \"String column being getting converted to int\" (#3826)"},{"Id":"452253218","IsPullRequest":true,"CreatedAt":"2019-06-05T00:06:15","Actor":"codemzs","Number":"3824","RawContent":null,"Title":"Update API compat version number to 1.1.0 for stable release packages","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3824","RelatedDescription":"Closed or merged PR \"Update API compat version number to 1.1.0 for stable release packages\" (#3824)"},{"Id":"452216686","IsPullRequest":false,"CreatedAt":"2019-06-04T21:29:04","Actor":"najeeb-kazmi","Number":"3822","RawContent":null,"Title":"LightGbm default evaluation metrics in ML.NET do not conform to standalone LightGbm","State":"open","Body":"Found while investigating fix for #3761 \r\n\r\nIn ML.NET LightGbm wrapper, the default EvaluationMetric is set to EvaluateMetricType.Error for multiclass, EvaluationMetricType.LogLoss for binary, and so on. On the other hand, in standalone LightGbm, the default evaluation metric is \"\", which means that LightGbm will automatically select the default metric for the given objective function.\r\n\r\nThis leads to inconsistent behavior from the user's perspective: If a user specified EvaluationMetric = EvaluateMetricType.Default, the parameter passed to LightGbm would be the empty string \"\" but if they do not specify EvaluationMetric at all, the parameter passed to LightGbm would be Error for multiclass, LogLoss for binary, and so on.\r\n\r\nWe need to investigate whether these metrics are indeed the defaults for the respective objective functions in LightGbm, and if they are not, then change the defaults in ML.NET to conform to standalone LightGbm. Note that this would be a breaking change.","Url":"https://github.com/dotnet/machinelearning/issues/3822","RelatedDescription":"Open issue \"LightGbm default evaluation metrics in ML.NET do not conform to standalone LightGbm\" (#3822)"},{"Id":"452151777","IsPullRequest":true,"CreatedAt":"2019-06-04T20:59:39","Actor":"codemzs","Number":"3819","RawContent":null,"Title":"NativeAssemblyReference Include \"MklProxyNative\" in Samples project.","State":"closed","Body":"fixes #3818\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3819","RelatedDescription":"Closed or merged PR \"NativeAssemblyReference Include \"MklProxyNative\" in Samples project.\" (#3819)"},{"Id":"452151473","IsPullRequest":false,"CreatedAt":"2019-06-04T20:59:39","Actor":"codemzs","Number":"3818","RawContent":null,"Title":"NativeAssemblyReference Include \"MklProxyNative\" in Samples project.","State":"closed","Body":"Need to the above dependency to have some timer series samples work that use MKL ","Url":"https://github.com/dotnet/machinelearning/issues/3818","RelatedDescription":"Closed issue \"NativeAssemblyReference Include \"MklProxyNative\" in Samples project.\" (#3818)"},{"Id":"452158821","IsPullRequest":true,"CreatedAt":"2019-06-04T19:05:45","Actor":"daholste","Number":"3820","RawContent":null,"Title":"For binary classification, discard cross validation splits where there is not at least one true & one false label in the validation set","State":"open","Body":"For binary classification, discard cross validation splits where there is not at least one true & one false label in the validation set. Otherwise, scoring the dataset crashes because AUC cannot be computed like in https://github.com/dotnet/machinelearning/issues/3800","Url":"https://github.com/dotnet/machinelearning/pull/3820","RelatedDescription":"Open PR \"For binary classification, discard cross validation splits where there is not at least one true & one false label in the validation set\" (#3820)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-08T05:30:38.7676586Z","RunDurationInMilliseconds":642}