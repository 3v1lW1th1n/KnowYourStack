{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":143,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8651794356","Type":"PullRequestEvent","CreatedAt":"2018-11-27T05:08:11","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21203","RelatedDescription":"Merged pull request \"Fix Rune.ToUpper / ToLower under GlobalizationMode.Invariant\" (#21203) at dotnet/coreclr","RelatedBody":"Fixes two bugs:\r\n\r\n1. We inadvertently treat all text as ASCII when `GlobalizationMode.Invariant` is _true_, leading to behavior like '×' being converted to '÷' during a lowercase operation.\r\n2. We forget to check the `GlobalizationMode` flag when using the `ToUpper` / `ToLower` overload that accepts a `CultureInfo` parameter, leading to a debug assert in `TextInfo.ChangeCaseCommon`.\r\n\r\nSee https://github.com/dotnet/corefx/pull/33698 for the corresponding unit tests."},{"Id":"8651534786","Type":"PullRequestEvent","CreatedAt":"2018-11-27T03:38:03","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21206","RelatedDescription":"Opened pull request \"Manually throw a ThreadAbortException\" (#21206) at dotnet/coreclr","RelatedBody":"If an expression evaluation hits a path that calls `NotifyOfCrossThreadDependency()` - the VS debugger will abort the evaluation by calling `ICorDebugEval::Abort()`. Eventually, it turns into a `ThreadAbortException` that will help us to unwind back to the original state and make sure the finally blocks are executed. However, if the thread is currently holding a lock (acquired by the FuncEval or otherwise), the runtime will not throw the `ThreadAbortException` and get stuck - the debugger will wait longer and eventually give up by not doing any clean up, just setting the context back to what it was - if we do this, the process is pretty much toasted.\r\n\r\nThe change here remedies the situation (of getting stuck failing to abort when a lock is held while calling `NotifyOfCrossThreadDependency()`) by giving the debugger an opportunity to force throwing the `ThreadAbortException`. The debugger will decide if they wanted to force throw but setting the private static field, and then the debuggee will follow its order.\r\n\r\nThe manual throwing on the `ThreadAbortException` is not ideal because it could be caught if the code being evaluated has a catch clause - the `ThreadAbortException` thrown by the runtime has a special semantics that pass through catches. Doing it the right way is non-trivial, so this fix is a compromise that we settle on for now and we will re-visit later."},{"Id":"8651461747","Type":"PullRequestEvent","CreatedAt":"2018-11-27T03:15:46","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21189","RelatedDescription":"Merged pull request \"Disable noncollectible alc finalization\" (#21189) at dotnet/coreclr","RelatedBody":"For non collectible AssemblyLoadContext, the finalizer should never be called and thus the AssemblyLoadContext should not be in the finalizer queue."},{"Id":"8651188802","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:55:12","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21156","RelatedDescription":"Merged pull request \"Disable domain neutral loading\" (#21156) at dotnet/coreclr","RelatedBody":""},{"Id":"8651186748","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:54:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21202","RelatedDescription":"Merged pull request \"Deleting a format.patch file that got checked in\" (#21202) at dotnet/coreclr","RelatedBody":"A stray `format.patch` file got checked in with https://github.com/dotnet/coreclr/issues/21011. CC @erozenfeld "},{"Id":"8651125092","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:36:50","Actor":"chuckries","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21205","RelatedDescription":"Opened pull request \"Fix a use after free for Managed Data BP\" (#21205) at dotnet/coreclr","RelatedBody":"ShimProxyCallback::DataBreakpoint::DataBreakpointEvent was holding onto a bare\r\nBYTE* for the CONTEXT rather than copying the buffer and taking ownership. Due to\r\nlifetime, this resulted in a use after free. Apparently in retail code we got lucky\r\nand this worked enough of the time that we never noticed it."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8651644390","Type":"IssuesEvent","CreatedAt":"2018-11-27T04:14:50","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10125","RelatedDescription":"Closed issue \"Enable targeting .NET Core 2.2 from 3.0 SDK\" (#10125) at dotnet/cli","RelatedBody":".NET Core 2.2 and 3.0 are both currently under development.  Normally, we use the version of the runtime inserted into the SDK to determine what preview version to use for the implicit package references to frameworks that are under development.  We don't have a straightforward way to do this since we don't insert the 2.2 runtime into the 3.0 SDK.\r\n\r\nSo for now, the 3.0 SDK won't support targeting .NET Core 2.2.  When .NET Core 2.2 is released, then we will need to update core-sdk to include an ImplicitPackageVariable for .NET Core 2.2 (and the ASP.NET packages) in the BundledVersions.props file."},{"Id":"8651437426","Type":"PullRequestEvent","CreatedAt":"2018-11-27T03:07:52","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10395","RelatedDescription":"Opened pull request \"User facing string for local tools install/uninstall\" (#10395) at dotnet/cli","RelatedBody":"All string changes"},{"Id":"8651211642","Type":"IssuesEvent","CreatedAt":"2018-11-27T02:01:41","Actor":"yuki233","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10394","RelatedDescription":"Opened issue \"Unhandled exception returned if run web application with sdk 3.0.100-preview-009784\" (#10394) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Install sdk 3.0.100-preview-009784\r\n2. dotnet new mvc /web /webapi\r\n3. dotnet run\r\n\r\n## Expected  behavior\r\nDotnet run for mvc, web and webap works well\r\n\r\n## Actual behavior\r\nIt returns Unhandled Exception: System.ArgumentException: Value cannot be null or an empty string.\r\n_nicole@ubu16-27:~/mywebapi$ dotnet run\r\nUnhandled Exception: System.ArgumentException: Value cannot be null or an empty string.\r\nParameter name: userSecretId\r\nat Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute..ctor(String userSecretId)\r\nat System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule pModule, RuntimeType type, IRuntimeMethodInfo pCtor, Byte** ppBlob, Byte* pEndBlob, Int32* pcNamedArgs)\r\nat System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule module, RuntimeType type, IRuntimeMethodInfo ctor, IntPtr& blob, IntPtr blobEnd, Int32& namedArgs)\r\nat System.Reflection.CustomAttribute.AddCustomAttributes(ListBuilder1& attributes, RuntimeModule decoratedModule, Int32 decoratedMetadataToken, RuntimeType attributeFilterType, Boolean mustBeInheritable, ListBuilder1& derivedAttributes)\r\nat System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule, Int32 decoratedMetadataToken, Int32 pcaCount, RuntimeType attributeFilterType)\r\nat System.Attribute.GetCustomAttributes(Assembly element, Type attributeType, Boolean inherit)\r\nat System.Attribute.GetCustomAttribute(Assembly element, Type attributeType, Boolean inherit)\r\nat System.Reflection.CustomAttributeExtensions.GetCustomAttribute[T](Assembly element)\r\nat Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(IConfigurationBuilder configuration, Assembly assembly, Boolean optional, Boolean reloadOnChange)\r\nat Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(IConfigurationBuilder configuration, Assembly assembly, Boolean optional)\r\nat Microsoft.AspNetCore.WebHost.<>c__DisplayClass8_0.b__0(WebHostBuilderContext hostingContext, IConfigurationBuilder config)\r\nat Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\nat Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\nat mywebapi.Program.Main(String[] args) in /home/nicole/mywebapi/Program.cs:line 17_\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 3.0.100-preview-009784\r\nCommit: d86a1816c4\r\nRuntime Environment:\r\nOS Name: ubuntu\r\nOS Version: 16.04\r\nOS Platform: Linux\r\nRID: ubuntu.16.04-x64\r\nBase Path: /usr/share/dotnet/sdk/3.0.100-preview-009784/\r\nHost (useful for support):\r\nVersion: 3.0.0-preview-27122-01\r\nCommit: 00c5c8bc40\r\n.NET Core SDKs installed:\r\n3.0.100-preview-009784 [/usr/share/dotnet/sdk]\r\n.NET Core runtimes installed:\r\nMicrosoft.AspNetCore.App 3.0.0-preview-18572-0018 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 3.0.0-preview-27122-01 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\nTo install additional .NET Core runtimes or SDKs:\r\nhttps://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8651077248","Type":"IssuesEvent","CreatedAt":"2018-11-27T01:23:00","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10393","RelatedDescription":"Opened issue \"Put https://aka.ms/discover-dotnet-tools in help\" (#10393) at dotnet/cli","RelatedBody":"And update the linked site to a better page when the index of _PackageType_ is available"},{"Id":"8650650964","Type":"PullRequestEvent","CreatedAt":"2018-11-26T23:22:20","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10392","RelatedDescription":"Opened pull request \"Fix no restore command error message\" (#10392) at dotnet/cli","RelatedBody":"It should show _Run \"dotnet tool restore\" to make the \"dotnetsay\" command available._ instead of _Cannot find a command with command name 'dotnetsay'_ when there is no restore.\r\n\r\nRoot cause, a case forget to test"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8647080176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T13:16:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/982","RelatedDescription":"Merged pull request \"Update dependency files\" (#982) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18575.1\r\n\r\n"},{"Id":"8646994222","Type":"PullRequestEvent","CreatedAt":"2018-11-26T13:01:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/982","RelatedDescription":"Opened pull request \"Update dependency files\" (#982) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18575.1\r\n\r\n"},{"Id":"8642041876","Type":"PullRequestEvent","CreatedAt":"2018-11-25T01:05:12","Actor":"edwinfrc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/981","RelatedDescription":"Closed pull request \"Release/2.0.0\" (#981) at dotnet/standard","RelatedBody":""},{"Id":"8642041706","Type":"PullRequestEvent","CreatedAt":"2018-11-25T01:05:04","Actor":"edwinfrc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/981","RelatedDescription":"Opened pull request \"Release/2.0.0\" (#981) at dotnet/standard","RelatedBody":""},{"Id":"8641919637","Type":"IssuesEvent","CreatedAt":"2018-11-24T23:17:50","Actor":"verb0se","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/976","RelatedDescription":"Closed issue \"Could not load file or assembly System.Configuration.ConfigurationManager\" (#976) at dotnet/standard","RelatedBody":"Upgrading some .NET Framework projects to Standard 2.0, I've installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet on all projects.  Getting the following error:\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Configuration.ConfigurationManager, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n  \r\nJust to see if the issue might have been due to something with the current solution, I created a new Standard 2.0 console app, installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet as the only dependency, and got the same error.\r\n\r\nFrom the deps.json file:\r\n\r\n\"System.Configuration.ConfigurationManager/4.5.0\": {\r\n        \"dependencies\": {\r\n          \"System.Security.Cryptography.ProtectedData\": \"4.5.0\",\r\n          \"System.Security.Permissions\": \"4.5.0\"\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard2.0/System.Configuration.ConfigurationManager.dll\": {\r\n            \"assemblyVersion\": \"4.0.1.0\",\r\n            \"fileVersion\": \"4.6.26515.6\"\r\n          }\r\n        }\r\n      }\r\n\r\nWe would like to use System.Configuration.ConfigurationManager with our upgrade but I can't seem to load it from a project \r\n"},{"Id":"8633204741","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Merged pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8633148967","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Opened pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8628628658","Type":"PullRequestEvent","CreatedAt":"2018-11-21T17:57:16","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Merged pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft @JohnTortugo"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8651255070","Type":"PullRequestEvent","CreatedAt":"2018-11-27T02:14:37","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33700","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27127-01, preview-27126-02, respectively (master)\" (#33700) at dotnet/corefx","RelatedBody":""},{"Id":"8651023711","Type":"IssuesEvent","CreatedAt":"2018-11-27T01:07:26","Actor":"danzel","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33699","RelatedDescription":"Opened issue \"Ping.Unix falsely returns successful pings\" (#33699) at dotnet/corefx","RelatedBody":"Our app pings a range of IPs, and occasionally it 'receives' a ping reply from a host that doesn't exist on the network.\r\n\r\n```c#\r\n//Roughly like this\r\nfor (var ipDecimal = 1; ipDecimal < 255; ipDecimal++)\r\n{\r\n\tvar ping = new Ping();\r\n\tpingTasks.Add(ping.SendPingAsync(\"192.168.0.\" + ipDecimal, 1000));\r\n}\r\nTask.WaitAll(pingTasks.ToArray(), cancellationToken);\r\nforeach (var res in pingTasks.Select(t => t.Result))\r\n{\r\n\tif (res.Status == IPStatus.Success)\r\n\t\tConsole.WriteLine(\"Response from \" + res.Address);\r\n}\r\n```\r\n(App is running with RawSockets permissions)\r\n\r\nChecking the Ping code, it uses a random Identifier for the ping packet generated from a `[ThreadStatic] Random`\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.Unix.cs#L21-L22\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.Unix.cs#L71-L73\r\n\r\nThen when an `EchoRequest` comes in, it compares that Identifier to check if it matches what was sent out (it doesn't check the IP address as far as I can tell)\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.Unix.cs#L103\r\n\r\nWhat I guess is happening is that we randomly generate the same Identifier for a host that exists and a host that doesn't, so when we get the reply from the host that does exist, it gets incorrect counted as a reply for the host that doesn't exist.\r\nI haven't done a packet capture to verify this is the cause, it takes days to reproduce, but can do so if necessary.\r\n\r\nCould we compare the IP Address the reply is coming from, or use a shared counter for the Identifier or something to prevent reusing the same Identifier quickly?\r\n\r\nThe Ping code is pretty extensive, so I may have misinterpreted something.\r\nThanks!"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8651795227","Type":"PullRequestEvent","CreatedAt":"2018-11-27T05:08:30","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/29016","RelatedDescription":"Merged pull request \"Implementation of new editor completion API\" (#29016) at dotnet/roslyn","RelatedBody":""},{"Id":"8651480476","Type":"PullRequestEvent","CreatedAt":"2018-11-27T03:21:40","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31385","RelatedDescription":"Opened pull request \"Fix IBC data application\" (#31385) at dotnet/roslyn","RelatedBody":"A few fixes. \r\n\r\nMakes application of IBC data explicit and warns if PGO file is expected but not available."},{"Id":"8651479684","Type":"IssuesEvent","CreatedAt":"2018-11-27T03:21:26","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31384","RelatedDescription":"Opened issue \"async completion: TextTypedSoFarMatchesItem does not support with non-English members\" (#31384) at dotnet/roslyn","RelatedBody":"We borrowed the following code from the original completion:\r\n\r\n```\r\n     return item.DisplayText.StartsWith(textTypedSoFar, StringComparison.CurrentCultureIgnoreCase) ||\r\n                       item.FilterText.StartsWith(textTypedSoFar, StringComparison.CurrentCultureIgnoreCase);\r\n```\r\n\r\nIt should be re-considered to support non-English items."},{"Id":"8651457284","Type":"IssuesEvent","CreatedAt":"2018-11-27T03:14:16","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31383","RelatedDescription":"Opened issue \"async completion: re-consider using snapshots for caret positioning after edit\" (#31383) at dotnet/roslyn","RelatedBody":"1. `edit.Apply();` provides a snapshot with Roslyn changes but with potential extension changes in it.\r\n2. `subjectBuffer.CurrentSnapshot `is the original snapshot\r\n\r\nre-consider which one to use in:\r\n1. `view.TryMoveCaretToAndEnsureVisible`\r\n2. `triggerSnapshotSpan.TranslateTo`"},{"Id":"8651211261","Type":"PullRequestEvent","CreatedAt":"2018-11-27T02:01:34","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31254","RelatedDescription":"Merged pull request \"Add an API to pass additional msbuild properties to workspace\" (#31254) at dotnet/roslyn","RelatedBody":"I have separated new API which we agreed upon from the implementation in #30998. \r\n\r\nThis is a breaking change for project system (see [here](https://github.com/dotnet/project-system/blob/d8de8cd390ab04474f8e88ec68b785757b14d350/src/Microsoft.VisualStudio.ProjectSystem.Managed/ProjectSystem/LanguageServices/WorkspaceProjectContextProvider.ForegroundWorkspaceProjectContext.cs)). So we need to coordinate the insertion with project system. @jasonmalinowski mentioned the code linked above is deadcode, so we might not break anything after all. Either way, it needs to be verified.\r\n\r\nThis is blocked until https://github.com/dotnet/project-system/pull/4221 is merged\r\n\r\n@jasonmalinowski @CyrusNajmabadi "},{"Id":"8651200192","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:58:31","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31382","RelatedDescription":"Opened pull request \"Disallow null coalescing assignment in expression trees.\" (#31382) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/31238. @dotnet/roslyn-compiler for review."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8651242379","Type":"PullRequestEvent","CreatedAt":"2018-11-27T02:10:56","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6592","RelatedDescription":"Merged pull request \"wasm: Fix callback to NativeCallable methods\" (#6592) at dotnet/corert","RelatedBody":"Fixes #6580. Previously when making the callback to a NativeCallable function, the wrong PInvoke method was used as described in #6580 .  This change fixes that, and also fixes a problem where the thread state was not being changed from Cooperative->Preemptive->Cooperative on managed->unmanaged->managed Pinvokes.  When calling back from unmanaged to the NativeCallable an asssert is made on the thread being in Preemptive mode, but the change from Cooperative->Preemptive was missing and hence the assert failed.  @morganbr I'm marking this as WIP because I needed to add some C++ function to get a simple test that exercised the callback, so I have this in a cpp file https://github.com/dotnet/corert/compare/master...yowl:callbackfromnative?expand=1#diff-380d7928db22ba701b6239aaf0c6d09c, but I'm not sure how to go about changing the build to get this included.  Do I just make the changes in https://github.com/dotnet/corert/blob/master/src/BuildIntegration/Microsoft.NETCore.Native.targets so that I can `emcc` the bitcode for the cpp and add it to the linker command?\r\n\r\n"},{"Id":"8651242372","Type":"IssuesEvent","CreatedAt":"2018-11-27T02:10:56","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6580","RelatedDescription":"Closed issue \"wasm: NativeCallable function is not used\" (#6580) at dotnet/corert","RelatedBody":"I don't know if I'm doing something wrong, or its the wasm compiler.  I have this c#:\r\n```\r\n    private static unsafe void ThreadTest()\r\n    {\r\n        p_thread pThread;\r\n        int arg = 0;\r\n        int join;\r\n        var t = pthread_create((IntPtr)(&pThread), (IntPtr)(0), System.Runtime.InteropServices.AddrofIntrinsics.AddrOf<ThreadStartFunc>(ThreadStart), (IntPtr)(&arg));\r\n        join = pthread_join((IntPtr)(&pThread), (IntPtr)0);\r\n    }\r\n\r\n    [NativeCallable(CallingConvention = CallingConvention.StdCall)]\r\n    private static unsafe void* ThreadStart(void* arg)\r\n    {\r\n...\r\n    }\r\n```\r\nSo I'm trying to get `pthread_create` to callback into `ThreadStart`.  When I run this it complains:\r\n```\r\nInvalid function pointer '6920' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this) HelloWasm.js:6610:27\r\nThis pointer might make sense in another type signature: i: 0  iii: _HelloWasm_Program__ThreadStart  iiii: 0  iiiii: 0  iiiiii: 0  iiiiiii: undefined  iiiiiiii: 0  iiiiiiiiii: undefined  vii: 0  di: undefined  vi: 0  viii: 0  v: 0  viiii: 0  viiiii: 0  viiiiii: 0  viiiiiii: 0 \r\n```\r\nSo you can see that its looking for a method in the function table `ii` whereas the one that its been given, `_HelloWasm_Program__ThreadStart` is in the `iii` table.  Indeed `_HelloWasm_Program__ThreadStart` is the wrong signature, its has the signature for any other method, i.e. the first param is the shadow stack:\r\n```\r\ndefine i8* @HelloWasm_Program__ThreadStart(i8*, i8*) \r\n```\r\nThere is another function emitted which looks like the right one:\r\n```\r\ndefine i8* @ThreadStart(i8*) {\r\nShadowStackSetupBlock:\r\n  %ShadowStackPtr = alloca i8*\r\n  %SavedShadowStack = load i8*, i8** @t_pShadowStackTop\r\n  store i8* %SavedShadowStack, i8** %ShadowStackPtr\r\n  %ShadowStackNull = icmp eq i8* %SavedShadowStack, null\r\n  br i1 %ShadowStackNull, label %allocateShadowStackBlock, label %ManagedCallBlock\r\n\r\nallocateShadowStackBlock:                         ; preds = %ShadowStackSetupBlock\r\n  %NewShadowStack = tail call i8* @malloc(i32 mul (i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32), i32 1000000))\r\n  store i8* %NewShadowStack, i8** %ShadowStackPtr\r\n  br label %ManagedCallBlock\r\n\r\nManagedCallBlock:                                 ; preds = %allocateShadowStackBlock, %ShadowStackSetupBlock\r\n  %ReversePInvokeFrame = alloca { i8*, i8* }\r\n  call void @RhpReversePInvoke2({ i8*, i8* }* %ReversePInvokeFrame)\r\n  %ShadowStack = load i8*, i8** %ShadowStackPtr\r\n  %calleeFrame = getelementptr i8, i8* %ShadowStack, i32 4\r\n  %1 = call i8* @HelloWasm_Program__ThreadStart(i8* %calleeFrame, i8* %0)\r\n  call void @RhpReversePInvokeReturn2({ i8*, i8* }* %ReversePInvokeFrame)\r\n  ret i8* %1\r\n}\r\n```\r\nBut this does not seem to be used anywhere else in the LLVM file.  I'm not sure what the right question is.  What should the parameters to `InitializeReversePInvokeThunk` be for this?  \r\n\r\n\r\n\r\nI have these attributes defined:\r\n```\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    /// <summary>\r\n    /// Any method marked with NativeCallableAttribute can be directly called from\r\n    /// native code. The function token can be loaded to a local variable using LDFTN\r\n    /// and passed as a callback to native method.\r\n    /// </summary>\r\n    [AttributeUsage(AttributeTargets.Method)]\r\n    public sealed class NativeCallableAttribute : Attribute\r\n    {\r\n        public NativeCallableAttribute()\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Optional. If omitted, compiler will choose one for you.\r\n        /// </summary>\r\n        public CallingConvention CallingConvention;\r\n\r\n        /// <summary>\r\n        /// Optional. If omitted, then the method is native callable, but no EAT is emitted.\r\n        /// </summary>\r\n        public string EntryPoint;\r\n    }\r\n\r\n    [AttributeUsage((System.AttributeTargets.Method | System.AttributeTargets.Class))]\r\n    internal class McgIntrinsicsAttribute : Attribute\r\n    {\r\n    }\r\n\r\n    [McgIntrinsics]\r\n    internal static class AddrofIntrinsics\r\n    {\r\n        // This method is implemented elsewhere in the toolchain\r\n        internal static IntPtr AddrOf<T>(T ftn)\r\n        {\r\n            throw new PlatformNotSupportedException();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n"},{"Id":"8651138180","Type":"PullRequestEvent","CreatedAt":"2018-11-27T01:40:32","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6616","RelatedDescription":"Opened pull request \"Remove TypedReference.MakeTypedReference readonly restriction\" (#6616) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/21193 to corert\r\ncc: @jkotas"},{"Id":"8648965434","Type":"PullRequestEvent","CreatedAt":"2018-11-26T17:59:10","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6613","RelatedDescription":"Merged pull request \"React to .NET Core 3.0 SDK changes\" (#6613) at dotnet/corert","RelatedBody":"Fixes #6612"},{"Id":"8648965409","Type":"IssuesEvent","CreatedAt":"2018-11-26T17:59:10","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6612","RelatedDescription":"Closed issue \"FileLoadErrorGeneric: Newtonsoft.Json\" (#6612) at dotnet/corert","RelatedBody":"Hey, today I faced some issues when compiling some of my tools.\r\n\r\nIt get the following error message: `EXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Newtonsoft.Json`\r\n\r\nCommand line used: `dotnet publish -r win-x64 /p:Configuration=Release /p:platform=\"x64\"`\r\nILCompiler pkg: 1.0.0-alpha-27124-01\r\n\r\nSample source: \r\n\r\n```\r\nusing System;\r\n\r\nnamespace jsontest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var test = Newtonsoft.Json.JsonConvert.SerializeObject(new int[5]);\r\n\r\n            Console.WriteLine(test);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncsproj file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n\t<Platforms>x64</Platforms>\r\n    <PlatformTarget>x64</PlatformTarget>\r\n    <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <RdXmlFile Include=\"rd.xml\" />\r\n  </ItemGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.1-beta2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nrd.xml:\r\n```\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"Newtonsoft.Json\" >\r\n      <Type Name=\"Newtonsoft.Json.Serialization.ObjectConstructor`1[[System.Object,System.Private.CoreLib]]\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\n.NET Core info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009782\r\n Commit:    d07ba39934\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009782\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview-009782 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10772 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27122-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n"},{"Id":"8647419907","Type":"PullRequestEvent","CreatedAt":"2018-11-26T14:11:26","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6615","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6615) at dotnet/corert","RelatedBody":""},{"Id":"8647418808","Type":"PullRequestEvent","CreatedAt":"2018-11-26T14:11:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6615","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6615) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8650560211","Type":"PullRequestEvent","CreatedAt":"2018-11-26T23:00:09","Actor":"dotnet-automerge-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2694","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#2694) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8650164180","Type":"PullRequestEvent","CreatedAt":"2018-11-26T21:39:11","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2694","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to master\" (#2694) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1067069226786201600","CreatedAt":"2018-11-26T14:55:03+00:00","UserScreenname":"dotnet","Text":"In this episode of the #OnDotNet show, @billwagner joins @runfaster2000 to discuss how @HTbox is supporting disaste… https://t.co/AmJJn42rRq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":1,"RawContent":null},{"Id":"1064967345070882817","CreatedAt":"2018-11-20T19:42:55+00:00","UserScreenname":"dotnet","Text":"Find out what's new in F# 4.5 from Phillip Carter (@_cartermp) in this episode of the #OnDotNet show.\n\nhttps://t.co/B5Q1Xt828F","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":35,"RawContent":null},{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":81,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2018-11-27T05:30:31.1001404Z","RunDurationInMilliseconds":7692}