{"Data":{"Blog":{"FeedItems":[{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null},{"Title":"Podcast: Xamarin.Forms 2.5.0, Live Player, and What’s New in Visual Studio for Mac","PublishedOn":"2017-12-01T21:48:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover the latest news for mobile developers from Microsoft Connect(); 2017, including Xamarin.Forms 2.5.0 and awesome updates to the Live...","Href":"https://blog.xamarin.com/podcast-xamarin-forms-2-5-0-live-player-whats-new-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in December","PublishedOn":"2017-12-01T18:16:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET developer community is vastly expanding, so there&#8217;s more opportunity than ever to network with local user groups and learn about new and exciting releases, tooling, and updates to...","Href":"https://blog.xamarin.com/xamarin-developer-events-december/","RawContent":null},{"Title":"Supercharge Your Xamarin.Mac Application Startup Time","PublishedOn":"2017-11-30T20:31:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Startup performance matters, as it&#8217;s the first feature users come across when using your application. In this post, we&#8217;ll walk through some recent samples that improve Xamarin.Mac startup...","Href":"https://blog.xamarin.com/supercharge-xamarin-mac-application-startup-time/","RawContent":null},{"Title":"Upcoming Webinars | Get the Most Out of Android 8 Oreo and iOS 11","PublishedOn":"2017-11-29T20:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us on December 13 and December 14 for our newest webinar series, where we’ll show you how to make your Xamarin apps even better by adding the latest and greatest Android and iOS updates. Visual...","Href":"https://blog.xamarin.com/upcoming-webinars-get-the-most-out-of-android-8-oreo-and-ios-11-for-xamarin-developers/","RawContent":null},{"Title":"Schedule Meetings with Xamarin.Forms and the Microsoft Graph API","PublishedOn":"2017-11-28T18:07:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Meetings can be productive, provided they&#8217;re planned and scheduled properly. There are numerous tools available to schedule meetings, with Calendar for Outlook being one of the best tools in...","Href":"https://blog.xamarin.com/lets-schedule-meeting/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6961514399","Type":"PullRequestEvent","CreatedAt":"2017-12-08T09:46:51","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1086","RelatedDescription":"Merged pull request \"[tests] fixed several tests on Windows\" (#1086) at xamarin/xamarin-android","RelatedBody":"Changes:\r\n- `CheckResourceDesigner*` for F# can't pass on Windows due to the\r\nMSBuild project API sorting. F# relies on files in the `fsproj` in a\r\ncertain order, which cannot be achieved if the MSBuild API always does\r\nits own sorting. I feel it is best to skip these tests on Windows for\r\nnow.\r\n- `BuildExternalJavaLibrary` should just use `$(MSBuildExtensionsPath)`\r\nsince `$(MonoDroidInstallDirectory)` is not set on Windows. It also\r\nneeded to apply a timestamp to the new reference, or the project file\r\nwasn't saving on Windows. The last fix is using `Path.Combine`.\r\n- `BuildAppCheckDebugSymbols` needs to set `DebugType` to `portable` on\r\nWindows in order to produce pdb files\r\n- `BuildAppWithManagedResourceParserAndLibraries` was consistently\r\ntaking ~9 seconds on the VSTS build agent. I was also hitting the 260\r\nmax path limit on my machine, so I shortened the directory name.\r\n- `CheckBuildIdIsUnique` needed to take into account that `mdb` files\r\nare generated on Windows\r\n- `CheckLibraryImportsUpgrade` needed a change to force the project file\r\nto re-save on Windows. I think this is happening because the timestamps\r\nhave down to the millisecond on Windows, so Windows more thoroughly\r\nenforces the save-skipping logic. I also needed to change one assertion\r\non Windows, since `IncrementalClean` is deleting a directory on `Build`.\r\nThis is fine.\r\n- `KnownPackages` had the wrong `<Reference />` name for\r\n`Xamarin.Android.FSharp.ResourceProvider.Runtime`\r\n- Added a `ToString` implementation for `BuildItem` since it greatly\r\nimproved the debugging experience. You can mouseover an item and see the\r\nvalue of `Include()`."},{"Id":"6959828984","Type":"IssuesEvent","CreatedAt":"2017-12-07T23:43:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1089","RelatedDescription":"Opened issue \"Fix inter-API-level checks\" (#1089) at xamarin/xamarin-android","RelatedBody":""},{"Id":"6959760475","Type":"PullRequestEvent","CreatedAt":"2017-12-07T23:22:21","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1088","RelatedDescription":"Opened pull request \"[enumification] fix RemoteConference.ConnectionProperties (issue #1087)\" (#1088) at xamarin/xamarin-android","RelatedBody":"See the github comments on the issue details.\r\n\r\nTo solve the issue, we introduce a \"fake\" mapping fixup in enumification-helpers.\r\n\r\nUse \"force-api-level\" mapping information to override the correct API Level\r\ninformation to generate modified map(.ext).csv.\r\n\r\nmethodmap.csv is also fixed to (1) remove old mapping for 24 and (2) change\r\nthe mapping for 25 down to 24 too."},{"Id":"6959587631","Type":"IssuesEvent","CreatedAt":"2017-12-07T22:34:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1087","RelatedDescription":"Opened issue \"`Android.Telecom.RemoteConference` has wrong type\" (#1087) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1078#issuecomment-350086821\r\n\r\nAPI-24 introduced [`android.telecom.RemoteConference.getConnectionProperties()`](https://developer.android.com/reference/android/telecom/RemoteConference.html#getConnectionProperties()).\r\n\r\nIn `$(TargetFrameworkVersion)` v7.0 (API-24), we bound this as as type `CallProperty`:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/2c2d47c4a28eeb398500a8c0a9a0a803324de014/src/Mono.Android/methodmap.csv#L2100\r\n\r\n    24, android.telecom, RemoteConference, getConnectionProperties, return, Android.Telecom.CallProperty\r\n\r\n\r\nIn `$(TargetFrameworkVersion)` v7.1 (API-25), we bound this as `ConnectionProperties`:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/2c2d47c4a28eeb398500a8c0a9a0a803324de014/src/Mono.Android/methodmap.csv#L2144\r\n\r\n    25, android.telecom, RemoteConnection, getConnectionProperties, return, Android.Telecom.ConnectionProperties\r\n\r\nQuestion: Why do we have *three* separate enumifications for this method? (There's a 2nd API-25 one two lines below the link above.)\r\n\r\nRegardless, this mismatch introduces an inter-api-level inconsistency around the type of `RemoteConference.ConnectionProperties`. The result is that any assemblies which build against v7.0 and *run* in v7.1+ will throw a `MissingMethodException`.\r\n\r\nWe should fix things so that all API levels -- API-24+ -- bind `RemoteConference.ConnectionProperties` as `ConnectionProperties`"},{"Id":"6959393764","Type":"PullRequestEvent","CreatedAt":"2017-12-07T21:48:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1086","RelatedDescription":"Opened pull request \"[tests] fixed several tests on Windows\" (#1086) at xamarin/xamarin-android","RelatedBody":"Changes:\r\n- `CheckResourceDesigner*` for F# can't pass on Windows due to the\r\nMSBuild project API sorting. F# relies on files in the `fsproj` in a\r\ncertain order, which cannot be achieved if the MSBuild API always does\r\nits own sorting. I feel it is best to skip these tests on Windows for\r\nnow.\r\n- `BuildExternalJavaLibrary` should just use `$(MSBuildExtensionsPath)`\r\nsince `$(MonoDroidInstallDirectory)` is not set on Windows. It also\r\nneeded to apply a timestamp to the new reference, or the project file\r\nwasn't saving on Windows. The last fix is using `Path.Combine`.\r\n- `BuildAppCheckDebugSymbols` needs to set `DebugType` to `portable` on\r\nWindows in order to produce pdb files\r\n- `BuildAppWithManagedResourceParserAndLibraries` was consistently\r\ntaking ~9 seconds on the VSTS build agent. I was also hitting the 260\r\nmax path limit on my machine, so I shortened the directory name.\r\n- `CheckBuildIdIsUnique` needed to take into account that `mdb` files\r\nare generated on Windows\r\n- `CheckLibraryImportsUpgrade` needed a change to force the project file\r\nto re-save on Windows. I think this is happening because the timestamps\r\nhave down to the millisecond on Windows, so Windows more thoroughly\r\nenforces the save-skipping logic. I also needed to change one assertion\r\non Windows, since `IncrementalClean` is deleting a directory on `Build`.\r\nThis is fine.\r\n- `KnownPackages` had the wrong `<Reference />` name for\r\n`Xamarin.Android.FSharp.ResourceProvider.Runtime`\r\n- Added a `ToString` implementation for `BuildItem` since it greatly\r\nimproved the debugging experience. You can mouseover an item and see the\r\nvalue of `Include()`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6965330155","Type":"PullRequestEvent","CreatedAt":"2017-12-09T04:40:44","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/451","RelatedDescription":"Closed pull request \"[Android] Leverage new commit methods in Nougat\" (#451) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change\n\nAPI 24 has introduced new commit methods ([commitNow()](https://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#commitNow%28%29) and [commitNowAllowingStateLoss()](https://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#commitNowAllowingStateLoss%28%29)). I know that Xamarin Android Support Library v24 is in RC now, so this will have to wait until it's GA'ed, but I wanted to submit the work before I forget about it. In many ways, these methods should be preferable to using `executePendingTransactions()`. Nowhere in the code is `addToBackStack()` called, so these methods should not throw an `IllegalStateException`.\n\nSee [The many flavors of commit()](https://medium.com/@bherbst/the-many-flavors-of-commit-186608a015b1#.axs7wlxnd).\n\nI haven't had a chance to test run the changes because I couldn't compile the Android Platform project with v24. I'll test it all when I can, but feel free to submit feedback now if you like.\n\nI'll have to update this if #444 is merged.\n### PR Checklist\n- [ ] Has tests (if omitted, state reason in description)\n- [x] Rebased on top of master at time of PR\n- [x] Changes adhere to coding standard\n- [ ] Consolidate commits as makes sense\n"},{"Id":"6965298780","Type":"PullRequestEvent","CreatedAt":"2017-12-09T04:18:35","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1361","RelatedDescription":"Opened pull request \"[Android] Changes to incorporate synchronized transaction commits\" (#1361) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRe-doing #451. `CommitNowAllowingStateLoss()` can be used for single transactions that need immediate execution where we have not added transactions to the back stack.\r\n\r\nRef: https://medium.com/@bherbst/the-many-flavors-of-commit-186608a015b1\r\n\r\nSee comments for further discussion.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6964969179","Type":"PullRequestEvent","CreatedAt":"2017-12-09T00:34:52","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1349","RelatedDescription":"Merged pull request \"[GTK] Added Maps project\" (#1349) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded **Xamarin.Forms.Maps.GTK** project.  It makes use of GMaps.NET internally for the maps managment.\r\n\r\n### Behavioral Changes ###\r\n\r\nCan use Google maps from Linux, macOS and Windows using the GTK backend.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6964656992","Type":"IssuesEvent","CreatedAt":"2017-12-08T22:34:51","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1360","RelatedDescription":"Closed issue \"iOS Remote USB still not available\" (#1360) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nThis feature got a standing ovation at Evolve 2016. It was around for about a week, then pulled.\r\nThere was a survey on Twitter that MANY people didn't know about.  Then ... well .... hello ... nothing.\r\n\r\nThe thread for it on Xamarin Forums still has people wanting to know when this will be available again.\r\nhttps://forums.xamarin.com/discussion/comment/311153#Comment_311153\r\n\r\nPlease bring this back - when it was there it worked great."},{"Id":"6964440093","Type":"IssuesEvent","CreatedAt":"2017-12-08T21:41:27","Actor":"tlhintoq","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1360","RelatedDescription":"Opened issue \"iOS Remote USB still not available\" (#1360) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nThis feature got a standing ovation at Evolve 2016. It was around for about a week, then pulled.\r\nThere was a survey on Twitter that MANY people didn't know about.  Then ... well .... hello ... nothing.\r\n\r\nThe thread for it on Xamarin Forums still has people wanting to know when this will be available again.\r\nhttps://forums.xamarin.com/discussion/comment/311153#Comment_311153\r\n\r\nPlease bring this back - when it was there it worked great."},{"Id":"6964101407","Type":"PullRequestEvent","CreatedAt":"2017-12-08T20:09:37","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1359","RelatedDescription":"Opened pull request \"Add implicit color conversion to .NET Standard's System.Drawing.Color\" (#1359) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis change simplifies working with colors in a .NET Standard way by adding implicit conversion between the two color types:\r\n```\r\nXamarin.Forms.Color c1 = Xamarin.Forms.Color.FromRgba(1, 1, 1, 1);\r\nSystem.Drawing.Color c2 = c1;\r\nXamarin.Forms.Color c3 = c2;\r\nif (c2 == c1)\r\n{\r\n   // Colors are equal\r\n}\r\n```\r\n\r\nThis came out of this discussion: https://github.com/xamarin/Xamarin.Forms/pull/1306#issuecomment-350355271\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - `public static implicit operator System.Drawing.Color(Xamarin.Forms.Color color)`\r\n - `public static implicit operator Xamarin.Forms.Color(System.Drawing.Color color)`\r\n\r\n### Behavioral Changes ###\r\n\r\nNone.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6963936226","Type":"IssuesEvent","CreatedAt":"2017-12-08T19:28:07","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1358","RelatedDescription":"Opened issue \"UWP no longer triggers XAML build step in .NET Standard world\" (#1358) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nPretty much what the tittle says. Oddly still works with design time builds so intellisense picks up the InitializeComponent calls.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Try to build reproduction project\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\nBuild works\r\n\r\n### Actual Behavior\r\n\r\nBuild fails\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.6.0 nightly\r\n- Last known good version: 2.5.0\r\n- IDE: VS 2017\r\n- Platform Target Frameworks: \r\n  - iOS:  N/A\r\n  - Android: N/A\r\n  - UWP:  Fall Creators Update\r\n- Android Support Library Version: N/A\r\n- Nuget Packages: N/A\r\n- Affected Devices: N/A\r\n\r\n### Screenshots\r\n\r\n N/A\r\n\r\n### Reproduction Link\r\n\r\n[App3.zip](https://github.com/xamarin/Xamarin.Forms/files/1543641/App3.zip)\r\n\r\n"},{"Id":"6963928234","Type":"PullRequestEvent","CreatedAt":"2017-12-08T19:26:06","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1357","RelatedDescription":"Opened pull request \"[UWP] Set ListView SelectedItem when constructing page\" (#1357) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nPer #1356, the when setting a ListView's SelectedItem while constructing the page, the item would be visually highlighted on Android/iOS, but not UWP. Some code existed previously in the ListViewRenderer that (at least for 8.1) allowed the behavior to function as expected, and appears to correct this particular issue.\r\n\r\n### Bugs Fixed ###\r\n\r\n#1356 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6963820207","Type":"IssuesEvent","CreatedAt":"2017-12-08T18:59:03","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1356","RelatedDescription":"Opened issue \"[UWP] The SelectedItem in a ListView is not highlighted when set while constructing a page\" (#1356) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nSetting a SelectedItem on a ListView when constructing a page doesn't select the item in the list on UWP.\r\n\r\n### Steps to Reproduce\r\n\r\nThis should simply require unzipping and running the reproduction -- the MainPage has a ListView which already does the work of setting the SelcetedItem.\r\n\r\n### Expected Behavior\r\n\r\nThe selected item is visually highlighted in the list.\r\n\r\n### Actual Behavior\r\n\r\nThe selected item is not visually highlighted on UWP. It is on Android and iOS.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.191934\r\n- Last known good version: Uncertain. This may have worked at some point, or maybe not.\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n  - Android: 8.0\r\n  - UWP:  16299\r\n- Android Support Library Version: (Not applicable)\r\n- Nuget Packages: (Not Applicable -- baseline Forms project/updated packages)\r\n- Affected Devices: Devices/machines running Windows 10\r\n\r\n### Screenshots\r\n\r\n\r\n### Reproduction Link\r\n\r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/1543316/App1.zip)\r\n\r\n"},{"Id":"6963729208","Type":"PullRequestEvent","CreatedAt":"2017-12-08T18:36:18","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/972","RelatedDescription":"Closed pull request \"[Android] Respect use of TextFormatted on Button\" (#972) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn a situation where a user wishes to create a custom renderer for Android's `Button` to set `TextFormatted` (in this issue's case, with spans), the `Text` property prevents it from working correctly, particularly when using `OnElementChanged`. If `TextFormatted` is null or empty, it will use the `Element.Text` value as normally expected; otherwise, the `Button` inherently defaults to using that `TextFormatted` value. Due to a small bug in Android, `SetAllCaps(false)` must be used in the custom renderer for this to display the spans correctly. \r\n\r\nThis change has only been applied to AppCompat.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=47430\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6964210241","Type":"PullRequestEvent","CreatedAt":"2017-12-08T20:38:53","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3090","RelatedDescription":"Opened pull request \"[arkit] Fix TriangleIndices to return 'short []'\" (#3090) at xamarin/xamarin-macios","RelatedBody":"- Fixes bug #61056: [ARKit] short TriangleIndices should be short[]\n(https://bugzilla.xamarin.com/show_bug.cgi?id=61056)\n- Obsolete `short TriangleIndices`.\n- Introduced new `short [] TriangleIndexes` property to avoid name collision."},{"Id":"6963934352","Type":"IssuesEvent","CreatedAt":"2017-12-08T19:27:38","Actor":"espresso3389","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3089","RelatedDescription":"Opened issue \"CGPath.Copy releases the original handle\" (#3089) at xamarin/xamarin-macios","RelatedBody":"[CGPath.Copy](https://github.com/xamarin/xamarin-macios/blob/master/src/CoreGraphics/CGPath.cs#L601) is supposed to create a mutable copy of the original CGPath.\r\n\r\nThe current implementation calls [CGPath.MakeMutable](https://github.com/xamarin/xamarin-macios/blob/master/src/CoreGraphics/CGPath.cs#L560) to create such a copy, and the function also release the CGPath handle passed to it.\r\n\r\nI think the behavior is not expected; it should create a copy but should not release the original handle."},{"Id":"6958805896","Type":"PullRequestEvent","CreatedAt":"2017-12-07T19:35:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3088","RelatedDescription":"Opened pull request \"[xamarin-analysis] Add rule #6 and updated md file\" (#3088) at xamarin/xamarin-macios","RelatedBody":"- Add XIA0006: HttpClientAvoidManaged.\n- Add documentation on how the rules work and how to activate them.\n  Also mention that they need to be ran on each active configuration.\n- Bump maccore to include XIA 0006."},{"Id":"6957033437","Type":"PullRequestEvent","CreatedAt":"2017-12-07T13:51:08","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3086","RelatedDescription":"Merged pull request \"Xcode 9.2 merge\" (#3086) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6953176352","Type":"PullRequestEvent","CreatedAt":"2017-12-06T20:03:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3080","RelatedDescription":"Merged pull request \"Add initial github issue template\" (#3080) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6953127858","Type":"IssuesEvent","CreatedAt":"2017-12-06T19:53:04","Actor":"pooran","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3087","RelatedDescription":"Opened issue \"Call Directory Extension\" (#3087) at xamarin/xamarin-macios","RelatedBody":"We followed steps provided https://developer.xamarin.com/guides/ios/platform_features/callkit/#Implementing-a-Call-Directory-Extension to create a call directory extension. We have shared a file group, that has less than 1000 phone numbers written from parent iOS app, which the app will read and load it to its directory.\r\n\r\nIt deploys along with iOS project. But when we try enabling the extension from Settings > Phone > Call Blocking and Identification, we get error 'An error occurred while attempting to enable app.\r\n\r\nIn device log, we found this error.\r\n\r\nError (188) / suggestd: Received a connection without suggestions entitlement, rejecting; pid: 801, name: com.apple.Preferences, entitlementKey: com.apple.private.suggestions.contacts, protocol: SGDSuggestManagerContactsProtocol\r\n\r\nAny idea where to put this entitlement? What we have been doing wrong."},{"Id":"6953087269","Type":"PullRequestEvent","CreatedAt":"2017-12-06T19:44:27","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3086","RelatedDescription":"Opened pull request \"Xcode 9.2 merge\" (#3086) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6951475856","Type":"PullRequestEvent","CreatedAt":"2017-12-06T14:36:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3083","RelatedDescription":"Merged pull request \"[Make.config] Add TODO for PACKAGE_VERSION_REV\" (#3083) at xamarin/xamarin-macios","RelatedBody":"In my bump to Xcode 9.2 final: https://github.com/xamarin/xamarin-macios/pull/3081 I updated the `IOS_PACKAGE_VERSION`'s minor # (for the release) but forgot to update `PACKAGE_VERSION_REV` (genuinely didn't know about it).\r\n\r\nIn retrospect, I should have read the bloc of text a couple lines above that says: \"A release branch requires updating\". Therefore in a desperate attempt to avoid that future me missing this I added a `/!\\ README /!\\`. I also updated the comment above `PACKAGE_VERSION_REV` to better highlight the importance of resetting to 0 and a TODO to, again, help future me see this (:"},{"Id":"6947798869","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:35:30","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Merged pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"939234630691180549","CreatedAt":"2017-12-08T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"#NativeForms is all polished and ready for you in #XamarinForms 2.5.0. Get started: https://t.co/8ZTIbOktJX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":19,"RawContent":null},{"Id":"939193776089772032","CreatedAt":"2017-12-08T18:03:40+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSAppCenter: https://t.co/XHMCHeVNSB https://t.co/pEYDruWIGp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":9,"RawContent":null},{"Id":"938851228209033219","CreatedAt":"2017-12-07T19:22:30+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/Ei8f1vdY4X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":80,"FavoriteCount":31,"RawContent":null},{"Id":"938814862695849984","CreatedAt":"2017-12-07T16:58:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample enterprise app with the Microsoft Authentication Library and #MicrosoftGraph APIs: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":23,"RawContent":null},{"Id":"938480168515055617","CreatedAt":"2017-12-06T18:48:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing the #Azure Mobile Badge from @XamarinU! Get started today: https://t.co/iirsQ3UrwL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":26,"RawContent":null},{"Id":"938450714149445637","CreatedAt":"2017-12-06T16:51:00+00:00","UserScreenname":"xamarinhq","Text":"Don't forget to register for next week's webinars on updating your #Xamarin apps to get the most out of Android 8 O… https://t.co/1dK9RFJUEq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":21,"RawContent":null},{"Id":"938141429167198208","CreatedAt":"2017-12-05T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"See how ￼Fidelity Mobile is uniting Brazilian citizens and their elected officials using real-time chat apps built… https://t.co/z6zRiQICHR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"938089332048564224","CreatedAt":"2017-12-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":10,"RawContent":null},{"Id":"937774983811616774","CreatedAt":"2017-12-04T20:05:53+00:00","UserScreenname":"xamarinhq","Text":"See what’s new in #VisualStudio 2017 version 15.5: https://t.co/wdtvE6HR1g https://t.co/ASOjIPtCt6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":172,"FavoriteCount":140,"RawContent":null},{"Id":"937729008883699712","CreatedAt":"2017-12-04T17:03:12+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/XFAEcWNh5K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"937507246317203457","CreatedAt":"2017-12-04T02:22:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to embed any #XamarinForms ContentPage into your #Xamarin iOS and Android projects: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":27,"RawContent":null},{"Id":"937084968140001281","CreatedAt":"2017-12-02T22:24:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/1LrzR56fPj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":171,"FavoriteCount":79,"RawContent":null},{"Id":"936715745370796033","CreatedAt":"2017-12-01T21:56:51+00:00","UserScreenname":"xamarinhq","Text":"Catch up with the @XamarinPodcast and learn about #XamarinForms 2.5.0, plus exciting updates to Live Player,… https://t.co/zBch3rb7K7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":19,"RawContent":null},{"Id":"936662898692313089","CreatedAt":"2017-12-01T18:26:52+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you (or online!) this December: https://t.co/O6L4GHyg4a https://t.co/wNIUbnJtoI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":5,"RawContent":null},{"Id":"936641572006957058","CreatedAt":"2017-12-01T17:02:07+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/DpaVdK5ZMf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":10,"RawContent":null},{"Id":"936334395631431685","CreatedAt":"2017-11-30T20:41:30+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your #Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/o6RntWMo4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"936280915675959296","CreatedAt":"2017-11-30T17:09:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to set up and configure an #Azure Notification Hub for your #Xamarin.iOS app: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":24,"RawContent":null},{"Id":"935969076786204672","CreatedAt":"2017-11-29T20:29:52+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinars on updating your #Xamarin apps to get the most out of iOS 11 and Android 8 O… https://t.co/RLOHI0RlUX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"935917018624217089","CreatedAt":"2017-11-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to provision a new iOS device and app in five minutes using #VS4Mac and the open source project fastlane: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":24,"RawContent":null},{"Id":"935600034816634880","CreatedAt":"2017-11-28T20:03:25+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2017-12-09T05:30:40.4313264Z","RunDurationInMilliseconds":4069}