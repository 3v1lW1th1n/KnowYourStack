{"Data":{"Blog":{"FeedItems":[{"Title":"Recapping Xamarin Developer Summit","PublishedOn":"2019-07-16T17:52:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The first-ever Xamarin Developer Summit has come to a close. The Xamarin team had an action-packed two days of announcements, talks, and hanging out with our community in Houston! Here is a recap of...","Href":"https://devblogs.microsoft.com/xamarin/recapping-xamarin-developer-summit/","RawContent":null},{"Title":"Snppts – Beautiful UI Snippets for Xamarin.Forms","PublishedOn":"2019-07-15T19:20:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Guest Post: Steven Thewissen is a Xamarin developer, Microsoft MVP, and author from the Netherlands with a knack for all things graphical. He co-founded Snppts and also creates/maintains several NuGet...","Href":"https://devblogs.microsoft.com/xamarin/snppts-ui-snippets-xamarin-forms/","RawContent":null},{"Title":"Xamarin.Essentials welcomes tvOS, watchOS, and Tizen","PublishedOn":"2019-07-12T17:33:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week marked the launch of Xamarin.Essentials 1.2 packed full of new enhancements and optimizations. The main highlight is the new file preview features enabling you to send, view, and email files...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-essentials-tvos-watchos-tizen/","RawContent":null},{"Title":"Announcing XAML Hot Reload for Xamarin.Forms","PublishedOn":"2019-07-11T14:45:52+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin.Forms, which enables you to make changes to your XAML UI and see them reflected live, without requiring another build and...","Href":"https://devblogs.microsoft.com/xamarin/xaml-hot-reload/","RawContent":null},{"Title":"Xamarin Developer Summit Live Streams!","PublishedOn":"2019-07-09T17:50:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Developer Summit is right around the corner! The two-day conference starts this Thursday in Houston, Texas. It will be packed with TONS of amazing sessions and workshops for Xamarin...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit-live-streams/","RawContent":null},{"Title":"Xamarin.Forms 4.1.0 Stable Now Available","PublishedOn":"2019-07-08T16:34:41+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we are happy to announce Xamarin.Forms 4.1 availability on NuGet. Our 3.0.0 series of releases focused heavily on growing Xamarin.Forms by filling in the gaps. We learned that this should be...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-1-0-stable-now-available/","RawContent":null},{"Title":"iOS 13 Preview Release Now Available","PublishedOn":"2019-07-03T17:48:38+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are excited to share our first preview release focused on support for iOS 13 and Xcode 11! With today&#8217;s preview, you can begin building applications using Xcode 11 and start...","Href":"https://devblogs.microsoft.com/xamarin/ios-13-xcode-11/","RawContent":null},{"Title":"Xamarin and .NET Community Developer Events in July","PublishedOn":"2019-07-01T19:49:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Jumpstart your next mobile development project by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/july-xamarin-net-developer-events/","RawContent":null},{"Title":"Styling for Multiple Device Resolutions","PublishedOn":"2019-06-28T18:26:56+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Guest Post: Charlin Agramonte is a Microsoft MVP and co-founder of CrossGeeks. She writes Xamarin articles in her blog http://xamgirl.com/. Find her on twitter as @Chard003.\nA few months ago we...","Href":"https://devblogs.microsoft.com/xamarin/styling-for-multiple-device-resolutions/","RawContent":null},{"Title":"Migrating MacOS Apps to 64-bit Before the Apple Transition","PublishedOn":"2019-06-26T19:27:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has been moving towards 64-bit only applications on macOS for a number of releases. Last June, Apple started requiring Apps on the macOS App Store to be 64-bit only and macOS 10.13.4 and above...","Href":"https://devblogs.microsoft.com/xamarin/apple-transition-migrate-macos-apps-to-64-bit/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"10025375440","Type":"IssuesEvent","CreatedAt":"2019-07-17T01:58:23","Actor":"adrianknight89","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3351","RelatedDescription":"Closed issue \"Disabling multi-dex throws \"java.exe\" exited with code 2\" (#3351) at xamarin/xamarin-android","RelatedBody":"In the recent Developer Summit, it was recommended that we turn off multi-dex. When I do that, I'm getting `\"java.exe\" exited with code 2`. This is all for a Xamarin.Forms project with version 4. I observed that using d8 & r8 while multi-dex is turned off fixes the problem. I'm building on Windows.\r\n\r\n@jonathanpeppers \r\n\r\n- Just to clarify, should d8 & r8 be turned on in debug and release or just one environment? \r\n- Also, I saw that a brand new XF project does not explicitly specify d8 & r8 but disabling multi-dex works. So it looks like I lack some config somewhere. My project was created a year ago."},{"Id":"10024575812","Type":"PullRequestEvent","CreatedAt":"2019-07-16T22:22:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3227","RelatedDescription":"Closed pull request \"[.gitattributes] overhaul line ending settings\" (#3227) at xamarin/xamarin-android","RelatedBody":"I keep hitting an annoyance on Windows, such as:\r\n\r\n    > git rebase master\r\n    Cannot rebase: You have unstaged changes.\r\n    Please commit or stash them.\r\n\r\nWhat? I didn't change anything?\r\n\r\n`git diff` reveals:\r\n\r\n    warning: CRLF will be replaced by LF in ThirdPartyNotices.txt.\r\n    The file will have its original line endings in your working directory\r\n\r\nSo `xaprepare` is probably just using `WriteLine()` to generate this\r\nfile. That is right and good.\r\n\r\nThe problem is our `.gitattributes` file needs to:\r\n\r\n* Check out `.txt` files as crlf on Windows\r\n* Commit `.txt` files as lf to the git repo\r\n\r\nI took this opportunity to overhaul our `.gitattributes` file a bit:\r\n\r\n* More comments / explanation\r\n* Alphabetically sorted & used spaces for better formatting\r\n* Configured Unix-specific files as LF"},{"Id":"10024363141","Type":"PullRequestEvent","CreatedAt":"2019-07-16T21:39:46","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3359","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] remove the linksrc directory\" (#3359) at xamarin/xamarin-android","RelatedBody":"I've removed various MSBuild targets that copy assemblies into the\r\n`obj\\Debug\\linksrc` directory, and instead just use\r\n`@(ResolvedUserAssemblies)` or `@(ResolvedAssemblies)` directly\r\n\r\nThings seem to *work*, I can build and deploy `samples\\HelloWorld` and\r\nthe Xamarin.Forms app in this repo. Let's see what breaks?\r\n\r\nThe size of `tests\\Xamarin.Forms-Performance-Integration\\Droid\\obj\\`\r\nis improved dramatically:\r\n\r\n    Before:\r\n    184.27 MB\r\n    After:\r\n    111.74 MB\r\n\r\n~73MB savings.\r\n\r\nThese MSBuild tasks were completely removed:\r\n\r\n      3 ms  _CopyMdbFiles                              1 calls\r\n     43 ms  _CopyPdbFiles                              1 calls\r\n    127 ms  _CopyIntermediateAssemblies                1 calls\r\n\r\nOn a slower machine with Windows Defender enabled, these targets are\r\ntaking:\r\n\r\n      6 ms  _CopyMdbFiles                              1 calls\r\n     95 ms  _CopyPdbFiles                              1 calls\r\n    269 ms  _CopyIntermediateAssemblies                1 calls"},{"Id":"10023868233","Type":"PullRequestEvent","CreatedAt":"2019-07-16T20:19:48","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3358","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] support Application.NetworkSecurityConfig\" (#3358) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3276\r\nContext: https://developer.android.com/training/articles/security-config\r\n\r\nA custom `Android.App.Application` subclass with the attribute:\r\n\r\n    [Application(NetworkSecurityConfig = \"@xml/network_security_config\")]\r\n\r\nCauses the `<GenerateJavaStubs/>` MSBuild task to throw:\r\n\r\n    The \"GenerateJavaStubs\" task failed unexpectedly.\r\n        System.ArgumentNullException: Value cannot be null.\r\n        Parameter name: fullName\r\n        at Mono.Cecil.AssemblyNameReference.Parse(String fullName)\r\n        at Xamarin.Android.Manifest.ManifestDocumentElement.ResolveType(String type, ICustomAttributeProvider provider, IAssemblyResolver resolver)\r\n        at Xamarin.Android.Manifest.ManifestDocumentElement1.<>c.<.cctor>b__25_12(Object value, ICustomAttributeProvider p, IAssemblyResolver r, Int32 v)\r\n        at Xamarin.Android.Manifest.ManifestDocumentElement1.ToAttributeValue(String name, T value, ICustomAttributeProvider provider, IAssemblyResolver resolver, Int32 targetSdkVersion)\r\n        at Xamarin.Android.Manifest.ManifestDocumentElement1.ToAttribute(String name, T value, String packageName, ICustomAttributeProvider provider, IAssemblyResolver resolver, Int32 targetSdkVersion)\r\n        at Xamarin.Android.Manifest.ManifestDocumentElement1.<>c__DisplayClass8_0.b__1(String e)\r\n        at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n        at System.Linq.Enumerable.WhereEnumerableIterator1.MoveNext()\r\n        at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n        at Xamarin.Android.Manifest.ManifestDocumentElement1.ToElement(T value, ICollection1 specified, String packageName, ICustomAttributeProvider provider, IAssemblyResolver resolver, Int32 targetSdkVersion)\r\n        at Android.App.ApplicationAttribute.ToElement(IAssemblyResolver resolver, String packageName)\r\n        at Xamarin.Android.Tasks.ManifestDocument.CreateApplicationElement(XElement manifest, String applicationClass, List1 subclasses, List1 selectedWhitelistAssemblies)\r\n        at Xamarin.Android.Tasks.ManifestDocument.Merge(List1 subclasses, List1 selectedWhitelistAssemblies, String applicationClass, Boolean embed, String bundledWearApplicationName, IEnumerable1 mergedManifestDocuments)\r\n        at Xamarin.Android.Tasks.GenerateJavaStubs.Run(DirectoryAssemblyResolver res)\r\n        at Xamarin.Android.Tasks.GenerateJavaStubs.Execute()\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.d__26.MoveNext()\r\n\r\nWhen I attached a debugger on Windows, it appeared the following\r\nmethod always treats `string` values as a .NET type that can be\r\nresolved:\r\n\r\n    static string ToString (string value, ICustomAttributeProvider provider, IAssemblyResolver resolver)\r\n    {\r\n        var typeDef = ResolveType (value, provider, resolver);\r\n        return ToString (typeDef);\r\n    }\r\n\r\nThe `value` is `@xml/network_security_config`, which is a case that\r\ndoesn't appear to be accounted for at all?\r\n\r\nI think we can just check if the string starts with `@` indicating an\r\nAndroid resource and return the value as-is.\r\n\r\nAfter making this change, things seem to work fine. Viewing the APK in\r\nAndroid Studio, the final/compiled `AndroidManifest.xml` looked\r\ncorrect:\r\n\r\n    <application\r\n        android:label=\"UnnamedProject\"\r\n        android:icon=\"@ref/0x7f010000\"\r\n        android:name=\"com.xamarin.android.CustomApp\"\r\n        android:debuggable=\"true\"\r\n        android:allowBackup=\"true\"\r\n        android:networkSecurityConfig=\"@ref/0x7f060000\">\r\n\r\nI was able to install and run this APK on a device."},{"Id":"10023503866","Type":"PullRequestEvent","CreatedAt":"2019-07-16T19:21:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3357","RelatedDescription":"Opened pull request \"[WIP] [Xamarin.Android.Build.Tasks] Fix issues with re running CilStrip.\" (#3357) at xamarin/xamarin-android","RelatedBody":""},{"Id":"10023499074","Type":"PullRequestEvent","CreatedAt":"2019-07-16T19:21:08","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3356","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Fix Lint Warnings\" (#3356) at xamarin/xamarin-android","RelatedBody":"We can get into a situation where we dont\r\nsupport a new api level, BUT our tooling\r\ninstalled it in the `platforms` folder of\r\nthe SDK.\r\n\r\nThis means we get the following warning\r\n\r\n\twarning XA0102:  Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]\r\n\r\nWhat we need to do in the test is ignore this\r\nwarning, IF we are in that particular situation."},{"Id":"10022240114","Type":"PullRequestEvent","CreatedAt":"2019-07-16T16:13:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2942","RelatedDescription":"Merged pull request \"Adding: How-to Native Debugging of Mono using Android Studio\" (#2942) at xamarin/xamarin-android","RelatedBody":"Adding How-to Native Debugging of Mono using Android Studio."},{"Id":"10021894744","Type":"PullRequestEvent","CreatedAt":"2019-07-16T15:30:29","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3355","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix Inputs for aapt2\" (#3355) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3336\r\n\r\n@brendanzagaeski found a really weird bug:\r\n\r\n1. Build a project with aapt2 with an invalid XML file.\r\n2. Remove the file from the project, build again.\r\n3. Add the file back, build a third time.\r\n\r\nOn step 3 & beyond, no build error is given--meaning *something* must\r\nbe out of date.\r\n\r\nI was able to reproduce the problem in a test, and saw it only occurs\r\nwith aapt2.\r\n\r\nThe `_CompileResources` MSBuild target was skipped:\r\n\r\n    Skipping target \"_CompileResources\" because all output files are up-to-date with respect to the input files.\r\n    Input files: Resources\\values\\ids.xml;Resources\\drawable-hdpi\\Icon.png;Resources\\drawable-mdpi\\Icon.png;Resources\\drawable-xhdpi\\Icon.png;Resources\\drawable-xxhdpi\\Icon.png;Resources\\drawable-xxxhdpi\\Icon.png;Resources\\layout\\Main.axml;Resources\\values\\Strings.xml\r\n    Output files: obj\\Debug\\flata\\\\_CompileResources.stamp\r\n\r\nBut `_UpdateAndroidResgen` was *not* skipped:\r\n\r\n    Building target \"_UpdateAndroidResgen\" completely.\r\n    Input file \"C:\\src\\xamarin-android\\bin\\TestDebug\\temp\\InvalidAndroidResourceTrue\\obj\\Debug\\res\\values\\ids.xml\" is newer than output file \"obj\\Debug\\R.cs.flag\".\r\n\r\nReviewing the `Inputs` of `_CompileResources`, it seems like we need\r\nto include the following files to better match `_UpdateAndroidResgen`:\r\n\r\n* `$(MSBuildAllProjects)` - so if the `.csproj` changes.\r\n* `$(_AndroidBuildPropertiesCache)` - so if any of the important\r\n  Xamarin.Android MSBuild properties change.\r\n\r\nAfter adding these `Inputs`, I also had to add a `Condition` to skip\r\nthe `_CompileResources` target entirely if `@(AndroidResource)` was\r\nblank. Otherwise projects like `Xamarin.Android.NUnitLite` did not\r\nbuild. This was skipping before because the `Inputs` were empty."},{"Id":"10021813045","Type":"PullRequestEvent","CreatedAt":"2019-07-16T15:20:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3242","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Apk per ABI fails with TargetFrameworkVersion v7.1 and lower when Aapt2 is enabled\" (#3242) at xamarin/xamarin-android","RelatedBody":"Fixes #3083\r\n\r\n`aapt2` can be inconsistent regarding its exit code and\r\nwriting errors to stderr. It turns out that there are\r\ncases where only WARNINGS are written to stderr. In this\r\ncase the exit code is 0. However we can not rely on the\r\nexit code only, since there have been cases where\r\nthe exit code is 0 but we have errors on stderr.\r\n\r\nSo what we need to do is parse the stderr output and look\r\nfor those `tags` which we know represent warnings. This is\r\nso we can correctly classify those errors/warnings to make\r\nsure we correctly report the issues."},{"Id":"10021813011","Type":"IssuesEvent","CreatedAt":"2019-07-16T15:20:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3083","RelatedDescription":"Closed issue \"Apk per ABI fails with TargetFrameworkVersion v7.1 and lower when Aapt2 is enabled\" (#3083) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. ``` msbuild /t:SignAndroidPackage *.csproj /p:Configuration=Release /p:TargetFrameworkVersion=v7.1 /p:AndroidCreatePackagePerAbi=True /p:AndroidUseAapt2=True```\r\n\r\nThis could be considered a regression in d16-2 as `Aapt2` resource processing is now enabled by default.\r\n\r\n### Actual Behavior\r\nI've noticied a difference in `Aapt2Link` task behavior when comparing good and bad builds (both attached below). For some reason ABI specific manifest files don't appear to be processed by `Aapt2Link` when targeting a lower API level, and the ABI specific resource files are never created:\r\n\r\n```\r\nerror MSB4018: The \"BuildApk\" task failed unexpectedly.\r\nerror MSB4018: System.IO.FileNotFoundException: Could not find file 'obj\\Release\\71\\android\\bin\\packaged_resources-armeabi-v7a'\r\n```\r\n\r\n\r\n### Version Information\r\nXA D16-2 9.4.0.4 (HEAD/cc0e8b8d5)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n[good-bad-binlogs.zip](https://github.com/xamarin/xamarin-android/files/3158319/good-bad-binlogs.zip)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"10025546407","Type":"IssuesEvent","CreatedAt":"2019-07-17T02:44:30","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6882","RelatedDescription":"Closed issue \"Unable to change ListView/CollectionView height using layout flags\" (#6882) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nListView and CollectionView controls are trying to take as much space as possible providing no control over this behavior to an end-user.  The only working option as of now is to calculate the control height based on the number of items and each item height which is not always a good option. The image attached reflects the issue, with free space after ListView.Footer which should be given to the next control in StackLayout/FlexView. \r\n\r\n### Steps to Reproduce\r\n\r\n1. Put a ListView into a StackLayout among other controls\r\n2. Bind the ListView to a list of items with uneven row height and fewer items needed to fill a page (3-4 items)\r\n3. Set the VerticalOptions = Start\r\n\r\n### Expected Behavior\r\n\r\nThe ListView control takes space only needed to render 3-4 items and leave the rest to the other controls in the StackLayout control\r\n\r\n### Actual Behavior\r\n\r\nThe ListView control takes all space available leaving an empty space after the footer instead of giving this space to the other controls in the StackLayout control\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.1.0.581479\r\n- Last known good version: N/A\r\n- IDE: VS for Mac 8.2\r\n- Platform Target Frameworks: \r\n  - iOS:  12.2\r\n  - Android: 9.0\r\n- Nuget Packages:\r\n<PackageReference Include=\"Xamarin.Forms\" Version=\"4.1.0.581479\" />\r\n<PackageReference Include=\"Xamarin.Essentials\" Version=\"1.1.0\" />\r\n- Affected Devices:\r\nAll tested\r\n\r\n### Screenshots\r\n\r\n![f0c990e4-24dd-44c4-8f07-f8ef577d4068](https://user-images.githubusercontent.com/3697084/61252695-16703d00-a6fa-11e9-81b7-ae55a1369235.png)\r\n\r\n### Reproduction Link\r\n\r\nI have created a sample project to reproduce this issue here:\r\nhttps://github.com/alexeystrakh/xamarin-listview-dynamicheight \r\n\r\nI have also found a few references on the Internet about the same issue our community is trying to solve:\r\nhttps://xamarinsharp.com/2017/05/16/listview-height-issue-in-xamarin-forms-how-to-solve-it/\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"10024853355","Type":"PullRequestEvent","CreatedAt":"2019-07-16T23:28:44","Actor":"whitneyschmidt","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6588","RelatedDescription":"Merged pull request \"[quicklookUI] xcode11 beta1 - beta3 updated bindings\" (#6588) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10024566785","Type":"PullRequestEvent","CreatedAt":"2019-07-16T22:20:13","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6598","RelatedDescription":"Opened pull request \"[mmp] Improve error message when required assemblies are not found by linker\" (#6598) at xamarin/xamarin-macios","RelatedBody":"- https://devdiv.visualstudio.com/DevDiv/_workitems/edit/947932"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1151246383837585408","CreatedAt":"2019-07-16T21:45:01+00:00","UserScreenname":"xamarinhq","Text":"Thank You! The first Xamarin Developer Summit was a huge success. This post recaps all the great news and developme… https://t.co/TNaPa2uXX6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":18,"RawContent":null},{"Id":"1151185104460537857","CreatedAt":"2019-07-16T17:41:31+00:00","UserScreenname":"xamarinhq","Text":"On this week's #Xamarin Essential API of the week, we take a look at the Phone Dialer API which enables your app to… https://t.co/TCMRVbhW8X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":17,"FavoriteCount":8,"RawContent":null},{"Id":"1149695456684982272","CreatedAt":"2019-07-12T15:02:11+00:00","UserScreenname":"xamarinhq","Text":"Stick around after the @XamDevSummit Keynote to hear about \"Building https://t.co/3QxhuBuvHc from source\" by… https://t.co/6b0vNDHyzx","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"1149674546556915713","CreatedAt":"2019-07-12T13:39:06+00:00","UserScreenname":"xamarinhq","Text":"Day 2 is here! Watch the live @XamDevSummit keynote and explore Microsoft's complete mobile DevOps offering with… https://t.co/TpKv78eFbD","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":29,"FavoriteCount":10,"RawContent":null},{"Id":"1149421147064295424","CreatedAt":"2019-07-11T20:52:11+00:00","UserScreenname":"xamarinhq","Text":"Get all the \"Partly Cloudy – Tips &amp; Tricks to Using #Azure to Its Fullest in #Mobile Apps\" with @CodeMillMatt at 16… https://t.co/OWINsa15lf","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1149415035241926656","CreatedAt":"2019-07-11T20:27:54+00:00","UserScreenname":"xamarinhq","Text":"Catch @JamesMontemagno live at @XamDevSummit \"Crafting Real-Time Mobile Apps with SignalR\"  https://t.co/AGklkmnbyU","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":19,"FavoriteCount":7,"RawContent":null},{"Id":"1149390372851896321","CreatedAt":"2019-07-11T18:49:54+00:00","UserScreenname":"xamarinhq","Text":"Live at 14:05 CT, join @Pureween to \"Streamline &amp; Simplify Events with Reactive Extensions\" at @XamDevSummit! Follo… https://t.co/pplpgXzjJe","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":16,"FavoriteCount":2,"RawContent":null},{"Id":"1149358581940129793","CreatedAt":"2019-07-11T16:43:34+00:00","UserScreenname":"xamarinhq","Text":"Watch @SweekritiS share \"Page Object Pattern and UITest Best Practices\" #LIVE at @XamDevSummit at 13:05 CT! Just us… https://t.co/4pSIzUXclE","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":14,"FavoriteCount":0,"RawContent":null},{"Id":"1149336299280773120","CreatedAt":"2019-07-11T15:15:02+00:00","UserScreenname":"xamarinhq","Text":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin Forms.\n\nNow you can make changes to you… https://t.co/AhFwLxKNFz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":164,"FavoriteCount":81,"RawContent":null},{"Id":"1149331380104564736","CreatedAt":"2019-07-11T14:55:29+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, we now have a preview release focused on supporting iOS 13 and Xcode 11. Now you can build applications usin… https://t.co/La5Jlgs0Kh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":8,"FavoriteCount":4,"RawContent":null},{"Id":"1148665630306000896","CreatedAt":"2019-07-09T18:50:02+00:00","UserScreenname":"xamarinhq","Text":"We're live streaming the Xamarin Developer Summit!\n\nVirtually attend the conference starting Thursday, July 11th… https://t.co/Kh76XrlNVo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":39,"RawContent":null},{"Id":"1148317583004852224","CreatedAt":"2019-07-08T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/5rZ4bINXkB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":16,"RawContent":null},{"Id":"1148273170136403975","CreatedAt":"2019-07-08T16:50:32+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, Xamarin Forms 4.1.0 Stable is now available. It has dozens of quality improvements, a new CheckBox control,… https://t.co/R3yD5qr9qm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":86,"FavoriteCount":44,"RawContent":null},{"Id":"1146463951594459137","CreatedAt":"2019-07-03T17:01:20+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1146144741622505472","CreatedAt":"2019-07-02T19:52:55+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile development project by networking with your local community and getting the latest updat… https://t.co/JeIcDMSyUr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1145780868323168256","CreatedAt":"2019-07-01T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/ghYOrkuhhd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":20,"FavoriteCount":7,"RawContent":null},{"Id":"1144685402965643277","CreatedAt":"2019-06-28T19:14:01+00:00","UserScreenname":"xamarinhq","Text":"We realized that making UI *look* good is not enough; it has to be truly adaptive. See how to handle this by using… https://t.co/CtEZskZmJ9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":115,"FavoriteCount":39,"RawContent":null},{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This week’s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with atta… https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"1144002014592061441","CreatedAt":"2019-06-26T21:58:29+00:00","UserScreenname":"xamarinhq","Text":"Reminder: Though new Xamarin .Mac applications target 64-bit by default, existing Xamarin .Mac applications that ta… https://t.co/3k5pQmlyq9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2019-07-17T05:31:04.2613089Z","RunDurationInMilliseconds":4661}