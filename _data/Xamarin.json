{"Data":{"Blog":{"FeedItems":[{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8175471504","Type":"PullRequestEvent","CreatedAt":"2018-08-28T02:17:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2107","RelatedDescription":"Opened pull request \"[build] Explicitly create `bin/Build$(Configuration)`\" (#2107) at xamarin/xamarin-android","RelatedBody":"[The build][0] is [broken][1]!\r\n\r\n\tmsbuild /p:Configuration=Debug /p:AutoProvision=True /p:AutoProvisionUsesSudo=True /p:IgnoreMaxMonoVersion=False /v:diag /v:normal /binaryLogger:\"…/xamarin-android//bin/BuildDebug/msbuild-`date +%Y%m%dT%H%M%S`-prepare-deps.binlog\" build-tools/dependencies/dependencies.csproj\r\n\tMicrosoft (R) Build Engine version 15.3.0.0 (d15.3/e5db6a9 Wed May 10 05:29:34 EDT 2017)\r\n\tCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n\t/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/msbuild/15.0/bin/MSBuild.dll /binaryLogger:…/xamarin-android/bin/BuildDebug/msbuild-20180824T102507-prepare-deps.binlog /p:Configuration=Debug /p:AutoProvision=True /p:AutoProvisionUsesSudo=True /p:IgnoreMaxMonoVersion=False /v:diag /v:normal build-tools/dependencies/dependencies.csproj\r\n\tMSBUILD : Logger error MSB4104: Failed to write to log file \"…/xamarin-android/bin/BuildDebug/msbuild-20180824T102507-prepare-deps.binlog\". Could not find a part of the path \"…/xamarin-android/bin/BuildDebug/msbuild-20180824T102507-prepare-deps.binlog\".\r\n\tSystem.IO.DirectoryNotFoundException: Could not find a part of the path \"…/xamarin-android/bin/BuildDebug/msbuild-20180824T102507-prepare-deps.binlog\".\r\n\t...\r\n\r\nWhat's curious is that the commit which \"broke\" the\r\nxamarin-android:master build -- commit d373e31 -- has *nothing* which\r\ncould possibly impact this part of the build, so we've been\r\nscratching our heads over this for days...\r\n\r\nComparing the [failing build][1] against the [last good build][2]\r\ndoes bring up some \"interesting\" differences, in particular the\r\nmono and msbuild versions used.\r\n\r\nThe good build is using Mono 5.14 and MSBuild 15.8:\r\n\r\n\tMicrosoft (R) Build Engine version 15.8.68.658 (xplat-master/9202c914 Fri Jun 22 12:15:07 EDT 2018) for Mono\r\n\t...\r\n\tSearch paths being used for $(MSBuildExtensionsPath) are /Library/Frameworks/Mono.framework/Versions/5.14.0/lib/mono/xbuild;/Library/Frameworks/Mono.framework/External/xbuild/\r\n\r\nThe bad build is using Mono 5.2 (?!) and MSBuild 15.3:\r\n\r\n\tMicrosoft (R) Build Engine version 15.3.0.0 (d15.3/e5db6a9 Wed May 10 05:29:34 EDT 2017)\r\n\t...\r\n\tSearch paths being used for $(MSBuildExtensionsPath) are /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild:/Library/Frameworks/Mono.framework/External/xbuild/\r\n\r\nWhy does this matter?  Newer `msbuild` versions will create non-\r\nexistent directories used in the `/binaryLogger` argument, e.g. this\r\ncommand always works, when `new-path` does not already exist:\r\n\r\n\trmdir new-path\r\n\tmsbuild /binaryLogger:new-path/output.binlog Project.csproj\r\n\r\nApparently this is *not* the case with Mono 5.2/MSBuild d15.3.\r\n\r\nUpdate the `make prepare-deps` target so that the\r\n`bin/Build$(Configuration)` directories are *always* created before\r\n`$(call MSBUILD_BINLOG)` is executed, ensuring that the\r\n`/binaryLogger` output directory already exists, thus appeasing\r\nmono 5.2/msbuild 15.3.\r\n\r\n(*How* that build machine got Mono 5.2 installed and used in the\r\n*first* place is currently unknown.)\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1139/\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1139/console\r\n[2]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1138/"},{"Id":"8174644069","Type":"PullRequestEvent","CreatedAt":"2018-08-27T21:46:22","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2106","RelatedDescription":"Opened pull request \"Remove all traces of armeabi (ARMv5)\" (#2106) at xamarin/xamarin-android","RelatedBody":"Android NDK r17 dropped support for armeabi and any attempt to build projects\r\ntargetting this ABI fails with an error. In preparation for NDK r17 this commit\r\nremoves all the traces of armeabi from Xamarin.Android tree.\r\n\r\nIn order to prevent confusion, all the instances where we used `armeabi` but\r\nmeant `armeabi-v7a` have been renamed to the latter form."},{"Id":"8173278936","Type":"PullRequestEvent","CreatedAt":"2018-08-27T17:11:46","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2087","RelatedDescription":"Merged pull request \"Revert \"[mono-sdks] Use for android toolchain\"\" (#2087) at xamarin/xamarin-android","RelatedBody":"This reverts commit fef45412d6b852afe654764bb38a2ad3ab5871c2.\r\n\r\nThis brings back the responsibility of setting up the Android toolchain back into XA. This follows a discussion I has with @jonpryor, and during which we concluded we didn't want Mono to be responsible for that."},{"Id":"8173264455","Type":"PullRequestEvent","CreatedAt":"2018-08-27T17:08:46","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2105","RelatedDescription":"Opened pull request \"[Mono.Android] build and reference non-PCL Java.Interop\" (#2105) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.devdiv.io/667174\r\nContext: https://github.com/xamarin/java.interop/pull/360\r\n\r\nBuilding `Java.Interop` in a similar fashion as `Mono.Android.dll`:\r\n\r\n    <PropertyGroup>\r\n        <NoStdLib>true</NoStdLib>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <Reference Include=\"mscorlib\">\r\n            <HintPath>$(XAInstallPrefix)xbuild-frameworks\\MonoAndroid\\v1.0\\mscorlib.dll</HintPath>\r\n            <Private>False</Private>\r\n        </Reference>\r\n        <Reference Include=\"System\">\r\n            <HintPath>$(XAInstallPrefix)xbuild-frameworks\\MonoAndroid\\v1.0\\System.dll</HintPath>\r\n            <Private>False</Private>\r\n        </Reference>\r\n        <Reference Include=\"System.Core\">\r\n            <HintPath>$(XAInstallPrefix)xbuild-frameworks\\MonoAndroid\\v1.0\\System.Core.dll</HintPath>\r\n            <Private>False</Private>\r\n        </Reference>\r\n    </ItemGroup>\r\n\r\nDecreases the assemblies referenced in a \"Hello World\" Xamarin.Android\r\nproject dramatically:\r\n\r\n    Adding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n        Adding assembly reference for System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.ComponentModel.Composition, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, recursively...\r\n        Adding assembly reference for System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Collections.Concurrent, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Linq.Expressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Reflection.Primitives, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Dynamic.Runtime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.ObjectModel, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Linq, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Runtime.InteropServices, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Runtime.Extensions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Reflection.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n    Adding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nBecomes:\r\n\r\n    Adding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n    Adding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nAnd the savings in build times for \"Hello World\", this is the\r\n`Rebuild` target:\r\n- `Debug` + PCL - 8.424s\r\n- `Release` + PCL - 13.651s\r\n- `Debug` + *not* PCL - 4.258s\r\n- `Release` + *not* PCL - 9.487s\r\n\r\n*NOTE: this was a master/Debug build of Xamarin.Android*\r\n\r\nChanges:\r\n- `$(MSBuildThisFile)` should be an input of `_BuildJavaInterop`\r\n- Set `$(JavaInteropProfile)` so a non-PCL version of\r\n  `Java.Interop.dll` is built\r\n- Make sure to copy `Java.Interop.dll` from the `DebugNet45` directory"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8174696528","Type":"PullRequestEvent","CreatedAt":"2018-08-27T21:59:02","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3672","RelatedDescription":"Opened pull request \"[Android] remove deprecated AndroidUseLatestPlatformSdk\" (#3672) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAndroidUseLatestPlatformSdk has been deprecated and having it set to true is causing the build server to use a TFV that's inconsistent with what we have specified\r\n\r\n### Issues Resolved ### \r\nAPI's deprecated by TFV 9.0 are causing the build server to fail because we have Treat Warnings as ERrors set\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8174303153","Type":"PullRequestEvent","CreatedAt":"2018-08-27T20:34:04","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3671","RelatedDescription":"Opened pull request \"[WPF] Fix DisplayAlert has no Text Wrapping\" (#3671) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix DisplayAlert has no Text Wrapping issue\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3634 \r\n\r\n### Platforms Affected ### \r\n\r\n- WPF\r\n\r\n### After Screenshot ### \r\n\r\n![image](https://user-images.githubusercontent.com/25939826/44684357-2e3ec400-aa49-11e8-802d-39c21e1a856d.png)\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8175563686","Type":"PullRequestEvent","CreatedAt":"2018-08-28T02:49:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4704","RelatedDescription":"Merged pull request \"Bump mono to head to 2018-02\" (#4704) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@c5b8988d22e [sdb] Disable an assert to avoid breaking debugging. (#10315)\n* mono/mono@15eab7066c1 [2018-02] Add pipeline to convert managed exception into telemetry format  (#10249)\n* mono/mono@e0e035e3b14 Bump xunit-binaries\n* mono/mono@4e0a2ac0dd3 [llvm] Avoid using the preserveall calling convention on watchos, xcode10 asserts on it. (#9325)\n* mono/mono@02928166e52 Bump nunitlite to get NUnit2 xml output fix and failure on file not found fix (#10188)\n* mono/mono@6c1f4b97469 [System.Xml.Linq] Fix namespace conflict with new Xamarin.Mac namespace in test code. (#10185)\n\nDiff: https://github.com/mono/mono/compare/4fe3280bba14cb9e81e2480bfdc6d934bcbc5c3c...c5b8988d22e12a44449d036999b0affda8ad91ff"},{"Id":"8174813286","Type":"PullRequestEvent","CreatedAt":"2018-08-27T22:29:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4673","RelatedDescription":"Merged pull request \"[apidiff] Update XML references with 15.8 as the new base (master)\" (#4673) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8174794720","Type":"PullRequestEvent","CreatedAt":"2018-08-27T22:24:30","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4705","RelatedDescription":"Opened pull request \"Bump mono to head of 2018-02\" (#4705) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@c5b8988d22e [sdb] Disable an assert to avoid breaking debugging. (#10315)\n* mono/mono@15eab7066c1 [2018-02] Add pipeline to convert managed exception into telemetry format  (#10249)\n* mono/mono@e0e035e3b14 Bump xunit-binaries\n\nDiff: https://github.com/mono/mono/compare/4e0a2ac0dd3bce577ee5ebacab40d9a16c58e647...c5b8988d22e12a44449d036999b0affda8ad91ff"},{"Id":"8174780755","Type":"PullRequestEvent","CreatedAt":"2018-08-27T22:20:43","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4704","RelatedDescription":"Opened pull request \"Bump mono to head to 2018-02\" (#4704) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@c5b8988d22e [sdb] Disable an assert to avoid breaking debugging. (#10315)\n* mono/mono@15eab7066c1 [2018-02] Add pipeline to convert managed exception into telemetry format  (#10249)\n* mono/mono@e0e035e3b14 Bump xunit-binaries\n* mono/mono@4e0a2ac0dd3 [llvm] Avoid using the preserveall calling convention on watchos, xcode10 asserts on it. (#9325)\n* mono/mono@02928166e52 Bump nunitlite to get NUnit2 xml output fix and failure on file not found fix (#10188)\n* mono/mono@6c1f4b97469 [System.Xml.Linq] Fix namespace conflict with new Xamarin.Mac namespace in test code. (#10185)\n\nDiff: https://github.com/mono/mono/compare/4fe3280bba14cb9e81e2480bfdc6d934bcbc5c3c...c5b8988d22e12a44449d036999b0affda8ad91ff"},{"Id":"8174451649","Type":"PullRequestEvent","CreatedAt":"2018-08-27T21:04:17","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4703","RelatedDescription":"Opened pull request \"[makefile] Fix 'buildinfo' branch name on jenkins\" (#4703) at xamarin/xamarin-macios","RelatedBody":"- Jenkins knows the branch name $(BRANCH_NAME) which Wrench didn't.\n- Fixes #4674: [Makefile] Incorrect 'HEAD' word used as branch for xcode10 pkg.\n  (https://github.com/xamarin/xamarin-macios/issues/4674)"},{"Id":"8174001914","Type":"IssuesEvent","CreatedAt":"2018-08-27T19:33:05","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4619","RelatedDescription":"Closed issue \"Interface Builder - Not able to create outlets\" (#4619) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new Xamarin iOS Application\r\n2. Right Click Storyboard\r\n3. Open in Interface Builder\r\n4. Create a control in your ViewController\r\n5. Connect this to the code behind using CMD Drag\r\n\r\n### Expected Behavior\r\n\r\nOutlet should be created in the header file of the ViewController\r\n\r\n### Actual Behavior\r\n\r\nError: Could not insert new outlet connection: Could not find any information for the class ViewController\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 3)\r\nInstallation UUID: 59e8a0c2-a674-42a6-b852-843de896e0eb\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.1.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Version: 2.1.301\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/blounty/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Enterprise)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040003\r\nGit revision: 6ae731889c896d6733efb8ff5117f5bf5b17b509\r\nBuild date: 2018-07-19 13:07:45-04\r\nXamarin addins: 417fed09624e1e1f76ab0a11e8b97ffd8bbf91e1\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n<img width=\"1513\" alt=\"screen shot 2018-08-14 at 11 01 05 am\" src=\"https://user-images.githubusercontent.com/30159621/44109241-63689946-9fb1-11e8-94c7-613b646933a7.png\">\n\n> VS bug [#664435](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/664435)"},{"Id":"8173793017","Type":"IssuesEvent","CreatedAt":"2018-08-27T18:51:32","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3953","RelatedDescription":"Closed issue \"[XM] XM.Full - 'HttpWebRequest' does not contain a constructor that takes 1 arguments\" (#3953) at xamarin/xamarin-macios","RelatedBody":"The [HttpClient sample ](https://github.com/xamarin/mac-samples/tree/master/HttpClient) is failed to build in XM.Full mode. Everything is ok in XM.Modern mode\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Download the [sample](https://github.com/xamarin/mac-samples/tree/master/HttpClient)\r\n2.  Switch to the using of XM.Full Framework\r\n3.  Build\r\n\r\n### Expected Behavior\r\nBuild successfully.\r\n\r\n### Actual Behavior\r\nBuild is failed.\r\n```\r\nError CS1729: 'HttpWebRequest' does not contain a constructor that takes 1 arguments (CS1729) \r\n```\r\n\r\n### Environment\r\n\r\n1. VSfM. Also it was checked with XM: `15.5 (4.0.0.216)` and `15.3 (3.6.3.3)`\r\nhttps://gist.github.com/mykyta-bondarenko-gl/141efda63e0b3f0a28846b50fa35c11c\r\n\r\n### Build Logs\r\n\r\n1. Output\r\nhttps://gist.github.com/mykyta-bondarenko-gl/8a3d64768012e55ca2245ca2caaa450a\r\n\r\n### Example Project \r\n\r\n[HttpClient](https://github.com/xamarin/mac-samples/tree/master/HttpClient)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":38,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":76,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":34,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":48,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":174,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":57,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":262,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null}]}},"RunOn":"2018-08-28T05:30:53.0260852Z","RunDurationInMilliseconds":4182}