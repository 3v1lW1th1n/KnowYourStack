{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11296063257","Type":"PullRequestEvent","CreatedAt":"2020-01-17T00:23:04","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7813","RelatedDescription":"Opened pull request \"Update owin 3.x->4.x\" (#7813) at NuGet/NuGetGallery","RelatedBody":"Updating to accommodate upcoming chrome change for SameSite cookie."},{"Id":"11295677531","Type":"PullRequestEvent","CreatedAt":"2020-01-16T23:04:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7812","RelatedDescription":"Merged pull request \"Make deprecation reasons have consistent punctuation\" (#7812) at NuGet/NuGetGallery","RelatedBody":"The punctuation on the deprecation reasons are inconsistent:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/72563053-b3ef2980-3861-11ea-81fb-ad6c74314a77.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7811"},{"Id":"11294926491","Type":"PullRequestEvent","CreatedAt":"2020-01-16T21:12:38","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7812","RelatedDescription":"Opened pull request \"Make deprecation reasons have consistent punctuation\" (#7812) at NuGet/NuGetGallery","RelatedBody":"The punctuation on the deprecation reasons are inconsistent:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/72563053-b3ef2980-3861-11ea-81fb-ad6c74314a77.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7811"},{"Id":"11294925298","Type":"IssuesEvent","CreatedAt":"2020-01-16T21:12:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7811","RelatedDescription":"Opened issue \"Make deprecation reasons have consistent punctuation\" (#7811) at NuGet/NuGetGallery","RelatedBody":"The punctuation on the deprecation reasons are inconsistent:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/72563053-b3ef2980-3861-11ea-81fb-ad6c74314a77.png)\r\n"},{"Id":"11293235039","Type":"PullRequestEvent","CreatedAt":"2020-01-16T17:25:40","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7808","RelatedDescription":"Merged pull request \"Merge branch 'dev' into master\" (#7808) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11293232324","Type":"IssuesEvent","CreatedAt":"2020-01-16T17:25:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7810","RelatedDescription":"Opened issue \"[2020-01-16] Deployment\" (#7810) at NuGet/NuGetGallery","RelatedBody":"## NuGetGallery\r\n\r\n- [ ] Merge dev to master\r\n  - https://github.com/NuGet/NuGetGallery/pull/7808\r\n- [ ] DEV\r\n- [ ] INT\r\n- [ ] PROD"},{"Id":"11288902591","Type":"PullRequestEvent","CreatedAt":"2020-01-16T09:00:23","Actor":"xavierdecoster","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7807","RelatedDescription":"Merged pull request \"Upgrade ServerCommon and NuGet.Jobs dependencies to latest\" (#7807) at NuGet/NuGetGallery","RelatedBody":"Consumes latest ServerCommon and NuGet.Jobs dependencies to align repositories"},{"Id":"11286361894","Type":"PullRequestEvent","CreatedAt":"2020-01-16T00:22:37","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7791","RelatedDescription":"Closed pull request \"Remove an unnecessary SQL query\" (#7791) at NuGet/NuGetGallery","RelatedBody":"The display package page gets data through lazy loading. One such lazily loaded queries was a repeat:\r\n\r\n1. Eagerly load all versions of a package: https://github.com/NuGet/NuGetGallery/blob/90f8fbea00217db2e5d918e140621c0aea0ca12d/src/NuGetGallery/Controllers/PackagesController.cs#L800\r\n1. Lazily load all versions of a package: https://github.com/NuGet/NuGetGallery/blob/90f8fbea00217db2e5d918e140621c0aea0ca12d/src/NuGetGallery/Helpers/ViewModelExtensions/DisplayPackageViewModelFactory.cs#L63\r\n\r\nThese queries are particularly expensive when a package many versions. Given that the second query is redundant, I piped the data from the first query down to the view model factory. \r\n\r\nTest build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3350351\r\nTest release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=541799\r\n\r\nPart of https://github.com/NuGet/Engineering/issues/2910"},{"Id":"11286117390","Type":"IssuesEvent","CreatedAt":"2020-01-15T23:31:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7809","RelatedDescription":"Opened issue \"Long username adds new line on the display package page\" (#7809) at NuGet/NuGetGallery","RelatedBody":"For example: https://www.nuget.org/packages/Microsoft.CognitiveServices.Speech/\r\n\r\n![image](https://user-images.githubusercontent.com/737941/72480322-edfdf400-37ab-11ea-8082-165cce6dd174.png)\r\n\r\nWe should consider truncating the username."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11297274557","Type":"IssuesEvent","CreatedAt":"2020-01-17T05:20:57","Actor":"gsscoder","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9053","RelatedDescription":"Closed issue \"Feature request: better message if package ID already exists\" (#9053) at NuGet/Home","RelatedBody":"If *package ID* exists I get:\r\n```\r\ninfo : Push di Tagger.1.0.5.nupkg in 'https://www.nuget.org/api/v2/package'...\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo :   Forbidden https://www.nuget.org/api/v2/package/ 1398 ms\r\nerror: Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n```\r\nI discovered it using the web gallery instead of command line.\r\n\r\nA meaningful message after this kind of fail for `dotnet pack` will be very useful!\r\n\r\nThank you for **excellent job**."},{"Id":"11296008094","Type":"IssuesEvent","CreatedAt":"2020-01-17T00:11:31","Actor":"buddhashrestha","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9068","RelatedDescription":"Opened issue \"How to setup NuGet (feed source and credentials) in CI/CD pipeline?\" (#9068) at NuGet/Home","RelatedBody":"Remove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.1.6268\r\n\r\nVS version (if appropriate): 2017\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\nI setup NuGet (feed source and credentials) in my local via Visual Studio UI. I don't have a NuGet.config in my repo. Now, if I want to build the code in CI/CD, then how should I do it? Because I don't have the feed source and credentials information in my repo, the CI/CD server also doesn't have that information yet.\r\n\r\nI just want to know the best practice to create a build pipeline.\r\n"},{"Id":"11295951346","Type":"IssuesEvent","CreatedAt":"2020-01-16T23:59:52","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8591","RelatedDescription":"Closed issue \"NativeCms could only work on windows platform\" (#8591) at NuGet/Home","RelatedBody":"dotnet/corefx has added SignedCms and SignerInfo changes for netstandard2.1 : https://github.com/dotnet/corefx/issues/36062\r\n\r\nWe need to change our code  accordingly.\r\n\r\nFor now, NativeCms only works for windows platform. We need to create a equivalent one for netstandard2.1 crossplatform.\r\n"},{"Id":"11295948675","Type":"IssuesEvent","CreatedAt":"2020-01-16T23:59:15","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8045","RelatedDescription":"Closed issue \"Signing: for Linux and Mac, implement timestamp integrity verification and enable the tests\" (#8045) at NuGet/Home","RelatedBody":"Timestamp integrity verification is not supported in .Net standard 2.0, therefore tests were disabled for Linux and Mac. \r\nAs .Net standard 2.1 starts to support Timestamp integrity verification, we need to implement timestamp integrity verification and enable the tests for Linux and Mac.\r\n\r\nThis is one of the breakdown tasks from NuGet/NuGet.Client#2706\r\n"},{"Id":"11295909490","Type":"IssuesEvent","CreatedAt":"2020-01-16T23:50:50","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8906","RelatedDescription":"Closed issue \"Restore:  prototype noop idea\" (#8906) at NuGet/Home","RelatedBody":""},{"Id":"11294746899","Type":"IssuesEvent","CreatedAt":"2020-01-16T20:47:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8371","RelatedDescription":"Closed issue \"[feature request] SemVer auto versioning possible?\" (#8371) at NuGet/Home","RelatedBody":"I think more and more people understanding versioning number in SemVer format to publish with nuget. And SemVer is mostly straightforward. It seem like we could possibly have analyzer and diff automatically with C# reflection by comparing public signature & deprecate attribute & file hash\r\n\r\n- If all public signature is the same but file hash changed, bump the patch\r\n- If there are any new public signature | deprecate attribute then bump the minor\r\n- If there are any missing public signature (include change of signature) then bump the major\r\n\r\nAnd so I wish that we would have a command to let nuget analyze the build number from SemVer rule compare with previous published version. Or if possible, I wish that nuget would bump the version in project config file comparing to previous git commit whenever the project built"},{"Id":"11294741799","Type":"IssuesEvent","CreatedAt":"2020-01-16T20:47:05","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8556","RelatedDescription":"Closed issue \"Provide option to upload packages for verification and be staged but unpublished.\" (#8556) at NuGet/Home","RelatedBody":"## Details\r\n\r\nWe would like to be able to upload packages to NuGet.org for signature validation / virus scanning / verification but such that they could be deleted if necessary before publishing and listing. Effectively we would like to stage the NuGet packages ready for release but know that we could take them down if any last minute showstopper issues were discovered.\r\n\r\nWe want to do this because we have a coordinated release of multiple products across different platforms and wherever possible we want these all to go live within the same time window. \r\n\r\nThe proposed workflow would be:\r\n1. Upload/push updated packages\r\n2. Signature validation, virus scanning, verification\r\n3. Stage (but can delete at this point)\r\n4. Publish (with option not to list)\r\n5. List (publicly visible)"},{"Id":"11294723988","Type":"IssuesEvent","CreatedAt":"2020-01-16T20:44:38","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9067","RelatedDescription":"Opened issue \"Add unit tests for RestoreTaskExe\" (#9067) at NuGet/Home","RelatedBody":"# Details about Problem\r\n\r\nAs a follow-up to https://github.com/NuGet/NuGet.Client/pull/3109 I need to add unit tests for the `RestoreTaskEx` class.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11293600718","Type":"IssuesEvent","CreatedAt":"2020-01-16T18:13:13","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8189","RelatedDescription":"Closed issue \"NuGet PackageManager UI handles icons from <icon/> and <iconUrl/>\" (#8189) at NuGet/Home","RelatedBody":"Handle icon from both sources:\r\n\r\n- From inside the package\r\n- From Icon URL\r\n\r\nThe PM UI should be able to show packages with both icon types, transparent from the user"},{"Id":"11293444429","Type":"IssuesEvent","CreatedAt":"2020-01-16T17:52:36","Actor":"LorenDorez","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9066","RelatedDescription":"Opened issue \"Missing Full path on linked content\" (#9066) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS SDK package builder\r\n\r\nNuGet version (x.x.x.xxx): 5.4\r\n\r\ndotnet.exe --version (if appropriate): 3.1.101\r\n\r\nVS version (if appropriate): 2019 16.4.3\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): windows 10\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create 2 projects\r\n\r\n2. Add a linked file (Must be bested in folder) reference from A to B\r\n\r\n3. Build B the generated nuget spec removed the folder path for the linked file and just uses the filename.\r\n\r\n...\r\n\r\n"},{"Id":"11293076463","Type":"IssuesEvent","CreatedAt":"2020-01-16T17:06:17","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9065","RelatedDescription":"Opened issue \"NuGet.Build.Tasks.Console should have its own unit test assembly\" (#9065) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIn https://github.com/NuGet/NuGet.Client/pull/3109 I placed unit tests for one assembly in another assembly's unit test assembly.  I need to create a new test assembly for `NuGet.Build.Tasks.Console`.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11292591647","Type":"IssuesEvent","CreatedAt":"2020-01-16T16:13:50","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9061","RelatedDescription":"Closed issue \"Static Graph restore should not pass empty SolutionPath\" (#9061) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThe new Static Graph restore passes an empty value for SolutionPath which ends up as a global property which overrides the value during evaluation which breaks things.  No empty properties should be set as global properties.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-17T05:30:47.2001095Z","RunDurationInMilliseconds":1960}