{"Data":{"GitHub":{"Issues":[{"Id":"479958585","IsPullRequest":true,"CreatedAt":"2019-08-13T04:53:15","Actor":"JeremyKuhne","Number":"1612","RawContent":null,"Title":"Fix tooltip crash and harden","State":"open","Body":"The tooltip class will cause Windows to AV when attempting to get the tooltip bubble size when there isn't an actively showing tooltip. (Really Windows should be checking before derefing their internal pointer, but this has been there forever.) Fixing this by making sure to check that one is active when sending the query message.\r\n\r\nThe existing TooInfo usage was not safe and could crash with bad timing with a GC. I've hardened usage of the TTTOOLINFO struct and made it blittable, which should make things both safe and more performant as we're not instantiating a class anymore.\r\n\r\nFixes #1602.\r\n\r\n## Proposed changes\r\n\r\n- Refactor TTOOLINFO to guard against AVs\r\n- Fix the explicit AV in #1602\r\n\r\n## Customer Impact\r\n\r\n- Won't easily AV\r\n- Better performance\r\n\r\n## Regression? \r\n\r\n- Yes - Introduced in 4.8\r\n\r\n## Risk\r\n\r\n- Reasonably low- it is much easier to reason about the code with this change\r\n\r\n## Test methodology\r\n\r\n- Manual testing with Tooltip\r\n- Debugging into Windows to validate behavior\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1612)","Url":"https://github.com/dotnet/winforms/pull/1612","RelatedDescription":"Open PR \"Fix tooltip crash and harden\" (#1612)"},{"Id":"479920947","IsPullRequest":true,"CreatedAt":"2019-08-13T01:58:55","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190812.05\r\n- **Date Produced**: 8/13/2019 1:42 AM\r\n- **Commit**: 16d0c88cff0642a49013048ea24980d65eeed626\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19412-05\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1611)","Url":"https://github.com/dotnet/winforms/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1611)"},{"Id":"477932068","IsPullRequest":true,"CreatedAt":"2019-08-12T21:51:24","Actor":"hughbe","Number":"1583","RawContent":null,"Title":"Remove pointstruct and friends","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove `POINTSTRUCT` preferring `Point` which marshals the same\r\n- Remove `_POINTL` preferring `Point` which marshals the same\r\n- Remove `tagPOINTF`, preferring `PointF` which marshals the same\r\n- Remove `tagSIZEL`, preferring `Size` which marshals the same\r\n- Remove `tagSIZE`, preferring `Size` which marshals the same\r\n- Remove `SIZE`, preferring `Size` which marshals the same\r\n\r\n## Customer Impact\r\n\r\n- Reduced allocations as we now use classes instead of structs\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Existing tests and #1530 \r\n\r\nExtracted from #1508\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1583)","Url":"https://github.com/dotnet/winforms/pull/1583","RelatedDescription":"Closed or merged PR \"Remove pointstruct and friends\" (#1583)"},{"Id":"479797217","IsPullRequest":true,"CreatedAt":"2019-08-12T21:50:23","Actor":"zsd4yr","Number":"1610","RawContent":null,"Title":"update SDK used to build winforms to latest release channel SDK","State":"closed","Body":"We like to do this now and again so that we are:\r\n1. building on latest bits aside from the RuntimeFrameworkVersion\r\n1. demonstrating an up-to-date .NET sdk version global.json (are good examples to others looking to build on our stack)\r\n1. find problems as a result of this earlier\r\n\r\nThis should be the last rev until we update to 3.1 RTM\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1610)","Url":"https://github.com/dotnet/winforms/pull/1610","RelatedDescription":"Closed or merged PR \"update SDK used to build winforms to latest release channel SDK\" (#1610)"},{"Id":"478153993","IsPullRequest":true,"CreatedAt":"2019-08-12T16:27:42","Actor":"dotnet-maestro[bot]","Number":"1586","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190811.11\r\n- **Date Produced**: 8/11/2019 11:48 PM\r\n- **Commit**: 91004b0eb6f484c56f50d0f428988268e3ef455d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19411-11\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview9.19409.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview9.19409.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1586)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1586)"},{"Id":"479609353","IsPullRequest":true,"CreatedAt":"2019-08-12T12:15:59","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190811.1\r\n- **Date Produced**: 8/11/2019 1:05 PM\r\n- **Commit**: a11024c8c22cc762011addafc30c653c938048f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19411.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19411.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19411.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19411.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1609)","Url":"https://github.com/dotnet/winforms/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1609)"},{"Id":"479441257","IsPullRequest":true,"CreatedAt":"2019-08-12T12:08:12","Actor":"JeremyKuhne","Number":"1608","RawContent":null,"Title":"Add static using for Interop","State":"closed","Body":"WinForms has a ton of interop- using `Interop.Gdi.` doesn't provide much value over `Gdi.` and just increases clutter. Switching all of the current files to add `using static Interop;` to improve readability.\r\n\r\nWe've also done this in the designer.\r\n\r\n## Proposed changes\r\n\r\n- Switch all files to use `using static Interop;`\r\n\r\n## Customer Impact\r\n\r\n- None, makes code easier to read/maintain.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Very low- just replace all and manual using insert.\r\n\r\n## Test methodology\r\n\r\n- Built, ran tests.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1608)","Url":"https://github.com/dotnet/winforms/pull/1608","RelatedDescription":"Closed or merged PR \"Add static using for Interop\" (#1608)"},{"Id":"479289770","IsPullRequest":true,"CreatedAt":"2019-08-12T08:06:29","Actor":"JeremyKuhne","Number":"1601","RawContent":null,"Title":"Wilcard include interop files for System.Windows.Forms","State":"closed","Body":"So far System.Windows.Forms is the superset of Interop usage. There was one existing wildcard that wasn't properly defined, including all of interop as one wildcard to make continued work here easier (less conflicts, easier to add files).\r\n\r\nIf we need to exclude individual files we can add those explicitly. If needed we can break this out into individual subdirectories as well.\r\n\r\nThe other projects include only a subset of the interop definitions, so keeping those explicit.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nVery low\r\n\r\n## Test methodology\r\n\r\n- Built, ran tests.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1601)","Url":"https://github.com/dotnet/winforms/pull/1601","RelatedDescription":"Closed or merged PR \"Wilcard include interop files for System.Windows.Forms\" (#1601)"},{"Id":"479283365","IsPullRequest":false,"CreatedAt":"2019-08-12T08:05:20","Actor":"Gigas002","Number":"1600","RawContent":null,"Title":"Scrollable MessageBox","State":"closed","Body":"The problem's pretty much obvoius: sometimes standard messageboxes are just too short for the contents:\r\n\r\n![image](https://user-images.githubusercontent.com/24297712/62801559-b13c1b80-baee-11e9-9891-7862c678944a.png)\r\n\r\nThere was already good and working solution of this problem. More info:\r\nhttps://www.codeproject.com/Articles/601900/FlexibleMessageBox-A-Flexible-Replacement-for-the\r\n\r\nThe mentioned FlexibleMessageBox class works well on .NET Core 3 WinForms application, but probably that behaviour of MessageBox should be default?","Url":"https://github.com/dotnet/winforms/issues/1600","RelatedDescription":"Closed issue \"Scrollable MessageBox\" (#1600)"},{"Id":"479398388","IsPullRequest":false,"CreatedAt":"2019-08-11T18:43:46","Actor":"Pilchie","Number":"1607","RawContent":null,"Title":"ListView Control on a WinForms project does not fire events","State":"open","Body":"_From @PeterPann23 on Sunday, August 11, 2019 5:19:35 PM_\r\n\r\n### Describe the bug\r\nCreated a new project in .net Core 3.0\r\nAdded a ListView to the form that I populate based on user actions (button click works just fine)\r\nThe events on the listview however do not get firred.\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Visual Studio 2019, Core 3.0 Release 3.0.100-preview7-012821\r\n2. Run this the File New  _Windows Forms App(.Net Core)_ Project \r\nMy project looks like this\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Data.SqlClient\" Version=\"4.7.0-preview7.19362.9\" />\r\n    <PackageReference Include=\"System.Windows.Forms.DataVisualization\" Version=\"1.0.0-prerelease.19218.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nThe form uses the \"normal\" template\r\n```C#\r\npartial class Form1\r\n{\r\n\t/// <summary>\r\n\t/// Required designer variable.\r\n\t/// </summary>\r\n\tprivate System.ComponentModel.IContainer components = null;\r\n\r\n\t/// <summary>\r\n\t/// Clean up any resources being used.\r\n\t/// </summary>\r\n\t/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>\r\n\tprotected override void Dispose(bool disposing)\r\n\t{\r\n\t\tif (disposing && (components != null))\r\n\t\t{\r\n\t\t\tcomponents.Dispose();\r\n\t\t}\r\n\t\tbase.Dispose(disposing);\r\n\t}\r\n\r\n\t#region Windows Form Designer generated code\r\n\r\n\t/// <summary>\r\n\t/// Required method for Designer support - do not modify\r\n\t/// the contents of this method with the code editor.\r\n\t/// </summary>\r\n\tprivate void InitializeComponent()\r\n\t{\r\n\t// controls before ...\r\n\tthis.ListViewControlItems = new System.Windows.Forms.ListView();\r\n\t// other controls after ...\r\n\t\r\n\t\r\n\t// \r\n\t// ListViewControlItems\r\n\t// \r\n\tthis.ListViewControlItems.Dock = System.Windows.Forms.DockStyle.Fill;\r\n\tthis.ListViewControlItems.FullRowSelect = true;\r\n\tthis.ListViewControlItems.HideSelection = false;\r\n\tthis.ListViewControlItems.Location = new System.Drawing.Point(0, 37);\r\n\tthis.ListViewControlItems.MultiSelect = false;\r\n\tthis.ListViewControlItems.Name = \"ListViewControlItems\";\r\n\tthis.ListViewControlItems.Size = new System.Drawing.Size(464, 413);\r\n\tthis.ListViewControlItems.TabIndex = 2;\r\n\tthis.ListViewControlItems.UseCompatibleStateImageBehavior = false;\r\n\tthis.ListViewControlItems.View = System.Windows.Forms.View.Details;\r\n\tthis.ListViewControlItems.SelectedIndexChanged += new System.EventHandler(this.OnSelectedTrainingFileChanged);\r\n\t\r\n\t\r\n\t}\r\n}\r\n```\r\n\r\nthe \"Code Behind\" part of the form is like this:\r\n\r\n```CSharp\r\npublic partial class Form1 : Form\r\n{\r\n\tpublic Form1()\r\n\t{\r\n\t\tInitializeComponent();\r\n\t\tListViewControlItems.Click += ListViewControlItems_Click;\r\n\t}\r\n\t\r\n\tprivate void ListViewControlItems_Click( object sender, EventArgs e)\r\n\t{\r\n\t\tthrow new NotImplementedException();\r\n\t}\r\n}\r\n```\r\n\r\n\r\n4. neither the **Click** event or the **SelectedIndexChanged** event ever get invoked\r\n\r\n### Expected behavior\r\nThe button click event's get invoked without any problem, I'd expect the Listview to invoke as well. I now add a button to trigger the SelectedIndex change event and works just fine, also knows if any items are selected\r\n```C#\r\nprivate void OnSelectedTrainingFileChanged(object sender, EventArgs e)\r\n{\r\n\tif (ListViewControlItems.SelectedItems.Count > 0)\r\n\t{\r\n\t\tConfigPropGrid.SelectedObject = ListViewControlItems.SelectedItems[0].Tag as NativeConfig;\r\n\t}\r\n\telse\r\n\t\tConfigPropGrid.SelectedObject = null;\r\n\r\n}\r\n```\r\n### Screenshots\r\n\r\n\r\n![Capture](https://user-images.githubusercontent.com/44400822/62837155-6c3df380-bc6c-11e9-97b1-58e1e48ff245.PNG)\r\n\r\n\r\n### Additional context\r\nBuild output:\r\n```\r\n● Started at 19:17:54\r\n1>------ Build started: Project: CATS.ML.Interfaces, Configuration: Debug Any CPU ------\r\n1>You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n1>CATS.ML.Interfaces -> D:\\Source\\Cats.ML\\CATS.ML.Interfaces\\bin\\Debug\\netstandard2.1\\CATS.ML.Interfaces.dll\r\n2>------ Build started: Project: Cats.Deepbook.IBApi, Configuration: Debug Any CPU ------\r\n3>------ Build started: Project: Cats.ML.Core, Configuration: Debug Any CPU ------\r\n4>------ Build started: Project: CATS.ML.Data, Configuration: Debug Any CPU ------\r\n4>You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n3>You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n2>Cats.Deepbook.IBApi -> D:\\Source\\Deepbook\\Cats.Deepbook.IBApi\\bin\\Debug\\netcoreapp3.0\\Cats.Deepbook.IBApi.dll\r\n3>ML\\Data\\Versatile\\VersatileMLDataSet.cs(103,64,103,89): warning CS0067: The event 'VersatileMLDataSet.OnColumnsWithNoAddedValue' is never used\r\n3>Cats.ML.Core -> D:\\Source\\Cats.ML\\cats.ml.core\\bin\\Debug\\netstandard2.1\\Cats.ML.Core.dll\r\n3>Done building project \"Cats.ML.Core.csproj\".\r\n4>CATS.ML.Data -> D:\\Source\\Cats.ML\\CATS.ML.Data\\bin\\Debug\\netstandard2.1\\CATS.ML.Data.dll\r\n5>------ Build started: Project: Cats.Deepbook.Shared, Configuration: Debug Any CPU ------\r\n5>DeeBookNativeBarBuffer.cs(42,81,42,96): warning CS0067: The event 'DeeBookNativeBarBuffer.OnCrazyMovement' is never used\r\n5>Cats.Deepbook.Shared -> D:\\Source\\Deepbook\\Cats.Deepbook.Shared\\bin\\Debug\\netcoreapp3.0\\Cats.Deepbook.Shared.dll\r\n5>Done building project \"Cats.Deepbook.Shared.csproj\".\r\n6>------ Build started: Project: CATS.Deepbook.NetworkTrader, Configuration: Debug Any CPU ------\r\n6>CATS.Deepbook.NetworkTrader -> D:\\Source\\Deepbook\\CATS.Deepbook.NetworkTrader\\bin\\Debug\\netcoreapp3.0\\CATS.Deepbook.NetworkTrader.dll\r\n========== Build: 6 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r\n● Finished at 19:17:56 (total time 2.34s)\r\n```\r\n\r\n`dotnet --info`\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012821\r\n Commit:    6348f1068a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#13035_","Url":"https://github.com/dotnet/winforms/issues/1607","RelatedDescription":"Open issue \"ListView Control on a WinForms project does not fire events\" (#1607)"},{"Id":"479390485","IsPullRequest":false,"CreatedAt":"2019-08-11T17:12:05","Actor":"riov","Number":"1606","RawContent":null,"Title":"ListView slow and max width","State":"open","Body":"ListView becomes slow when it contains many columns, even if only a few of them are displayed. Here is a sample code that illustrates the issue. When you try to scroll it, it takes a long time to repaint. Virtual mode does not help. I am not really sure why it takes so long to paint 120 cells.\r\n\r\n```vbnet\r\nPrivate ListView1 As New ListView With {.Size = New Size(300, 400)}\r\n\r\nPrivate Sub Form1_Load(sender As Object, e As EventArgs) Handles Me.Load\r\n    Const columns = 600\r\n    Controls.Add(ListView1)\r\n\r\n    With ListView1\r\n        .BeginUpdate()\r\n        .View = View.Details\r\n        .HeaderStyle = ColumnHeaderStyle.Nonclickable\r\n\r\n        For c = 1 To columns\r\n            .Columns.Add(c.ToString, 50, HorizontalAlignment.Center)\r\n        Next\r\n\r\n        For r = 1 To 20\r\n            Dim l As New ListViewItem(r & \"1\")\r\n            For c = 2 To columns\r\n                l.SubItems.Add(r & c)\r\n            Next\r\n            .Items.Add(l)\r\n        Next\r\n        .EndUpdate()\r\n    End With\r\nEnd Sub\r\n```\r\nAnother issue I found is that it looks like there is a limitation of how large the width of all columns can be, i. e. in my sample code you can change the column count to 700 and observe how the last columns will not be visible.  The last ones that will be visible will not allow you to change their width.","Url":"https://github.com/dotnet/winforms/issues/1606","RelatedDescription":"Open issue \"ListView slow and max width\" (#1606)"},{"Id":"479362501","IsPullRequest":true,"CreatedAt":"2019-08-11T12:51:25","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190810.2\r\n- **Date Produced**: 8/10/2019 12:43 PM\r\n- **Commit**: e2f5f0f5c20a1fef71845795b09066a5cd892a7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19410.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19410.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19410.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19410.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1605)","Url":"https://github.com/dotnet/winforms/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1605)"},{"Id":"479334169","IsPullRequest":true,"CreatedAt":"2019-08-11T05:22:52","Actor":"JeremyKuhne","Number":"1604","RawContent":null,"Title":"Convert the rest of interop for Cursor","State":"open","Body":"## Proposed changes\r\n\r\n- Make all of Cursor Interop clean.\r\n- Update other classes with related imports to use static Interop (which we're doing in the designer)\r\n- Clean style in DeviceContext and WindowsGraphics\r\n- Introduce internal IHandle to make GC.KeepAlive wraps easier\r\n\r\n## Customer Impact\r\n\r\n- Better perf for IPicture related code paths\r\n- More robust for said code paths\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Test methodology\r\n\r\n- Ensured areas had test coverage and ran tests\r\n\r\n\r\nNote that I wanted to get this up to demonstrate some patterns, notably:\r\n\r\n1. Using `IHandle` to start providing keepalive overloads\r\n2. Using static for `Interop` (as we're doing in the designer repo now)\r\n3. Union handling (see `PICTDESC`)\r\n4. Generic pattern for `GetObject`\r\n5. Ref disposable pattern on native structs (see `ICONINFO`)\r\n\r\nWhether or not we take it for 3.0 I wanted these examples visible.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1604)","Url":"https://github.com/dotnet/winforms/pull/1604","RelatedDescription":"Open PR \"Convert the rest of interop for Cursor\" (#1604)"},{"Id":"479306219","IsPullRequest":true,"CreatedAt":"2019-08-10T21:22:36","Actor":"JeremyKuhne","Number":"1603","RawContent":null,"Title":"Fix screen related tests","State":"closed","Body":"Recently added tests are not multimonitor friendly. Screens frequently have negative coordinates. The common case is with the primary screen to the right of the secondary screen. The primary screen origin is 0,0. Anything to the left or above will have negative coordinates (including the virtual screen).\r\n\r\n## Customer Impact\r\n\r\nNone- this is a test break.\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nNone, test only change.\r\n\r\n## Test methodology\r\n\r\n- Ran tests on multimonitor system\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1603)","Url":"https://github.com/dotnet/winforms/pull/1603","RelatedDescription":"Closed or merged PR \"Fix screen related tests\" (#1603)"},{"Id":"479291349","IsPullRequest":false,"CreatedAt":"2019-08-10T17:52:10","Actor":"kirsan31","Number":"1602","RawContent":null,"Title":"AccessViolationException with MenuStrip and VisualStyleState.NoneEnabled","State":"open","Body":"* .NET Core Version: .NET Core Version: 3.0.0-preview7-27912-14\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nWhen you disable visual stiles:\r\n```c#\r\n            Application.VisualStyleState = System.Windows.Forms.VisualStyles.VisualStyleState.NoneEnabled;\r\n//          Application.EnableVisualStyles();\r\n```\r\nThe winForms mdi app with MenuStrip ans submenus are crushed with AccessViolationException, after you open sub menu and live it (move cursor out of the menu - see gif below). Windows 7 pro x64.\r\n\r\n**Actual behavior:**\r\n\r\n<details><summary><b>Exception, Event logs, Gif of the error</b></summary>\r\n\r\n![nc](https://user-images.githubusercontent.com/17767561/62825179-43582880-bbb0-11e9-9f4a-52489d518be8.gif)\r\n\r\n`AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.`\r\n\r\n```\r\nApplication: WinFormsCoreTest.exe\r\nCoreCLR Version: 4.700.19.32702\r\n.NET Core Version: 3.0.0-preview7-27912-14\r\nDescription: The process was terminated due to an internal error in the .NET Runtime at IP 000007FEC76FA8D4 (000007FEC7540000) with exit code c0000005.\r\n```\r\n\r\n```\r\nFaulting application name: WinFormsCoreTest.exe, version: 1.0.0.0, time stamp: 0x5d29536d\r\nFaulting module name: coreclr.dll, version: 4.700.19.32702, time stamp: 0x5d155e43\r\nException code: 0xc0000005\r\nFault offset: 0x00000000001ba8d4\r\nFaulting process id: 0x248c\r\nFaulting application start time: 0x01d54f9f444a10b0\r\nFaulting application path: D:\\save\\projects\\WinFormsCoreTest\\bin\\Debug\\netcoreapp3.0\\WinFormsCoreTest.exe\r\nFaulting module path: C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0-preview7-27912-14\\coreclr.dll\r\nReport Id: b32877c1-bb92-11e9-8c38-40b0760b80f2\r\n```\r\n</details>\r\n\r\n**Expected behavior:** No AccessViolationException.\r\n\r\n**Minimal repro:** \r\n[WinFormsCoreTest.zip](https://github.com/dotnet/winforms/files/3489165/WinFormsCoreTest.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/1602","RelatedDescription":"Open issue \"AccessViolationException with MenuStrip and VisualStyleState.NoneEnabled\" (#1602)"},{"Id":"479260487","IsPullRequest":true,"CreatedAt":"2019-08-10T12:16:07","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190809.8\r\n- **Date Produced**: 8/10/2019 1:45 AM\r\n- **Commit**: f22982a641aa6f29585b6ab1de85912814a00bac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19409.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19409.8\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19409.8\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19409.8\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1599)","Url":"https://github.com/dotnet/winforms/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1599)"},{"Id":"479128777","IsPullRequest":true,"CreatedAt":"2019-08-09T19:13:01","Actor":"hughbe","Number":"1598","RawContent":null,"Title":" Cleanup some Kernel32 interop","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1598)","Url":"https://github.com/dotnet/winforms/pull/1598","RelatedDescription":"Open PR \" Cleanup some Kernel32 interop\" (#1598)"},{"Id":"479037631","IsPullRequest":false,"CreatedAt":"2019-08-09T15:12:51","Actor":"MatthewBeardmore","Number":"1597","RawContent":null,"Title":"MenuBar checkbox color is different between .NET Core 3 and .NET Framework","State":"open","Body":"* .NET Core Version: 3.0 Preview 7\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nMenuBar's MenuItem has a different color when it is checked (with no mouse hovering) between .NET Framework and .NET Core 3. The color for .NET Core 3 appears to be a bug, as I wouldn't have expected it to have the solid blue background, nor a different checkmark, as shown below.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n.NET Core 3:\r\n![NetCoreApp3 0-Issue](https://user-images.githubusercontent.com/808932/62789153-57a80280-ba96-11e9-9a1f-7ca244353854.PNG)\r\n\r\n**Expected behavior:**\r\n.NET Framework\r\n![Net471-NoIssue](https://user-images.githubusercontent.com/808932/62789167-61316a80-ba96-11e9-8a63-d187a3efe792.PNG)\r\n\r\n\r\n**Minimal repro:**\r\n[Repo.zip](https://github.com/dotnet/winforms/files/3486911/Repo.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/1597","RelatedDescription":"Open issue \"MenuBar checkbox color is different between .NET Core 3 and .NET Framework\" (#1597)"},{"Id":"478966574","IsPullRequest":true,"CreatedAt":"2019-08-09T12:40:42","Actor":"RussKie","Number":"1596","RawContent":null,"Title":"Enhance docs","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Dotting `i`s and crossing `t`s for the outstanding documentations\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- More API documented\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1596)","Url":"https://github.com/dotnet/winforms/pull/1596","RelatedDescription":"Open PR \"Enhance docs\" (#1596)"},{"Id":"478952934","IsPullRequest":true,"CreatedAt":"2019-08-09T12:26:17","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1595)","Url":"https://github.com/dotnet/winforms/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"},{"Id":"478935321","IsPullRequest":true,"CreatedAt":"2019-08-09T11:18:07","Actor":"vladimir-krestov","Number":"1594","RawContent":null,"Title":"WIP: Fixing menu control type and menu items navigation","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1582 \r\n**Original bug:**\r\n- [Bug 937670:](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/937670) [Screen Reader - SSMA - Create new project] Incorrect control type is defined for all menus like 'File and Edit and View and Tools...' on SSMA.\r\n\r\n\r\n## Proposed changes\r\nFix the accessibility navigation tree for MenuStrip, ContextMenuStrip, ToolStrip, StatusStrip, BindingNavigator controls.\r\nImplement ToolStrip behavior like as the Notepad:\r\n- Implement ElementProviderFromPoint method for ToolStrip to the Inspect tool can get access to item's AccessibleObject when the mouse is over it\r\n- Implement Accessible properties for ToolStripDropDown as menu\r\n- Remove not localized DropDown name\r\n- Change the fragment navigate to change accessibility tree\r\n\r\nItems will not have children. Instead, the dropdown pane is in the navigation tree as a separate item. This will get rid of this error: \"An element's BoundingRectangle must be contained within its parent element.\"​\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The fix will allow the client to receive an accessible object when hovering over it with the mouse.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None, it repeats the implementation of the Notepad ToolStrip\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62637790-e0168e00-b944-11e9-8b3c-c99d44a40472.png)\r\n\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/49272759/62637798-e442ab80-b944-11e9-97da-cb50dfe38b48.png)\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Manual testing with using the Inspect tool\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- .NET Core SDK (3.0.100-preview8-013392)\r\n- Microsoft Windows [Version 10.0.18362.239]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1594)","Url":"https://github.com/dotnet/winforms/pull/1594","RelatedDescription":"Open PR \"WIP: Fixing menu control type and menu items navigation\" (#1594)"},{"Id":"478736565","IsPullRequest":false,"CreatedAt":"2019-08-08T23:58:44","Actor":"merriemcgaw","Number":"1593","RawContent":null,"Title":"Update templates to set DPI Awareness to System Aware by default","State":"open","Body":".NET Core apps are more likely than not to run on more modern hardware with a higher pixel density. Given that, we should default all new apps to be System Aware. We'll update this in the templates using  `Application.SetHighDpiMode(HighDpiMode.SystemAware);` in program.cs file and the equivalent in VB.\r\n\r\n@OliaG to make porting of apps smoother and work well in the new designer we should also update porting guides to include calling that method in Main(). \r\n","Url":"https://github.com/dotnet/winforms/issues/1593","RelatedDescription":"Open issue \"Update templates to set DPI Awareness to System Aware by default\" (#1593)"},{"Id":"478451136","IsPullRequest":true,"CreatedAt":"2019-08-08T12:49:39","Actor":"vladimir-krestov","Number":"1592","RawContent":null,"Title":"Fixing DataGridViewCell AccessibleObject Value.IsReadOnly property","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1578 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Override the IsReadOnly property for DataGridViewCell AccessibleObject\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The Narrator will say \"readonly\" for readonly cells\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None, this is a minimal extension.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/62694277-b01ac980-b9dc-11e9-9e83-681da817ba64.png)\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62704190-75705b80-b9f3-11e9-838d-5f314a98bdb4.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/62694079-52867d00-b9dc-11e9-8f4a-b1a1cebc5acd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62703993-14488800-b9f3-11e9-9847-e52d613176d3.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit test (DataGridViewCellAccessibleObjectTests.cs) \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Manual testing with using the Inspect tool\r\n- Manual testing with using the Narrator\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- .NET Core SDK: 3.0.0-preview9-19407-06\r\n- Microsoft Windows [Version 10.0.18362.239]\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1592)","Url":"https://github.com/dotnet/winforms/pull/1592","RelatedDescription":"Open PR \"Fixing DataGridViewCell AccessibleObject Value.IsReadOnly property\" (#1592)"},{"Id":"478434163","IsPullRequest":true,"CreatedAt":"2019-08-08T12:32:31","Actor":"RussKie","Number":"1591","RawContent":null,"Title":"Fix xmldoc","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Purely cosmetic change that increases xml-doc spacing to 2 after `///`.  \r\nThe increased spacing makes it slightly easier to read the comments in the code.\r\nThe change is done in VS using regex `///\\s([^< ])` -> `///  $1`\r\n- Fix and add xml-doc\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1591)","Url":"https://github.com/dotnet/winforms/pull/1591","RelatedDescription":"Closed or merged PR \"Fix xmldoc\" (#1591)"},{"Id":"478429571","IsPullRequest":true,"CreatedAt":"2019-08-08T12:21:34","Actor":"dotnet-maestro[bot]","Number":"1590","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1590)","Url":"https://github.com/dotnet/winforms/pull/1590","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1590)"},{"Id":"478429439","IsPullRequest":true,"CreatedAt":"2019-08-08T12:16:17","Actor":"dotnet-maestro[bot]","Number":"1589","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1589)","Url":"https://github.com/dotnet/winforms/pull/1589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1589)"},{"Id":"478092946","IsPullRequest":true,"CreatedAt":"2019-08-08T10:41:22","Actor":"hughbe","Number":"1585","RawContent":null,"Title":"Remove point","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove `POINT` preferring `Point` which marshals the same\r\n\r\n## Customer Impact\r\n\r\n- Reduced allocations as we now use classes instead of structs\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology\r\n\r\n- Existing tests and #1530 \r\n\r\nExtracted from #1508\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1585)","Url":"https://github.com/dotnet/winforms/pull/1585","RelatedDescription":"Closed or merged PR \"Remove point\" (#1585)"},{"Id":"478307199","IsPullRequest":false,"CreatedAt":"2019-08-08T07:50:03","Actor":"Marie-Shi","Number":"1588","RawContent":null,"Title":"[Accessibility Insights] An element of the given ControlType must support the Text pattern for edit controls: TextBox/MaskedTextBox/ComboBox/NumericUpDown/DomainUpDown","State":"open","Body":"* .NET Core Version: .NET Core 3.0.100-preview8-013656 from release branch\r\n* Have you experienced this same bug with .NET Framework? Yes\r\n\r\n**Affected controls:**\r\nTextBox/MaskedTextBox/ComboBox/NumericUpDown/DomainUpDown\r\n\r\n**Problem description:**\r\n1.\tInstall the .NET Core 3.0 SDK from https://github.com/dotnet/core-sdk.\r\n2.\tOpen the attached ‘NumericUpDown_DomainUpDown’ .NET Core app in VS.\r\n[NumericUpDown_DomainUpDown.zip](https://github.com/dotnet/winforms/files/3480418/NumericUpDown_DomainUpDown.zip)\r\n3.\tBuild and run it.\r\n4.\tStart Accessibility Insights for Windows and test NumericUpDown and DomainUpDown controls in Form.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nAn element of the given ControlType doesn’t support the Text pattern. \r\nViolation: [Section 508 502.3.10](https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/final-rule/single-file-version#502-interoperability-assistive-technology) \r\nPlease see the below Screenshot:\r\nNumericUpDown:\r\n![NumericUpDown](https://user-images.githubusercontent.com/45864017/62684112-8d93ab00-b9f2-11e9-819b-a3519503fcd7.png)\r\n\r\nDomainUpDown:\r\n![DomainUpDown](https://user-images.githubusercontent.com/45864017/62684118-91273200-b9f2-11e9-94f5-3ed3f13f8644.png)\r\n\r\n**Expected behavior:**\r\nNumericUpDown and DomainUpDown eidt should support the Text pattern.","Url":"https://github.com/dotnet/winforms/issues/1588","RelatedDescription":"Open issue \"[Accessibility Insights] An element of the given ControlType must support the Text pattern for edit controls: TextBox/MaskedTextBox/ComboBox/NumericUpDown/DomainUpDown\" (#1588)"},{"Id":"478259607","IsPullRequest":false,"CreatedAt":"2019-08-08T05:33:40","Actor":"Jessie-Zhang01","Number":"1587","RawContent":null,"Title":"The DataGridViewComboBoxColumn cannot be displayed as combobox mode when the DisplayStyle property is set to Nothing.","State":"open","Body":"* .NET Core Version: (.Net Core SDK 5.0.100.13662 build from master branch)\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Create a Winforms .Net Core application.\r\n2. Add DataGridView control, then add a DataGridViewComboBoxColumn column.\r\n3. Set the DisplayStyle property of DataGridViewComboBoxColumn as Nothing.\r\n4. Build and run it.\r\n[WindowsFormsApp6.zip](https://github.com/dotnet/winforms/files/3479985/WindowsFormsApp6.zip)\r\n\r\n**Actual:** \r\nThe DataGridViewComboBoxColumn cannot be displayed as combobox mode when the DisplayStyle property is set to Nothing.\r\n\r\n**Expected:** \r\nFrom Merrie comment：Add the Obsolete attribute for the type so that we can warn developers not to use it due to accessibility issues.","Url":"https://github.com/dotnet/winforms/issues/1587","RelatedDescription":"Open issue \"The DataGridViewComboBoxColumn cannot be displayed as combobox mode when the DisplayStyle property is set to Nothing.\" (#1587)"},{"Id":"478060340","IsPullRequest":true,"CreatedAt":"2019-08-07T18:03:57","Actor":"dotnet-maestro[bot]","Number":"1584","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190807.06\r\n- **Date Produced**: 8/7/2019 5:47 PM\r\n- **Commit**: f02340ac7635ce12a06bc519152d7b3c30dd54d9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19407-06\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19379.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19379.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1584)","Url":"https://github.com/dotnet/winforms/pull/1584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1584)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-13T05:30:55.0809704Z","RunDurationInMilliseconds":1253}