{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating MacOS Apps to 64-bit Before the Apple Transition","PublishedOn":"2019-06-26T19:27:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has been moving towards 64-bit only applications on macOS for a number of releases. Last June, Apple started requiring Apps on the macOS App Store to be 64-bit only and macOS 10.13.4 and above...","Href":"https://devblogs.microsoft.com/xamarin/apple-transition-migrate-macos-apps-to-64-bit/","RawContent":null},{"Title":"Faster Xamarin.Android Builds & Smaller Dex Files","PublishedOn":"2019-06-24T18:02:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"One of our current focus areas in Xamarin.Android is build performance. The &#8220;inner dev loop&#8221; directly impacts developer productivity&#8211;the time it takes to make a small code change and...","Href":"https://devblogs.microsoft.com/xamarin/dex-counting-xamarin-android-improved/","RawContent":null},{"Title":"Get Started with Free Xamarin Training on Microsoft Learn","PublishedOn":"2019-06-21T19:10:22+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Learn how to build cross-platform mobile applications on Android and iOS with the new Xamarin.Forms content on Microsoft Learn. The new and completely free platform where you can earn points and...","Href":"https://devblogs.microsoft.com/xamarin/microsoft-learn-free-xamarin-training/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio for Mac","PublishedOn":"2019-06-19T18:21:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Visual Studio 2019 for Mac version 8.2 is officially available as a preview. Now featuring significant improvements to the XAML editing experience for Xamarin developers. The Xamarin.Forms XAML...","Href":"https://devblogs.microsoft.com/xamarin/xaml-intellisense-vs4m-xamarin-forms/","RawContent":null},{"Title":"Automatic Android SDK Management","PublishedOn":"2019-06-17T20:24:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"As a mobile developer building apps for Android, there are many tools used under the hood to build, deploy, and debug your Android applications. We know this can be an intimidating process. So to...","Href":"https://devblogs.microsoft.com/xamarin/automatic-android-sdk-management/","RawContent":null},{"Title":"Xamarin Podcast: Xamarin.Forms 4 And So Much More!","PublishedOn":"2019-06-14T16:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xamarin-forms-4/","RawContent":null},{"Title":"Grial UI Kit: Building Beautiful Xamarin.Forms Apps, Faster","PublishedOn":"2019-06-12T17:07:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Leonardo Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UI Kit and Gorilla Player. UXDivers specializes in designing and coding...","Href":"https://devblogs.microsoft.com/xamarin/grial-ui-kit-xamarin-forms/","RawContent":null},{"Title":"Join the Microsoft Team at Xamarin Developer Summit","PublishedOn":"2019-06-10T16:54:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"On July 11-12th, the community-run Xamarin Developer Summit is set to launch in Houston, Texas. The two-day conference is packed full of amazing Xamarin content, covering a wide range of mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit/","RawContent":null},{"Title":"Use Maps to Display and Navigate Users with Xamarin.Essentials","PublishedOn":"2019-06-07T16:26:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"A common scenario for mobile apps is to help their users get to a specific location. This may be a restaurant, office, or the trailhead for the most amazing hike in the pacific northwest. We can...","Href":"https://devblogs.microsoft.com/xamarin/maps-navagation-xamarin-essentials/","RawContent":null},{"Title":"CheckBox with Xamarin.Forms 4.1.0 Pre-Release","PublishedOn":"2019-06-05T19:34:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Just a few weeks ago we shipped Xamarin.Forms 4.0, which introduced the new Shell navigation for quickly bootstrapping your applications. As well as image source unification to make it convenient to...","Href":"https://devblogs.microsoft.com/xamarin/checkbox-xamarin-forms-4-1-0-pre-release/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9911252331","Type":"IssuesEvent","CreatedAt":"2019-06-28T05:05:19","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3072","RelatedDescription":"Closed issue \"Impossible to compile to release mode with AOT,LLVM  and different linking options\" (#3072) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nI have a customer project under development, all was fine in debug mode, but I'm trying to make a release version, which is faster with smaller apk size, so I want tu use linking option and AOT/LLVM options, but it is impossible for me to make my release version\r\n\r\n1) Default debug mode(AOT  = false, LLVM = false, Linking = 'None'): all is working perfectly  \r\n \r\n2)  Release mode : AOT  = true, LLVM = true, Linking = 'Sdk and User Assemblies'\r\n=>App is crashing at startup on the emulator and on the device\r\n\r\n3) Release mode : AOT  = true, LLVM = true, Linking = 'None'\r\nNo error at compilation, but error when I want to deploy to the emulator\r\n![image](https://user-images.githubusercontent.com/41323690/57231726-62787480-701b-11e9-8898-44f2596b6779.png)\r\n\r\n4) Release mode : AOT  = true, LLVM = true, Linking = 'Sdk Assemblies Only'\r\nError at compilation\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tThe \"LinkAssemblies\" task failed unexpectedly.\r\nJava.Interop.Tools.Diagnostics.XamarinAndroidException: error XA2006: Could not resolve reference to 'System.Buffers.StandardFormat' (defined in assembly 'Microsoft.Extensions.DependencyModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60') with scope 'System.Memory, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. When the scope is different from the defining assembly, it usually means that the type is forwarded. ---> Mono.Cecil.ResolutionException: Failed to resolve System.Buffers.StandardFormat\r\n   at Mono.Linker.Steps.MarkStep.HandleUnresolvedType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.MarkType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkField(FieldReference reference)\r\n   at Mono.Linker.Steps.MarkStep.InitializeFields(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeType(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeAssembly(AssemblyDefinition assembly)\r\n   at Mono.Linker.Steps.MarkStep.Initialize()\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.Process(LinkContext context)\r\n   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n   at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   --- End of inner exception stack trace ---\r\n   at Java.Interop.Tools.Diagnostics.Diagnostic.Error(Int32 code, Exception innerException, String message, Object[] args)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tCustomer.Connect_Android\t\t\t\r\n```\r\n\r\n\r\n\r\n### Expected Behavior\r\nWant to make my release project functionning\r\n\r\n### Actual Behavior\r\nRelease mode not functionning with Android options (AOT, LLVM and linking options)\r\n\r\n### Version Information\r\nVS 2019 16.0.3 OR VS 2019 preview 2, Xamarin Forms Project (latest stable version)\r\n\r\n"},{"Id":"9910643942","Type":"IssuesEvent","CreatedAt":"2019-06-28T01:59:21","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3306","RelatedDescription":"Closed issue \"\"Java.Lang.ClassNotFoundException: Didn't find class \"android.widget.View\" on path: DexPathList\" error in app only when built with Use LLVM Optimizing Compiler\" (#3306) at xamarin/xamarin-android","RelatedBody":"### Steps followed to test\r\n\r\n 1. Clone https://github.com/JTOne123/XamFormsMvxTemplate/ at commit 994b493147fbabf95c87c8d572ab647cd969a606.\r\n 2. Remove a few directories to focus on the Android project: *MvxForms\\\\MvxForms.UITests*, *MvxForms\\\\MvxForms.UWP*, *MvxForms\\\\MvxForms.iOS*, *VSIXProject*, *VSIXProject.vsix*.\r\n 3. Edit *MvxForms\\\\MvxForms.Droid\\\\MvxForms.Droid.csproj* to focus on the armeabi-v7a ABI:\r\n \r\n    ```diff\r\n    diff --git a/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj b/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj\r\n    index 0bf36eb..b449552 100644\r\n    --- a/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj\r\n    +++ b/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj\r\n    @@ -58 +58 @@\r\n    -    <AndroidSupportedAbis>armeabi-v7a;x86;x86_64;arm64-v8a</AndroidSupportedAbis>\r\n    +    <AndroidSupportedAbis>armeabi-v7a</AndroidSupportedAbis>\r\n    @@ -63 +62,0 @@\r\n    -    <AndroidCreatePackagePerAbi>true</AndroidCreatePackagePerAbi> \r\n    ```\r\n 4. Build and run the project on device.\r\n 5. Tap the **TABS MODE** button.\r\n\r\n### Expected behavior\r\n\r\nWhen **Use LLVM Optimizing Compiler** (`$(EnableLLVM)`) is false, the application runs successfully and tapping the **TABS MODE** button shows a modal dialog.\r\n\r\n### Actual behavior\r\n\r\nOn Android 6.0 Moto G3:\r\n\r\n```\r\n[ERROR] FATAL UNHANDLED EXCEPTION: Java.Lang.ClassNotFoundException: Didn't find class \"android.widget.View\" on path: DexPathList[[zip file \"/data/app/MvxForms.Droid-1/base.apk\"],nativeLibraryDirectories=[/data/app/MvxForms.Droid-1/lib/arm, /data/app/MvxForms.Droid-1/base.apk!/lib/armeabi-v7a, /vendor/lib, /system/lib]]\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa1346ae8 + 0x00093> in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Android.Views.LayoutInflater.CreateView (System.String name, System.String prefix, Android.Util.IAttributeSet attrs) <0xa17c174c + 0x00147> in <95688d932b5c40848cc8de00aaaf6bae>:0 \r\n  at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_object_method_a(intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00073] in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa134699c + 0x0012b> in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Android.Views.LayoutInflater.OnCreateView (Android.Views.View parent, System.String name, Android.Util.IAttributeSet attrs) <0xa17c1f9c + 0x0015f> in <95688d932b5c40848cc8de00aaaf6bae>:0 \r\n  at MvvmCross.Platforms.Android.Binding.Views.MvxLayoutInflater.Inflate (System.Int32 resource, Android.Views.ViewGroup root, System.Boolean attachToRoot) <0xa0d3767c + 0x00273> in <5379a95ac98a4680b7bb47f5b716a158>:0 \r\n  at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_object_method_a(intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00073] in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa134699c + 0x0012b> in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Android.Views.LayoutInflater.Inflate (System.Int32 resource, Android.Views.ViewGroup root, System.Boolean attachToRoot) <0xa17c1d54 + 0x000f3> in <95688d932b5c40848cc8de00aaaf6bae>:0 \r\n  --- End of managed Java.Lang.ClassNotFoundException stack trace ---\r\n```\r\n\r\nOn Android 9.0 Google Pixel 3:\r\n\r\n```\r\nF libc    : Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x24 in tid 30391 (MvxForms.Droid), pid 30391 (MvxForms.Droid)\r\nI crash_dump32: obtaining output fd from tombstoned, type: kDebuggerdTombstone\r\nI /system/bin/tombstoned: received crash request for pid 30391\r\nI crash_dump32: performing dump of process 30391 (target tid = 30391)\r\nF DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nF DEBUG   : Build fingerprint: 'google/blueline/blueline:9/PQ3A.190505.002/5450365:user/release-keys'\r\nF DEBUG   : Revision: 'MP1.0'\r\nF DEBUG   : ABI: 'arm'\r\nF DEBUG   : pid: 30391, tid: 30391, name: MvxForms.Droid  >>> MvxForms.Droid <<<\r\nF DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x24\r\nF DEBUG   : Cause: null pointer dereference\r\nF DEBUG   :     r0  ebf37645  r1  00000000  r2  00000000  r3  00000001\r\nF DEBUG   :     r4  ffe61bfc  r5  00000000  r6  00000000  r7  00000000\r\nF DEBUG   :     r8  ffe61bfc  r9  e2a914a0  r10 00000000  r11 ffe61bfc\r\nF DEBUG   :     ip  ea8679e0  sp  ffe61b88  lr  ea4971b1  pc  eb457df4\r\nF DEBUG   : \r\nF DEBUG   : backtrace:\r\nF DEBUG   :     #00 pc 0000ddf4  /system/lib/libdexfile.so (art::DexFile::PrettyMethod(unsigned int, bool) const+24)\r\nF DEBUG   :     #01 pc 000a11ad  /system/lib/libart.so (art::ArtMethod::PrettyMethod(bool)+72)\r\nF DEBUG   :     #02 pc 000a1c29  /system/lib/libart.so (art::ArtMethod::GetOatQuickMethodHeader(unsigned int)+340)\r\nF DEBUG   :     #03 pc 003612c3  /system/lib/libart.so (_ZN3art12StackVisitor9WalkStackILNS0_16CountTransitionsE0EEEvb+1290)\r\nF DEBUG   :     #04 pc 00371f2f  /system/lib/libart.so (art::Thread::GetCurrentMethod(unsigned int*, bool, bool) const+70)\r\nF DEBUG   :     #05 pc 00262abb  /system/lib/libart.so (art::JNI::FindClass(_JNIEnv*, char const*)+794)\r\nF DEBUG   :     #06 pc 00009835  /data/app/MvxForms.Droid-HttDkid0YYYlQ4P5sCvJkQ==/lib/arm/libmonodroid.so (java_interop_jnienv_find_class+18)\r\nF DEBUG   :     #07 pc 00005f22  <anonymous:eafb7000>\r\nE /system/bin/tombstoned: Tombstone written to: /data/tombstones/tombstone_02\r\nW ActivityManager:   Force finishing activity MvxForms.Droid/md5fbb0af4a8e24a2294e9d20fd883f6b66.FormsApplicationActivity\r\n```\r\n\r\n### Version information\r\n\r\nXamarin.Android SDK   9.3.0.22 (d16-1/8e7764fdf)"},{"Id":"9910621855","Type":"IssuesEvent","CreatedAt":"2019-06-28T01:52:35","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3306","RelatedDescription":"Opened issue \"\"Java.Lang.ClassNotFoundException: Didn't find class \"android.widget.View\" on path: DexPathList\" error in app only when built with Use LLVM Optimizing Compiler\" (#3306) at xamarin/xamarin-android","RelatedBody":"### Steps followed to test\r\n\r\n 1. Clone https://github.com/JTOne123/XamFormsMvxTemplate/ at commit 994b493147fbabf95c87c8d572ab647cd969a606.\r\n 2. Remove a few directories to focus on the Android project: *MvxForms\\\\MvxForms.UITests*, *MvxForms\\\\MvxForms.UWP*, *MvxForms\\\\MvxForms.iOS*, *VSIXProject*, *VSIXProject.vsix*.\r\n 3. Edit *MvxForms\\\\MvxForms.Droid\\\\MvxForms.Droid.csproj* to focus on the armeabi-v7a ABI:\r\n \r\n    ```diff\r\n    diff --git a/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj b/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj\r\n    index 0bf36eb..b449552 100644\r\n    --- a/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj\r\n    +++ b/MvxForms/MvxForms.Droid/MvxForms.Droid.csproj\r\n    @@ -58 +58 @@\r\n    -    <AndroidSupportedAbis>armeabi-v7a;x86;x86_64;arm64-v8a</AndroidSupportedAbis>\r\n    +    <AndroidSupportedAbis>armeabi-v7a</AndroidSupportedAbis>\r\n    @@ -63 +62,0 @@\r\n    -    <AndroidCreatePackagePerAbi>true</AndroidCreatePackagePerAbi> \r\n    ```\r\n 4. Build and run the project on device.\r\n 5. Tap the **TABS MODE** button.\r\n\r\n### Expected behavior\r\n\r\nWhen **Use LLVM Optimizing Compiler** (`$(EnableLLVM)`) is false, the application runs successfully and tapping the **TABS MODE** button shows a modal dialog.\r\n\r\n### Actual behavior\r\n\r\nOn Android 6.0 Moto G3:\r\n\r\n```\r\n[ERROR] FATAL UNHANDLED EXCEPTION: Java.Lang.ClassNotFoundException: Didn't find class \"android.widget.View\" on path: DexPathList[[zip file \"/data/app/MvxForms.Droid-1/base.apk\"],nativeLibraryDirectories=[/data/app/MvxForms.Droid-1/lib/arm, /data/app/MvxForms.Droid-1/base.apk!/lib/armeabi-v7a, /vendor/lib, /system/lib]]\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00089] in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa1346ae8 + 0x00093> in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Android.Views.LayoutInflater.CreateView (System.String name, System.String prefix, Android.Util.IAttributeSet attrs) <0xa17c174c + 0x00147> in <95688d932b5c40848cc8de00aaaf6bae>:0 \r\n  at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_object_method_a(intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00073] in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa134699c + 0x0012b> in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Android.Views.LayoutInflater.OnCreateView (Android.Views.View parent, System.String name, Android.Util.IAttributeSet attrs) <0xa17c1f9c + 0x0015f> in <95688d932b5c40848cc8de00aaaf6bae>:0 \r\n  at MvvmCross.Platforms.Android.Binding.Views.MvxLayoutInflater.Inflate (System.Int32 resource, Android.Views.ViewGroup root, System.Boolean attachToRoot) <0xa0d3767c + 0x00273> in <5379a95ac98a4680b7bb47f5b716a158>:0 \r\n  at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_nonvirtual_object_method_a(intptr,intptr&,intptr,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00073] in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa134699c + 0x0012b> in <e84261c99e144ef997b8f2c97722d7fb>:0 \r\n  at Android.Views.LayoutInflater.Inflate (System.Int32 resource, Android.Views.ViewGroup root, System.Boolean attachToRoot) <0xa17c1d54 + 0x000f3> in <95688d932b5c40848cc8de00aaaf6bae>:0 \r\n  --- End of managed Java.Lang.ClassNotFoundException stack trace ---\r\n```\r\n\r\nOn Android 9.0 Google Pixel 3:\r\n\r\n```\r\nF libc    : Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x24 in tid 30391 (MvxForms.Droid), pid 30391 (MvxForms.Droid)\r\nI crash_dump32: obtaining output fd from tombstoned, type: kDebuggerdTombstone\r\nI /system/bin/tombstoned: received crash request for pid 30391\r\nI crash_dump32: performing dump of process 30391 (target tid = 30391)\r\nF DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nF DEBUG   : Build fingerprint: 'google/blueline/blueline:9/PQ3A.190505.002/5450365:user/release-keys'\r\nF DEBUG   : Revision: 'MP1.0'\r\nF DEBUG   : ABI: 'arm'\r\nF DEBUG   : pid: 30391, tid: 30391, name: MvxForms.Droid  >>> MvxForms.Droid <<<\r\nF DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x24\r\nF DEBUG   : Cause: null pointer dereference\r\nF DEBUG   :     r0  ebf37645  r1  00000000  r2  00000000  r3  00000001\r\nF DEBUG   :     r4  ffe61bfc  r5  00000000  r6  00000000  r7  00000000\r\nF DEBUG   :     r8  ffe61bfc  r9  e2a914a0  r10 00000000  r11 ffe61bfc\r\nF DEBUG   :     ip  ea8679e0  sp  ffe61b88  lr  ea4971b1  pc  eb457df4\r\nF DEBUG   : \r\nF DEBUG   : backtrace:\r\nF DEBUG   :     #00 pc 0000ddf4  /system/lib/libdexfile.so (art::DexFile::PrettyMethod(unsigned int, bool) const+24)\r\nF DEBUG   :     #01 pc 000a11ad  /system/lib/libart.so (art::ArtMethod::PrettyMethod(bool)+72)\r\nF DEBUG   :     #02 pc 000a1c29  /system/lib/libart.so (art::ArtMethod::GetOatQuickMethodHeader(unsigned int)+340)\r\nF DEBUG   :     #03 pc 003612c3  /system/lib/libart.so (_ZN3art12StackVisitor9WalkStackILNS0_16CountTransitionsE0EEEvb+1290)\r\nF DEBUG   :     #04 pc 00371f2f  /system/lib/libart.so (art::Thread::GetCurrentMethod(unsigned int*, bool, bool) const+70)\r\nF DEBUG   :     #05 pc 00262abb  /system/lib/libart.so (art::JNI::FindClass(_JNIEnv*, char const*)+794)\r\nF DEBUG   :     #06 pc 00009835  /data/app/MvxForms.Droid-HttDkid0YYYlQ4P5sCvJkQ==/lib/arm/libmonodroid.so (java_interop_jnienv_find_class+18)\r\nF DEBUG   :     #07 pc 00005f22  <anonymous:eafb7000>\r\nE /system/bin/tombstoned: Tombstone written to: /data/tombstones/tombstone_02\r\nW ActivityManager:   Force finishing activity MvxForms.Droid/md5fbb0af4a8e24a2294e9d20fd883f6b66.FormsApplicationActivity\r\n```\r\n\r\n### Version information\r\n\r\nXamarin.Android SDK   9.3.0.22 (d16-1/8e7764fdf)"},{"Id":"9909187089","Type":"PullRequestEvent","CreatedAt":"2019-06-27T20:17:04","Actor":"gugavaro","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3305","RelatedDescription":"Opened pull request \"Android API-29 enumification and stabilization\" (#3305) at xamarin/xamarin-android","RelatedBody":"API-29 is now Final.\r\n\r\nRe-creating pull request since the previous one had issue with VSTS"},{"Id":"9909164499","Type":"PullRequestEvent","CreatedAt":"2019-06-27T20:13:27","Actor":"gugavaro","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3284","RelatedDescription":"Closed pull request \"Android API-29 enumification and stabilization\" (#3284) at xamarin/xamarin-android","RelatedBody":"API-29 is now Final."},{"Id":"9909083023","Type":"PullRequestEvent","CreatedAt":"2019-06-27T20:00:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3302","RelatedDescription":"Merged pull request \"Update LibZipSharp submodule to point to Xamarin\" (#3302) at xamarin/xamarin-android","RelatedBody":"`LibZipSharp` repository was moved from its previous location to\r\n`xamarin/LibZipSharp`, update the submodule to point to the new location."},{"Id":"9908984292","Type":"PullRequestEvent","CreatedAt":"2019-06-27T19:44:05","Actor":"jpobst","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3304","RelatedDescription":"Opened pull request \"[Mono.Android] Add MetaKeyStates.None. [#3180]\" (#3304) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/xamarin/xamarin-android/issues/3180."},{"Id":"9907941400","Type":"PullRequestEvent","CreatedAt":"2019-06-27T17:00:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3300","RelatedDescription":"Closed pull request \"[build/test] Include installer signing and other fixes from master\" (#3300) at xamarin/xamarin-android","RelatedBody":"This should hopefully include everything we need to get both of\r\nour CI systems back to \"green\", and allow us to ship Azure Pipeline\r\nbased builds for d16-3.\r\n\r\nContext: https://jenkins.mono-project.com/job/xamarin-android-pr-pipeline-release/1481/\r\n\r\n  * Bump to xamarin/monodroid@cccf420\r\n    Changes: http://github.com/xamarin/monodroid/compare/52c7914...cccf420\r\n\r\n  * Adds conditional .pkg and .vsix signing, blob storage uploading\r\n    and GitHub artifact status reporting.\r\n\r\n  * Includes some make and azure-pipelines.yaml based cleanup,\r\n    which was done to resolve the EmbeddedDSOTest failures on\r\n    Jenkins PR builds.\r\n\r\n  * Fixes CheckTimeZoneInfoIsCorrect test failures.\r\n\r\n  * Fixes Aapt2CompileFixesUpErrors test failure.\r\n  "},{"Id":"9907929744","Type":"IssuesEvent","CreatedAt":"2019-06-27T16:58:38","Actor":"babman92","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3303","RelatedDescription":"Opened issue \"[Bug] Cannot get Cookies when use AndroidClientHandler with HttpClient\" (#3303) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n* I want to use native Http call, so I use AndroidClientHandler\r\n![image](https://user-images.githubusercontent.com/5634873/60258262-fe797a80-98fe-11e9-8cc2-f6082e3d9cfc.png)\r\n* When I get Cookie with CookieContainer, it return default.\r\n![image](https://user-images.githubusercontent.com/5634873/60258210-e0137f00-98fe-11e9-8669-378f3e3a9f4d.png)\r\n* But when I use HttpClientHandler instead, app can get Cookies\r\n### Steps to Reproduce\r\n\r\n1.  Create Xamarin.Forms project\r\n2.  Create `DataClient.cs` in Shared Project\r\n3.  Create `AndroidClientHandler` and enable using Cookies\r\n4.  Create HttpClient and use AndroidClientHandler above\r\n5. Call API to set cookie\r\n6. Get cookie\r\n\r\n### Expected Behavior\r\nGet Cookies normally\r\n### Actual Behavior\r\nCannot get Cookies\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: Xamarin.Forms v4.0.0.425677\r\n- IDE: Visual Studio 2019 on Windows 10\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n- Android: Android 9.0\r\n- Affected Devices: Emulator (Android 8.0)\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link\r\n\r\n"},{"Id":"9907751774","Type":"PullRequestEvent","CreatedAt":"2019-06-27T16:31:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3270","RelatedDescription":"Merged pull request \"Update NDK to r20\" (#3270) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/android-ndk/ndk/wiki/Changelog-r20\r\nContext: https://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html\r\n\r\nGoogle released NDK r20 recently with the following changes:\r\n\r\n  - Updated Clang to r346389c.\r\n  - Updated libc++ to r350972.\r\n  - Add Android Q Beta 1 APIs:\r\n    - MIDI (<amidi/AMidi.h>).\r\n    - Binder.\r\n    - Extensions to several APIs from previous releases\r\n\r\nAlso, this release brings [LLD][0], the new (fast!) linker from the LLVM project\r\nwhich will become the default and only linker in the NDK in the future, so soon\r\nwe will need to start testing our software with it.\r\n\r\n[0]: https://lld.llvm.org/"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9910475858","Type":"IssuesEvent","CreatedAt":"2019-06-28T01:06:05","Actor":"ivoryguard","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6697","RelatedDescription":"Opened issue \"[Bug] Changing MainPage between AppShell and NagivationPage breaks app screen\" (#6697) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nChanging MainPage between AppShell and NagivationPage breaks app screen like this;\r\nhttps://www.dropbox.com/s/skbgti26v6m2x3u/Screenshot_20190627-181115.png?dl=0\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1) Create a new Xamarin.Forms 4.0 solution with AppShell Template at Visual Studio 2019.\r\n\r\n2) Add a Content Page into Views folder (LoginPage.xaml)\r\n\r\n3) Change MainPage at App.xaml.cs like this;\r\n~~~\r\n    public App()\r\n    {\r\n        InitializeComponent();\r\n\r\n        DependencyService.Register<MockDataStore>();\r\n        //MainPage = new AppShell();\r\n        MainPage = new NavigationPage(new Views.LoginPage());\r\n    }\r\n~~~\r\n\r\n4) Change MainPage in LoginPage like this (I added a Button at LoginPage.xaml);\r\n~~~\r\n    private void LoginButton_Clicked(object sender, EventArgs e)\r\n    {\r\n        Application.Current.MainPage = new AppShell();\r\n    }\r\n~~~\r\n\r\n5) Add a MenuItem at AppShell and Add MenuItem Click event handler like this;\r\n~~~\r\nprivate void LogoutMenuItem_Clicked(object sender, EventArgs e) \r\n{\r\n   Application.Current.MainPage = new NavigationPage(new Views.LoginPage());\r\n}\r\n~~~\r\n\r\n6) Build and run the app\r\n\r\n7) “Login and Logout” action makes app screen broken like this;\r\nhttps://www.dropbox.com/s/skbgti26v6m2x3u/Screenshot_20190627-181115.png?dl=0\r\n\r\n\r\n\r\n### Expected Behavior\r\nChanged MainPage is displayed correctly.\r\n\r\n### Actual Behavior\r\nAfter MainPage is changed, the app screen breaks like this;\r\nhttps://www.dropbox.com/s/skbgti26v6m2x3u/Screenshot_20190627-181115.png?dl=0\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 4.0.0.540366\r\n- IDE: Visual Studio 2019\r\n\r\n### Screenshots\r\n![Screenshot_20190627-181115](https://user-images.githubusercontent.com/6513590/60310054-e996f880-998b-11e9-80d4-310bfb70fe9d.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[XFShellTest1.zip](https://github.com/xamarin/Xamarin.Forms/files/3337133/XFShellTest1.zip)"},{"Id":"9910430228","Type":"IssuesEvent","CreatedAt":"2019-06-28T00:51:15","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6531","RelatedDescription":"Closed issue \"ShellSectionRenderer.UnhookEvents NullReferenceException\" (#6531) at xamarin/Xamarin.Forms","RelatedBody":"I have no idea why is this happening\r\n![Screenshot_2](https://user-images.githubusercontent.com/43844004/59496493-f820e280-8eaa-11e9-988c-4b1bff5ff84b.png)\r\n![Screenshot_4](https://user-images.githubusercontent.com/43844004/59496689-69609580-8eab-11e9-82eb-43f1ea6a575a.png)\r\n\r\n"},{"Id":"9910344012","Type":"PullRequestEvent","CreatedAt":"2019-06-28T00:23:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6398","RelatedDescription":"Merged pull request \"Adds FontImage Markup Extension for FontImageSource\" (#6398) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdds Markup Extension for `FontImageSource` to simplify usage from verbose XAML\r\n\r\n\r\n```xaml\r\n<ImageButton>\r\n    <ImageButton.Source>\r\n        <FontImageSource\r\n            FontFamily=\"{StaticResource MyFontFamily}\"\r\n            Glyph=\"{StaticResource SmileFace}\"\r\n            Color=\"{StaticResource PrimaryColor}\" />\r\n    </Image.Source>\r\n</ImageButton>\r\n```\r\n\r\n```xaml\r\n<ImageButton Source=\"{FontImage FontFamily={StaticResource MyFontFamily}, Glyph={StaticResource SmileFace}, Color={StaticResource White}\" />\r\n```\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #6376\r\n\r\n### API Changes ###\r\nAdded MarkupExtension: `FontImageExtension` to `Xamarin.Forms.Xaml`\r\n\r\nAdded:\r\n\r\n```c#\r\nstring FontFamily { get; set; }\r\nstring Glyph { get; set; }\r\nColor Color { get; set; }\r\n```\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- Any platform that implements `FontImageSource`\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nThis markup extension has been tested in the Sandbox project and a confidential project I am working on. \r\n\r\nI added positive and negative unit tests in the `Xamarin.Forms.Xaml.UnitTests` project\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9910343994","Type":"IssuesEvent","CreatedAt":"2019-06-28T00:23:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6376","RelatedDescription":"Closed issue \"[Enhancement] Add Markup Extension for FontImageSource\" (#6376) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\n`Xamarin.Forms.FontImageSource` was completed for v3.6.0 in issue #3189. The original issues discusses creating a markup extension to easily use this new feature in any XAML property that is of type `ImageSource`.\r\n\r\n**It appears to have never been implemented**\r\n\r\n## API Changes\r\nSimplify the verbose usage of `FontImagesource`\r\n\r\n```xaml\r\n<ImageButton>\r\n    <ImageButton.Source>\r\n        <FontImageSource\r\n            FontFamily=\"{StaticResource MyFontFamily}\"\r\n            Glyph=\"{StaticResource SmileFace}\"\r\n            Color=\"{StaticResource PrimaryColor}\" />\r\n    </Image.Source>\r\n</ImageButton>\r\n```\r\n\r\n```xaml\r\n<Image Source=\"{FontImage FontFamily={StaticResource MyFontFamily}, Glyph={StaticResource SmileFace}, Color={StaticResource White}\" />\r\n```\r\n\r\n# Intended Use Case\r\nFor a trivial `Image` this isn't that useful but the power of this markup extension is when another Element has a property of type `ImageSource`. Consider the following real-world example in the new Xamarin.Forms Shell Spec\r\n\r\n```xaml\r\n<TabBar>\r\n    <Tab Title=\"Hello\">\r\n        <Tab.Icon>\r\n            <FontImageSource \r\n                FontFamily=\"{StaticResource MyFontFamily}\"\r\n                Glyph=\"{StaticResource SmileFace}\"\r\n                Color=\"White\" />\r\n        </Tab.Icon>\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:HelloPage}\" />\r\n    </Tab>\r\n    <Tab Title=\"World\">\r\n        <Tab.Icon>\r\n            <FontImageSource \r\n                FontFamily=\"{StaticResource MyFontFamily}\"\r\n                Glyph=\"{StaticResource FrownFace}\"\r\n                Color=\"White\" />\r\n        </Tab.Icon>\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:BoxesPage}\" />\r\n    </Tab>\r\n</TabBar>\r\n```\r\n\r\nAfter we implement the markup extension the verbose XAML can be simplified removing 6 lines of code with each usage.\r\n\r\n```xaml\r\n<TabBar>\r\n    <Tab Title=\"Hello\" Icon=\"{FontImage FontFamily={StaticResource MyFontFamily}, Glyph={StaticResource SmileFace}, Color={StaticResource White}\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:HelloPage}\" />\r\n    </Tab>\r\n    <Tab Title=\"World\" Icon=\"{FontImage FontFamily={StaticResource MyFontFamily}, Glyph={StaticResource FrownFace}, Color={StaticResource White}\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate views:BoxesPage}\" />\r\n    </Tab>\r\n</TabBar>\r\n```"},{"Id":"9910331872","Type":"PullRequestEvent","CreatedAt":"2019-06-28T00:19:48","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6677","RelatedDescription":"Merged pull request \"Validate style target at runtime\" (#6677) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nChecks if Style can be set on an element based on the type compatibility between Style TargetType and element's type. In case of type incompatibility, it throws an exception with type names:\r\n\r\n```\r\nStyle TargetType Xamarin.Forms.Button is not compatible with element target type Xamarin.Forms.Label\r\n```\r\n\r\nIncludes unit tests.\r\n\r\n**This doesn't cover XAMLC.**\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #6268\r\n- fixes #6535\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9910331862","Type":"IssuesEvent","CreatedAt":"2019-06-28T00:19:48","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6535","RelatedDescription":"Closed issue \"Crash XF when Font Style Applied to StackLayout/Grid[Bug] \" (#6535) at xamarin/Xamarin.Forms","RelatedBody":"I **mistakenly** applied a Style to a StackLayout which has font information. XF 3.x and 4.x crash in the XF Xamarin.Forms.FontElement.FontSizeDefaultValueCreator.cs line since the bindable (StackLayout) is null since it's not a IFontElement\r\n\r\n\t\tstatic object FontSizeDefaultValueCreator(BindableObject bindable)\r\n\t\t{\r\n\t\t\treturn ((IFontElement)bindable).FontSizeDefaultValueCreator();\r\n\t\t}\r\n \r\n### Steps to Reproduce\r\n\r\nCreate a Style in your App.XAML targeting a **Label**\r\n```\r\n\t\t\t<Style\r\n\t\t\t\tx:Key=\"LabelNoteStyle\" TargetType=\"Label\">\r\n\t\t\t\t       <Setter Property=\"FontSize\" Value=\"13\"></Setter>\r\n\t\t\t\t       <Setter Property=\"TextColor\" Value=\"{StaticResource BaseLightTextColor}\"></Setter>\r\n\t\t\t</Style>\r\n```\r\nApply this to a StackLayout\r\n`       <StackLayout Grid.Row=\"0\" Orientation=\"Horizontal\"  Style=\"{StaticResource LabelNoteStyle}\">`\r\n\r\n### Expected Behavior\r\nFont info Is ignored\r\n### Actual Behavior\r\nCrash in Anadroid and iOS in XF 3.6 and 4.x. It was hard to find as the error is just a null exception at the Main App level. I had to debug XF to find the actual bug.\r\n\r\n \r\n \r\n"},{"Id":"9910233021","Type":"IssuesEvent","CreatedAt":"2019-06-27T23:51:02","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6668","RelatedDescription":"Closed issue \"[Bug] __XamlGeneratedCode__.@__Type0 from multiple assemblies causes conflicts with imported types\" (#6668) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen using\r\n```XAML\r\n<?xaml-comp compile=\"true\" ?>\r\n```\r\n\r\nit will generate the following class\r\n```\r\nnamespace @__XamlGeneratedCode__\r\n{\r\n     public partial class @__Type0 : global::Xamarin.Forms.ResourceDictionary\r\n```\r\n\r\nBut the name isn't unique in anyway so if you have a second assembly that generates the same thing then the two types will conflict and cause a warning\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0436\tThe type '__Type0' in 'D:\\Development\\Xamarin.Forms\\work\\Xamarin.Forms.Xaml.UnitTests\\obj\\Debug\\net47\\AppResources\\CompiledColors.xaml.g.cs' conflicts with the imported type '__Type0' in 'Xamarin.Forms.Controls, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. Using the type defined in 'D:\\Development\\Xamarin.Forms\\work\\Xamarin.Forms.Xaml.UnitTests\\obj\\Debug\\net47\\AppResources\\CompiledColors.xaml.g.cs'.\tXamarin.Forms.Xaml.UnitTests\tD:\\Development\\Xamarin.Forms\\work\\Xamarin.Forms.Xaml.UnitTests\\obj\\Debug\\net47\\AppResources\\CompiledColors.xaml.g.cs\t11\tActive\r\n```\r\n### Steps to Reproduce\r\n\r\nThe exception/warning seems to only happen on windows. I haven't seen it on VSMAC\r\n\r\n1.  get the latest master \r\n2. compile *Xamarin.Forms.Xaml.UnitTests*\r\n3.  How you will see the error\r\n\r\nYou might have to remove the suppression of warning *CS0436* if this has already been merged https://github.com/xamarin/Xamarin.Forms/pull/6332/commits/fe2b218bc010f4aa2f7c6dabd288f3be23f6b2b5\r\n\r\n### Expected Behavior\r\nThe XAML files annotated with *<?xaml-comp compile=\"true\" ?>* from different assemblies shouldn't collide\r\n\r\n### Actual Behavior\r\n\r\nThey conflict and the main project just picks one to use\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.2\r\n- Last known good version: not sure\r\n"},{"Id":"9910233002","Type":"IssuesEvent","CreatedAt":"2019-06-27T23:51:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6176","RelatedDescription":"Closed issue \"XAML compilation fails with generic types and event bindings to a page base class\" (#6176) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThis issue appears to be related to issue #1497 (now closed).\r\n\r\nI am seeing the following runtime exception when a specific combination of conditions exists:\r\n\r\n![image](https://user-images.githubusercontent.com/10047882/57582857-b3341580-74d2-11e9-9f3c-f7f8391972e0.png)\r\n\r\nFailure occurs when the following combination of conditions exists:\r\n\r\n- XamlCompilation is enabled\r\n- The page has a generic type parameter\r\n- The page includes an event binding to a handler that is exposed in the page's base class\r\n\r\nThe attached sample solution includes the implementation necessary to reproduce this issue.\r\n\r\nIf any one (or more) of the following modifications is applied, the problem disappears:\r\n\r\n- XamlCompilation is disabled\r\n- The page is modified to avoid using generic type parameters\r\n- The event handler is moved from the page's base class into the derived class\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample project\r\n2. Wait until the app attempts to create a new instance of MainPage\r\n\r\n[XamlCompilationBug.zip](https://github.com/xamarin/Xamarin.Forms/files/3170120/XamlCompilationBug.zip)\r\n\r\n### Expected Behavior\r\n\r\nThe app should create and render its MainPage.\r\n\r\n### Actual Behavior\r\n\r\nThe app crashes with a `BadImageFormatException`.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.6.0.3\r\n44457 and Xamarin.Forms 4.0.0.394984-pre10\r\n- Last known good version:\r\n- IDE: Visual Studio 2019 version 16.0.3\r\n- Platform Target Frameworks:\r\n  - Android: 9.0 \r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages: none\r\n- Affected Devices: apparently all devices"},{"Id":"9910232984","Type":"IssuesEvent","CreatedAt":"2019-06-27T23:51:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6635","RelatedDescription":"Closed issue \"[Bug] Template applied several times\" (#6635) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI have a `MyViewA` derived from `TemplatedView` and `MyViewB` derived from `MyViewA`.\r\nThe `ControlTemplate` of `MyViewB` is set to a `MyLabel` derived from `Label`. The c-tor of `MyLabel` is called two times! I am using a Label derived class just so I can see the number of times the c-tor is called, any other view would work.\r\n\r\nWhile trying to debug the root cause of the issue, I noticed that the \r\n`TemplateUtilities:OnControlTemplateChanged(BindableObject bindable, object oldValue, object newValue)` is called 3 times for `bindable` parameter of type `MyViewB`:\r\n\r\n**oldValue**: null, **newValue**: ControlTemplate instance (this is when `MyLabel` is created 1st time)\r\n**oldValue**: ControlTemplate instance, **newValue**: null\r\n**oldValue**: null, **newValue**: ControlTemplate instance (this is when `MyLabel` is created 2nd time)\r\n\r\nIt looks to me like the ControlTemplate is removed and set back.\r\n\r\nAlso, if `MyViewB` derives from `TemplatedView` instead of deriving from `MyViewA` it works correctly! `MyLabel` is only entered once! So apparently the issue is related with the hierarchy and implicit style.\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\n    class MyViewA : TemplatedView\r\n    {\r\n    }\r\n\r\n    class MyViewB : MyViewA\r\n    {\r\n    }\r\n\r\n    class MyLabel : Label\r\n    {\r\n        static int _iCount;\r\n\r\n        public MyLabel()\r\n        {\r\n            ++_iCount;\r\n            Text = $\"Created {_iCount} times\";\r\n        }\r\n    }\r\n```\r\n\r\n```\r\n   <Application.Resources>\r\n        <ResourceDictionary>\r\n            <Style TargetType=\"app:MyViewA\">\r\n                <Style.Setters>\r\n                    <Setter Property=\"ControlTemplate\">\r\n                        <ControlTemplate>\r\n                            <StackLayout />\r\n                        </ControlTemplate>\r\n                    </Setter>\r\n                </Style.Setters>\r\n            </Style>\r\n\r\n            <Style TargetType=\"app:MyViewB\">\r\n                <Style.Setters>\r\n                    <Setter Property=\"ControlTemplate\">\r\n                        <ControlTemplate>\r\n                            <app:MyLabel />\r\n                        </ControlTemplate>\r\n                    </Setter>\r\n                </Style.Setters>\r\n            </Style>\r\n        </ResourceDictionary>\r\n    </Application.Resources>\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\nThe c-tor of `MyLabel` should be called once.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: I tried with XF code compiled from master\r\n- Last known good version: I don't know\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 9.0 <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[TemplateIssueApp.zip](https://github.com/xamarin/Xamarin.Forms/files/3318525/TemplateIssueApp.zip)\r\n"},{"Id":"9910193131","Type":"IssuesEvent","CreatedAt":"2019-06-27T23:39:41","Actor":"GuardianCherubimJohn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6696","RelatedDescription":"Opened issue \"[Bug] [OSX] Latest VS for Mac needs net standard\" (#6696) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAfter updating to latest VS for Mac (8.1.3 build 19) I get the following when building a MacOS project that uses a custom renderer, which uses the export attribute. It still works fine on IOS projects, just not on MacOS projects. It's a show stopper because I can't use custom renderers right now on OSX projects.  \r\n\r\nError CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012)\r\n\r\nI tried adding NETStandard.library as a NuGet package manually, and also adding the following to the .csproj: \r\n\r\n<ItemGroup Condition=\" $(TargetFramework.StartsWith('Xamarin.Mac')) \">\r\n   <Reference Include=\"netstandard\" />\r\n</ItemGroup>\r\n\r\nHowever, neither worked.\r\n\r\n### Steps to Reproduce\r\n1. Load up a previously working MacOS project, or try to add a new one with a custom renderer that uses the export attribute.\r\n\r\n### Expected Behavior\r\nCompiles\r\n\r\n### Actual Behavior\r\nDoesn't compile"},{"Id":"9910185580","Type":"PullRequestEvent","CreatedAt":"2019-06-27T23:37:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6634","RelatedDescription":"Merged pull request \"[iOS] Make ShouldChangeText virtual\" (#6634) at xamarin/Xamarin.Forms","RelatedBody":"I have a need to intercept Editor keys on iOS and selectively ignore some like the Return key. The current implementation of `ShouldChangeText` is not open for runtime polymorphism. This change fixes that."},{"Id":"9910176731","Type":"PullRequestEvent","CreatedAt":"2019-06-27T23:34:53","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6686","RelatedDescription":"Merged pull request \"[iOS] Provide a base CarouselViewRenderer\" (#6686) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAvoid crashing iOS if using a CarouselView. \r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #6553 \r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nShould not crash, but shows nothing\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\nVisit the CarouselView gallery page\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9911303572","Type":"PullRequestEvent","CreatedAt":"2019-06-28T05:21:04","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6455","RelatedDescription":"Merged pull request \"[d16-3] Bump mono to pick up TZ/DST fixes.\" (#6455) at xamarin/xamarin-macios","RelatedBody":"Commits are:\r\n\r\n* https://github.com/mono/mono/commit/e6f5369c2d24aa2de511a52c8a58956c3283c4e4 [2019-02] Fix time zone transition out of DST (#15444)\r\n\r\nComplete diff is https://github.com/mono/mono/compare/346da980446da491277cbf3a8fbbe1989d614fb3...e6f5369c2d24aa2de511a52c8a58956c3283c4e4"},{"Id":"9910620958","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:52:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6450","RelatedDescription":"Merged pull request \"[videosubscriberaccount] Update for Xcode 11 beta 1\" (#6450) at xamarin/xamarin-macios","RelatedBody":"No change in beta 2"},{"Id":"9910251640","Type":"PullRequestEvent","CreatedAt":"2019-06-27T23:56:33","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6456","RelatedDescription":"Opened pull request \"[Master] Bump mono to pick up TZ/DST fixes.\" (#6456) at xamarin/xamarin-macios","RelatedBody":"Commits are:\r\n\r\n* https://github.com/mono/mono/commit/e6f5369c2d24aa2de511a52c8a58956c3283c4e4 [2019-02] Fix time zone transition out of DST (#15444)\r\n\r\nComplete diff is https://github.com/mono/mono/compare/346da980446da491277cbf3a8fbbe1989d614fb3...e6f5369c2d24aa2de511a52c8a58956c3283c4e4"},{"Id":"9910241411","Type":"PullRequestEvent","CreatedAt":"2019-06-27T23:53:29","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6455","RelatedDescription":"Opened pull request \"[d16-3] Bump mono to pick up TZ/DST fixes.\" (#6455) at xamarin/xamarin-macios","RelatedBody":"Commits are:\r\n\r\n* https://github.com/mono/mono/commit/e6f5369c2d24aa2de511a52c8a58956c3283c4e4 [2019-02] Fix time zone transition out of DST (#15444)\r\n\r\nComplete diff is https://github.com/mono/mono/compare/346da980446da491277cbf3a8fbbe1989d614fb3...e6f5369c2d24aa2de511a52c8a58956c3283c4e4"},{"Id":"9910224934","Type":"PullRequestEvent","CreatedAt":"2019-06-27T23:48:38","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6454","RelatedDescription":"Opened pull request \"[d16-2] Bump mono to pick tz/DST fixes.\" (#6454) at xamarin/xamarin-macios","RelatedBody":"Commits are:\r\n\r\n* https://github.com/mono/mono/commit/e8836b65d0f77262aceda7e0b1bc9e3839da53fa [ci] Use a shell script to reset HEAD for submodules\r\n* https://github.com/mono/mono/commit/948fffd4ce311d5209a64a2a42b8bfc90f681b63 [2019-02] [debugger] Debugger doesn't break on unhandled exceptions (#6453 )\r\n* https://github.com/mono/mono/commit/346da980446da491277cbf3a8fbbe1989d614fb3 [ci] One more workaround for Git 2.22.0\r\n* https://github.com/mono/mono/commit/e6f5369c2d24aa2de511a52c8a58956c3283c4e4 [2019-02] Fix time zone transition out of DST (#15444)\r\n\r\nComplete diff: https://github.com/mono/mono/compare/537654c1c79564668e4cab9735be613028328a70...e6f5369c2d24aa2de511a52c8a58956c3283c4e4"},{"Id":"9909546604","Type":"PullRequestEvent","CreatedAt":"2019-06-27T21:15:04","Actor":"joconte","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6453","RelatedDescription":"Opened pull request \"[appkit] add signatures to NSGridView.Create and deprecate the actual one \" (#6453) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/6232\r\n\r\nI'm not sure about this one but as you guys said PR are always welcomed so I give it a try 😄 "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This week’s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with atta… https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":22,"FavoriteCount":7,"RawContent":null},{"Id":"1144002014592061441","CreatedAt":"2019-06-26T21:58:29+00:00","UserScreenname":"xamarinhq","Text":"Reminder: Though new Xamarin .Mac applications target 64-bit by default, existing Xamarin .Mac applications that ta… https://t.co/3k5pQmlyq9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":13,"RawContent":null},{"Id":"1143968928076640257","CreatedAt":"2019-06-26T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/YssrTsTPHN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":22,"FavoriteCount":4,"RawContent":null},{"Id":"1143283413757190148","CreatedAt":"2019-06-24T22:23:01+00:00","UserScreenname":"xamarinhq","Text":"We've reevaluated our Xamarin .Android codebase and made changes that sped up builds and made smaller Dex Files. Se… https://t.co/H3JE59pryL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":136,"FavoriteCount":63,"RawContent":null},{"Id":"1143177825882726403","CreatedAt":"2019-06-24T15:23:27+00:00","UserScreenname":"xamarinhq","Text":"Get better at building cross-platform mobile apps with the new Xamarin.Forms. Microsoft Learn is all new and a comp… https://t.co/Kb8hT5LkIZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":41,"RawContent":null},{"Id":"1142066359947407362","CreatedAt":"2019-06-21T13:46:53+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/zcg70tbgE9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"1141695710716469249","CreatedAt":"2019-06-20T13:14:03+00:00","UserScreenname":"xamarinhq","Text":"Thanks to your feedback, #VS4Mac 8.2 has some really great improvements to the XAML editing experience; including i… https://t.co/vv0DVw9957","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":9,"RawContent":null},{"Id":"1141064668477345794","CreatedAt":"2019-06-18T19:26:31+00:00","UserScreenname":"xamarinhq","Text":"On this episode of the #XamarinShow, @JamesMontemagno and #MSMVP @DanJSiegel show us a super-cool feature of Prism… https://t.co/GLEhnDlQjp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":16,"RawContent":null},{"Id":"1140735760875872256","CreatedAt":"2019-06-17T21:39:33+00:00","UserScreenname":"xamarinhq","Text":"We want to make sure you’re using the latest tooling. The new and improved Automatic Android SDK Management tool is… https://t.co/H0CSaxzj9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1140660631273652224","CreatedAt":"2019-06-17T16:41:01+00:00","UserScreenname":"xamarinhq","Text":"On the latest Xamarin.Essential API of the week show, we take a look at the File System Helpers API which contains… https://t.co/GOGKCwXu6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":12,"RawContent":null},{"Id":"1139589442732285953","CreatedAt":"2019-06-14T17:44:30+00:00","UserScreenname":"xamarinhq","Text":"Keeping up w/the latest in #dotNET, C#, &amp; #Xamarin is easier than ever. \nThis week’s #XamarinPodcast includes:\n- hi… https://t.co/FDDO27QHDh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1138875870553300995","CreatedAt":"2019-06-12T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"We make it simple for .NET developers to build beautiful cross-platform apps, fast.\nTake a look at how Grial UI Kit… https://t.co/vceU8u475R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":108,"FavoriteCount":48,"RawContent":null},{"Id":"1138511096380309504","CreatedAt":"2019-06-11T18:19:32+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @chewamanda, App Center Program Manager, shows us the latest features in App Center… https://t.co/VHxAknaumJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":17,"RawContent":null},{"Id":"1138151096067792898","CreatedAt":"2019-06-10T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"Join us at Xamarin Developer Summit - July 11-12. With 35+ sessions, there is something for everyone:\n- Mobile DevO… https://t.co/Ez5mDpM1Az","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":84,"FavoriteCount":35,"RawContent":null},{"Id":"1137049335273840640","CreatedAt":"2019-06-07T17:31:01+00:00","UserScreenname":"xamarinhq","Text":"Our cross-platform API library enables any mobile app that uses the Maps API to launch a map w/ a specific location… https://t.co/BWS4qeqtyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":34,"RawContent":null},{"Id":"1136679096954449921","CreatedAt":"2019-06-06T16:59:49+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1136666060189573120","CreatedAt":"2019-06-06T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Compass API; enabling you to monitor the de… https://t.co/6Iq1tNqo0B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":13,"RawContent":null},{"Id":"1136362715805552641","CreatedAt":"2019-06-05T20:02:38+00:00","UserScreenname":"xamarinhq","Text":"Now available... the pre-release version of Xamarin.Forms 4.1. And we're happy to say that CheckBox &amp; improved text… https://t.co/BGmdIAVxAO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":155,"FavoriteCount":68,"RawContent":null}]}},"RunOn":"2019-06-28T05:30:59.7450547Z","RunDurationInMilliseconds":3535}