{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7714717373","Type":"PullRequestEvent","CreatedAt":"2018-05-23T03:47:44","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2808","RelatedDescription":"Opened pull request \"[Tizen] Support LineHeight on Label,Span\" (#2808) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n[Tizen] Support LineHeight on Label,Span\r\n![78c49f66-5e6a-11e8-9843-abc3d90878a9](https://user-images.githubusercontent.com/1029155/40402565-5d2610c4-5e87-11e8-9c01-f22b94093395.png)\r\n\r\n\r\n### Bugs Fixed ###\r\n https://github.com/xamarin/Xamarin.Forms/issues/1734\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Behavioral Changes ###\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7714701176","Type":"PullRequestEvent","CreatedAt":"2018-05-23T03:41:28","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2807","RelatedDescription":"Opened pull request \"[Tizen] Add PlaceHolder implementation on Editor\" (#2807) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n [Tizen] Add PlaceHolder implementation on Editor\r\n \r\n![71f4ee88-59c5-11e8-9d91-b94e1b5e82c1](https://user-images.githubusercontent.com/1029155/40402405-6797d278-5e86-11e8-83b1-6110ed4f2b49.gif)\r\n\r\n### Bugs Fixed ###\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/1907\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Behavioral Changes ###\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7714682176","Type":"PullRequestEvent","CreatedAt":"2018-05-23T03:34:12","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2806","RelatedDescription":"Opened pull request \"[Tizen] Add CornerRadius implementation on BoxView\" (#2806) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdd CornerRadius implementation on BoxView for tizen\r\n\r\n![fd5da276-59b1-11e8-99c8-acc82defbc88](https://user-images.githubusercontent.com/1029155/40402142-fd8c1fac-5e84-11e8-8960-d6bd6fbe91f1.gif)\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/1709\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Behavioral Changes ###\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7714087087","Type":"PullRequestEvent","CreatedAt":"2018-05-22T23:54:22","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2791","RelatedDescription":"Merged pull request \"[Core] Remove Guid.NewGuid() calls from performance tracking\" (#2791) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUnless there is a `PerformanceProvider`, we should not waste time creating a reference for the tracker.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### API Changes ###\r\n\r\nAdded parameter to internal `Performance.Start` method\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7713721111","Type":"IssuesEvent","CreatedAt":"2018-05-22T22:05:26","Actor":"activa","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2805","RelatedDescription":"Opened issue \"[iOS] ViewCell not rendered properly when binding to own property\" (#2805) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen creating a custom ViewCell with a bindable property, and one of the child controls binds to that property of the custom ViewCell, the control is not properly rendered on iOS (size of the control is not updated). It works as expected on Android and UWP.\r\n\r\nThis is a regression in 3.0, because it worked fine on all platforms in previous versions of Xamarin.Forms\r\n\r\n### Steps to Reproduce\r\n\r\nCreate a custom ViewCell, with a bindable property for example:\r\n\r\n```\r\npublic partial class MyCell\r\n{\r\n    public static readonly BindableProperty TextProperty = BindableProperty.Create(nameof(Text), typeof(string), typeof(MyCell), string.Empty);\r\n\r\n    public string Text\r\n    {\r\n        get => (string) GetValue(TextProperty);\r\n        set => SetValue(TextProperty, value);\r\n    }\r\n\r\n\tpublic MyCell ()\r\n\t{\r\n\t\tInitializeComponent ();\r\n\t}\r\n}\r\n```\r\nXAML:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ViewCell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             x:Class=\"BugCellView.MyCell\"\r\n             x:Name=\"Self\"\r\n          >\r\n      <StackLayout Padding=\"5\">\r\n          <Label Text=\"{Binding Text, Source={x:Reference Self}}\" />\r\n      </StackLayout>\r\n</ViewCell>\r\n\r\n```\r\nThe label defined in the ViewCell references the bindable property \"Text\" of MyCell\r\n\r\nWhen this custom viewcell is used in a listview on iOS, the label is updated correctly, but the size of the label is not changed. This is the result on iOS:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/650710/40392457-5372fbba-5de1-11e8-90c3-52ae6c2dd017.png)\r\n\r\nWhen scrolling the listview a little, the cells that were scrolled off screen and back in view  are rendered properly:\r\n\r\n![simulator screen shot - iphone 8 - 2018-05-22 at 16 43 12](https://user-images.githubusercontent.com/650710/40392490-6b058216-5de1-11e8-81ce-2199a0f1436b.png)\r\n\r\nThis worked fine in Xamarin Forms 2.5 and earlier. It also works fine with Xamarin Forms 3.0 on Android and UWP\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.482510\r\n- Last known good version: 2.5\r\n- IDE: VS 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.3\r\n  - Android: 8.1 (SDK 27) \r\n  - UWP:  1703 \r\n\r\n### Reproduction Link\r\n\r\nMinimal test project, 100% reproduceable:\r\n\r\n[BugCellView.zip](https://github.com/xamarin/Xamarin.Forms/files/2028762/BugCellView.zip)\r\n\r\n"},{"Id":"7713613874","Type":"PullRequestEvent","CreatedAt":"2018-05-22T21:39:48","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2804","RelatedDescription":"Opened pull request \"delay setting of source to help verify ui test block\" (#2804) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis test is occasionally not being navigated to on iOS 10 so I delayed the setting of the web view source and added a label to help visually.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7713986881","Type":"IssuesEvent","CreatedAt":"2018-05-22T23:21:02","Actor":"ivmirx","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4114","RelatedDescription":"Opened issue \"Null UISearchBar when creating a new UISearchController without arguments\" (#4114) at xamarin/xamarin-macios","RelatedBody":"Hi! Just encountered an [old bug](https://bugzilla.xamarin.com/show_bug.cgi?id=37953) that still seems to be present: creating a `UISearchController` without arguments leads to a missing `UISearchBar` inside it.\r\n\r\n### Steps to Reproduce\r\n\r\n`var searchController = new UISearchController();`\r\n\r\n### Actual Behavior\r\n\r\n`searchController.SearchBar` is `null`\r\n\r\nCreating the controller with `new UISearchController((UIViewController)null)` fixes the problem.\r\n\r\n### Environment\r\n\r\n- iOS 11.3\r\n- VS4Mac 7.5.1\r\n- Mono 5.10.1.47\r\n\r\n### Example Project (If Possible)\r\n\r\n[SearchControllerBug.zip](https://github.com/xamarin/xamarin-macios/files/2028896/SearchControllerBug.zip)\r\n\r\nThank you!"},{"Id":"7713562918","Type":"IssuesEvent","CreatedAt":"2018-05-22T21:28:33","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4113","RelatedDescription":"Opened issue \"ThreadPoolDispatcher SIGSEGV in background\" (#4113) at xamarin/xamarin-macios","RelatedBody":"I have an app that keeps \"soft-crashing\" in background threads.\r\n\r\nThe `ThreadPoolDispatcher` triggers it when it pops the `NSAutoreleasePool`. I cannot get the redacted symbols since this isn't a full crash.\r\n\r\nIt's hard to tell what's going on from the crash but I'm guessing some objects are getting garbage collected and for some reason the pool is still referencing them?\r\n\r\nIs there any logging I can enable to get more info?\r\n\r\n```\r\ncritical:   at <unknown> <0xffffffff>\r\ncritical:   at (wrapper managed-to-native) Foundation.NSObject.xamarin_release_managed_ref (intptr,Foundation.NSObject) <0x00007>\r\ncritical:   at Foundation.NSObject.ReleaseManagedRef () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.11.0.280/src/Xamarin.iOS/Foundation/NSObject2.cs:221\r\ncritical:   at Foundation.NSObject.Dispose (bool) [0x00025] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.11.0.280/src/Xamarin.iOS/Foundation/NSObject2.cs:749\r\ncritical:   at Foundation.NSObject.Dispose () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.11.0.280/src/Xamarin.iOS/Foundation/NSObject2.cs:133\r\ncritical:   at ObjCRuntime.Runtime.ThreadPoolDispatcher (System.Func`1<bool>) [0x0000f] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.11.0.280/src/Xamarin.iOS/ObjCRuntime/Runtime.cs:280\r\ncritical:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00009] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.11.0.280/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/threading/threadpool.cs:1210\r\ncritical:   at (wrapper runtime-invoke) object.runtime_invoke_dynamic (intptr,intptr,intptr,intptr) [0x0001e] in <cf0309ffa9be4853bd91f2dd74762f76#6C99B432-C572-8B9D-08BF-EED3B80DE38D>:0\r\ncritical: \r\ncritical: \t0   libmonosgen-2.0.dylib               0x0000000102a6d5cc mono_handle_native_crash + 224\r\ncritical: \t1   libmonosgen-2.0.dylib               0x0000000102a7a6fc mono_sigsegv_signal_handler + 316\r\ncritical: \t2   libsystem_platform.dylib            0x0000000182a60b58 _sigtramp + 52\r\ncritical: \t3   libobjc.A.dylib                     0x000000018201613c <redacted> + 844\r\ncritical: \t4   libobjc.A.dylib                     0x000000018201613c <redacted> + 844\r\ncritical: \t5   CoreFoundation                      0x0000000182d04aac _CFAutoreleasePoolPop + 28\r\ncritical: \t6   Foundation                          0x0000000183784160 <redacted> + 148\r\ncritical: \t7   libxamarin-debug.dylib              0x0000000102da48d4 xamarin_release_managed_ref + 212\r\ncritical: \t8   libXamarin.iOS.dll.dylib            0x0000000101ba2e68 wrapper_managed_to_native_Foundation_NSObject_xamarin_release_managed_ref_intptr_Foundation_NSObject + 104\r\ncritical: \t9   libXamarin.iOS.dll.dylib            0x0000000101ba3248 Foundation_NSObject_ReleaseManagedRef + 24\r\ncritical: \t10  libXamarin.iOS.dll.dylib            0x0000000101ba3e3c Foundation_NSObject_Dispose_bool + 108\r\ncritical: \t11  libXamarin.iOS.dll.dylib            0x0000000101ba2cf4 Foundation_NSObject_Dispose + 36\r\ncritical: \t12  libXamarin.iOS.dll.dylib            0x0000000101b75e84 ObjCRuntime_Runtime_ThreadPoolDispatcher_System_Func_1_bool + 148\r\ncritical: \t13  libmscorlib.dll.dylib               0x00000001005c4ce8 System_Threading__ThreadPoolWaitCallback_PerformWaitCallback + 136\r\ncritical: \t14  libmscorlib.dll.dylib               0x00000001006e3b18 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 248\r\ncritical: \t15  libmonosgen-2.0.dylib               0x0000000102a7d874 mono_jit_runtime_invoke + 904\r\ncritical: \t16  libmonosgen-2.0.dylib               0x0000000102b056e4 mono_runtime_try_invoke + 160\r\ncritical: \t17  libmonosgen-2.0.dylib               0x0000000102b374b0 worker_callback + 828\r\ncritical: \t18  libmonosgen-2.0.dylib               0x0000000102b35374 worker_thread + 1380\r\ncritical: \t19  libmonosgen-2.0.dylib               0x0000000102b3f6ec start_wrapper + 732\r\ncritical: \t20  libsystem_pthread.dylib             0x0000000182a65220 <redacted> + 272\r\ncritical: \t21  libsystem_pthread.dylib             0x0000000182a65110 <redacted> + 0\r\ncritical: \t22  libsystem_pthread.dylib             0x0000000182a63b10 thread_start + 4\r\n=================================================================\r\nGot a SIGSEGV while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n1. Write an app that does a lot of SceneKit work (creating nodes, moving nodes, creating geometries, etc.) in background threads\r\n2. Note the above error from time to time\r\n\r\n### Expected Behavior\r\n\r\nI can work on SceneKit elements in background threads without issue.\r\n\r\n### Actual Behavior\r\n\r\nOccasional crashes in background threads\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.6 Preview (7.6 build 711)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\nRuntime:\r\n\tMono 5.12.0.226 (2018-02/9824e260f56) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 512000226\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.300-preview2-008530/Sdks\r\nSDK Versions:\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3.1 (14154.1)\r\nBuild 9E501\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.5.0.280 (Visual Studio Enterprise)\r\nHash: e85a7be8\r\nBranch: master\r\nBuild date: 2018-05-03 11:35:01-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_152\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.11.0.280 (Visual Studio Enterprise)\r\nHash: e85a7be8\r\nBranch: master\r\nBuild date: 2018-05-03 11:35:00-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706000711\r\nGit revision: 634060c6c105fd3ee36678fe547680fd258cbf45\r\nBuild date: 2018-05-04 16:11:06-04\r\nXamarin extensions: c6720450018cb69a3da7c6d0aa0715c013783595\r\nBuild lane: monodevelop-lion-master\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Tue Dec 19 10:52:05 PST 2017\r\n    root:xnu-4570.47.16~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMSBuild Editor 2.0.3\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n"},{"Id":"7713362278","Type":"IssuesEvent","CreatedAt":"2018-05-22T20:47:40","Actor":"decidedlygray","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4112","RelatedDescription":"Closed issue \"iOS Designer Requires an Active Connection to a Mac Server - Already Connected\" (#4112) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Open a project.\r\n2.  Use VS 2017 on a Windows PC to connect to a macOS build machine\r\n3. Connection created successfully\r\n4. Clean, build, deploy application. Works as expected - project runs on remote macOS\r\n5.  Try to open a .storyboard file\r\n6.  Opening the .storyboard files\r\n\r\n### Expected Behavior\r\n\r\nExpectation would be that IOS Designed on VS2017 Windows PC allows editing of the .storyboard file\r\n\r\n### Actual Behavior\r\n\r\nEven though connection to Mac is active, and builds/deployments to Mac work, the following error message shows up:\r\n```\r\nSomething went wrong\r\n\r\nThe iOS Designer requires an active connection to a Mac server. Please connect to a Mac to enable the designer.\r\n```\r\n\r\nAdditional Logs, with stacktraces, are here. 192.168.1.2 is the Windows PC, 192.168.1.3 is the Mac:\r\n\r\nhttps://gist.github.com/decidedlygray/7b0bfe2ef35fac5d55671defc128c8dc\r\n\r\n### Environment\r\n\r\nI am using a Windows 10 machine, running the Visual Studio with info below, building against macOS.\r\n\r\nBoth machines were updated and rebooted last night. After updating is when this all started happening.\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40511.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.7.18131.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18131.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.7.18131.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.7.18131.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18131.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2018\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Execution Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nN/A\r\n\r\n### Things I've Tried\r\n\r\n- Restarting both machines\r\n- Cleaning and rebuilding the solution on Windows VS2017 - works fine\r\n- Cleaning temporary files on both machines, then rebooting, reconnecting, then trying to open .storyboard\r\n- Opening XCode on Mac to make sure it works and can build a \"hello world\" app. Works fine\r\n- Deploying project from Windows to Mac. Works as expected. App launches in emulator on Mac.\r\n- Adding and removing the Mac from VS2017 connection settings. Did this multiple times. I can reconnect to the Mac server from VS2017 without issue\r\n- Pulling hair and cursing to myself - doesn't seem to solve anything\r\n\r\n**Any additional help or debugging steps would be greatly appreciated!!!**\n\n> VS bug [#620469](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/620469), VS bug [#620470](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/620470)"},{"Id":"7712044864","Type":"IssuesEvent","CreatedAt":"2018-05-22T16:37:20","Actor":"decidedlygray","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4112","RelatedDescription":"Opened issue \"iOS Designer Requires an Active Connection to a Mac Server - Already Connected\" (#4112) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Open a project.\r\n2.  Use VS 2017 on a Windows PC to connect to a macOS build machine\r\n3. Connection created successfully\r\n4. Clean, build, deploy application. Works as expected - project runs on remote macOS\r\n5.  Try to open a .storyboard file\r\n6.  Opening the .storyboard files\r\n\r\n### Expected Behavior\r\n\r\nExpectation would be that IOS Designed on VS2017 Windows PC allows editing of the .storyboard file\r\n\r\n### Actual Behavior\r\n\r\nEven though connection to Mac is active, and builds/deployments to Mac work, the following error message shows up:\r\n```\r\nSomething went wrong\r\n\r\nThe iOS Designer requires an active connection to a Mac server. Please connect to a Mac to enable the designer.\r\n```\r\n\r\nAdditional Logs, with stacktraces, are here. 192.168.1.2 is the Windows PC, 192.168.1.3 is the Mac:\r\n\r\nhttps://gist.github.com/decidedlygray/7b0bfe2ef35fac5d55671defc128c8dc\r\n\r\n### Environment\r\n\r\nI am using a Windows 10 machine, running the Visual Studio with info below, building against macOS.\r\n\r\nBoth machines were updated and rebooted last night. After updating is when this all started happening.\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40511.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.7.18131.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18131.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.7.18131.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.7.18131.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18131.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2018\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Execution Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nN/A\r\n\r\n### Things I've Tried\r\n\r\n- Restarting both machines\r\n- Cleaning and rebuilding the solution on Windows VS2017 - works fine\r\n- Cleaning temporary files on both machines, then rebooting, reconnecting, then trying to open .storyboard\r\n- Opening XCode on Mac to make sure it works and can build a \"hello world\" app. Works fine\r\n- Deploying project from Windows to Mac. Works as expected. App launches in emulator on Mac.\r\n- Adding and removing the Mac from VS2017 connection settings. Did this multiple times. I can reconnect to the Mac server from VS2017 without issue\r\n- Pulling hair and cursing to myself - doesn't seem to solve anything\r\n\r\n**Any additional help or debugging steps would be greatly appreciated!!!**"},{"Id":"7711283589","Type":"PullRequestEvent","CreatedAt":"2018-05-22T14:40:00","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4109","RelatedDescription":"Merged pull request \"[msbuild] Unbreak netstd2 project msbuild support\" (#4109) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/4067\r\n- Broken by https://github.com/xamarin/xamarin-macios/commit/371a1d54e782c0044e984b5407079080cff50164\r\n- The refactor into Xamarin.Mac.TargetFrameworkFix.targets was incorrect, and the ItemGroup needed\r\nto be run after GetReferenceAssemblyPaths, not after FixDesignTimeFacades.\r\n- This would have been caught by existing tests, but they were not enabled due to msbuild redirect issue."},{"Id":"7710783213","Type":"PullRequestEvent","CreatedAt":"2018-05-22T13:25:56","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4105","RelatedDescription":"Merged pull request \"[ObjCRuntime] Reorder statements slightly to avoid doing useless work in certain scenarios.\" (#4105) at xamarin/xamarin-macios","RelatedBody":"We don't need the 'map' variable until after we've checked if the dynamic\nregistrar is supported, which means we can fetch it at that point too.\n\nThis improves the scenario when the dynamic registrar is not supported, since\nin that case all subsequent code will be optimized away."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"998953429568573440","CreatedAt":"2018-05-22T15:47:11+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/2E1zBel6Cr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":14,"RawContent":null},{"Id":"998352195631435777","CreatedAt":"2018-05-20T23:58:06+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/tO3s7DT35f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":43,"RawContent":null},{"Id":"997143964397572096","CreatedAt":"2018-05-17T15:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/LeAoHXXaA6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"996824503241052160","CreatedAt":"2018-05-16T18:47:36+00:00","UserScreenname":"xamarinhq","Text":"Get started with #XamarinEssentials cross-platform APIs: https://t.co/sW5UgLfeGb https://t.co/Bw4ufWhGP8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":149,"FavoriteCount":78,"RawContent":null},{"Id":"996785351665463297","CreatedAt":"2018-05-16T16:12:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/UZ5l6JaWcB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"996750580969365506","CreatedAt":"2018-05-16T13:53:51+00:00","UserScreenname":"xamarinhq","Text":"Learn about some small changes coming as we integrate https://t.co/iLyxWYOFfj content into Microsoft sites: https://t.co/RcvPgvkPTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null},{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":34,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"995013274252009473","CreatedAt":"2018-05-11T18:50:25+00:00","UserScreenname":"xamarinhq","Text":"On this week's epsiode of the #XamarinPodcast, get the #MSBuild 2018 recap for mobile developers: https://t.co/UhjdSxsePY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":9,"RawContent":null},{"Id":"994975698736570368","CreatedAt":"2018-05-11T16:21:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/iXX9NqH3wX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"994612280980660225","CreatedAt":"2018-05-10T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/TjAVAcfe1a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":21,"RawContent":null},{"Id":"994284793184563200","CreatedAt":"2018-05-09T18:35:42+00:00","UserScreenname":"xamarinhq","Text":"Everything the #Xamarin developer should know from #MSBuild, all in one place: https://t.co/wZn2oaz7l5 https://t.co/GmsEImV7Bq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":143,"FavoriteCount":76,"RawContent":null}]}},"RunOn":"2018-05-23T05:30:42.5892671Z","RunDurationInMilliseconds":4537}