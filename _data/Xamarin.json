{"Data":{"Blog":{"FeedItems":[{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null},{"Title":"Find Local Xamarin and .NET Developer Events This April","PublishedOn":"2018-04-02T18:42:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Spring into action this April by finding a Xamarin or .NET user group hosting Xamarin (and related technology) events near you! Get the latest news on exciting releases, tooling, and updates all month...","Href":"https://blog.xamarin.com/xamarin-developer-community-events-april/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7575359779","Type":"IssuesEvent","CreatedAt":"2018-04-24T01:14:56","Actor":"lin-zy1229","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1591","RelatedDescription":"Opened issue \"Array argument for Java Map's key lost its original memory address in binding method, during binding AAR.\" (#1591) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Native android aar's method\r\n```\r\nprivate ConcurrentHashMap<byte[], Object> map = new ConcurrentHashMap();\r\nObject getData(byte[] key) {\r\n    return map.get(key);\r\n}\r\nvoid putData(byte[] data) {\r\n    map.put(data, data);\r\n}\r\n```\r\n2. Xamarin android invoker method generated by binding generator\r\n```\r\nvoid GetData(byte[] p0) {\r\n    ...\r\n    IntPtr native_p0 = JNIEnv.NewArray (p0);\r\n    JValue* __args = stackalloc JValue [1];\r\n    __args [0] = new JValue (native_p0);\r\n    JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_getData_arrayB, __args);\r\n    ...\r\n}\r\nvoid PutData(byte[] p0) {\r\n    ...\r\n    IntPtr native_p0 = JNIEnv.NewArray (p0);\r\n    JValue* __args = stackalloc JValue [1];\r\n    __args [0] = new JValue (native_p0);\r\n    JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_putData_arrayB, __args);\r\n    ...\r\n}\r\n```\r\n3. When we use this Xamarin binded lib in code, it returns null always as follows.\r\n```\r\nbyte[] data=new byte[]{1,2,3};\r\nsomeObj.PutData(data);\r\nvar ans = someObj.GetData(data); // always returns null\r\n```\r\n\r\nHere, we know why ` someObj.GetData(data) `returns null always.\r\nIt is because` GetData(p0)` doesn't use `p0` itself as a key to get corresponding value, but it generates new address by` IntPtr native_p0 = JNIEnv.NewArray (p0)` and use it as a key.\r\nSo the Map variable couldn't find a proper key/value stored by the key (byte array pointer address) generated newly each time in calling  `someObj.GetData(data)`.\r\n\r\nHope you to fix this issue ASAP.\r\n\r\nIt should NOT return null in above code, and it SHOULD return byte[]{1,2,3} as corresponding value."},{"Id":"7574614992","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:34:13","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1511","RelatedDescription":"Closed issue \"Unstable framework versions are used when $(AndroidUselatestPlatformSDK)=true\" (#1511) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Copy the v8.1 framework to v108.1.99\r\n\r\n2. Edit v108.1.99\\AndroidApiInfo.xml, and set `<Id/>` to \"Z\", set `<Level/>` to 127, set `<Version/>` to v108.1.99, and `<Stable/>` to False:\r\n\r\n```xml\r\n    <AndroidApiInfo>\r\n      <Id>Z</Id>\r\n      <Level>127</Level>\r\n      <Name>Z Preview</Name>\r\n      <Version>v108.1.99</Version>\r\n      <Stable>False</Stable>\r\n    </AndroidApiInfo>\r\n```\r\n3. Copy $(AndroidSdkDirectory)\\platforms\\android-27 to $(AndroidSdkDirectory)\\platforms\\android-Z.\r\n\r\n4. Update a new or existing project so that $(TargetFrameworkVersion)=v8.0, and $(AndroidUseLatestPlatformSdk)=true\r\n\r\nAlternatively, a recent build from master which has early P preview support can be used.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nUsing a project with a $(TargetFrameworkVersion) lower than the max stable version, and setting $(AndroidUseLatestPlatformSdk)=true, I would expect my project to build against the latest stable version that is installed. In the case mentioned above, this would be android-27 (v8.1).\r\n\r\n### Actual Behavior\r\nA project with a $(TargetFrameworkVersion) lower than the max stable version, and setting $(AndroidUseLatestPlatformSdk)=true builds against my fake unstable framework version, android-Z.\r\n\r\n### Version Information\r\nXamarin.Android.Sdk-OSS-8.3.99.91_HEAD_33822ad.vsix\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-83bd0e75034940db9ae887a8f5c03d98.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#594908](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/594908)"},{"Id":"7573987564","Type":"PullRequestEvent","CreatedAt":"2018-04-23T19:30:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1589","RelatedDescription":"Merged pull request \"[tests] nuget output and test names go to output file\" (#1589) at xamarin/xamarin-android","RelatedBody":"Previously if you ran the NUnit tests you would get nuget output such as:\r\n```\r\nRestoring NuGet package Xamarin.Android.Support.v7.Cardview.24.2.1.\r\nAdding package 'Xamarin.Android.Support.v7.Cardview.24.2.1' to folder 'C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\packages'\r\nAdded package 'Xamarin.Android.Support.v7.Cardview.24.2.1' to folder 'C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\packages'\r\n\r\nNuGet Config files used:\r\n    C:\\Users\\myuser\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.Fallback.config\r\n\r\nFeeds used:\r\n    C:\\Users\\myuser\\.nuget\\packages\\\r\n    https://api.nuget.org/v3/index.json\r\n    C:\\Users\\myuser\\Desktop\\NuGet\r\n    https://www.myget.org/F/xamarin-essentials/api/v3/index.json\r\n    C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nInstalled:\r\n    1 package(s) to packages.config projects\r\n```\r\n\r\n`Xamarin.ProjectTools` was not redirecting the output of nuget, and so\r\nwe were getting the odd behavior of seeing all nuget output at the\r\nconsole. By redirecting the output to `System.Console`, the output now\r\ncorrectly goes to `TestOutput-Xamarin.Android.Build.Tests.txt`.\r\n\r\nI also added the `--labels=All` switch to the `nunit-console` command,\r\nwhich will log each test completion such as:\r\n\r\n    => Xamarin.Android.Build.Tests.BuildTest.BuildAfterAddingNuget"},{"Id":"7573773939","Type":"PullRequestEvent","CreatedAt":"2018-04-23T18:49:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1590","RelatedDescription":"Closed pull request \"Revert \"[mono-sdks] Pass the Host{Cc,Cxx}{32,64} parameters\"\" (#1590) at xamarin/xamarin-android","RelatedBody":"Commit 9a985136 [broke the macOS build][0]: \r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/961/\r\n\r\n\tmake -j4 package-llvm-llvmwin32 CONFIGURATION=debug IGNORE_PROVISION_MXE=true IGNORE_PROVISION_ANDROID=true IGNORE_PACKAGE_LLVM=true ANDROID_TOOLCHAIN_DIR=\"/Users/builder/android-toolchain\" ANDROID_TOOLCHAIN_CACHE_DIR=\"/Users/builder/android-archives\" ANDROID_TOOLCHAIN_PREFIX=\"/Users/builder/android-toolchain/toolchains\" ANDROID_BUILD_TOOLS_VERSION=\"28-rc1\" ANDROID_BUILD_TOOLS_DIR=\"28.0.0-rc1\" LLVM_SRC=\"…/xamarin-android/src/mono-runtimes/../../external/llvm\" MXE_PREFIX_DIR=\"/Users/builder/android-toolchain\" MXE_SRC=\"…/xamarin-android/src/mono-runtimes/../../external/mxe\" CC=\"\" CXX=\"\"\r\n\t...\r\n\tmkdir: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/sdks/builds/llvm-llvmwin32/BuildTools/lib/Support/Release: File exists\r\n\t...\r\n\t/bin/sh: -I/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/llvm/include: No such file or directory\r\n\t...\r\n\trm: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/sdks/builds/llvm-llvmwin32/BuildTools/lib/Support/Release/APInt.d.tmp: No such file or directory\r\n\tmake[5]: *** [/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/sdks/builds/llvm-llvmwin32/BuildTools/lib/Support/Release/APSInt.o] Error 1\r\n\t...\r\n\terror MSB3073: The command \"make -j4 …\" exited with code 2. […/xamarin-android/src/mono-runtimes/mono-runtimes.csproj]\r\n\r\nRevert commit 9a985136 so we can fix it at our liesure."},{"Id":"7573766281","Type":"PullRequestEvent","CreatedAt":"2018-04-23T18:47:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1590","RelatedDescription":"Opened pull request \"Revert \"[mono-sdks] Pass the Host{Cc,Cxx}{32,64} parameters\"\" (#1590) at xamarin/xamarin-android","RelatedBody":"Commit 9a985136 [broke the macOS build][0]: \r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/961/\r\n\r\n\tmake -j4 package-llvm-llvmwin32 CONFIGURATION=debug IGNORE_PROVISION_MXE=true IGNORE_PROVISION_ANDROID=true IGNORE_PACKAGE_LLVM=true ANDROID_TOOLCHAIN_DIR=\"/Users/builder/android-toolchain\" ANDROID_TOOLCHAIN_CACHE_DIR=\"/Users/builder/android-archives\" ANDROID_TOOLCHAIN_PREFIX=\"/Users/builder/android-toolchain/toolchains\" ANDROID_BUILD_TOOLS_VERSION=\"28-rc1\" ANDROID_BUILD_TOOLS_DIR=\"28.0.0-rc1\" LLVM_SRC=\"…/xamarin-android/src/mono-runtimes/../../external/llvm\" MXE_PREFIX_DIR=\"/Users/builder/android-toolchain\" MXE_SRC=\"…/xamarin-android/src/mono-runtimes/../../external/mxe\" CC=\"\" CXX=\"\"\r\n\t...\r\n\tmkdir: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/sdks/builds/llvm-llvmwin32/BuildTools/lib/Support/Release: File exists\r\n\t...\r\n\t/bin/sh: -I/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/llvm/include: No such file or directory\r\n\t...\r\n\trm: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/sdks/builds/llvm-llvmwin32/BuildTools/lib/Support/Release/APInt.d.tmp: No such file or directory\r\n\tmake[5]: *** [/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/sdks/builds/llvm-llvmwin32/BuildTools/lib/Support/Release/APSInt.o] Error 1\r\n\t...\r\n\terror MSB3073: The command \"make -j4 …\" exited with code 2. […/xamarin-android/src/mono-runtimes/mono-runtimes.csproj]\r\n\r\nRevert commit 9a985136 so we can fix it at our liesure."},{"Id":"7573576220","Type":"IssuesEvent","CreatedAt":"2018-04-23T18:12:02","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1512","RelatedDescription":"Closed issue \"AndroidUseLatestPlatformSdk = true leads to build errors\" (#1512) at xamarin/xamarin-android","RelatedBody":"### Details\r\n\r\nAndroid Forms App created in VS Stable does not work in VS Preview or on VS for Mac Stable. The error is similar in both situations. This error can be \"fixed\" by setting AndroidUseLatestPlatformSdk to false on both Windows and Mac\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download sample from [App.zip](https://github.com/xamarin/xamarin-android/files/1877687/App.zip)\r\n2. Open App1 in VS Preview or VS Mac Stable\r\n3. Attempt to build\r\n4. Once build fails, edit App1.Android.csproj\r\n5. Change `AndroidUseLatestPlatformSdk` to `false`\r\n6. Open and build again\r\n\r\n### Expected Behavior\r\n\r\nApp should build at step 3\r\n\r\n### Actual Behavior\r\n\r\nApp fails to build at step 3 and succeeds at step 6\r\n\r\n#### Mac Error\r\n\r\n/Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets(5,5): Error: Your project is not referencing the \"MonoAndroid,Version=v7.1\" framework. Add a reference to \"MonoAndroid,Version=v7.1\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore. (App1.Android)\r\n\r\n<img width=\"1784\" alt=\"screen shot 2018-04-04 at 2 27 09 pm\" src=\"https://user-images.githubusercontent.com/8754258/38335751-470f64aa-3814-11e8-9124-e5ed7a3faf4b.png\">\r\n\r\n#### Windows Error\r\n\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(186,5): error : Your project is not referencing the \"MonoAndroid,Version=v8.1\" framework. Add a reference to \"MonoAndroid,Version=v8.1\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n#### VS Mac\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.4.2 (build 12)\r\nInstallation UUID: e1f78869-2e8c-4b18-b0ba-52c72492257c\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/codybeyer/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.28 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Enterprise)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704020012\r\nGit revision: 0d8e3f0a4d683771f17959739956fa09c7ba21e3\r\nBuild date: 2018-03-30 10:45:17-04\r\nXamarin addins: 958839ea56ab1e331caf7c92b6ad50fb9e6ee9d2\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#595460](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/595460), VS bug [#603506](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/603506)"},{"Id":"7572432895","Type":"PullRequestEvent","CreatedAt":"2018-04-23T14:56:36","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1589","RelatedDescription":"Opened pull request \"[tests] nuget output and test names go to output file\" (#1589) at xamarin/xamarin-android","RelatedBody":"Previously if you ran the NUnit tests you would get nuget output such as:\r\n```\r\nRestoring NuGet package Xamarin.Android.Support.v7.Cardview.24.2.1.\r\nAdding package 'Xamarin.Android.Support.v7.Cardview.24.2.1' to folder 'C:\\Users\\jopepper\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\packages'\r\nAdded package 'Xamarin.Android.Support.v7.Cardview.24.2.1' to folder 'C:\\Users\\jopepper\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\packages'\r\n\r\nNuGet Config files used:\r\n    C:\\Users\\jopepper\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.Fallback.config\r\n\r\nFeeds used:\r\n    C:\\Users\\jopepper\\.nuget\\packages\\\r\n    https://api.nuget.org/v3/index.json\r\n    C:\\Users\\jopepper\\Desktop\\NuGet\r\n    https://www.myget.org/F/xamarin-essentials/api/v3/index.json\r\n    C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nInstalled:\r\n    1 package(s) to packages.config projects\r\n```\r\n\r\n`Xamarin.ProjectTools` was not redirecting the output of nuget, and so\r\nwe were getting the odd behavior of seeing all nuget output at the\r\nconsole. By redirecting the output to `System.Console`, the output now\r\ncorrectly goes to `TestOutput-Xamarin.Android.Build.Tests.txt`.\r\n\r\nI also added the `--labels=All` switch to the `nunit-console` command,\r\nwhich will log each test completion such as:\r\n\r\n    => Xamarin.Android.Build.Tests.BuildTest.BuildAfterAddingNuget"},{"Id":"7572072879","Type":"PullRequestEvent","CreatedAt":"2018-04-23T14:03:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1571","RelatedDescription":"Merged pull request \"[build] Use `msbuild` by default to build xamarin-android\" (#1571) at xamarin/xamarin-android","RelatedBody":"`xbuild` is \"wonky\" in all manner of ways -- for better or worse\r\n(648aff99, e3abe4b8, 069c65ae).\r\n\r\nWorse, our unit tests has a tendency to throw\r\n`ArgumentOutOfRangeException` when running under `xbuild`, e.g. this\r\nrecent [`BuildAotApplicationAndBundle(\"armeabi\",True,True)` error][0]\r\nwhich produces a (temporary, Workspace-local) [log file][1] with:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/955/testReport/Xamarin.Android.Build.Tests/BuildTest/BuildAotApplicationAndBundle__armeabi__True_True_/\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/ws/xamarin-android/bin/TestRelease/temp/BuildAotApplicationAndBundle_armeabi_True_True/build.log\r\n\r\n        …/xamarin-android/bin/Release/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets: error : Error executing task BuildApk: Non-negative number required.\r\n        Parameter name: srcOffset\r\n        Error executing task BuildApk: System.ArgumentOutOfRangeException: Non-negative number required.\r\n        Parameter name: srcOffset\r\n          at System.Buffer.BlockCopy (System.Array src, System.Int32 srcOffset, System.Array dst, System.Int32 dstOffset, System.Int32 count) [0x0009d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/ReferenceSources/Buffer.cs:65\r\n          at System.IO.FileStream.WriteSegment (System.Byte[] src, System.Int32 src_offset, System.Int32 count) [0x00023] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:995\r\n          at System.IO.FileStream.WriteInternal (System.Byte[] src, System.Int32 offset, System.Int32 count) [0x00099] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:647\r\n          at System.IO.FileStream.Write (System.Byte[] array, System.Int32 offset, System.Int32 count) [0x00090] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:614\r\n          at System.IO.StreamWriter.Flush (System.Boolean flushStream, System.Boolean flushEncoder) [0x0007e] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/io/streamwriter.cs:318\r\n          at System.IO.StreamWriter.Write (System.Char[] buffer, System.Int32 index, System.Int32 count) [0x00078] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/io/streamwriter.cs:411\r\n          at System.IO.TextWriter.WriteLine (System.String value) [0x00070] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/io/textwriter.cs:490\r\n          at Microsoft.Build.BuildEngine.ConsoleLogger+BuildRecord.WriteLine (System.String message) [0x00051] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/ConsoleLogger.cs:856\r\n          at Microsoft.Build.BuildEngine.ConsoleLogger+BuildRecord.MessageHandler (Microsoft.Build.Framework.BuildMessageEventArgs args) [0x0001c] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/ConsoleLogger.cs:708\r\n          at Microsoft.Build.BuildEngine.ConsoleLogger.MessageHandler (System.Object sender, Microsoft.Build.Framework.BuildMessageEventArgs e) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/ConsoleLogger.cs:344\r\n          at Microsoft.Build.BuildEngine.EventSource.FireMessageRaised (System.Object sender, Microsoft.Build.Framework.BuildMessageEventArgs bmea) [0x00008] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/EventSource.cs:69\r\n          at Microsoft.Build.BuildEngine.BuildEngine.LogMessageEvent (Microsoft.Build.Framework.BuildMessageEventArgs e) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildEngine.cs:130\r\n          at Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText (System.String lineOfText, Microsoft.Build.Framework.MessageImportance messageImportance) [0x00031] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Utilities/Microsoft.Build.Utilities/TaskLoggingHelper.cs:314\r\n          at Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage (Microsoft.Build.Framework.MessageImportance importance, System.String message, System.Object[] messageArgs) [0x0000e] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Utilities/Microsoft.Build.Utilities/TaskLoggingHelper.cs:248\r\n          at (wrapper remoting-invoke-with-check) Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,string,object[])\r\n          at Xamarin.Android.Tasks.MSBuildExtensions.LogDebugTaskItems (Microsoft.Build.Utilities.TaskLoggingHelper log, System.String message, Microsoft.Build.Framework.ITaskItem[] items) [0x00030] in <d1b2bbe8a91444ef81018dda8acfe92a>:0\r\n          at Xamarin.Android.Tasks.BuildApk.Execute () [0x001da] in <d1b2bbe8a91444ef81018dda8acfe92a>:0\r\n          at Microsoft.Build.BuildEngine.TaskEngine.Execute () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskEngine.cs:134\r\n          at Microsoft.Build.BuildEngine.BuildTask.Execute () [0x0008d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildTask.cs:101\r\n\r\nIt's hard to have a \"green\" build when the build system randomly\r\nfails. Furthermore, `xbuild` is no longer maintained, so whatever\r\nbug we're triggering in `xbuild` *will not be fixed*, `xbuild` itself\r\nis ***deprecated***, and the #mono team wants us to use `msbuild`.\r\n\r\nUpdate the build system so that we use `msbuild` by default instead.\r\n\r\nAdditionally, repair remaining `xbuild`-isms, in particular:\r\n\r\nIn `msbuild`, item groups are \"cumulative\". For example, because both\r\nthe `RunNUnitTests` and `RunJavaInteropTests` targets updated the\r\n`@(_RenameTestCasesGlob)` item group, when `RunJavaInteropTests` was\r\nexecuted it contained items from the `RunNUnitTests` execution, which\r\nwas unexpected and resulted in a test execution failure:\r\n\r\n        …/build-tools/scripts/TestApks.targets(221,5): error : Could not find file \"/Users/builder/jenkins/workspace/xamarin-android-msbuild-pr-builder/TestResult-Xamarin.Android.Build.Tests.xml\"\r\n\r\n`TestResult-Xamarin.Android.Build.Tests.xml` didn't exist during the\r\nexecution of the `RunJavaInteropTests` because it was deleted/renamed\r\nas part of the `RunNUnitTests` target.\r\n\r\nThere is also an unintended `make`-ism: `$(USE_MSBUILD)` is used by\r\nvarious parts of the build system *and unit tests* to determine\r\nwhether or not `msbuild` or `xbuild` is being used, and change\r\nbehavior accordingly. Unfortunately, `$(USE_MSBUILD)` wasn't being\r\n[`export`ed][2], and thus wasn't visible to child processes.\r\nConsequently, even though `msbuild` was being used for the build\r\nand unit test execution, the unit tests thought that `xbuild`-based\r\noutputs should be used for checks. This resulted in at least three\r\n`Xamarin.Android.Build.Tests` failures:\r\n\r\n[2]: https://www.gnu.org/software/make/manual/html_node/Variables_002fRecursion.html#Variables_002fRecursion\r\n\r\n  * `Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.BuildAppWithManagedResourceParserAndLibraries / Debug`\r\n  * `Xamarin.Android.Build.Tests.BuildTest.CheckJavaError / Debug`\r\n  * `Xamarin.Android.Build.Tests.BuildTest.BuildAMassiveApp / Debug`\r\n\r\nIf necessary, `xbuild` can continue to be used to build things:\r\n\r\n        make all MSBUILD=xbuild\r\n\r\nHowever, we make no guarantees for how long `xbuild` will continue to\r\nwork going forward."},{"Id":"7571957267","Type":"PullRequestEvent","CreatedAt":"2018-04-23T13:46:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1566","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Test] Rework CreateFauxAndroidSdkDirectory to take ApiInfo[].\" (#1566) at xamarin/xamarin-android","RelatedBody":"Context #1511\r\n\r\nFor most tests we already define an ApiInfo[] to contain\r\napis we want to test against. This commit cleans up the helper\r\nmethods to make use of the same ApiInfo[] arrays to create\r\nthe `android-{Id}` directories.\r\n\r\nIt also adds unit tests to conver the fix made for #1511."},{"Id":"7571869251","Type":"PullRequestEvent","CreatedAt":"2018-04-23T13:32:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1587","RelatedDescription":"Merged pull request \"[mono-sdks] Pass the Host{Cc,Cxx}{32,64} parameters\" (#1587) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7564794632","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:38:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1572","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] plumbing for coded warnings\" (#1572) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1560\r\n\r\nTo get started in fixing #1560, some of our helper methods need updating\r\nin order to completely support coded warnings in MSBuild tasks.\r\n\r\n- `AsyncTask` needs \"background-thread-safe\" versions of `LogWarning`\r\nthat allow us to specify error codes. The `WaitForCompletion` method\r\nalso needed to call `LogCodedWarning` internally.\r\n- Overloads of `LogError` and `LogWarning` that specify an error code\r\nare renamed to `LogCodedError` and `LogCodedWarning`. This will help us\r\nidentify log messages that need error codes by searching for `LogError`\r\n- `MSBuildExtensions` need proper method overloads for\r\n`LogCodedWarning`, I copied what we have for `LogCodedError` so\r\n`LogCodedWarning` will match it exactly\r\n\r\nChanges to `<Aapt />`, as a guinea pig:\r\n- All warnings will report APT0000\r\n- Updated tests where appropriate, note that MSBuild appends\r\n`warning APT0000:` and `aapt` prints its own `warning :` afterward\r\n- It doesn't look like we can make an error coming from `aapt` any more\r\nspecific than `APT0000`, but open to suggestions\r\n- Added documentation for `APT0000`, which is about as helpful as it can\r\nbe. It at least explains what `aapt` is and links to the Android\r\ndocumentation, listing a few messages returned by `aapt` as examples.\r\n\r\nOther fixes:\r\n- Since the overload for an error code with `AsyncTask.LogError` was\r\nremoved, these needed to change to `LogCodedError` in\r\n`<ResolveAssemblies />`"},{"Id":"7564782499","Type":"PullRequestEvent","CreatedAt":"2018-04-21T01:29:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1586","RelatedDescription":"Merged pull request \"[build] Generate XABuildPaths.cs for all $(CONFIGURATIONS)\" (#1586) at xamarin/xamarin-android","RelatedBody":"Commit e937f9b4 broke `make prepare` for the Release configuration.\r\nJenkins assumes that `make prepare` is a single invocation for *both*\r\nDebug & Release builds; see e.g. `make prepare-external`:\r\n\r\n\t$(foreach conf, $(CONFIGURATIONS), ...)\r\n\r\nCommit e937f9b4 didn't abide by this requirement, and thus only\r\ngenerated `XABuildPaths.cs` for the Debug configuration. As such, when\r\nattempting to build in the Release configuration, [things broke][0]:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/958/\r\n\r\n\tCSC: error CS2001: Source file '…/xamarin-android/src/Xamarin.Android.Build.Tasks/Tests/Xamarin.ProjectTools/../../../../bin/TestRelease/XABuildPaths.cs' could not be found.\r\n\r\nThe fix is to update `make prepare-paths` so that it generates\r\n`bin/Test$(Configuration)/XABuildPaths.cs` for *all*\r\n`$(CONFIGURATIONS)` values."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7574746419","Type":"IssuesEvent","CreatedAt":"2018-04-23T22:04:29","Actor":"amccorma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2534","RelatedDescription":"Opened issue \"Leak?\" (#2534) at xamarin/Xamarin.Forms","RelatedBody":"Is this leak coming from the Xamarin framework or my code?\r\n\r\n\r\n[WindowManager] \r\n[WindowManager] android.view.WindowLeaked: Activity md52f806127ecc1a696113c916d4a12cae6.MainActivity has leaked window DecorView@4e70f66[MainActivity] that was originally added here\r\n[WindowManager] \tat android.view.ViewRootImpl.<init>(ViewRootImpl.java:572)\r\n[WindowManager] \tat android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:331)\r\n[WindowManager] \tat android.view.WindowManagerImpl.addView(WindowManagerImpl.java:97)\r\n[WindowManager] \tat android.app.Dialog.show(Dialog.java:419)\r\n[WindowManager] \tat md52f806127ecc1a696113c916d4a12cae6.MainActivity.n_onBackPressed(Native Method)\r\n[WindowManager] \tat md52f806127ecc1a696113c916d4a12cae6.MainActivity.onBackPressed(MainActivity.java:92)\r\n[WindowManager] \tat android.app.Activity.onKeyUp(Activity.java:2864)\r\n[WindowManager] \tat android.view.KeyEvent.dispatch(KeyEvent.java:3358)\r\n[WindowManager] \tat android.app.Activity.dispatchKeyEvent(Activity.java:3165)\r\n[WindowManager] \tat android.support.v7.app.AppCompatActivity.dispatchKeyEvent(AppCompatActivity.java:534)\r\n[WindowManager] \tat android.support.v7.view.WindowCallbackWrapper.dispatchKeyEvent(WindowCallbackWrapper.java:58)\r\n[WindowManager] \tat android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase.dispatchKeyEvent(AppCompatDelegateImplBase.java:316)\r\n[WindowManager] \tat android.support.v7.view.WindowCallbackWrapper.dispatchKeyEvent(WindowCallbackWrapper.java:58)\r\n[WindowManager] \tat com.android.internal.policy.DecorView.dispatchKeyEvent(DecorView.java:428)\r\n[WindowManager] \tat android.view.ViewRootImpl$ViewPostImeInputStage.processKeyEvent(ViewRootImpl.java:5003)\r\n[WindowManager] \tat android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:4965)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4500)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4553)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4519)\r\n[WindowManager] \tat android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4652)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4527)\r\n[WindowManager] \tat android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4709)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4500)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4553)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4519)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4527)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4500)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4553)\r\n[WindowManager] \tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4519)\r\n[WindowManager] \tat android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4685)\r\n[WindowManager] \tat android.view.ViewRootImpl$ImeInputStage.onFinishedInputEvent(ViewRootImpl.java:4854)\r\n[WindowManager] \tat android.view.inputmethod.InputMethodManager$PendingEvent.run(InputMethodManager.java:3038)\r\n[WindowManager] \tat android.view.inputmethod.InputMethodManager.invokeFinishedInputEventCallback(InputMethodManager.java:2574)\r\n[WindowManager] \tat android.view.inputmethod.InputMethodManager.finishedInputEvent(InputMethodManager.java:2565)\r\n[WindowManager] \tat android.view.inputmethod.InputMethodManager$ImeInputEventSender.onInputEventFinished(InputMethodManager.java:3015)\r\n[WindowManager] \tat android.view.InputEventSender.dispatchInputEventFinished(InputEventSender.java:141)\r\n[WindowManager] \tat android.os.MessageQueue.nativePollOnce(Native Method)\r\n[WindowManager] \tat android.os.MessageQueue.next(MessageQueue.java:323)\r\n[WindowManager] \tat android.os.Looper.loop(Looper.java:136)\r\n[WindowManager] \tat android.app.ActivityThread.main(ActivityThread.java:6682)\r\n[WindowManager] \tat java.lang.reflect.Method.invoke(Native Method)\r\n[WindowManager] \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1520)\r\n[WindowManager] \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1410)\r\n[ViewRootImpl@b795bc1[MainActivity]] mHardwareRenderer.destroy()#4\r\n[ViewRootImpl@b795bc1[MainActivity]] dispatchDetachedFromWindow\r\n[InputTransport] Input channel destroyed: fd=152"},{"Id":"7574026833","Type":"IssuesEvent","CreatedAt":"2018-04-23T19:38:38","Actor":"tlpearson","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2533","RelatedDescription":"Opened issue \"Picker FontFamily, FontAttributes, FontSize Properties\" (#2533) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nSetting the Forms Picker FontFamily, FontAttributes, FontSize properties should change the list elements as well as the selected item.\r\n\r\n### Steps to Reproduce\r\nSet any of the Picker's FontFamily, FontAttributes, FontSize properties to a value in XAML or in code.\r\n\r\n### Expected Behavior\r\nSetting the Picker FontFamily, FontAttributes, FontSize properties should change the list elements as well as the selected item.\r\n\r\n### Actual Behavior\r\nOnly the selected item is changed in iOS and Android;  the list items are displayed in the default font. UWP FontFamily, FontAttributes, FontSize properties are set correctly.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.354232-pre3\r\n- Last known good version: none\r\n- IDE:  Visual Studio 2017\r\n- Platform Target Frameworks: \r\n  - iOS:  11.3\r\n  - Android: 7.1 \r\n  - UWP:  16299 \r\n"},{"Id":"7573698833","Type":"PullRequestEvent","CreatedAt":"2018-04-23T18:35:07","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2468","RelatedDescription":"Merged pull request \"[Tizen] Supports Switch.OnColor to tizen\" (#2468) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR is tizen implementation of #1662 and is an addendum to the changes in #1929.\r\n\r\nfixes #1662\r\n\r\n**- Phone**\r\n\r\n Default | OnColor (Red)\r\n---|---\r\n<img src =\"https://user-images.githubusercontent.com/1029134/38538079-2bcac866-3ccd-11e8-8ad9-a886eebc7f89.png\" width=320>| <img src =\"https://user-images.githubusercontent.com/1029134/38538083-2f8c169e-3ccd-11e8-8b64-835f836839f6.png\" width=320>\r\n\r\n**- Watch**\r\n\r\n Default | OnColor (Red)\r\n---|---\r\n<img src =\"https://user-images.githubusercontent.com/1029134/38785438-03ef1f8a-415b-11e8-9a7b-a9f2cb96b428.png\" width=200> | <img src =\"https://user-images.githubusercontent.com/1029134/38538069-1e69ec92-3ccd-11e8-8061-210db6f0508c.png \" width=200>\r\n\r\n**- TV**\r\n  -  Default \r\n  <img src =\"https://user-images.githubusercontent.com/1029134/38538061-1302c1c6-3ccd-11e8-9ccb-2dac968ae7be.png\" width=600>\r\n\r\n  - OnColor (Red) \r\n<img src =\"https://user-images.githubusercontent.com/1029134/38538056-0a2a89bc-3ccd-11e8-82b1-b377cde7e72d.png\" width=600>\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense"},{"Id":"7573673345","Type":"IssuesEvent","CreatedAt":"2018-04-23T18:30:16","Actor":"ptsoccer","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2532","RelatedDescription":"Opened issue \"When using XAML compilation, it would be nice to know at compile time that a binding conversion can't be done\" (#2532) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nXamarin Forms does not automatically do certain implicit type conversions in the bindings, instead the binding must have a converter, there must be a StringFormat in the binding (if the target property is a string) the type must be IConvertible, or one of the hardcoded types. If you bind to a property where this is not the case, an InvalidCastException is thrown and then swallowed, and the binding doesn't work. It would be nice if, when XAML compilation is turned on, this condition was detected and shown at compile time rather than bindings silently not working during runtime.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a xamarin forms project\r\n2. Create a custom class (doesn't have to do anything).\r\n3. Create a view model class that exposes a property for the custom class\r\n4. Create a view that binds to that view model, and bind the custom class property in the view model to a label's text\r\n5. Turn on XAML compilation for that view\r\n6. Compile and run the program\r\n\r\n### Expected Behavior\r\nA compile error is generated\r\n\r\n### Actual Behavior\r\nAn InvalidCastException is thrown when the program is run (must have break on throw turned on in exception dialog and Just My Code disabled to see the exception).\r\n\r\n### Basic Information\r\n\r\nVersion with issue: 3.0-pre3\r\n\r\n### Reproduction Link\r\nThis is a UWP project\r\n\r\n[XamarinStaticBinding.zip](https://github.com/xamarin/Xamarin.Forms/files/1939532/XamarinStaticBinding.zip)\r\n\r\n"},{"Id":"7573583776","Type":"IssuesEvent","CreatedAt":"2018-04-23T18:13:27","Actor":"weitzhandler","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2531","RelatedDescription":"Opened issue \"[Enhancement] ListView size to content\" (#2531) at xamarin/Xamarin.Forms","RelatedBody":"### Rationale\r\n\r\nThe `ListView` control takes up a bunch of space and is only accustomed for large lists that take up the entire screen.\r\nRelated to #1727 and #1743, what's really missing in `ListView` is a way to have it shrink and take up only the space it requires.\r\nAchieving this behavior is a nightmare.\r\nPlease see my answer on [SO](https://stackoverflow.com/a/44916762/75500) that will only work for even rows.\r\n\r\n### Implementation\r\nPerhaps adding some alignment properties from the `StackLayout` (i.e. `HorizontalOptions`, etc.), or anything of your choice.\r\nThe idea is that we must un-mobilize the `ListView` which is too much mobile biased, neglecting the fact that Xamarin.Forms is supposed to serve also tablets, laptops and desktops.\r\n\r\n### Difficulty\r\nEasy"},{"Id":"7572994948","Type":"IssuesEvent","CreatedAt":"2018-04-23T16:24:26","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2522","RelatedDescription":"Closed issue \"[UWP] StackLayouts / NavigationPage leaks memory\" (#2522) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nMigrated from https://bugzilla.xamarin.com/show_bug.cgi?id=61027. Reopened #1352 due to inactivity.\r\n\r\nOn UWP with Xamarin.Forms pushing and then popping a page with `StackLayout`s on it to the navigation stack several times will cause the memory consumption to grow infinitely.\r\n\r\n### Steps to Reproduce\r\nEither take the sample project attached, or create a simple one with the following setup:\r\n- The main app should have a `NavigationPage` with the main page wrapped inside\r\n- That main page should have a `ListView` of elements\r\n- Clicking on any of those elements should take the user to another page (call it details page), by pushing it to the stack\r\n- Details page should have a back button that will pop the top of the navigation stack and taking it back to the main page\r\n\r\nThis navigation back-and-forth has to be done several times to see the memory usage increase. The problem is that the memory will never be released, `GC` will not collect it, even by forcing from either code or from Visual Studio's performance profiler set to monitor memory usage.\r\n\r\nYou can take a snapshot in the profiler when the app starts and then navigate to a page and then back maybe 20, 30 times (The longer one takes, the more visible the results are going to be). Take another snapshot again, and then let VS analyse the difference. See attached screenshot for the results.\r\n\r\nOver longer periods of time this leads to crashes in every single UWP app with Xamarin.Forms that has this navigation capability.\r\n\r\n### Expected Behavior\r\nGoing back from a page should release the memory used by it, or at least the garbage collector should be able to clean it up at a certain point.\r\n\r\n### Actual Behavior\r\nMemory usage increases indefinitely, eventually crashing the app.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: I went back as far as 2.2, none of the versions I've tried worked\r\n- IDE: VS 2017 Community Edition on Windows 10\r\n- Platform Target Frameworks: \r\n  - UWP:  15063\r\n- Nuget Packages: Xamarin.Forms\r\n\r\n### Screenshots\r\nThe issue is not visual, but using visual studio's performance profiler, you can get the following proof of the memory increase:\r\n![image](https://user-images.githubusercontent.com/7962460/33757833-cf2bde72-dbf3-11e7-80d7-95e622baa2f5.png)\r\n\r\n### Reproduction Link\r\n[UWPMemoryLeakXamarinBugzilla.zip](https://github.com/xamarin/Xamarin.Forms/files/1542007/UWPMemoryLeakXamarinBugzilla.zip)\r\n\r\n### Diagnostics Session\r\n[Diagsession file](https://drive.google.com/file/d/1IIIKPGfeBye1bDyGlwt1-9suqkwnOW2c/)"},{"Id":"7572913825","Type":"PullRequestEvent","CreatedAt":"2018-04-23T16:10:22","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2530","RelatedDescription":"Opened pull request \"[UITests] Bump delay on UITest 32898\" (#2530) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTry fix failing test 32898, Works fine on emulators and devices , was tested on device with API23 .\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7574794093","Type":"IssuesEvent","CreatedAt":"2018-04-23T22:16:38","Actor":"zgramana","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3978","RelatedDescription":"Opened issue \"UIApplication.SharedApplication.Delegate.GetWindow() causes crash\" (#3978) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create X.Forms app.\r\n1. In iOS code, create a `[Dependency]` service with the following code in it:\r\n    ```csharp\r\n    var window = UIApplication.SharedApplication.Delegate.GetWindow();\r\n    ```\r\n1. Exercise the line of code above.\r\n\r\n### Expected Behavior\r\n```csharp\r\nDebug.Assert(window != null); //no-op\r\n```\r\n\r\n### Actual Behavior\r\n```\r\n[AppDelegate window]: unrecognized selector sent to instance 0x6080002088d0\r\n```\r\n\r\n### Environment\r\n\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: 03405723-9599-43ad-8c66-07d042449f83\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.1.0-preview1-001100-00\r\n\t1.0.5\r\n\t1.0.4\r\n\t1.0.3\r\n\t1.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\n\t1.0.3\r\n\t1.0.0-rc4-004771\r\n\t1.0.0-preview2.1-003155\r\n\t1.0.0-preview2-1-003177\r\n\t1.0.0-preview2-003121\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Community)\r\nAndroid SDK: ~/Library/Developer/Xamarin/android-sdk-mac_x86\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.2   (API level 17)\r\n\t\t4.3   (API level 18)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_73\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_73-b02)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.73-b02, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Community)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nDotNetCoreSupportAnyTargetFramework 1.0\r\nMSBuild Editor 2.0.3\r\nMicroFramework 1.0.3\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.12.6\r\nRedth's Addins 1.0.9\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7574615133","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:34:15","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3930","RelatedDescription":"Closed issue \"[XI]WatchOS Intent sample fail to build with MT4116 / NullReferenceException\" (#3930) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build watch intent sample from IDE or command line\r\n\r\n### Expected Behavior\r\nApp should build successfully\r\n### Actual Behavior\r\nApp fails to build with an error could not register the assembly xamarin.watchOS. This issue occurs only with watch intent sample. Watchkitcatalog is building successfully\r\n### Environment\r\n```\r\nhttps://gist.github.com/GouriKumari/49a33b1658478361ce0b177808b7fdbb\r\n```\r\n\r\n### Build Logs\r\n\r\nBuild Log: https://gist.github.com/GouriKumari/cca1bfb3a64d77a64e6e164b414e63b5\r\n\r\n### Regression:\r\nThis is working with d15-6, hence it is a regression in watch intent sample. This issue also occurs with latest XI from d15-7 11.10.1.170\n\n> VS bug [#599867](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/599867)"},{"Id":"7574258934","Type":"IssuesEvent","CreatedAt":"2018-04-23T20:23:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3874","RelatedDescription":"Closed issue \"[XI] MethodInfoTest.GetMethodBody (mscorlib test) failure on tvOS device\" (#3874) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update System to Xamarin.iOS, 966a6364, XI 11.9.2.25.pkg\r\n2. Execute mscorlib test on tvOS device\r\n\r\n### Expected Behavior\r\nAll tests should pass\r\n\r\n### Actual Behavior\r\n[FAIL] MethodInfoTest.GetMethodBody :   #3-2\r\n  Expected: True\r\n  But was:  False\r\n\r\n### Environment\r\n```\r\nMono                           5.10.1.31 \r\nVisual Studio for Mac          7.5.0.1048\r\nXamarin.iOS                    11.9.2.25 \r\n\r\n```\r\n\r\n### Build Logs\r\nBuild Log: http://xqa.blob.core.windows.net/gist/report-11c692125a094a248a65979a7e29e995.txt\r\nTest/Device Log: http://xqa.blob.core.windows.net/gist/mscorlib-tvos05-37-49c38e2c74bad7b1d5ec5a0f95289b4c0d5e90e85d05-37-49-f11c599ec5f444b68f6f52e675ee7f56.zip\r\n\r\n"},{"Id":"7574185257","Type":"IssuesEvent","CreatedAt":"2018-04-23T20:09:39","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3930","RelatedDescription":"Reopened issue \"[XI]WatchOS Intent sample fail to build with MT4116 / NullReferenceException\" (#3930) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build watch intent sample from IDE or command line\r\n\r\n### Expected Behavior\r\nApp should build successfully\r\n### Actual Behavior\r\nApp fails to build with an error could not register the assembly xamarin.watchOS. This issue occurs only with watch intent sample. Watchkitcatalog is building successfully\r\n### Environment\r\n```\r\nhttps://gist.github.com/GouriKumari/49a33b1658478361ce0b177808b7fdbb\r\n```\r\n\r\n### Build Logs\r\n\r\nBuild Log: https://gist.github.com/GouriKumari/cca1bfb3a64d77a64e6e164b414e63b5\r\n\r\n### Regression:\r\nThis is working with d15-6, hence it is a regression in watch intent sample. This issue also occurs with latest XI from d15-7 11.10.1.170\n\n> VS bug [#599867](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/599867)"},{"Id":"7573559751","Type":"PullRequestEvent","CreatedAt":"2018-04-23T18:08:59","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3957","RelatedDescription":"Merged pull request \"[build] Remove MT.D source build and replace it with a binary\" (#3957) at xamarin/xamarin-macios","RelatedBody":"This commit removes MonoTouch.Dialog from our source build and\r\nreplaces it with a binary from https://github.com/xamarin/macios-binaries/tree/c913506df2d106f9c073f211b7c66b03eefc89f2/MonoTouch.Dialog-Unified\r\n\r\nThe MT.D hash used in this commit is fixed to migueldeicaza/MonoTouch.Dialog@92c6e14"},{"Id":"7573434174","Type":"PullRequestEvent","CreatedAt":"2018-04-23T17:45:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3977","RelatedDescription":"Opened pull request \"[compare-commits] Create directory before trying to create files in it.\" (#3977) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7573387421","Type":"IssuesEvent","CreatedAt":"2018-04-23T17:37:24","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3976","RelatedDescription":"Opened issue \"\"-framework NetworkExtension\" not added by users of that API in XM\" (#3976) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new XM project and add this code somewhere `NEVpnManager manager = NEVpnManager.SharedManager` \r\n2. Build\r\n3. Note lack of -framework NetworkExtension anywhere in mmp's clang invocation\r\n\r\n### Expected Behavior\r\n\r\nJust like other frameworks reference the framework \r\n\r\n### Actual Behavior\r\n\r\nNo reference. This causes app store rejection - https://forums.xamarin.com/discussion/comment/328499\r\n\r\n### Environment\r\n\r\nStable\r\n\r\n### Build Logs\r\nhttps://gist.github.com/chamons/713b9c70026b2d851355833e9fedd75d"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"988493654808498176","CreatedAt":"2018-04-23T19:03:47+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/qyMCa5TERh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":14,"RawContent":null},{"Id":"988444639064666114","CreatedAt":"2018-04-23T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/lnoWKsVf6F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":14,"RawContent":null},{"Id":"988180901405364225","CreatedAt":"2018-04-22T22:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/WHbOgNnjfL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":15,"RawContent":null},{"Id":"987830341409832966","CreatedAt":"2018-04-21T23:08:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/VcwvXVvsi6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":106,"FavoriteCount":51,"RawContent":null},{"Id":"987416244490993664","CreatedAt":"2018-04-20T19:42:32+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":110,"FavoriteCount":49,"RawContent":null},{"Id":"987362257762967553","CreatedAt":"2018-04-20T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/4JyHATQW2I","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":17,"RawContent":null},{"Id":"986658974685679617","CreatedAt":"2018-04-18T17:33:25+00:00","UserScreenname":"xamarinhq","Text":"Automatic iOS app provisioning with #VS2017 15.7 Preview 3: https://t.co/vFjy3uXtie https://t.co/sLhjkaHc9X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":101,"FavoriteCount":54,"RawContent":null},{"Id":"986626430950920192","CreatedAt":"2018-04-18T15:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/piucqHprNe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":50,"RawContent":null},{"Id":"986268805629345792","CreatedAt":"2018-04-17T15:43:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/eK0geeikW6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":22,"RawContent":null},{"Id":"985953326079594496","CreatedAt":"2018-04-16T18:49:25+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":37,"RawContent":null},{"Id":"985907924479479811","CreatedAt":"2018-04-16T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/HMGMdGgDYr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":33,"RawContent":null},{"Id":"984843662428459008","CreatedAt":"2018-04-13T17:20:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/1JLVLvKR0M","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":26,"RawContent":null},{"Id":"984821292938465285","CreatedAt":"2018-04-13T15:51:07+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/KTX4gcGjqZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":12,"RawContent":null},{"Id":"984463408073408513","CreatedAt":"2018-04-12T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/tX03cw88GD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":15,"RawContent":null},{"Id":"984140279061020672","CreatedAt":"2018-04-11T18:45:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with new #XamarinForms #XAML IntelliSense functionality in #VisualStudio 2017: https://t.co/EPKoitU5bA https://t.co/JnlquxCZN9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":37,"RawContent":null},{"Id":"983738884319334400","CreatedAt":"2018-04-10T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build Xamarin.iOS from the source code in the second part of our four-part series on debugging… https://t.co/uVkITyoInQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"983374729166934016","CreatedAt":"2018-04-09T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/O4ILyulYAJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":27,"RawContent":null},{"Id":"983104477468266496","CreatedAt":"2018-04-08T22:09:07+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your Xamarin apps with Azure CosmosDB: https://t.co/acrN8gdJdS https://t.co/7dgtdHbqn9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":16,"RawContent":null},{"Id":"982728475831390208","CreatedAt":"2018-04-07T21:15:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/FGw0WVLZMU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2018-04-24T05:30:43.7613748Z","RunDurationInMilliseconds":4126}