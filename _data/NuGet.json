{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10456416940","Type":"IssuesEvent","CreatedAt":"2019-09-20T01:02:03","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7570","RelatedDescription":"Opened issue \"Command palette tabs jump around when switching them on package details page\" (#7570) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nCommand palette \r\n![image](https://user-images.githubusercontent.com/102933/65291132-dfa61100-db06-11e9-8556-d079a57e11b5.png)\r\ntabs shift back and forth when you switch between them.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to any package details page ([this](https://www.nuget.org/packages/Stateless/) works);\r\n2. Start clicking different tabs in command palette continuously;\r\n3. Notice that tabs on the right start to shift left and right;\r\n\r\n### Expected behavior\r\nTabs stay in their place.\r\n\r\n### Additional context\r\nThis happens because active tab has different font weight than inactive, making the tab wider when it is selected. There are enough decorations on the selected tab already (it has different color and it is underlined) that we could drop the font weight, I think."},{"Id":"10455931947","Type":"PullRequestEvent","CreatedAt":"2019-09-19T22:54:25","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7561","RelatedDescription":"Merged pull request \"Rewrite http images to https.\" (#7561) at NuGet/NuGetGallery","RelatedBody":"Rewrites all http images to https at display time.\r\nDoes not affect text in the actual md file; this is only a display time rewrite."},{"Id":"10454159203","Type":"IssuesEvent","CreatedAt":"2019-09-19T18:13:28","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7569","RelatedDescription":"Opened issue \"ImportAzureCdnStatistics fails on attempting to insert duplicate keys in Dimension_Package table\" (#7569) at NuGet/NuGetGallery","RelatedBody":"I see a lot of exceptions in the last month (around 150) regarding ImportAzureCdnStatistics attempting to insert duplicate keys into the `Dimension_Package` table.\r\n\r\n```\r\nCannot insert duplicate key row in object 'dbo.Dimension_Package' with unique index 'Dimension_Package_NCI_PackageId_PackageVersion'. The duplicate key value is (ssn_devsites_dal_standard, 1.0.26).\r\n```\r\n\r\nI believe the first time the job processes a download for a package version, it inserts a new row into this table, but it seems likely that if the job is processing multiple downloads for a new version simultaneously, it would try to insert the row simultaneously and fail at least once."},{"Id":"10446949001","Type":"IssuesEvent","CreatedAt":"2019-09-18T23:10:06","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7568","RelatedDescription":"Opened issue \"Statistics graphs Y axis labels are odd when labels are less than 1k apart\" (#7568) at NuGet/NuGetGallery","RelatedBody":"Each label is 360 apart, but all labels between 1k and 2k are displaying as \"1k\" instead of \"1079\", \"1439\", etc.\r\n\r\nI imagine the problem also reproduces with millions and billions, e.g. if each label was 360,000 apart.\r\n\r\n![image](https://user-images.githubusercontent.com/18014088/65193028-515e5c00-da2e-11e9-8d27-9915a65a8d76.png)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10455696866","Type":"IssuesEvent","CreatedAt":"2019-09-19T22:04:31","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8594","RelatedDescription":"Closed issue \"Investigate NuGet.Client tests timeout on MacOS\" (#8594) at NuGet/Home","RelatedBody":"We have some intermittent issues when running NuGet.Client tests on MacOS. We need to make sure that tests don't ran out of time."},{"Id":"10455117657","Type":"IssuesEvent","CreatedAt":"2019-09-19T20:31:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8602","RelatedDescription":"Closed issue \"Remove the deterministic switch in nuget.exe for 5.3\" (#8602) at NuGet/Home","RelatedBody":"Related: https://github.com/NuGet/Home/issues/8599"},{"Id":"10454967813","Type":"IssuesEvent","CreatedAt":"2019-09-19T20:08:57","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8535","RelatedDescription":"Closed issue \"Onboarding diagnostic files to IFeedbackDiagnosticFileProvider\" (#8535) at NuGet/Home","RelatedBody":"Please see email that I forwarded from @susanshi -- we should attempt to finish this sprint...or next - keeping Susan apprised of our timeline.\n\n(i think this is because we include a dgspec in our feedback reports to help understand more diagnostic info when somebody reports a problem.)"},{"Id":"10454863112","Type":"IssuesEvent","CreatedAt":"2019-09-19T19:53:40","Actor":"livarcocc","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8612","RelatedDescription":"Opened issue \"Warning NU1603 should include the approximate best match found in the message\" (#8612) at NuGet/Home","RelatedBody":"_From @basbossink on Thursday, September 19, 2019 4:05:34 PM_\r\n\r\n## Steps to reproduce\r\nCreate a project that depends on a pre-release package that is not available (yet).\r\n```sh\r\ndotnet restore\r\n```\r\n\r\n## Expected  behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.0 was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\nSo the feature request is to add the actual version that was resolved to the warning message, since that information is more useful than repeating the version of the package that caused the warning.\r\n\r\n## Actual behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match of Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1.debug was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/cli#12679_"},{"Id":"10454775807","Type":"IssuesEvent","CreatedAt":"2019-09-19T19:41:05","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8611","RelatedDescription":"Opened issue \"nu5129 should check `buildMultiTargeting`\" (#8611) at NuGet/Home","RelatedBody":"The rule currently checks `build`, `buildTransitive` and `buildCrossTargeting`, but not `buildMultiTargeting`"},{"Id":"10454369705","Type":"IssuesEvent","CreatedAt":"2019-09-19T18:42:56","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8608","RelatedDescription":"Closed issue \"Revert deterministic docs\" (#8608) at NuGet/Home","RelatedBody":""},{"Id":"10454164660","Type":"IssuesEvent","CreatedAt":"2019-09-19T18:14:15","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8514","RelatedDescription":"Closed issue \"Bug 959454: [PerfWatson] UIDelay\" (#8514) at NuGet/Home","RelatedBody":"microsoft.visualstudio.languageservices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService+<>c__DisplayClass_0+<<OnWorkspaceChanged>b__>d.MoveNext|nuget.packagemanagement.visualstudio.dll!NuGet.PackageManagement.VisualStudio.VsProjectAdapter.GetTargetFrameworkStringAsync"},{"Id":"10453929906","Type":"IssuesEvent","CreatedAt":"2019-09-19T17:42:08","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8606","RelatedDescription":"Closed issue \"Insertion of 5.3.0.6251\" (#8606) at NuGet/Home","RelatedBody":"- [ ] VS https://devdiv.visualstudio.com/DevDiv/_workitems/edit/984463\r\n- [x] CLI https://github.com/dotnet/cli/pull/12668\r\n- [x] SDK https://github.com/dotnet/sdk/pull/3653\r\n- [x] Toolset https://github.com/dotnet/toolset/pull/2920\r\n- [x] Vendor green\r\n- [x] Automation green\r\n- [ ] CLI into VS loop back \r\n\r\nfyi @rrelyea "},{"Id":"10453816174","Type":"IssuesEvent","CreatedAt":"2019-09-19T17:25:53","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8610","RelatedDescription":"Closed issue \"nuget pack does not include the `PackageIcon`\" (#8610) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.0.6192\r\n\r\nOS version: Microsoft Windows 10 Enterprise 10.0.14393\r\n\r\nWorked before? Not applicable, this is new feature of [NuGet 5.3](https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.3)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Clone https://github.com/NuGet/Samples/\r\n2. Run `dotnet build PackageIconExample\\PackageIconExample.csproj`\r\n3. Run `nuget pack PackageIconExample\\PackageIconExample.csproj`\r\n\r\nThe nupkg produced by the `dotnet build` command includes the icon.png.\r\nThe nupkg produced by the `nuget pack` command does **not** include the icon.png file.\r\n\r\nI'd like to have it working with the `nuget` command instead of the `dotnet` command because I am building on TeamCity and installing several versions of the NuGet.exe tool is easy and also because I don't want to install preview or release candidate versions of .NET Core on the TeamCity build agent.\r\n\r\nAm I missing an argument when running the `nuget` command? Is this a bug?\r\n\r\n### Verbose Logs\r\n\r\n```\r\nnuget pack PackageIconExample\\PackageIconExample.csproj -Verbosity detailed\r\nNuGet Version: 5.3.0.6192\r\nAttempting to build package from 'PackageIconExample.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.2.37902.0' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'c:\\Projects\\GitHub\\NuGet.Samples\\PackageIconExample\\bin\\Debug\\netstandard2.0'.\r\nAdd file 'c:\\Projects\\GitHub\\NuGet.Samples\\PackageIconExample\\bin\\Debug\\netstandard2.0\\PackageIconExample.dll' to package as 'lib\\netstandard2.0\\PackageIconExample.dll'\r\nWARNING: NU5115: Description was not specified. Using 'Description'.\r\n\r\nId: PackageIconExample\r\nVersion: 1.0.2\r\nAuthors: PackageIconExample\r\nDescription: Description\r\nDependencies:\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'lib/netstandard2.0/PackageIconExample.dll'.\r\nAdded file 'package/services/metadata/core-properties/253485c7be254c2eb4546d4b6dd61b19.psmdcp'.\r\nAdded file 'PackageIconExample.nuspec'.\r\n\r\nSuccessfully created package 'c:\\Projects\\GitHub\\NuGet.Samples\\PackageIconExample.1.0.2.nupkg'.\r\nWARNING: NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below:\r\n- Add a dependency group for .NETStandard2.0 to the nuspec\r\n````"},{"Id":"10452899930","Type":"IssuesEvent","CreatedAt":"2019-09-19T15:30:05","Actor":"0xced","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8610","RelatedDescription":"Opened issue \"nuget pack does not include the `PackageIcon`\" (#8610) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.0.6192\r\n\r\nOS version: Microsoft Windows 10 Enterprise 10.0.14393\r\n\r\nWorked before? Not applicable, this is new feature of [NuGet 5.3](https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.3)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Clone https://github.com/NuGet/Samples/\r\n2. Run `dotnet build PackageIconExample\\PackageIconExample.csproj`\r\n3. Run `nuget pack PackageIconExample\\PackageIconExample.csproj`\r\n\r\nThe nupkg produced by the `dotnet build` command includes the icon.png.\r\nThe nupkg produced by the `nuget pack` command does **not** include the icon.png file.\r\n\r\nI'd like to have it working with the `nuget` command instead of the `dotnet` command because I am building on TeamCity and installing several versions of the NuGet.exe tool is easy and also because I don't want to install preview or release candidate versions of .NET Core on the TeamCity build agent.\r\n\r\nAm I missing an argument when running the `nuget` command? Is this a bug?\r\n\r\n### Verbose Logs\r\n\r\n```\r\nnuget pack PackageIconExample\\PackageIconExample.csproj -Verbosity detailed\r\nNuGet Version: 5.3.0.6192\r\nAttempting to build package from 'PackageIconExample.csproj'.\r\nMSBuild auto-detection: using msbuild version '16.2.37902.0' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nPacking files from 'c:\\Projects\\GitHub\\NuGet.Samples\\PackageIconExample\\bin\\Debug\\netstandard2.0'.\r\nAdd file 'c:\\Projects\\GitHub\\NuGet.Samples\\PackageIconExample\\bin\\Debug\\netstandard2.0\\PackageIconExample.dll' to package as 'lib\\netstandard2.0\\PackageIconExample.dll'\r\nWARNING: NU5115: Description was not specified. Using 'Description'.\r\n\r\nId: PackageIconExample\r\nVersion: 1.0.2\r\nAuthors: PackageIconExample\r\nDescription: Description\r\nDependencies:\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'lib/netstandard2.0/PackageIconExample.dll'.\r\nAdded file 'package/services/metadata/core-properties/253485c7be254c2eb4546d4b6dd61b19.psmdcp'.\r\nAdded file 'PackageIconExample.nuspec'.\r\n\r\nSuccessfully created package 'c:\\Projects\\GitHub\\NuGet.Samples\\PackageIconExample.1.0.2.nupkg'.\r\nWARNING: NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below:\r\n- Add a dependency group for .NETStandard2.0 to the nuspec\r\n````"},{"Id":"10450366974","Type":"IssuesEvent","CreatedAt":"2019-09-19T10:22:34","Actor":"v-longmin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8609","RelatedDescription":"Opened issue \"[Test Failure] Install a package with PMC makes .Net Core “Default Project” is empty after setting package format is “Package Reference”\" (#8609) at NuGet/Home","RelatedBody":"## Details about Problem\r\nVS Version: D16.4 29318.156\r\nOS Version: Windows-10-Enterprise-19H1-04-05-2019.\r\n## Detailed repro steps \r\n1. Create a Console App (.Net Project) and set package format is “Package Reference” in setting General.\r\n2. File >New Project>ASP.NETCore WebApplication (.NetCore)>1.0/1.1/2.0 no authentication.\r\n3. Wait for the project restore completely.\r\n4. Tools - NuGet Package Manager - Package Manager Console.\r\n5. Run this: Install-Package Microsoft.EntityFrameworkCore.Tools -version 2.2.0.\r\n## Expected\r\n“Default Project” should show the project name correctly.\r\n## Actual\r\n “Default Project” is empty as below screenshot.\r\n![image](https://user-images.githubusercontent.com/40230425/65236023-48db5380-db0a-11e9-95cb-bc2af38c1c95.png)\r\n## Note\r\nThe issue only repro on .Net Core projects.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-09-20T05:30:44.2935056Z","RunDurationInMilliseconds":2841}