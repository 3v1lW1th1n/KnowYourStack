{"Data":{"Blog":{"FeedItems":[{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Next week, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. Starting...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: Releases, Previews, and Roadmaps!","PublishedOn":"2019-02-13T19:56:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. In this episode, we discuss the best of...","Href":"https://blog.xamarin.com/podcast-releases-previews-roadmaps/","RawContent":null},{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null},{"Title":"Using Existing C++ Libraries in Cross-Platform Xamarin.Forms Applications","PublishedOn":"2019-02-04T18:52:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are many libraries developed using C or C++ which can be brought to bear when creating Xamarin-based mobile apps such as those leveraged by Microsoft’s Hyperlapse Mobile and Pix Camera in order...","Href":"https://blog.xamarin.com/using-c-libraries-xamarin-forms-apps/","RawContent":null},{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9151668890","Type":"PullRequestEvent","CreatedAt":"2019-02-28T03:33:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2758","RelatedDescription":"Merged pull request \"[build] Drop requirement for MXE\" (#2758) at xamarin/xamarin-android","RelatedBody":"MXE is a source-only distribution to build the MinGW Windows cross-compiler\r\non Unix systems, along with a number of libraries and tools. We use it to\r\nbuild both Mono and Xamarin.Android for Windows.\r\n\r\nThe problem with MXE is that its build process is very fragile and also takes\r\na lot of time to complete. Additional issue is that the version of GCC it\r\nbuilds is quite ancient (5.4 as opposed to the current 8.2) and does not support\r\nthe latest C and C++ standards which prevents us from using C++17 features in XA.\r\n\r\nHowever, [Homebrew][0] now has a formula to install the latest MinGW toolchain with\r\nGCC 8.2 which allows us to drop MXE. The downside of using this pre-packaged MinGW\r\n(a very insignificant one) is that it does not come with any extra libraries or\r\nsoftware prebuilt for Windows and our build requires `zlib` which was previously built\r\nas part of MXE. That downside is easily worked around, however - we simply use our\r\nown Homebrew tap which has a formula that installs the Win32/Win64 zlib binary.\r\n\r\nThis commit drops MXE dependency in Xamarin.Android *only* - it does *not* remove this\r\ndependency from Mono. Mono will now provision its own copy of MXE and use it to build.\r\nThis will change at some point when [this PR][1] makes its way into Mono and, subsequently,\r\nto Xamarin.Android.\r\n\r\nAll the libraries we build for Windows that require zlib will link a *static* version\r\nof the library instead of using the dynamic one. This is safer than using the DLL because\r\nwe control what version of zlib is used and we leave no potential for breakage should a\r\n3rd party replace/remove/etc zlib1.dll from the target system.\r\n\r\n[0]: https://brew.sh\r\n[1]: https://github.com/mono/mono/pull/12434"},{"Id":"9150257616","Type":"PullRequestEvent","CreatedAt":"2019-02-27T22:00:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2767","RelatedDescription":"Merged pull request \"Xamarin Android PR pipeline build\" (#2767) at xamarin/xamarin-android","RelatedBody":"Builds on PR #2603 to enable Jenkins pipeline builds for Xamarin.Android PR builds; supporting both release and debug build workflows\r\n\r\nConfiguration settings based on the current xamarin-android PR freestyle build (https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-pr-builder-release/) have been folded into the pipeline build.groovy file.\r\n\r\nTest builds are currently being launched here:\r\nhttps://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-pipe-pr-eval/"},{"Id":"9146564242","Type":"IssuesEvent","CreatedAt":"2019-02-27T13:10:12","Actor":"IoTFier","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2769","RelatedDescription":"Opened issue \"Mipmap Icon Error\" (#2769) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1.  Create a new Xamarin.Forms based Android App\r\n2.  Create a set of adaptive icons using Image Asset Studio that comes with Android Studio. This process created a set of 6 mipmap folders including mipmap-anydpi-26 and 5 for hdpi to xxxhdpi resoutions. \r\n3.    If your Xamarin Forms based Android project doesn't have those mipmap folders then copy those folders as-is under Resources directory (that was my case originally when I got this error) OR  if those folders exist then copy corresponding icons related files from and to the respective folders.\r\n4.  Updated mainactivity class, AndroidManifest.xml <application> tag with mipmap based values for icon and roundicon. \r\n\r\nIt will result the compilation failing indicating with the error - \"error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/{iconname_background} | same for foreground layer. \r\n\r\nYour help in addressing this error will be appreciated.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n**Repro solution -** \r\n[AdaptiveIconsAndroid.zip](https://github.com/xamarin/xamarin-android/files/2910384/AdaptiveIconsAndroid.zip)\r\n\r\n\r\n### Expected Behavior\r\nXamarin Forms - Android App to compile successfully and render adaptive icon depending on the target device and its resolution.\r\n\r\n### Actual Behavior\r\nBuild fails with the errors - \r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_background').\r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_foreground').\r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon_round.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_background').\r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon_round.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_foreground').\r\n\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.7\r\nVisualStudio.15.Release/15.9.7+28307.423\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA059\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.7000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.7000.1\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCodeMaid   10.6.144\r\nCodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.8.0.6968\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.7000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.7000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Mesh Tools (Preview)   0.1\r\nMicrosoft Azure Service Fabric Mesh Tools (Preview)\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.4\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.7000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNode.js Tools   1.4.21001.1 Commit Hash:8dd15923800d931b153ab9e4de74e42a74eba5e6\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nNuProjPackage   1.0\r\nNuGet Package Project System\r\n\r\nPlantUml Language Service   1.0\r\nProvides basic editor features for working with the PlantUml programming language\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61901.24070\r\nMicrosoft SQL Server Data Tools\r\n\r\nStylerPackage Extension   1.0\r\nStylerPackage Visual Stuido Extension Detailed Info\r\n\r\nSyncfusion ASP.NET Core (Essential JS 2) Project Templates   16.4.0.52\r\nProvides project templates for creating an ASP.NET Core Web Application using Syncfusion Essential JS 2 components.\r\n\r\nSyncfusion EJ2 Web Conversion and Migration   13.4.0.53\r\nConverts and migrates a web project into a Syncfusion web project.\r\n\r\nSyncfusion Xamarin Toolbox   16.4.0.52\r\nSyncfusion Essential Studio for Xamarin Toolbox Visual Studio extension.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.421\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.80 (d15-9@914127c74)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.15 (d60abd1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n[BuildOutput.log.txt](https://github.com/xamarin/xamarin-android/files/2910378/BuildOutput.log.txt)\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9143270411","Type":"PullRequestEvent","CreatedAt":"2019-02-27T02:07:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2768","RelatedDescription":"Merged pull request \"[scripts] Check if the CrossCompiler is available.\" (#2768) at xamarin/xamarin-android","RelatedBody":"For PR builds we build i `Release` mode but we\r\ndont build the cross compiler tooling. As a result\r\nour `RunApkTests` will fail when try try to use\r\n`AotAssemblies` or `BundleAssemblies`.\r\n\r\nSo we should check that the tooling exists before\r\nwe try to use it."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9151862936","Type":"IssuesEvent","CreatedAt":"2019-02-28T04:33:42","Actor":"HobDev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5409","RelatedDescription":"Opened issue \"[Enhancement]build support for Xamarin.Forms in Visual studio for Mac 2019\" (#5409) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nLots of Xamarin.Forms developers use Mac for development. We Mac users also want to read, debug and contirbute to Xamarin.Forms repo. But as of now it is only possible with Visual Studio for Windows. \r\n\r\n## API Changes\r\n\r\nThis may need work on both Visual studio for Mac and Xamarin.Forms .\r\n\r\n\r\n## Intended Use Case\r\nNot all Xamarin.Forms developer have two development machines. They either use Mac or Windows. If Xamarin.Forms development is possible on both platforms lots of people will able to contribute.\r\n"},{"Id":"9151442048","Type":"PullRequestEvent","CreatedAt":"2019-02-28T02:32:58","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5342","RelatedDescription":"Merged pull request \"previewer; PageRenderer trap for missing bg image\" (#5342) at xamarin/Xamarin.Forms","RelatedBody":"Previewer team opened https://github.com/xamarin/Xamarin.Forms/issues/5300 which asks we scrub for all places where we throw if an image is not found. So, these change simply ignore missing images.\r\n"},{"Id":"9151437396","Type":"PullRequestEvent","CreatedAt":"2019-02-28T02:31:45","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5342","RelatedDescription":null,"RelatedBody":"Previewer team opened https://github.com/xamarin/Xamarin.Forms/issues/5300 which asks we scrub for all places where we throw if an image is not found. So, these change simply ignore missing images.\n\n> VS bug [#800041](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/800041)"},{"Id":"9151403530","Type":"IssuesEvent","CreatedAt":"2019-02-28T02:23:04","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5247","RelatedDescription":"Closed issue \"Xamarin.Forms 3.5.0.129452 ScrollView Orientation=\"Both\" crashes on Android\" (#5247) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nA content page with a ScrollView Orientation.Both will crash on Android when the ScrollView area is swiped.\r\nOrientation=\"Horizontal\" and Orientation=\"Vertical\" work as expected. \r\nSame XAML runs fine under iOS.\r\nReverting Android Xamarin.Forms back to build 3.4.0.1029999 cures the issue.\r\n  \r\n### Steps to Reproduce\r\n\r\n1. Create a minimalistic Android project with one content page with a ScrollView Orientation=\"Both\".\r\n2. Compile and run on a device.\r\n3. Swipe or touch the ScrollView area.\r\n\r\n### Expected Behavior\r\nShould scroll the content in either direction, as it did in prior builds. Should not crash the app.\r\n### Actual Behavior\r\nCrashes every time I swipe.\r\nI encountered the issue while preparing new production builds of 3 different apps. It took me 10 min to put together and run a test app to reproduce the issue.\r\n\r\n![screenshot_20190213-200734](https://user-images.githubusercontent.com/19241066/52755790-1e05ab80-2fcd-11e9-8052-2f4dc20fdb47.jpg)\r\n![screenshot_20190213-200900_samsung experience home](https://user-images.githubusercontent.com/19241066/52755791-1e9e4200-2fcd-11e9-85f3-a74faf375bc7.jpg)\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.5.0.129452\r\n- Last known good version: Xamarin.Forms 3.4.0.1029999\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n Xamarin.Forms 3.5.0.129452\r\nXamarin.Android.Support.Support.v4 2.8.0.0.1\r\n Xamarin.Android.Suppport.v7.App.Compat 2.8.0.0.1\r\nXamarin.Android.Support.v7.CardView 2.8.0.0.1\r\nXamarin.Android.Support.v7.MediaRouter 2.8.0.0.1\r\nNetStandard.Library 2.0.3\r\n- Affected Devices: Android\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9151403520","Type":"IssuesEvent","CreatedAt":"2019-02-28T02:23:04","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5161","RelatedDescription":"Closed issue \"NullReferenceException in ScrollViewRenderer XF 3.5\" (#5161) at xamarin/Xamarin.Forms","RelatedBody":"It seems in some cases LayoutSubviews can be called before SetElement. Then _shellScrollTracker is null.\r\nLet me know if you need more information. I can reproduce when I change oriention of device.\r\n\r\n- iOS SDK 12.1\r\n\r\n2019-02-07 17:07:40.518787+0100 NewsApp.iOS[98595:24576357] ConvertToNSExceptionAndAbort\r\n2019-02-07 17:07:40.519889+0100 NewsApp.iOS[98595:24576357] Inserted Xamarin Exception Stack Line!\r\n2019-02-07 17:07:40.520046+0100 NewsApp.iOS[98595:24576357] Name: System.NullReferenceException\r\n2019-02-07 17:07:40.520190+0100 NewsApp.iOS[98595:24576357] Message: System.NullReferenceException: Object reference not set to an instance of an objectXamarin Exception Stack:\r\n  at Xamarin.Forms.Platform.iOS.ScrollViewRenderer.LayoutSubviews () [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\ScrollViewRenderer.cs:122 \r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.11/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.11/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at NewsApp.iOS.Application.Main (System\r\n.String[] args) [0x00001] in C:\\FI\\DialogAll\\NewsApp\\NewsApp\\NewsApp.iOS\\Main.cs:17\r\n2019-02-07 17:07:40.560412+0100 NewsApp.iOS[98595:24576357] dynamic_cast error 2: One or more of the following type_info's  has hidden visibility.  They should all have public visibility.   N10__cxxabiv116__shim_type_infoE, id, N10__cxxabiv117__pbase_type_infoE.\r\n2019-02-07 17:07:40.560595+0100 NewsApp.iOS[98595:24576357] dynamic_cast error 2: One or more of the following type_info's  has hidden visibility.  They should all have public visibility.   N10__cxxabiv116__shim_type_infoE, id, N10__cxxabiv117__pbase_type_infoE.\r\n2019-02-07 17:07:40.560754+0100 NewsApp.iOS[98595:24576357] dynamic_cast error 2: One or more of the following type_info's  has hidden visibility.  They should all have public visibility.   N10__cxxabiv116__shim_type_infoE, id, N10__cxxabiv117__pbase_type_infoE.\r\nThe app has been terminated"},{"Id":"9151403510","Type":"IssuesEvent","CreatedAt":"2019-02-28T02:23:03","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5078","RelatedDescription":"Closed issue \"CollectionView SelectedItem not unselect if item out of view\" (#5078) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWith a CollectionView, if I select an item and scroll to select an other item ; if the first item is out of screen, the unselect not working. CF. Images\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Collection view\r\n2. Create many items\r\n3. Add: SelectionMode=\"Single\"\r\n\r\n### Expected Behavior\r\nUnselect the previous selection\r\n\r\n### Actual Behavior\r\nNot unselect if the previous selection is not show by the scroll\r\n\r\n### Basic Information\r\n\r\n- **Version with issue:** Xamarin.Forms 4.0\r\n- **Last known good version:** None\r\n- **IDE:** Visual Studio Windows\r\n- **Platform Target Frameworks:**\r\n  - **iOS:** None\r\n  - **Android:** 6.0\r\n  - **UWP: **None\r\n- **Android Support Library Version:**\r\n- **Nuget Packages:**\r\n- LiveXAML v2.1.59\r\n- Microsoft.NETCore.UniversalWindowsPlatform v6.1.9\r\n- NETStandard.Library v2.0.3\r\n- Newtonsoft.Json v12.0.1\r\n- Xamarin.Android.Support.Annotations v28.0.0.1\r\n- Xamarin.Android.Support.Compat v28.0.0.1\r\n- Xamarin.Android.Support.Core.UI v28.0.0.1\r\n- Xamarin.Android.Support.Core.Utils v28.0.0.1\r\n- Xamarin.Android.Support.Design v28.0.0.1\r\n- Xamarin.Android.Support.fragment v28.0.0.1\r\n- Xamarin.Android.Support.Media.Compat v28.0.0.1\r\n- Xamarin.Android.Support.Transition v28.0.0.1\r\n- Xamarin.Android.Support.v4 v28.0.0.1\r\n- Xamarin.Android.Support.v7.AppCompat v28.0.0.1\r\n- Xamarin.Android.Support.v7.CardView v28.0.0.1\r\n- Xamarin.Android.Support.v7.MediaRouter v28.0.0.1\r\n- Xamarin.Android.Support.v7.RecyclerView v28.0.0.1\r\n- Xamarin.Essentials v1.0.1\r\n- Xamarin.Forms v4.0.0.94569-pre3\r\n\r\n- **Affected Devices:** ASUS Zend\r\n\r\n### Screenshots\r\n**The collection:**\r\n![screenshot_20190128-154122](https://user-images.githubusercontent.com/22298309/51844632-ff898a00-2315-11e9-8d3f-8f3eb9139128.jpg)\r\n\r\n**I select the first item:**\r\n![screenshot_20190128-154126](https://user-images.githubusercontent.com/22298309/51844732-411a3500-2316-11e9-993c-f494f1ae15e1.jpg)\r\n\r\n**The second item:**\r\n![screenshot_20190128-154133](https://user-images.githubusercontent.com/22298309/51844817-876f9400-2316-11e9-8cad-4e09aa5955a5.jpg)\r\n\r\n**I scroll to the top of the list** (2 items are selected)\r\n![screenshot_20190128-154139](https://user-images.githubusercontent.com/22298309/51844866-9d7d5480-2316-11e9-9aa9-7b219bf8ceba.jpg)\r\n\r\n**I leave the 2 elements displayed on the screen and click on another frame. Everything is deselected normally.**\r\n![screenshot_20190128-154142](https://user-images.githubusercontent.com/22298309/51844927-c0a80400-2316-11e9-91de-0d99530da2ca.jpg)\r\n\r\n\r\n### Reproduction Link\r\n\r\n\r\n"},{"Id":"9151403508","Type":"PullRequestEvent","CreatedAt":"2019-02-28T02:23:03","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5397","RelatedDescription":"Closed pull request \"Catch exceptions thrown by TypeConverter when setting properties\" (#5397) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn `ApplyPropertiesVisitor.TrySetValue()`, catch and record any exception thrown by the TypeConverter and return false, rather than letting it throw.\r\n\r\nThe exception will later be thrown by `ApplyPropertiesVisitor.SetPropertyValue()`, but this change means `HydrationContext.ExceptionHandler` will be called if it has been set (rather than throwing the exception).\r\n\r\n### Issues Resolved ### \r\n\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/802696\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n* Manually tested exception is now passed to ExceptionHandler when running in the Previewer\r\n* Added a test to verify the above scenario\r\n* Manually tested exception still throws in non-Previewer scenarios.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9151349653","Type":"PullRequestEvent","CreatedAt":"2019-02-28T02:08:48","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5383","RelatedDescription":"Merged pull request \"[iOS, Android] Prevent NREs in ScrollViews\" (#5383) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#4522 added some new code paths to ScrollView renderers for Shell that can possibly cause NREs.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5161\r\n- fixes #5247\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n- For #5161, not quite sure how to repro, but the changes seem self-explanatory.\r\n- For #5247, run Bugzilla 41415 and try to manually scroll the yellow/red ScrollView. If it doesn't crash, success!\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9151342496","Type":"PullRequestEvent","CreatedAt":"2019-02-28T02:06:50","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5358","RelatedDescription":"Merged pull request \"[Android] Allow Renderer/Adapter to deselect ViewHolders not in child collection\" (#5358) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nViewHolders which are just off screen do not show up in the RecyclerView's child collection, but have not yet been recycled. So they are not visible to the ClearSelection method, nor are they de-selected during the recycling process.\r\n\r\nThese changes add tracking of the active ViewHolders so they can be directly de-selected, rather than iterating over the RecyclerView's child collection. \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5078\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Before/After Screenshots ### \r\n\r\nBefore:\r\n\r\n![5078_before](https://user-images.githubusercontent.com/538025/53293003-27d79d80-3789-11e9-9997-cd6bafa9a433.GIF)\r\n\r\nAfter:\r\n\r\n![5078_after](https://user-images.githubusercontent.com/538025/53293010-43db3f00-3789-11e9-886f-dbd0fd830259.GIF)\r\n\r\n\r\n### Testing Procedure ###\r\n\r\nIn Control Gallery, navigate to CollectionView Gallery -> Selection Galleries -> Preselected Item. Scroll down until the selected item is just off screen. Select another item. When you scroll back up, the original item should no longer be selected. \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9151312488","Type":"PullRequestEvent","CreatedAt":"2019-02-28T01:59:00","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5400","RelatedDescription":"Merged pull request \"[X] more conv exception, bubble to previewer\" (#5400) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCatch more exception cases, make sure the previewer can recover from them\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5397\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9151299816","Type":"PullRequestEvent","CreatedAt":"2019-02-28T01:55:41","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5408","RelatedDescription":"Opened pull request \"Revert \"[previewer] resilience on createvalue\"\" (#5408) at xamarin/Xamarin.Forms","RelatedBody":"Reverts xamarin/Xamarin.Forms#5369 per https://github.com/xamarin/Xamarin.Forms/pull/5171#issuecomment-467671840"},{"Id":"9151274453","Type":"PullRequestEvent","CreatedAt":"2019-02-28T01:49:12","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4999","RelatedDescription":"Merged pull request \"[Android, iOS] added re-measure of TimePicker after change value\" (#4999) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nadded re-measure of TimePicker after change value\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4961\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n### Before/After Screenshots ### \r\n\r\nBefore > After\r\n![screenshot_4](https://user-images.githubusercontent.com/27482193/51301166-49818e80-1a3f-11e9-84e3-ce26bd6ae080.png)\r\n\r\n### Testing Procedure ###\r\n\r\n- run UItest 4961\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9149667471","Type":"PullRequestEvent","CreatedAt":"2019-02-27T20:24:08","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5681","RelatedDescription":"Opened pull request \"[Tests] Fix failign mtouch tests after bcl test were removed.\" (#5681) at xamarin/xamarin-macios","RelatedBody":"After commit 2619d8f5ca1ce6c1d82eac5c796f52d18c1b8ca1 the System.Core\r\ntests does not longer exists. Which makes the mtouch test that depends\r\non it, fail too. This changes the test to use a present test."},{"Id":"9149335842","Type":"PullRequestEvent","CreatedAt":"2019-02-27T19:31:57","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5680","RelatedDescription":"Opened pull request \"[MetalPerformanceShaders] Fix some availability attributes\" (#5680) at xamarin/xamarin-macios","RelatedBody":"Fixes macOS 10.13 introspection tests, confirmed each of said change with docs."},{"Id":"9148806962","Type":"IssuesEvent","CreatedAt":"2019-02-27T18:09:09","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5679","RelatedDescription":"Opened issue \"[msbuild] No FrameworkList for XM Full other than 4.5, IDE reports missing assemblies\" (#5679) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n\r\nSimilar to https://github.com/xamarin/xamarin-macios/pull/5367\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new XM project\r\n2. Go to Project Options > Build > General > Xamarin.Mac Full\r\n3. Select anything other than .NET 4.5\r\n\r\n### Expected Behavior\r\n\r\nAssemblies in References should all be found.\r\n\r\n### Actual Behavior\r\n\r\n<img width=\"289\" alt=\"screenshot 2019-02-27 12 57 55\" src=\"https://user-images.githubusercontent.com/7839202/53512320-70949c80-3a90-11e9-9e5a-bc0f1dd565ee.png\">\r\n\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2019 Preview for Mac ===\r\n\r\nVersion 8.0 Preview (8.0 build 2530)\r\nInstallation UUID: 00d602ef-271b-479b-9054-0433b5797215\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518000266\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.0.266 (2018-08/29eb176dd97) (64-bit)\r\n\tPackage version: 518000266\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0-preview2-25407-01\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.500/Sdks\r\nSDK Versions:\r\n\t2.1.500\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0-preview2-006497\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.7.0.156 (Visual Studio Enterprise)\r\nHash: a03a0dfa3\r\nBranch: fix-vsts-801867\r\nBuild date: 2019-02-26 18:25:38-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.7.0.156 (Visual Studio Enterprise)\r\nHash: a03a0dfa3\r\nBranch: fix-vsts-801867\r\nBuild date: 2019-02-26 18:25:38-0500\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.366\r\nHash: b4b7c658d\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-02-18 13:35:26 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.2.0.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/vidondai/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08@163f45d81ce\r\nJava.Interop: xamarin/java.interop/d16-0@c987483\r\nLibZipSharp: grendello/LibZipSharp/master@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nMXE: xamarin/mxe/xamarin@b9cbb535\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.26.0@325e91a\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/vidondai/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.13\r\nHash: ec487ee\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-02-26 19:19:32 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800002530\r\nGit revision: b9bd60e9b9a0861393879c90863936e9c75c668a\r\nBuild date: 2019-02-27 14:00:07+00\r\nBuild branch: master\r\nXamarin extensions: af4010290a7e265c49e7d14d2684d8e8e0d984b9\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.3\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Thu Dec 20 20:46:53 PST 2018\r\n    root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nhttps://www.dropbox.com/s/zsrn2ickid4o7p6/SystemMemoryPain.zip?dl=0\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"9148636072","Type":"PullRequestEvent","CreatedAt":"2019-02-27T17:43:05","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5678","RelatedDescription":"Opened pull request \"[d16-0] [xm][msbuild] Fix full profile FrameworkList file\" (#5678) at xamarin/xamarin-macios","RelatedBody":"- Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/801867\r\n  System.Memory.dll not being copied anywhere when Roslyn package is referenced\r\n  The issue was that the XM FrameworkList was shared for the 2 profiles and there are differences. The Full profile for instance doesn't have `System.Memory` and that causes some issues with Nuget package references.\r\n- Updated tests to report issues against the XM Full and Mobile Framework lists\r\n- Now using 2 separate XM FrameworkList files (updated makefile) since the list of assemblies is different and that's expected by the mono team.\n\nBackport of #5674.\n\n/cc @VincentDondain "},{"Id":"9148610433","Type":"IssuesEvent","CreatedAt":"2019-02-27T17:39:13","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5672","RelatedDescription":"Closed issue \"System.Memory.dll not being copied anywhere when Roslyn package is referenced\" (#5672) at xamarin/xamarin-macios","RelatedBody":"Steps to reproduce:\r\n\r\n0. XM 5.6.0.23, Mono 5.18.0.266\r\n1. Create a new XM app\r\n2. Switch to XM Full: .NET 4.7.2\r\n3. Add a package reference to Microsoft.CodeAnalysis.Common 3.0.0-beta3-final\r\n4. Note that System.Memory is a dependency.\r\n5. Build\r\n\r\nExpected Results:\r\n\r\nSystem.Memory.dll ends up in output area and app bundle.\r\n\r\nActual Results:\r\n\r\nSystem.Memory.dll is nowhere to be found.\r\n\r\nThis report was originally from @sandyarmstrong internally."},{"Id":"9148606842","Type":"PullRequestEvent","CreatedAt":"2019-02-27T17:38:39","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5674","RelatedDescription":"Merged pull request \"[xm][msbuild] Fix full profile FrameworkList file\" (#5674) at xamarin/xamarin-macios","RelatedBody":"- Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/801867\r\n  System.Memory.dll not being copied anywhere when Roslyn package is referenced\r\n  The issue was that the XM FrameworkList was shared for the 2 profiles and there are differences. The Full profile for instance doesn't have `System.Memory` and that causes some issues with Nuget package references.\r\n- Updated tests to report issues against the XM Full and Mobile Framework lists\r\n- Now using 2 separate XM FrameworkList files (updated makefile) since the list of assemblies is different and that's expected by the mono team."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":70,"FavoriteCount":30,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":25,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":20,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":25,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":24,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":16,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":36,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":156,"FavoriteCount":74,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2019-02-28T05:31:20.2106145Z","RunDurationInMilliseconds":2475}