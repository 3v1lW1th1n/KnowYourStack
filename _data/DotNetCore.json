{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 Runtime and Compiler Features","PublishedOn":"2017-09-28T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post describes the new Runtime, Compiler and Base Class Library (BCL) improvements in the .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post.  BCL &#8211; .NET Standard 2.0 Support .NET Framework 4.7.1 has built-in support for .NET Standard 2.0. .NET Framework 4.7.1... <a aria-label=\"read more about .NET Framework 4.7.1 Runtime and Compiler Features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/","RawContent":null},{"Title":"Build a web service with F# and .NET Core 2.0","PublishedOn":"2017-09-26T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Earlier this year, I wrote about an update to the roadmap for F# and .NET Core. I had mentioned that there were a number of things you could build with F# and .NET Core today, such as web services. In this post, I&#8217;ll walk through building a web service with F# and .NET Core 2.0... <a aria-label=\"read more about Build a web service with F# and .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/","RawContent":null},{"Title":".NET Framework September 2017 Preview of Quality Rollup","PublishedOn":"2017-09-25T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Preview of Quality Rollup. This type of rollup is intended for businesses that want to the preview or use quality improvements as soon as they are available. This update applies to Windows 10 Update 1607 (Anniversary Update) and to Windows Server 2016. FYI: The KBs for Windows Server 2016... <a aria-label=\"read more about .NET Framework September 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":16,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":24,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":50,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6650451504","Type":"IssuesEvent","CreatedAt":"2017-09-28T16:22:10","Actor":"hughbe","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/87","RelatedDescription":"Opened issue \"PRs to repos outside of dotnet/* pattern should not always thank for signing the CLA\" (#87) at dotnet/home","RelatedBody":"For example: https://github.com/mono/libgdiplus/pull/109\r\n\r\nI have already signed the CLI. On the dotnet/corefx etc. projects, I don't get the extra message:\r\n\r\n```\r\n@hughbe,\r\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\r\nThanks,\r\n.NET Foundation Pull Request Bot\r\n```\r\n\r\nJust a small gripe, as I get an email each time I do this. I've seen this in Mono and Xunit.\r\n\r\n/cc @karelz I know this is unrelated to corefx but maybe you know the right person/repo to route this to :D\r\n"},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6645912196","Type":"IssuesEvent","CreatedAt":"2017-09-27T19:47:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/32","RelatedDescription":"Opened issue \".NET Framework 4.7.1 provides built-in support for .NET Standard 2.0\" (#32) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n.NET Framework 4.7.1 will have built-in support for .NET Standard 2.0. This means that you don't have to deploy any additional files or use binding redirects to use .NET Standard 2.0 libraries.\r\n\r\nFor a demo, check out [this video][video].\r\n\r\n## Details\r\n\r\nWhile libraries targeting [.NET Standard 2.0][ns20post] are can be consumed by applications and libraries [targeting .NET Framework 4.6.1][nstable] and higher, not all files that are required for .NET Standard libraries were part of .NET Framework 4.6.1. In fact, .NET Framework 4.6.1 was shipped before .NET Standard 2.0 was even designed. That's why building an application targeting .NET Framework 4.6.1 (as well as 4.6.2 and 4.7) will have to deploy additional files.\r\n\r\n* If you use **Visual Studio 2017 15.3** or higher, these files are automatically copied to the application's output folder.\r\n\r\n* If you use **Visual Studio 2015 and [use NuGet 3.6][nuget36]**, we'll prompt you to install a [support package][vs2015support] which will handle copying the files to the output directory.\r\n\r\nStarting with .NET Framework 4.7.1 these files no longer have to be deployed with the application -- they are built right into the .NET Framework itself.\r\n\r\n.NET Framework 4.7.1 also adds[about 200 missing APIs][missingapis] that were part of .NET Standard 2.0 but not actually implemented by .NET Framework 4.6.1, 4.6.2 or 4.7.\r\n\r\nThis also removes the need for [binding redirects][netfx-issues] when using .NET Standard libraries on .NET Framework because the CLR automatically unifies version numbers of assemblies that are part of the platform.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nDiscussion\r\n\r\nFor a discussion, please go to dotnet/standard#514.\r\n\r\n[ns20post]: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\r\n[nstable]: https://docs.microsoft.com/en-us/dotnet/standard/net-standard\r\n[nuget36]: https://dist.nuget.org/visualstudio-2015-vsix/v3.6.0/NuGet.Tools.vsix\r\n[vs2015support]: https://aka.ms/netstandard-build-support-netfx\r\n[missingapis]: https://github.com/dotnet/standard/blob/master/netstandard/src/ApiCompatBaseline.net461.txt\r\n[netfx-issues]: https://github.com/dotnet/standard/issues/481\r\n[video]: https://www.youtube.com/watch?v=u67Eu_IgEMs\r\n\r\nhttps://github.com/dotnet/standard/issues/514"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6660117292","Type":"PullRequestEvent","CreatedAt":"2017-10-01T20:01:42","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14281","RelatedDescription":"Opened pull request \"Cleanup some mixed type relop the JIT produces\" (#14281) at dotnet/coreclr","RelatedBody":"fgMorphRecognizeBoxNullable produces a TYP_REF/TYP_BOOL relop because it doesn't change the constant type from TYP_REF to TYP_INT.\r\n\r\nLoop cloning always produces TYP_LONG constants even though it doesn't support TYP_LONG iteration variables, limits etc.\r\n\r\nThese mixed type relops require lowering/codegen to do more work."},{"Id":"6660051973","Type":"IssuesEvent","CreatedAt":"2017-10-01T19:17:08","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14280","RelatedDescription":"Opened issue \"[RyuJIT] Morph produces a TYP_REF/TYP_BOOL compare\" (#14280) at dotnet/coreclr","RelatedBody":"When compiling `System.Collections.Generic.ObjectEqualityComparer``1[Nullable``1][System.Nullable``1[System.__Canon]]:LastIndexOf(ref,struct,int,int):int:this` morph produces an odd looking compare while removing a box operation:\r\n```\r\nfgMorphTree BB09, stmt 15 (before)\r\n               [000098] --CXG-------             *  JTRUE     void  \r\n               [000096] ------------             |  /--*  CNS_INT   ref    null\r\n               [000097] --CXG-------             \\--*  EQ        int   \r\n               [000095] --CXG-------                \\--*  CALL help ref    HELPER.CORINFO_HELP_BOX_NULLABLE\r\n               [000092] ------------ arg0              +--*  LCL_VAR   long   V09 tmp1         \r\n...\r\nGenTreeNode creates assertion:\r\n               [000289] ---X--------             *  ARR_LENGTH int   \r\nIn BB09 New Local Constant Assertion: V01 != null index=#02, mask=0000000000000002\r\n\r\nfgMorphTree BB09, stmt 15 (after)\r\n               [000098] ---XG+------             *  JTRUE     void  \r\n               [000096] -----+------             |  /--*  CNS_INT   ref    null\r\n               [000097] J--XG+-N----             \\--*  EQ        int   \r\n               [000299] R---G+------                |  /--*  IND       bool  \r\n               [000298] ----G-------                |  |  \\--*  ADDR      byref \r\n...\r\n```\r\nThis only works because lowering fixes such compares to be TYP_INT/TYP_INT or TYP_LONG/TYP_LONG compares. But the JIT should not generate such compares in the first place."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6660106128","Type":"IssuesEvent","CreatedAt":"2017-10-01T19:53:58","Actor":"flaviofrancisco","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7741","RelatedDescription":"Closed issue \"Try to deploy my asp.net core 2.0 website  - Unhandled Exception: System.FormatException: The short switch '-argFile' is not defined in the switch mappings.\" (#7741) at dotnet/cli","RelatedBody":"Hi guys;\r\n\r\nI'm trying to deploy my asp.net core 2.0 web site and I'm having the following error.\r\n\r\nThis is my Program.cs file:\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n    }\r\n\r\nThis is my Startup.cs\r\n\r\n  public class Startup\r\n    {\r\n        public IConfiguration Configuration { get; }\r\n\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n            \r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            // Assume AppConfiguration is a class representing a strongly-typed version of AppConfiguration section\r\n            services.AddLocalization(options => { options.ResourcesPath = \"Resources\"; });\r\n            services.AddDbContext<TaxiAnjoDbContext>(options => options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n            services.AddDbContext<AppDbContext>(options => options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n            services.AddIdentity<AppUser, AppRole>(options =>\r\n                {\r\n                    // Signin settings\r\n                    options.SignIn.RequireConfirmedEmail = true;\r\n                    options.SignIn.RequireConfirmedPhoneNumber = false;\r\n                })\r\n                .AddEntityFrameworkStores<AppDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.Configure<IdentityOptions>(options =>\r\n            {\r\n                options.Password.RequireDigit = true;\r\n                options.Password.RequiredLength = 8;\r\n                options.Password.RequireNonAlphanumeric = true;\r\n                options.Password.RequireUppercase = true;\r\n                options.Password.RequireLowercase = true;\r\n                options.Password.RequiredUniqueChars = 6;\r\n\r\n                options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(30);\r\n                options.Lockout.MaxFailedAccessAttempts = 10;\r\n                options.Lockout.AllowedForNewUsers = true;\r\n\r\n                options.User.RequireUniqueEmail = true;\r\n            });\r\n\r\n            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                // Cookie settings\r\n                options.Cookie.HttpOnly = true;\r\n                options.Cookie.Expiration = TimeSpan.FromDays(150);\r\n                options.LoginPath = \"/Account/Login\"; // If the LoginPath is not set here, ASP.NET Core will default to /Account/Login\r\n                options.LogoutPath = \"/Account/Logout\"; // If the LogoutPath is not set here, ASP.NET Core will default to /Account/Logout\r\n                options.AccessDeniedPath = \"/Account/AccessDenied\"; // If the AccessDeniedPath is not set here, ASP.NET Core will default to /Account/AccessDenied\r\n                options.SlidingExpiration = true;\r\n            });\r\n\r\n            services.AddTransient<IBaseRepository<UserType>, UserTypeRepository>();\r\n            services.AddMvc()\r\n                .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix, opts => { opts.ResourcesPath = \"Resources\"; })\r\n                .AddDataAnnotationsLocalization();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseAuthentication();\r\n            var supportedCultures = new[]\r\n            {\r\n                new CultureInfo(\"en\"),\r\n                new CultureInfo(\"en-US\"),\r\n                new CultureInfo(\"pt\"),\r\n                new CultureInfo(\"pt-BR\"),\r\n                new CultureInfo(\"fr\"),\r\n                new CultureInfo(\"fr-FR\"),\r\n                new CultureInfo(\"es\"),\r\n                new CultureInfo(\"es-ES\")\r\n            };\r\n\r\n            app.UseRequestLocalization(new RequestLocalizationOptions()\r\n            {\r\n                DefaultRequestCulture = new RequestCulture(\"en-US\"),\r\n                SupportedUICultures = supportedCultures,\r\n                SupportedCultures = supportedCultures,\r\n                RequestCultureProviders = new List<IRequestCultureProvider>() { new CookieRequestCultureProvider() }\r\n            });\r\n\r\n            loggerFactory.AddConsole();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(appBuilder =>\r\n                {\r\n                    appBuilder.Run(async context =>\r\n                    {\r\n                        context.Response.StatusCode = 500;\r\n                        await context.Response.WriteAsync(\"An unexpected fault happened. Try again later\");\r\n                    });\r\n                });\r\n            }\r\n            \r\n            app.UseStatusCodePages();\r\n            app.UseMvcWithDefaultRoute();\r\n        }\r\n\r\nUnhandled Exception: System.FormatException: The short switch '-argFile' is not defined in the switch mappings.\r\n   at Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load()\r\n   at Microsoft.Extensions.Configuration.ConfigurationRoot..ctor(IList`1 providers)\r\n   at Microsoft.Extensions.Configuration.ConfigurationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at TaxiAnjo.Program.Main(String[] args) in C:\\Projects\\TaxiAnjo\\TaxiAnjo\\Program.cs:line 16\r\n\r\nThanks for the help;\r\nFlavio"},{"Id":"6660077740","Type":"IssuesEvent","CreatedAt":"2017-10-01T19:34:36","Actor":"flaviofrancisco","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7741","RelatedDescription":"Opened issue \"Try to deploy my asp.net core 2.0 website \" (#7741) at dotnet/cli","RelatedBody":"Hi guys;\r\n\r\nI'm trying to deploy my asp.net core 2.0 web site and I'm having the following error.\r\n\r\nThis is my Program.cs file:\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n    }\r\n\r\nThis is my Startup.cs\r\n\r\n  public class Startup\r\n    {\r\n        public IConfiguration Configuration { get; }\r\n\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n            \r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            // Assume AppConfiguration is a class representing a strongly-typed version of AppConfiguration section\r\n            services.AddLocalization(options => { options.ResourcesPath = \"Resources\"; });\r\n            services.AddDbContext<TaxiAnjoDbContext>(options => options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n            services.AddDbContext<AppDbContext>(options => options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n            services.AddIdentity<AppUser, AppRole>(options =>\r\n                {\r\n                    // Signin settings\r\n                    options.SignIn.RequireConfirmedEmail = true;\r\n                    options.SignIn.RequireConfirmedPhoneNumber = false;\r\n                })\r\n                .AddEntityFrameworkStores<AppDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.Configure<IdentityOptions>(options =>\r\n            {\r\n                options.Password.RequireDigit = true;\r\n                options.Password.RequiredLength = 8;\r\n                options.Password.RequireNonAlphanumeric = true;\r\n                options.Password.RequireUppercase = true;\r\n                options.Password.RequireLowercase = true;\r\n                options.Password.RequiredUniqueChars = 6;\r\n\r\n                options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(30);\r\n                options.Lockout.MaxFailedAccessAttempts = 10;\r\n                options.Lockout.AllowedForNewUsers = true;\r\n\r\n                options.User.RequireUniqueEmail = true;\r\n            });\r\n\r\n            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                // Cookie settings\r\n                options.Cookie.HttpOnly = true;\r\n                options.Cookie.Expiration = TimeSpan.FromDays(150);\r\n                options.LoginPath = \"/Account/Login\"; // If the LoginPath is not set here, ASP.NET Core will default to /Account/Login\r\n                options.LogoutPath = \"/Account/Logout\"; // If the LogoutPath is not set here, ASP.NET Core will default to /Account/Logout\r\n                options.AccessDeniedPath = \"/Account/AccessDenied\"; // If the AccessDeniedPath is not set here, ASP.NET Core will default to /Account/AccessDenied\r\n                options.SlidingExpiration = true;\r\n            });\r\n\r\n            services.AddTransient<IBaseRepository<UserType>, UserTypeRepository>();\r\n            services.AddMvc()\r\n                .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix, opts => { opts.ResourcesPath = \"Resources\"; })\r\n                .AddDataAnnotationsLocalization();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n        {\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseAuthentication();\r\n            var supportedCultures = new[]\r\n            {\r\n                new CultureInfo(\"en\"),\r\n                new CultureInfo(\"en-US\"),\r\n                new CultureInfo(\"pt\"),\r\n                new CultureInfo(\"pt-BR\"),\r\n                new CultureInfo(\"fr\"),\r\n                new CultureInfo(\"fr-FR\"),\r\n                new CultureInfo(\"es\"),\r\n                new CultureInfo(\"es-ES\")\r\n            };\r\n\r\n            app.UseRequestLocalization(new RequestLocalizationOptions()\r\n            {\r\n                DefaultRequestCulture = new RequestCulture(\"en-US\"),\r\n                SupportedUICultures = supportedCultures,\r\n                SupportedCultures = supportedCultures,\r\n                RequestCultureProviders = new List<IRequestCultureProvider>() { new CookieRequestCultureProvider() }\r\n            });\r\n\r\n            loggerFactory.AddConsole();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(appBuilder =>\r\n                {\r\n                    appBuilder.Run(async context =>\r\n                    {\r\n                        context.Response.StatusCode = 500;\r\n                        await context.Response.WriteAsync(\"An unexpected fault happened. Try again later\");\r\n                    });\r\n                });\r\n            }\r\n            \r\n            app.UseStatusCodePages();\r\n            app.UseMvcWithDefaultRoute();\r\n        }\r\n\r\nUnhandled Exception: System.FormatException: The short switch '-argFile' is not defined in the switch mappings.\r\n   at Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load()\r\n   at Microsoft.Extensions.Configuration.ConfigurationRoot..ctor(IList`1 providers)\r\n   at Microsoft.Extensions.Configuration.ConfigurationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at TaxiAnjo.Program.Main(String[] args) in C:\\Projects\\TaxiAnjo\\TaxiAnjo\\Program.cs:line 16"},{"Id":"6659937319","Type":"IssuesEvent","CreatedAt":"2017-10-01T17:56:57","Actor":"cjqed","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7740","RelatedDescription":"Opened issue \"dotnet add package errors out if any source fails to resolve\" (#7740) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Add a nuget source `nuget sources add -Name xxx -Source https://my_local_nuget_server/nuget/...`\r\n2. Take the nuget source offline (in my case, it's locked down behind a VPN I was not connected to)\r\n3. Attempt to add a package that exists from public sources, e.g. `dotnet add package dapper`\r\n4. The add package fails because the previous source is offline:\r\n\r\n```\r\ninfo : Adding PackageReference for package 'dapper' into project \r\nlog  : Restoring packages for \r\ninfo :   GET http://my_offline_nuget_server/nuget/FindPackagesById()?id='dapper'\r\nlog  : Retrying 'FindPackagesByIdAsyncCore' for source 'http://my_offline_nuget_server/nuget/FindPackagesById()?id='dapper''.\r\nlog  : An error occurred while sending the request.\r\nlog  :   The server name or address could not be resolved\r\ninfo :   GET http://my_offline_nuget_server/nuget/FindPackagesById()?id='dapper'\r\ninfo :   GET https://www.nuget.org/api/v2/FindPackagesById()?id='dapper'\r\nlog  : Retrying 'FindPackagesByIdAsyncCore' for source 'http://my_local_nuget_server/nuget/FindPackagesById()?id='dapper''.\r\nlog  : An error occurred while sending the request.\r\nlog  :   The server name or address could not be resolved\r\ninfo :   GET http://my_local_nuget_server/nuget/FindPackagesById()?id='dapper'\r\nerror: Failed to retrieve information about 'dapper' from remote source 'http://my_local_nuget_server/nuget/FindPackagesById()?id='dapper''.\r\nerror:   An error occurred while sending the request.\r\nerror:   The server name or address could not be resolved\r\n\r\n```\r\n\r\n## Expected  behavior\r\nIf the package exists in public repositories, warnings should be logged but the package should be downloaded.\r\n\r\n## Actual behavior\r\nThe package is not downloaded, the command fails to execute.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (1.1.0)\r\n\r\nProduct Information:\r\n Version:            1.1.0\r\n Commit SHA-1 hash:  d6f4336106\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.10586\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.1.0\r\n```\r\n\r\nNot sure if this is an intentional decision in case a user has a more up-to-date version of a package they are expecting to get from their offline source, but accidentally get a different one. If so, please close this issue. However, I would expect that a warning be logged and the best, available match be downloaded.\r\n\r\nThank you."},{"Id":"6658761766","Type":"PullRequestEvent","CreatedAt":"2017-09-30T23:49:55","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/7734","RelatedDescription":null,"RelatedBody":"@dotnet/dotnet-cli "},{"Id":"6658603655","Type":"IssuesEvent","CreatedAt":"2017-09-30T21:27:24","Actor":"mklement0","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7739","RelatedDescription":"Opened issue \"Calling .NET Core executables via symlinks on Windows should be supported\" (#7739) at dotnet/cli","RelatedBody":"Trying to call a .NET Core 2.0 `*.exe` file via a symbolic link doesn't work as-is, resulting in the following error message:\r\n\r\n    The managed DLL bound to this executable: '<original-name>.dll', did not match own \r\n    name '<symlink-name>.dll'.\r\n    A fatal error was encountered. This executable was not bound to load a managed DLL.\r\n\r\nThe idea is to **use a symlink to provide an efficient, shell-agnostic way to invoke an executable by a shorter name** (without having to resort to shell-specific aliases or cumbersome wrapper batch files) - **just like on Unix platforms, where this scenario is already supported**.\r\n\r\nThis came up while discussing [a shell-agnostic way to invoke PowerShell Core with a shorter name](https://github.com/PowerShell/PowerShell/issues/4214).\r\n\r\n---\r\n\r\n### Steps to reproduce\r\n\r\nRun the following from an _elevated PowerShell_ prompt on (64-bit) _Windows_:\r\n\r\nCreate a hello-world project with executable `foo.exe` in `%TEMP%\\foo`:\r\n\r\n    PS> Set-Location (mkdir $env:Temp/foo)\r\n    PS> dotnet new console\r\n    PS> dotnet publish -c Release -r win-x64\r\n\r\nInvoke the resulting executable, which works fine:\r\n\r\n    PS> .\\bin\\Release\\netcoreapp2.0\\win-x64\\foo.exe\r\n    Hello World!\r\n\r\nNow create a symlink named `fooL.exe` that points to the executable and try to invoke it:\r\n\r\n    PS> cmd /c mklink fooL.exe .\\bin\\Release\\netcoreapp2.0\\win-x64\\foo.exe\r\n    PS> .\\fooL.exe  # !! Fails as of .NET Core 2.0\r\n    \r\nThis results in the error message cited at the top.\r\n\r\nNote that creating the symlink *without extension* (`fooL` instead of `fooL.exe`) _half_ works: \r\n\r\n  * From `cmd.exe`, you can't call this symlink as an executable at all.\r\n  * PowerShell _does_ allow invocation and even succeeds in calling the target executable with the arguments specified, but invariably runs it in a _new_ console window.\r\n\r\n---\r\n\r\nUse `Set-Location ~; Remove-Item -Recurse $env:TEMP/foo` to remove the temp. directory afterwards.\r\n"},{"Id":"6658314370","Type":"PullRequestEvent","CreatedAt":"2017-09-30T17:43:50","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7738","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-25730-01 (master)\" (#7738) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6658225537","Type":"IssuesEvent","CreatedAt":"2017-09-30T16:37:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7736","RelatedDescription":"Closed issue \"dotnet new mvc fails to restore\" (#7736) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet new mvc\r\ndotnet restore\r\n\r\n## Expected  behavior\r\nRestore succeeds.\r\n\r\n## Actual behavior\r\n```\r\nE:\\delete\\test>dotnet restore\r\n  Restoring packages for E:\\delete\\test\\test.csproj...\r\n  Restoring packages for E:\\delete\\test\\test.csproj...\r\nE:\\delete\\test\\test.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.All with version (>= 2.1.0-preview1-26751)\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 4 version(s) in nuget.org [ Nearest version: 2.0.0 ]\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 0 version(s) in Package source\r\nE:\\delete\\test\\test.csproj : error NU1102: Unable to find package Microsoft.VisualStudio.Web.CodeGeneration.Tools with version (>= 2.1.0-preview1-26751)\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 15 version(s) in nuget.org [ Nearest version: 2.0.0 ]\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 4 version(s) in Microsoft Visual Studio Offline Packages [ Nearest version: 1.1.0-preview4-final ]\r\nE:\\delete\\test\\test.csproj : error NU1102:   - Found 0 version(s) in Package source\r\nC:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\NuGet.targets(102,5): error : Value cannot be null. [E:\\delete\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\NuGet.targets(102,5): error : Parameter name: path [E:\\delete\\test\\test.csproj]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.0-preview1-007228)\r\n\r\nProduct Information:\r\n Version:            2.1.0-preview1-007228\r\n Commit SHA-1 hash:  28a1f7e9d6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-25719-04\r\n  Build    : b5c917c0b24171ae27c7cfcfd2617b1088d41c11\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"6657281957","Type":"IssuesEvent","CreatedAt":"2017-09-30T03:05:45","Actor":"netroby","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7737","RelatedDescription":"Opened issue \"Feature request, compile dotnet to one self contained executable file\" (#7737) at dotnet/cli","RelatedBody":"This is a feature request. The current dotnet build result (even self contained build) will output a executable file and much more dll.\r\nCan we built them all in one single executable file?\r\n\r\ngolang/rust can build into one executable file(which good for redistribute). hope dotnet have the same ability "}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6659512216","Type":"IssuesEvent","CreatedAt":"2017-10-01T12:45:22","Actor":"jogibear9988","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/521","RelatedDescription":"Opened issue \"Error loading a WPF App (Net 4.6.2) referncing NetStandart 2.0 Dlls\" (#521) at dotnet/standard","RelatedBody":"I have a huge Solution wich using over 50 Assemblys. Some of them Target Netstandart 2.0, some older Versions.\r\n\r\nNow I have the following error during Startup:\r\n\r\nDie Datei oder Assembly \"System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" oder eine Abhängigkeit davon wurde nicht gefunden. Die gefundene Manifestdefinition der Assembly stimmt nicht mit dem Assemblyverweis überein. (Ausnahme von HRESULT: 0x80131040)\r\nDateiname: \"System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" ---> System.IO.FileLoadException: Die Datei oder Assembly \"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" oder eine Abhängigkeit davon wurde nicht gefunden. Die gefundene Manifestdefinition der Assembly stimmt nicht mit dem Assemblyverweis überein. (Ausnahme von HRESULT: 0x80131040)\r\nDateiname: \"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"\r\n\r\nbut I have the Assembly Redirect:\r\n\r\n  <dependentAssembly>\r\n                <assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n                <bindingRedirect oldVersion=\"0.0.0.0-4.1.1.0\" newVersion=\"4.1.1.0\" />\r\n            </dependentAssembly>\r\n\r\nIn my app.config! What can I do?"},{"Id":"6657495023","Type":"PullRequestEvent","CreatedAt":"2017-09-30T06:27:41","Actor":"voltagex","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/520","RelatedDescription":"Opened pull request \"Add more explicit instructions for installing Microsoft.Packaging.Tools.Trimming\" (#520) at dotnet/standard","RelatedBody":"Solves https://github.com/dotnet/standard/issues/518"},{"Id":"6657489636","Type":"IssuesEvent","CreatedAt":"2017-09-30T06:22:43","Actor":"voltagex","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/519","RelatedDescription":"Opened issue \"error MSB4018: The \"TrimFiles\" task failed unexpectedly.\" (#519) at dotnet/standard","RelatedBody":"I have done the following:\r\n* Installed Microsoft.Packaging.Tools.Trimming version 1.1.0-preview1-25729-01\r\n* Set up my .csproj to include `<TrimUnusedDependencies>true</TrimUnusedDependencies>` as per https://github.com/dotnet/standard/blob/release/2.0.0/Microsoft.Packaging.Tools.Trimming/docs/trimming.md\r\n\r\n\r\n```\r\n>------ Rebuild All started: Project: Music, Configuration: Debug Any CPU ------\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: The \"TrimFiles\" task failed unexpectedly.\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: System.ArgumentNullException: Value cannot be null.\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: Parameter name: source\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute()\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n1>Done building project \"Music.csproj\" -- FAILED.\r\n```\r\n\r\nAny clues? This is pretty much the MVC template from the 2.0.0 SDK."},{"Id":"6657469160","Type":"IssuesEvent","CreatedAt":"2017-09-30T06:03:47","Actor":"voltagex","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/518","RelatedDescription":"Opened issue \"Microsoft.Packaging.Tools.Trimming package can't be found\" (#518) at dotnet/standard","RelatedBody":"VS2017, .NET Core 2.0.\r\n\r\nThe instructions in https://github.com/dotnet/standard/blob/release/2.0.0/Microsoft.Packaging.Tools.Trimming/docs/trimming.md say to install `Microsoft.Packaging.Tools.Trimming` however I can't locacte that package.\r\n\r\n```\r\nPM> Install-Package Microsoft.Packaging.Tools.Trimming\r\nInstall-Package : Unable to find package 'Microsoft.Packaging.Tools.Trimming'\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.Packaging.Tools.Trimming\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nTime Elapsed: 00:00:01.2276512\r\nPM> \r\n```"},{"Id":"6657075642","Type":"PullRequestEvent","CreatedAt":"2017-09-30T00:35:13","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/516","RelatedDescription":"Merged pull request \"Add developer metaphor for .NET Standard\" (#516) at dotnet/standard","RelatedBody":"Based on @davidfowl's [gist](https://gist.github.com/davidfowl/8939f305567e1755412d6dc0b8baf1b7)"},{"Id":"6656669297","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:39:50","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/517","RelatedDescription":"Merged pull request \"Update prerelease label to 'servicing'\" (#517) at dotnet/standard","RelatedBody":"@weshaggard @Petermarcu "},{"Id":"6656492672","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:50:34","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/517","RelatedDescription":"Opened pull request \"Update prerelease label to 'servicing'\" (#517) at dotnet/standard","RelatedBody":"@weshaggard @Petermarcu "},{"Id":"6656052612","Type":"PullRequestEvent","CreatedAt":"2017-09-29T18:57:50","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/516","RelatedDescription":"Opened pull request \"Add developer metaphor for .NET Standard\" (#516) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6660764639","Type":"PullRequestEvent","CreatedAt":"2017-10-02T03:30:23","Actor":"jpelcis","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24369","RelatedDescription":"Opened pull request \"Change CookieContainer to return all relevant cookies\" (#24369) at dotnet/corefx","RelatedBody":"Test case and fix for #24368.\r\n\r\nAdding a new non-matching cookie could cause matching cookies to not be returned."},{"Id":"6660739153","Type":"IssuesEvent","CreatedAt":"2017-10-02T03:16:10","Actor":"jpelcis","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24368","RelatedDescription":"Opened issue \"CookieContainer doesn't return all relevant cookies\" (#24368) at dotnet/corefx","RelatedBody":"Adding a new non-matching cookie can prevent matching cookies from being found.\r\n\r\n```c#\r\nvar uri1 = new Uri(\"http://www.example.com/\");\r\nvar uri2 = new Uri(\"http://www.example.com/level1/\");\r\nvar uri3 = new Uri(\"http://www.example.com/level1/level2a\");\r\nvar uri4 = new Uri(\"http://www.example.com/level1/level2b\");\r\nvar cookieContainer = new CookieContainer();\r\n\r\ncookieContainer.Add(new Cookie(\"cookie1\", \"value1\", uri1.AbsolutePath, uri1.Host));\r\ncookieContainer.Add(new Cookie(\"cookie2\", \"value2\", uri2.AbsolutePath, uri2.Host));\r\ncookieContainer.Add(new Cookie(\"cookie3\", \"value3\", uri3.AbsolutePath, uri3.Host));\r\n\r\nvar beforeCount = cookieContainer.GetCookies(uri3).Count;\r\nConsole.WriteLine(beforeCount); // 3\r\n\r\ncookieContainer.Add(new Cookie(\"cookie4\", \"value4\", uri4.AbsolutePath, uri4.Host));\r\n\r\nvar afterCount = cookieContainer.GetCookies(uri3).Count;\r\nConsole.WriteLine(afterCount); // 2\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6660559461","Type":"IssuesEvent","CreatedAt":"2017-10-02T01:29:46","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22461","RelatedDescription":"Opened issue \"Refactoring Compiler Tools\" (#22461) at dotnet/roslyn","RelatedBody":"I'm look at refactoring some of the compiler tools, so they can utilise upto date language features. abstractions and readability.\r\n * [BoundNodeClassWriter](https://github.com/dotnet/roslyn/blob/master/src/Tools/Source/CompilerGeneratorTools/Source/BoundTreeGenerator/BoundNodeClassWriter.cs)\r\nThis can be made abstract so the language specific aspects are implement in a derived class.\r\n * [SyntaxGenerator Tools should throw exceptions.](https://github.com/dotnet/roslyn/issues/22131)\r\nImplement better reporting of issues and errors.\r\n * [Syntax.xml](https://github.com/dotnet/roslyn/blob/master/src/Compilers/VisualBasic/Portable/Syntax/Syntax.xml)\r\nCould do with better documentation on it's usage and expected structuring.\r\n * [BoundNodes.xml](https://github.com/dotnet/roslyn/blob/master/src/Compilers/VisualBasic/Portable/BoundTree/BoundNodes.xml)\r\nCould do with better documentation on it's usage and expected structuring.\r\n"},{"Id":"6660539153","Type":"PullRequestEvent","CreatedAt":"2017-10-02T01:17:01","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22460","RelatedDescription":"Opened pull request \"Made BoundNodeClassWriter an abstract class.\" (#22460) at dotnet/roslyn","RelatedBody":"Pulling the language specific parts into derived classes."},{"Id":"6660523236","Type":"IssuesEvent","CreatedAt":"2017-10-02T01:07:23","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21134","RelatedDescription":"Reopened issue \"ContainsChildrenGraphQuery.GetGraphicAsync crashes due to invalid characters in path\" (#21134) at dotnet/roslyn","RelatedBody":"This is from this community item: https://developercommunity.visualstudio.com/content/problem/76525/creating-a-nuget-package-from-uwp-library-using-th.html and it is likely a .NET Core project.\r\n\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.GetExtension(String path)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.Progression.ContainsChildrenGraphQuery.<GetGraphAsync>d__0.MoveNext()\r\n```"},{"Id":"6659828626","Type":"IssuesEvent","CreatedAt":"2017-10-01T16:40:07","Actor":"Korporal","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22459","RelatedDescription":"Opened issue \"Tuples and Attributes\" (#22459) at dotnet/roslyn","RelatedBody":"I'm using VS 2017.\r\n\r\nI tried to create a simple attribute class who's constructor accepts a single Tuple of type (some-enum,string). This compiles.\r\n\r\nHowever when I try to attach the attribute to some member in some class I get CS0181 \"Attribute constructor parameter 'Parameters' has type '(API.Disposition, string)', which is not a valid attribute parameter type\".\r\n\r\nThe attribute use in this case looks like this:\r\n\r\n`            [QueryParameters((Optional,\"gradeType\"))]\r\n`\r\n\r\nIf it's not a valid parameter type why does the attribute class itself compile fine?\r\n\r\n\r\n\r\n"},{"Id":"6658981141","Type":"PullRequestEvent","CreatedAt":"2017-10-01T03:48:07","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22414","RelatedDescription":"Merged pull request \"Ensure partial method implementation is completed when needed\" (#22414) at dotnet/roslyn","RelatedBody":"**Customer scenario**\r\n\r\nPlace an attribute on a parameter of a partial implementation, where the attribute is the only thing that causes some using to be required. Then refactor \"remove unnecessary usings\". The bug is that the required using is removed.\r\n\r\n**Bugs this fixes:**\r\n\r\nFixes #18348\r\n\r\n**Workarounds, if any**\r\n\r\nDon't place attributes on partial method implementation parameters.\r\n\r\n**Risk**\r\n\r\nVery low. The change is trivial.\r\n\r\n**Performance impact**\r\n\r\nTiny. A small amount of additional logic is executed for partial methods.\r\n\r\n**Is this a regression from a previous update?**\r\n\r\nThis has been a bug in Roslyn since VS2015.\r\n\r\n**How was the bug found?**\r\n\r\nCustomer reported.\r\n\r\n**Test documentation updated?**\r\n\r\nN/A\r\n"},{"Id":"6658981140","Type":"IssuesEvent","CreatedAt":"2017-10-01T03:48:07","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/18348","RelatedDescription":"Closed issue \"False positive \"Using directive is unnecessary\" in partial classes\" (#18348) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 2017 (15.0.26228.10) / Roslyn 2.0.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nPartial class file 1:\r\n```C#\r\nusing RoslynCodeAnalysisTests.Attributes;\r\n\r\nnamespace RoslynCodeAnalysisTests\r\n{\r\n    public partial class PartialClass\r\n    {\r\n        partial void PartialMethod([MyAttr] string a)\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nPartial class file 2:\r\n```C#\r\nusing RoslynCodeAnalysisTests.Attributes;\r\n\r\nnamespace RoslynCodeAnalysisTests\r\n{\r\n    [MyAttr]\r\n    public partial class PartialClass\r\n    {\r\n        partial void PartialMethod(string a);\r\n    }\r\n}\r\n```\r\n\r\n=> Roslyn shows \"Using directive is unnecessary\" in file 1 for `using RoslynCodeAnalysisTests.Attributes` which is wrong.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/388796/24554311/59f8c318-162d-11e7-9ff8-1dfdc1755065.png)\r\n\r\n\r\n**Expected Behavior**:\r\nDo not show \"Using directive is unnecessary\". It makes my compilation failing when doing this.\r\n\r\nBTW: When executing the corresponding quick-fix it doesn't change anything.\r\n"},{"Id":"6658980052","Type":"PullRequestEvent","CreatedAt":"2017-10-01T03:46:58","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22458","RelatedDescription":"Opened pull request \"Report warning (always false) when testing null using pattern-is\" (#22458) at dotnet/roslyn","RelatedBody":"REQUIRES COMPAT COUNCIL SIGNOFF\r\n\r\n**Customer scenario**\r\n\r\nIf you have an expression `e is T`, where the expression `e` ends up being a constant null, the compiler reports that the expression is always false. But if you add an identifier after the type, the warning unexpectedly vanishes.\r\n\r\n**Bugs this fixes:**\r\n\r\nFixes #20103\r\n\r\n**Workarounds, if any**\r\n\r\nN/A\r\n\r\n**Risk**\r\n\r\nVery low. We just add the missing diagnostic.\r\n\r\n**Performance impact**\r\n\r\nOnly a trivial change to the execution path. Unlikely to be any measurable perf impact.\r\n\r\n**Is this a regression from a previous update?**\r\n\r\nNo.\r\n\r\n**Root cause analysis:**\r\n\r\nWe did not attempt to duplicate the warnings from one construct when implementing the other.\r\n\r\n**How was the bug found?**\r\n\r\nCustomer reported.\r\n\r\n**Test documentation updated?**\r\n\r\nN/A\r\n\r\n**Compatibility**\r\n\r\nThis would technically be a breaking change, as it adds a warning where there was none before. The compatibility council will be consulted before this change is integrated.\r\n\r\n@dotnet/roslyn-compiler Please review.\r\n\r\n"},{"Id":"6658707893","Type":"PullRequestEvent","CreatedAt":"2017-09-30T22:59:02","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22407","RelatedDescription":"Merged pull request \"Remove PROTOTYPE markers from \"private protected\" feature\" (#22407) at dotnet/roslyn","RelatedBody":"Fixes #22244\r\nRelated to #22406\r\n\r\nThis is a comment-only change, to remove PROTOTYPE comments and replace by open issues.\r\n\r\n@jcouv Please review and approve for 15.5.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6657342354","Type":"PullRequestEvent","CreatedAt":"2017-09-30T03:55:55","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4620","RelatedDescription":"Merged pull request \"Add placeholder build option for WebAssembly\" (#4620) at dotnet/corert","RelatedBody":"This commit adds a placeholder build target for WebAssembly to the bash and batch build scripts (#4504).\r\n\r\nAt present, an error is displayed advising that the wasm build is not yet implemented before exiting.\r\n\r\nI was hoping to try and take a look at the cmake scripts for #4505, and this seemed like a sensible first step. "},{"Id":"6656625845","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:27:02","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4639","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4639) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6656429635","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:33:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4638","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#4638) at dotnet/corert","RelatedBody":""},{"Id":"6656429216","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:33:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4638","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#4638) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"912821941706268673","CreatedAt":"2017-09-26T23:31:24+00:00","UserScreenname":"dotnet","Text":"Build a web service with F# and .NET Core 2.0 https://t.co/2jSgo1gbty","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":112,"FavoriteCount":64,"RawContent":null},{"Id":"912406212238442498","CreatedAt":"2017-09-25T19:59:27+00:00","UserScreenname":"dotnet","Text":".NET Framework September 2017 Preview of Quality Rollup https://t.co/tkuoBxjYHC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":19,"RawContent":null},{"Id":"911357565769936896","CreatedAt":"2017-09-22T22:32:30+00:00","UserScreenname":"dotnet","Text":".NET Core September 2017 Update — macOS High Sierra Support https://t.co/k9gJ5jFIN8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":24,"RawContent":null},{"Id":"911015945291919360","CreatedAt":"2017-09-21T23:55:01+00:00","UserScreenname":"dotnet","Text":"Last one! Happening now on .NET Fundamentals Track @ #dotNETConf: Learn how to use #FSharp to write front-end &amp; bac… https://t.co/OH8cMAcq4I","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":26,"FavoriteCount":16,"RawContent":null},{"Id":"911005750410960896","CreatedAt":"2017-09-21T23:14:31+00:00","UserScreenname":"dotnet","Text":"PSA: .NET Framework September Update - known issues published https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"911000845860458498","CreatedAt":"2017-09-21T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Get started w/ #FSharp, .NET Core &amp; #VSCode. Watch… https://t.co/VRkwBvSNPU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":31,"FavoriteCount":15,"RawContent":null},{"Id":"910988157197344768","CreatedAt":"2017-09-21T22:04:36+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 Accessibility and WPF Improvements https://t.co/eZLFQxhlLj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":52,"RawContent":null}]}},"RunOn":"2017-10-02T05:30:19.0246743Z","RunDurationInMilliseconds":6474}