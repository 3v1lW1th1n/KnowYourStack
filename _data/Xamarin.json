{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 4.1.0 Stable Now Available","PublishedOn":"2019-07-08T16:34:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are happy to announce Xamarin.Forms 4.1 availability on NuGet. Our 3.0.0 series of releases focused heavily on growing Xamarin.Forms by filling in the gaps. We learned that this should be...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-1-0-stable-now-available/","RawContent":null},{"Title":"iOS 13 Preview Release Now Available","PublishedOn":"2019-07-03T17:48:38+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are excited to share our first preview release focused on support for iOS 13 and Xcode 11! With today&#8217;s preview, you can begin building applications using Xcode 11 and start...","Href":"https://devblogs.microsoft.com/xamarin/ios-13-xcode-11/","RawContent":null},{"Title":"Xamarin and .NET Community Developer Events in July","PublishedOn":"2019-07-01T19:49:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Jumpstart your next mobile development project by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/july-xamarin-net-developer-events/","RawContent":null},{"Title":"Styling for Multiple Device Resolutions","PublishedOn":"2019-06-28T18:26:56+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Guest Post: Charlin Agramonte is a Microsoft MVP and co-founder of CrossGeeks. She writes Xamarin articles in her blog http://xamgirl.com/. Find her on twitter as @Chard003.\nA few months ago we...","Href":"https://devblogs.microsoft.com/xamarin/styling-for-multiple-device-resolutions/","RawContent":null},{"Title":"Migrating MacOS Apps to 64-bit Before the Apple Transition","PublishedOn":"2019-06-26T19:27:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has been moving towards 64-bit only applications on macOS for a number of releases. Last June, Apple started requiring Apps on the macOS App Store to be 64-bit only and macOS 10.13.4 and above...","Href":"https://devblogs.microsoft.com/xamarin/apple-transition-migrate-macos-apps-to-64-bit/","RawContent":null},{"Title":"Faster Xamarin.Android Builds & Smaller Dex Files","PublishedOn":"2019-06-24T18:02:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"One of our current focus areas in Xamarin.Android is build performance. The &#8220;inner dev loop&#8221; directly impacts developer productivity&#8211;the time it takes to make a small code change and...","Href":"https://devblogs.microsoft.com/xamarin/dex-counting-xamarin-android-improved/","RawContent":null},{"Title":"Get Started with Free Xamarin Training on Microsoft Learn","PublishedOn":"2019-06-21T19:10:22+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Learn how to build cross-platform mobile applications on Android and iOS with the new Xamarin.Forms content on Microsoft Learn. The new and completely free platform where you can earn points and...","Href":"https://devblogs.microsoft.com/xamarin/microsoft-learn-free-xamarin-training/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio for Mac","PublishedOn":"2019-06-19T18:21:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Visual Studio 2019 for Mac version 8.2 is officially available as a preview. Now featuring significant improvements to the XAML editing experience for Xamarin developers. The Xamarin.Forms XAML...","Href":"https://devblogs.microsoft.com/xamarin/xaml-intellisense-vs4m-xamarin-forms/","RawContent":null},{"Title":"Automatic Android SDK Management","PublishedOn":"2019-06-17T20:24:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"As a mobile developer building apps for Android, there are many tools used under the hood to build, deploy, and debug your Android applications. We know this can be an intimidating process. So to...","Href":"https://devblogs.microsoft.com/xamarin/automatic-android-sdk-management/","RawContent":null},{"Title":"Xamarin Podcast: Xamarin.Forms 4 And So Much More!","PublishedOn":"2019-06-14T16:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xamarin-forms-4/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9972436018","Type":"PullRequestEvent","CreatedAt":"2019-07-09T05:15:15","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3337","RelatedDescription":"Opened pull request \"Remove __XA_DSO_IN_APK in favor of runtime checks\" (#3337) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3298\r\nContext: https://github.com/xamarin/xamarin-android/issues/3298#issuecomment-509022428\r\n\r\nWe have discovered through our current preview of Android App Bundles\r\nin 16.2: the state of `android:extractNativeLibs` with app bundles can\r\nchange on a per-device basis.\r\n\r\nThe comment from `bundletool`'s source code:\r\n\r\n    // If persistent app is not installable on external storage, only the split APKs targeting\r\n    // devices above Android M should be uncompressed. If the persistent app is installable on\r\n    // external storage only split APKs targeting device above Android P should be uncompressed (as\r\n    // uncompressed native libraries crashes with ASEC external storage and support for ASEC\r\n    // external storage is removed in Android P). Instant apps always support uncompressed native\r\n    // libraries (even on Android L), because they are not always executed by the Android platform.\r\n    boolean shouldCompress =\r\n\r\nhttps://github.com/google/bundletool/blob/5ac94cb61e949f135c50f6ce52bbb5f00e8e959f/src/main/java/com/android/tools/build/bundletool/splitters/NativeLibrariesCompressionSplitter.java#L75-L86\r\n\r\nThat means we cannot decide the value of `__XA_DSO_IN_APK` at build\r\ntime, or know what the appropriate value should be!\r\n\r\nInstead, we can check the value of `ApplicationInfo.flags` at runtime\r\nfor `FLAG_EXTRACT_NATIVE_LIBS`:\r\n\r\nhttps://developer.android.com/reference/kotlin/android/content/pm/ApplicationInfo#flag_extract_native_libs\r\n\r\nWe will have to check this value on the Java side, and pass it through\r\n`Runtime.init`.\r\n\r\nThis means we can kill the `__XA_DSO_IN_APK` environment variable\r\ncompletely.\r\n\r\nOther changes:\r\n\r\n* I added a new `Runtime.initInternal` method so we can adjust\r\n  parameters without breaking the designer. `Runtime.init` can remain\r\n  with its signature unchanged.\r\n* I adjusted all tests around embedded dsos appropriately."},{"Id":"9972299839","Type":"IssuesEvent","CreatedAt":"2019-07-09T04:36:09","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3336","RelatedDescription":"Opened issue \"In projects configured to use AAPT2, invalid Android resource elements added after an initial successful design-time build do not produce errors during subsequent incremental builds\" (#3336) at xamarin/xamarin-android","RelatedBody":"### Steps to reproduce\r\n\r\n1. Create a new **Android App (Xamarin) > Single View App** project.\r\n2. Add a new XML file `Resources\\values\\ids.xml` that has an intentionally invalid element:\r\n    ```xml\r\n    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n    <resources>\r\n      <item/>\r\n    </resources>\r\n    ```\r\n3. **Build > Build Solution**. If this build fails with no error due to <https://github.com/xamarin/xamarin-android/issues/2427>, then repeat the build again. If the build succeeds, then you can stop at this step. If the build instead fails correctly with the expected `APT0000` error, then complete the additional steps 4â€“7 to see the problem.\r\n4. Exclude `ids.xml` from the solution by highlighting the file in the Solution Explorer and then selecting **Project > Exclude From Project**.\r\n5. **Build > Build Solution**. (Note: This build might fail with no error on the first attempt due to <https://github.com/xamarin/xamarin-android/issues/2427>. If so, repeat the build again until it succeeds.)\r\n6. Re-include `ids.xml` into the project.\r\n7. **Build > Build Solution**. (Again, repeat the build if needed to work around <https://github.com/xamarin/xamarin-android/issues/2427>.)\r\n\r\nIf it's more convenient, you can also use command line builds to reproduce the issue:\r\n\r\n<details>\r\n\r\n1. After creating the project and adding the `ids.xml` file, delete the `.vs` directory, the `obj` and `bin` directories, and the `Resources\\Resource.designer.cs` file. Then build the project on the command line:\r\n    \r\n    ```cmd\r\n    msbuild -restore .\\AndroidApp1.sln\r\n    ```\r\n\r\n2. Edit the `.csproj` file in a text editor to remove the `<AndroidResource Include=\"Resources\\values\\ids.xml\" />` item.\r\n3. Build the solution again.\r\n4. Edit the `.csproj` file to add back the `ids.xml` item.\r\n5. Build the solution again.\r\n\r\n</details>\r\n\r\n### Expected behavior\r\n\r\nThe build should fail at both step 3 and step 7 with the following error:\r\n\r\n```\r\n1>C:\\Temp\\AndroidApp1\\AndroidApp1\\Resources\\values\\ids.xml(2): error APT0000: <item> must have a 'type' attribute.\r\n1>C:\\Temp\\AndroidApp1\\AndroidApp1\\Resources\\values\\ids.xml : error APT0000: file failed to compile.\r\n```\r\n\r\nRebuilding the solution with **Build > Rebuild Solution** after either step 3 or step 7 produces this correct result.\r\n\r\nSetting `$(AndroidUseAapt2)` to `false` also leads to the correct result.\r\n\r\n### Actual behavior\r\n\r\nThe build succeeds.\r\n\r\nOut of curiosity, I tried a quick experiment where I set `$(AndroidUseManagedDesignTimeResourceGenerator)` to `false` and repeated the steps. That did *not* change this particular behavior.\r\n\r\n### Version information\r\n\r\nXamarin.Android SDK   9.4.0.34 (d16-2/7cce305)\r\n\r\nMicrosoft Visual Studio Enterprise 2019 Int Preview\r\nVersion 16.2.0 Preview 4.0 \\[29027.242.d16.2stg\\]\r\nVisualStudio.16.IntPreview/16.2.0-pre.4.0+29027.242.d16.2stg\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\n### Log file\r\n\r\n[MSBuildBinlogs.zip](https://github.com/xamarin/xamarin-android/files/3371176/MSBuildBinlogs.zip)"},{"Id":"9971521757","Type":"IssuesEvent","CreatedAt":"2019-07-09T00:53:54","Actor":"AlenToma","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3335","RelatedDescription":"Opened issue \"[Bug] Problem enabling Use Fast Development\" (#3335) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\ncant emulate my android project when enabling `Use Fast Development`.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Enable `Use Fast Development`\r\n2. Rebuild\r\n3. Run on my samsung s9 edge\r\n\r\n### Expected Behavior\r\nthe app should start on the mobile\r\n### Actual Behavior\r\nthe app start and then shutdown directly without any errors.\r\nas for visual studio, the emulator stop\r\n### Basic Information\r\n\r\n- Version with issue: 4.1.0.555618\r\n- Last known good version: hmm dont remember really, i think 4.0.0.425677\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 9.0\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices: samsung s9 edge\r\n"},{"Id":"9971165961","Type":"PullRequestEvent","CreatedAt":"2019-07-08T23:11:17","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3334","RelatedDescription":"Closed pull request \"[build] Test designer provisioning changes\" (#3334) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9971086897","Type":"PullRequestEvent","CreatedAt":"2019-07-08T22:51:30","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3333","RelatedDescription":"Closed pull request \"Bump to xamarin/monodroid@fb3d022\" (#3333) at xamarin/xamarin-android","RelatedBody":"Improves commercial build support for new Android API levels."},{"Id":"9970378332","Type":"PullRequestEvent","CreatedAt":"2019-07-08T20:35:30","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3334","RelatedDescription":null,"RelatedBody":""},{"Id":"9970096503","Type":"PullRequestEvent","CreatedAt":"2019-07-08T19:50:05","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3334","RelatedDescription":"Closed pull request \"[build] Test designer provisioning changes\" (#3334) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9969051391","Type":"PullRequestEvent","CreatedAt":"2019-07-08T17:02:03","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3334","RelatedDescription":"Opened pull request \"[build] Test designer provisioning changes\" (#3334) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9972320581","Type":"PullRequestEvent","CreatedAt":"2019-07-09T04:42:12","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6542","RelatedDescription":"Closed pull request \"[Shell] NavigationHandler hooks\" (#6542) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFirst set of proposed changes for shell NavigationHandler hooks\r\n\r\n- fixes #5166"},{"Id":"9972167309","Type":"PullRequestEvent","CreatedAt":"2019-07-09T03:56:25","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6826","RelatedDescription":"Opened pull request \"replace removeallviews with RemoveAllViewsInLayout\" (#6826) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9972001501","Type":"PullRequestEvent","CreatedAt":"2019-07-09T03:09:49","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6825","RelatedDescription":"Opened pull request \"profile OnCreate; add ProfilePage\" (#6825) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9971921616","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:47:46","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5739","RelatedDescription":"Closed pull request \"FIX: Navigation.InsertBefore() didn't update toolbar back button when inserting before the first page\" (#5739) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNavigation.InsertBefore() didn't update toolbar \"back\"/\"menu\" button if inserting before the first page (index 0)\r\n\r\n### Issues Resolved ### \r\n\r\nBoth Android & iOS renderers are affected (in a different way). The fix addresses both.\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n### Testing Procedure ###\r\n\r\n[FormsTest.zip](https://github.com/xamarin/Xamarin.Forms/files/3019490/FormsTest.zip)\r\n\r\nPress Insert, and the Menu button should change to a back button as a new page has been inserted before the current one. Once inserted, press Remove to remove the previous page and the back button should change back to Menu button.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9971917841","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:46:42","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5299","RelatedDescription":"Closed pull request \"[Android/iOS Visual] added disabled text button color effect\" (#5299) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded a `DisabledTextColor` property to the `Button` - element. This property can be used to change the text color of a `Button` in its disabled state.\r\n\r\n### Issues Resolved ### \r\n- fixes #5399\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `Xamarin.Forms.Color` Button.DisabledTextColor { get; set; } //Bindable Property\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nA user can use this bindable property to change the text color of the button in its disabled state.\r\n\r\n### Before/After Screenshots ### \r\nBEFORE\r\n![simulator screen shot - iphone 6 - 2019-02-18 at 13 16 22](https://user-images.githubusercontent.com/19551873/52950528-be6a2000-337f-11e9-8eb7-4153e3eacb9a.png)\r\nAFTER (With `DisabledTextColor` set on `Green`)\r\n![simulator screen shot - iphone 6 - 2019-02-18 at 13 18 28](https://user-images.githubusercontent.com/19551873/52950549-cb870f00-337f-11e9-90b1-bf5d9ab72f44.png)\r\n\r\n### Testing Procedure ###\r\nAdd the `DisabledTextColor` to a `Button` and assign it a sample `Xamarin.Forms.Color` - value.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n\r\n###Notes###\r\nContributions made by the entire **3factr** - team.\r\n"},{"Id":"9971915805","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:46:10","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5296","RelatedDescription":"Closed pull request \"[Android/iOS visual] Button max lines property\" (#5296) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdded a new `MaxLines` - property to the `Button` - element. \r\n\r\n### Issues Resolved ### \r\nNone.\r\n\r\n### API Changes ###\r\nAdded \r\n - int Button.MaxLines { get; set; } // Bindable Property;\r\n\r\n### Platforms Affected ### \r\n- XAML\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nThe user can add a `MaxLines` property to a `Button` to show multiple lines of text on a button.\r\n\r\n### Before/After Screenshots ### \r\nBEFORE\r\n![simulator screen shot - iphone 6 - 2019-02-18 at 09 11 50](https://user-images.githubusercontent.com/19551873/52936744-6d493480-335d-11e9-9edc-b748ac58f009.png)\r\nAFTER\r\n![simulator screen shot - iphone 6 - 2019-02-18 at 09 11 22](https://user-images.githubusercontent.com/19551873/52936755-720de880-335d-11e9-847b-fcd487df9ddf.png)\r\n\r\n### Testing Procedure ###\r\nAdd the property `MaxLines` to a `Button` in a sample app and add a sample text to test.\r\n\r\n### PR Checklist ###\r\n\r\n- [  ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ x ] Rebased on top of the target branch at time of PR\r\n- [ x ] Changes adhere to coding standard\r\n\r\n### Notes ###\r\nContributions made by the entire **3factr** - team"},{"Id":"9971902027","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:42:24","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4994","RelatedDescription":"Closed pull request \"Removed redundant ItemTemplateSelector prop from BindableLayout\" (#4994) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nHi guys. From my point of view ItemTemplateSelectorProperty will confuse developers as it is not clear what it the priority of choosing ItemTemplate and ItemTemplateSelector.\r\nBesides **DataTemplateSelector** inherits **DataTemplate** and definitely there is no need in ItemTemplateSelectorProperty (Like we have in **ListView** control)\r\n\r\nSince **BindableLayout** is fresh class, i suggest to mark this property as obsolete and remove in further releases.\r\n\r\n\r\n### API Changes ###\r\nSuggest to remove BindableLayout.**ItemTemplateSelectorProperty**\r\n\r\n\r\n### Platforms Affected ### \r\n- Core\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n"},{"Id":"9971898232","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:41:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4705","RelatedDescription":"Closed pull request \"[WIP] Updating the Material Visual to v72.2.0 + Alerts\" (#4705) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThe main point of this PR is to start a discussion on how to style non-element things. A button is fine with a `Visual` property. Different ones on a page will look weird, but still just an appearance.\r\n\r\nPopups, alerts, etc will look bad if each button pops up a different style depending on which page or which control launched it.\r\n\r\n**Options**\r\n - ~~new alert overload for material~~ (pre-crossed as this is evil, pure evil)\r\n - page-based visual: material pages show material popups\r\n    - page passes current visual to alert arguments\r\n    - alert implementation looks up page visual\r\n - app-based/global visual: the app decides on the style\r\n    - alert implementation looks up visual\r\n - more...\r\n\r\nReopened: https://github.com/xamarin/Xamarin.Forms/pull/4704"},{"Id":"9971895830","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:40:44","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4529","RelatedDescription":"Closed pull request \"[WIP] support compiled binding to arrays\" (#4529) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAllow bindings to arrays to be compiled.\r\nThis is still work in progress, I still have to fix\r\n- setters\r\n- handlers\r\n- value types arrays\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4524\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9971891258","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:39:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3245","RelatedDescription":"Closed pull request \"1. Android Resource manager now picks up image files stored in mipmapâ€¦\" (#3245) at xamarin/Xamarin.Forms","RelatedBody":"â€¦ directories as well as drawable directories. 2. The workaround for F# resources using the Resources_Drawable class no longer applies and has been removed.\r\n\r\n### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ###\r\n\r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #3244\r\n\r\n### API Changes ###\r\n\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem -->\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9971955546","Type":"IssuesEvent","CreatedAt":"2019-07-09T02:57:10","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6530","RelatedDescription":"Opened issue \"MPSCnnConvolutionDataSource.Load should be a method, not a read-only property\" (#6530) at xamarin/xamarin-macios","RelatedBody":"The Load() method of data sources loads the data source into the command buffer and commits it. That is, it's a very stateful operation and not at all safe to call at random times (especially from the debugger).\r\n\r\nIt should have been bound as a parameterless method, not as a readonly property. \r\n\r\ncc @dalexsoto who did the bindings\r\n\r\n```objc\r\n-(BOOL) load{\r\n    @autoreleasepool{\r\n        MPSCommandBuffer *commandBuffer = [MPSCommandBuffer commandBufferFromCommandQueue:gCommandQueue];\r\n        [_convWtsAndBias synchronizeOnCommandBuffer:commandBuffer];\r\n        [commandBuffer commit];\r\n        [commandBuffer waitUntilCompleted];\r\n    }\r\n    return YES;\r\n}\r\n```\r\n\r\nhttps://developer.apple.com/documentation/metalperformanceshaders/mpscnnconvolutiondatasource/2867049-load?language=objc\r\n\r\n### Steps to Reproduce\r\n\r\n1. Implement ConvolutionDataSource\r\n2. Debug it\r\n3. Watch crashes happen\r\n\r\n### Expected Behavior\r\n\r\nThe method is bound and the debugger doesn't interfere with it.\r\n\r\n### Actual Behavior\r\n\r\nBad binding.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2019 for Mac (Preview) ===\r\n\r\nVersion 8.2 Preview (8.2 build 874)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.14.0.83 (d16-2 / f08d4e3e)\r\n\r\n\tPackage version: 600000296\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.0.0.296 (2019-02/1e9f3bfbc5a) (64-bit)\r\n\tPackage version: 600000296\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.1.0.6013\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0-preview5-27626-15\r\n\t3.0.0-preview-27122-01\r\n\t2.2.4\r\n\t2.2.1\r\n\t2.1.2\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/Sdks\r\nSDK Versions:\r\n\t3.0.100-preview5-011568\r\n\t3.0.100-preview-009812\r\n\t2.2.203\r\n\t2.2.103\r\n\t2.1.302\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/6.0.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.10\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.14.0.91 (Visual Studio Enterprise)\r\nHash: 2f1cc7bb\r\nBranch: d16-2\r\nBuild date: 2019-06-07 02:49:23-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.14.0.91 (Visual Studio Enterprise)\r\nHash: 2f1cc7bb\r\nBranch: d16-2\r\nBuild date: 2019-06-07 02:49:22-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.2.0.325\r\nHash: f10cfbf83\r\nBranch: remotes/origin/d16-2\r\nBuild date: 2019-06-19 19:00:46 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.4.0.34 (Visual Studio Enterprise)\r\nCommit: xamarin-android/d16-2/7cce305\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2019-02@c6edaa62f94\r\nJava.Interop: xamarin/java.interop/d16-2@b2b2610\r\nLibZipSharp: grendello/LibZipSharp/d16-2@caa0c74\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/master@4f717b6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/fak/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.58\r\nHash: d03e3ea\r\nBranch: remotes/origin/d16-2\r\nBuild date: 2019-06-19 16:30:22 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 802000874\r\nGit revision: e57770efe0d2b92ade1e1b75e52731614e5f9487\r\nBuild date: 2019-06-25 19:43:32+00\r\nBuild branch: release-8.2-preview2\r\nXamarin extensions: a74fb3eb8717fbcb82500b3a107694ad5185aa48\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMSBuild Editor 2.3.1\r\n```\r\n\r\n"},{"Id":"9971874826","Type":"PullRequestEvent","CreatedAt":"2019-07-09T02:34:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6529","RelatedDescription":"Opened pull request \"[package] Remove creation of files/symlinks under /Developer\" (#6529) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9970837125","Type":"PullRequestEvent","CreatedAt":"2019-07-08T21:56:33","Actor":"whitneyschmidt","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6512","RelatedDescription":"Merged pull request \"[carplay] Update for Xcode11 beta 3\" (#6512) at xamarin/xamarin-macios","RelatedBody":"https://github.com/xamarin/maccore/issues/1822 - beta3 resolves this issue.\r\n\r\nShould I add git commit -m \"Fixes xamarin/xamarin-macios#1234\" to close the issue when this code is merged?"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1148317583004852224","CreatedAt":"2019-07-08T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Houstoâ€¦ https://t.co/5rZ4bINXkB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":5,"RawContent":null},{"Id":"1148273170136403975","CreatedAt":"2019-07-08T16:50:32+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, Xamarin Forms 4.1.0 Stable is now available. It has dozens of quality improvements, a new CheckBox control,â€¦ https://t.co/R3yD5qr9qm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":29,"RawContent":null},{"Id":"1146463951594459137","CreatedAt":"2019-07-03T17:01:20+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1146144741622505472","CreatedAt":"2019-07-02T19:52:55+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile development project by networking with your local community and getting the latest updatâ€¦ https://t.co/JeIcDMSyUr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1145780868323168256","CreatedAt":"2019-07-01T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Houstoâ€¦ https://t.co/ghYOrkuhhd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1144685402965643277","CreatedAt":"2019-06-28T19:14:01+00:00","UserScreenname":"xamarinhq","Text":"We realized that making UI *look* good is not enough; it has to be truly adaptive. See how to handle this by usingâ€¦ https://t.co/CtEZskZmJ9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":113,"FavoriteCount":39,"RawContent":null},{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This weekâ€™s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with attaâ€¦ https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":14,"RawContent":null},{"Id":"1144002014592061441","CreatedAt":"2019-06-26T21:58:29+00:00","UserScreenname":"xamarinhq","Text":"Reminder: Though new Xamarin .Mac applications target 64-bit by default, existing Xamarin .Mac applications that taâ€¦ https://t.co/3k5pQmlyq9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":14,"RawContent":null},{"Id":"1143968928076640257","CreatedAt":"2019-06-26T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Houstoâ€¦ https://t.co/YssrTsTPHN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":13,"RawContent":null},{"Id":"1143283413757190148","CreatedAt":"2019-06-24T22:23:01+00:00","UserScreenname":"xamarinhq","Text":"We've reevaluated our Xamarin .Android codebase and made changes that sped up builds and made smaller Dex Files. Seâ€¦ https://t.co/H3JE59pryL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":68,"RawContent":null},{"Id":"1143177825882726403","CreatedAt":"2019-06-24T15:23:27+00:00","UserScreenname":"xamarinhq","Text":"Get better at building cross-platform mobile apps with the new Xamarin.Forms. Microsoft Learn is all new and a compâ€¦ https://t.co/Kb8hT5LkIZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":41,"RawContent":null},{"Id":"1142066359947407362","CreatedAt":"2019-06-21T13:46:53+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Houstoâ€¦ https://t.co/zcg70tbgE9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"1141695710716469249","CreatedAt":"2019-06-20T13:14:03+00:00","UserScreenname":"xamarinhq","Text":"Thanks to your feedback, #VS4Mac 8.2 has some really great improvements to the XAML editing experience; including iâ€¦ https://t.co/vv0DVw9957","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":9,"RawContent":null},{"Id":"1141064668477345794","CreatedAt":"2019-06-18T19:26:31+00:00","UserScreenname":"xamarinhq","Text":"On this episode of the #XamarinShow, @JamesMontemagno and #MSMVP @DanJSiegel show us a super-cool feature of Prismâ€¦ https://t.co/GLEhnDlQjp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":16,"RawContent":null},{"Id":"1140735760875872256","CreatedAt":"2019-06-17T21:39:33+00:00","UserScreenname":"xamarinhq","Text":"We want to make sure youâ€™re using the latest tooling. The new and improved Automatic Android SDK Management tool isâ€¦ https://t.co/H0CSaxzj9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1140660631273652224","CreatedAt":"2019-06-17T16:41:01+00:00","UserScreenname":"xamarinhq","Text":"On the latest Xamarin.Essential API of the week show, we take a look at the File System Helpers API which containsâ€¦ https://t.co/GOGKCwXu6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":12,"RawContent":null},{"Id":"1139589442732285953","CreatedAt":"2019-06-14T17:44:30+00:00","UserScreenname":"xamarinhq","Text":"Keeping up w/the latest in #dotNET, C#, &amp; #Xamarin is easier than ever. \nThis weekâ€™s #XamarinPodcast includes:\n- hiâ€¦ https://t.co/FDDO27QHDh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1138875870553300995","CreatedAt":"2019-06-12T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"We make it simple for .NET developers to build beautiful cross-platform apps, fast.\nTake a look at how Grial UI Kitâ€¦ https://t.co/vceU8u475R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":108,"FavoriteCount":48,"RawContent":null},{"Id":"1138511096380309504","CreatedAt":"2019-06-11T18:19:32+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @chewamanda, App Center Program Manager, shows us the latest features in App Centerâ€¦ https://t.co/VHxAknaumJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":17,"RawContent":null}]}},"RunOn":"2019-07-09T05:31:00.5382443Z","RunDurationInMilliseconds":4192}