{"Data":{"GitHub":{"Issues":[{"Id":"604583362","IsPullRequest":true,"CreatedAt":"2020-04-23T03:39:26","Actor":"guolinke","Number":"5048","RawContent":null,"Title":"[LightGBM] fix bug for empty categorical values","State":"closed","Body":"ping @najeeb-kazmi  and refer to #3659\r\n\r\nFixes #3659","Url":"https://github.com/dotnet/machinelearning/pull/5048","RelatedDescription":"Closed or merged PR \"[LightGBM] fix bug for empty categorical values\" (#5048)"},{"Id":"604620503","IsPullRequest":false,"CreatedAt":"2020-04-22T19:18:05","Actor":"deviousasti","Number":"5049","RawContent":null,"Title":"Slots out of range","State":"closed","Body":"In the example, won't `item.Key` go up to the bit length specified.\r\nIf there's no matching slot, this will throw.\r\n\r\n```\r\n            foreach (var featureRow in NgramFeaturesColumn)\r\n            {\r\n                foreach (var item in featureRow.Items())\r\n                    Console.Write($\"{slots[item.Key]}  \"); // out of range possible\r\n                Console.WriteLine();\r\n            }\r\n```\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: da8a2391-a844-b431-0b36-992fcba2aeb4\r\n* Version Independent ID: 19a18209-4127-4079-0e38-311b7de733bd\r\n* Content: [TextCatalog.ProduceHashedNgrams Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.textcatalog.producehashedngrams?view=ml-dotnet#feedback)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TextCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TextCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/5049","RelatedDescription":"Closed issue \"Slots out of range\" (#5049)"},{"Id":"604909183","IsPullRequest":false,"CreatedAt":"2020-04-22T16:50:05","Actor":"CBrauer","Number":"5050","RawContent":null,"Title":"AutoML silently fails on the training phase of a binary classification problem.","State":"open","Body":"Hey guys,\r\n\r\n### Problem\r\nI am submitting a test project that demonstrates a bug.\r\nAutoML silently fails on the training phase of a binary classification problem.\r\n\r\n### Reproducible Code\r\nMy reproducible code can by downloaded from: https://github.com/CBrauer/Test_ML.NET\r\n\r\n### My environment is:\r\n  Microsoft Visual Studio Professional 2019 Preview\r\n  Version 16.6.0 Preview 2.1\r\n  VisualStudio.16.Preview/16.6.0-pre.2.1+30001.183\r\n  Microsoft .NET Framework\r\n  Version 4.8.03752\r\nI am running on Windows 10 Enterprise, version 1909 (OS Build 18.363.815).\r\nMy project uses the latest preview2 code.\r\n\r\n### Running the test program\r\nWhen you run the program you will see output like:\r\n\r\nRunning AutoML binary classification experiment using: FastTree,F1Score\r\n     Trainer                               Accuracy    AUC       AUPRC   F1-score  Duration\r\n   1 FastTreeBinary                         0.8610    0.7071    0.3537    0.1346    1.5480\r\n  11 FastTreeBinary                         0.8544    0.7357    0.3300    0.2445    2.8725\r\n  16 FastTreeBinary                         0.8722    0.7520    0.4299    0.3119   10.6857\r\n  33 FastTreeBinary                         0.8730    0.7357    0.4213    0.3188    3.0864\r\n  40 FastTreeBinary                         0.8730    0.7421    0.4410    0.3407   10.6638\r\n  50 FastTreeBinary                         0.8714    0.7496    0.4230    0.3584    9.2112\r\n  73 FastTreeBinary                         0.8695    0.7426    0.4184    0.3717   10.4270\r\n 118 FastTreeBinary                         0.8714    0.7307    0.4090    0.3822   10.6095\r\n 244\r\n\r\nEach experiment should last only one-hour.  I ran the program over-night, and it never finished. \r\n\r\nCharles\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5050","RelatedDescription":"Open issue \"AutoML silently fails on the training phase of a binary classification problem.\" (#5050)"},{"Id":"604444030","IsPullRequest":true,"CreatedAt":"2020-04-22T04:26:35","Actor":"frank-dong-ms","Number":"5047","RawContent":null,"Title":"NetCore3.1 generates different test result issue","State":"open","Body":"Address issues that NetCore 3.1 generates different test result:\r\nhttps://github.com/dotnet/machinelearning/issues/1096\r\nhttps://github.com/dotnet/machinelearning/issues/3856\r\n\r\nThe difference comes from CPUMath using different instruction set:\r\n1. dotnet framework and dotnet core 2.1 uses CpuMathUtils.netstandard that uses SSE instruction set through CPUMath native library;\r\n2. Since dotnet core 2.2, dotnet core has direct support for AVX and SSE hardware Intrinsics so dotnet core 3.1 use AVX or SSE instruction set directly. Dotnet core 3.1 uses CpuMathUtils.netcoreapp that uses AVX, SSE or direct floating point calculation depending on hardward avaibility. \r\n\r\nAVX and SSE generates slightly different result due to nature of floating point math.\r\nUse below issue to track: #5044\r\n\r\nSo in short term we are separating test baseline for netcore 3.1 until we add AVX support at CPUMath native library.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5047","RelatedDescription":"Open PR \"NetCore3.1 generates different test result issue\" (#5047)"},{"Id":"604377278","IsPullRequest":true,"CreatedAt":"2020-04-22T03:34:40","Actor":"mstfbl","Number":"5046","RawContent":null,"Title":"Removed references to NeuralTreeEvaluator.dll and cleaned up dependent functions","State":"closed","Body":"Fixes Issue #1443 \r\n\r\n`NeuralTreeEvaluator.dll` does not exist in the ML.NET repository. As such, it makes sense to clean up functions dependent on this .dll, which was carried from TLC.","Url":"https://github.com/dotnet/machinelearning/pull/5046","RelatedDescription":"Closed or merged PR \"Removed references to NeuralTreeEvaluator.dll and cleaned up dependent functions\" (#5046)"},{"Id":"604301759","IsPullRequest":true,"CreatedAt":"2020-04-22T02:59:35","Actor":"frank-dong-ms","Number":"5043","RawContent":null,"Title":"move CI windows build to netcore public pool","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5043","RelatedDescription":"Closed or merged PR \"move CI windows build to netcore public pool\" (#5043)"},{"Id":"604355680","IsPullRequest":true,"CreatedAt":"2020-04-22T02:42:01","Actor":"harishsk","Number":"5045","RawContent":null,"Title":"Added ability to compare configuration specific baselines","State":"closed","Body":"This PR enables BinaryClassifierSymSgdTest for x86 runs by adding a separate x86 specific baseline. In the process it also adds the ability enable other tests to have configuration specific baselines.\r\n\r\nSome background on why configuration specific baseline is needed here:\r\nThe SymbolicSgd trainers call into native code in SymSgdNative.dll which in turn call into MklImports.dll to compute dot products. The cblas_sdot call in MKL returns different results for identical input on x86 and x64 based on computation history. MklImports.dll is built from the Intel MKL SDK. Trying to fix the MKL across x86 and x64 is is a much bigger work item than we have time for. \r\nIt is more important for us to enable these tests. So I am attempting this fix by providing different baselines for x86 and x64.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5045","RelatedDescription":"Closed or merged PR \"Added ability to compare configuration specific baselines\" (#5045)"},{"Id":"604343678","IsPullRequest":false,"CreatedAt":"2020-04-21T23:18:24","Actor":"frank-dong-ms","Number":"5044","RawContent":null,"Title":"support AVX instruction set at CPUMath native","State":"open","Body":"In CPUMath native we only support SSE.\r\nIn dotnet framework and dotnet core 2.1 we are using CPUMath native directly which means we only have SSE.\r\nIn dotnet core 2.2 or later version, dotnet core supports hardware Intrinsics so have support for both AVX and SSE.\r\n\r\nSupport AVX in CPUMath native will have performance benefit as well as generates identical result from different dotnet framework version using.","Url":"https://github.com/dotnet/machinelearning/issues/5044","RelatedDescription":"Open issue \"support AVX instruction set at CPUMath native\" (#5044)"},{"Id":"603570970","IsPullRequest":true,"CreatedAt":"2020-04-21T06:24:26","Actor":"mstfbl","Number":"5041","RawContent":null,"Title":"Converted potentially large variables to type long","State":"closed","Body":"Fixes #3228\r\n\r\nAs explained in Issue #3228, very large datasets more than 2.14 billion rows of data can cause overflow when, say, the sum of these labels are obtained, **and** if these are stored as ints. This PR converts arrays and matrices for storing labels and features in their respective histograms from type `int` to type `long`. In addition, this PR updates the version of NaiveBayesMulticlassTrainer's Loader to preserve backwards compatibility. ","Url":"https://github.com/dotnet/machinelearning/pull/5041","RelatedDescription":"Closed or merged PR \"Converted potentially large variables to type long\" (#5041)"},{"Id":"603573648","IsPullRequest":false,"CreatedAt":"2020-04-20T22:21:40","Actor":"najeeb-kazmi","Number":"5042","RawContent":null,"Title":"Return average metrics in AutoML CrossValSummaryRunner","State":"open","Body":"Related to #4663 \r\nSee also https://github.com/dotnet/machinelearning/pull/5031#discussion_r409233020\r\n\r\n`CrossValSummaryRunner` in AutoML gets invoked when the dataset size is less than 15k rows. It runs 10-fold cross validation and computes the average optimization metric across the folds. It then reports all the metrics from the fold that has the optimization metric closest to this average.\r\nhttps://github.com/dotnet/machinelearning/blob/214926fcf5753ad62acf32c0759bdaf8fcd13b73/src/Microsoft.ML.AutoML/Experiment/Runners/CrossValSummaryRunner.cs#L76-L78\r\n\r\nA better way to do this would be to calculate the average of all the metrics, instantiate a new metrics class with these averages, and return that in the run details. This could reuse the code for calculating the average of non_NaN metrics from #5031. The following two things will need to be figured out and need more discussion:\r\n\r\n1. `PerClassLogLoss`: For multiclass classification, the ordering of the class labels may be different across the 10 folds. So, the `PerClassLogLoss` metric from each fold will have different indices for the class labels. In this situation, a standardized ordering would need to be figured out and the averages calculated for each class accordingly.\r\n\r\n2. `ConfusionMatrix`: For multiclass classification, the same problem as above needs solving. In addition, for both binary and multiclass classification, what confusion matrix is returned needs discussion. The distribution of class labels will be different across the folds, so what exactly is the \"average\" of a confusion matrix? Do we return a confusion matrix at all? Do we just return the confusion matrix from the fold with optimization metric closest to the average (current behavior)? If we are going this route, the confusion matrix property in the metrics classes will need to be made internally settable, as there is no constructor that takes the confusion matrix as an argument.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5042","RelatedDescription":"Open issue \"Return average metrics in AutoML CrossValSummaryRunner\" (#5042)"},{"Id":"602360224","IsPullRequest":true,"CreatedAt":"2020-04-19T02:51:01","Actor":"frank-dong-ms","Number":"5040","RawContent":null,"Title":"Fix official build","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5040","RelatedDescription":"Closed or merged PR \"Fix official build\" (#5040)"},{"Id":"601593889","IsPullRequest":true,"CreatedAt":"2020-04-16T23:36:26","Actor":"michaelgsharp","Number":"5039","RawContent":null,"Title":"Lag lead operator","State":"closed","Body":"LagLeadOperator copies values from prior (lag) rows or future (lead) rows.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5039","RelatedDescription":"Closed or merged PR \"Lag lead operator\" (#5039)"},{"Id":"601417598","IsPullRequest":true,"CreatedAt":"2020-04-16T23:28:02","Actor":"michaelgsharp","Number":"5037","RawContent":null,"Title":"Forecasting pivot featurizer","State":"closed","Body":"ForecastingPivotFeaturizer takes in columns that are 2D vectors, and \"pivots\" them into single value columns while dropping null values. It currently supports output from LagLeadOperator and RollingWindowFeaturizer.","Url":"https://github.com/dotnet/machinelearning/pull/5037","RelatedDescription":"Closed or merged PR \"Forecasting pivot featurizer\" (#5037)"},{"Id":"601281150","IsPullRequest":true,"CreatedAt":"2020-04-16T23:16:13","Actor":"michaelgsharp","Number":"5035","RawContent":null,"Title":"Rolling Window","State":"closed","Body":"RollingWindow does rolling window calculations per grain (kinda like a composite unique key by combining multiple columns). It currently provides min/mean/max.","Url":"https://github.com/dotnet/machinelearning/pull/5035","RelatedDescription":"Closed or merged PR \"Rolling Window\" (#5035)"},{"Id":"601245173","IsPullRequest":true,"CreatedAt":"2020-04-16T23:05:36","Actor":"michaelgsharp","Number":"5034","RawContent":null,"Title":"Short grain dropper","State":"closed","Body":"ShortGrainDropper makes sure that each grain combination (kinda like a composite unique key by combining multiple columns) has the specified minimum number of rows. If it does not, then the all the rows corresponding to that grain are dropped.","Url":"https://github.com/dotnet/machinelearning/pull/5034","RelatedDescription":"Closed or merged PR \"Short grain dropper\" (#5034)"},{"Id":"601525122","IsPullRequest":true,"CreatedAt":"2020-04-16T21:59:25","Actor":"gvashishtha","Number":"5038","RawContent":null,"Title":"clarifying parameters on time series","State":"open","Body":"We are excited to review your PR.\r\n\r\nSome context:\r\n\r\nAlso note that, here we are talking about three different parameters:\r\n1.\tseriesLength is the length of the whole timeseries.\r\n2.\ttrainSize is the number of points from the beginning of the series that are used for training.\r\n3.\twindowSize is the size of rolling window during the training of SSA.\r\n\r\nThe first parameter is dictated by the series and even though it’s not used in SSA, it’s not meaningful for the user to “set” it arbitrarily. The third parameter is *recommended* to be at least twice as the biggest seasonality in the data that the user care about. The second parameter must be more twice the third parameter. \r\n\r\nSo to summarize we should have:\r\n1.\t2*Seasonality length < windowSize\r\n2.\t2*windowSize < trainSize\r\n3.\ttrainSize < seriesLength\r\n\r\nThe first constraint is recommended while the other two are required.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5038","RelatedDescription":"Open PR \"clarifying parameters on time series\" (#5038)"},{"Id":"601399919","IsPullRequest":true,"CreatedAt":"2020-04-16T19:52:49","Actor":"LittleLittleCloud","Number":"5036","RawContent":null,"Title":"Update package dependency in CodeGenerator","State":"open","Body":"This PR \r\n- make CodeGenerator depends on a release AutoML package instead of project, to avoid the latest change in model load/unload mechanism, which will break ModelBuilder. ","Url":"https://github.com/dotnet/machinelearning/pull/5036","RelatedDescription":"Open PR \"Update package dependency in CodeGenerator\" (#5036)"},{"Id":"600629039","IsPullRequest":true,"CreatedAt":"2020-04-16T17:23:37","Actor":"frank-dong-ms","Number":"5029","RawContent":null,"Title":"Dotnetcore3.1 bench1","State":"closed","Body":"allow tests to run on dotnet core 3.1:\r\n1. change back to Fact as some tests are passing on dotnet core 3.1\r\n2. change to use lower precision for dotnet core 3.1\r\n3. fix bug in baseline compare, when compare number with allowed precision, space and tab should not affect the result like below case:\r\n\r\nthey should be same if we set digitsOfPrecision = 3 (should remove space and tab which is only for format before compare result):\r\n\r\n![image](https://user-images.githubusercontent.com/55860649/79395608-d6f7ab00-7f2e-11ea-92ea-4af80b9660c8.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5029","RelatedDescription":"Closed or merged PR \"Dotnetcore3.1 bench1\" (#5029)"},{"Id":"601079846","IsPullRequest":false,"CreatedAt":"2020-04-16T14:00:07","Actor":"Zeraphil","Number":"5033","RawContent":null,"Title":"Unexpected behavior using multiple pipelines for training vs one","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\n-**What did I do?**\r\n- Instead of one training pipeline, I split the pipeline to fit and transform the data into a featurized IDataView, and used that to train a classifier\r\n-**What happened?**\r\nClassifier accuracy was 50% of accuracy when the training pipeline is a complete chain.\r\n-**What did I expect**\r\nI expect that the accuracy of the model trained on either with the TransformerChain pipeline or trainingData transformed by the same TransformerChain be similar in accuracy\r\n\r\n### Source code / logs\r\n\r\nThis is what I mean by splitting the pipeline.\r\n\r\n`var dataProcessPipeline =\r\n                                      mlContext.Transforms.Text.FeaturizeText(\"WordFeatures\", \"Transcript\")\r\n                                      .Append(mlContext.Transforms.NormalizeMinMax(\"Features\", \"Features\"));`\r\n\r\n`IDataView transformedTrainingData = dataProcessPipeline.Fit(trainingDataView).Transform(trainingDataView);`\r\n\r\n`var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName:\"Label\", featureColumnName: \"Features\")\r\n.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"PredictedLabel\"));`\r\n\r\n`ITransformer model = trainer.Fit(transformedTrainingData );`\r\n\r\nI understand this to be conceptually similar to\r\n\r\n`\r\n            var dataProcessPipeline =\r\n                                      mlContext.Transforms.Text.FeaturizeText(\"WordFeatures\", \"Transcript\")\r\n                                      .Append(mlContext.Transforms.NormalizeMinMax(\"Features\", \"Features\"));`\r\n\r\n           var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \"Label\", featureColumnName: \"Features\")\r\n                                      .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"PredictedLabel\"));\r\n            var trainingPipeline = dataProcessPipeline.Append(trainer);`\r\n\r\n`ITransformer model =trainingPipeline .Fit(trainingDataView);`\r\n\r\n\r\nThe first gives me ~50% accuracy on the test set, the second ~98.9%. Is my understanding incorrect? Is there a missing step on doing things this way? My goal is to create a single Transformer for featurizing data that can then be used in more than one model, without having to build multiple models that featurize the data in the exact same way. \r\n\r\nHopefully the example makes sense. I can clarify if not.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5033","RelatedDescription":"Open issue \"Unexpected behavior using multiple pipelines for training vs one\" (#5033)"},{"Id":"600667294","IsPullRequest":true,"CreatedAt":"2020-04-16T00:32:46","Actor":"najeeb-kazmi","Number":"5031","RawContent":null,"Title":"Handle NaN optimization metric in AutoML","State":"open","Body":"Fixes #4663 \r\n\r\nIn AutoML, `CrossValSummaryRunner` is invoked if the dataset contains less than 15000 rows. It runs 10-fold cross validation on it, and then returns the model from the fold with the best optimization metric. It does this by looking for the index of the model with the best metric in the list of run results, and returning the element at this index.\r\n\r\nIf the metric in all 10 folds is `NaN`, then this index is `-1`, resulting in an `IndexOutOfRangeException`.","Url":"https://github.com/dotnet/machinelearning/pull/5031","RelatedDescription":"Open PR \"Handle NaN optimization metric in AutoML\" (#5031)"},{"Id":"600650602","IsPullRequest":false,"CreatedAt":"2020-04-15T23:39:01","Actor":"coutaq","Number":"5030","RawContent":null,"Title":"I cannot save the model for some weird reason.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:win10-x64\r\n- **.NET Version (eg., dotnet --info)**: 3.1.101\r\n\r\n### Issue\r\n\r\n- **Have been playing around with machine learning as of late, made a basic machine learning algorithm. It was working perfectly and then I broke something and now it refuses to save the model.**\r\n- **I cannot save the model. I'm not sure what caused that. I'm a beginner.**\r\n- **That I could save the model**\r\n\r\n-Here's the error code:\r\n`System.ArgumentException\r\n  HResult=0x80070057\r\n  Message=The path is not of a legal form.\r\n  Source=mscorlib\r\n  StackTrace:\r\n   at System.IO.Path.NewNormalizePath(String path, Int32 maxPathLength, Boolean expandShortPaths)\r\n   at System.IO.Path.NormalizePath(String path, Boolean fullCheck, Int32 maxPathLength, Boolean expandShortPaths)\r\n   at System.IO.Path.GetFullPathInternal(String path)\r\n   at System.IO.Path.GetFullPath(String path)\r\n   at System.Diagnostics.FileVersionInfo.GetFullPathWithAssert(String fileName)\r\n   at System.Diagnostics.FileVersionInfo.GetVersionInfo(String fileName)\r\n   at Microsoft.ML.RepositoryWriter.CreateNew(Stream stream, IExceptionContext ectx, Boolean useFileSystem)\r\n   at Microsoft.ML.ModelOperationsCatalog.Save(ITransformer model, DataViewSchema inputSchema, Stream stream)\r\n   at Microsoft.ML.ModelOperationsCatalog.Save(ITransformer model, DataViewSchema inputSchema, String filePath)\r\n   at MachineLearningTest.ModelBuilder.SaveModel(MLContext mlContext, ITransformer mlModel, String modelRelativePath, DataViewSchema modelInputSchema) in C:\\Users\\Michael\\source\\repos\\new\\MachineLearingTest\\ModelBuilder.cs:line 48\r\n   at MachineLearningTest.ModelBuilder.CreateModel() in C:\\Users\\Michael\\source\\repos\\new\\MachineLearingTest\\ModelBuilder.cs:line 43\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n\r\n  This exception was originally thrown at this call stack:\r\n\tSystem.IO.Path.NewNormalizePath(string, int, bool)\r\n\tSystem.IO.Path.NormalizePath(string, bool, int, bool)\r\n\tSystem.IO.Path.GetFullPathInternal(string)\r\n\tSystem.IO.Path.GetFullPath(string)\r\n\tSystem.Diagnostics.FileVersionInfo.GetFullPathWithAssert(string)\r\n\tSystem.Diagnostics.FileVersionInfo.GetVersionInfo(string)\r\n\tMicrosoft.ML.RepositoryWriter.CreateNew(System.IO.Stream, Microsoft.ML.Runtime.IExceptionContext, bool)\r\n\tMicrosoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer, Microsoft.ML.DataViewSchema, System.IO.Stream)\r\n\tMicrosoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer, Microsoft.ML.DataViewSchema, string)\r\n    MachineLearningTest.ModelBuilder.SaveModel(Microsoft.ML.MLContext, Microsoft.ML.ITransformer, string, Microsoft.ML.DataViewSchema) in ModelBuilder.cs\r\n    ...\r\n    [Call Stack Truncated]\r\n`\r\n\r\n### Source code / logs\r\n\r\nAnd here's the code:\r\n`// This file was auto-generated by ML.NET Model Builder. \r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Windows.Forms;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Trainers.LightGbm;\r\n\r\nnamespace MachineLearningTest\r\n{\r\n    public static class ModelBuilder\r\n    {\r\n        private static string TRAIN_DATA_FILEPATH = Program.dataPath;\r\n        private static string MODEL_FILEPATH = @\"MLModel.zip\";\r\n        // Create MLContext to be shared across the model creation workflow objects \r\n        // Set a random seed for repeatable/deterministic results across multiple trainings.\r\n        private static MLContext mlContext = new MLContext(seed: 1);\r\n\r\n        public static void CreateModel()\r\n        {\r\n            // Load Data\r\n            IDataView trainingDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n                                            path: TRAIN_DATA_FILEPATH,\r\n                                            hasHeader: true,\r\n                                            separatorChar: ',',\r\n                                            allowQuoting: true,\r\n                                            allowSparse: false);\r\n\r\n            // Build training pipeline\r\n            IEstimator<ITransformer> trainingPipeline = BuildTrainingPipeline(mlContext);\r\n            \r\n\r\n            // Evaluate quality of Model\r\n            //Evaluate(mlContext, trainingDataView, trainingPipeline);\r\n\r\n            // Train Model\r\n            ITransformer mlModel = TrainModel(mlContext, trainingDataView, trainingPipeline);\r\n\r\n            // Save model\r\n            SaveModel(mlContext, mlModel, MODEL_FILEPATH, trainingDataView.Schema);\r\n        }\r\n        private static void SaveModel(MLContext mlContext, ITransformer mlModel, string modelRelativePath, DataViewSchema modelInputSchema)\r\n        {\r\n            // This causes the exception\r\n                mlContext.Model.Save(mlModel, modelInputSchema, (GetAbsolutePath(modelRelativePath)));\r\n        }\r\n\r\n        public static IEstimator<ITransformer> BuildTrainingPipeline(MLContext mlContext)\r\n        {\r\n            // Data process configuration with pipeline data transformations \r\n            var dataProcessPipeline = mlContext.Transforms.Conversion.MapValueToKey(\"White\", \"White\")\r\n                                      .Append(mlContext.Transforms.Concatenate(\"Features\", new[] { \"Hue\", \"Saturation\", \"Brightness\" }));\r\n            // Set the training algorithm \r\n            var trainer = mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options() { NumberOfIterations = 20, LearningRate = 0.05916024f, NumberOfLeaves = 4, MinimumExampleCountPerLeaf = 1, UseCategoricalSplit = false, HandleMissingValue = true, MinimumExampleCountPerGroup = 200, MaximumCategoricalSplitPointCount = 8, CategoricalSmoothing = 20, L2CategoricalRegularization = 1, UseSoftmax = true, Booster = new GradientBooster.Options() { L2Regularization = 0, L1Regularization = 0.5 }, LabelColumnName = \"White\", FeatureColumnName = \"Features\" })\r\n                                      .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"PredictedLabel\"));\r\n\r\n            var trainingPipeline = dataProcessPipeline.Append(trainer);\r\n\r\n            return trainingPipeline;\r\n        }\r\n\r\n        public static ITransformer TrainModel(MLContext mlContext, IDataView trainingDataView, IEstimator<ITransformer> trainingPipeline)\r\n        {\r\n            Console.WriteLine(\"=============== Training  model ===============\");\r\n            ITransformer model = trainingPipeline.Fit(trainingDataView);\r\n\r\n            Console.WriteLine(\"=============== End of training process ===============\");\r\n            return model;\r\n        }\r\n\r\n        private static void Evaluate(MLContext mlContext, IDataView trainingDataView, IEstimator<ITransformer> trainingPipeline)\r\n        {\r\n            // Cross-Validate with single dataset (since we don't have two datasets, one for training and for evaluate)\r\n            // in order to evaluate and get the model's accuracy metrics\r\n            Console.WriteLine(\"=============== Cross-validating to get model's accuracy metrics ===============\");\r\n            var crossValidationResults = mlContext.MulticlassClassification.CrossValidate(trainingDataView, trainingPipeline, numberOfFolds: 5, labelColumnName: \"White\");\r\n            PrintMulticlassClassificationFoldsAverageMetrics(crossValidationResults);\r\n        }\r\n\r\n        \r\n\r\n        public static string GetAbsolutePath(string relativePath)\r\n        {\r\n            FileInfo _dataRoot = new FileInfo(typeof(Program).Assembly.Location);\r\n            string assemblyFolderPath = _dataRoot.Directory.FullName;\r\n\r\n            string fullPath = Path.Combine(assemblyFolderPath, relativePath);\r\n            return fullPath;\r\n        }\r\n        public static void PrintMulticlassClassificationMetrics(MulticlassClassificationMetrics metrics)\r\n        {\r\n            Console.WriteLine($\"************************************************************\");\r\n            Console.WriteLine($\"*    Metrics for multi-class classification model   \");\r\n            Console.WriteLine($\"*-----------------------------------------------------------\");\r\n            Console.WriteLine($\"    MacroAccuracy = {metrics.MacroAccuracy:0.####}, a value between 0 and 1, the closer to 1, the better\");\r\n            Console.WriteLine($\"    MicroAccuracy = {metrics.MicroAccuracy:0.####}, a value between 0 and 1, the closer to 1, the better\");\r\n            Console.WriteLine($\"    LogLoss = {metrics.LogLoss:0.####}, the closer to 0, the better\");\r\n            for (int i = 0; i < metrics.PerClassLogLoss.Count; i++)\r\n            {\r\n                Console.WriteLine($\"    LogLoss for class {i + 1} = {metrics.PerClassLogLoss[i]:0.####}, the closer to 0, the better\");\r\n            }\r\n            Console.WriteLine($\"************************************************************\");\r\n        }\r\n\r\n        public static void PrintMulticlassClassificationFoldsAverageMetrics(IEnumerable<TrainCatalogBase.CrossValidationResult<MulticlassClassificationMetrics>> crossValResults)\r\n        {\r\n            var metricsInMultipleFolds = crossValResults.Select(r => r.Metrics);\r\n\r\n            var microAccuracyValues = metricsInMultipleFolds.Select(m => m.MicroAccuracy);\r\n            var microAccuracyAverage = microAccuracyValues.Average();\r\n            var microAccuraciesStdDeviation = CalculateStandardDeviation(microAccuracyValues);\r\n            var microAccuraciesConfidenceInterval95 = CalculateConfidenceInterval95(microAccuracyValues);\r\n\r\n            var macroAccuracyValues = metricsInMultipleFolds.Select(m => m.MacroAccuracy);\r\n            var macroAccuracyAverage = macroAccuracyValues.Average();\r\n            var macroAccuraciesStdDeviation = CalculateStandardDeviation(macroAccuracyValues);\r\n            var macroAccuraciesConfidenceInterval95 = CalculateConfidenceInterval95(macroAccuracyValues);\r\n\r\n            var logLossValues = metricsInMultipleFolds.Select(m => m.LogLoss);\r\n            var logLossAverage = logLossValues.Average();\r\n            var logLossStdDeviation = CalculateStandardDeviation(logLossValues);\r\n            var logLossConfidenceInterval95 = CalculateConfidenceInterval95(logLossValues);\r\n\r\n            var logLossReductionValues = metricsInMultipleFolds.Select(m => m.LogLossReduction);\r\n            var logLossReductionAverage = logLossReductionValues.Average();\r\n            var logLossReductionStdDeviation = CalculateStandardDeviation(logLossReductionValues);\r\n            var logLossReductionConfidenceInterval95 = CalculateConfidenceInterval95(logLossReductionValues);\r\n\r\n            Console.WriteLine($\"*************************************************************************************************************\");\r\n            Console.WriteLine($\"*       Metrics for Multi-class Classification model      \");\r\n            Console.WriteLine($\"*------------------------------------------------------------------------------------------------------------\");\r\n            Console.WriteLine($\"*       Average MicroAccuracy:    {microAccuracyAverage:0.###}  - Standard deviation: ({microAccuraciesStdDeviation:#.###})  - Confidence Interval 95%: ({microAccuraciesConfidenceInterval95:#.###})\");\r\n            Console.WriteLine($\"*       Average MacroAccuracy:    {macroAccuracyAverage:0.###}  - Standard deviation: ({macroAccuraciesStdDeviation:#.###})  - Confidence Interval 95%: ({macroAccuraciesConfidenceInterval95:#.###})\");\r\n            Console.WriteLine($\"*       Average LogLoss:          {logLossAverage:#.###}  - Standard deviation: ({logLossStdDeviation:#.###})  - Confidence Interval 95%: ({logLossConfidenceInterval95:#.###})\");\r\n            Console.WriteLine($\"*       Average LogLossReduction: {logLossReductionAverage:#.###}  - Standard deviation: ({logLossReductionStdDeviation:#.###})  - Confidence Interval 95%: ({logLossReductionConfidenceInterval95:#.###})\");\r\n            Console.WriteLine($\"*************************************************************************************************************\");\r\n\r\n        }\r\n\r\n        public static double CalculateStandardDeviation(IEnumerable<double> values)\r\n        {\r\n            double average = values.Average();\r\n            double sumOfSquaresOfDifferences = values.Select(val => (val - average) * (val - average)).Sum();\r\n            double standardDeviation = Math.Sqrt(sumOfSquaresOfDifferences / (values.Count() - 1));\r\n            return standardDeviation;\r\n        }\r\n\r\n        public static double CalculateConfidenceInterval95(IEnumerable<double> values)\r\n        {\r\n            double confidenceInterval95 = 1.96 * CalculateStandardDeviation(values) / Math.Sqrt((values.Count() - 1));\r\n            return confidenceInterval95;\r\n        }\r\n    }\r\n}\r\n`","Url":"https://github.com/dotnet/machinelearning/issues/5030","RelatedDescription":"Open issue \"I cannot save the model for some weird reason.\" (#5030)"},{"Id":"600022117","IsPullRequest":true,"CreatedAt":"2020-04-15T17:08:18","Actor":"mstfbl","Number":"5027","RawContent":null,"Title":"Update ForecastBySsa function specifications and add seealso","State":"closed","Body":"Fixes #5007\r\n\r\nUpdated XML documentation for `ForecastBySsa`, and added a see-also section for `SsaForecastingEstimator`with `ForecastBySsa`, similar to how it has been done with [SsaSpikeEstimator](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.timeseries.ssaspikedetector?view=ml-dotnet).\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5027","RelatedDescription":"Closed or merged PR \"Update ForecastBySsa function specifications and add seealso\" (#5027)"},{"Id":"599904333","IsPullRequest":true,"CreatedAt":"2020-04-15T00:09:37","Actor":"frank-dong-ms","Number":"5026","RawContent":null,"Title":"fix 2 build issues","State":"closed","Body":"fix 2 build issues in nightly build pipeline and machinelearing full pipeline:\r\n1. _targetFramework from netcoreapp3.0 to netcoreapp3.1\r\n2. force tls1.2 when connect to https://dotnetcli.azureedge.net as this address only accepts tls 1.2 and 1.3: https://www.ssllabs.com/ssltest/analyze.html?d=dotnetcli.azureedge.net&s=72.21.81.200\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5026","RelatedDescription":"Closed or merged PR \"fix 2 build issues\" (#5026)"},{"Id":"599158269","IsPullRequest":true,"CreatedAt":"2020-04-14T06:21:52","Actor":"frank-dong-ms","Number":"5023","RawContent":null,"Title":"Fix SsaForecast bug","State":"closed","Body":"remove static field in PolynomialUtils, use local variable instead avoid random test failure\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5023","RelatedDescription":"Closed or merged PR \"Fix SsaForecast bug\" (#5023)"},{"Id":"599200159","IsPullRequest":true,"CreatedAt":"2020-04-14T00:38:08","Actor":"frank-dong-ms","Number":"5024","RawContent":null,"Title":"move ubuntu and centos to agent pool with larger disk space","State":"closed","Body":"Ubuntu and CentOS is facing disk space issue, move to agent pool with larger disk space, this pool has 120 machines so should be good for use:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/info/queues\r\n\r\n\"Purpose\": \"Build\",\r\n    \"Architecture\": \"AMD64\",\r\n    \"IsAvailable\": true,\r\n    \"IsInternalOnly\": true,\r\n    \"IsOnPremises\": false,\r\n    \"OperatingSystemGroup\": \"linux\",\r\n    \"PreInstalledImage\": null,\r\n    \"PreparedImage\": null,\r\n    \"QueueId\": \"BuildPool.Ubuntu.1604.Amd64.Open\",\r\n    \"QueueDepth\": 0,\r\n    \"ScaleMin\": 0,\r\n    **\"ScaleMax\": 120,**\r\n    \"UserList\": \"helix-buildagent-bot\",\r\n    \"WorkspacePath\": \"/datadisks/disk1/workspace\"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5024","RelatedDescription":"Closed or merged PR \"move ubuntu and centos to agent pool with larger disk space\" (#5024)"},{"Id":"599208774","IsPullRequest":true,"CreatedAt":"2020-04-14T00:10:40","Actor":"frank-dong-ms","Number":"5025","RawContent":null,"Title":"trouble shoot test hanging","State":"open","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=599069&view=logs&j=32952595-30e7-56fa-9b86-c4579b87f5d1&t=4390109a-3c77-5b7c-bf35-d176b654cd3c\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=599067&view=logs&j=d1af5113-e574-5a31-f7f3-02fc40ea7b26&t=167d9e7d-b609-5b0a-7efa-d26b0dafb88f\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5025","RelatedDescription":"Open PR \"trouble shoot test hanging\" (#5025)"},{"Id":"599102890","IsPullRequest":false,"CreatedAt":"2020-04-13T20:01:58","Actor":"abindh","Number":"5022","RawContent":null,"Title":"ML.Ranking LightGBM - Getting error \"Value cannot be null. Parameter name: items\"","State":"open","Body":"### System information\r\n\r\n- Windows:\r\n- .net Core 3.0: \r\n\r\n### Issue\r\n\r\n- I am trying to generate a simple ranking of candidates based on a few features for a recruitment application. \r\n- But when running the trainer, I get the following message which is not clear - \"Value cannot be null. Parameter name: items\"\r\n\r\n\r\n### Source code / logs\r\n\r\n![Capture](https://user-images.githubusercontent.com/12490592/79155380-f07ee280-7dc8-11ea-859e-fee03d4d7e24.PNG)\r\n\r\n```C#\r\n//Training Pipeline\r\n            IEstimator<ITransformer> dataPipeline = mlContext.Transforms.Categorical.OneHotEncoding(\"HIGHESTEDUCATION\", \"HIGHESTEDUCATION\")\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"SOURCE\", \"SOURCE\"))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\"SKILLSET\", \"SKILLSET\"))\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"TOWNCITY\", \"TOWNCITY\"))\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"YEARSOFEXPERIENCE\", \"YEARSOFEXPERIENCE\"))\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\", \"HIGHESTEDUCATION\", \"SKILLSET\", \"SOURCE\", \"TOWNCITY\", \"YEARSOFEXPERIENCE\"))\r\n                .Append(mlContext.Transforms.Conversion.MapValueToKey(\"Label\",\"Label\"))\r\n                .Append(mlContext.Transforms.Conversion.Hash(\"GroupId\", nameof(Candidate.VACANCYID), numberOfBits: 20));\r\n\r\n            // Set the LightGBM LambdaRank trainer.\r\n            IEstimator<ITransformer> trainer = mlContext.Ranking.Trainers.LightGbm(labelColumnName: \"Label\", featureColumnName: \"Features\", rowGroupColumnName: \"GroupId\"); \r\n            IEstimator<ITransformer> trainerPipeline = dataPipeline.Append(trainer);\r\n```\r\n```C#\r\n// Domain Model\r\npublic class Candidate\r\n    {\r\n        [LoadColumn(0)]\r\n        public string HIGHESTEDUCATION { get; set; }\r\n\r\n        [ColumnName(\"Label\"),LoadColumn(1)]\r\n        public Single RELEVANCESCORE { get; set; }\r\n\r\n        [LoadColumn(2)]\r\n        public string SKILLSET { get; set; }\r\n\r\n        [LoadColumn(3)]\r\n        public string SOURCE { get; set; }\r\n\r\n        [LoadColumn(4)]\r\n        public string TOWNCITY { get; set; }\r\n\r\n        [ ColumnName(\"GroupId\"), LoadColumn(5)]\r\n        public string VACANCYID { get; set; }\r\n\r\n        [LoadColumn(6)]\r\n        public string YEARSOFEXPERIENCE { get; set; }\r\n        \r\n    }\r\n```\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5022","RelatedDescription":"Open issue \"ML.Ranking LightGBM - Getting error \"Value cannot be null. Parameter name: items\"\" (#5022)"},{"Id":"598659671","IsPullRequest":true,"CreatedAt":"2020-04-13T04:06:07","Actor":"kevencarneiro","Number":"5021","RawContent":null,"Title":"LoadColumnName support in TextLoader and auto map class members ","State":"open","Body":"This pull request resolves #4480.\r\n\r\nThese features were add in this pull request:\r\n* Support of `LoadColumnName` attribute in `TextLoader` class (when loaded file has headers).\r\n* Possibility to ignore a member when using `CreateTextLoader` using the `LoadColumnIgnoreAttribute`\r\n* Feature to map the `TInput` properties/fields name to column of TextLoader (when loaded file has headers)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5021","RelatedDescription":"Open PR \"LoadColumnName support in TextLoader and auto map class members \" (#5021)"},{"Id":"604976647","IsPullRequest":false,"CreatedAt":"2020-03-16T05:30:59","Actor":"luislhg","Number":"5052","RawContent":null,"Title":"ImageClassificationTrainer can't load model","State":"open","Body":"### System information\r\n\r\n- Windows 10 Pro\r\n- .NET 4.8 and .NET Core 3.1: \r\n- Memory 12GB\r\n- Processor Intel Core i7 CPU 950 @ 3.07GHz\r\n\r\n### Issue\r\n\r\n- Tried to train an image classification using the Model Builder.\r\n\r\nSteps: Create a project.\r\nAdd a Machine Learning through solution explorer, then in the ML.NET Model Builder:\r\n\r\n1. Scenario -> Image Classification\r\n2. Data -> A folder with around 8.000 images (.png) separated in 8 folders/categories.\r\n3. Train -> Start Training\r\n\r\nIt will result in a popup (image attached) saying \"Model Builder Error\".\r\n![Model Builder Error](https://user-images.githubusercontent.com/16278387/76725716-d1d7ee00-672d-11ea-8589-7ed8b803321e.png)\r\n\r\nOutput/log from Machine Learning output:\r\n|     Trainer                              MicroAccuracy  MacroAccuracy  Duration #Iteration                     |\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003974.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004556.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003859.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003999.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003329.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003310.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003954.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004090.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003738.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004048.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=RawByteImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Não é possível carregar a DLL 'tensorflow': Uma rotina de inicialização da biblioteca de vínculo dinâmico (DLL) falhou. (Exceção de HRESULT: 0x8007045A)\r\n   em Tensorflow.c_api.TF_NewGraph()\r\n   em Tensorflow.Graph..ctor()\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- Fim do rastreamento de pilha de exceções internas ---\r\n   em Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   em Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   em Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   em Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\nTensorflow exception triggered while loading model.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5052","RelatedDescription":"Open issue \"ImageClassificationTrainer can't load model\" (#5052)"},{"Id":"604976498","IsPullRequest":false,"CreatedAt":"2019-05-15T04:18:27","Actor":"sergey-tihon","Number":"5051","RawContent":null,"Title":"[AutoML] Auto detection of extra header rows mixed into the dataset","State":"open","Body":"I have dataset in text file with 20 columns, 1st column is the class name (string), other columns are features (floats)\r\n\r\nHere are first lines of this file\r\n```\r\nClass\tA1\tA2\tA3\tA4\tA5\tA6\tA7\tA8\tA9\tA10\tA11\tA12\tA13\tA14\tA15\tA16\tA17\tA18\tA19\r\nCS\t61.00000\t0.16855\t0.00000\t1.77778\t3.00000\t0.25375\t0.07984\t0.00169\t0.02250\t0.01535\t0.07984\t0.01027\t0.27415\t6.00000\t4.00000\t0.37649\t3552.00000\t0\t26.00000\r\nCS\t316.00000\t0.14823\t15.00000\t1.77778\t10.00000\t0.02352\t0.00440\t0.20407\t0.00357\t0.00914\t0.03585\t0.14171\t0.01674\t21.00000\t4.00000\t0.14961\t4235.00000\t0\t17.00000\r\nCS\t176.00000\t0.00000\t20.00000\t1.77778\t3.00000\t0.01850\t0.19659\t0.00469\t0.03895\t0.00000\t0.19659\t0.59670\t0.19659\t10.00000\t5.00000\t0.23767\t3850.00000\t0\t24.00000\r\nCS\t133.00000\t0.00000\t4.00000\t1.33333\t3.00000\t0.00049\t0.01214\t0.22827\t0.18777\t0.18778\t0.12627\t0.00915\t0.18777\t11.00000\t7.00000\t0.32619\t1880.00000\t0\t16.00000\r\nCS\t140.00000\t0.00000\t14.00000\t1.33333\t1.00000\t0.01787\t0.02860\t0.48472\t0.02860\t0.59853\t0.02860\t1.06538\t0.02860\t9.00000\t7.00000\t0.02860\t1876.00000\t0\t142.00000\r\n```\r\nand the full file [data.txt](https://github.com/dotnet/machinelearning/files/3180842/data.txt)\r\n\r\nLet's execute AutoML\r\n\r\n> mlnet auto-train --task `multiclass-classification` --dataset \"data.txt\" --has-header --label-column-name `Class` --max-exploration-time 10\r\n\r\nas a  results AutoML will generate `ModelInput.cs` file that starts like this\r\n```csharp\r\n public class ModelInput\r\n    {\r\n        [ColumnName(\"Class\"), LoadColumn(0)]\r\n        public string Class { get; set; }\r\n        [ColumnName(\"A1\"), LoadColumn(1)]\r\n        public string A1 { get; set; }\r\n        [ColumnName(\"A2\"), LoadColumn(2)]\r\n        public string A2 { get; set; }\r\n        [ColumnName(\"A3\"), LoadColumn(3)]\r\n        public string A3 { get; set; }\r\n```\r\n\r\nall columns are recognized as `string` instead of `float` 😢\r\n\r\nas a result data pipeline also incorrect (`OneHotEncoding` was applied to numeric columns)\r\n```csharp\r\n            var dataProcessPipeline = mlContext.Transforms.Conversion.MapValueToKey(\"Class\", \"Class\")\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(new[]\r\n                {\r\n                    new InputOutputColumnPair(\"A3\", \"A3\"), new InputOutputColumnPair(\"A4\", \"A4\"),\r\n                    new InputOutputColumnPair(\"A5\", \"A5\"), new InputOutputColumnPair(\"A14\", \"A14\"),\r\n                    new InputOutputColumnPair(\"A15\", \"A15\"), new InputOutputColumnPair(\"A18\", \"A18\")\r\n                }))\r\n                .Append(mlContext.Transforms.Categorical.OneHotHashEncoding(new[]\r\n                {\r\n                    new InputOutputColumnPair(\"A1\", \"A1\"), new InputOutputColumnPair(\"A2\", \"A2\"),\r\n                    new InputOutputColumnPair(\"A6\", \"A6\"), new InputOutputColumnPair(\"A17\", \"A17\"),\r\n                    new InputOutputColumnPair(\"A19\", \"A19\")\r\n                }))\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\",\r\n                    new[] {\"A3\", \"A4\", \"A5\", \"A14\", \"A15\", \"A18\", \"A1\", \"A2\", \"A6\", \"A17\", \"A19\"}))\r\n                .Append(mlContext.Transforms.NormalizeMinMax(\"Features\", \"Features\"))\r\n                .AppendCacheCheckpoint(mlContext);\r\n```\r\n\r\nWhy in this case all columns recognized as strings?\r\nWhy in some columns `OneHotHashEncoding` was used instead of `OneHotEncoding`?","Url":"https://github.com/dotnet/machinelearning/issues/5051","RelatedDescription":"Open issue \"[AutoML] Auto detection of extra header rows mixed into the dataset\" (#5051)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-23T05:30:36.1256153Z","RunDurationInMilliseconds":723}