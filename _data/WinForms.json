{"Data":{"GitHub":{"Issues":[{"Id":"542657999","IsPullRequest":false,"CreatedAt":"2019-12-27T02:16:23","Actor":"paul1956","Number":"2580","RawContent":null,"Title":"Can test WinForms under Visual Studio","State":"closed","Body":"* .NET Core Version: (Microsoft.WindowsDesktop.App 5.0.0-alpha.1.19625.3)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\nN/A\r\n**Problem description:**\r\nFollowing instructions on testing https://github.com/dotnet/winforms/blob/master/Documentation/testing-in-vs.md\r\nvery bottom Solution 2 does not work and you get the error below\r\n**Actual behavior:**\r\n```\r\nThe specified framework can be found at:\r\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App&framework_version=5.0.0-alpha1.19514.1&arch=x64&rid=win10-x64\r\n. Please check the diagnostic logs for more information.\r\n```\r\n**Expected behavior:**\r\nExpect tests to run or there is a place to download the required framework.\r\n**Minimal repro:**\r\nClone Winform Repo\r\nRun .\\build-local.ps1\r\nOpen VB 2019 16.5.0 Preview 1\r\nRun any test and in the Output/Test Window you will see error above and test does not run\r\n","Url":"https://github.com/dotnet/winforms/issues/2580","RelatedDescription":"Closed issue \"Can test WinForms under Visual Studio\" (#2580)"},{"Id":"542659449","IsPullRequest":true,"CreatedAt":"2019-12-26T20:09:09","Actor":"hughbe","Number":"2581","RawContent":null,"Title":"Add ToolStripRenderer tests","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripRenderer tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2581)","Url":"https://github.com/dotnet/winforms/pull/2581","RelatedDescription":"Open PR \"Add ToolStripRenderer tests\" (#2581)"},{"Id":"542636167","IsPullRequest":true,"CreatedAt":"2019-12-26T18:36:15","Actor":"hughbe","Number":"2579","RawContent":null,"Title":"Cleanup ToolStripSeparator","State":"open","Body":"## Proposed Changes\r\n- Cleanup ToolStripSeparator\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2579)","Url":"https://github.com/dotnet/winforms/pull/2579","RelatedDescription":"Open PR \"Cleanup ToolStripSeparator\" (#2579)"},{"Id":"542601534","IsPullRequest":true,"CreatedAt":"2019-12-26T16:41:56","Actor":"hughbe","Number":"2578","RawContent":null,"Title":"Cleanup ToolStripButton","State":"open","Body":"## Proposed Changes\r\n- Cleanup ToolStripButton\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2578)","Url":"https://github.com/dotnet/winforms/pull/2578","RelatedDescription":"Open PR \"Cleanup ToolStripButton\" (#2578)"},{"Id":"542591191","IsPullRequest":true,"CreatedAt":"2019-12-26T15:57:11","Actor":"hughbe","Number":"2577","RawContent":null,"Title":"Add ToolStripSeparator tests","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripSeparator tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2577)","Url":"https://github.com/dotnet/winforms/pull/2577","RelatedDescription":"Open PR \"Add ToolStripSeparator tests\" (#2577)"},{"Id":"542584396","IsPullRequest":false,"CreatedAt":"2019-12-26T15:26:38","Actor":"hughbe","Number":"2576","RawContent":null,"Title":"ToolStripSeparator.GetPreferredSize has a suspicious always-true if check","State":"open","Body":"The implementation of `ToolStripSeparator.GetPreferredSize` is as follows:\r\n\r\n```cs\r\npublic override Size GetPreferredSize(Size constrainingSize)\r\n{\r\n    ToolStrip parent = ParentInternal;\r\n\r\n    if (parent == null)\r\n    {\r\n        parent = Owner;\r\n    }\r\n    if (parent == null)\r\n    {\r\n        return new Size(ToolStrip_SEPARATORTHICKNESS, ToolStrip_SEPARATORTHICKNESS);\r\n    }\r\n\r\n    if (parent is ToolStripDropDownMenu dropDownMenu)\r\n    {\r\n        return new Size(parent.Width - (parent.Padding.Horizontal - dropDownMenu.ImageMargin.Width), ToolStrip_SEPARATORTHICKNESS);\r\n    }\r\n    else\r\n    {\r\n        if (parent.LayoutStyle != ToolStripLayoutStyle.HorizontalStackWithOverflow || parent.LayoutStyle != ToolStripLayoutStyle.VerticalStackWithOverflow)\r\n        {\r\n            // we dont actually know what size to make it, so just keep it a stock size.\r\n            constrainingSize.Width = ToolStrip_SEPARATORHEIGHT;\r\n            constrainingSize.Height = ToolStrip_SEPARATORHEIGHT;\r\n        }\r\n        if (IsVertical)\r\n        {\r\n            return new Size(ToolStrip_SEPARATORTHICKNESS, constrainingSize.Height);\r\n        }\r\n        else\r\n        {\r\n            return new Size(constrainingSize.Width, ToolStrip_SEPARATORTHICKNESS);\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nNotice this case: `if (parent.LayoutStyle != ToolStripLayoutStyle.HorizontalStackWithOverflow || parent.LayoutStyle != ToolStripLayoutStyle.VerticalStackWithOverflow)`\r\n\r\nThis appears to always be true, as `parent.LayoutStyle` can't be both `HorizontalStackWithOverflow` and `VerticalStackWithOverflow`. \r\n\r\nShould this actually be an `&&` check rather than `||`","Url":"https://github.com/dotnet/winforms/issues/2576","RelatedDescription":"Open issue \"ToolStripSeparator.GetPreferredSize has a suspicious always-true if check\" (#2576)"},{"Id":"542575695","IsPullRequest":true,"CreatedAt":"2019-12-26T14:49:03","Actor":"hughbe","Number":"2575","RawContent":null,"Title":"Add ToolStripButton tests","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripButton tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2575)","Url":"https://github.com/dotnet/winforms/pull/2575","RelatedDescription":"Open PR \"Add ToolStripButton tests\" (#2575)"},{"Id":"542548886","IsPullRequest":true,"CreatedAt":"2019-12-26T12:55:17","Actor":"hughbe","Number":"2574","RawContent":null,"Title":"Improve ColumnStyle/Row/TableLayout style tests","State":"open","Body":"## Proposed Changes\r\n- Improve ColumnStyle/Row/TableLayout style tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2574)","Url":"https://github.com/dotnet/winforms/pull/2574","RelatedDescription":"Open PR \"Improve ColumnStyle/Row/TableLayout style tests\" (#2574)"},{"Id":"542494533","IsPullRequest":false,"CreatedAt":"2019-12-26T09:20:59","Actor":"ezolotko","Number":"2573","RawContent":null,"Title":"DocumentDesigner class is not implemented. What support to expect for custom hosting of Windows Forms designer?","State":"open","Body":"In .NET Core 3.1, DocumentDesigner class from System.Windows.Forms.Design.dll has all of its methods implemented as\r\n`new NotImplementedException(SR.NotImplementedByDesign);`\r\n\r\nThe DocumentDesigner class is vital for custom hosting of Windows Forms designer in user applications. Judging from the class' .NET Framework implementation, it contains a lot of \"glue\" root designer logic, common for all document designers.\r\n\r\nWill this class and other classes required for custom designer hosting be implemented in .NET Core?\r\nWhat is the Microsoft's stated direction regarding the Windows Forms designer custom hosting features in .NET Core?\r\n\r\nA variety of applications use this Windows Forms feature at the moment. They include report designers, application-specific data entry form designers, and others.","Url":"https://github.com/dotnet/winforms/issues/2573","RelatedDescription":"Open issue \"DocumentDesigner class is not implemented. What support to expect for custom hosting of Windows Forms designer?\" (#2573)"},{"Id":"541521752","IsPullRequest":true,"CreatedAt":"2019-12-24T22:24:04","Actor":"hughbe","Number":"2557","RawContent":null,"Title":"Extract TableLayoutControlCollection from TableLayoutPanel.cs","State":"closed","Body":"## Proposed Changes\r\n- Extract TableLayoutControlCollection from TableLayoutPanel.cs\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2557)","Url":"https://github.com/dotnet/winforms/pull/2557","RelatedDescription":"Closed or merged PR \"Extract TableLayoutControlCollection from TableLayoutPanel.cs\" (#2557)"},{"Id":"541713749","IsPullRequest":true,"CreatedAt":"2019-12-24T22:18:08","Actor":"hughbe","Number":"2560","RawContent":null,"Title":"Remove dead code from TableLayoutSettings","State":"closed","Body":"## Proposed Changes\r\n- Remove TableLayoutSettings.IsValid\r\n- Remove dead null check in StyleConverter.ConvertTo\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2560)","Url":"https://github.com/dotnet/winforms/pull/2560","RelatedDescription":"Closed or merged PR \"Remove dead code from TableLayoutSettings\" (#2560)"},{"Id":"542172198","IsPullRequest":true,"CreatedAt":"2019-12-24T16:33:27","Actor":"hughbe","Number":"2572","RawContent":null,"Title":"Add DataGridView selected collection tests","State":"open","Body":"## Proposed Changes\r\n- Add DataGridView selected collection tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2572)","Url":"https://github.com/dotnet/winforms/pull/2572","RelatedDescription":"Open PR \"Add DataGridView selected collection tests\" (#2572)"},{"Id":"542125917","IsPullRequest":true,"CreatedAt":"2019-12-24T13:14:23","Actor":"hughbe","Number":"2571","RawContent":null,"Title":"Remove Control.GetVisibleCore","State":"open","Body":"## Explanation\r\n- GetVisibleCore is defined as an `internal virtual` method, but it is never overriden\r\n- Therefore, we can get rid of it entirely and collapse it into `Control.Visible` and replace all callers of `GetVisibleCore` to `Visible`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2571)","Url":"https://github.com/dotnet/winforms/pull/2571","RelatedDescription":"Open PR \"Remove Control.GetVisibleCore\" (#2571)"},{"Id":"542122557","IsPullRequest":true,"CreatedAt":"2019-12-24T13:01:48","Actor":"dotnet-maestro[bot]","Number":"2570","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191225.1\r\n- **Date Produced**: 12/25/2019 2:23 PM\r\n- **Commit**: 4808b9983dea4d99e40df6215233ea78d396df6f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19625.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19625.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19625.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19625.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2570)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2570","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#2570)"},{"Id":"542084788","IsPullRequest":true,"CreatedAt":"2019-12-24T10:40:36","Actor":"hughbe","Number":"2569","RawContent":null,"Title":"Move files to the right folder","State":"open","Body":"## Proposed Changes\r\n- Move files to the right folder\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2569)","Url":"https://github.com/dotnet/winforms/pull/2569","RelatedDescription":"Open PR \"Move files to the right folder\" (#2569)"},{"Id":"541947901","IsPullRequest":true,"CreatedAt":"2019-12-24T00:59:16","Actor":"hughbe","Number":"2568","RawContent":null,"Title":"Add ControlAccessibleObject tests","State":"open","Body":"## Proposed Changes\r\n- Add ControlAccessibleObject tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2568)","Url":"https://github.com/dotnet/winforms/pull/2568","RelatedDescription":"Open PR \"Add ControlAccessibleObject tests\" (#2568)"},{"Id":"541871851","IsPullRequest":true,"CreatedAt":"2019-12-23T19:11:32","Actor":"hughbe","Number":"2567","RawContent":null,"Title":"Add StatusStrip tests","State":"open","Body":"## Proposed Changes\r\n- Add StatusStrip tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2567)","Url":"https://github.com/dotnet/winforms/pull/2567","RelatedDescription":"Open PR \"Add StatusStrip tests\" (#2567)"},{"Id":"541830573","IsPullRequest":true,"CreatedAt":"2019-12-23T16:55:34","Actor":"hughbe","Number":"2566","RawContent":null,"Title":"Cleanup ListControl tests","State":"open","Body":"## Proposed Changes\r\nWas going to write some test for subclasses of `ListControl` but noticed the tests were a bit messy - not disposing/using `WinFormsFact` etc. so went through and cleaned up the test class\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2566)","Url":"https://github.com/dotnet/winforms/pull/2566","RelatedDescription":"Open PR \"Cleanup ListControl tests\" (#2566)"},{"Id":"541799941","IsPullRequest":true,"CreatedAt":"2019-12-23T15:27:58","Actor":"hughbe","Number":"2565","RawContent":null,"Title":"Add Microsoft.DotNet.RemoteExecutor package reference to tests","State":"open","Body":"This is needed for various tests that test Application.RenderWithVisualStyles, because calling `Application.UseVisualStyles` poisons the whole test process, meaning that all subsequent tests will be run in visual style enabled mode. Since we want to avoid one test affecting any others, these sorts of tests should be run in their own process.\r\n\r\nI'm submitting this on its own since PRs using this could take some time and arcade package updates makes it an absolute nightmare to add new package references as there will be an almost daily merge conflict!\r\n\r\nSee #2564\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2565)","Url":"https://github.com/dotnet/winforms/pull/2565","RelatedDescription":"Open PR \"Add Microsoft.DotNet.RemoteExecutor package reference to tests\" (#2565)"},{"Id":"541776625","IsPullRequest":true,"CreatedAt":"2019-12-23T14:24:47","Actor":"hughbe","Number":"2564","RawContent":null,"Title":"WIP: Clear ComCtlSupportsVisualStyles initialization status when enabling visual styles","State":"open","Body":"Depends on #2565 \r\n\r\nThe implementation of `Application.RenderWithVisualStyles` is the following:\r\n```cs\r\npublic static bool RenderWithVisualStyles\r\n    => ComCtlSupportsVisualStyles && VisualStyleRenderer.IsSupported;\r\n```\r\n\r\nThe implementation of `Application.ComCtlSupportsVisualStyles` is the following:\r\n```cs\r\n/// <summary>\r\n///  Typically, you shouldn't need to use this directly - use RenderWithVisualStyles instead.\r\n/// </summary>\r\ninternal static bool ComCtlSupportsVisualStyles\r\n{\r\n    get\r\n    {\r\n        if (!s_comCtlSupportsVisualStylesInitialized)\r\n        {\r\n            s_comCtlSupportsVisualStyles = InitializeComCtlSupportsVisualStyles();\r\n            s_comCtlSupportsVisualStylesInitialized = true;\r\n        }\r\n        return s_comCtlSupportsVisualStyles;\r\n    }\r\n}\r\n\r\nprivate static bool InitializeComCtlSupportsVisualStyles()\r\n{\r\n    if (UseVisualStyles)\r\n    {\r\n        // At this point, we may not have loaded ComCtl6 yet, but it will eventually be loaded,\r\n        // so we return true here. This works because UseVisualStyles, once set, cannot be\r\n        // turned off.\r\n        return true;\r\n    }\r\n\r\n    // To see if we are comctl6, we look for a function that is exposed only from comctl6\r\n    // we do not call DllGetVersion or any direct p/invoke, because the binding will be\r\n    // cached.\r\n    //\r\n    // GetModuleHandle  returns a handle to a mapped module without incrementing its\r\n    // reference count.\r\n    IntPtr hModule = Kernel32.GetModuleHandleW(Libraries.Comctl32);\r\n    if (hModule != IntPtr.Zero)\r\n    {\r\n        return Kernel32.GetProcAddress(hModule, \"ImageList_WriteEx\") != IntPtr.Zero;\r\n    }\r\n\r\n    // Load comctl since GetModuleHandle failed to find it\r\n    hModule = Kernel32.LoadLibraryFromSystemPathIfAvailable(Libraries.Comctl32);\r\n    if (hModule == IntPtr.Zero)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return Kernel32.GetProcAddress(hModule, \"ImageList_WriteEx\") != IntPtr.Zero;\r\n}\r\n```\r\n\r\nNotice that `Application.ComCtlSupportsVisualStyles` caches the result. This can cause problems when we call `Application.EnableVisualStyles()`.\r\n\r\nOnce `Application.EnableVisualStyles()` is enabled, we expect `Application.ComCtlSupportsVisualStyles` to be true (because we just enabled visual styles). `Application.RenderWithVisualStyles` would be true as a result.\r\n\r\nHowever, in the following case this does not work, as the result of `Application.ComCtlSupportsVisualStyles` is cached to `false` even though we enabled visual styles.\r\n```cs\r\nAssert.False(Application.RenderWithVisualStyles); // Commenting this out makes the assertion work.\r\nApplication.UseVisualStyles();\r\nAssert.True(Application.RenderWithVisualStyles);\r\n```\r\n\r\nWe can fix this by resetting the variable indicating whether `Application.ComCtlSupportsVisualStyles` is initialised, namely `s_comCtlSupportsVisualStylesInitialized`\r\n\r\nRelated #2556 #2555 #2555\r\n/cc @weltkante @sharwell \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2564)","Url":"https://github.com/dotnet/winforms/pull/2564","RelatedDescription":"Open PR \"WIP: Clear ComCtlSupportsVisualStyles initialization status when enabling visual styles\" (#2564)"},{"Id":"541761254","IsPullRequest":true,"CreatedAt":"2019-12-23T13:43:04","Actor":"hughbe","Number":"2563","RawContent":null,"Title":"Fix NullReferenceException serializing TableLayoutSettings for controls without name","State":"open","Body":"## Proposed Changes\r\n- Fix NullReferenceException serializing TableLayoutSettings for controls without name\r\n\r\nThe problem is that we would not set the `ControlInformation.Name` property so throw NRE serializing it\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2563)","Url":"https://github.com/dotnet/winforms/pull/2563","RelatedDescription":"Open PR \"Fix NullReferenceException serializing TableLayoutSettings for controls without name\" (#2563)"},{"Id":"541745099","IsPullRequest":true,"CreatedAt":"2019-12-23T13:22:00","Actor":"dotnet-maestro[bot]","Number":"2561","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191222.1\r\n- **Date Produced**: 12/22/2019 3:04 PM\r\n- **Commit**: 163d551438aa5a1fdae12b8405651f894e841211\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19622.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19622.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19622.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19622.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2561)","Url":"https://github.com/dotnet/winforms/pull/2561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2561)"},{"Id":"541746302","IsPullRequest":true,"CreatedAt":"2019-12-23T13:05:21","Actor":"hughbe","Number":"2562","RawContent":null,"Title":"Extract TableLayoutSettings classes","State":"open","Body":"## Proposed Changes\r\n- Extract TableLayoutSettings classes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2562)","Url":"https://github.com/dotnet/winforms/pull/2562","RelatedDescription":"Open PR \"Extract TableLayoutSettings classes\" (#2562)"},{"Id":"541710240","IsPullRequest":true,"CreatedAt":"2019-12-23T11:19:37","Actor":"hughbe","Number":"2559","RawContent":null,"Title":"WIP: Add TableLayoutPanel tests","State":"open","Body":"## Proposed Changes\r\n- Add TableLayoutPanel tests\r\n\r\nDepends on https://github.com/dotnet/winforms/pull/2563\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2559)","Url":"https://github.com/dotnet/winforms/pull/2559","RelatedDescription":"Open PR \"WIP: Add TableLayoutPanel tests\" (#2559)"},{"Id":"541635669","IsPullRequest":true,"CreatedAt":"2019-12-23T08:09:59","Actor":"gpetrou","Number":"2558","RawContent":null,"Title":"Move GetDesktopWindow and GetForegroundWindow to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Move GetDesktopWindow and GetForegroundWindow to Interop User32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2558)","Url":"https://github.com/dotnet/winforms/pull/2558","RelatedDescription":"Open PR \"Move GetDesktopWindow and GetForegroundWindow to Interop User32\" (#2558)"},{"Id":"541499047","IsPullRequest":true,"CreatedAt":"2019-12-22T20:44:21","Actor":"hughbe","Number":"2556","RawContent":null,"Title":"WIP: Add ListViewInsertionMark ComCtl32 tests and Cleanup ListViewInsertionMark interop","State":"open","Body":"## Proposed Changes\r\n- Add ListViewInsertionMark ComCtl32 tests\r\n- Cleanup ListViewInsertionMark interop (extracted from #2459 with cleanup)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2556)","Url":"https://github.com/dotnet/winforms/pull/2556","RelatedDescription":"Open PR \"WIP: Add ListViewInsertionMark ComCtl32 tests and Cleanup ListViewInsertionMark interop\" (#2556)"},{"Id":"541489059","IsPullRequest":true,"CreatedAt":"2019-12-22T18:58:30","Actor":"hughbe","Number":"2555","RawContent":null,"Title":"WIP: Cleanup LVGROUPW interop and fix HeaderAlignment refresh bugList view group tests","State":"open","Body":"## Proposed Changes\r\n- Fix setting ListViewGroup.HeaderAlignment if the handle is already created\r\n- Avoid marshalling using `Marshal.PtrToStringAuto` and instead pin a `string`\r\n- Add tests to make sure we are calling into comctl32 correctly\r\n\r\nFixes https://github.com/dotnet/winforms/issues/2554\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2555)","Url":"https://github.com/dotnet/winforms/pull/2555","RelatedDescription":"Open PR \"WIP: Cleanup LVGROUPW interop and fix HeaderAlignment refresh bugList view group tests\" (#2555)"},{"Id":"541486954","IsPullRequest":false,"CreatedAt":"2019-12-22T18:37:48","Actor":"hughbe","Number":"2554","RawContent":null,"Title":"Setting ListViewGroup.HorizontalAlignment does not work once handle is created","State":"open","Body":"E.g. with the following form\r\n![image](https://user-images.githubusercontent.com/1275900/71325761-7b219600-24e9-11ea-8b95-879f17c64404.png)\r\n\r\nSetting `listView1.Groups[0].HeaderAlignment = HorizontalAlignment.Left;` causes no update to the alignment of the group.\r\n\r\nHowever, calling 'RecreateHandle` on the `ListView` does fix this.\r\n\r\nThe fix would be make the setter of `ListViewGroup.HeaderAlignment` recreate the handle: i.e.\r\n```cs\r\n\r\n        /// <summary>\r\n        ///  The alignment of the group header.\r\n        /// </summary>\r\n        [DefaultValue(HorizontalAlignment.Left)]\r\n        [SRCategory(nameof(SR.CatAppearance))]\r\n        public HorizontalAlignment HeaderAlignment\r\n        {\r\n            get => _headerAlignment;\r\n            set\r\n            {\r\n                if (!ClientUtils.IsEnumValid(value, (int)value, (int)HorizontalAlignment.Left, (int)HorizontalAlignment.Center))\r\n                {\r\n                    throw new InvalidEnumArgumentException(nameof(value), (int)value, typeof(HorizontalAlignment));\r\n                }\r\n\r\n                if (_headerAlignment != value)\r\n                {\r\n                    _headerAlignment = value;\r\n                    ListView?.RecreateHandleInternal();\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n![Screen Recording 2019-12-22 at 06 35 pm](https://user-images.githubusercontent.com/1275900/71325794-e10e1d80-24e9-11ea-97b3-85e079776c21.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2554","RelatedDescription":"Open issue \"Setting ListViewGroup.HorizontalAlignment does not work once handle is created\" (#2554)"},{"Id":"541476484","IsPullRequest":true,"CreatedAt":"2019-12-22T16:58:01","Actor":"hughbe","Number":"2553","RawContent":null,"Title":"Improve tests for FlowLayoutPanel/FlowLayoutSettings","State":"open","Body":"## Proposed Changes\r\n- Improve tests for FlowLayoutPanel/FlowLayoutSettings\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2553)","Url":"https://github.com/dotnet/winforms/pull/2553","RelatedDescription":"Open PR \"Improve tests for FlowLayoutPanel/FlowLayoutSettings\" (#2553)"},{"Id":"541473553","IsPullRequest":true,"CreatedAt":"2019-12-22T16:35:48","Actor":"hughbe","Number":"2552","RawContent":null,"Title":"Cleanup and improve ComponentEditorPage testing","State":"open","Body":"## Proposed Changes\r\n- Cleanup and improve ComponentEditorPage testing\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2552)","Url":"https://github.com/dotnet/winforms/pull/2552","RelatedDescription":"Open PR \"Cleanup and improve ComponentEditorPage testing\" (#2552)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-27T05:31:00.2358983Z","RunDurationInMilliseconds":702}