{"Data":{"Blog":{"FeedItems":[{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":53,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":39,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":66,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7589008737","Type":"PullRequestEvent","CreatedAt":"2018-04-26T05:09:13","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17749","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, PgoData to preview1-02725-03, preview1-26426-01, preview3-26425-01, master-20180424-0039, respectively (master)\" (#17749) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7588782758","Type":"IssuesEvent","CreatedAt":"2018-04-26T03:39:59","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17789","RelatedDescription":"Opened issue \"[local gc] fix com interop issues on local gc\" (#17789) at dotnet/coreclr","RelatedBody":"See https://github.com/dotnet/coreclr/blob/54bdc1681c08cf9230561733d4728bc13cbc494e/src/gc/objecthandle.cpp#L451-L467 "},{"Id":"7588367709","Type":"IssuesEvent","CreatedAt":"2018-04-26T01:11:56","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/10980","RelatedDescription":"Closed issue \"Jit: improve codegen for impRuntimeLookup\" (#10980) at dotnet/coreclr","RelatedBody":"`impRuntimeLookup` generates a conditional-deref tree:\r\n```\r\n[000077] ------------             *  stmtExpr  void  (IL   ???...  ???)\r\n[000069] ------------ then        |        /--*  lclVar    long   V09 tmp2         \r\n[000073] ------------             |     /--*  colon     long  \r\n[000072] ------------ else        |     |  \\--*  indir     long  \r\n[000070] ------------             |     |     |  /--*  const     long   -1\r\n[000071] ------------             |     |     \\--*  +         long  \r\n[000062] ------------             |     |        \\--*  lclVar    long   V09 tmp2         \r\n[000074] ------------             |  /--*  qmark     long  \r\n[000067] ------------             |  |  |  /--*  const     int    0\r\n[000068] Q-----------    if       |  |  \\--*  ==        int   \r\n[000065] ------------             |  |     |  /--*  const     int    1\r\n[000066] ------------             |  |     \\--*  &         int   \r\n[000064] ------------             |  |        \\--*  cast      int <- long\r\n[000063] ------------             |  |           \\--*  lclVar    long   V09 tmp2         \r\n[000076] -A----------             \\--*  =         long  \r\n[000075] D------N----                \\--*  lclVar    long   V10 tmp3         \r\n```\r\nfor x64 this turns into the following native code:\r\n```asm\r\n       41F7C001000000       test     r8d, 1\r\n       7502                 jne      SHORT G_M28280_IG05\r\n       EB07                 jmp      SHORT G_M28280_IG06\r\n\r\nG_M28280_IG05:\r\n       4D8B80FFFFFFFF       mov      r8, qword ptr [r8+FFFFFFFFH]\r\n\r\nG_M28280_IG06:\r\n```\r\nwe ought to be able to produce something more compact like\r\n```asm\r\n       41F7C001000000       test     r8d, 1\r\n       7502                 je       SHORT G_M28280_IG06\r\n       4D8B80FFFFFFFF       mov      r8, qword ptr [r8+FFFFFFFFH]\r\n\r\nG_M28280_IG06:\r\n```\r\nand maybe find smaller encodings for the immediate values."},{"Id":"7588348078","Type":"PullRequestEvent","CreatedAt":"2018-04-26T01:04:35","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17788","RelatedDescription":"Opened pull request \"Remove some fgMorphArgs dead code\" (#17788) at dotnet/coreclr","RelatedBody":"For the arm64 case of a special return buffer argument (always x8),\r\nwe don't need the code to check for it, because a few lines above all\r\nnon-standard args cause us to \"continue\", and skip the code.\r\n\r\nAlso, remove a duplicative #ifdef."},{"Id":"7588213253","Type":"IssuesEvent","CreatedAt":"2018-04-26T00:14:10","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17787","RelatedDescription":"Opened issue \"[windows/corefx] running corefx tests with -paralel none fails with VM assert\" (#17787) at dotnet/coreclr","RelatedBody":"Example:\r\n```\r\nZ:\\bin\\tests\\System.Runtime.Tests\\netcoreapp-Windows_NT-Release-arm>call Z:\\bin\\testhost\\netcoreapp-Windows_NT-Release-arm\\dotnet.exe xunit.console.netcore.exe System.Runtime.Tests.dll -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonwindowstests  -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -showprogress -parallel none\r\nxUnit.net console test runner (32-bit .NET Core)\r\n***\r\n System.Tests.TypedReferenceTests.NegativeMakeTypedReference [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: (null)\r\n      Actual:   flds\r\n      Stack Trace:\r\n         F:\\git\\corefx\\src\\CoreFx.Private.TestUtilities\\src\\System\\AssertExtensions.cs(48,0): at System.AssertExtensions.Throws[T](String paramName, Action action)\r\n         F:\\git\\corefx\\src\\System.Runtime\\tests\\System\\TypedReferenceTests.cs(60,0): at System.Tests.TypedReferenceTests.NegativeMakeTypedReference()\r\n\r\nAssert failure(PID 5560 [0x000015b8], Thread: 11680 [0x2da0]): (ret != WAIT_TIMEOUT) || (millis != INFINITE)\r\n\r\n<no module>! <no symbol> + 0x0 (0x00000000)\r\n    File: c:\\git\\coreclr\\src\\vm\\threads.cpp Line: 3778\r\n    Image: Z:\\bin\\testhost\\netcoreapp-Windows_NT-Release-arm\\dotnet.exe\r\n```\r\n\r\nor on x64:\r\n```\r\nF:\\git\\corefx\\bin\\tests\\System.Runtime.Tests\\netcoreapp-Windows_NT-Release-x64>F:\\git\\corefx\\bin\\runtime\\netcoreapp-Windows_NT-Release-x64\\CoreRun.exe xunit.console.netcore.exe System.Runtime.Tests.dll -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonwindowstests  -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -parallel none\r\nxUnit.net console test runner (64-bit .NET Core)\r\nCopyright (C) 2014 Outercurve Foundation.\r\n\r\nDiscovering: System.Runtime.Tests\r\nDiscovered:  System.Runtime.Tests\r\nStarting:    System.Runtime.Tests\r\n   System.Tests.TypedReferenceTests.NegativeMakeTypedReference [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: (null)\r\n      Actual:   flds\r\n      Stack Trace:\r\n         F:\\git\\corefx\\src\\CoreFx.Private.TestUtilities\\src\\System\\AssertExtensions.cs(50,0): at System.AssertExtensions.Throws[T](String paramName, Action action)\r\n         F:\\git\\corefx\\src\\System.Runtime\\tests\\System\\TypedReferenceTests.cs(60,0): at System.Tests.TypedReferenceTests.NegativeMakeTypedReference()\r\n\r\nAssert failure(PID 26052 [0x000065c4], Thread: 16712 [0x4148]): (ret != WAIT_TIMEOUT) || (millis != INFINITE)\r\n\r\nCORECLR! Thread::DoAppropriateWaitWorker + 0x5F1 (0x00007ffc`6022948d)\r\nCORECLR! `Thread::DoAppropriateWait'::`11'::__Body::Run + 0x9B (0x00007ffc`60236a63)\r\nCORECLR! Thread::DoAppropriateWait + 0xBE (0x00007ffc`60228e0e)\r\nCORECLR! WaitHandleNative::CorWaitMultipleNative + 0x366 (0x00007ffc`60790806)\r\nSYSTEM.PRIVATE.CORELIB! <no symbol> + 0x0 (0x00007ffc`50c2cbca)\r\n<no module>! <no symbol> + 0x0 (0x00007ffc`021f62a6)\r\n    File: c:\\git\\coreclr\\src\\vm\\threads.cpp Line: 3778\r\n    Image: F:\\git\\corefx\\bin\\runtime\\netcoreapp-Windows_NT-Release-x64\\CoreRun.exe\r\n\r\n```\r\n\r\nto repro on x64:\r\nCoreCLR: \r\n```\r\nbuild.cmd x64 checked skiptests generatelayout\r\n```\r\nCoreFX: \r\n```\r\nbuild.cmd -Release -os:Windows_NT -buildArch:x64-- /p:CoreCLROverridePath=C:\\git\\coreclr\\bin\\Product\\Windows_NT.x64.Checked\r\nbuild-tests -Release -os:Windows_NT -buildArch:x64-skiptests\r\n```\r\n\r\nmove to the test location: \r\n```\r\ncd F:\\git\\corefx\\bin\\tests\\System.Runtime.Tests\\netcoreapp-Windows_NT-Release-x64\r\n```\r\nrun: \r\n```\r\nF:\\git\\corefx\\bin\\runtime\\netcoreapp-Windows_NT-Release-x64\\CoreRun.exe xunit.console.netcore.exe System.Runtime.Tests.dll -notrait Benchmark=true -notrait category=nonnetcoreapptests -notrait category=nonwindowstests  -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -parallel none\r\n```\r\n\r\n\r\nIs it something expected? Found during work on #17585."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7588748037","Type":"PullRequestEvent","CreatedAt":"2018-04-26T03:27:18","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/9139","RelatedDescription":"Closed pull request \"MSBuild 15.7.172 (2xx)\" (#9139) at dotnet/cli","RelatedBody":"Internal VS PR (approved & merged): https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/118540\r\n\r\nNote we know of at least one more MSBuild version before 15.7 RTM: https://github.com/Microsoft/msbuild/pull/3222 to drop the \"preview\" version numbering."},{"Id":"7588745511","Type":"PullRequestEvent","CreatedAt":"2018-04-26T03:26:24","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/9141","RelatedDescription":"Closed pull request \"MSBuild 15.7.172 (3xx)\" (#9141) at dotnet/cli","RelatedBody":"Keeping up to date with prodcon.\r\n\r\nThis isn't critical, but after RTM we'll need to make a commit like this to prep for servicing. See Microsoft/msbuild#3228 for details."},{"Id":"7588744337","Type":"PullRequestEvent","CreatedAt":"2018-04-26T03:25:59","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9148","RelatedDescription":"Opened pull request \"MSBuild 15.7.177 (3xx)\" (#9148) at dotnet/cli","RelatedBody":"This supersedes #9141\r\n\r\nKeeping up to date with prodcon.\r\n\r\nThis isn't critical, but after RTM we'll need to make a commit like this to prep for servicing. See Microsoft/msbuild#3228 for details."},{"Id":"7588738433","Type":"PullRequestEvent","CreatedAt":"2018-04-26T03:24:00","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9147","RelatedDescription":"Opened pull request \"MSBuild 15.7.177 (2xx)\" (#9147) at dotnet/cli","RelatedBody":"This is based on top of #9133 because that's the version of NuGet we have a compile-time reference to and which will ship with Preview 6. I think it caused an issue last time the assembly version changed."},{"Id":"7588213695","Type":"PullRequestEvent","CreatedAt":"2018-04-26T00:14:19","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9146","RelatedDescription":"Opened pull request \"Explicitly note whether the package version props is being overridden\" (#9146) at dotnet/cli","RelatedBody":""},{"Id":"7588053358","Type":"IssuesEvent","CreatedAt":"2018-04-25T23:18:58","Actor":"jcagme","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9145","RelatedDescription":"Opened issue \"Build failures in 'prodcon/cli/release/2.1.3xx/' - '20180425.02'\" (#9145) at dotnet/cli","RelatedBody":"@dotnet-mc-bot commented on [Wed Apr 25 2018](https://github.com/dotnet/core-eng/issues/3368)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629756\r\n  - **Agent:** DDVSOLINUXAGE003\r\n  - **Error log:** An error occurred while sending the request....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629755\r\n  - **Agent:** DDVSOLINUXAGE002\r\n  - **Error log:** The previous error was converted to a warning because the task was called with ContinueOnError=true....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629759\r\n  - **Agent:** DDVSOMACAGE006\r\n  - **Error log:** 15:07:00.114     1>/Users/buildagent/agent/_work/0/s/test/MsBuildScript.Tests/runtests.target(0,0): error MSB4018: The \"EnsureFileExistsOnAzureBlobStorage\" task failed unexpectedly....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629762\r\n  - **Agent:** DDVSOWINAGE015\r\n  - **Error log:** 15:20:09.537     1>E:\\A\\_work\\0\\s\\test\\MsBuildScript.Tests\\runtests.target(0,0): error MSB4018: The \"EnsureFileExistsOnAzureBlobStorage\" task failed unexpectedly....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629763\r\n  - **Agent:** DDVSOWINAGE018\r\n  - **Error log:** 15:19:57.764     1>E:\\A\\_work\\0\\s\\test\\MsBuildScript.Tests\\runtests.target(0,0): error MSB4018: The \"EnsureFileExistsOnAzureBlobStorage\" task failed unexpectedly....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629894\r\n  - **Agent:** DDVSOLINUXAGE002\r\n  - **Error log:** An error occurred while sending the request....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629895\r\n  - **Agent:** DDVSOLINUXAGE003\r\n  - **Error log:** An error occurred while sending the request....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629898\r\n  - **Agent:** DDVSOMACAGE006\r\n  - **Error log:** 15:42:45.819     1>/Users/buildagent/agent/_work/0/s/test/MsBuildScript.Tests/runtests.target(0,0): error MSB4018: The \"EnsureFileExistsOnAzureBlobStorage\" task failed unexpectedly....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629901\r\n  - **Agent:** DDVSOWINAGE012\r\n  - **Error log:** 15:52:06.258     1>E:\\A\\_work\\0\\s\\test\\MsBuildScript.Tests\\runtests.target(0,0): error MSB4018: The \"EnsureFileExistsOnAzureBlobStorage\" task failed unexpectedly....\r\n\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1629902\r\n  - **Agent:** DDVSOWINAGE015\r\n  - **Error log:** 15:48:28.932     1>E:\\A\\_work\\0\\s\\test\\MsBuildScript.Tests\\runtests.target(0,0): error MSB4018: The \"EnsureFileExistsOnAzureBlobStorage\" task failed unexpectedly....\r\n\r\n@jcagme, @markwilkie\r\n\n\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7582285345","Type":"IssuesEvent","CreatedAt":"2018-04-25T03:12:55","Actor":"dotMorten","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/718","RelatedDescription":"Opened issue \"Add IItemProperties, IItemProperties, IEditableCollectionView and associated interfaces to standard\" (#718) at dotnet/standard","RelatedBody":"The `IItemProperties` and `IEditableCollectionView` in System.ComponentModel namespace are really great for describing data on ICollectionViewSource to handle dynamic datasources, where you don't have a pre-defined class to encapsulate a datamodel. For instance when dealing with generic data from any database table. It also avoid the need for reflection, as the IItemProperties provides the PropertyInfo you otherwise would retrieve through reflection.\r\n\r\nThese interfaces are useful for generating UI dynamically based on dynamic data models, for use with for instance DataGrids, form entries etc. By having your data collections implement these interfaces, specific platforms can use these interfaces to generate a UI for the data.\r\n\r\n\r\nDoc references:\r\n- [IItemProperties](https://docs.microsoft.com/dotnet/api/system.componentmodel.iitemproperties?view=netframework-4.7.1)\r\n- [IEditableCollectionView](https://docs.microsoft.com/dotnet/api/system.componentmodel.ieditablecollectionview?view=netframework-4.7.1)\r\n- [ItemPropertyInfo](https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.itempropertyinfo?view=netframework-4.7.1)"},{"Id":"7579149418","Type":"IssuesEvent","CreatedAt":"2018-04-24T15:09:44","Actor":"uazo","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/717","RelatedDescription":"Opened issue \"PR: Re-add support for TypeDescriptor in System.ComponentModel.DataAnnotations for .NET standard 2.0\" (#717) at dotnet/standard","RelatedBody":"System.ComponentModel.DataAnnotations.GetPropertyValues should use TypeDescriptor in .net stardard 2.0\r\n\r\n(ref https://github.com/Microsoft/referencesource/blob/master/System.ComponentModel.DataAnnotations/DataAnnotations/Validator.cs#L443)"},{"Id":"7568617377","Type":"IssuesEvent","CreatedAt":"2018-04-22T21:34:56","Actor":"EltonGarcia","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/716","RelatedDescription":"Opened issue \"MarkupExtension not found with net standard 2.0\" (#716) at dotnet/standard","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nMarkupExtension not found with net standard 2.0\r\n\r\n### Steps to Reproduce\r\n\r\n1. Clone the issue project sample (https://github.com/EltonGarcia/XamarinMarkupExtensionIssue)\r\n2. Build the project\r\n\r\n### Expected Behavior\r\nBuild successful\r\n\r\n### Actual Behavior\r\nBuild fails with error: Type design:HslColorExtension not found in xmlns clr-namespace:Design.Extensions;assembly:Design (MarkupIssue)\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: ?\r\n- IDE: Visual Studio for Mac\r\n- Nuget Packages: Xamarin Forms and System.ComponentModel\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/EltonGarcia/XamarinMarkupExtensionIssue\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7588897640","Type":"PullRequestEvent","CreatedAt":"2018-04-26T04:24:20","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29339","RelatedDescription":"Opened pull request \"Fix regression in SslStream eof handling\" (#29339) at dotnet/corefx","RelatedBody":"If SslStream reads 0 bytes from the underlying stream while reading the frame header and payload, it should throw an IOException for EOF, but on Windows it's passing empty data off to the native decryption routine and on Unix it's hanging in an infinite loop.  This is a regression from 2.0 due to refactorings done in 2.1.\r\n\r\ncc: @geoffkizer, @davidsh, @halter73, @Drawaes, @karelz "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7589024448","Type":"PullRequestEvent","CreatedAt":"2018-04-26T05:15:10","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26373","RelatedDescription":"Merged pull request \"Merge upstream/dev15.7.x into features/NullableReferenceTypes\" (#26373) at dotnet/roslyn","RelatedBody":""},{"Id":"7588938812","Type":"PullRequestEvent","CreatedAt":"2018-04-26T04:40:56","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26405","RelatedDescription":"Opened pull request \"[WIP] Range/Index operators\" (#26405) at dotnet/roslyn","RelatedBody":"For personal review only"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7588797670","Type":"PullRequestEvent","CreatedAt":"2018-04-26T03:45:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5749","RelatedDescription":"Merged pull request \"Devirtualize delegate creation to sealed virtuals\" (#5749) at dotnet/corert","RelatedBody":"These could be in sealed vtable slots."},{"Id":"7588505753","Type":"PullRequestEvent","CreatedAt":"2018-04-26T02:02:06","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5750","RelatedDescription":"Merged pull request \"Fix Exceptions in OSX\" (#5750) at dotnet/corert","RelatedBody":"After the XCode update on April 12, exceptions in CoreRT on OSX stopped working. \r\n\r\nStack unwinding through any one of the specially defined unmanaged runtime methods (in this case `RhpThrowEx`) would cause an access violation. Diagnosing this further the  `EXPORT_POINTER_TO_ADDRESS` did not correctly export a pointer, but instead just a literal value of `1`. The underlying issue was that the value `1b` in the macro was interpreted as the binary digit `1` instead of correctly identified as the label. \r\n\r\nOur CI machines don't seem to have gotten the update yet - on an updated machine, the Exceptions test fails. \r\n\r\n@janvorli @sergiy-k "},{"Id":"7588334432","Type":"PullRequestEvent","CreatedAt":"2018-04-26T00:59:32","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5750","RelatedDescription":"Opened pull request \"Fix Exceptions in OSX\" (#5750) at dotnet/corert","RelatedBody":"After the XCode update on April 12, exceptions in CoreRT on OSX stopped working. \r\n\r\nStack unwinding through any one of the specially defined unmanaged runtime methods (in this case `RhpThrowEx`) would cause an access violation. Diagnosing this further the  `EXPORT_POINTER_TO_ADDRESS` did not correctly export a pointer, but instead just a literal value of `1`. The underlying issue was that the value `1b` in the macro was interpreted as the binary digit `1` instead of correctly identified as the label. \r\n\r\nOur CI machines don't seem to have gotten the update yet - on an updated machine, the Exceptions test fails. \r\n\r\n@janvorli @sergiy-k "},{"Id":"7588317147","Type":"IssuesEvent","CreatedAt":"2018-04-26T00:52:57","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5410","RelatedDescription":"Closed issue \"Investigate moving non-GC spills to allocas\" (#5410) at dotnet/corert","RelatedBody":"Now that returns are spills, we're generating a lot of them (and we'll generate more as part of a bug fix). We should investigate whether it would work to move non-GC types in spills to allocas instead of the shadow stack as that should generate smaller code by just using WASM locals. We still need the GC types so that we can report them to the GC from the shadow stack."},{"Id":"7588301552","Type":"PullRequestEvent","CreatedAt":"2018-04-26T00:46:51","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5748","RelatedDescription":"Merged pull request \"Enable Interface dispatch for WASM\" (#5748) at dotnet/corert","RelatedBody":"@morganbr thanks for solving the conv, vtable base and init problems. Here's my changes for interface dispatch. I think it still needs null checks before callvirt is really done. It might be a good idea to make some kind of LLVM infrastructure for injecting simple exception throwing checks inline. This would also apply nicely to the IndexOutOfRangeException that needs to be thrown in the array access code."},{"Id":"7588270686","Type":"PullRequestEvent","CreatedAt":"2018-04-26T00:35:19","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5749","RelatedDescription":"Opened pull request \"Devirtualize delegate creation to sealed virtuals\" (#5749) at dotnet/corert","RelatedBody":"These could be in sealed vtable slots."},{"Id":"7588058092","Type":"PullRequestEvent","CreatedAt":"2018-04-25T23:20:35","Actor":"kouvel","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5747","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5747) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7587937611","Type":"PullRequestEvent","CreatedAt":"2018-04-25T22:43:16","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5748","RelatedDescription":"Opened pull request \"Enable Interface dispatch for WASM\" (#5748) at dotnet/corert","RelatedBody":"@morganbr thanks for solving the conv, vtable base and init problems. Here's my changes for interface dispatch. I think it still needs null checks before callvirt is really done. It might be a good idea to make some kind of LLVM infrastructure for injecting simple exception throwing checks inline. This would also apply nicely to the IndexOutOfRangeException that needs to be thrown in the array access code."},{"Id":"7587868429","Type":"PullRequestEvent","CreatedAt":"2018-04-25T22:24:02","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5747","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5747) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7586644144","Type":"PullRequestEvent","CreatedAt":"2018-04-25T18:13:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5692","RelatedDescription":"Merged pull request \"[X86/ARM] Cross compiling docs update\" (#5692) at dotnet/corert","RelatedBody":"@dotnet/arm32-corert-contrib please review"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7588358595","Type":"IssuesEvent","CreatedAt":"2018-04-26T01:08:33","Actor":"KirillOsenkov","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2183","RelatedDescription":"Opened issue \"First-chance ArgumentOutOfRangeException in NuGetUtils.cs line\" (#2183) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/blob/1e286bdb0387033b8d0a7e3a2157010ea3855360/src/Tasks/Common/NuGetUtils.cs#L53\r\n\r\nWhen debugging a design-time build on the line above I see `fullPath` =  `System.Xml` and `dir.FullName` = `J:\\s\\src\\Tools\\BuildUtil`. Calling substring with these arguments throws, obviously. \r\n\r\nIt is being caught in the catch block below, but still causes dozens of annoying first-chance exceptions. \r\n\r\nIs there a check we could do to avoid the exception? Say, if the index is outside the string bounds, don't attempt to call Substring."},{"Id":"7587503207","Type":"PullRequestEvent","CreatedAt":"2018-04-25T21:01:24","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2182","RelatedDescription":"Merged pull request \"Fix paths in MSBuildAllProjects\" (#2182) at dotnet/sdk","RelatedBody":""},{"Id":"7587502744","Type":"PullRequestEvent","CreatedAt":"2018-04-25T21:01:18","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2182","RelatedDescription":"Opened pull request \"Fix paths in MSBuildAllProjects\" (#2182) at dotnet/sdk","RelatedBody":""},{"Id":"7587488223","Type":"PullRequestEvent","CreatedAt":"2018-04-25T20:58:32","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/2167","RelatedDescription":"Closed pull request \"Merge release/2.1.3xx to release/2.1.4xx\" (#2167) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-release/2.1.4xx\ngit reset --hard upstream/release/2.1.4xx\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-release/2.1.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"987375741204508673","CreatedAt":"2018-04-20T17:01:35+00:00","UserScreenname":"dotnet","Text":"Help us plan the future of .NET! https://t.co/R0QoZVvXx4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":126,"FavoriteCount":93,"RawContent":null},{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":250,"FavoriteCount":152,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":33,"RawContent":null},{"Id":"985915431499259904","CreatedAt":"2018-04-16T16:18:50+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz and his pair-programming guest @fiercekittenz tomorrow for some LIVE CODING and discussion ab… https://t.co/Vll8gfdlKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-04-26T05:30:30.8212629Z","RunDurationInMilliseconds":9991}