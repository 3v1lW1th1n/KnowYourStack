{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7025606547","Type":"IssuesEvent","CreatedAt":"2017-12-23T13:22:02","Actor":"haouatmohamed","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2315","RelatedDescription":"Opened issue \"Reference to type 'Task' claims it is defined in 'System.Runtime', but it could not be found\" (#2315) at aspnet/Home","RelatedBody":"Hello, I am using Visual Studio 2017 and I get this error whenever I try to debug my app:\r\n\r\nReference to type 'Task' claims it is defined in 'System.Runtime', but it could not be found\r\n\r\n\r\nAny idea please ?\r\nThanks "}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7032034399","Type":"IssuesEvent","CreatedAt":"2017-12-26T23:10:32","Actor":"LORDofDOOM","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1252","RelatedDescription":"Opened issue \"HubName or option for DI routes\" (#1252) at aspnet/SignalR","RelatedBody":"I'm sorry if this \"problem\" is already solved and I did not recognize. \r\n\r\nI've waited for the resolve of this issue: #625 \r\n\r\nBut it seems that HubName attribute will not come back. I use old SignalR-Server with HubName attribute in optional modules and load them at runtime - All signalr routes from modules are correctly set without any manual injection. \r\n\r\n@anurse wrote that the HubName attribute is no longer relevant but IMHO there are many cases where this attribute makes sense... The best option would be if HubName is auto discovered like the route attribute for MVC. \r\n\r\nIf anything like this planed or is there any other useful option for auto discovery/setup routes ?\r\n\r\n"},{"Id":"7024654700","Type":"PullRequestEvent","CreatedAt":"2017-12-22T22:31:55","Actor":"pakrym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1251","RelatedDescription":"Merged pull request \"Use new common benchmark config\" (#1251) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7027143923","Type":"IssuesEvent","CreatedAt":"2017-12-24T15:35:18","Actor":"yhvicey","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7159","RelatedDescription":"Opened issue \"How to publish a self-contained project with customized view folder?\" (#7159) at aspnet/Mvc","RelatedBody":"dotnet version: 2.1.2\r\n\r\nHere's my project folder structure:\r\n\r\n```\r\n(root)\r\n|-- src\r\n|   `-- Views\r\n|       `-- Index.html\r\n```\r\n\r\nI configured `ViewLocationFormats` in Startup.cs like this:\r\n\r\n```csharp\r\nservices.Configure<RazorViewEngineOptions>(options =>\r\n{\r\n    options.ViewLocationFormats.Clear();\r\n    options.ViewLocationFormats.Add(\"/src/Views/{0}.html\");\r\n});\r\n```\r\n\r\nWhen I published and run my project I got an exception when I visit Home/Index:\r\n\r\n```\r\nSystem.InvalidOperationException: The view 'Index' was not found. The following locations were searched:\r\n/src/Views/Index.html\r\n```\r\n\r\nOpen `<project-name>.PrecompiledViews.dll` in ILSpy, there isn't any class in it.\r\nAnd if I copied `src/Views` folder to publish folder another exception will occur:\r\n\r\n```\r\nSystem.InvalidOperationException: Cannot find compilation library location for package 'Microsoft.Win32.Registry'\r\n```\r\n\r\nEven if I set `MvcRazorCompileOnPublish` to false in .csproj file the same exception will still present.\r\nSo how to customize self-contained project's view folder and publish it correctly?\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7032175554","Type":"IssuesEvent","CreatedAt":"2017-12-27T00:55:40","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1547","RelatedDescription":"Opened issue \"How to get all Roles using asp.net core 2 Identity?\" (#1547) at aspnet/Identity","RelatedBody":"**This is a question, Not an Issue**\r\nI have a custom `IdentityRole` called `ApplicationRole`. I created a RoleManager Service but I was successful in creating new roles using `CreateAsync` method but I am facing  I can't get all roles using this implementation (`GetAllRolesAsync`). I keep getting this error,\r\n\r\n> Cannot implicitly convert type\r\n> 'System.Collections.Generic.List<ApplicationRole>' to\r\n\r\n\r\nI am posting the relevant code for this implementation.\r\n\r\n  **`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<List<ApplicationRoleViewModel>> GetAllRolesAsync();\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n    \r\n            public Task<List<ApplicationRoleViewModel>> GetAllRolesAsync()\r\n            {\r\n                var roles = this.roleManager.Roles.ToList();\r\n                return roles;\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpGet]\r\n    public async Task<IActionResult> GetAllRoles() {\r\n        var roles = this.roleManager.GetAllRolesAsync();\r\n        return Ok(roles);\r\n    } \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\n\r\n"},{"Id":"7032111629","Type":"IssuesEvent","CreatedAt":"2017-12-27T00:07:52","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1546","RelatedDescription":"Opened issue \"Optimistic concurrency failure upon using RoleManager DeleteAsync!\" (#1546) at aspnet/Identity","RelatedBody":"My implementation,\r\n\r\n**`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\nI keep receiving this error by calling `DeleteAsync`\r\n> Optimistic concurrency failure, object has been modified."},{"Id":"7032089929","Type":"PullRequestEvent","CreatedAt":"2017-12-26T23:51:43","Actor":"reaction1989","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1545","RelatedDescription":"Opened pull request \"Remove IConfiguration from use development certificate error page\" (#1545) at aspnet/Identity","RelatedBody":"fixes #1221"},{"Id":"7032055918","Type":"PullRequestEvent","CreatedAt":"2017-12-26T23:25:43","Actor":"reaction1989","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1544","RelatedDescription":"Opened pull request \"make Logger non virtual in UserManager\" (#1544) at aspnet/Identity","RelatedBody":"Fixes #1441 "},{"Id":"7031543251","Type":"IssuesEvent","CreatedAt":"2017-12-26T18:35:01","Actor":"HaythemJ","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1543","RelatedDescription":"Opened issue \"Issues after deploying to IIS\" (#1543) at aspnet/Identity","RelatedBody":"I have a Aspnet Core 2.0 application. I configured both Identity and Jwt as below:\r\n\r\n      `// Register identity framework services and also Mongo storage. \r\n            services.AddIdentityWithMongoStores(settings)\r\n                .AddDefaultTokenProviders();\r\n            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                options.LoginPath = \"/Account/Login\";\r\n                options.Cookie.HttpOnly = true;\r\n                options.Events = new CookieAuthenticationEvents\r\n                {\r\n                    OnRedirectToLogin = ctx =>\r\n                    {\r\n                        if (ctx.Request.Path.StartsWithSegments(\"/api\"))\r\n                        {\r\n                            ctx.Response.StatusCode = (int)System.Net.HttpStatusCode.Unauthorized;\r\n                        }\r\n                        else\r\n                        {\r\n                            ctx.Response.Redirect(ctx.RedirectUri);\r\n                        }\r\n                        return Task.FromResult(0);\r\n                    }\r\n                };\r\n            });\r\n\r\n             services.AddAuthentication().AddJwtBearer(cfg =>\r\n            {\r\n                cfg.RequireHttpsMetadata = false;\r\n\r\n                cfg.SaveToken = true;\r\n\r\n                cfg.TokenValidationParameters = new TokenValidationParameters\r\n                {\r\n                    ValidIssuer = Configuration[\"JwtSecurityToken:Issuer\"],\r\n                    ValidAudience = Configuration[\"JwtSecurityToken:Audience\"],\r\n                    //ValidateIssuerSigningKey = true,\r\n                    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"JwtSecurityToken:Key\"])),\r\n                    //ValidateLifetime = true,\r\n                    //ClockSkew = TimeSpan.MaxValue // remove delay of token when expire\r\n                };\r\n            });\r\n\r\n\r\n            // Add application services.\r\n            services.AddTransient<IEmailSender, EmailSender>();\r\n\r\n            ///Instead of services.AddMvc(), we need to asjust the AuthenticationSchema\r\n            ///in order to support both Identity Cookies and Jwt\r\n            services.AddMvc(\r\n                config =>\r\n            {\r\n                var defaultPolicy = new AuthorizationPolicyBuilder(new[] { JwtBearerDefaults.AuthenticationScheme, IdentityConstants.ApplicationScheme })\r\n                                 .RequireAuthenticatedUser()\r\n                                 .Build();\r\n                config.Filters.Add(new AuthorizeFilter(defaultPolicy));\r\n                config.Filters.Add(new AutoValidateAntiforgeryTokenAttribute());\r\n            }\r\n            )\r\n                .AddJsonOptions(options => options.SerializerSettings.ContractResolver = new DefaultContractResolver());\r\n`\r\nEverything runs ok on Visual Studio and I have both Identity Cookies and Jwt enabled.\r\n\r\nbut once deployed to IIS on my Machine, the calls are all Unauthorized 401 HTTP Code.\r\n\r\nI debugged using Remote Debugger on IIS and I was able to see that the user was authenticated and authorized in the below method:\r\n\r\n           `public async Task<IActionResult> Login(AuthenticationViewModel model, string returnUrl = null)\r\n        {\r\n            ViewData[\"ReturnUrl\"] = returnUrl;\r\n            if (ModelState.IsValid)\r\n            {\r\n                // This doesn't count login failures towards account lockout\r\n                // To enable password failures to trigger account lockout, set lockoutOnFailure: true\r\n                var result = await _signInManager.PasswordSignInAsync(model.UserName, model.Password, \r\n                model.RememberMe, lockoutOnFailure: false);\r\n                if (result.Succeeded)\r\n                {\r\n                    _logger.LogInformation(1, \"User logged in.\");\r\n                    return RedirectToAction(nameof(AppController.App), \"App\");\r\n                    //return RedirectToLocal(returnUrl);\r\n                }\r\n                \r\n                if (result.IsLockedOut)\r\n                {\r\n                    _logger.LogWarning(2, \"User account locked out.\");\r\n                    return View(\"Lockout\");\r\n                }\r\n                else\r\n                {\r\n                    ModelState.AddModelError(string.Empty, \"Invalid login attempt.\");\r\n                    return View(model);\r\n                }\r\n            }`\r\n\r\n![image](https://user-images.githubusercontent.com/9905290/34362420-a0ee2d6a-ea73-11e7-9075-2e5520e18cd2.png)\r\n\r\n\r\nBut when executing this instruction `return RedirectToAction(nameof(AppController.App), \"App\");` where I am redirecting to the main page it returns 302 HTTP:\r\n\r\n![image](https://user-images.githubusercontent.com/9905290/34362426-b675ac8a-ea73-11e7-904a-96f82255d556.png)\r\n\r\nI don't know why in VS it is working well and not in IIS.\r\n\r\n"},{"Id":"7030885267","Type":"IssuesEvent","CreatedAt":"2017-12-26T13:29:18","Actor":"samarmir","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1542","RelatedDescription":"Opened issue \"sample project needs more \" (#1542) at aspnet/Identity","RelatedBody":"I find it dissapointing that the sample code does not show how to extend the applicationuser with extra properties. "},{"Id":"7029228227","Type":"IssuesEvent","CreatedAt":"2017-12-25T20:27:50","Actor":"fe-c","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1541","RelatedDescription":"Opened issue \"User name and email confusing\" (#1541) at aspnet/Identity","RelatedBody":"Hello!\r\nI was created ASP.Net Core project with individual accounts.\r\nAfter user registration User Name and Email are same.\r\nI was edit Profile page to change User Name, becouse I want to display user name, not email in top navbar.\r\nAt now I cant login, cause signInManager.PasswordSignIn need user_email in user name field.\r\nWhen I change user email, I still need to signin with user_name=old_user_email.\r\nIt's very confusing users and developers.\r\n\r\n"},{"Id":"7027217337","Type":"IssuesEvent","CreatedAt":"2017-12-24T16:41:10","Actor":"dpedrelli","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1540","RelatedDescription":"Opened issue \"An error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\" (#1540) at aspnet/Identity","RelatedBody":"With Entity Framework Core 2.0.0 libraries, I was able to add multiple Identity instances and create a migration.\r\n\r\n```\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n            services.AddIdentity<DistributorApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<DistributorApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n            services.AddIdentity<SupplierApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<SupplierApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n```\r\n\r\nI added a library that used Entity Framework Core 2.0.1 and I upgraded all of my libraries to 2.0.1.  Now, the above codes produces\r\n\r\n```\r\nAn error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time\r\n```\r\n\r\nWhen I try to create a migration.\r\n\r\nI am using the format:\r\n\r\n```\r\npublic class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n    }\r\n```\r\n\r\nIf one package references 2.0.1 and the other packages reference 2.0.0, I get the following build error:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1705\tAssembly 'Microsoft.EntityFrameworkCore.Relational' with identity 'Microsoft.EntityFrameworkCore.Relational, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.EntityFrameworkCore, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.EntityFrameworkCore' with identity 'Microsoft.EntityFrameworkCore, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\tSM.DAL\tw:\\documents\\visual studio 2017\\Projects\\SelectMarketing\\SM.DAL\\CSC\t1\tActive\r\n```\r\n\r\nIf all projects reference 2.0.0, I get the following migration error:\r\n\r\n```\r\nAn error occurred while calling method 'BuildWebHost' on class 'Program'. Continuing without the application service provider. Error: Scheme already exists: Identity.Application\r\nUnable to create an object of type 'ApplicationDbContext'. Add an implementation of 'IDesignTimeDbContextFactory<ApplicationDbContext>' to the project, or see https://go.microsoft.com/fwlink/?linkid=851728 for additional patterns supported at design time.\r\n```\r\n\r\nAt one point, I had three instances of Identity and was able to create three, separate migrations."},{"Id":"7027068654","Type":"IssuesEvent","CreatedAt":"2017-12-24T14:31:09","Actor":"zmjack","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1539","RelatedDescription":"Opened issue \"How can I make the Identity working correctly thought a reverse proxy server?\" (#1539) at aspnet/Identity","RelatedBody":"I run a demo MVC project which using ASP.NET Identity under a private network (192.168.200.1). And I setup a reverse proxy server (192.168.200.201) to visit it.\r\n\r\nI use IIS 6.1 with Application Request Routing (ARR) 2.5 as the reverse proxy server.\r\n\r\nIn the Identity library, the default LoginPath is **\"/Account/Login\"**. I don't change it, but when I visit some Action which need Authorized in **192.168.200.201**, it always redirect to **\"192.168.200.1/Account/Login\"**. It's going wrong! The correct redirect address is **\"192.168.200.201/Account/Login\"**.\r\n\r\nWhat's wrong with it? I look forward to your reply. Thank you!\r\n\r\n"},{"Id":"7026094929","Type":"PullRequestEvent","CreatedAt":"2017-12-23T20:51:27","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1491","RelatedDescription":"Closed pull request \"Redeclared shema names as constants instead of static readonly fields\" (#1491) at aspnet/Identity","RelatedBody":"Related to #1490"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7023911367","Type":"PullRequestEvent","CreatedAt":"2017-12-22T17:51:27","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2233","RelatedDescription":"Merged pull request \"Use common BDN config\" (#2233) at aspnet/KestrelHttpServer","RelatedBody":"That doesn't fail in debug."},{"Id":"7023875712","Type":"PullRequestEvent","CreatedAt":"2017-12-22T17:39:48","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2234","RelatedDescription":"Opened pull request \"[WIP] React to pipeline changes\" (#2234) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7021033448","Type":"PullRequestEvent","CreatedAt":"2017-12-22T01:11:01","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2233","RelatedDescription":"Opened pull request \"Use common BDN config\" (#2233) at aspnet/KestrelHttpServer","RelatedBody":"That doesn't fail in debug."},{"Id":"7019619485","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:58:38","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1290","RelatedDescription":"Closed issue \"Make it easier to configure Kestrel endpoints from config\" (#1290) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/pull/1280 added new KestrelServerOptions.Listen APIs for directly configuring kestrel to listen on IPs and ports. However, it's non-trivial to parse these values from config so they can be passed to the new methods. @shirhatti @DamianEdwards \r\n\r\nBasic scenarios:\r\n1. http://localhost:port/ (IPv4 and IPv6 loopback, ANCM)\r\n2. http://*:port/ (IPv6Any)\r\n3. http://IP:port/\r\n4. https://*:port/ with given SSL cert & password\r\n5. https://IP:port/ with given SSL cert & password\r\n6. 2 and 4 at the same time.\r\n7. A list of IPs and ports\r\n\r\nUpdate the samples to use values passed in via config rather than hardcoded values.\r\n\r\nCurrent API/Sample:\r\n```\r\noptions.Listen(IPAddress.Loopback, 5000);\r\noptions.Listen(IPAddress.Loopback, 5001, listenOptions =>\r\n{\r\n       listenOptions.UseHttps(\"testCert.pfx\", \"testPassword\");\r\n});\r\n```\r\n\r\nProposals:\r\n- It's easy enough for the user to infer the scheme from the presence of cert information.\r\n  - `if (!string.IsNullOrEmpty(config[\"certPath\"])) { listenOptions.UseHttps(config[\"certPath\"], config[\"certPassword\"]); }`\r\n- If the app only expects to be loopback or *, they only need to pass in a port. Adding Loopback and Any versions with string overloads that parse the port would help.\r\n  - `options.ListenLoopback(int.Parse(config[\"port\"], CultureInfo.InvariantCulture));` vs `options.ListenLoopback(config[\"port\"]);`\r\n  - `options.ListenAny(int.Parse(config[\"port\"], CultureInfo.InvariantCulture));` vs `options.ListenAny(config[\"port\"]);`\r\n- For an IP and port, IPEndpoint does not have a Parse method. If we don't provide one then the config needs to store the parameters separately.\r\n  - `options.Listen(IPAddress.Parse(config[\"IP\"]), int.Parse(config[\"port\"], CultureInfo.InvariantCulture));` vs `options.Listen(config[\"IPandPort\"]);`\r\n- Most of the above do not scale well if you need to pass in multiple values, especially if the count varies.\r\n  - `options.Listen(config[\"IPandPort1\"]); options.Listen(config[\"IPandPort2\"]); options.Listen(config[\"IPandPort3\"]);`\r\n  - The user may be able to do a string split on semicolon and call Listen in a loop.\r\n  - `config[\"IPsAndPorts\"].Split(';').ForEach(endpoint => options.Listen(endpoint));`\r\n"},{"Id":"7019533727","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:37:03","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1879","RelatedDescription":"Closed issue \"Kestrel config binder should understand * and localhost\" (#1879) at aspnet/KestrelHttpServer","RelatedBody":"_From @Tratcher on April 27, 2017 17:0_\n\nThe templates are going to enable SSL via config in dev and production. They need to set up the rest of the endpoints when they do this. https://github.com/aspnet/MetaPackages/pull/44 added the ability to bind to IPs and ports, but that makes for a poor user experience. In dev the templates want localhost, but will have to specify 127.0.0.1 (and ::1) if they want IPv6 support. In production they'll need to specify a public IP (0.0.0.0 and ::0).\r\n\r\nConfig should allow `localhost` that binds to 127.0.0.1 and ::1, and * that binds to 0.0.0.0 and ::0, using the same logic that kestrel applies to UseUrls values. Even better, implement this in Kestrel with a Listen that takes the string ip/host so you don't have to duplicate all of the logic.\n\n_Copied from original issue: aspnet/MetaPackages#73_"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7030353498","Type":"IssuesEvent","CreatedAt":"2017-12-26T09:30:07","Actor":"azizkazdal","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1883","RelatedDescription":"Opened issue \"razor pages view component issue\" (#1883) at aspnet/Razor","RelatedBody":"hi,\r\nwhen I try to import view component in asp.net core 2 razor pages like below\r\n```\r\n@{\r\n        await Component.InvokeAsync(\"DeleteModal\", new { name = \"Default\", item = Model.ViewModel.DeleteModalViewModel });\r\n   }\r\n```\r\nthis does not work.  I have to use one line code as below\r\n`@await Component.InvokeAsync(\"DeleteModal\", new { name = \"Default\", item = Model.ViewModel.DeleteModalViewModel })`\r\n"},{"Id":"7024840808","Type":"PullRequestEvent","CreatedAt":"2017-12-23T00:23:39","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1882","RelatedDescription":"Opened pull request \"Make AspNetCoreSettings actually work\" (#1882) at aspnet/Razor","RelatedBody":""},{"Id":"7024808339","Type":"PullRequestEvent","CreatedAt":"2017-12-23T00:00:58","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1881","RelatedDescription":"Opened pull request \"Prevent type name collisions when file hierarchy + namespace is identical\" (#1881) at aspnet/Razor","RelatedBody":"Fixes #1811 "},{"Id":"7024793728","Type":"PullRequestEvent","CreatedAt":"2017-12-22T23:51:22","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1880","RelatedDescription":"Opened pull request \"Removed LegacyResources.resx\" (#1880) at aspnet/Razor","RelatedBody":"#1827 \r\n\r\n- Moved a lot of stuff from `LegacyResources` and `Resources`\r\n- Removed `LegacyResources` along with a **lot of unused strings**\r\n- Updated usages"},{"Id":"7024658073","Type":"IssuesEvent","CreatedAt":"2017-12-22T22:33:37","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1698","RelatedDescription":"Closed issue \"Add unit tests for DefaultRazorIndentationFactsService\" (#1698) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/pull/1697 adds some unit tests but we need a lot more coverage."},{"Id":"7024653436","Type":"PullRequestEvent","CreatedAt":"2017-12-22T22:31:15","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1878","RelatedDescription":"Merged pull request \"Added DefaultRazorIndentationFactsService unit tests.\" (#1878) at aspnet/Razor","RelatedBody":"- Already had a good variety of integration tests so refactored the service to properly unit test each piece.\r\n- Found several pieces of unneeded code (wasn't being used) so removed it.\r\n- Removed the `LocateOwner` logic that was embedded in the service. We already have an equivalent locate owner on our `SyntaxTreeNode` items.\r\n\r\n#1698"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-12-27T05:30:11.7036112Z","RunDurationInMilliseconds":9883}