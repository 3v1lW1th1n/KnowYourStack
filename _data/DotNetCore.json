{"Data":{"Blog":{"FeedItems":[{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null},{"Title":".NET Core is the Future of .NET ","PublishedOn":"2019-05-06T22:22:54+00:00","CommentsCount":104,"FacebookCount":0,"Summary":"We introduced .NET Core 1.0 on November 2014. The goal with .NET Core was to take the learning from our experience building, shipping and servicing .NET Framework over the previous 12 years and build...","Href":"https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9698482909","Type":"IssuesEvent","CreatedAt":"2019-05-26T04:50:23","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24786","RelatedDescription":"Opened issue \"A/V Exceptions in unsafe delegate cause runtime failure\" (#24786) at dotnet/coreclr","RelatedBody":"An A/V in an `unsafe` delegate causes the runtime to crash. See below for example code.\r\n\r\nOn Windows the dereference of a `null` is converted to a `System.NullReferenceException`, but not on Linux.\r\n\r\nRelated: #24727 https://github.com/dotnet/cli/issues/11403\r\n\r\ncc @jkotas @janvorli \r\n\r\n``` csharp\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Runtime.InteropServices;\r\n\r\nclass Program\r\n{\r\n    static unsafe void CallbackImpl(string ss, int *v)\r\n    {\r\n        try\r\n        {\r\n            Console.WriteLine($\"{ss} - {*v}\");\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Console.WriteLine(e);\r\n        }\r\n    }\r\n    static unsafe void Main(string[] args)\r\n    {\r\n        NativeLib.ExecuteCallback(CallbackImpl);\r\n    }\r\n    static class NativeLib\r\n    {\r\n        public unsafe delegate void Callback(string s, int *v);\r\n        [DllImport(nameof(NativeLib))]\r\n        public extern static void ExecuteCallback(Callback cb);\r\n    }\r\n}\r\n```\r\n\r\nCompiled on Ubuntu 18.05 LTS\r\n`$ gcc -g -shared -o libNativeLib.so -fPIC NativeLib.c`\r\n``` C\r\n#include <stdio.h>\r\n\r\n#define RUNE char\r\n#define R(msg) msg\r\n\r\ntypedef void (*Callback)(const RUNE *, int *v);\r\n\r\n__attribute__((visibility(\"default\")))\r\nvoid ExecuteCallback(Callback cb)\r\n{\r\n    int value = 27;\r\n    cb(R(\"Foobar\"), NULL);\r\n}\r\n```"},{"Id":"9698286340","Type":"PullRequestEvent","CreatedAt":"2019-05-26T02:13:07","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24776","RelatedDescription":"Merged pull request \"Stop nulling out lock object in SemaphoreSlim\" (#24776) at dotnet/coreclr","RelatedBody":"SemaphoreSlim.Dispose nulls out its lock object, and that's then used as an indication in other methods whether they should throw ObjectDisposedException.  But nulling out an object used for synchronization in other methods is a bad practice, and while SemaphoreSlim.Dispose is not thread-safe to be used concurrently with other usage of the instance, it's still confusing when such usage leads to NullReferenceExceptions due to trying to lock on a null lock object.  This change just changes the lock to be readonly, always set, and then whether the instance has been disposed is just a value set on that object (such that it's no larger than it used to be).\r\n\r\ncc: @kouvel, @krwq "},{"Id":"9697644877","Type":"PullRequestEvent","CreatedAt":"2019-05-25T18:43:43","Actor":"elinor-fung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24785","RelatedDescription":"Opened pull request \"[WIP] Use Arcade for native versioning\" (#24785) at dotnet/coreclr","RelatedBody":""},{"Id":"9697551688","Type":"IssuesEvent","CreatedAt":"2019-05-25T17:51:50","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/6469","RelatedDescription":"Closed issue \"Debugging HowTo with *.dbg on Linux\" (#6469) at dotnet/coreclr","RelatedBody":"> I will update the debugging instructions as soon as \n> I have a complete story/solution on the packaging of the *.dbg (and *.dwarf on OS X).\n> https://github.com/dotnet/coreclr/pull/4023#issuecomment-204473326\n\n@mikem8361 , Could you share us the debugging instruction If you have done documentation about the debugging using `*.dbg` file + `gdb` command? I could not find any documentation from https://github.com/dotnet/coreclr/tree/master/Documentation.\n- Some files including *.dbg:\n\n```\ninvain@db400:/nfs/runtime-collect-ubuntu-arm/runtime-arm-u1404-release-mode$ ls -al corerun*\n-rwxr-xr-x 1 invain invain  24921  7월 25 16:41 corerun\n-rw-r--r-- 1 invain invain 114531  7월 25 16:41 corerun.dbg\ninvain@db400:/nfs/runtime-collect-ubuntu-arm/runtime-arm-u1404-release-mode$ ls -al libcoreclr*\n-rwxr-xr-x 1 invain invain  6094126  7월 25 16:41 libcoreclr.so\n-rw-r--r-- 1 invain invain 61809426  7월 25 16:41 libcoreclr.so.dbg\ninvain@db400:/nfs/runtime-collect-ubuntu-arm/runtime-arm-u1404-release-mode$ \n```\n\nAs we all know, when we build the CoreCLR source with `release` flag, We can check the separated two files (e.g., foo and foo.dbg) compared to the `debug` build mode. Anyone who have a debugging experience with *.dbg on the Linux distributions such as Ubuntu, CentOS, and RedHat?\n\n\\CC:  @jkotas , @janvorli , @lemmaa , @chunseoklee , @sjsinju , @myungjoo \n"},{"Id":"9697425255","Type":"IssuesEvent","CreatedAt":"2019-05-25T16:42:40","Actor":"EgorBo","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24784","RelatedDescription":"Opened issue \"Configurable floating-point behavior\" (#24784) at dotnet/coreclr","RelatedBody":"As far as I understand, currently `Math/MathF` native code is compiled with `/fp:fast` (`-ffast-math`) however, a pure C# code behaves more like `/fp:precise`\r\nSo it could be a problem for e.g. game developers who develop games (or backends for them) where they want all floating point operations to be 100% repeatable on all clients/hardware or different software compiled in `/fp:precise` mode. E.g. online games with client-side physics.\r\n\r\nHowever, most users don't care about it and could gain an additional performance from `/fp:fast` for both native and managed code.\r\n\r\nE.g. `/fp:fast` for C# could allow us to apply the following optimizations in JIT:\r\n1) `float z = a * b + c` => `fmadd` (see https://github.com/dotnet/coreclr/issues/17541)\r\n2) `float z = a / 1000` => `float z = a * 0.001` (https://github.com/dotnet/coreclr/pull/24584 works only for reciprocal constants)\r\n3) `float z = (a * b) + (a * c)` => `float z = a * (b + c)`\r\n4) `float z = a - b - a` => `float z = -b`\r\netc \r\n\r\nSo we could have 3 modes: _precise_, **mixed** (current) and **fast** to set via some env variable e.g. `COMPlus_FpMode=fast` or an attribute `[FloatingPointMode(FloatingPointModeOptions.Fast)]` to be able to set the mode per method.\r\nThe only problem - we would need a second version of `Math` internal calls compiled in `/fp:precise` mode.\r\n\r\n/cc: @tannergooding @mikedn "},{"Id":"9697380415","Type":"PullRequestEvent","CreatedAt":"2019-05-25T16:19:04","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24771","RelatedDescription":"Merged pull request \"Make sure all of the calculations of enregistered return types match correctly.\" (#24771) at dotnet/coreclr","RelatedBody":"Fixes the IDispatch Windows ARM64 Release test failures that were in the official build.\r\n"},{"Id":"9697340829","Type":"IssuesEvent","CreatedAt":"2019-05-25T15:59:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24757","RelatedDescription":"Closed issue \"No usable version of the libssl was found (openssl 1.1.1b)\" (#24757) at dotnet/coreclr","RelatedBody":"I get a message \"No usable version of the libssl was found\" when I run the build.sh (Exherbo linux)\r\n\r\n`\r\n/usr/x86_64-pc-linux-gnu/lib/libssl.so.1.1* \r\n`\r\n`\r\n/usr/x86_64-pc-linux-gnu/lib/libssl.so -> libssl.so.1.1\r\n`\r\n\r\nI launched two containers that were offered in the documentation to see the libraries used\r\n\r\nAlpine container\r\n`\r\n/usr/lib/libssl.so -> libssl.so.1.0.0\r\n`\r\n`\r\n/usr/lib/libssl.so.1.0.0 -> ../../lib/libssl.so.1.0.0\r\n`\r\n\r\nUbuntu container\r\n`\r\nlibssl.so -> /lib/x86_64-linux-gnu/libssl.so.1.0.0\r\n`\r\n\r\nI thought it was now possible to compile with openssl 1.1.1. If so, how should you do it?"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9696982747","Type":"PullRequestEvent","CreatedAt":"2019-05-25T12:53:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11428","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/templating\" (#11428) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190524.1\r\n- **Date Produced**: 5/24/2019 2:08 PM\r\n- **Commit**: 6d694be84d6e88ffa4d611cc4e22058cf9359255\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19274.1\r\n\r\n"},{"Id":"9696954867","Type":"PullRequestEvent","CreatedAt":"2019-05-25T12:37:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11426","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#11426) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n\r\n"},{"Id":"9696912348","Type":"PullRequestEvent","CreatedAt":"2019-05-25T12:13:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11428","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/templating\" (#11428) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190524.1\r\n- **Date Produced**: 5/24/2019 2:08 PM\r\n- **Commit**: 6d694be84d6e88ffa4d611cc4e22058cf9359255\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19274.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9697014722","Type":"PullRequestEvent","CreatedAt":"2019-05-25T13:11:37","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1211) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n"},{"Id":"9696996742","Type":"PullRequestEvent","CreatedAt":"2019-05-25T13:01:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1211) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n"},{"Id":"9696925543","Type":"PullRequestEvent","CreatedAt":"2019-05-25T12:20:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1210) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n"},{"Id":"9696898918","Type":"PullRequestEvent","CreatedAt":"2019-05-25T12:05:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1210) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n"},{"Id":"9693158023","Type":"IssuesEvent","CreatedAt":"2019-05-24T15:24:09","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1051","RelatedDescription":"Closed issue \"Create targeting pack for .NET Standard\" (#1051) at dotnet/standard","RelatedBody":"For .NET Core 3.0, we expect to separate targeting packs, which contain the assets needed at build time when targeting .NET Core 3.0 (for example, reference assemblies and intellisense documentation) from \"runtime packs\", which will include the platform-specific runtime components for .NET Core 3.  See dotnet/cli#10006, and [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e)\r\n\r\nWe will have targeting pack for each shared framework (.NET Core, ASP.NET Core, and WindowsDesktop), as well as for .NET Standard.  This issue tracks the work required a .NET Standard targeting pack.  Ideally, we should create targeting packs for both .NET Standard 2.1 and 2.0.\r\n\r\nThe work required includes:\r\n\r\n- A new NuGet package including the targeting pack assets.  This should include the reference assemblies, intellisense documentation, and platform manifest file.  The current straw man proposal for the package ID is `Microsoft.NETCore.App.Ref`\r\n- Installers for each supported installer format (msi, deb, pkg, and rpm), which lay out the targeting pack files under `<DOTNET_ROOT>/packs/<PackageId>/version`.  These installers will be bundled or depended on by the corresponding .NET Core SDK installers.\r\n\r\nSome of the details (such as package layout, names, etc) are still [under design](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) and may change slightly."},{"Id":"9693128103","Type":"IssuesEvent","CreatedAt":"2019-05-24T15:20:02","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1209","RelatedDescription":"Opened issue \"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup\" (#1209) at dotnet/standard","RelatedBody":"(See https://github.com/dotnet/standard/issues/1106)\r\n\r\nThe netstandard targeting pack may not version completely in sync with .NET Core Runtime, so producing it in Core-Setup via a transport package is not ideal. These artifacts should be produced in dotnet/standard itself.\r\n\r\nI don't think it makes sense to work on this until targeting pack infra is shared. (https://github.com/dotnet/core-setup/issues/4773)"},{"Id":"9692151747","Type":"PullRequestEvent","CreatedAt":"2019-05-24T13:09:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1208) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n"},{"Id":"9692082939","Type":"PullRequestEvent","CreatedAt":"2019-05-24T12:59:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1208) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9698289318","Type":"PullRequestEvent","CreatedAt":"2019-05-26T02:15:36","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37954","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#37954) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9697392237","Type":"PullRequestEvent","CreatedAt":"2019-05-25T16:25:17","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37910","RelatedDescription":"Merged pull request \"Update xml doc comment for JsonSerializerOptions.IgnoreReadOnlyProperties\" (#37910) at dotnet/corefx","RelatedBody":"Fixes: https://github.com/dotnet/corefx/issues/37844\r\n\r\ncc: @carlossanlop in case we need to update the generated docs"},{"Id":"9697392227","Type":"IssuesEvent","CreatedAt":"2019-05-25T16:25:17","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37844","RelatedDescription":"Closed issue \"JsonSerializerOptions.IgnoreReadOnlyProperties is not respected during deserialization\" (#37844) at dotnet/corefx","RelatedBody":"According to the doc block in JsonSerializerOptions, the IgnoreReadOnlyProperties option should apply to both serialization and deserialization.  \r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Text.Json/src/System/Text/Json/Serialization/JsonSerializerOptions.cs#L125-L133\r\n\r\nThis makes sense, serialization and deserialization should have consistent behavior.  If I serialize, then deserialize, I would expect to end up with the same object.\r\n\r\nCurrently, the IgnoreReadOnlyProperties option is respected for serialization, but not deserialization.  The default value of the option is `false`, so if I have an object with a read only property, when I serialize, the property is included in the json, but when I deserialize, the property is ignored and its data is lost.  This seems like a bug.\r\n\r\nExample:\r\n```csharp\r\npublic class JsonSerializerTest\r\n{\r\n    [Fact]\r\n    public void TestReadOnlyProperty()\r\n    {\r\n        var original = new ObjectWithReadyOnlyProperty(1) {MyData = \"Test\"};\r\n        Assert.Equal(1, original.Id);  // The Id property is set to 1\r\n\r\n        // serialize\r\n        var json = JsonSerializer.ToString(original);\r\n        Assert.Equal(@\"{\"\"Id\"\":1,\"\"MyData\"\":\"\"Test\"\"}\", json);  // Id property is serialized to JSON\r\n\r\n        // deserialize\r\n        var newObject = JsonSerializer.Parse<ObjectWithReadyOnlyProperty>(json);\r\n        Assert.Equal(1, newObject.Id);  // FAIL: Id is 0, the value was lost :(\r\n    }\r\n\r\n    public class ObjectWithReadyOnlyProperty\r\n    {\r\n        public int Id { get; }  // read only\r\n        public string MyData { get; set; }\r\n\r\n        private ObjectWithReadyOnlyProperty() {}\r\n\r\n        public ObjectWithReadyOnlyProperty(int id)\r\n        {\r\n            Id = id;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIn addition to this being inconsistent and having the potential to unexpectedly lose data, I think the ability to deserialize read only properties is important because it makes is possible to deserialize to an immutable object.  That is what I was trying to accomplish when I encountered this."},{"Id":"9696977027","Type":"PullRequestEvent","CreatedAt":"2019-05-25T12:50:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37953","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/coreclr\" (#37953) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190524.71\r\n- **Date Produced**: 5/24/2019 2:12 PM\r\n- **Commit**: d5d18896900561b7aaf38ba9501a8525a4b9caea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview6.19274.71\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6.19274.71\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview6.19274.71\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9698151920","Type":"IssuesEvent","CreatedAt":"2019-05-26T00:20:36","Actor":"0xd4d","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35978","RelatedDescription":"Opened issue \"'CS8629: Nullable value type may be null' reported when it can not be null\" (#35978) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 16.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Compile this code (C#8 + NRT)\r\n\r\n```C#\r\nusing System;\r\n\r\n#nullable enable\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            M(default((Guid g, string s)?));\r\n            M(default((Guid g, string s)));\r\n        }\r\n\r\n        static void M((Guid g, string s)? t)\r\n        {\r\n            if (t?.g == Guid.Empty)\r\n            {\r\n                // 't': CS8629: Nullable value type may be null.\r\n                _ = t.Value.s;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo warning\r\n\r\n**Actual Behavior**:\r\n\r\nWarning: CS8629: Nullable value type may be null.\r\n"},{"Id":"9698127172","Type":"PullRequestEvent","CreatedAt":"2019-05-26T00:00:56","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35977","RelatedDescription":"Opened pull request \"Merge master to features/NullableDogfood\" (#35977) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9698126842","Type":"PullRequestEvent","CreatedAt":"2019-05-26T00:00:41","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35976","RelatedDescription":"Opened pull request \"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps\" (#35976) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview2 into release/dev16.2-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-to-release/dev16.2-preview2-vs-deps\ngit reset --hard upstream/release/dev16.2-preview2-vs-deps\ngit merge upstream/release/dev16.2-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-to-release/dev16.2-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9698126760","Type":"PullRequestEvent","CreatedAt":"2019-05-26T00:00:38","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35975","RelatedDescription":"Opened pull request \"Merge release/dev16.1 to release/dev16.1-vs-deps\" (#35975) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.1-vs-deps\ngit reset --hard upstream/release/dev16.1-vs-deps\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9698126145","Type":"PullRequestEvent","CreatedAt":"2019-05-26T00:00:17","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35974","RelatedDescription":"Opened pull request \"Merge release/dev16.2-preview2 to master\" (#35974) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview2 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.2-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9698289512","Type":"PullRequestEvent","CreatedAt":"2019-05-26T02:15:45","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7450","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7450) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9697628692","Type":"PullRequestEvent","CreatedAt":"2019-05-25T18:34:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7449","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7449) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern"},{"Id":"9695711571","Type":"PullRequestEvent","CreatedAt":"2019-05-25T00:10:07","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7448","RelatedDescription":"Merged pull request \"Restore CoreCLRRuntime on Linux\" (#7448) at dotnet/corert","RelatedBody":"When running tests, invoke the test build to restore the runtime / corefx / corerun to a well known folder needed to run Ready-to-run tests against.\r\n\r\nThe actual running of R2R tests is not enabled yet since we need to fix an issue with PE section virtual address offsets"},{"Id":"9695143834","Type":"PullRequestEvent","CreatedAt":"2019-05-24T21:15:39","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7449","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7449) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9694605637","Type":"PullRequestEvent","CreatedAt":"2019-05-24T19:27:51","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7448","RelatedDescription":"Opened pull request \"Restore CoreCLRRuntime on Linux\" (#7448) at dotnet/corert","RelatedBody":"When running tests, invoke the test build to restore the runtime / corefx / corerun to a well known folder needed to run Ready-to-run tests against.\r\n\r\nThe actual running of R2R tests is not enabled yet since we need to fix an issue with PE section virtual address offsets"},{"Id":"9693776118","Type":"PullRequestEvent","CreatedAt":"2019-05-24T17:01:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7447","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7447) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro-bot"},{"Id":"9693457627","Type":"PullRequestEvent","CreatedAt":"2019-05-24T16:07:29","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7443","RelatedDescription":"Merged pull request \"CPAOT large version bubble bugfixes\" (#7443) at dotnet/corert","RelatedBody":"I have finally identified the reason for various recent inconsistencies\r\nwe were recently hitting in large version bubble testing. As the\r\nR2R major version number was recently bumped to 3 in CoreCLR, it\r\ngot out of sync with the value 2 we have in CoreClrRuntime used\r\nfor CPAOT testing in the CoreRT repo. For this reason all recent\r\ntesting performed against the CoreCLR version of Core_Root was\r\nsilently switching over to JIT; this included my recent local\r\nlarge version bubble testing - while R2RDump was dumping the R2R\r\nfile content correctly and let me fix most issues, some problems\r\nnaturally remained and only popped up at runtime:\r\n\r\n1) NewArrayFixupSignature wasn't properly switching over to the\r\ninner signature context when emitting the array type signature.\r\n\r\n2) SignatureBuilder was emitting incorrect signature for fields\r\non instantiated types (this only popped up after inlining parts\r\nof CoreLib into the unit test).\r\n\r\n3) In SignatureContext, we should call the token resolution logic\r\nwhen determining field tokens as for fields encoded using refs\r\nthe reference module is the module containing the ref, not\r\nnecessarily the reference module for its owning type.\r\n\r\n4) In CorInfoImpl.ReadyToRun, the logic for encoding string literals\r\nwas incorrect in large version bubble mode in the presence of\r\ninlining - we need to use the context module passed along with the\r\nstring token, not the input module.\r\n\r\n5) ManifestMetadataTableNode was incorrectly encoding public key\r\ntokens for the AssemblyRefs.\r\n\r\n6) I previously overlooked the fact that the BadImageFormatException\r\nthrown for native assemblies is a variation of the type local\r\nto TypeSystemException.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. With this change the CoreCLR JIT test suite has about 93% pass\r\nrate. I suspect I understand some of the remaining failures but\r\nI wanted to send this our early as I'm going to be mostly OOF\r\nfor the rest of this week.\r\n"},{"Id":"9693148233","Type":"PullRequestEvent","CreatedAt":"2019-05-24T15:22:48","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7441","RelatedDescription":"Closed pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03\" (#7441) at dotnet/corert","RelatedBody":"CC. @jaredpar, @agocke, @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2856 and https://github.com/dotnet/buildtools/pull/2256"},{"Id":"9692607350","Type":"PullRequestEvent","CreatedAt":"2019-05-24T14:11:03","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7447","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7447) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9692588581","Type":"PullRequestEvent","CreatedAt":"2019-05-24T14:08:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7446","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7446) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @safern"},{"Id":"9689123441","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:46:09","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7446","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7446) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9689117668","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:44:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7445","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7445) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @davidwrighton"},{"Id":"9688703026","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:40:30","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7444","RelatedDescription":"Merged pull request \"Update CoreCLR and framework for R2R tests\" (#7444) at dotnet/corert","RelatedBody":"In Preview5, the R2R format version was bumped to 3.0. Roll forward to 3.0 and test against a more recent runtime that supports 3.0 ready-to-run image format."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9698094625","Type":"IssuesEvent","CreatedAt":"2019-05-25T23:33:24","Actor":"run1206","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3267","RelatedDescription":"Opened issue \"Verbiage of success message on 32bit .NET Core 2.2 SDK has wrong folder location\" (#3267) at dotnet/sdk","RelatedBody":"After the 32-bit .NET Core 2.2 SDK finishes installing, the success message reads:\r\n\"The following were installed at C:\\Program Files\\dotnet...\"\r\nThe SDK files are correctly saved in the 32-bit location, but the folder location in the message is for the 64-bit SDK location.\r\n\r\nPlease see attached image for reference.\r\n![20190525_192301](https://user-images.githubusercontent.com/16143658/58375537-50576b00-7f23-11e9-8ea4-762ea46fa727.jpg)\r\n\r\nSuccess message should point to \"C:\\Program Files (x86)\\dotnet\\\""},{"Id":"9697107736","Type":"IssuesEvent","CreatedAt":"2019-05-25T14:01:14","Actor":"DoCode","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3266","RelatedDescription":"Opened issue \"dotnet msbuild -t:restore or -t:publish : NU1201: Not compatible with netcoreapp2.2\" (#3266) at dotnet/sdk","RelatedBody":"### Steps to reproduce\r\n\r\n- I try to restore and publish a cross-targeting and cross-platform project with netcoreapp/netstandard/net472 and linux-x64/win-x64 mix-match with:\r\n```ps1\r\n# Restoring:\r\ndotnet msbuild -t:restore -p:targetframework=net472 -p:runtimeidentifier=win-x64 Api.csproj\r\n# OR\r\ndotnet msbuild -t:restore -p:targetframework=netcoreapp2.2 -p:runtimeidentifier=linux-x64 Api.csproj\r\n\r\n# AND publishing:\r\ndotnet msbuild -t:publish -p:targetframework=net472 -p:runtimeidentifier=win-x64 Api.csproj\r\n# OR\r\ndotnet msbuild -t:publish -p:targetframework=netcoreapp2.2 -p:runtimeidentifier=linux-x64 Api.csproj\r\n```\r\n\r\n#### The projects\r\n**Api.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp2.2;net472</TargetFrameworks>\r\n    <RuntimeIdentifiers>linux-x64;win-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n    <ProjectReference Include=\"Store.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Core.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n**Store.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Sdk.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;net472</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Cli.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Sdk.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe projects should be restored for all TFM's and RID's.\r\n\r\n### Actual behavior\r\n\r\nThe following error is thrown:\r\n```\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2). Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2). Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / linux-x64. Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / linux-x64. Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / win-x64. Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / win-x64. Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\n```"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"448528243","IsPullRequest":false,"CreatedAt":"2019-05-26T04:50:23","Actor":"AaronRobinsonMSFT","Number":"24786","RawContent":null,"Title":"A/V Exceptions in unsafe delegate cause runtime failure","State":"open","Body":"An A/V in an `unsafe` delegate causes the runtime to crash. See below for example code.\r\n\r\nOn Windows the dereference of a `null` is converted to a `System.NullReferenceException`, but not on Linux.\r\n\r\nRelated: #24727 https://github.com/dotnet/cli/issues/11403\r\n\r\ncc @jkotas @janvorli \r\n\r\n``` csharp\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Runtime.InteropServices;\r\n\r\nclass Program\r\n{\r\n    static unsafe void CallbackImpl(string ss, int *v)\r\n    {\r\n        try\r\n        {\r\n            Console.WriteLine($\"{ss} - {*v}\");\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Console.WriteLine(e);\r\n        }\r\n    }\r\n    static unsafe void Main(string[] args)\r\n    {\r\n        NativeLib.ExecuteCallback(CallbackImpl);\r\n    }\r\n    static class NativeLib\r\n    {\r\n        public unsafe delegate void Callback(string s, int *v);\r\n        [DllImport(nameof(NativeLib))]\r\n        public extern static void ExecuteCallback(Callback cb);\r\n    }\r\n}\r\n```\r\n\r\nCompiled on Ubuntu 18.04 LTS\r\n`$ gcc -g -shared -o libNativeLib.so -fPIC NativeLib.c`\r\n``` C\r\n#include <stdio.h>\r\n\r\n#define RUNE char\r\n#define R(msg) msg\r\n\r\ntypedef void (*Callback)(const RUNE *, int *v);\r\n\r\n__attribute__((visibility(\"default\")))\r\nvoid ExecuteCallback(Callback cb)\r\n{\r\n    int value = 27;\r\n    cb(R(\"Foobar\"), NULL);\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24786","RelatedDescription":"Open issue \"A/V Exceptions in unsafe delegate cause runtime failure\" (#24786)"},{"Id":"448407997","IsPullRequest":true,"CreatedAt":"2019-05-26T02:13:06","Actor":"stephentoub","Number":"24776","RawContent":null,"Title":"Stop nulling out lock object in SemaphoreSlim","State":"closed","Body":"SemaphoreSlim.Dispose nulls out its lock object, and that's then used as an indication in other methods whether they should throw ObjectDisposedException.  But nulling out an object used for synchronization in other methods is a bad practice, and while SemaphoreSlim.Dispose is not thread-safe to be used concurrently with other usage of the instance, it's still confusing when such usage leads to NullReferenceExceptions due to trying to lock on a null lock object.  This change just changes the lock to be readonly, always set, and then whether the instance has been disposed is just a value set on that object (such that it's no larger than it used to be).\r\n\r\ncc: @kouvel, @krwq ","Url":"https://github.com/dotnet/coreclr/pull/24776","RelatedDescription":"Closed or merged PR \"Stop nulling out lock object in SemaphoreSlim\" (#24776)"},{"Id":"448491648","IsPullRequest":true,"CreatedAt":"2019-05-25T18:43:43","Actor":"elinor-fung","Number":"24785","RawContent":null,"Title":"[WIP] Use Arcade for native versioning","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24785","RelatedDescription":"Open PR \"[WIP] Use Arcade for native versioning\" (#24785)"},{"Id":"448481590","IsPullRequest":false,"CreatedAt":"2019-05-25T16:42:39","Actor":"EgorBo","Number":"24784","RawContent":null,"Title":"Configurable floating-point behavior","State":"open","Body":"As far as I understand, currently `Math/MathF` native code is compiled with `/fp:fast` (`-ffast-math`?) however, a pure C# code behaves more like `/fp:precise`\r\nSo it could be a problem for e.g. game developers who develop games (or backends for them) where they want all floating point operations to be 100% repeatable on all clients/hardware or different software compiled in `/fp:precise` mode. E.g. online games with client-side physics.\r\n\r\nHowever, most users don't care about it and could gain an additional performance from `/fp:fast` for both native and managed code.\r\n\r\nE.g. `/fp:fast` for C# could allow us to apply the following optimizations in JIT:\r\n1) `float z = a * b + c` => `fmadd` (see https://github.com/dotnet/coreclr/issues/17541)\r\n2) `float z = a / 1000` => `float z = a * 0.001` (https://github.com/dotnet/coreclr/pull/24584 works only for reciprocal constants)\r\n3) `float z = (a * b) + (a * c)` => `float z = a * (b + c)`\r\n4) `float z = a - b - a` => `float z = -b`\r\netc \r\n\r\nSo we could have 3 modes: **precise**, **mixed** (current) and **fast** to set via some env variable e.g. `COMPlus_FpMode=fast` or an attribute `[FloatingPointMode(FloatingPointModeOptions.Fast)]` to be able to set the mode per method.\r\nThe only problem - we would need a second version of `Math` internal calls compiled in `/fp:precise` mode. If it's a problem then two modes: **mixed** and **fast**.\r\n\r\n/cc: @tannergooding @mikedn ","Url":"https://github.com/dotnet/coreclr/issues/24784","RelatedDescription":"Open issue \"Configurable floating-point behavior\" (#24784)"},{"Id":"448386826","IsPullRequest":true,"CreatedAt":"2019-05-25T16:19:03","Actor":"jkoritzinsky","Number":"24771","RawContent":null,"Title":"Make sure all of the calculations of enregistered return types match correctly.","State":"closed","Body":"Fixes the IDispatch Windows ARM64 Release test failures that were in the official build.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24771","RelatedDescription":"Closed or merged PR \"Make sure all of the calculations of enregistered return types match correctly.\" (#24771)"},{"Id":"448103838","IsPullRequest":false,"CreatedAt":"2019-05-25T15:59:30","Actor":"s0dy","Number":"24757","RawContent":null,"Title":"No usable version of the libssl was found (openssl 1.1.1b)","State":"closed","Body":"I get a message \"No usable version of the libssl was found\" when I run the build.sh (Exherbo linux)\r\n\r\n`\r\n/usr/x86_64-pc-linux-gnu/lib/libssl.so.1.1* \r\n`\r\n`\r\n/usr/x86_64-pc-linux-gnu/lib/libssl.so -> libssl.so.1.1\r\n`\r\n\r\nI launched two containers that were offered in the documentation to see the libraries used\r\n\r\nAlpine container\r\n`\r\n/usr/lib/libssl.so -> libssl.so.1.0.0\r\n`\r\n`\r\n/usr/lib/libssl.so.1.0.0 -> ../../lib/libssl.so.1.0.0\r\n`\r\n\r\nUbuntu container\r\n`\r\nlibssl.so -> /lib/x86_64-linux-gnu/libssl.so.1.0.0\r\n`\r\n\r\nI thought it was now possible to compile with openssl 1.1.1. If so, how should you do it?","Url":"https://github.com/dotnet/coreclr/issues/24757","RelatedDescription":"Closed issue \"No usable version of the libssl was found (openssl 1.1.1b)\" (#24757)"},{"Id":"448451607","IsPullRequest":false,"CreatedAt":"2019-05-25T14:54:42","Actor":"Gnbrkm41","Number":"24778","RawContent":null,"Title":"`System.GC.Collect` throwing System.ExecutionEngineException while running BenchmarkDotNet","State":"closed","Body":"```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.18898\r\nIntel Core i7-6650U CPU 2.20GHz (Skylake), 1 CPU, 4 logical and 2 physical cores\r\n.NET Core SDK=3.0.100-preview5-011568\r\n  [Host] : .NET Core 3.0.0-preview5-27626-15 (CoreCLR 4.6.27622.75, CoreFX 4.700.19.22408), 64bit RyuJIT\r\n```\r\nEnvironment is as above; `Release/AnyCPU` build.\r\nThe code used can be found at https://github.com/Gnbrkm41/ExecutionEngineExceptionDebugging, with the full console output. (Side note: the methods being tested aren't mine!)\r\n\r\n```\r\nInternal CLR error. (0x80131506)\r\n   at System.GC._Collect(Int32, Int32)\r\n   at System.GC._Collect(Int32, Int32)\r\n   at BenchmarkDotNet.Engines.Engine.RunIteration(BenchmarkDotNet.Engines.IterationData)\r\n   at BenchmarkDotNet.Engines.EngineFactory.Jit(BenchmarkDotNet.Engines.Engine, Int32, Int32, Int32)\r\n   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(BenchmarkDotNet.Engines.EngineParameters)\r\n   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(BenchmarkDotNet.Engines.IHost, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(System.String[])\r\n   at BenchmarkDotNet.Autogenerated.UniqueProgramName.Main(System.String[])\r\n```\r\n\r\n```\r\n0:000> !clrstack\r\nOS Thread Id: 0x3a30 (0)\r\n        Child SP               IP Call Site\r\n000000c60317e018 00007ffe607eb994 [InlinedCallFrame: 000000c60317e018] System.GC._Collect(Int32, Int32)\r\n000000c60317e018 00007ffda29d530a [InlinedCallFrame: 000000c60317e018] System.GC._Collect(Int32, Int32)\r\n000000c60317dff0 00007ffda29d530a BenchmarkDotNet.Engines.Engine.RunIteration(BenchmarkDotNet.Engines.IterationData)\r\n000000c60317e100 00007ffda29d49f9 BenchmarkDotNet.Engines.EngineFactory.Jit(BenchmarkDotNet.Engines.Engine, Int32, Int32, Int32)\r\n000000c60317e220 00007ffda28073c9 BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(BenchmarkDotNet.Engines.EngineParameters)\r\n000000c60317e2b0 00007ffda27f29b7 BenchmarkDotNet.Autogenerated.Runnable_0.Run(BenchmarkDotNet.Engines.IHost, System.String)\r\n000000c60317e5b0 00007ffe022d9953 [DebuggerU2MCatchHandlerFrame: 000000c60317e5b0] \r\n000000c60317e878 00007ffe022d9953 [HelperMethodFrame_PROTECTOBJ: 000000c60317e878] System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n000000c60317e9c0 00007ffdff269352 System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n000000c60317ea30 00007ffda27e8491 BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(System.String[])\r\n000000c60317eaf0 00007ffda27e5f59 BenchmarkDotNet.Autogenerated.UniqueProgramName.Main(System.String[])\r\n000000c60317ed18 00007ffe022d9953 [GCFrame: 000000c60317ed18] \r\n000000c60317f2c0 00007ffe022d9953 [GCFrame: 000000c60317f2c0] \r\n```\r\n\r\nWhen ran (with the debugger attached), Visual Studio seems to point one of the auto-generated source codes inside `[Some random GUID]\\[That random GUID].notcs` file, at the line 164 `BenchmarkDotNet.Engines.IEngine engine = new BenchmarkDotNet.Engines.EngineFactory().CreateReadyToRun(engineParameters)` bit:\r\n```cs\r\npublic class Runnable_0 : global::SpanFillBenchmark.FillBenchmark\r\n{\r\n    public static void Run(BenchmarkDotNet.Engines.IHost host, System.String benchmarkName)\r\n    {\r\n        BenchmarkDotNet.Autogenerated.Runnable_0 instance = new BenchmarkDotNet.Autogenerated.Runnable_0(); // do NOT change name \"instance\" (used in SmartParamameter)\r\n        instance.N = 1073741824;\r\n\r\n        host.WriteLine();\r\n        foreach (System.String infoLine in BenchmarkDotNet.Environments.BenchmarkEnvironmentInfo.GetCurrent().ToFormattedString())\r\n        {\r\n            host.WriteLine($\"// {infoLine}\");\r\n        }\r\n        BenchmarkDotNet.Jobs.Job job = new BenchmarkDotNet.Jobs.Job(); // use full name to avoid naming conflicts, #778\r\n        BenchmarkDotNet.Characteristics.CharacteristicObject.IdCharacteristic[job] = $@\"Core\";\r\n            BenchmarkDotNet.Jobs.EnvironmentMode.RuntimeCharacteristic[job] = System.Activator.CreateInstance<BenchmarkDotNet.Environments.CoreRuntime>();\r\n        job.Freeze();\r\n        host.WriteLine($\"// Job: {job.DisplayInfo}\");\r\n        host.WriteLine();\r\n\r\n        System.Collections.Generic.IEnumerable<BenchmarkDotNet.Validators.ValidationError> errors = BenchmarkDotNet.Environments.BenchmarkEnvironmentInfo.Validate(job);\r\n        if (BenchmarkDotNet.Validators.ValidationErrorReporter.ReportIfAny(errors, host))\r\n            return;\r\n\r\n        BenchmarkDotNet.Engines.EngineParameters engineParameters = new BenchmarkDotNet.Engines.EngineParameters()\r\n        {\r\n            Host = host,\r\n            WorkloadActionUnroll = instance.WorkloadActionUnroll,\r\n            WorkloadActionNoUnroll = instance.WorkloadActionNoUnroll,\r\n            Dummy1Action = instance.Dummy1,\r\n            Dummy2Action = instance.Dummy2,\r\n            Dummy3Action = instance.Dummy3,\r\n            OverheadActionNoUnroll = instance.OverheadActionNoUnroll,\r\n            OverheadActionUnroll = instance.OverheadActionUnroll,\r\n            GlobalSetupAction = instance.globalSetupAction,\r\n            GlobalCleanupAction = instance.globalCleanupAction,\r\n            IterationSetupAction = instance.iterationSetupAction,\r\n            IterationCleanupAction = instance.iterationCleanupAction,\r\n            TargetJob = job,\r\n            OperationsPerInvoke = 1,\r\n            MeasureGcStats = false,\r\n            Encoding = System.Text.Encoding.ASCII,\r\n            BenchmarkName = benchmarkName\r\n        };\r\n// The line below here is where VS points to\r\n        using (BenchmarkDotNet.Engines.IEngine engine = new BenchmarkDotNet.Engines.EngineFactory().CreateReadyToRun(engineParameters))\r\n        {\r\n            BenchmarkDotNet.Engines.RunResults results = engine.Run();\r\n\r\n            host.ReportResults(results); // printing costs memory, do this after runs\r\n\r\n            instance.__TrickTheJIT__(); // compile the method for disassembler, but without actual run of the benchmark ;)\r\n        }\r\n    }\r\n```\r\n\r\nNot sure if this belongs to dotnet/BenchmarkDotnet or here; I'll leave it here for now since it sounds like something with the CLR.\r\n\r\ncc @adamsitnik @AndreyAkinshin (BenchmarkDotnet maintainers)","Url":"https://github.com/dotnet/coreclr/issues/24778","RelatedDescription":"Closed issue \"`System.GC.Collect` throwing System.ExecutionEngineException while running BenchmarkDotNet\" (#24778)"},{"Id":"448461237","IsPullRequest":true,"CreatedAt":"2019-05-25T12:41:03","Actor":"dotnet-maestro[bot]","Number":"24782","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190524.03\r\n- **Date Produced**: 5/25/2019 5:20 AM\r\n- **Commit**: 4122653611ecb6e7f964af762b4280ba0e1421c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27724-03\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24782","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#24782)"},{"Id":"448460923","IsPullRequest":true,"CreatedAt":"2019-05-25T12:36:45","Actor":"dotnet-maestro[bot]","Number":"24781","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview6.19274.8\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19274.8\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24781","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#24781)"},{"Id":"448460062","IsPullRequest":true,"CreatedAt":"2019-05-25T12:25:37","Actor":"dotnet-maestro[bot]","Number":"24780","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24780","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#24780)"},{"Id":"448457300","IsPullRequest":false,"CreatedAt":"2019-05-25T11:50:56","Actor":"andrii-litvinov","Number":"24779","RawContent":null,"Title":"Core dump of StackOverflowException does not provide any information about the source of the exception","State":"open","Body":"We are moving to containerized environment hosted with Docker Swarm and I want to understand how to track down StackOverflowException if it occurs.\r\n\r\nI create simple application and build it in a container in Debug mode to avoid tail recursion optimization and force StackOverflowException.\r\n\r\n```csharp\r\npublic class Program\r\n{\r\n    private static async Task Main() => Do();\r\n    static void Do() => Do();\r\n}\r\n```\r\n\r\n```dockerfile\r\nFROM microsoft/dotnet:2.2-sdk AS build\r\nWORKDIR /app\r\nCOPY Demo/Project.csproj Demo/\r\nRUN dotnet restore ./Demo/Project.csproj\r\nRUN dotnet publish Demo --configuration Debug --output ../out\r\n\r\nFROM microsoft/dotnet:2.2-aspnetcore-runtime AS runtime\r\nWORKDIR /app\r\nCOPY Demo/entrypoint.sh ./\r\nRUN chmod +x ./entrypoint.sh\r\nENTRYPOINT [\"./entrypoint.sh\", \"dotnet\", \"Demo.dll\"]\r\n```\r\n\r\nEntry point script to set ulimit core to unlimited to enable core dump creation, because Docker Swarm does not support passing it in:\r\n```bash\r\n#!/bin/bash\r\n\r\nulimit -c unlimited\r\n\r\n# print configuration values required for core dump creation\r\necho limits: $(ulimit -a)\r\necho kernel.core_pattern: $(cat /proc/sys/kernel/core_pattern)\r\n\r\n$@\r\n```\r\n\r\nI build the container and try to analyze the dump:\r\n\r\n```\r\nλ docker build . -t stackoverflow --pull\r\nλ docker run --name stackoverflow stackoverflow\r\nλ docker commit stackoverflow stackoverflow1\r\nλ docker run -it --rm --entrypoint /bin/bash stackoverflow1\r\n\r\nroot@10a256a59228:/app# apt update && apt install -y lldb-3.9\r\nroot@10a256a59228:/app# lldb-3.9 -O \"settings set target.exec-search-paths /usr/share/dotnet/shared/Microsoft.NETCore.App/2.2.5/\" \\\r\n -O \"plugin load /usr/share/dotnet/shared/Microsoft.NETCore.App/2.2.5/libsosplugin.so\" \\\r\n --core ./core \\\r\n $(which dotnet)\r\n\r\n(lldb) clrthread\r\nThreadCount:      3\r\nUnstartedThread:  0\r\nBackgroundThread: 2\r\nPendingThread:    0\r\nDeadThread:       0\r\nHosted Runtime:   no\r\n                                                                                                        Lock\r\n       ID OSID ThreadOBJ           State GC Mode     GC Alloc Context                  Domain           Count Apt Exception\r\n   1    1    8 0000000000879AF0    20020 Cooperative 00007F46988A3CD8:00007F46988A3FD0 00000000008782F0 0     Ukn\r\n   9    2   12 0000000000824790    21220 Preemptive  0000000000000000:0000000000000000 00000000008782F0 0     Ukn (Finalizer)\r\n  10    3   13 00007F457C0009F0  1020220 Preemptive  0000000000000000:0000000000000000 00000000008782F0 0     Ukn (Threadpool Worker)\r\n\r\n(lldb) clrstack\r\nOS Thread Id: 0x8 (1)\r\n        Child SP               IP Call Site\r\n00007FFC9D78F448 00007f4838419fff [GCFrame: 00007ffc9d78f448]\r\n00007FFC9D78F850 00007f4838419fff [GCFrame: 00007ffc9d78f850]\r\n\r\n(lldb) clrstack -f\r\nOS Thread Id: 0x8 (1)\r\n        Child SP               IP Call Site\r\n00007F483965C798 00007F4838419FFF libc.so.6!gsignal + 207\r\n00007F483965C830 00007F483841B42A libc.so.6!abort + 362\r\n00007F483965C960 00007F4837B55A23 libcoreclr.so + -1\r\n00007F483965C970 00007F4837B1E5E2 libcoreclr.so + -1\r\n00007F483965C9C0 00007F48390340E0 libpthread.so.0!__restore_rt\r\n00007FFC9CF92000 00007F4837833834 libcoreclr.so!AllocateString_MP_FastPortable(unsigned int) + 4\r\n00007FFC9CF92010 00007F47BE799BF2\r\n00007FFC9CF92050 00007F47BE79991B\r\n00007FFC9CF92160 00007F47BE799808\r\n00007FFC9CF92180 00007F47BE79977A\r\n00007FFC9CF921C0 00007F47BE79979E\r\n00007FFC9CF92200 00007F47BE79979E\r\n00007FFC9CF92240 00007F47BE79979E\r\n00007FFC9CF92280 00007F47BE79979E\r\n00007FFC9CF922C0 00007F47BE79979E\r\n00007FFC9CF92300 00007F47BE79979E\r\n00007FFC9CF92340 00007F47BE79979E\r\n00007FFC9CF92380 00007F47BE79979E\r\n00007FFC9CF923C0 00007F47BE79979E\r\n...\r\n00007FFC9CFA1940 00007F47BE79979E\r\n00007FFC9D78F448                  [GCFrame: 00007ffc9d78f448]\r\n00007FFC9D78F850                  [GCFrame: 00007ffc9d78f850]\r\n```\r\n\r\nNeither `clrstack` nor `clrstack -f` shows useful information about the source of StackOverflowException. Though it is obvious that repeated lines with `00007F47BE79979E` are due to StackOverflowException. I am new to memory dump debugging especially with lldb inside Docker container. Am I missing something? I have tried to collect a minidump by setting \r\n\r\n```dockerfile\r\nENV COMPlus_DbgEnableMiniDump=1 \\\r\nCOMPlus_DbgMiniDumpType=4\r\n```\r\nto see if it differs even though it is not possible to run container with `--cap-add=SYS_PTRACE` in Swarm, but it shows same result and the dump itself was about **12GB** which is quite big size for a minidump.\r\n\r\nOn a side note, I tried to see if I can get some more details of regular exception in core dumps created on crash and I haven't found any symbols. It shows `!Unknown` instead of symbol name:\r\n\r\n```\r\n(lldb) pe\r\nException object: 00007f773c017ef0\r\nException type:   <Unknown>\r\nMessage:          Bang.\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n    SP               IP               Function\r\n    00007FFF12DE84F0 00007F7869D49666 Demo.dll!Unknown+0x86\r\n    00007FFF12DE85A0 00007F7869D4CB3F System.Private.CoreLib.dll!Unknown+0x1f\r\n    00007FFF12DE85B0 00007F7869D4C2F7 System.Private.CoreLib.dll!Unknown+0x57\r\n    00007FFF12DE85D0 00007F7869D48CD4 Demo.dll!Unknown+0x54\r\n```\r\n\r\nversus full minidump\r\n```\r\n(lldb) pe\r\nException object: 00007f773c017ef0\r\nException type:   System.Exception\r\nMessage:          Bang.\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n    SP               IP               Function\r\n    00007FFF12DE84F0 00007F7869D49666 Demo.dll!Demo.Program+<Main>d__0.MoveNext()+0x86\r\n    00007FFF12DE85A0 00007F7869D4CB3F System.Private.CoreLib.dll!System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()+0x1f\r\n    00007FFF12DE85B0 00007F7869D4C2F7 System.Private.CoreLib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)+0x57\r\n    00007FFF12DE85D0 00007F7869D48CD4 Demo.dll!Demo.Program.<Main>()+0x54\r\n```\r\nIs there any possibility to view symbols for regular core dumps because there is currently no way to use minidumps in Docker Swarm because of lack of support of `--cap-add=SYS_PTRACE` and also they are very heavy?","Url":"https://github.com/dotnet/coreclr/issues/24779","RelatedDescription":"Open issue \"Core dump of StackOverflowException does not provide any information about the source of the exception\" (#24779)"},{"Id":"448357742","IsPullRequest":true,"CreatedAt":"2019-05-25T06:10:22","Actor":"jkotas","Number":"24767","RawContent":null,"Title":"Delete FEATURE_USE_LCID","State":"closed","Body":"Never defined and obsolete","Url":"https://github.com/dotnet/coreclr/pull/24767","RelatedDescription":"Closed or merged PR \"Delete FEATURE_USE_LCID\" (#24767)"},{"Id":"448408652","IsPullRequest":true,"CreatedAt":"2019-05-25T03:18:57","Actor":"andy-ms","Number":"24777","RawContent":null,"Title":"Fix PAL_GetLogicalProcessorCacheSizeFromOS on mac","State":"open","Body":"In a previous PR\r\n(https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba#diff-8447e54277bb962d167a77bb260760d7R1879),\r\nGetCacheSizePerLogicalCpu was changed to no longer rely on cpuid on\r\namd64 systems; instead it uses GetLogicalProcessorCacheSizeFromOS().\r\nUnfortunately that function consisted of a number of `#if`s, none of\r\nwhich were active on macs, and we just returned 0. This caused us to\r\ndefault to a gen0size of only 0.25MB, causing many GCs.\r\n\r\nFixed by adding a new case that uses `sysctlbyname`.\r\n\r\nFix #24658","Url":"https://github.com/dotnet/coreclr/pull/24777","RelatedDescription":"Open PR \"Fix PAL_GetLogicalProcessorCacheSizeFromOS on mac\" (#24777)"},{"Id":"448405740","IsPullRequest":true,"CreatedAt":"2019-05-25T02:51:52","Actor":"stephentoub","Number":"24775","RawContent":null,"Title":"Two changes to !dumpasync","State":"open","Body":"1. Improve performance.  A significant portion of the time running dumpasync was spent in getting a type name for each object on the heap in order to compare that to “AsyncStateMachineBox”.  It’s much faster to compare module and md type defs.  For an ~1GB dump on my machine, this improved the time to run !dumpasync from 43 seconds to 11 seconds.\r\n2. Tweak behavior of -stacks -fields.  Prior to this change, -fields would output the field information for the top-level state machine only.  Now if -fields is used in conjunction with -stacks, it’ll output the fields for each state machine in the continuation chain as well.\r\n\r\ncc: @noahfalk, @mikem8361, @patrickcarnahan","Url":"https://github.com/dotnet/coreclr/pull/24775","RelatedDescription":"Open PR \"Two changes to !dumpasync\" (#24775)"},{"Id":"448402334","IsPullRequest":true,"CreatedAt":"2019-05-25T02:14:54","Actor":"sandreenko","Number":"24774","RawContent":null,"Title":"Fix GCStress coverage for multi reg returns.","State":"open","Body":"The PR in the current state is expected to fail on arm64.","Url":"https://github.com/dotnet/coreclr/pull/24774","RelatedDescription":"Open PR \"Fix GCStress coverage for multi reg returns.\" (#24774)"},{"Id":"448388925","IsPullRequest":false,"CreatedAt":"2019-05-24T23:58:09","Actor":"noahfalk","Number":"24773","RawContent":null,"Title":"Explore using EventSource in front of ILogger","State":"open","Body":"Today there is some friction using ILogger from .Net libraries. Different library authors may have different reasons but some common examples would be ILogger isn't shipped as part of the BCL, or that they don't want to create requirements that the library user pass in an ILogger instance. There are different ideas on how to get deal with this, one of them being use EventSource from the library and let the app developer bridge it to ILogger if that is what they are using.\r\n\r\n\r\nThis issue tracks exploring what that could look like, cataloging potential issues and solutions to those issues. There is some related discussion that already happened in #24694 - in particular the desire to transmit Exception objects without serializing them.","Url":"https://github.com/dotnet/coreclr/issues/24773","RelatedDescription":"Open issue \"Explore using EventSource in front of ILogger\" (#24773)"},{"Id":"448387934","IsPullRequest":false,"CreatedAt":"2019-05-24T23:49:57","Actor":"jorive","Number":"24772","RawContent":null,"Title":"Investigate \"tests/src/tracing/*\" failures on Alpine amd64","State":"open","Body":"Test has been disabled with https://github.com/dotnet/coreclr/pull/24417\r\n\r\nThe logs show a segfault on tracing disable (only Alpine):\r\n```log\r\n  Starting:    tracing.eventsource.XUnitWrapper\r\n    tracing/eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.sh [FAIL]\r\n      /root/helix/work/workitem/tracing/eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.sh: line 271:  9005 Segmentation fault      (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /root/helix/work/workitem/tracing/eventsource/Reports/tracing.eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /root/helix/work/correlation/corerun eventsourcetrace.exe ''\r\n          Start: Enable tracing.\r\n          End: Enable tracing.\r\n      \r\n          Start: Messaging.\r\n          End: Messaging.\r\n      \r\n          Start: Disable tracing.\r\n      Expected: 100\r\n      Actual: 139\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      > set CORE_ROOT=/root/helix/work/correlation\r\n      > /root/helix/work/workitem/tracing/eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.sh\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /__w/1/s/bin/tests/Linux.x64.Release/TestWrappers/tracing.eventsource/tracing.eventsource.XUnitWrapper.cs(131,0): at tracing_eventsource._eventsourcetrace_eventsourcetrace_eventsourcetrace_._eventsourcetrace_eventsourcetrace_eventsourcetrace_sh()\r\n      Output:\r\n        /root/helix/work/workitem/tracing/eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.sh: line 271:  9005 Segmentation fault      (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n        \r\n        Return code:      1\r\n        Raw output file:      /root/helix/work/workitem/tracing/eventsource/Reports/tracing.eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n        /root/helix/work/correlation/corerun eventsourcetrace.exe ''\r\n            Start: Enable tracing.\r\n            End: Enable tracing.\r\n        \r\n            Start: Messaging.\r\n            End: Messaging.\r\n        \r\n            Start: Disable tracing.\r\n        Expected: 100\r\n        Actual: 139\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        > set CORE_ROOT=/root/helix/work/correlation\r\n        > /root/helix/work/workitem/tracing/eventsource/eventsourcetrace/eventsourcetrace/eventsourcetrace.sh\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24772","RelatedDescription":"Open issue \"Investigate \"tests/src/tracing/*\" failures on Alpine amd64\" (#24772)"},{"Id":"448384343","IsPullRequest":true,"CreatedAt":"2019-05-24T23:39:50","Actor":"jkoritzinsky","Number":"24770","RawContent":null,"Title":"Disable ARM64 IDispatch tests","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24770","RelatedDescription":"Closed or merged PR \"Disable ARM64 IDispatch tests\" (#24770)"},{"Id":"448245139","IsPullRequest":true,"CreatedAt":"2019-05-24T23:26:19","Actor":"TamarChristinaArm","Number":"24762","RawContent":null,"Title":"Arm64: Take more bounds checks into consideration when inlining immediates","State":"closed","Body":"This add `GT_ARR_BOUNDS_CHECK` to the list of operations that `IsContainableImmed` should consider in-lining the immediate for in the `cmp`.\r\n\r\nchanges\r\n\r\n```\r\n        52800041          mov     w1, #2\r\n        B9800803          ldrsw   x3, [x0,#8]\r\n        6B03003F          cmp     w1, w3\r\n        54000082          bhs     G_M32566_IG04\r\n        B9001802          str     w2, [x0,#24]\r\n```\r\n\r\ninto \r\n\r\n```\r\n        B9800803          ldrsw   x3, [x0,#8]\r\n        6B03003F          cmp     w3, #2\r\n        54000082          bls     G_M32566_IG04\r\n        B9001802          str     w2, [x0,#24]\r\n```\r\n\r\nFixes #24711 ","Url":"https://github.com/dotnet/coreclr/pull/24762","RelatedDescription":"Closed or merged PR \"Arm64: Take more bounds checks into consideration when inlining immediates\" (#24762)"},{"Id":"448262099","IsPullRequest":true,"CreatedAt":"2019-05-24T22:26:15","Actor":"jkoritzinsky","Number":"24763","RawContent":null,"Title":"Set the HasExplicitSize flag when a class size is specified in metadata.","State":"closed","Body":"Fixes #24705 \r\n","Url":"https://github.com/dotnet/coreclr/pull/24763","RelatedDescription":"Closed or merged PR \"Set the HasExplicitSize flag when a class size is specified in metadata.\" (#24763)"},{"Id":"448366687","IsPullRequest":true,"CreatedAt":"2019-05-24T22:24:18","Actor":"jkotas","Number":"24768","RawContent":null,"Title":"Fix nulable annotations build break","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24768","RelatedDescription":"Closed or merged PR \"Fix nulable annotations build break\" (#24768)"},{"Id":"448370525","IsPullRequest":true,"CreatedAt":"2019-05-24T22:12:32","Actor":"davmason","Number":"24769","RawContent":null,"Title":"change spinloop to event for eventpipe to eventsource bridge","State":"open","Body":"Fix for #18758. I am just starting to get ramped up in EventPipe, so please let me know if there's a better way to accomplish this.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24769","RelatedDescription":"Open PR \"change spinloop to event for eventpipe to eventsource bridge\" (#24769)"},{"Id":"448204103","IsPullRequest":true,"CreatedAt":"2019-05-24T21:37:04","Actor":"dotnet-maestro-bot","Number":"24761","RawContent":null,"Title":"Update CoreClr to preview6.19274.71 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/24761","RelatedDescription":"Closed or merged PR \"Update CoreClr to preview6.19274.71 (master)\" (#24761)"},{"Id":"448290881","IsPullRequest":true,"CreatedAt":"2019-05-24T21:14:42","Actor":"safern","Number":"24764","RawContent":null,"Title":" Fix some nullable annotations","State":"closed","Body":"cc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/coreclr/pull/24764","RelatedDescription":"Closed or merged PR \" Fix some nullable annotations\" (#24764)"},{"Id":"448310786","IsPullRequest":true,"CreatedAt":"2019-05-24T20:54:58","Actor":"elinor-fung","Number":"24765","RawContent":null,"Title":"Fix publishing in official build","State":"closed","Body":"The error was due to a a file being imported twice (Version.props). Switched publishwitharcade.proj to stop importing dir.props (should not be needed for things onboarded to Arcade).\r\n\r\nEventually (when we actually use `artifacts` as the output path for everything), we should probably just use the projects / scripts provided by the Arcade system for publishing as well.","Url":"https://github.com/dotnet/coreclr/pull/24765","RelatedDescription":"Closed or merged PR \"Fix publishing in official build\" (#24765)"},{"Id":"448342140","IsPullRequest":false,"CreatedAt":"2019-05-24T20:29:30","Actor":"WardenGnaw","Number":"24766","RawContent":null,"Title":"[ARM64] Missing target process's ModuleLoad Event","State":"open","Body":"Runtime version: _dotnet-runtime-3.0.0-preview5-27626-15_\r\n\r\nWhen debugging a target process in ARM64, the process only sends a ModuleLoad event for System.Private.CoreLib.dll. There is no event for the target process's own dll. \r\n\r\nEven if the target process is a infinite loop and after the module load of SPC, the DBI will send a ProcessExited event and stop running when it should still be running. ","Url":"https://github.com/dotnet/coreclr/issues/24766","RelatedDescription":"Open issue \"[ARM64] Missing target process's ModuleLoad Event\" (#24766)"},{"Id":"447996299","IsPullRequest":true,"CreatedAt":"2019-05-24T15:52:46","Actor":"elinor-fung","Number":"24756","RawContent":null,"Title":"Move to 3.0 SDK","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24756","RelatedDescription":"Closed or merged PR \"Move to 3.0 SDK\" (#24756)"},{"Id":"448193661","IsPullRequest":true,"CreatedAt":"2019-05-24T15:24:55","Actor":"gbalykov","Number":"24760","RawContent":null,"Title":"Fix FEATURE_PREJIT option setup","State":"closed","Body":"To enable build.sh with `cmakeargs -DFEATURE_PREJIT=true`\r\n\r\ncc @alpencolt @alexander-aksenov @jkotas","Url":"https://github.com/dotnet/coreclr/pull/24760","RelatedDescription":"Closed or merged PR \"Fix FEATURE_PREJIT option setup\" (#24760)"},{"Id":"448148619","IsPullRequest":true,"CreatedAt":"2019-05-24T15:24:09","Actor":"dotnet-maestro[bot]","Number":"24758","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview6.19273.8\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19273.8\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview6.19273.8\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24758","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#24758)"},{"Id":"448150449","IsPullRequest":true,"CreatedAt":"2019-05-24T15:23:59","Actor":"dotnet-maestro[bot]","Number":"24759","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.08\r\n- **Date Produced**: 5/24/2019 4:52 AM\r\n- **Commit**: 20426e8c486d8715337cb6438ec70bc3619a514d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-08\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24759","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#24759)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"448459092","IsPullRequest":true,"CreatedAt":"2019-05-25T12:53:50","Actor":"dotnet-maestro[bot]","Number":"11428","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190524.1\r\n- **Date Produced**: 5/24/2019 2:08 PM\r\n- **Commit**: 6d694be84d6e88ffa4d611cc4e22058cf9359255\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19274.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11428","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11428)"},{"Id":"448458576","IsPullRequest":true,"CreatedAt":"2019-05-25T12:37:35","Actor":"dotnet-maestro[bot]","Number":"11426","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11426","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11426)"},{"Id":"448138844","IsPullRequest":true,"CreatedAt":"2019-05-25T12:13:05","Actor":"dotnet-maestro[bot]","Number":"11423","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190523.1\r\n- **Date Produced**: 5/23/2019 1:43 PM\r\n- **Commit**: 85e3fa5110534271f70a16d52689f8cb8b517ba4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19273.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11423","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11423)"},{"Id":"448458604","IsPullRequest":true,"CreatedAt":"2019-05-25T12:07:47","Actor":"dotnet-maestro[bot]","Number":"11427","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190524.2\r\n- **Date Produced**: 5/25/2019 5:39 AM\r\n- **Commit**: 8f80c53ce0521cebc2b9aaf0cb62dc15884e6093\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19274.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11427","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/sdk\" (#11427)"},{"Id":"447968434","IsPullRequest":true,"CreatedAt":"2019-05-25T00:55:30","Actor":"peterhuene","Number":"11419","RawContent":null,"Title":"Remove using the explicit Build target with `dotnet build`.","State":"closed","Body":"This commit prevents the `dotnet build` command from always passing the\r\n`/t:Build` option to MSBuild.\r\n\r\nUsers expect `dotnet build /t:<target>` to work like MSBuild does.  However,\r\nbecause `dotnet build` was implicitly adding `/t:Build`, instead of only the\r\nuser's target being run, the `Build` target runs first and then the user's\r\ntarget runs.\r\n\r\nThis change makes the `dotnet build` command more consistent with\r\n`dotnet msbuild` and desktop MSBuild.\r\n\r\nNote: this is a breaking change, although it only impacts projects that do not\r\nuse `Build` as the default target, which will now be the target invoked by\r\n`dotnet build`.  The workaround for those projects would be to pass `/t:Build`\r\nto `dotnet build` to restore the previous behavior.\r\n\r\nFixes #4815.","Url":"https://github.com/dotnet/cli/pull/11419","RelatedDescription":"Closed or merged PR \"Remove using the explicit Build target with `dotnet build`.\" (#11419)"},{"Id":"448356958","IsPullRequest":false,"CreatedAt":"2019-05-24T21:19:04","Actor":"dsplaisted","Number":"11425","RawContent":null,"Title":"Windows Forms and WPF project templates should not show up if current OS isn't Windows","State":"open","Body":"We are not planning to support building Windows Forms and WPF projects on non-Windows operating systems (at least for now): #10842 \r\n\r\nGiven that, we should not include the `winforms` and `wpf` project templates for non-Windows builds of the .NET Core SDK.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11425","RelatedDescription":"Open issue \"Windows Forms and WPF project templates should not show up if current OS isn't Windows\" (#11425)"},{"Id":"448316236","IsPullRequest":false,"CreatedAt":"2019-05-24T19:10:10","Actor":"peterhuene","Number":"11424","RawContent":null,"Title":"Implement an option for restore/build/publish commands that disable build servers.","State":"open","Body":"## Steps to reproduce\r\n\r\nSee discussion on https://github.com/dotnet/cli/issues/9481.\r\n\r\n1) `dotnet new console`\r\n2) `dotnet build`\r\n\r\n## Expected  behavior\r\n\r\nThere should be an option to `dotnet build` (and other building commands) to disable the use of the various build servers (Roslyn, MSBuild node reuse, Razor).\r\n\r\n## Actual behavior\r\n\r\nUsers have to pass a plethora of undiscoverable properties and options to fully disable the use of the build servers, which might be helpful for CI scenarios.\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11424","RelatedDescription":"Open issue \"Implement an option for restore/build/publish commands that disable build servers.\" (#11424)"},{"Id":"447435416","IsPullRequest":true,"CreatedAt":"2019-05-24T16:55:21","Actor":"scottaddie","Number":"11411","RawContent":null,"Title":"Remove ef command from help output","State":"closed","Body":"The `dotnet ef` command was removed from the .NET Core SDK as of 3.0 Preview 4 (per https://docs.microsoft.com/ef/core/what-is-new/ef-core-3.0/breaking-changes#the-ef-core-command-line-tool-dotnet-ef-is-no-longer-part-of-the-net-core-sdk). This PR removes `ef` from the `dotnet --help` output. It also removes 2 related tests.\r\n\r\nRelated to the discussion in https://github.com/aspnet/EntityFrameworkCore/issues/14016.","Url":"https://github.com/dotnet/cli/pull/11411","RelatedDescription":"Closed or merged PR \"Remove ef command from help output\" (#11411)"},{"Id":"447922399","IsPullRequest":true,"CreatedAt":"2019-05-24T16:55:03","Actor":"dotnet-bot","Number":"11417","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11417","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11417)"},{"Id":"447922389","IsPullRequest":true,"CreatedAt":"2019-05-24T16:54:42","Actor":"dotnet-bot","Number":"11416","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11416","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11416)"},{"Id":"448127645","IsPullRequest":false,"CreatedAt":"2019-05-24T16:53:51","Actor":"ruimaciel","Number":"11421","RawContent":null,"Title":"Dotnet test hangs when running on a multi-project solution","State":"closed","Body":"I've just upgraded to dotnet 2.2.300 and since the upgrade I've started experiencing a problem running unit tests.  \r\n\r\nI have multi-project solutions which store all unit tests in a dedicated subfolder, and when I run `dotnet test` in the solution directory the test project hangs with the following output:\r\n\r\n```\r\nram@localhost:~/development/Foo$ dotnet test\r\nTest run for /home/ram/development/Foo/tests/Foo.Core.Domain.Tests/bin/Debug/netcoreapp2.2/Foo.Core.Domain.Tests.dll(.NETCoreApp,Version=v2.2)\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.1.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nTest run for /home/ram/development/Foo/tests/Foo.Core.Application.Tests/bin/Debug/netcoreapp2.2/Foo.Core.Application.Tests.dll(.NETCoreApp,Version=v2.2)\r\nStarting test execution, please wait...\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.1.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nTest run for /home/ram/development/Foo/tests/Foo.Core.MassTransitInterface.Tests/bin/Debug/netcoreapp2.2/Foo.Core.MassTransitInterface.Tests.dll(.NETCoreApp,Version=v2.2)\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.1.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nTest run in progress.\r\n```\r\n\r\nOddly enough, if I run `dotnet test` within the directory of each unit test, everything works as expected.\r\n\r\nHere's the output of `dotnet --info`:\r\n```\r\nram@localhost:~$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.300/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.2.300 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/cli/issues/11421","RelatedDescription":"Closed issue \"Dotnet test hangs when running on a multi-project solution\" (#11421)"},{"Id":"448079095","IsPullRequest":false,"CreatedAt":"2019-05-24T16:52:57","Actor":"VanCoding","Number":"11420","RawContent":null,"Title":"dotnet does not find latest patch version of SDK specified in global.json","State":"closed","Body":"## Steps to reproduce\r\n- Install latest SDK version (2.2.204 in my casse)\r\n- Install SDK version 2.1.300\r\n- in global.json set sdk.version to 2.1.0\r\n- try to dotnet restore the project.\r\n\r\n## Expected  behavior\r\nAll dependencies get installed.\r\n\r\n## Actual behavior\r\nI get an error message, stating \"A compatible SDK version for global.json version: [2.1.0] from [...] was not found.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nA compatible SDK version for global.json version: [2.1.0] from [...] was not found\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n## notes\r\nAccording to https://docs.microsoft.com/en-us/dotnet/core/tools/global-json#matching-rules, when dotnet does not find the exact sdk version specified in global.json, it should use the latest patch version instead (which would be 2.1.700 in my case, or 2.1.300 when just following the mentioned steps above). But it does not do that, so I think either the docs are wrong, or there is a bug.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11420","RelatedDescription":"Closed issue \"dotnet does not find latest patch version of SDK specified in global.json\" (#11420)"},{"Id":"448136249","IsPullRequest":true,"CreatedAt":"2019-05-24T12:43:27","Actor":"dotnet-maestro[bot]","Number":"11422","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190523.1\r\n- **Date Produced**: 5/23/2019 6:42 PM\r\n- **Commit**: 1dad323a93dd6a49d3732060b29e9ed0052dbbb1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19273.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11422","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11422)"},{"Id":"447621711","IsPullRequest":true,"CreatedAt":"2019-05-24T12:42:59","Actor":"dotnet-maestro[bot]","Number":"11413","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11413","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11413)"},{"Id":"447956016","IsPullRequest":true,"CreatedAt":"2019-05-24T02:53:08","Actor":"johnbeisner","Number":"11418","RawContent":null,"Title":"Adding installation script tests","State":"open","Body":"When we materially change the way the installation scripts install the SDK for 3.0 and beyond - these tests, and the ability to add more installation script tests, will assist with development. \r\n","Url":"https://github.com/dotnet/cli/pull/11418","RelatedDescription":"Open PR \"Adding installation script tests\" (#11418)"},{"Id":"447339998","IsPullRequest":true,"CreatedAt":"2019-05-23T20:00:59","Actor":"livarcocc","Number":"11404","RawContent":null,"Title":"Update NuGet to 5.2.0-preview2.6020","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11404","RelatedDescription":"Closed or merged PR \"Update NuGet to 5.2.0-preview2.6020\" (#11404)"},{"Id":"447578329","IsPullRequest":false,"CreatedAt":"2019-05-23T17:52:27","Actor":"wmorian","Number":"11412","RawContent":null,"Title":"dotnet-list-package in a UnitTest project returns an error","State":"closed","Body":"## Steps to reproduce\r\ncreate a new xunit project:\r\n  `dotnet new xunit`\r\n\r\nThe referenced packages are:\r\n```xml \r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.0.1\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.0\" />\r\n</ItemGroup>\r\n```\r\n\r\nrestore project:\r\n`dotnet restore`\r\n\r\nlist all packages\r\n`dotnet list package`\r\n\r\n\r\n## Expected  behavior\r\n```\r\nλ  dotnet list package\r\nProject 'ListPackageUnitTest' has the following package references\r\n   [netcoreapp2.2]:\r\n   Top-level Package                   Requested   Resolved\r\n   > Microsoft.NETCore.App       (A)   [2.2.0, )   2.2.0\r\n   > xunit                             2.4.0       2.4.0\r\n   > xunit.runner.visualstudio         2.4.0       2.4.0\r\n```\r\n\r\n## Actual behavior\r\n```\r\nλ  dotnet list package\r\nerror: Sequence contains more than one element\r\n```\r\n\r\n## Note\r\nIf I comment out Microsoft.NET.Test.Sdk, then I got no error!\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nλ  dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  1.0.1 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11412","RelatedDescription":"Closed issue \"dotnet-list-package in a UnitTest project returns an error\" (#11412)"},{"Id":"447625683","IsPullRequest":true,"CreatedAt":"2019-05-23T12:50:09","Actor":"dotnet-maestro[bot]","Number":"11415","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190522.1\r\n- **Date Produced**: 5/22/2019 1:26 PM\r\n- **Commit**: 18ccbe7678012c2001b13fc8838b87044eb82dc7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19272.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11415","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11415)"},{"Id":"447621995","IsPullRequest":true,"CreatedAt":"2019-05-23T12:43:34","Actor":"dotnet-maestro[bot]","Number":"11414","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190522.2\r\n- **Date Produced**: 5/22/2019 10:35 PM\r\n- **Commit**: adc956024076713234e69d41a11b0253fdfd90f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19272.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11414","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11414)"},{"Id":"447397296","IsPullRequest":false,"CreatedAt":"2019-05-23T00:26:23","Actor":"dsplaisted","Number":"11410","RawContent":null,"Title":"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced","State":"open","Body":"For the 3.0 release, we plan to not support building Windows Forms and WPF apps on non-Windows operating systems.  (We may consider supporting it later, see for example https://github.com/dotnet/wpf/issues/688).\r\n\r\nMost WPF apps will use Microsoft.NET.Sdk.WindowsDesktop, and the experience for that on non-Windows is covered here: https://github.com/dotnet/cli/issues/10842\r\n\r\nHowever, some projects may not use the WindowsDesktop SDK, but will still have a WindowsDesktop FrameworkReference (either explicitly or via a PackageReference).  In that case, we should also fail gracefully.  This means:\r\n\r\n- On non-Windows, don't pre-emptively download WindowsDesktop targeting or runtime packs (which we normally do in case we encounter a transitive FrameworkReference)\r\n- When we encounter a WindowsDesktop FrameworkReference on non-Windows, generate an error message stating that the project can only be built on Windows (instead of the generic error message).","Url":"https://github.com/dotnet/cli/issues/11410","RelatedDescription":"Open issue \"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced\" (#11410)"},{"Id":"447395763","IsPullRequest":true,"CreatedAt":"2019-05-23T00:18:14","Actor":"KevinRansom","Number":"11409","RawContent":null,"Title":"Update nunit test dependencies","State":"open","Body":"update nunit template","Url":"https://github.com/dotnet/cli/pull/11409","RelatedDescription":"Open PR \"Update nunit test dependencies\" (#11409)"},{"Id":"447101102","IsPullRequest":true,"CreatedAt":"2019-05-22T23:57:09","Actor":"dotnet-maestro[bot]","Number":"11400","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/22/2019 4:36 AM\r\n- **Commit**: 7e9c6d6aef7962c25a8a0ad1f9be9fc5c3f00ca9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19271.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11400","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11400)"},{"Id":"447097835","IsPullRequest":true,"CreatedAt":"2019-05-22T23:56:43","Actor":"dotnet-maestro[bot]","Number":"11399","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190521.2\r\n- **Date Produced**: 5/22/2019 7:08 AM\r\n- **Commit**: a67433ffadecd0c6848de330914a7928806d1240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19271.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11399","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11399)"},{"Id":"447372742","IsPullRequest":true,"CreatedAt":"2019-05-22T23:17:03","Actor":"dotnet-maestro[bot]","Number":"11407","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11407","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#11407)"},{"Id":"447357917","IsPullRequest":true,"CreatedAt":"2019-05-22T23:17:02","Actor":"wli3","Number":"11405","RawContent":null,"Title":"Change to find current muxer","State":"closed","Body":"fix https://github.com/dotnet/cli/issues/11380 more discussion in the issue\r\n\r\nWhy we essentially move back to the original implementation in https://github.com/dotnet/cli/issues/2489 ?\r\n\r\nIt is more relate to the usage of corehost [CoreHost.cs](https://github.com/dotnet/cli/blob/342cf7949037a17f4bf18a59faf6fcff6a4d25b1/src/Microsoft.DotNet.Cli.Utils/CoreHost.cs)\r\n\r\nMuxer share the same logic with Muxer.GetDataFromAppDomain, by the time majority of the logic of [Publish](https://github.com/dotnet/cli/blob/342cf7949037a17f4bf18a59faf6fcff6a4d25b1/src/dotnet/commands/dotnet-publish/PublishCommand.cs) is in CLI and it need corehost to find correct asset location.\r\n\r\nAs part of the work. It changed to the current way of finding FX location. But I believe it was a mistake to assume dotnet.exe will be in the parent directory (we did not count multi level loop up in). Since there is no more corehost.cs and publish is in SDK. We should use the simple and correct solution.\r\n\r\nTryResolverMuxerFromPath is used when it was a separate library. And self contain app can get result from it. But it is also no longer needed.\r\n","Url":"https://github.com/dotnet/cli/pull/11405","RelatedDescription":"Closed or merged PR \"Change to find current muxer\" (#11405)"},{"Id":"447374440","IsPullRequest":true,"CreatedAt":"2019-05-22T22:46:37","Actor":"wli3","Number":"11408","RawContent":null,"Title":"Update arcade script","State":"closed","Body":"I need https://github.com/dotnet/arcade/pull/2836 to get in CLI.\r\n\r\nI just did a manual copy paste.\r\n","Url":"https://github.com/dotnet/cli/pull/11408","RelatedDescription":"Closed or merged PR \"Update arcade script\" (#11408)"},{"Id":"447360056","IsPullRequest":false,"CreatedAt":"2019-05-22T22:23:50","Actor":"wli3","Number":"11406","RawContent":null,"Title":"DotNetCoreInstaller@1` task failed with non-zero exit code when switch to 1","State":"closed","Body":"From @AArnott \r\n\r\nActually, [my PR to switch to use `UseDotNet@2`](https://github.com/microsoft/vs-streamjsonrpc/pull/283) can't complete because 3 PR builds in a row have failed in the `dotnet test` step. [All tests pass, but `dotnet.exe` returns a nonzero exit code](https://dev.azure.com/azure-public/vside/_build/results?buildId=6240&view=logs&jobId=2d2b3007-3c5c-5840-9bb0-2b1ea49925f3&taskId=ea74d3ec-af51-57bf-65e6-f50dd234a1e5&lineStart=1163&lineEnd=1177&colStart=1&colEnd=1).\r\n\r\n```\r\n\r\nTotal tests: 246. Passed: 246. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 10.1186 Seconds\r\n     1>Done Building Project \"d:\\a\\1\\s\\src\\StreamJsonRpc.Tests\\StreamJsonRpc.Tests.csproj\" (VSTest target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:22.63\r\n##[error]Error: The process 'C:\\hostedtoolcache\\windows\\dotnet\\dotnet.exe' failed with exit code 1\r\n##[warning]Invalid results file. Make sure the result format of the file 'd:\\a\\_temp\\VssAdministrator_fv-az48_2019-05-22_04_51_17.trx' matches 'VSTest' test results format.\r\n##[error]Dotnet command failed with non-zero exit code on the following projects : d:\\a\\1\\s\\src\\StreamJsonRpc.Tests\\StreamJsonRpc.Tests.csproj\r\n```\r\n\r\nAs you can see it also emits a warning about the .trx file. None of this happens when I use the `DotNetCoreInstaller@0` task. I wonder why in the world switching installer tasks would cause this problem. ","Url":"https://github.com/dotnet/cli/issues/11406","RelatedDescription":"Closed issue \"DotNetCoreInstaller@1` task failed with non-zero exit code when switch to 1\" (#11406)"},{"Id":"447113862","IsPullRequest":false,"CreatedAt":"2019-05-22T21:13:05","Actor":"PDostalek","Number":"11401","RawContent":null,"Title":"[loc][Query][Cli] Localizability of \"ValueMustBeAnObject\" ","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nThe property '{0}' must be an object if it is specified.\r\n\r\nFile Name:\r\ndotnet\\commands\\dotnet-run\\xlf\\LocalizableStrings.xlf\r\n\r\n==========================================\r\nQuery:\r\nPlease clarify if \"it\" stands for the property or the object.","Url":"https://github.com/dotnet/cli/issues/11401","RelatedDescription":"Closed issue \"[loc][Query][Cli] Localizability of \"ValueMustBeAnObject\" \" (#11401)"},{"Id":"447114913","IsPullRequest":false,"CreatedAt":"2019-05-22T21:12:50","Actor":"PDostalek","Number":"11402","RawContent":null,"Title":" [loc][Query][Cli] Localizability of \"CouldNotConvertToString\" ","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nCould not convert the value of property '{0}' to a string.\r\n\r\nFile Name:\r\ndotnet\\commands\\dotnet-run\\xlf\\LocalizableStrings.xlf\r\n\r\n==========================================\r\nQuery:\r\nPlease, define what will placeholder be replaced by.","Url":"https://github.com/dotnet/cli/issues/11402","RelatedDescription":"Closed issue \" [loc][Query][Cli] Localizability of \"CouldNotConvertToString\" \" (#11402)"},{"Id":"447310981","IsPullRequest":false,"CreatedAt":"2019-05-22T19:44:43","Actor":"dasMulli","Number":"11403","RawContent":null,"Title":"Failure in Telemetry sending should not be printed to output","State":"open","Body":"## Steps to reproduce\r\n* macOS\r\n* .NET Core 3.0 preview 5\r\n* call an unknown `dotnet` command\r\n\r\n## Expected  behavior\r\nCommand is run or error message is written that a command is not found\r\n\r\n## Actual behavior\r\n```\r\n╰─ dotnet asdfs\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-asdfs does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties.GetGatewayAddresses(Int32)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties..ctor(System.Net.NetworkInformation.BsdNetworkInterface, Int32)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface..ctor(System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetOrCreate(System.Collections.Generic.Dictionary`2<System.String,System.Net.NetworkInformation.BsdNetworkInterface>, System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface+<>c__DisplayClass5_0.<GetBsdNetworkInterfaces>b__2(System.String, LinkLayerAddressInfo*)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)                                         \r\n```\r\n\r\n## Environment data\r\n`netstat -nr` output:\r\n```\r\nRouting tables\r\n\r\nInternet:\r\nDestination        Gateway            Flags        Refs      Use   Netif Expire\r\ndefault            10.0.20.1          UGSc          212        0     en0       \r\n10.0.20/24         link#10            UCS             3        0     en0      !\r\n10.0.20.1/32       link#10            UCS             1        0     en0      !\r\n10.0.20.1          88:f7:c7:19:af:38  UHLWIir        53       63     en0   1183\r\n10.0.20.21         74:81:14:3e:b8:82  UHLWIi          1       99     en0   1071\r\n10.0.20.25/32      link#10            UCS             1        0     en0      !\r\n10.0.20.25         f0:18:98:2a:14:55  UHLWIi          3    26429     lo0       \r\n10.0.20.153        40:9c:28:55:70:55  UHLWIi          2    29726     en0   1097\r\n10.0.20.255        ff:ff:ff:ff:ff:ff  UHLWbI          0        2     en0      !\r\n127                127.0.0.1          UCS             0        0     lo0       \r\n127.0.0.1          127.0.0.1          UH              4    99561     lo0       \r\n169.254            link#10            UCS             2        0     en0      !\r\n169.254.164.251    70:56:81:c7:5d:3e  UHLSW           0       12     en0      !\r\n224.0.0/4          link#10            UmCS            3        0     en0      !\r\n224.0.0.251        1:0:5e:0:0:fb      UHmLWI          0      119     en0       \r\n224.0.0.252        1:0:5e:0:0:fc      UHmLWI          0      106     en0       \r\n239.255.255.250    1:0:5e:7f:ff:fa    UHmLWI          0      724     en0       \r\n255.255.255.255/32 link#10            UCS             1        0     en0      !\r\n255.255.255.255    ff:ff:ff:ff:ff:ff  UHLWbI          0        2     en0      !\r\n\r\nInternet6:\r\nDestination                             Gateway                         Flags         Netif Expire\r\ndefault                                 fe80::%utun0                    UGcI          utun0       \r\ndefault                                 fe80::%utun1                    UGcI          utun1       \r\ndefault                                 fe80::%utun2                    UGcI          utun2       \r\n::1                                     ::1                             UHL             lo0       \r\nfe80::%lo0/64                           fe80::1%lo0                     UcI             lo0       \r\nfe80::1%lo0                             link#2                          UHLI            lo0       \r\nfe80::%en5/64                           link#8                          UCI             en5       \r\nfe80::aede:48ff:fe00:1122%en5           ac:de:48:0:11:22                UHLI            lo0       \r\nfe80::aede:48ff:fe33:4455%en5           ac:de:48:33:44:55               UHLWIi          en5       \r\nfe80::%awdl0/64                         link#12                         UCI           awdl0       \r\nfe80::dcd9:4cff:fef2:f19e%awdl0         de:d9:4c:f2:f1:9e               UHLI            lo0       \r\nfe80::%utun0/64                         fe80::1bde:11de:239f:14e8%utun0 UcI           utun0       \r\nfe80::1bde:11de:239f:14e8%utun0         link#18                         UHLI            lo0       \r\nfe80::%utun1/64                         fe80::570:21dd:179:a871%utun1   UcI           utun1       \r\nfe80::570:21dd:179:a871%utun1           link#20                         UHLI            lo0       \r\nfe80::%utun2/64                         fe80::8be:f0d8:93e3:7e3c%utun2  UcI           utun2       \r\nfe80::8be:f0d8:93e3:7e3c%utun2          link#21                         UHLI            lo0       \r\nff01::%lo0/32                           ::1                             UmCI            lo0       \r\nff01::%en5/32                           link#8                          UmCI            en5       \r\nff01::%awdl0/32                         link#12                         UmCI          awdl0       \r\nff01::%utun0/32                         fe80::1bde:11de:239f:14e8%utun0 UmCI          utun0       \r\nff01::%utun1/32                         fe80::570:21dd:179:a871%utun1   UmCI          utun1       \r\nff01::%utun2/32                         fe80::8be:f0d8:93e3:7e3c%utun2  UmCI          utun2       \r\nff02::%lo0/32                           ::1                             UmCI            lo0       \r\nff02::%en5/32                           link#8                          UmCI            en5       \r\nff02::%awdl0/32                         link#12                         UmCI          awdl0       \r\nff02::%utun0/32                         fe80::1bde:11de:239f:14e8%utun0 UmCI          utun0       \r\nff02::%utun1/32                         fe80::570:21dd:179:a871%utun1   UmCI          utun1       \r\nff02::%utun2/32                         fe80::8be:f0d8:93e3:7e3c%utun2  UmCI          utun2  \r\n```\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.1.403 [/usr/local/share/dotnet/sdk]\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.100-rtm-009602 [/usr/local/share/dotnet/sdk]\r\n  2.2.100 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.104 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  2.2.106 [/usr/local/share/dotnet/sdk]\r\n  2.2.202 [/usr/local/share/dotnet/sdk]\r\n  2.2.203 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview3-010431 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-rtm-35673 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-rtm-35673 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-rtm-27109-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11403","RelatedDescription":"Open issue \"Failure in Telemetry sending should not be printed to output\" (#11403)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"448462812","IsPullRequest":true,"CreatedAt":"2019-05-25T13:11:36","Actor":"dotnet-maestro[bot]","Number":"1211","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1211)"},{"Id":"448458458","IsPullRequest":true,"CreatedAt":"2019-05-25T12:20:56","Actor":"dotnet-maestro[bot]","Number":"1210","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1210)"},{"Id":"448225868","IsPullRequest":false,"CreatedAt":"2019-05-24T15:20:02","Actor":"dagood","Number":"1209","RawContent":null,"Title":"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup","State":"open","Body":"(See https://github.com/dotnet/standard/issues/1106)\r\n\r\nThe netstandard targeting pack may not version completely in sync with .NET Core Runtime, so producing it in Core-Setup via a transport package is not ideal. These artifacts should be produced in dotnet/standard itself.\r\n\r\nI don't think it makes sense to work on this until targeting pack infra is shared. (https://github.com/dotnet/core-setup/issues/4773)","Url":"https://github.com/dotnet/standard/issues/1209","RelatedDescription":"Open issue \"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup\" (#1209)"},{"Id":"448158285","IsPullRequest":true,"CreatedAt":"2019-05-24T13:09:47","Actor":"dotnet-maestro[bot]","Number":"1208","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1208)"},{"Id":"448135323","IsPullRequest":true,"CreatedAt":"2019-05-24T12:21:08","Actor":"dotnet-maestro[bot]","Number":"1207","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1207","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1207)"},{"Id":"447649294","IsPullRequest":true,"CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Number":"1206","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1206)"},{"Id":"447620634","IsPullRequest":true,"CreatedAt":"2019-05-23T12:15:47","Actor":"dotnet-maestro[bot]","Number":"1205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1205)"},{"Id":"444399962","IsPullRequest":true,"CreatedAt":"2019-05-22T19:20:47","Actor":"dotnet-maestro[bot]","Number":"1192","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1192)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"},{"Id":"445645996","IsPullRequest":true,"CreatedAt":"2019-05-21T22:04:59","Actor":"terrajobst","Number":"1198","RawContent":null,"Title":"Add missing members to MemoryMarshal","State":"closed","Body":"This fixes #1193.","Url":"https://github.com/dotnet/standard/pull/1198","RelatedDescription":"Closed or merged PR \"Add missing members to MemoryMarshal\" (#1198)"},{"Id":"444621714","IsPullRequest":false,"CreatedAt":"2019-05-21T22:04:59","Actor":"wtgodbe","Number":"1193","RawContent":null,"Title":"Fix APICompat issues with netstandard2.0 System.Memory","State":"closed","Body":"After adding a shim for `System.Memory` to netstandard2.1, we uncovered an incompatibility with netstandard2.0:\r\n\r\nhttps://github.com/dotnet/standard/blob/d3413ee9ec761bdf067114a498b9da3ebf0149df/src/apicompat/baselines/ApiCompatBaseline.netstandard2.0.txt#L72-L74\r\n\r\nIndeed, these members exist in CoreFx's ref, but are missing in Standard:  https://github.com/dotnet/corefx/blob/1f9b84a0804e868c7e0f37a3c10fbaf7c735ae14/src/System.Memory/ref/System.Memory.cs#L471\r\n\r\n@terrajobst we should add these missing members to the surface area for `netstandard2.1`","Url":"https://github.com/dotnet/standard/issues/1193","RelatedDescription":"Closed issue \"Fix APICompat issues with netstandard2.0 System.Memory\" (#1193)"},{"Id":"446749048","IsPullRequest":true,"CreatedAt":"2019-05-21T19:26:08","Actor":"ericstj","Number":"1203","RawContent":null,"Title":"Fix public key of ns2.0 shims","State":"closed","Body":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here.","Url":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Closed or merged PR \"Fix public key of ns2.0 shims\" (#1203)"},{"Id":"446608759","IsPullRequest":true,"CreatedAt":"2019-05-21T14:48:22","Actor":"dotnet-maestro[bot]","Number":"1202","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/21/2019 9:31 AM\r\n- **Commit**: 51a1f16ee2aaded4ce1fca6847471b58f7ffa160\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1202","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1202)"},{"Id":"445640404","IsPullRequest":true,"CreatedAt":"2019-05-20T20:27:35","Actor":"terrajobst","Number":"1197","RawContent":null,"Title":"Add asymmetric key import/export APIs","State":"closed","Body":"This fixes #1178.","Url":"https://github.com/dotnet/standard/pull/1197","RelatedDescription":"Closed or merged PR \"Add asymmetric key import/export APIs\" (#1197)"},{"Id":"445635400","IsPullRequest":true,"CreatedAt":"2019-05-20T20:22:04","Actor":"terrajobst","Number":"1196","RawContent":null,"Title":"Enable C# mode command line diff","State":"closed","Body":"When diffing on the command line, enabling this ensures that hunk headers will use the containing construct (i.e. method, type, or namespace).\r\n\r\nFor example, instead of this (pay attention to the `@@` line):\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex 9f68653..19d239a 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -101,8 +101,20 @@ namespace System.Security.Cryptography\r\n         public virtual byte[] ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan<char> password, System.Security.Cryptography.PbeParameters pbeParameters) { throw null; }\r\n         public virtual byte[] ExportPkcs8PrivateKey() { throw null; }\r\n+        public virtual byte[] ExportSubjectPublicKeyInfo() { throw null; }\r\n         public virtual void FromXmlString(string xmlString) { }\r\n     }\r\n     public abstract partial class AsymmetricKeyExchangeDeformatter\r\n     {\r\n```\r\n\r\nYou'll see this:\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex 9f68653..19d239a 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -101,8 +101,20 @@ public abstract partial class AsymmetricAlgorithm : System.IDisposable\r\n         public virtual byte[] ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan<char> password, System.Security.Cryptography.PbeParameters pbeParameters) { throw null; }\r\n         public virtual byte[] ExportPkcs8PrivateKey() { throw null; }\r\n+        public virtual byte[] ExportSubjectPublicKeyInfo() { throw null; }\r\n         public virtual void FromXmlString(string xmlString) { }\r\n     }\r\n     public abstract partial class AsymmetricKeyExchangeDeformatter\r\n     {\r\n```","Url":"https://github.com/dotnet/standard/pull/1196","RelatedDescription":"Closed or merged PR \"Enable C# mode command line diff\" (#1196)"},{"Id":"446103850","IsPullRequest":true,"CreatedAt":"2019-05-20T13:38:53","Actor":"dotnet-maestro[bot]","Number":"1201","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 11:22 AM\r\n- **Commit**: e58b35cd0f8fe6caa194ca7e48388d8d59854fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19270.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1201","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1201)"},{"Id":"445816606","IsPullRequest":true,"CreatedAt":"2019-05-19T13:14:40","Actor":"dotnet-maestro[bot]","Number":"1200","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190518.5\r\n- **Date Produced**: 5/18/2019 11:19 PM\r\n- **Commit**: 36ad1c62d4bb753a489d4c055b909af2cb6d407f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19268.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1200)"},{"Id":"445713531","IsPullRequest":true,"CreatedAt":"2019-05-18T13:13:40","Actor":"dotnet-maestro[bot]","Number":"1199","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190517.12\r\n- **Date Produced**: 5/18/2019 4:32 AM\r\n- **Commit**: c671ce2be16ae3c6086a061d9d94b81005217735\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19267.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1199","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1199)"},{"Id":"445427447","IsPullRequest":true,"CreatedAt":"2019-05-17T14:02:55","Actor":"dotnet-maestro[bot]","Number":"1195","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190516.12\r\n- **Date Produced**: 5/17/2019 8:31 AM\r\n- **Commit**: 6f9570e012054bf407778c0b07632e7733ecbb13\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19266.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19266.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19266.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1195","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1195)"},{"Id":"444869749","IsPullRequest":false,"CreatedAt":"2019-05-16T10:11:58","Actor":"KexyBiscuit","Number":"1194","RawContent":null,"Title":"Is ValueTask<> missing in latest NetStandard?","State":"open","Body":"```\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nMight be related to #1180?\r\n\r\n```\r\n> dotnet --version\r\n3.0.100-preview6-011910\r\n```\r\n\r\n```\r\n<TargetFramework>netstandard2.1</TargetFramework>\r\n<NetStandardImplicitPackageVersion>2.1.0-prerelease.19265.2</NetStandardImplicitPackageVersion>\r\n```","Url":"https://github.com/dotnet/standard/issues/1194","RelatedDescription":"Open issue \"Is ValueTask<> missing in latest NetStandard?\" (#1194)"},{"Id":"442461759","IsPullRequest":true,"CreatedAt":"2019-05-15T21:27:47","Actor":"terrajobst","Number":"1183","RawContent":null,"Title":"Seal types that cannot be inherited","State":"closed","Body":"These changes are related to #1176 and address the same problem.\r\n\r\nFixes #1171.","Url":"https://github.com/dotnet/standard/pull/1183","RelatedDescription":"Closed or merged PR \"Seal types that cannot be inherited\" (#1183)"},{"Id":"442864446","IsPullRequest":true,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1185","RawContent":null,"Title":"Fail CI build if APICompat baseline files would change","State":"closed","Body":"Currently, if a change in Arcade would cause changes in the APICompat baseline files, the baseline files are rewritten without throwing an error. If somebody makes such a change without checking in the changes to the APICompat baselines, the CI should fail. This change achieves that. Resolves https://github.com/dotnet/standard/issues/1184.\r\n\r\n@ericstj @terrajobst PTAL","Url":"https://github.com/dotnet/standard/pull/1185","RelatedDescription":"Closed or merged PR \"Fail CI build if APICompat baseline files would change\" (#1185)"},{"Id":"442475952","IsPullRequest":false,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1184","RawContent":null,"Title":"Fail CI when APICompat Baseline files change","State":"closed","Body":"Right now, when a change to Standard causes a change to the APICompat baseline(s), the build succeeds, and the baseline files are re-written with the change. In CI, we should fail the build on changes to the APICompat baseline files (rather than silently rewriting them).\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1184","RelatedDescription":"Closed issue \"Fail CI when APICompat Baseline files change\" (#1184)"},{"Id":"443876288","IsPullRequest":true,"CreatedAt":"2019-05-14T12:39:27","Actor":"dotnet-maestro[bot]","Number":"1191","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1191)"},{"Id":"443629557","IsPullRequest":true,"CreatedAt":"2019-05-14T00:00:25","Actor":"JohnTortugo","Number":"1189","RawContent":null,"Title":"Update azure-pipelines.yml","State":"closed","Body":"Related to: https://github.com/dotnet/core-eng/issues/6291","Url":"https://github.com/dotnet/standard/pull/1189","RelatedDescription":"Closed or merged PR \"Update azure-pipelines.yml\" (#1189)"},{"Id":"443632814","IsPullRequest":false,"CreatedAt":"2019-05-13T22:41:56","Actor":"yangsong2828","Number":"1190","RawContent":null,"Title":"HttpModule with Microsoft.AspNetCore.Http","State":"open","Body":"We have multiple projects depend on one common IIS module, say Logging module.\r\nHowever, we can't move all projects to asp.net core at one shot. But we want to move one at a time.\r\nIf I port it to middleware, it can't be used by legacy IIS projects any more.\r\nSo what is your recommendation to move those common piece to asp .net core? Thanks.","Url":"https://github.com/dotnet/standard/issues/1190","RelatedDescription":"Open issue \"HttpModule with Microsoft.AspNetCore.Http\" (#1190)"},{"Id":"443361033","IsPullRequest":true,"CreatedAt":"2019-05-13T12:19:21","Actor":"dotnet-maestro[bot]","Number":"1188","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1188","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1188)"},{"Id":"443096722","IsPullRequest":true,"CreatedAt":"2019-05-12T12:18:57","Actor":"dotnet-maestro[bot]","Number":"1187","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1187","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1187)"},{"Id":"442986105","IsPullRequest":true,"CreatedAt":"2019-05-11T12:28:56","Actor":"dotnet-maestro[bot]","Number":"1186","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1186)"},{"Id":"442425601","IsPullRequest":true,"CreatedAt":"2019-05-09T21:41:45","Actor":"joperezr","Number":"1182","RawContent":null,"Title":"Fix official build which is failing when trying to publish the packages to BAR","State":"closed","Body":"cc: @wtgodbe \r\n\r\nOfficial builds are failing when trying to publish packages to BAR because the AssetsManifest file isn't being generated any longer. This was caused because of a breaking change in Arcade. These changes will fix this issue.","Url":"https://github.com/dotnet/standard/pull/1182","RelatedDescription":"Closed or merged PR \"Fix official build which is failing when trying to publish the packages to BAR\" (#1182)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"448520202","IsPullRequest":true,"CreatedAt":"2019-05-26T02:15:35","Actor":"Dotnet-GitSync-Bot","Number":"37954","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/37954","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#37954)"},{"Id":"448461968","IsPullRequest":true,"CreatedAt":"2019-05-25T12:50:49","Actor":"dotnet-maestro[bot]","Number":"37953","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190524.71\r\n- **Date Produced**: 5/24/2019 2:12 PM\r\n- **Commit**: d5d18896900561b7aaf38ba9501a8525a4b9caea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview6.19274.71\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6.19274.71\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview6.19274.71\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37953","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/coreclr\" (#37953)"},{"Id":"448460564","IsPullRequest":true,"CreatedAt":"2019-05-25T12:32:06","Actor":"dotnet-maestro[bot]","Number":"37952","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview6.19274.8\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37952","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#37952)"},{"Id":"448460230","IsPullRequest":true,"CreatedAt":"2019-05-25T12:27:40","Actor":"dotnet-maestro[bot]","Number":"37951","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190524.03\r\n- **Date Produced**: 5/25/2019 5:20 AM\r\n- **Commit**: 4122653611ecb6e7f964af762b4280ba0e1421c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27724-03\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview6-27724-03\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview6-27724-03\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37951","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#37951)"},{"Id":"448458424","IsPullRequest":true,"CreatedAt":"2019-05-25T12:05:26","Actor":"dotnet-maestro[bot]","Number":"37950","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19274.6\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19274.6\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37950","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#37950)"},{"Id":"448446017","IsPullRequest":false,"CreatedAt":"2019-05-25T09:43:13","Actor":"theimowski","Number":"37949","RawContent":null,"Title":"Using System.Management for Self Contained Apps required specific full .NET version","State":"open","Body":"I'd like to revisit https://github.com/dotnet/corefx/issues/31447\r\n\r\nFollowing code for self contained .NET Core 2.1 console app on Windows 8.1 Pro with .NET 4.5.1:\r\n\r\n```fsharp\r\n      use mo = new ManagementObjectSearcher(\"root\\\\CIMV2\", \"select * from win32_computersystem\")\r\n      use col = mo.Get()\r\n      col\r\n      |> Seq.cast<ManagementObject>\r\n      |> Seq.head\r\n      |> fun t -> t.GetPropertyValue(\"totalphysicalmemory\")\r\n```\r\n\r\nExperienced following exception:\r\n\r\n```\r\nThe type initializer for 'System.Management.WmiNetUtilsHelper' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: ptr\r\n```\r\n\r\nWhen I update System.Management to latest preview version (4.6.0-preview5.19224.8), the exception changes to:\r\n\r\n```\r\nSystem.PlatformNotSupportedException: The native library 'C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\wminet_utils.dll' does not have all required functions. Please, update the .NET Framework.\r\n```\r\n\r\nwhich is obviously more informative, however .NET Core is supposed to support Windows 8.1 OOTB.\r\nIs this a known issue, or a \"won't fix\" due to one actually needs recent full .NET Framework to use System.Management? \r\n","Url":"https://github.com/dotnet/corefx/issues/37949","RelatedDescription":"Open issue \"Using System.Management for Self Contained Apps required specific full .NET version\" (#37949)"},{"Id":"448307984","IsPullRequest":false,"CreatedAt":"2019-05-25T08:27:45","Actor":"dasMulli","Number":"37935","RawContent":null,"Title":"Hardware Intrinsics Feedback","State":"closed","Body":"So I just spent some time experimenting with Hardware Intrinsics and wanted to share my experience.\r\nI have no previous experience with using hardware intrinsics except vor a very basic understanding of what it is about nor any pre-existing asm/c* optimised avx/sse code that I could copy from, but I set out to improve on a routine that showed up as by far the most expensive loop for implementing the [Hungarian algorithm](https://en.wikipedia.org/wiki/Hungarian_algorithm) in C#. (I do know how pointers and operations work due to experience with C and a little x86 assembler)\r\n\r\nFast forward a few hours:\r\n* Code runs faster by around 35% (using BenchmarkDotNet) without significant logic changes, just using `Vector256<float>` comparisons and some bitmasking.\r\n* I've recognised more opportunities for improvements in the surrounding code.\r\n\r\nWhat I really liked about the experience using .NET Core Hardware Intrinsics:\r\n* The API is easy and intuitive to understand once you see an example of how to load and use vectors.\r\n* The methods on the Avx and See* classes are easy to understand and I don't need to look up the horrible instruction names from Intel documentation.\r\n* Also the `FloatComparison` enum is super helpful with its naming. I compared it to some C++ code I found and recognised how much value the long and expressive names provide - although I had to google the exact behaviour of Ordered/Unorderd and Signaling/NonSignaling (nothing 2 existing SO answers didn't explain).\r\n\r\nThings that I have questions about:\r\n* Any chance to provide easier creation of vecotors like using `ref` arguments? (e.g. `Avx.LoadVectror256(ref myarr[0])`, `Avx.CreateVector128Int(1,1,1,1,1,1,1,1)`)\r\n* Is there a plan to introduce `Vector512<T>`? I've found mentions in GH issues here but nothing more specific.\r\n\r\nSummary: Great work, thanks for that!\r\n","Url":"https://github.com/dotnet/corefx/issues/37935","RelatedDescription":"Closed issue \"Hardware Intrinsics Feedback\" (#37935)"},{"Id":"448428033","IsPullRequest":false,"CreatedAt":"2019-05-25T06:39:20","Actor":"cspotcode","Number":"37948","RawContent":null,"Title":"No way to turn off tty echo via corefx API (tcsetattr on Linux)","State":"open","Body":"On Linux, TTY echo needs to be disabled to avoid keystrokes -- potentially ugly ansi escape sequences -- from rendering on the console.  dotnet's API does not expose this functionality except within `Console.ReadKey`, which is inadequate.\r\n\r\nPSReadLine reads input keystrokes by repeatedly calling `Console.ReadKey` in a loop.  Dotnet's `ReadKey` implementation turns off TTY echo while it's waiting for a keypress, but it re-enables echo as soon as a key is pressed.  Despite PSReadLine's best efforts to immediately call `ReadKey` again, there is a brief window where keystrokes will be echoed to the console.  When holding down a key or typing rapidly, there's a chance these ansi escape sequences will appear and garble the display.\r\n\r\nThe proper solution is for libraries such as PSReadLine to disable tty echo *once* before reading input, *not* off and back on with every keypress.  dotnet's API needs to expose this functionality somewhere.","Url":"https://github.com/dotnet/corefx/issues/37948","RelatedDescription":"Open issue \"No way to turn off tty echo via corefx API (tcsetattr on Linux)\" (#37948)"},{"Id":"448409164","IsPullRequest":true,"CreatedAt":"2019-05-25T06:16:31","Actor":"Dotnet-GitSync-Bot","Number":"37947","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/37947","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37947)"},{"Id":"448356011","IsPullRequest":true,"CreatedAt":"2019-05-25T03:20:38","Actor":"Dotnet-GitSync-Bot","Number":"37939","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corefx/pull/37939","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37939)"},{"Id":"448396298","IsPullRequest":false,"CreatedAt":"2019-05-25T01:05:02","Actor":"Gnbrkm41","Number":"37946","RawContent":null,"Title":"Further vectorisation of BitArray?","State":"open","Body":"I've noticed a couple things while strolling through the source of BitArray:\r\n* `And`, `Or`, `Xor` have `Sse2` path however it does not have `Avx2` path\r\n* `Not` is not vectorised at all\r\n\r\nI tested using a relatively simple implementation (....I pretty much copy & pasted the `Sse2` path and amended it for `Avx2/Vector256` :^) ), and it looks like vectorising might have some positive effect on the time taken.\r\n\r\n(See https://github.com/Gnbrkm41/BitArrayIntrinsicsBenchmark)\r\nN is the size of the array (in bits), methods with `_Opt` suffix are the vectorised methods and `_Unopt` are the original methods.\r\n\r\n|       Method |       N |          Mean |         Error |        StdDev | Rank |\r\n|------------- |-------- |--------------:|--------------:|--------------:|-----:|\r\n|      **And_Opt** | **8388608** | **33,938.916 ns** |   **376.3072 ns** |   **314.2336 ns** |   **36** |\r\n|       Or_Opt | 8388608 | 34,029.502 ns |   297.8839 ns |   278.6408 ns |   36 |\r\n|      Xor_Opt | 8388608 | 33,466.440 ns |   541.9196 ns |   506.9119 ns |   36 |\r\n|      Not_Opt | 8388608 | 22,278.547 ns |    54.4056 ns |    48.2292 ns |   34 |\r\n|    And_Unopt | 8388608 | 42,449.080 ns |   414.0216 ns |   387.2761 ns |   38 |\r\n|     Or_Unopt | 8388608 | 42,595.040 ns |   574.9606 ns |   537.8185 ns |   38 |\r\n|    Xor_Unopt | 8388608 | 42,963.108 ns |   508.2865 ns |   475.4516 ns |   38 |\r\n|    Not_Unopt | 8388608 | 88,049.039 ns |   686.3357 ns |   573.1214 ns |   39 |\r\n|      **And_Opt** | **8388613** | **32,711.390 ns** |   **196.6901 ns** |   **174.3607 ns** |   **35** |\r\n|       Or_Opt | 8388613 | 32,282.328 ns |   501.3276 ns |   468.9421 ns |   35 |\r\n|      Xor_Opt | 8388613 | 32,521.586 ns |   634.6536 ns |   593.6554 ns |   35 |\r\n|      Not_Opt | 8388613 | 22,272.668 ns |    37.5989 ns |    33.3304 ns |   34 |\r\n|    And_Unopt | 8388613 | 38,650.046 ns |   640.1163 ns |   534.5261 ns |   37 |\r\n|     Or_Unopt | 8388613 | 38,996.726 ns |   763.5589 ns |   965.6576 ns |   37 |\r\n|    Xor_Unopt | 8388613 | 38,742.539 ns |   182.6211 ns |   152.4969 ns |   37 |\r\n|    Not_Unopt | 8388613 | 89,282.173 ns | 1,320.3705 ns | 1,170.4741 ns |   39 |\r\n\r\n\r\nOverall, There has been about 16% decrease in execution time for And/Or/Xor and 70% decrease in execution time for `Not`.\r\n\r\nWould it be worth adding the paths & vectorising the `Not` method? I don't have extensive knowledge on raw instructions so I can't tell much about the Avx2 path however the `Not` case definitely looks convincing to me.","Url":"https://github.com/dotnet/corefx/issues/37946","RelatedDescription":"Open issue \"Further vectorisation of BitArray?\" (#37946)"},{"Id":"448396218","IsPullRequest":false,"CreatedAt":"2019-05-25T01:04:11","Actor":"kakiyama1018","Number":"37945","RawContent":null,"Title":"Build issue when targeting .NET core 2.1 on machine with only .NET Core SDK 2.2","State":"open","Body":"I'm trying to ship some code samples to users that will work regardless of whether they have .NET SDK 2.1 or 2.2.\r\n\r\nAccording to...\r\nhttps://docs.microsoft.com/en-us/dotnet/core/versions/selection\r\n... it states that:\r\n\r\n\"A given SDK supports a fixed set of frameworks, capped to the target framework of the runtime it ships with. For example, the .NET Core 2.0 SDK includes the .NET Core 2.0 runtime, which is an implementation of the netcoreapp2.0 target framework. The .NET Core 2.0 SDK supports netcoreapp1.0, netcoreapp1.1, and netcoreapp2.0 but not netcoreapp2.1 (or higher). You install the .NET Core 2.1 SDK to build for netcoreapp2.1.\"\r\n\r\nAs such, I've chosen to have...\r\n  <TargetFramework>netcoreapp2.1</TargetFramework>.\r\n... in the .csproj in hopes that the sample can be built on machines that have either .NET Core SDK 2.1 or 2.2.\r\n\r\nHowever, we are running into the following build-time error on machines that simply have .NET Core SDK 2.2 installed:\r\n\r\nerror NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n\r\nWhy can't we build an application that targets 2.1 on a machine that has .NET Core SDK 2.2, as the documentation implies to be allowed (since the target of 2.1 is lower than the SDK version that is installed on the machine)?","Url":"https://github.com/dotnet/corefx/issues/37945","RelatedDescription":"Open issue \"Build issue when targeting .NET core 2.1 on machine with only .NET Core SDK 2.2\" (#37945)"},{"Id":"448392272","IsPullRequest":true,"CreatedAt":"2019-05-25T00:23:50","Actor":"safern","Number":"37944","RawContent":null,"Title":"Add nullable annotations to System.Runtime.Intrinsics ref assembly","State":"open","Body":"cc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/37944","RelatedDescription":"Open PR \"Add nullable annotations to System.Runtime.Intrinsics ref assembly\" (#37944)"},{"Id":"448390142","IsPullRequest":false,"CreatedAt":"2019-05-25T00:06:50","Actor":"vatsan-madhavan","Number":"37943","RawContent":null,"Title":"System.Reflection.MetadataLoadContext has an incoherent dependency on System.Memory","State":"open","Body":"`System.Reflection.MetadataLoadContext` (for e.g., `4.6.0-preview6.19273.5`) …. \r\n- ... depends on `System.Memory/4.5.3`  (`AssemblyVersion=4.0.1.1`)\r\n- ... requires `System.Memory` with `AssemblyVersion=4.0.1.0` (=> this is NOT `4.5.3` – this is `4.5.2)`. \r\n\r\nThis incoherence breaks the build for PresentationBuildTasks in [dotnet/wpf](https://github.com/dotnet/wpf). \r\n\r\nWe are temporarily working around the problem by explicitly referencing `System.Memory/4.5.2` and suppressing `NU1605`, but we'd like to stop doing this - and prefer that whatever version of `System.Memory` is pulled in by `System.Reflection.MetadataLoadContext` _just works_.\r\n\r\n/cc @nguerrera, @ericstj, @ryalanms, @rladuca \r\n/cc @dotnet/wpf-developers \r\n","Url":"https://github.com/dotnet/corefx/issues/37943","RelatedDescription":"Open issue \"System.Reflection.MetadataLoadContext has an incoherent dependency on System.Memory\" (#37943)"},{"Id":"448362312","IsPullRequest":true,"CreatedAt":"2019-05-24T23:04:11","Actor":"dotnet-maestro[bot]","Number":"37941","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.3\r\n- **Date Produced**: 5/24/2019 5:36 PM\r\n- **Commit**: cb9317c52c891fba6c6c43901ec8621fe2b9bb3b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19274.3\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19274.3\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19274.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19274.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19274.3\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37941","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#37941)"},{"Id":"448378984","IsPullRequest":false,"CreatedAt":"2019-05-24T22:54:14","Actor":"rainersigwald","Number":"37942","RawContent":null,"Title":"System.Resources.Extensions API to add untyped BinaryFormatter","State":"open","Body":"`PreserializedResourceWriter` currently exposes\r\n\r\nhttps://github.com/dotnet/corefx/blob/bf7dbd6d37285a147dd30f5dfca6582046dcabc7/src/System.Resources.Extensions/ref/System.Resources.Extensions.cs#L32\r\n\r\nUnfortunately, when (desktop) `ResXResourceWriter` chooses to write a BinaryFormatter byte array, it does not preserve type information in the `.resx`. For instance:\r\n\r\n```xml\r\n  <data name=\"listView1.Groups1\" mimetype=\"application/x-microsoft.net.object.binary.base64\">\r\n    <value>\r\n        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w\r\n        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACJTeXN0\r\n        ZW0uV2luZG93cy5Gb3Jtcy5MaXN0Vmlld0dyb3VwBAAAAAZIZWFkZXIPSGVhZGVyQWxpZ25tZW50A1Rh\r\n        ZwROYW1lAQQCAShTeXN0ZW0uV2luZG93cy5Gb3Jtcy5Ib3Jpem9udGFsQWxpZ25tZW50AgAAAAIAAAAG\r\n        AwAAAA1MaXN0Vmlld0dyb3VwBfz///8oU3lzdGVtLldpbmRvd3MuRm9ybXMuSG9yaXpvbnRhbEFsaWdu\r\n        bWVudAEAAAAHdmFsdWVfXwAIAgAAAAAAAAAKBgUAAAAObGlzdFZpZXdHcm91cDIL\r\n</value>\r\n  </data>\r\n```\r\n\r\nis accessed at runtime as a `System.Windows.Forms.ListViewGroup`.\r\n\r\nIn order to pass that resource through, something along the lines of\r\n\r\n```c#\r\npublic void AddBinaryFormattedResource(string name, byte[] value) { }\r\n```\r\n\r\nwould be ideal.\r\n\r\n/cc @ericstj @dreddy-work ","Url":"https://github.com/dotnet/corefx/issues/37942","RelatedDescription":"Open issue \"System.Resources.Extensions API to add untyped BinaryFormatter\" (#37942)"},{"Id":"448320622","IsPullRequest":false,"CreatedAt":"2019-05-24T22:07:53","Actor":"Alois-xx","Number":"37936","RawContent":null,"Title":"JsonSerializer does not serialize fields","State":"closed","Body":"So far JsonSerializer only supports serialization of properties. Practically every other serializer can also serialize fields. Is this feature on the roadmap? \r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37936","RelatedDescription":"Closed issue \"JsonSerializer does not serialize fields\" (#37936)"},{"Id":"448263878","IsPullRequest":true,"CreatedAt":"2019-05-24T22:05:05","Actor":"tarekgh","Number":"37932","RawContent":null,"Title":"Use Thread instead of Task.Run in some Task tests","State":"closed","Body":"Stephen Toub pointed that it is possible when using Task.Run, there could be some ThreadLocal fields on the thread executing the task holding a reference to the object we are trying to GC collect and finalize. The fix here is use Thread objects instead of Task.","Url":"https://github.com/dotnet/corefx/pull/37932","RelatedDescription":"Closed or merged PR \"Use Thread instead of Task.Run in some Task tests\" (#37932)"},{"Id":"448358489","IsPullRequest":false,"CreatedAt":"2019-05-24T21:24:57","Actor":"tanbchr","Number":"37940","RawContent":null,"Title":"GetSchema Async","State":"open","Body":"I was curious to know why there is not an `async` version of the `GetSchema`?\r\n\r\nBasically, for each collection information name, it is doing queries to retrieve the metadata.\r\n\r\nI know that we can query directly the database to retrieve the same information. However, we are using multiple ADO.NET providers and we are not depending on the implementation of the `GetSchema` function nor on the type of the connection.\r\n\r\nGetting the metadata is really heavy and requires a lot of time to fetch everything. By having an asynchronous version, we can free the current thread.","Url":"https://github.com/dotnet/corefx/issues/37940","RelatedDescription":"Open issue \"GetSchema Async\" (#37940)"},{"Id":"448353408","IsPullRequest":true,"CreatedAt":"2019-05-24T21:06:26","Actor":"steveharter","Number":"37938","RawContent":null,"Title":"Change JsonException.Path to be a json-based path","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/37768\r\n\r\nCurrently we escape the property names in the Path.\r\n\r\nWe need to be clear on what is reported on invalid array element. Do we return the invalid array element, or the \"last known good\" element. For example does `[1,X` report a Path of `$[0]` (last known good) or `$[1]` (invalid element even though it's not a valid indexer). Currently the code returns `$[1]` for this case.\r\n\r\nThe path is not followed into calls into `JsonDocument` which occurs during deserialization of type(object) and for the overflow\\[DataExtensionProperty]. The current plan is to create another issue to address this by first adding support within `JsonDocument` to support Path (which would work when not called by the serializer), and then have the serializer catch the appropriate `JsonReaderException` thrown by `JsonDocument` and prepend the exception's Path with the Path that existed before the call to `JsonDocument` and then re-throw as `JsonException`.","Url":"https://github.com/dotnet/corefx/pull/37938","RelatedDescription":"Open PR \"Change JsonException.Path to be a json-based path\" (#37938)"},{"Id":"448328428","IsPullRequest":true,"CreatedAt":"2019-05-24T19:46:59","Actor":"Anipik","Number":"37937","RawContent":null,"Title":"changing namespace for json serializer","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/37896","Url":"https://github.com/dotnet/corefx/pull/37937","RelatedDescription":"Open PR \"changing namespace for json serializer\" (#37937)"},{"Id":"448303704","IsPullRequest":true,"CreatedAt":"2019-05-24T18:35:48","Actor":"wfurt","Number":"37934","RawContent":null,"Title":"move tests with external servers to outerloop","State":"open","Body":"Update concurency tests to:\r\n- move GetAsync_MaxLimited_ConcurrentCallsStillSucceed to outerloop as it uses external Azure serverts\r\n- remove unnecesary craft from Set_ValidValues_Success. It seems like the comment about curl is no longer true.","Url":"https://github.com/dotnet/corefx/pull/37934","RelatedDescription":"Open PR \"move tests with external servers to outerloop\" (#37934)"},{"Id":"448293504","IsPullRequest":true,"CreatedAt":"2019-05-24T18:10:04","Actor":"wfurt","Number":"37933","RawContent":null,"Title":"enable MaxConnectionsPerServer_WaitingConnectionsAreCancelable afain","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/37933","RelatedDescription":"Open PR \"enable MaxConnectionsPerServer_WaitingConnectionsAreCancelable afain\" (#37933)"},{"Id":"448258889","IsPullRequest":false,"CreatedAt":"2019-05-24T16:39:01","Actor":"krwq","Number":"37931","RawContent":null,"Title":"Single line comments ended with single \\r return \\r when calling GetComment","State":"open","Body":"Repro:\r\n\r\n```csharp\r\n        [Fact]\r\n        public static void Test()\r\n        {\r\n            string jsonString = \"//asd\\r\";\r\n            string expectedComment = \"asd\";\r\n            byte[] dataUtf8 = Encoding.UTF8.GetBytes(jsonString);\r\n            var state = new JsonReaderState(options: new JsonReaderOptions { CommentHandling = JsonCommentHandling.Allow });\r\n            var json = new Utf8JsonReader(dataUtf8, isFinalBlock: true, state);\r\n\r\n            Assert.True(json.Read());\r\n            Assert.Equal(expectedComment, json.GetComment());\r\n            Assert.False(json.Read());\r\n        }\r\n```\r\n\r\n```\r\n        Expected: asd\r\n        Actual:   asd\\r\r\n```\r\n\r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/issues/37931","RelatedDescription":"Open issue \"Single line comments ended with single \\r return \\r when calling GetComment\" (#37931)"},{"Id":"448251286","IsPullRequest":false,"CreatedAt":"2019-05-24T16:18:36","Actor":"halgab","Number":"37930","RawContent":null,"Title":"System.IO.Compression.ZipFile.CreateFromDirectory: overloads to write to  a stream rather than a file","State":"open","Body":"The `ZipFile.CreateFromDirectory` signatures all assume that we want to write the resulting file directly to the file system. But for small archives that are directly uploaded to e.g. Azure blob storage, this is not very efficient.\r\nWould you consider adding overloads that take an output `Stream` rather than `destinationArchiveFileName`? It would look like this:\r\n\r\n```csharp\r\npublic static void CreateFromDirectory(string sourceDirectoryName, Stream destinationStream);\r\npublic static void CreateFromDirectory(string sourceDirectoryName, Stream destinationStream, CompressionLevel compressionLevel, bool includeBaseDirectory);\r\npublic static void CreateFromDirectory(string sourceDirectoryName, Stream destinationStream, CompressionLevel compressionLevel, bool includeBaseDirectory, Encoding entryNameEncoding);\r\n```\r\n\r\nSymmetrically, `ZipFile.ExtractToDirectory` overloads that take a zip stream rather than a file would be convenient:\r\n\r\n```csharp\r\npublic static void ExtractToDirectory(Stream sourceArchiveStream, string destinationDirectoryName);\r\npublic static void ExtractToDirectory(Stream sourceArchiveStream, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/37930","RelatedDescription":"Open issue \"System.IO.Compression.ZipFile.CreateFromDirectory: overloads to write to  a stream rather than a file\" (#37930)"},{"Id":"448182031","IsPullRequest":true,"CreatedAt":"2019-05-24T15:49:45","Actor":"Dotnet-GitSync-Bot","Number":"37928","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro-bot","Url":"https://github.com/dotnet/corefx/pull/37928","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37928)"},{"Id":"448220364","IsPullRequest":false,"CreatedAt":"2019-05-24T15:08:18","Actor":"onovotny","Number":"37929","RawContent":null,"Title":"Add .NET 4.6.1 target to AsyncInterfaces","State":"open","Body":"The AsyncInterfaces package currently targets .NET Standard 2.0 and .NET Standard 2.1. This means that a .NET Framework 4.6.1 project may pull in a lot of other packages by referencing this one.\r\n\r\nPlease add a .NET 4.6.1 target (with the same items as in the .NET Standard 2.0 one) to minimize package dependency issues.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37929","RelatedDescription":"Open issue \"Add .NET 4.6.1 target to AsyncInterfaces\" (#37929)"},{"Id":"448144729","IsPullRequest":true,"CreatedAt":"2019-05-24T14:03:10","Actor":"dotnet-maestro[bot]","Number":"37926","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190523.08\r\n- **Date Produced**: 5/24/2019 4:52 AM\r\n- **Commit**: 20426e8c486d8715337cb6438ec70bc3619a514d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27723-08\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview6-27723-08\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview6-27723-08\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37926","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#37926)"},{"Id":"448135269","IsPullRequest":true,"CreatedAt":"2019-05-24T14:02:18","Actor":"dotnet-maestro[bot]","Number":"37925","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19273.11\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19273.11\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37925","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#37925)"},{"Id":"448170922","IsPullRequest":false,"CreatedAt":"2019-05-24T13:27:02","Actor":"martin-pes","Number":"37927","RawContent":null,"Title":"HttpClient with client certificate fails with OpenSslCryptographicException on Linux","State":"open","Body":"I am trying to make calls from ASP.NET Core application to [Swish payment platform](https://developer.getswish.se/merchants/) \r\nsimulator Web API. I am using `HttpClient` to make the calls and I am attaching client certificate which is required by the API.\r\n\r\nThis is the code I am using (full source code [here](https://pescn.visualstudio.com/_git/AspNetCoreSwish?path=%2Fsrc%2FSwishClient%2FControllers%2FApiController.cs&version=GBmaster)):\r\n```\r\nvar cert = GetCertificate(\"Swish_Merchant_TestCertificate_1231181189.p12\", \"swish\");\r\n\r\nvar handler = new HttpClientHandler();\r\nhandler.ClientCertificates.Add(cert);\r\n\r\nvar client = new HttpClient(handler);\r\n\r\nconst string paymentPath = \"https://mss.cpc.getswish.net/swish-cpcapi/api/v1/paymentrequests/\";\r\n\r\nvar response = await client.PostAsync(paymentPath, PaymentModel.GetSampleContent());\r\n\r\nvar responseContent = await response.Content.ReadAsStringAsync();\r\n```\r\n\r\nEverything works fine on Windows but as soon as I switch to Docker on Linux I get the following exception during the API call:\r\n\r\n```\r\nAn unhandled exception occurred while processing the request.\r\nOpenSslCryptographicException: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure\r\nUnknown location\r\n\r\nSslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL.\r\nInterop+OpenSsl.DoSslHandshake(SafeSslHandle context, byte[] recvBuf, int recvOffset, int recvCount, out byte[] sendBuf, out int sendCount)\r\n\r\nAuthenticationException: Authentication failed, see inner exception.\r\nSystem.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n\r\nHttpRequestException: The SSL connection could not be established, see inner exception.\r\nSystem.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n```\r\n```\r\nInterop+OpenSsl+SslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL. ---> Interop+Crypto+OpenSslCryptographicException: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure\r\n   --- End of inner exception stack trace ---\r\n   at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount)\r\n   at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n```\r\n```\r\nSystem.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception. ---> System.Security.Authentication.AuthenticationException: Authentication failed, see inner exception. ---> Interop+OpenSsl+SslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL. ---> Interop+Crypto+OpenSslCryptographicException: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure\r\n   --- End of inner exception stack trace ---\r\n   at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount)\r\n   at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__47_1(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at SwishClient.Controllers.ApiController.Call() in /src/SwishClient/Controllers/ApiController.cs:line 36\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n# Additional Context\r\n\r\nThe required client certificate is signed by intermediate CA. I have tried:\r\n- To install these intermediate CA before running the app - on Windows manually, on Docker during Docker build.\r\n- Installing these certificates programmatically from the app before making first API call\r\n\r\nBoth methods work fine on Windows, none on Linux.\r\n\r\nComplete source code including certificates, `Dockerfile` and further instruction in `Readme` in \r\nhttps://pescn.visualstudio.com/AspNetCoreSwish/_git/AspNetCoreSwish\r\n\r\nI can SSH into Linux docker container running my app and successfully connect to Swish API using curl\r\n```\r\ncurl -s -S -i -k --cert ./Certificates/Swish_Merchant_TestCertificate_1231181189.p12:swish --cert-type p12 --cacert ./CA/Swish_TLS_RootCA.pem --tlsv1.1 --header \"Content-Type:application/json\" https://host.docker.internal:5001/api/test --data '{ \"payeePaymentReference\" : \"0123456789\", \"callbackUrl\" :\"https://myfakehost.se/swishcallback.cfm\", \"payerAlias\" : \"4671234768\",\"payeeAlias\" : \"1231181189\", \"amount\" : \"100\", \"currency\" : \"SEK\",\"message\" : \"Kingston USB Flash Drive 8 GB\" }'\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37927","RelatedDescription":"Open issue \"HttpClient with client certificate fails with OpenSslCryptographicException on Linux\" (#37927)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"448514364","IsPullRequest":false,"CreatedAt":"2019-05-26T00:20:36","Actor":"0xd4d","Number":"35978","RawContent":null,"Title":"'CS8629: Nullable value type may be null' reported when it can not be null","State":"open","Body":"**Version Used**: VS 16.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Compile this code (C#8 + NRT)\r\n\r\n```C#\r\nusing System;\r\n\r\n#nullable enable\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            M(default((Guid g, string s)?));\r\n            M(default((Guid g, string s)));\r\n        }\r\n\r\n        static void M((Guid g, string s)? t)\r\n        {\r\n            if (t?.g == Guid.Empty)\r\n            {\r\n                // 't': CS8629: Nullable value type may be null.\r\n                _ = t.Value.s;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo warning\r\n\r\n**Actual Behavior**:\r\n\r\nWarning: CS8629: Nullable value type may be null.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35978","RelatedDescription":"Open issue \"'CS8629: Nullable value type may be null' reported when it can not be null\" (#35978)"},{"Id":"448513306","IsPullRequest":true,"CreatedAt":"2019-05-26T00:00:50","Actor":"dotnet-bot","Number":"35977","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"open","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35977","RelatedDescription":"Open PR \"Merge master to features/NullableDogfood\" (#35977)"},{"Id":"448513299","IsPullRequest":true,"CreatedAt":"2019-05-26T00:00:41","Actor":"dotnet-bot","Number":"35976","RawContent":null,"Title":"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview2 into release/dev16.2-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-to-release/dev16.2-preview2-vs-deps\ngit reset --hard upstream/release/dev16.2-preview2-vs-deps\ngit merge upstream/release/dev16.2-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-to-release/dev16.2-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35976","RelatedDescription":"Open PR \"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps\" (#35976)"},{"Id":"448513293","IsPullRequest":true,"CreatedAt":"2019-05-26T00:00:37","Actor":"dotnet-bot","Number":"35975","RawContent":null,"Title":"Merge release/dev16.1 to release/dev16.1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.1-vs-deps\ngit reset --hard upstream/release/dev16.1-vs-deps\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35975","RelatedDescription":"Open PR \"Merge release/dev16.1 to release/dev16.1-vs-deps\" (#35975)"},{"Id":"448513274","IsPullRequest":true,"CreatedAt":"2019-05-26T00:00:17","Actor":"dotnet-bot","Number":"35974","RawContent":null,"Title":"Merge release/dev16.2-preview2 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview2 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.2-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35974","RelatedDescription":"Open PR \"Merge release/dev16.2-preview2 to master\" (#35974)"},{"Id":"448513265","IsPullRequest":true,"CreatedAt":"2019-05-26T00:00:11","Actor":"dotnet-bot","Number":"35973","RawContent":null,"Title":"Merge release/dev16.1 to release/dev16.2-preview1","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.2-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.2-preview1\ngit reset --hard upstream/release/dev16.2-preview1\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.2-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35973","RelatedDescription":"Open PR \"Merge release/dev16.1 to release/dev16.2-preview1\" (#35973)"},{"Id":"448458045","IsPullRequest":true,"CreatedAt":"2019-05-25T18:30:06","Actor":"dotnet-bot","Number":"35972","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35972","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35972)"},{"Id":"448457995","IsPullRequest":true,"CreatedAt":"2019-05-25T13:30:11","Actor":"dotnet-bot","Number":"35968","RawContent":null,"Title":"Merge release/dev16.2-preview1 to release/dev16.2-preview2","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1 into release/dev16.2-preview2.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-to-release/dev16.2-preview2\ngit reset --hard upstream/release/dev16.2-preview2\ngit merge upstream/release/dev16.2-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-to-release/dev16.2-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35968","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1 to release/dev16.2-preview2\" (#35968)"},{"Id":"448458019","IsPullRequest":true,"CreatedAt":"2019-05-25T12:30:07","Actor":"dotnet-bot","Number":"35970","RawContent":null,"Title":"Merge release/dev16.2-preview2-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview2-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.2-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35970","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview2-vs-deps to master-vs-deps\" (#35970)"},{"Id":"448458039","IsPullRequest":true,"CreatedAt":"2019-05-25T12:00:46","Actor":"dotnet-bot","Number":"35971","RawContent":null,"Title":"Merge release/dev16.2-preview1 to release/dev16.2-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1 into release/dev16.2-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-to-release/dev16.2-preview1-vs-deps\ngit reset --hard upstream/release/dev16.2-preview1-vs-deps\ngit merge upstream/release/dev16.2-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-to-release/dev16.2-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35971","RelatedDescription":"Open PR \"Merge release/dev16.2-preview1 to release/dev16.2-preview1-vs-deps\" (#35971)"},{"Id":"448458013","IsPullRequest":true,"CreatedAt":"2019-05-25T12:00:29","Actor":"dotnet-bot","Number":"35969","RawContent":null,"Title":"Merge release/dev16.2-preview1-vs-deps to release/dev16.2-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1-vs-deps into release/dev16.2-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-vs-deps-to-release/dev16.2-preview2-vs-deps\ngit reset --hard upstream/release/dev16.2-preview2-vs-deps\ngit merge upstream/release/dev16.2-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-vs-deps-to-release/dev16.2-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35969","RelatedDescription":"Open PR \"Merge release/dev16.2-preview1-vs-deps to release/dev16.2-preview2-vs-deps\" (#35969)"},{"Id":"448389287","IsPullRequest":true,"CreatedAt":"2019-05-25T03:24:56","Actor":"dotnet-bot","Number":"35961","RawContent":null,"Title":"Merge release/dev16.2-preview1 to release/dev16.2-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1 into release/dev16.2-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-to-release/dev16.2-preview1-vs-deps\ngit reset --hard upstream/release/dev16.2-preview1-vs-deps\ngit merge upstream/release/dev16.2-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-to-release/dev16.2-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35961","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1 to release/dev16.2-preview1-vs-deps\" (#35961)"},{"Id":"448399894","IsPullRequest":true,"CreatedAt":"2019-05-25T02:59:41","Actor":"RikkiGibson","Number":"35967","RawContent":null,"Title":"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35967","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps\" (#35967)"},{"Id":"448398229","IsPullRequest":true,"CreatedAt":"2019-05-25T02:42:58","Actor":"RikkiGibson","Number":"35966","RawContent":null,"Title":"Update Versions.props","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35966","RelatedDescription":"Closed or merged PR \"Update Versions.props\" (#35966)"},{"Id":"448397478","IsPullRequest":true,"CreatedAt":"2019-05-25T02:34:07","Actor":"RikkiGibson","Number":"35964","RawContent":null,"Title":"Update PublishData.json","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35964","RelatedDescription":"Closed or merged PR \"Update PublishData.json\" (#35964)"},{"Id":"448389196","IsPullRequest":true,"CreatedAt":"2019-05-25T01:30:12","Actor":"dotnet-bot","Number":"35959","RawContent":null,"Title":"Merge release/dev16.2-preview1 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.2-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35959","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1 to master\" (#35959)"},{"Id":"448389237","IsPullRequest":true,"CreatedAt":"2019-05-25T01:30:08","Actor":"dotnet-bot","Number":"35960","RawContent":null,"Title":"Merge release/dev16.2-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.2-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35960","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1-vs-deps to master-vs-deps\" (#35960)"},{"Id":"448398202","IsPullRequest":false,"CreatedAt":"2019-05-25T01:28:46","Actor":"tmat","Number":"35965","RawContent":null,"Title":"Enable debugging/EnC integration tests","State":"open","Body":"This PR disables integration tests: https://github.com/dotnet/roslyn/pull/34027, because it requires the lab/16.2stg build with VS debugger insertion which won't be available on the CI machine.\r\n\r\nEnable the tests again once the CI machine is upgraded.","Url":"https://github.com/dotnet/roslyn/issues/35965","RelatedDescription":"Open issue \"Enable debugging/EnC integration tests\" (#35965)"},{"Id":"448394893","IsPullRequest":false,"CreatedAt":"2019-05-25T00:49:44","Actor":"KirillOsenkov","Number":"35963","RawContent":null,"Title":"Workspace should clear open documents that are removed during OnProjectReloaded","State":"open","Body":"When `Workspace.OnProjectReloaded()` is called with a smaller set of documents (effectively removing documents from a project), and if any of those documents were open, the workspace doesn't properly stop tracking those open documents unless the host explicitly calls `OnDocumentRemoved()` beforehand.\r\n\r\nThe logic in `Workspace.OnProjectRemoved` calls `ClearProjectData()`, which takes care of this. However OnProjectReloaded doesn't have this. It only has the logic to transplant open documents to the new snapshot.\r\n\r\nI think an else block is missing here:\r\nhttps://github.com/dotnet/roslyn/blob/676d4721390ed7419eea3c0f3fdb4a8d6725e7cc/src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs#L736\r\n\r\nAnd inside the else block it should probably call `ClearOpenDocument(docId)`","Url":"https://github.com/dotnet/roslyn/issues/35963","RelatedDescription":"Open issue \"Workspace should clear open documents that are removed during OnProjectReloaded\" (#35963)"},{"Id":"448394150","IsPullRequest":true,"CreatedAt":"2019-05-25T00:42:10","Actor":"ivanbasov","Number":"35962","RawContent":null,"Title":" crash on ClassifyUpdate for EventFields","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/32889","Url":"https://github.com/dotnet/roslyn/pull/35962","RelatedDescription":"Open PR \" crash on ClassifyUpdate for EventFields\" (#35962)"},{"Id":"448379412","IsPullRequest":false,"CreatedAt":"2019-05-24T22:56:41","Actor":"gafter","Number":"35958","RawContent":null,"Title":"Compiler crash when tuple equality used with a conversion-from-expression","State":"open","Body":"The [following code causes the C# compiler to crash](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDZICYgNQA+AAgAwAERAjANwCwAUA0QMwUBMZAwmQN4NkCKrKgDYKAFjIBZCGgB2ACgCU/QX3qDNFShwhkAvGQXKDAPl4BfJXQ1aBVAJzGISaUoOGFU1xCXXVAhYBZMGiEtImPEH00UA===):\r\n\r\n``` c#\r\nusing System;\r\n\r\npublic class C {\r\n    public static void Main()\r\n    {\r\n        Action a = (() => {});\r\n        Console.WriteLine((a, M) == (M, a));\r\n    }\r\n    \r\n    static void M() {}\r\n}\r\n```\r\n\r\nthe failure is\r\n\r\n``` none\r\nSystem.InvalidCastException: Unable to cast object of type 'Microsoft.CodeAnalysis.CSharp.BoundLocal' to type 'Microsoft.CodeAnalysis.CSharp.BoundMethodGroup'.\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(BoundConversion oldNode, SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, TypeSymbol rewrittenType, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteTupleSingleOperator(Single single, BoundExpression left, BoundExpression right, TypeSymbol boolType, BinaryOperatorKind operatorKind)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteTupleOperator(TupleBinaryOperatorInfo operator, BoundExpression left, BoundExpression right, TypeSymbol boolType, ArrayBuilder`1 temps, BinaryOperatorKind operatorKind)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteNonNullableNestedTupleOperators(Multiple operators, BoundExpression left, BoundExpression right, TypeSymbol type, ArrayBuilder`1 temps, ArrayBuilder`1 effects, BinaryOperatorKind operatorKind)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteTupleNestedOperators(Multiple operators, BoundExpression left, BoundExpression right, TypeSymbol boolType, ArrayBuilder`1 temps, BinaryOperatorKind operatorKind)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitTupleBinaryOperator(BoundTupleBinaryOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTupleBinaryOperator.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitCall(BoundCall node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundCall.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitUnusedExpression(BoundExpression expression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteExpressionStatement(BoundExpressionStatement node, Boolean suppressInstrumentation)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionStatement(BoundExpressionStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitPossibleUsingDeclaration(BoundStatement node, ImmutableArray`1 statements, Int32 statementIndex, Boolean& replacedLocalDeclarations)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatementSubList(ArrayBuilder`1 builder, ImmutableArray`1 statements, Int32 startIndex)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n```\r\n\r\nI believe the root cause is that the design of the tuple equality operator requires deferring the tuple element conversions.  But conversions that are *conversion-from-expression*s should not be deferred.\r\n\r\n/cc @jcouv \r\n","Url":"https://github.com/dotnet/roslyn/issues/35958","RelatedDescription":"Open issue \"Compiler crash when tuple equality used with a conversion-from-expression\" (#35958)"},{"Id":"448379289","IsPullRequest":true,"CreatedAt":"2019-05-24T22:56:01","Actor":"AlekseyTs","Number":"35957","RawContent":null,"Title":"Add Default Interface Implementation tests for VB","State":"open","Body":"Related to #35820, #35821, #35823, #35824, #35827, #35834, #35852, #35885, #35911, #35948.","Url":"https://github.com/dotnet/roslyn/pull/35957","RelatedDescription":"Open PR \"Add Default Interface Implementation tests for VB\" (#35957)"},{"Id":"448378616","IsPullRequest":false,"CreatedAt":"2019-05-24T22:52:21","Actor":"gafter","Number":"35956","RawContent":null,"Title":"Compiler rejects lambda expression as operand of ==","State":"open","Body":"Given\r\n\r\n``` c#\r\nSystem.Action a = null;\r\nvoid M() {}\r\n```\r\n\r\nthe C# compiler permits the expression `a == M` but not the expression `a == (() => {})`.  If every delegate type defines an `operator==`, then both should compile cleanly because there is a conversion-from-expression from the right-hand-side to the type of the left-hand-side.  If the only available operator is `operator ==(System.Delegate x, System.Delegate y)`, then both should fail to compile because there is no conversion from the right-hand-side expression to `System.Delegate`.\r\n\r\nEither they should both compile cleanly or neither should.\r\n\r\nIf we fix this by allowing the lambda, we should probably add a warning that it is unlikely to reliably succeed (we don't combine and cache equivalent lambdas).\r\n","Url":"https://github.com/dotnet/roslyn/issues/35956","RelatedDescription":"Open issue \"Compiler rejects lambda expression as operand of ==\" (#35956)"},{"Id":"448378228","IsPullRequest":true,"CreatedAt":"2019-05-24T22:50:10","Actor":"cston","Number":"35955","RawContent":null,"Title":"Initial support for [AllowNull], [DisallowNull], [MaybeNull], [NotNull] in NullableWalker","State":"open","Body":"Some support for simple pre- and post-condition nullable annotations on by-value parameters and return types.","Url":"https://github.com/dotnet/roslyn/pull/35955","RelatedDescription":"Open PR \"Initial support for [AllowNull], [DisallowNull], [MaybeNull], [NotNull] in NullableWalker\" (#35955)"},{"Id":"448372184","IsPullRequest":false,"CreatedAt":"2019-05-24T22:19:45","Actor":"vsfeedback","Number":"35954","RawContent":null,"Title":"double click doesn't select whole word","State":"open","Body":"VSF_TYPE_MARKDOWNI have  &quot;வாழைப்பழம&quot; in the code editor. I expect the whole word to be selected if I double click on any letter.\nInstead, depending on the place where I click, it either:\n- makes caret go to the beginning of the word\n- selects only latter part &quot;ப்பழம&quot;\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/578580/double-click-doesnt-select-whole-word.html\nVSTS ticketId: 897045_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/23/2019, 01:53 AM (37 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35954","RelatedDescription":"Open issue \"double click doesn't select whole word\" (#35954)"},{"Id":"448369546","IsPullRequest":true,"CreatedAt":"2019-05-24T22:08:02","Actor":"RikkiGibson","Number":"35953","RawContent":null,"Title":"Learn from comparisons to non-constant, non-null values","State":"open","Body":"Resolves #34942","Url":"https://github.com/dotnet/roslyn/pull/35953","RelatedDescription":"Open PR \"Learn from comparisons to non-constant, non-null values\" (#35953)"},{"Id":"448346213","IsPullRequest":false,"CreatedAt":"2019-05-24T20:42:36","Actor":"JoeRobich","Number":"35952","RawContent":null,"Title":"BasicEditAndContinue.LocalsWindowUpdatesAfterLocalGetsItsTypeUpdatedDuringEnC Fails","State":"open","Body":"[Test Logs](https://dev.azure.com/dnceng/public/_build/results?buildId=200739&view=ms.vss-test-web.build-test-results-tab&runId=4873668&resultId=100245&paneView=debug) - Integration Debug Async Attempt #1\r\n\r\n```\r\n    Roslyn.VisualStudio.IntegrationTests.VisualBasic.BasicEditAndContinue.LocalsWindowUpdatesAfterLocalGetsItsTypeUpdatedDuringEnC [STARTING]\r\n      System.Runtime.InteropServices.COMException : Unable to execute method at this time.\r\n      Stack Trace:\r\n        \r\n        Server stack trace: \r\n           at EnvDTE.Debugger.SetNextStatement()\r\n           at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.Debugger_InProc.SetNextStatement()\r\n           at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]& outArgs)\r\n           at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg)\r\n        \r\n        Exception rethrown at [0]: \r\n           at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\r\n           at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\r\n           at Microsoft.VisualStudio.IntegrationTest.Utilities.InProcess.Debugger_InProc.SetNextStatement()\r\n        /_/src/VisualStudio/IntegrationTest/TestUtilities/OutOfProcess/Debugger_OutOfProc.cs(40,0): at Microsoft.VisualStudio.IntegrationTest.Utilities.OutOfProcess.Debugger_OutOfProc.SetNextStatement()\r\n        /_/src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicEditAndContinue.cs(270,0): at Roslyn.VisualStudio.IntegrationTests.VisualBasic.BasicEditAndContinue.LocalsWindowUpdatesAfterLocalGetsItsTypeUpdatedDuringEnC()\r\n```\r\n![19 18 29-BasicEditAndContinue LocalsWindowUpdatesAfterLocalGetsItsTypeUpdatedDuringEnC-COMException](https://user-images.githubusercontent.com/611219/58355615-d68f8680-7e29-11e9-9f5b-8491e1a2599d.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/35952","RelatedDescription":"Open issue \"BasicEditAndContinue.LocalsWindowUpdatesAfterLocalGetsItsTypeUpdatedDuringEnC Fails\" (#35952)"},{"Id":"448336693","IsPullRequest":true,"CreatedAt":"2019-05-24T20:13:36","Actor":"dpoeschl","Number":"35951","RawContent":null,"Title":"Add (internal-only) CompletionItem.AutomationText and pass it through to the editor","State":"open","Body":"Related to https://devdiv.visualstudio.com/DevDiv/_workitems/edit/603447 and https://devdiv.visualstudio.com/DevDiv/_workitems/edit/848126, but still requires work from consumers, particularly IntelliCode, to adopt.","Url":"https://github.com/dotnet/roslyn/pull/35951","RelatedDescription":"Open PR \"Add (internal-only) CompletionItem.AutomationText and pass it through to the editor\" (#35951)"},{"Id":"448330519","IsPullRequest":false,"CreatedAt":"2019-05-24T19:53:34","Actor":"GeorgeAlexandria","Number":"35950","RawContent":null,"Title":"Incorrect VB try/catch snippet applying in Visual Studio","State":"open","Body":"Hi,\r\n\r\nI'm used **Visual Studio 16.0.2**\r\n\r\nVB snippet `Try` doesn't make sure that the custom `Exception` type doesn't exist, so it generates a non compile code for the examples below:\r\n```vb\r\nPublic Class [Exception]\r\n\r\n  Sub Create()\r\n    Try\r\n\r\n    Catch ex As Exception\r\n\r\n    End Try\r\n\r\n  End Sub\r\nEnd Class\r\n```\r\n```vb\r\nNamespace Sample\r\n\r\n  Public Class [Exception]\r\n\r\n    Sub Create()\r\n      Try\r\n\r\n      Catch ex As Exception\r\n\r\n      End Try\r\n\r\n    End Sub\r\n  End Class\r\n\r\nEnd Namespace\r\n```\r\n```vb\r\nNamespace System\r\n\r\n  Public Class [Exception]\r\n\r\n    Sub Create()\r\n      Try\r\n\r\n      Catch ex As Exception\r\n\r\n      End Try\r\n\r\n    End Sub\r\n  End Class\r\n\r\nEnd Namespace\r\n```\r\n`System` namespace is imported at global.\r\n\r\nExpected that the snippet will append `FQN` and `Global` when it's needed.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35950","RelatedDescription":"Open issue \"Incorrect VB try/catch snippet applying in Visual Studio\" (#35950)"},{"Id":"448322030","IsPullRequest":false,"CreatedAt":"2019-05-24T19:27:31","Actor":"TessenR","Number":"35949","RawContent":null,"Title":"Nullable reference types cause exponential compile / analysis time even when disabled","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.2.0 Preview 1.0\r\nVisualStudio.16.Preview/16.2.0-pre.1.0+28917.182\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\n**Steps to Reproduce**:\r\n\r\nCreate a new solution.\r\nPaste the following code into it:\r\n\r\n```\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nclass C\r\n{\r\n  static void Main(string[] args)\r\n  {\r\n    \r\n  }\r\n\r\n  private C f;\r\n\r\n  void M(C c)\r\n  {\r\nc.f = c;\r\nc.NotNull(\r\n  x => x.f.NotNull(\r\n    y => y.f.NotNull(\r\n      z => z.f.NotNull(\r\n        q => q.f.NotNull(\r\n          w => w.f.NotNull(\r\n            e => e.f.NotNull(\r\n              r => r.f.NotNull(\r\n          _ =>\r\n          {\r\n\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \"\".NotNull(s => s);\r\n            \r\n            return \"\";\r\n          }))))))));\r\n\r\n  }\r\n\r\n}\r\n\r\nstatic class Ext\r\n{\r\n  public static extern V NotNull<T, V>([EnsuresNotNull] this T t, Func<T, V> f);\r\n}\r\n\r\nnamespace System.Runtime.CompilerServices\r\n{\r\n  public class EnsuresNotNullAttribute : System.Attribute { }\r\n}\r\n```\r\n\r\nTry to compile it with\r\n`<LangVersion>8.0</LangVersion>`\r\nand\r\n`<LangVersion>7.3</LangVersion>`\r\n\r\n**Expected Behavior**:\r\nCompile time does not change much if you change the project's lang version.\r\n\r\n**Actual Behavior**:\r\nThe project compiles in ~2 seconds on my machine if I use C# 7.3\r\n```\r\n> msbuild ConsoleApp4.sln -property:Nullable=disable\r\n\r\n\r\n  Program.cs(48,26): warning CS0626: Method, operator, or accessor 'Ext.NotNull<T, V>(T, Func<T, V>)' is marked externa\r\nl and has no attributes on it. Consider adding a DllImport attribute to specify the external implementation.\r\n\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.44\r\n```\r\n\r\nIt takes ~15 minutes to compile with C# 8.0 on the same machine even though nullable reference types are disabled and not mentioned anywhere in the project.\r\n```\r\n> msbuild ConsoleApp4.sln -property:Nullable=disable\r\n\r\n  Program.cs(48,26): warning CS0626: Method, operator, or accessor 'Ext.NotNull<T, V>(T, Func<T, V>)' is marked externa\r\nl and has no attributes on it. Consider adding a DllImport attribute to specify the external implementation.\r\n\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:14:44.28\r\n```\r\n\r\n**Notes**\r\nIt's also quite hard to do literally anything with this file since Roslyn keeps analyzing it restarting the analysis at every change you make causing constant high CPU usage.\r\n\r\nYou can change the compilation time by a factor of 2 by adding / removing top level `.NotNull` calls.\r\nRoslyn analyses arguments of methods with flow annotations such as `[EnsuresNotNull]` at least twice in order to first report errors / warnings and then infer variables' states after the call. Consequently it analyses any argument expression in annotated call chains at least 2^N times where N is the number of annotated calls. Compile/analysis time can be dragged even lower by adding more code to analyze or cycles that will cause multiple data flow passes over the whole method.\r\n\r\nI'm also not sure why Roslyn runs this analysis at all despite nullable reference types being explicitly disabled for this project. ","Url":"https://github.com/dotnet/roslyn/issues/35949","RelatedDescription":"Open issue \"Nullable reference types cause exponential compile / analysis time even when disabled\" (#35949)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"448520212","IsPullRequest":true,"CreatedAt":"2019-05-26T02:15:45","Actor":"Dotnet-GitSync-Bot","Number":"7450","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7450","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7450)"},{"Id":"448356067","IsPullRequest":true,"CreatedAt":"2019-05-25T18:34:42","Actor":"Dotnet-GitSync-Bot","Number":"7449","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7449","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7449)"},{"Id":"448322147","IsPullRequest":true,"CreatedAt":"2019-05-25T00:10:07","Actor":"nattress","Number":"7448","RawContent":null,"Title":"Restore CoreCLRRuntime on Linux","State":"closed","Body":"When running tests, invoke the test build to restore the runtime / corefx / corerun to a well known folder needed to run Ready-to-run tests against.\r\n\r\nThe actual running of R2R tests is not enabled yet since we need to fix an issue with PE section virtual address offsets","Url":"https://github.com/dotnet/corert/pull/7448","RelatedDescription":"Closed or merged PR \"Restore CoreCLRRuntime on Linux\" (#7448)"},{"Id":"448192547","IsPullRequest":true,"CreatedAt":"2019-05-24T17:01:11","Actor":"Dotnet-GitSync-Bot","Number":"7447","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro-bot","Url":"https://github.com/dotnet/corert/pull/7447","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7447)"},{"Id":"447805291","IsPullRequest":true,"CreatedAt":"2019-05-24T16:07:28","Actor":"trylek","Number":"7443","RawContent":null,"Title":"CPAOT large version bubble bugfixes","State":"closed","Body":"I have finally identified the reason for various recent inconsistencies\r\nwe were recently hitting in large version bubble testing. As the\r\nR2R major version number was recently bumped to 3 in CoreCLR, it\r\ngot out of sync with the value 2 we have in CoreClrRuntime used\r\nfor CPAOT testing in the CoreRT repo. For this reason all recent\r\ntesting performed against the CoreCLR version of Core_Root was\r\nsilently switching over to JIT; this included my recent local\r\nlarge version bubble testing - while R2RDump was dumping the R2R\r\nfile content correctly and let me fix most issues, some problems\r\nnaturally remained and only popped up at runtime:\r\n\r\n1) NewArrayFixupSignature wasn't properly switching over to the\r\ninner signature context when emitting the array type signature.\r\n\r\n2) SignatureBuilder was emitting incorrect signature for fields\r\non instantiated types (this only popped up after inlining parts\r\nof CoreLib into the unit test).\r\n\r\n3) In SignatureContext, we should call the token resolution logic\r\nwhen determining field tokens as for fields encoded using refs\r\nthe reference module is the module containing the ref, not\r\nnecessarily the reference module for its owning type.\r\n\r\n4) In CorInfoImpl.ReadyToRun, the logic for encoding string literals\r\nwas incorrect in large version bubble mode in the presence of\r\ninlining - we need to use the context module passed along with the\r\nstring token, not the input module.\r\n\r\n5) ManifestMetadataTableNode was incorrectly encoding public key\r\ntokens for the AssemblyRefs.\r\n\r\n6) I previously overlooked the fact that the BadImageFormatException\r\nthrown for native assemblies is a variation of the type local\r\nto TypeSystemException.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. With this change the CoreCLR JIT test suite has about 93% pass\r\nrate. I suspect I understand some of the remaining failures but\r\nI wanted to send this our early as I'm going to be mostly OOF\r\nfor the rest of this week.\r\n","Url":"https://github.com/dotnet/corert/pull/7443","RelatedDescription":"Closed or merged PR \"CPAOT large version bubble bugfixes\" (#7443)"},{"Id":"447312328","IsPullRequest":true,"CreatedAt":"2019-05-24T15:22:47","Actor":"tannergooding","Number":"7441","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03","State":"closed","Body":"CC. @jaredpar, @agocke, @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2856 and https://github.com/dotnet/buildtools/pull/2256","Url":"https://github.com/dotnet/corert/pull/7441","RelatedDescription":"Closed or merged PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03\" (#7441)"},{"Id":"447966173","IsPullRequest":true,"CreatedAt":"2019-05-24T14:08:31","Actor":"Dotnet-GitSync-Bot","Number":"7446","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @safern","Url":"https://github.com/dotnet/corert/pull/7446","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7446)"},{"Id":"447913967","IsPullRequest":true,"CreatedAt":"2019-05-24T03:44:16","Actor":"Dotnet-GitSync-Bot","Number":"7445","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @davidwrighton","Url":"https://github.com/dotnet/corert/pull/7445","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7445)"},{"Id":"447842862","IsPullRequest":true,"CreatedAt":"2019-05-24T01:40:30","Actor":"nattress","Number":"7444","RawContent":null,"Title":"Update CoreCLR and framework for R2R tests","State":"closed","Body":"In Preview5, the R2R format version was bumped to 3.0. Roll forward to 3.0 and test against a more recent runtime that supports 3.0 ready-to-run image format.","Url":"https://github.com/dotnet/corert/pull/7444","RelatedDescription":"Closed or merged PR \"Update CoreCLR and framework for R2R tests\" (#7444)"},{"Id":"447361022","IsPullRequest":true,"CreatedAt":"2019-05-23T18:31:54","Actor":"Dotnet-GitSync-Bot","Number":"7442","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @marek-safar","Url":"https://github.com/dotnet/corert/pull/7442","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7442)"},{"Id":"446206809","IsPullRequest":true,"CreatedAt":"2019-05-23T01:25:12","Actor":"trylek","Number":"7437","RawContent":null,"Title":"Initial script changes to enable CPAOT on Linux","State":"closed","Body":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed or merged PR \"Initial script changes to enable CPAOT on Linux\" (#7437)"},{"Id":"446926910","IsPullRequest":true,"CreatedAt":"2019-05-22T15:34:12","Actor":"Dotnet-GitSync-Bot","Number":"7440","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @mikernet","Url":"https://github.com/dotnet/corert/pull/7440","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7440)"},{"Id":"446854506","IsPullRequest":true,"CreatedAt":"2019-05-22T04:25:11","Actor":"Dotnet-GitSync-Bot","Number":"7439","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7439","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7439)"},{"Id":"445642704","IsPullRequest":true,"CreatedAt":"2019-05-21T22:34:36","Actor":"Suchiman","Number":"7434","RawContent":null,"Title":"Port GC changes from coreclr - 9","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7416\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab):**\r\n- https://github.com/dotnet/coreclr/commit/7eb6865565fbd3c45ca58e398a72750fa43c432e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/59f2a57563b7488779a9b93220a9dfe5c6a45700 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bdf219c364e15cae908f9c87446ff4ae26a9fe1e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/55ce686a6092cf38458d2dce6da18aef8eab7c43 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bed0a5e263324d3e035a2140c24cc70f1e143d93 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/fa01b864246bb588e5088be36dbfe3af833b266f (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8acf6c9f7e33b1bfe77205cd2e61f2c60e8c00ce (manual port)\r\n- https://github.com/dotnet/coreclr/commit/1eea080a7b3a13110975b92034a22e4fc473df46 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882 (gc only port)\r\n","Url":"https://github.com/dotnet/corert/pull/7434","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 9\" (#7434)"},{"Id":"446251764","IsPullRequest":true,"CreatedAt":"2019-05-21T22:33:34","Actor":"Dotnet-GitSync-Bot","Number":"7438","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AArnott","Url":"https://github.com/dotnet/corert/pull/7438","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7438)"},{"Id":"445072772","IsPullRequest":true,"CreatedAt":"2019-05-20T07:44:09","Actor":"trylek","Number":"7428","RawContent":null,"Title":"CPAOT support for large version bubble, take #2","State":"closed","Body":"As I haven't found out how to reopen my original PR after reverting it, I have prepared a new one. In the first commit I have pushed the original change rebased to the preparatory change moving CanInline\r\nto CompilationModuleGroup. In the second commit I added logic for clean separation of input assembly set from the version bubble assembly set.\r\n\r\nEarlier in CPAOT development, we used to use CompilationModuleGroup.ContainsType / ContainsMethodBody for checking whether a given typesystem element belongs to either of these sets. To facilitate the separation I have added two new methods on CompilationModuleGroup, VersionsWithType and VersionsWithMethodBody. I audited all calls to ContainsMethodBody & ContainsType in the CPAOT codebase and I modified those querying the version bubble to call VersionsWithType/MethodBody instead.\r\n\r\nThanks\r\n\r\nTomas\r\n","Url":"https://github.com/dotnet/corert/pull/7428","RelatedDescription":"Closed or merged PR \"CPAOT support for large version bubble, take #2\" (#7428)"},{"Id":"445756425","IsPullRequest":true,"CreatedAt":"2019-05-18T21:35:30","Actor":"trylek","Number":"7436","RawContent":null,"Title":"SuperIlc fixes for building the entire Pri#1 suite","State":"open","Body":"After adding support for the issues.targets file I became\r\nable to run the entire Pri# 1 test suite using SuperIlc.\r\nThis change fixes issues uncovered by this more extensive\r\ntesting.\r\n\r\n1) We need to slightly special-case the Core_Root folder\r\nas it technically lies under the CoreCLR\\bin\\tests\\(cfg)\r\nfolder; when building this entire folder, SuperIlc used to\r\npick it up as one of the folders to compile and was\r\nsubsequently racing between the build of this folder and\r\nof the tests that refer to it in CPAOT framework mode.\r\n\r\n2) BuildFolder construction was collecting test references\r\ntoo early i.e. before the framework was built. I came to\r\nthe conclusion that this is a general problem stemming from\r\nthe fact that ProcessInfo was an arbitrary mixture of the\r\nprocess parameters and the state machine used during the\r\nactual build. I have cleaned this up by separating the\r\nparameter file into a new class ProcessParameters; this let\r\nme add logic for constructing the actual paramterers later.\r\n\r\n3) I have added new options to specify explicit compilation\r\nand execution timeouts to add at least minimum support for\r\nlong-building and long-running tests.\r\n\r\n4) I have parallelized folder deletion and subtree lookup\r\nto improve their performance.\r\n\r\n5) I have added caching to the check for managed assemblies.\r\nPreviously, in the Pri# 1 tests we used to open framework\r\nassemblies about 3 million times just for the purpose of\r\nthis lookup.\r\n\r\n6) I have reduced the batch size for running ETW processes\r\nfrom 100 to 10 as the larger number of events collected\r\nwithin a single session was apparently slowing down test\r\nexecution.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7436","RelatedDescription":"Open PR \"SuperIlc fixes for building the entire Pri#1 suite\" (#7436)"},{"Id":"445661755","IsPullRequest":true,"CreatedAt":"2019-05-18T05:14:47","Actor":"Dotnet-GitSync-Bot","Number":"7435","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7435","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7435)"},{"Id":"445624997","IsPullRequest":true,"CreatedAt":"2019-05-18T00:48:06","Actor":"Dotnet-GitSync-Bot","Number":"7433","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7433","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7433)"},{"Id":"445569920","IsPullRequest":true,"CreatedAt":"2019-05-17T22:23:58","Actor":"jkotas","Number":"7432","RawContent":null,"Title":"Mark CustomAttributeNamedArgument and CustomAttributeTypedArgument as readonly","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7432","RelatedDescription":"Closed or merged PR \"Mark CustomAttributeNamedArgument and CustomAttributeTypedArgument as readonly\" (#7432)"},{"Id":"445509182","IsPullRequest":true,"CreatedAt":"2019-05-17T18:08:27","Actor":"Dotnet-GitSync-Bot","Number":"7431","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7431","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7431)"},{"Id":"445259095","IsPullRequest":true,"CreatedAt":"2019-05-17T15:51:42","Actor":"Dotnet-GitSync-Bot","Number":"7430","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @Anipik","Url":"https://github.com/dotnet/corert/pull/7430","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7430)"},{"Id":"445085554","IsPullRequest":true,"CreatedAt":"2019-05-17T04:25:54","Actor":"Dotnet-GitSync-Bot","Number":"7429","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7429","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7429)"},{"Id":"444773127","IsPullRequest":true,"CreatedAt":"2019-05-16T13:56:26","Actor":"Dotnet-GitSync-Bot","Number":"7427","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7427","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7427)"},{"Id":"444513464","IsPullRequest":true,"CreatedAt":"2019-05-15T22:10:39","Actor":"jkotas","Number":"7426","RawContent":null,"Title":"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets","State":"closed","Body":"It is used by DumpNativeResources task in Microsoft.NETCore.Native.targets\r\n\r\nFixes #7425","Url":"https://github.com/dotnet/corert/pull/7426","RelatedDescription":"Closed or merged PR \"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets\" (#7426)"},{"Id":"444383256","IsPullRequest":false,"CreatedAt":"2019-05-15T22:10:39","Actor":"ctaggart","Number":"7425","RawContent":null,"Title":"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"","State":"closed","Body":"When I set `/p:NativeCompilationDuringPublish=false ` as described in [the documentation](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#disabling-native-compilation) and [recommended](https://github.com/dotnet/corert/issues/258#issuecomment-492331206), I get this error:\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r ubuntu.16.04-x64 -c Release /p:NativeCompilationDuringPublish=false\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-02/build/Microsoft.NETCore.Native.targets(301,45): error MSB4022: The result \"\" of evaluating the value \"$(IlcBuildTasksPath)\" of the \"AssemblyFile\" attribute in element <UsingTask> is not valid. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nAs a work-a-round I'm going to try a variation of [another way to disable the ILCompiler](https://github.com/dotnet/corert/issues/258#issuecomment-492331624).","Url":"https://github.com/dotnet/corert/issues/7425","RelatedDescription":"Closed issue \"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"\" (#7425)"},{"Id":"444137558","IsPullRequest":true,"CreatedAt":"2019-05-15T15:45:52","Actor":"jkotas","Number":"7424","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7424)"},{"Id":"444029647","IsPullRequest":true,"CreatedAt":"2019-05-14T21:13:10","Actor":"Dotnet-GitSync-Bot","Number":"7423","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @cshung @sywhang @tannergooding","Url":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7423)"},{"Id":"443994361","IsPullRequest":false,"CreatedAt":"2019-05-14T16:25:03","Actor":"ctaggart","Number":"7422","RawContent":null,"Title":"RhpETWLogLiveCom error on Debian 9 build","State":"closed","Body":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Closed issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422)"},{"Id":"443767461","IsPullRequest":false,"CreatedAt":"2019-05-14T08:04:14","Actor":"mariopasquali","Number":"7421","RawContent":null,"Title":"Compiling ARM on x64","State":"open","Body":"Hi all,\r\n\r\nIt is a few weeks I am trying to set up an environment for compiling a Linux-ARM executable on a x64 machine, without much luck for now.  \r\n\r\nI have set up multiple machines including Debian 9, Ubuntu 16, Ubuntu 18, all 64-bits, even tried with 32-bits versions.  I am currently working on a Ubuntu 16 x64.  Probably an obvious question, but could someone confirm this is supported for compiling an ARM32 output?\r\n\r\nThere are a few possible typos in the following document that are possibly confusing:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/cross-building.md\r\n\r\n- `\"In addition, to cross compile CoreCLR\"` should it be CoreRT?\r\n- `\"Cross compiling CoreCLR\"` should it be CoreRT?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/\"` should it be corert?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/arm ./build.sh\"` should it be corert?\r\n\r\nAnother aspect that I didn't get right is the section \"Using CoreRT for cross compiling under arm on x86 host\".  Is this the section applying to my case where I whish building an output for ARM32 on x86?  If yes, then when would the previous section \"Cross compiling CoreCLR\" apply?\r\n\r\nA few more remarks on the section \"Using CoreRT for cross compiling under arm on x86 host\":\r\n- The steps for \"Build CoreFX\" seems outdated.  Should probably by updated with https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md.  \r\n- `\"./build.sh x86 debug verbose cross crosstarget skiptests\"` There is no parameter crosstarget in build.sh as far as I can see.  Is this outdated?  I am running into various issues when trying to run this step without \"crosstarget\" parameter, like file not found of ConstrainedCallSupportHelpers.S, `\"GetUnwindProcInfo is not supported on this arch yet.\"`, etc.\r\n- Regarding step 4, it would be helpful to give examples of the variables.  What is supposed to be ${WORKING_DIR}?  The output of the application that should be compiled?\r\n\r\nThank you,\r\nMario ","Url":"https://github.com/dotnet/corert/issues/7421","RelatedDescription":"Open issue \"Compiling ARM on x64\" (#7421)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"448511917","IsPullRequest":false,"CreatedAt":"2019-05-25T23:33:24","Actor":"run1206","Number":"3267","RawContent":null,"Title":"Verbiage of success message on 32bit .NET Core 2.2 SDK has wrong folder location","State":"open","Body":"After the 32-bit .NET Core 2.2 SDK finishes installing, the success message reads:\r\n\"The following were installed at C:\\Program Files\\dotnet...\"\r\nThe SDK files are correctly saved in the 32-bit location, but the folder location in the message is for the 64-bit SDK location.\r\n\r\nPlease see attached image for reference.\r\n![20190525_192301](https://user-images.githubusercontent.com/16143658/58375537-50576b00-7f23-11e9-8ea4-762ea46fa727.jpg)\r\n\r\nSuccess message should point to \"C:\\Program Files (x86)\\dotnet\\\" for the 32bit installer.","Url":"https://github.com/dotnet/sdk/issues/3267","RelatedDescription":"Open issue \"Verbiage of success message on 32bit .NET Core 2.2 SDK has wrong folder location\" (#3267)"},{"Id":"448467678","IsPullRequest":false,"CreatedAt":"2019-05-25T14:01:14","Actor":"DoCode","Number":"3266","RawContent":null,"Title":"dotnet msbuild -t:restore or -t:publish : NU1201: Not compatible with netcoreapp2.2","State":"open","Body":"### Steps to reproduce\r\n\r\nI try to restore and publish a cross-targeting and cross-platform project with netcoreapp/netstandard/net472 and linux-x64/win-x64 mix-match with:\r\n```ps1\r\n# Restoring:\r\ndotnet msbuild -t:restore -p:targetframework=net472 -p:runtimeidentifier=win-x64 Api.csproj\r\n# OR\r\ndotnet msbuild -t:restore -p:targetframework=netcoreapp2.2 -p:runtimeidentifier=linux-x64 Api.csproj\r\n\r\n# AND publishing:\r\ndotnet msbuild -t:publish -p:targetframework=net472 -p:runtimeidentifier=win-x64 Api.csproj\r\n# OR\r\ndotnet msbuild -t:publish -p:targetframework=netcoreapp2.2 -p:runtimeidentifier=linux-x64 Api.csproj\r\n```\r\n\r\n#### The projects\r\n**Api.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp2.2;net472</TargetFrameworks>\r\n    <RuntimeIdentifiers>linux-x64;win-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n    <ProjectReference Include=\"Store.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Core.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n**Store.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Sdk.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;net472</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Cli.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Sdk.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe projects should be restored for all TFM's and RID's.\r\n\r\n### Actual behavior\r\n\r\nThe following error is thrown:\r\n```\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2). Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2). Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / linux-x64. Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / linux-x64. Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / win-x64. Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / win-x64. Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\n```","Url":"https://github.com/dotnet/sdk/issues/3266","RelatedDescription":"Open issue \"dotnet msbuild -t:restore or -t:publish : NU1201: Not compatible with netcoreapp2.2\" (#3266)"},{"Id":"447336615","IsPullRequest":true,"CreatedAt":"2019-05-25T03:43:49","Actor":"dsplaisted","Number":"3259","RawContent":null,"Title":"Support WPF and WindowsForms-specific FrameworkReferences via profiles","State":"closed","Body":"This PR supports referencing only Windows Forms or only WPF assets from the WindowsDesktop targeting pack.  See https://github.com/dotnet/cli/issues/10536.\r\n\r\nThis is done by supporting the following additional FrameworkReferences:\r\n\r\n- Microsoft.WindowsDesktop.App.WindowsForms\r\n- Microsoft.WindowsDesktop.App.WPF\r\n\r\nIn the implementation, a KnownFrameworkReference can specify a Profile of the targeting pack via metadata.  https://github.com/dotnet/core-setup/issues/6210 tracks adding this information to the WindowsDesktop FrameworkList.xml.  Until then, this PR hard-codes the assemblies which are in each profile.\r\n\r\nAfter this is merged, the WindowsDesktop SDK should be updated to use the .WindowsForms or .WPF FrameworkReference depending on if the `UseWPF` or `UseWindowsForms` properties are set.  If both of them are set, it should use the base Microsoft.WindomwsDesktop.App FrameworkReference, which will include the integration DLL.\r\n\r\n@nguerrera @vatsan-madhavan","Url":"https://github.com/dotnet/sdk/pull/3259","RelatedDescription":"Closed or merged PR \"Support WPF and WindowsForms-specific FrameworkReferences via profiles\" (#3259)"},{"Id":"448393743","IsPullRequest":false,"CreatedAt":"2019-05-25T00:37:41","Actor":"vatsan-madhavan","Number":"3265","RawContent":null,"Title":"WPF Theme Assemblies are not usable under the current FrameworkReference design","State":"open","Body":"See discussion in https://github.com/dotnet/sdk/pull/3259 for context. \r\n\r\nBackground: \r\n\r\nWPF's theme assemblies (`PresentationFramework.Aero`, `PresentationFramework.Aero2`, `PresentationFramework.AeroLite`, `PresentationFramework.Classic`, `PresentationFramework.Luna` and `PresentationFramework.Royale`) expose the same types. \r\n\r\nFor e.g., [DataGridHeaderBorder](https://docs.microsoft.com/en-us/dotnet/api/microsoft.windows.themes.datagridheaderborder?view=netframework-4.8). \r\n\r\nThese assemblies can be used in two ways. \r\n\r\nTypically, they are used as resource assemblies. i.e., they are not referenced from the project, and instead, XAML resources within them are consumed  as resources using `<ResourceDictionary ..>`. When used this way, all of these assemblies can (and often are) used in to supply themes contextually (i.e., depending on the system theme, for e.g., or some other user preference). \r\n\r\nLess commonly, they are directly referenced and their types are either consumed in XAML or directly in code. When used this way, only one assembly can be referenced directly. If more than one assembly needs to be referenced, namespace aliasing has to be used. \r\n\r\nProblem: \r\n\r\nThe current SDK/FrameworkReference design in .NET Core _always_ enables references to each of these assemblies. This makes them virtually unusable. We need a better scheme/solution. \r\n\r\n/cc @nguerrera, @rladuca, @dsplaisted \r\ncc @dotnet/wpf-developers \r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3265","RelatedDescription":"Open issue \"WPF Theme Assemblies are not usable under the current FrameworkReference design\" (#3265)"},{"Id":"447804307","IsPullRequest":true,"CreatedAt":"2019-05-25T00:06:31","Actor":"nguerrera","Number":"3262","RawContent":null,"Title":"Fix StrBegin comments in resx and enforce them in test","State":"closed","Body":"Reported by @janbaltus","Url":"https://github.com/dotnet/sdk/pull/3262","RelatedDescription":"Closed or merged PR \"Fix StrBegin comments in resx and enforce them in test\" (#3262)"},{"Id":"447922530","IsPullRequest":true,"CreatedAt":"2019-05-24T00:02:26","Actor":"dotnet-bot","Number":"3264","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3264","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3264)"},{"Id":"447922517","IsPullRequest":true,"CreatedAt":"2019-05-24T00:02:23","Actor":"dotnet-bot","Number":"3263","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3263","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#3263)"},{"Id":"444692644","IsPullRequest":true,"CreatedAt":"2019-05-23T21:04:54","Actor":"dotnet-bot","Number":"3239","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3239","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#3239)"},{"Id":"444692635","IsPullRequest":true,"CreatedAt":"2019-05-23T21:03:14","Actor":"dotnet-bot","Number":"3238","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3238","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#3238)"},{"Id":"446933661","IsPullRequest":false,"CreatedAt":"2019-05-23T20:49:39","Actor":"RayKoopa","Number":"3256","RawContent":null,"Title":"NullableContextOptions has no effect anymore (after upgrading to VS 16.2 Preview 1?)","State":"closed","Body":"I'm using 3.0.100-preview5-011568 in VS 16.2.0 Preview 1.0 and the following sample C# console application:\r\n\r\n**project.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableContextOptions>enable</NullableContextOptions>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**Program.cs**\r\n```cs\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            String? x = \"Test\";\r\n            Console.WriteLine(x);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nDespite having set `NullableContextOptions` to `enable` in the project file, I receive the warning **CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.** on the `String?` question mark character.\r\n\r\nSimilarly, another project cannot be compiled anymore due to **CS8627: A nullable type parameter must be known to be a value type or non-nullable reference type. Consider adding a 'class', 'struct', or type constraint.** when using `T?` for a generic class type method parameter:\r\n```cs\r\npublic void WriteOptional<T>(in T? value) where T : class, IWritable\r\n```\r\n\r\nWhen adding `#nullabe enable` to the top of the file(s) causing the warning, it is gone. It's like the project element lost its functionality after upgrading to VS 16.2.0? I did not change the SDK preview version and could compile the same sources correctly in 16.1.0.\r\n\r\nI'm not sure if https://github.com/dotnet/sdk/issues/3245 is relevant here.","Url":"https://github.com/dotnet/sdk/issues/3256","RelatedDescription":"Closed issue \"NullableContextOptions has no effect anymore (after upgrading to VS 16.2 Preview 1?)\" (#3256)"},{"Id":"447399445","IsPullRequest":true,"CreatedAt":"2019-05-23T17:22:55","Actor":"dsplaisted","Number":"3260","RawContent":null,"Title":"Switch to hosted Mac pool for CI","State":"closed","Body":"DotNetCore-Mac pool is being retired.","Url":"https://github.com/dotnet/sdk/pull/3260","RelatedDescription":"Closed or merged PR \"Switch to hosted Mac pool for CI\" (#3260)"},{"Id":"447721754","IsPullRequest":false,"CreatedAt":"2019-05-23T15:12:36","Actor":"rainersigwald","Number":"3261","RawContent":null,"Title":"Consider making runtime target assets available as an item","State":"open","Body":"In part of the MSBuild build that attempts to assemble a set of build tools to make a usable MSBuild distribution (sort of a mini-`core-sdk` for our own bootstrap purposes), we extracted some specific items to copy from the `@(RuntimeCopyLocalItems)` and `@(ResolvedRuntimeTargets)` items output by `ResolvePackageAssets`:\r\n\r\nhttps://github.com/microsoft/msbuild/blob/0411d07a7853af88f2555dd84258c005bdce709c/eng/BootStrapMSBuild.targets#L31-L41\r\n\r\nIn 3.0-preview5, `@(ResolvedRuntimeTargets)` was renamed to `@(RuntimeTargetsCopyLocalItems)`, and it is not populated in full framework builds, unless the explicit opt-out `$(DisableRuntimeTargets)` is set to `false`.\r\n\r\nIt might be worth creating the items for explicit use by custom targets, and just not adding them to the default copy local/publish items in the full framework build.","Url":"https://github.com/dotnet/sdk/issues/3261","RelatedDescription":"Open issue \"Consider making runtime target assets available as an item\" (#3261)"},{"Id":"446888312","IsPullRequest":true,"CreatedAt":"2019-05-22T20:40:34","Actor":"wli3","Number":"3255","RawContent":null,"Title":"Fix generate package on build pack as tool","State":"closed","Body":"NuGet/Home#7801\r\n\r\n(the easiest way to understand that is)since nuget no longer sets NoBuild on GeneratePackageOnBuild, we need to do similar logic to get the previous state.\r\n\r\nfix https://github.com/dotnet/sdk/issues/3253","Url":"https://github.com/dotnet/sdk/pull/3255","RelatedDescription":"Closed or merged PR \"Fix generate package on build pack as tool\" (#3255)"},{"Id":"446882523","IsPullRequest":false,"CreatedAt":"2019-05-22T20:40:34","Actor":"dsplaisted","Number":"3253","RawContent":null,"Title":"Project with PackAsTool and GeneratePackageOnBuild set to true fails to build","State":"closed","Body":"Tests in `GivenThatWeWantToPackAToolProjectWithGeneratePackageOnBuild` are failing with:\r\n\r\n> C:\\git\\dotnet-sdk\\artifacts\\bin\\Debug\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(337,5): error MSB4006: There is a circular dependency in the target dependency graph involving target \"_WalkEachTargetPerFramework\". [C:\\git\\dotnet-sdk\\artifacts\\tmp\\Debug\\It_builds_suc---81F3C59C\\App\\consoledemo.csproj]\r\n\r\nThis regressed with a recent NuGet insertion.","Url":"https://github.com/dotnet/sdk/issues/3253","RelatedDescription":"Closed issue \"Project with PackAsTool and GeneratePackageOnBuild set to true fails to build\" (#3253)"},{"Id":"447330125","IsPullRequest":true,"CreatedAt":"2019-05-22T20:33:05","Actor":"wli3","Number":"3258","RawContent":null,"Title":"Perf wpf winform hello world","State":"open","Body":"I will clean up the commit after the review","Url":"https://github.com/dotnet/sdk/pull/3258","RelatedDescription":"Open PR \"Perf wpf winform hello world\" (#3258)"},{"Id":"447233563","IsPullRequest":false,"CreatedAt":"2019-05-22T16:28:58","Actor":"sbomer","Number":"3257","RawContent":null,"Title":"Double write during publish","State":"open","Body":"Publishing a self-contained WPF template app writes some files twice because `ResolvedFileToPublish` has the same dll from different runtime packs (for example, Microsoft.Win32.Registry.dll comes from both netcoreapp and the windowsdesktop pack).\r\nThis causes crossgen failures when used together with `PublishReadyToRun=true`.\r\n\r\nLooks very similar to https://github.com/dotnet/sdk/issues/3035 which was addressed in https://github.com/dotnet/sdk/pull/3021, but I'm still seeing this with version `3.0.100-preview6-012031`.\r\n\r\n/cc @fadimounir @nguerrera @peterhuene \r\n\r\nedit: it fails during `PublishReadyToRun=true` only when used together with the linker. Without linking, the duplicates are already crossgen'd, and so they don't hit the failure. In any case, `ResolvedFileToPublish` has duplicates that shouldn't be there, and we end up with `DoubleWrites` of some files.\r\n\r\n<img width=\"565\" alt=\"image\" src=\"https://user-images.githubusercontent.com/787361/58192612-00a04780-7c76-11e9-8ffc-102d4b993fb2.png\">\r\n","Url":"https://github.com/dotnet/sdk/issues/3257","RelatedDescription":"Open issue \"Double write during publish\" (#3257)"},{"Id":"446827153","IsPullRequest":true,"CreatedAt":"2019-05-22T05:25:30","Actor":"dsplaisted","Number":"3252","RawContent":null,"Title":"Update NuGet","State":"closed","Body":"Replacement for #3243, on top of #3250 which should hopefully fix things.","Url":"https://github.com/dotnet/sdk/pull/3252","RelatedDescription":"Closed or merged PR \"Update NuGet\" (#3252)"},{"Id":"446885292","IsPullRequest":false,"CreatedAt":"2019-05-22T00:56:10","Actor":"vatsan-madhavan","Number":"3254","RawContent":null,"Title":"deps.json for ProjectReferences is not emitted correctly","State":"open","Body":"When I create a project with a project reference like this...\r\n\r\n```XML\r\n<ProjectReference Include=\"..\\WindowsBase.csproj\" />\r\n```\r\n\r\n... the `deps.json` file that's generated has an entry like this:\r\n\r\n```json\r\n      \"WindowsBase/1.0.0\": {\r\n        \"runtime\": {\r\n          \"WindowsBase.dll\": {}\r\n        }\r\n      }\r\n```\r\nThe application loads `WindowsBase` from `Microsoft.NetCore.App` instead of loading the one supplied by the referenced project. \r\n\r\n[Repro: XUnitTestProject1.zip](https://github.com/dotnet/sdk/files/3205090/XUnitTestProject1.zip)\r\n\r\n/cc @ericstj \r\n","Url":"https://github.com/dotnet/sdk/issues/3254","RelatedDescription":"Open issue \"deps.json for ProjectReferences is not emitted correctly\" (#3254)"},{"Id":"446345530","IsPullRequest":true,"CreatedAt":"2019-05-21T18:34:59","Actor":"dsplaisted","Number":"3250","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Should unblock #3243","Url":"https://github.com/dotnet/sdk/pull/3250","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3250)"},{"Id":"446443251","IsPullRequest":false,"CreatedAt":"2019-05-21T06:45:04","Actor":"davidfowl","Number":"3251","RawContent":null,"Title":"deps.json file has empty compilationOptions section","State":"open","Body":"Likely a result of the migration to the new JSON APIs\r\n\r\n```JSON\r\n{\r\n  \"runtimeTarget\": {\r\n    \"name\": \".NETCoreApp,Version=v3.0\",\r\n    \"signature\": \"\"\r\n  },\r\n  \"compilationOptions\": {},\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v3.0\": {\r\n      \"ConsoleApp1/1.0.0\": {\r\n        \"runtime\": {\r\n          \"ConsoleApp1.dll\": {}\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"libraries\": {\r\n    \"ConsoleApp1/1.0.0\": {\r\n      \"type\": \"project\",\r\n      \"serviceable\": false,\r\n      \"sha512\": \"\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ncc @ahsonkhan @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3251","RelatedDescription":"Open issue \"deps.json file has empty compilationOptions section\" (#3251)"},{"Id":"445519479","IsPullRequest":false,"CreatedAt":"2019-05-20T17:14:41","Actor":"sebastienros","Number":"3245","RawContent":null,"Title":"NullableContextOptions error during build","State":"closed","Body":"Using the latest build of the SDK, since yesterday.\r\n\r\n```\r\nC:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\xx1da5ap.ru4\\sdk\\3.0.100-preview6-011991\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.Compilation.targets(156,10): error MSB4064: The \"NullableContextOptions\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property. [C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\2hgsxukz.hiy\\benchmarks\\src\\Benchmarks\\Benchmarks.csproj]\r\nC:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\xx1da5ap.ru4\\sdk\\3.0.100-preview6-011991\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.Compilation.targets(120,5): error MSB4063: The \"Csc\" task could not be initialized with its input parameters.  [C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\2hgsxukz.hiy\\benchmarks\\src\\Benchmarks\\Benchmarks.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3245","RelatedDescription":"Closed issue \"NullableContextOptions error during build\" (#3245)"},{"Id":"446041376","IsPullRequest":false,"CreatedAt":"2019-05-20T10:31:08","Actor":"fubar-coder","Number":"3249","RawContent":null,"Title":"*.dll.config from package reference not copied to output on publish","State":"open","Body":"# Description\r\n\r\nIt seems that the `*.dll.config` files from a package reference aren't copied to the output directory during a `dotnet publish`.\r\n\r\n# Use case\r\n\r\nI stumbled across this problem while consuming my `FubarDev.PamSharp` package, which **requires** having the ´.dll.config` file, because it contains a `dllmap` that is needed to find the correct native library.\r\n\r\n# `dotnet --info`\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /home/fubar-coder/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/home/fubar-coder/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/home/fubar-coder/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/home/fubar-coder/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n# System information\r\n\r\nWindows 10 Pro for Workstation 1809 (Build 17763.475)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3249","RelatedDescription":"Open issue \"*.dll.config from package reference not copied to output on publish\" (#3249)"},{"Id":"445620306","IsPullRequest":true,"CreatedAt":"2019-05-17T23:25:17","Actor":"wli3","Number":"3248","RawContent":null,"Title":"Remove _WriteAppConfigWithSupportedRuntime Input dependency ","State":"closed","Body":"on ResolveAssemblyReferencesStateFile\r\n\r\nfix https://github.com/dotnet/sdk/issues/3131\r\n\r\nI tried to get a repro in test. However, I cannot pin down a minimal repro to cause rar cache file to be invalid between builds.\r\n\r\ncc @KirillOsenkov","Url":"https://github.com/dotnet/sdk/pull/3248","RelatedDescription":"Closed or merged PR \"Remove _WriteAppConfigWithSupportedRuntime Input dependency \" (#3248)"},{"Id":"445606690","IsPullRequest":true,"CreatedAt":"2019-05-17T22:37:25","Actor":"peterhuene","Number":"3247","RawContent":null,"Title":"Copy runtime pack resource assemblies on self-contained build/publish.","State":"closed","Body":"This commit implements copying resource assemblies for self-contained\r\nbuild/publish from runtime packs.\r\n\r\nCloses #3068.","Url":"https://github.com/dotnet/sdk/pull/3247","RelatedDescription":"Closed or merged PR \"Copy runtime pack resource assemblies on self-contained build/publish.\" (#3247)"},{"Id":"445600954","IsPullRequest":true,"CreatedAt":"2019-05-17T22:09:36","Actor":"dsplaisted","Number":"3246","RawContent":null,"Title":"Skip tests where .NET Core version they use isn't supported on current OS","State":"closed","Body":"Update some tests to skip running if the current operating system doesn't support the right version of .NET Core.\r\n\r\nThis will help run the sdk tests in dotnet/core-sdk, which tests more operating systems than this repo does.","Url":"https://github.com/dotnet/sdk/pull/3246","RelatedDescription":"Closed or merged PR \"Skip tests where .NET Core version they use isn't supported on current OS\" (#3246)"},{"Id":"445498451","IsPullRequest":false,"CreatedAt":"2019-05-17T15:29:08","Actor":"fr0","Number":"3244","RawContent":null,"Title":"How to set version metadata?","State":"open","Body":"1. I want to use the `VersionPrefix` property inside my `csproj` to define my package's semver 2.0 (3-part) version.\r\n2. I want to attach a 4th part and build metadata on the command line.\r\n\r\nIn other words, I want to have the version be, e.g. \"1.2.3.4+f0c432\"\r\n\r\nWhere `1.2.3` is stored in the `csproj`\r\nand `.4` comes from the CI environment\r\nand `+40c432` is the commit hash.\r\n\r\nThe problem I've run into is that using `--version-suffix` automatically makes it a pre-release version, which I don't want.\r\n\r\nEven if I ignore the 4th number (build number), I can't even do this:\r\n\r\n```\r\ndotnet build MyProj  --version-suffix \"+f0c432\"\r\n```\r\n\r\nBecause:\r\n\r\n```\r\n/usr/local/share/dotnet/sdk/2.2.107/NuGet.targets(114,5): error : '1.2.3-+f0c432' is not a valid version string\r\n```","Url":"https://github.com/dotnet/sdk/issues/3244","RelatedDescription":"Open issue \"How to set version metadata?\" (#3244)"},{"Id":"445092425","IsPullRequest":true,"CreatedAt":"2019-05-16T18:12:47","Actor":"zivkan","Number":"3243","RawContent":null,"Title":"Insert NuGet 5.2.0-preview2.6020 into master","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3243","RelatedDescription":"Open PR \"Insert NuGet 5.2.0-preview2.6020 into master\" (#3243)"},{"Id":"445077491","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:38","Actor":"nugetlurker","Number":"3242","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3242","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3242)"},{"Id":"445077453","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:32","Actor":"nugetlurker","Number":"3241","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3241","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3241)"},{"Id":"444694510","IsPullRequest":true,"CreatedAt":"2019-05-15T23:56:30","Actor":"MSLukeWest","Number":"3240","RawContent":null,"Title":"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup","State":"open","Body":"Updating the publishing targets to set the IsKeyOutput metadata on the apphost file (exe).  The key output is used when creating shortcuts using Installer Projects.\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3240","RelatedDescription":"Open PR \"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup\" (#3240)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1131606214717116418","CreatedAt":"2019-05-23T17:02:00+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/mHsIdILy7f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1131209353829052418","CreatedAt":"2019-05-22T14:45:01+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he'll be adding break and continue statements to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":1,"RawContent":null},{"Id":"1129054452357271553","CreatedAt":"2019-05-16T16:02:12+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the .NET, C#, and F# teams https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":3,"RawContent":null},{"Id":"1129053721206304769","CreatedAt":"2019-05-16T15:59:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1128765757175631872","CreatedAt":"2019-05-15T20:55:02+00:00","UserScreenname":"dotnet","Text":"We just blogged about all the performance works we did in .NET Core 3.0 https://t.co/2JGXxF7ejn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":313,"FavoriteCount":150,"RawContent":null},{"Id":"1128672633665384449","CreatedAt":"2019-05-15T14:45:00+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he's implementing functions in his compiler. https://t.co/SYndeEbdMY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1128343453970993152","CreatedAt":"2019-05-14T16:56:57+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1128339508414410757","CreatedAt":"2019-05-14T16:41:16+00:00","UserScreenname":"dotnet","Text":"ML .NET  CLI: Learn how to automatically generate an ML .NET  machine learning model and C# related code with this… https://t.co/i8zHrBa1UM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":126,"FavoriteCount":53,"RawContent":null}]}},"RunOn":"2019-05-26T05:30:29.2373526Z","RunDurationInMilliseconds":8550}