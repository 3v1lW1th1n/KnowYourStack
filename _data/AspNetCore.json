{"Data":{"Blog":{"FeedItems":[{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7095796285","Type":"IssuesEvent","CreatedAt":"2018-01-13T21:06:24","Actor":"MV10","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2777","RelatedDescription":"Closed issue \"IUrlHelper should support Razor Page handlers\" (#2777) at aspnet/Home","RelatedBody":"Suggestion or feature request: [`IUrlHandler`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.iurlhelper?view=aspnetcore-2.0) has many options supporting controller-based actions, but in the Razor Pages world, handlers are the Shiny New Toy, and it seems to me that `PageModel.Url` ought to offer handler-based helpers."},{"Id":"7095791231","Type":"IssuesEvent","CreatedAt":"2018-01-13T21:02:47","Actor":"MV10","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2777","RelatedDescription":"Opened issue \"IUrlHelper should support Razor Page handlers\" (#2777) at aspnet/Home","RelatedBody":"Suggestion or feature request: [`IUrlHandler`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.iurlhelper?view=aspnetcore-2.0) has many options supporting controller-based actions, but in the Razor Pages world, handlers are the Shiny New Toy, and it seems to me that `PageModel.Url` ought to offer handler-based helpers."},{"Id":"7094389427","Type":"IssuesEvent","CreatedAt":"2018-01-13T02:29:06","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2259","RelatedDescription":"Closed issue \"ASP.NET MVC fails with 400 when Chinese characters are in cookies\" (#2259) at aspnet/Home","RelatedBody":"@netnr opened this here: https://github.com/dotnet/core/issues/1049\r\n\r\n# Issue Title\r\n`asp.net core 2.0 mvc` \r\nDevelopment project, cookies has Chinese, access site return error code: 400\r\n\r\n# General\r\n\r\n![1.png](https://i.loli.net/2017/10/27/59f27ec08b50f.png)\r\n![2.png](https://i.loli.net/2017/10/27/59f27ec093424.png)\r\n![3.png](https://ooo.0o0.ooo/2017/10/27/59f27ec097fc0.png)"},{"Id":"7094384808","Type":"IssuesEvent","CreatedAt":"2018-01-13T02:25:23","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2776","RelatedDescription":"Closed issue \".NET Core is missing suitable APIs for dealing with filesystems that contain symbolic links\" (#2776) at aspnet/Home","RelatedBody":"Ref: https://github.com/aspnet/Home/issues/2774 for discovery point\r\n\r\n.NET Core is missing suitable APIs for dealing with filesystems that contain symbolic links\r\n\r\nFileInfo does not resolve symbolic links, leading to subtle bugs. There's no API that gives information about the link target. There's other problems with the existing APIs causing them to have trouble when you call Directory.EnumerateFileSystemEntries involving having to do not one but two stat calls for each node. Might as well resolve them all at once.\r\n\r\nProposed API surface:\r\n\r\n    // These are deliberately set to the *nix constant values where possible.\r\n    public enum FileTypes {\r\n          Missing = 0,\r\n          Fifo = 0010000,\r\n          CharacterDevice = 0020000,\r\n          Directory = 0040000,\r\n          BlockDevice = 0060000,\r\n          File = 010000,\r\n          SymbolicLink = 0120000,\r\n          Socket = 0140000,\r\n          ReparsePoint = 0200000, // ReparsePoint attribute set but not a symbolic link\r\n    }\r\n\r\n    public struct FileNode {\r\n        public string Path { get; private set; }\r\n        public string FileName { get => System.IO.Path.GetFileName(Path); }\r\n        public DateTime LastAccessTime { get; private set; }\r\n        public DateTime LastAccessTimeUTC { get; private set; }\r\n        public DateTime LastWriteTime { get; private set; }\r\n        public DateTime LastWriteTimeUTC { get; private set; }\r\n        public DateTime LastChangeTime { get; private set; }\r\n        public DateTime LastChangeTimeUTC { get; private set; }\r\n        public FileAttributes Attributes { get; private set; }\r\n        public FileTypes FileNodeType { get; private set; }\r\n        public string ReadLink(); /* call the appropriate API */\r\n        public bool Exists { get => FileNodeType != 0 }\r\n        FileNode(string path, bool resolvesymboliclink)\r\n        {\r\n                /* The general idea of this API is it doesn't throw; just gives the appropriate information You could probably put Cer.Success on it. */\r\n                Path = path;\r\n                bool statpermissiondenied;\r\n                if (resolvesymboliclink)\r\n                {\r\n                    /* This code path would call CreateFile with only FILE_READ_ATTRIBUTES and then call GetFileInformationByHandle; on AccessDenied or PermissionDenied fall through below */\r\n                    /* on unix this would be a stat() call */\r\n                }\r\n                /* This code path would call FindFirstFileEx to get the file information by name from the node attribute */\r\n                if (resolvesymboliclink && FileNodeType == FileTypes.SymbolicLink)\r\n                   FileNodeType = 0;\r\n        }\r\n        /* Deserialization constructor */\r\n        FileNode(string path, FileTypes fileNodeType, FileAttributes Attributes, DateTime lastAccessTimeUTC, DateTime lastChangeTimeUTC, DateTime lastWriteTimeUTC);\r\n    }\r\n\r\n    public partial class File {\r\n         public static void CreateSymbolicLink(string target, string link, bool targetisdirectory = false);\r\n    }\r\n\r\n\r\n    public partial class Directory {\r\n         // This one exists only code readability\r\n         // The idea is the programmer would normally only pass the third parameter if it was indirection from another layer of indirection, and otherwise would call File.CreateSymbolicLink to create a symbolic link to a file and Directory.CreateSymbolicLink to create a symbolic link to a directory\r\n         public static void CreateSymbolicLink(string target, string link, bool targetisdirectory = true)\r\n                => File.CreateSymbolicLink(target, link, targetisdirectory);\r\n    }"},{"Id":"7093980704","Type":"IssuesEvent","CreatedAt":"2018-01-12T23:05:05","Actor":"jhudsoncedaron","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2776","RelatedDescription":"Opened issue \".NET Core is missing suitable APIs for dealing with filesystems that contain symbolic links\" (#2776) at aspnet/Home","RelatedBody":"Ref: https://github.com/aspnet/Home/issues/2774 for discovery point\r\n\r\nFileInfo does not resolve symbolic links, leading to subtle bugs. There's no API that gives information about the link target. There's other problems with the existing APIs causing them to have trouble when you call Directory.EnumerateFileSystemEntries involving having to do not one but two stat calls for each node. Might as well resolve them all at once.\r\n\r\n.NET Core is missing suitable APIs for dealing with filesystems that contain symbolic links\r\n\r\nI've been having other troubles with the provided APIs \r\n\r\n    // These are deliberately set to the *nix constant values where possible.\r\n    public enum FileTypes {\r\n          Missing = 0,\r\n          Fifo = 0010000,\r\n          CharacterDevice = 0020000,\r\n          Directory = 0040000,\r\n          BlockDevice = 0060000,\r\n          File = 010000,\r\n          SymbolicLink = 0120000,\r\n          Socket = 0140000,\r\n          ReparsePoint = 0200000, // ReparsePoint attribute set but not a symbolic link\r\n    }\r\n\r\n    public struct FileNode {\r\n        public string Path { get; private set; }\r\n        public string FileName { get => System.IO.Path.GetFileName(Path); }\r\n        public DateTime LastAccessTime { get; private set; }\r\n        public DateTime LastAccessTimeUTC { get; private set; }\r\n        public DateTime LastWriteTime { get; private set; }\r\n        public DateTime LastWriteTimeUTC { get; private set; }\r\n        public DateTime LastChangeTime { get; private set; }\r\n        public DateTime LastChangeTimeUTC { get; private set; }\r\n        public FileAttributes Attributes { get; private set; }\r\n        public FileTypes FileNodeType { get; private set; }\r\n        public string ReadLink(); /* call the appropriate API */\r\n        public bool Exists { get => FileNodeType != 0 }\r\n        FileNode(string path, bool resolvesymboliclink)\r\n        {\r\n                /* The general idea of this API is it doesn't throw; just gives the appropriate information You could probably put Cer.Success on it. */\r\n                Path = path;\r\n                bool statpermissiondenied;\r\n                if (resolvesymboliclink)\r\n                {\r\n                    /* This code path would call CreateFile with only FILE_READ_ATTRIBUTES and then call GetFileInformationByHandle; on AccessDenied or PermissionDenied fall through below */\r\n                    /* on unix this would be a stat() call */\r\n                }\r\n                /* This code path would call FindFirstFileEx to get the file information by name from the node attribute */\r\n                if (resolvesymboliclink && FileNodeType == FileTypes.SymbolicLink)\r\n                   FileNodeType = 0;\r\n        }\r\n        /* Deserialization constructor */\r\n        FileNode(string path, FileTypes fileNodeType, FileAttributes Attributes, DateTime lastAccessTimeUTC, DateTime lastChangeTimeUTC, DateTime lastWriteTimeUTC);\r\n    }"},{"Id":"7093974505","Type":"IssuesEvent","CreatedAt":"2018-01-12T23:02:57","Actor":"HaoK","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2752","RelatedDescription":"Closed issue \"Question: Providing fallback for options factory\" (#2752) at aspnet/Home","RelatedBody":"PS: This is a question, not a bug. Please close if not appropriate to ask here.\r\n\r\nI have many configurations, and I end up doing this a lot\r\n`services.Configure<FooBoo>(configuration.GetSection(\"FooBoo\"));`\r\n\r\nwhere `configuration` is always the root, and section name always matches the class name .\r\n\r\nTo try to automate this I looked here https://github.com/aspnet/Options/blob/dev/src/Microsoft.Extensions.Options/OptionsFactory.cs\r\nand implemented a decorator for the options factory like below\r\n```\r\npublic class OptionsFactoryDecorator<TOptions> : IOptionsFactory<TOptions> where TOptions : class, new()\r\n{\r\n    private readonly IEnumerable<IConfigureOptions<TOptions>> _setups;\r\n    private readonly IEnumerable<IPostConfigureOptions<TOptions>> _postConfigures;\r\n    private readonly IOptionsFactory<TOptions> _optionsFactory;\r\n    private readonly IConfiguration _configuration;\r\n\r\n    public OptionsFactoryDecorator(\r\n        IOptionsFactory<TOptions> optionsFactory,\r\n        IEnumerable<IConfigureOptions<TOptions>> setups,\r\n        IEnumerable<IPostConfigureOptions<TOptions>> postConfigures,\r\n        IConfiguration configuration)\r\n    {\r\n        _optionsFactory = optionsFactory;\r\n        _setups = setups;\r\n        _postConfigures = postConfigures;\r\n        _configuration = configuration;\r\n    }\r\n\r\n    public TOptions Create(string name)\r\n    {\r\n        if (name != Options.DefaultName || _setups.Any() || _postConfigures.Any())\r\n        {\r\n            return _optionsFactory.Create(name);\r\n        }\r\n        var options = new TOptions();\r\n        _configuration.GetSection(typeof(TOptions).Name).Bind(options);\r\n        return options;\r\n    }\r\n}\r\n```\r\nAnd just using structuremap as an example, i can simply do\r\n`registry.For(typeof(IOptionsFactory<>)).DecorateAllWith(typeof(OptionsFactoryDecorator<>));\r\n`\r\n\r\nAnd everything works 😱 . I dont need any \r\n`services.Configure<FooBoo>(configuration.GetSection(\"FooBoo\"));`\r\n\r\n\r\nIs there a reason why I should absolutely not do it?\r\n\r\n\r\n  "}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7095792503","Type":"IssuesEvent","CreatedAt":"2018-01-13T21:03:41","Actor":"antoinne85","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1298","RelatedDescription":"Reopened issue \"Fresh Checkout Doesn't Build\" (#1298) at aspnet/SignalR","RelatedBody":"### Fresh Checkout Doesn't Build\r\nA fresh checkout doesn't seem to build correctly from the command line, even when following the directions from the [Building From Source](https://github.com/aspnet/Home/wiki/Building-from-source) page.\r\n\r\n### Functional impact\r\nI am unable to build and contribute to the project, as well as build and run the sample projects.\r\n\r\n### Minimal repro steps\r\n1. Clone the repository.\r\n1. Navigate to the repository folder in a terminal.\r\n1. Run build.cmd.\r\n1. Wait for the build process to exit.\r\n\r\n### Expected result\r\nI expected a successful build.\r\n\r\n### Actual result\r\nThe build failed with several errors.\r\n\r\n### Further technical details\r\nI'm just getting started with this project, so I'm unfamiliar with what is expected from the build and I'm not yet attempting to build from Visual Studio. \r\n\r\nI've logged the build output and created [this gist](https://gist.githubusercontent.com/antoinne85/800af997d077ae3fa80e5f3ad422134d/raw/b183f27393ea951de00729a49b605bdb8666ac4a/build-output.log) (link to the raw content--because of its size, the pretty view truncates it).\r\n\r\nAny input or advice you might have on how to get up-and-running would be greatly appreciated."},{"Id":"7095768261","Type":"IssuesEvent","CreatedAt":"2018-01-13T20:46:26","Actor":"antoinne85","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1298","RelatedDescription":"Closed issue \"Fresh Checkout Doesn't Build\" (#1298) at aspnet/SignalR","RelatedBody":"### Fresh Checkout Doesn't Build\r\nA fresh checkout doesn't seem to build correctly from the command line, even when following the directions from the [Building From Source](https://github.com/aspnet/Home/wiki/Building-from-source) page.\r\n\r\n### Functional impact\r\nI am unable to build and contribute to the project, as well as build and run the sample projects.\r\n\r\n### Minimal repro steps\r\n1. Clone the repository.\r\n1. Navigate to the repository folder in a terminal.\r\n1. Run build.cmd.\r\n1. Wait for the build process to exit.\r\n\r\n### Expected result\r\nI expected a successful build.\r\n\r\n### Actual result\r\nThe build failed with several errors.\r\n\r\n### Further technical details\r\nI'm just getting started with this project, so I'm unfamiliar with what is expected from the build and I'm not yet attempting to build from Visual Studio. \r\n\r\nI've logged the build output and created [this gist](https://gist.githubusercontent.com/antoinne85/800af997d077ae3fa80e5f3ad422134d/raw/b183f27393ea951de00729a49b605bdb8666ac4a/build-output.log) (link to the raw content--because of its size, the pretty view truncates it).\r\n\r\nAny input or advice you might have on how to get up-and-running would be greatly appreciated."},{"Id":"7095573913","Type":"IssuesEvent","CreatedAt":"2018-01-13T18:29:35","Actor":"Erikvdv","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1301","RelatedDescription":"Opened issue \"signalr alpha 2: how to deserialize from camel to pascal with messagepack\" (#1301) at aspnet/SignalR","RelatedBody":"I am having the following problem:\r\nI have a typescript FE and a .net core backend.\r\nmy typescript objects are camelcase and my .net core objects are pascal case (the standard way for both languages).\r\nWhen I use the JsonHubProtocol the ts/js object is deserialized properly to my POCO object in .net and also nicely serialized to camelcase when sending from .net to my ts frontend.\r\nHowever, when I am using MessagePack this is not happening. \r\nwith `services.AddSignalR(o =>\r\n                {\r\n                    o.MessagePackSerializationContext.DictionarySerlaizationOptions.KeyTransformer = DictionaryKeyTransformers.LowerCamel;\r\n                });`\r\nI can make sure the POCO object is transformed into camel case. However, I can't find any way to do it the other way around. So having a camelcase ts object that will be mapped to a pascal case POCO object automatically.\r\n\r\nAny thoughts on how to achieve this?\r\n"},{"Id":"7095401253","Type":"IssuesEvent","CreatedAt":"2018-01-13T16:35:14","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1300","RelatedDescription":"Opened issue \"Consider renaming `InvokeAsync` on server to `SendAsync`\" (#1300) at aspnet/SignalR","RelatedBody":"The client has `SendAsync` which is fire-and-forget and `InvokeAsync` which waits for a completion message from the server.\r\n\r\nThe server has `InvokeAsync`, which is fire-and-forget and thus out of sync with the client APIs.\r\n\r\nI propose renaming the server's `InvokeAsync` to `SendAsync` to match the client. It is a break from the SignalR 2.x API, but a) it's a simple rename and b) most people were using the `dynamic` API which isn't present by default anyway so it's not like porting relied on this API being the same name.\r\n\r\nIt also allows us to open the door to Client Results by using the `InvokeAsync` name on the server.\r\n\r\nI think we should do this in Preview 1 if we're going to do it.\r\n\r\ncc @davidfowl @DamianEdwards @muratg"},{"Id":"7094812695","Type":"IssuesEvent","CreatedAt":"2018-01-13T08:58:13","Actor":"danielloczi","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1299","RelatedDescription":"Closed issue \"React - SignalR NPM package minification error\" (#1299) at aspnet/SignalR","RelatedBody":"I build a React web application, when I tries to build the app in production mode (running the npm run build command), I get the follwoing error:\r\n\r\n```\r\n> my.webapp@0.1.0 build c:\\dev\\my.webapp\r\n> react-scripts build\r\n\r\nCreating an optimized production build...\r\nFailed to compile.\r\n\r\nFailed to minify the code from this file:\r\n\r\n        ./node_modules/@aspnet/signalr-client/dist/src/Loggers.js:6\r\n\r\nRead more here: http://bit.ly/2tRViJ9\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! my.webapp@0.1.0 build: `react-scripts build`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the my.webapp@0.1.0 build script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\<user>\\AppData\\Roaming\\npm-cache\\_logs\\2018-01-13T07_45_32_121Z-debug.log\r\n```\r\n\r\nIf you check the link here (https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#npm-run-build-fails-to-minify ), then it says:\r\n**npm run build fails to minify**\r\nSome third-party packages don't compile their code to ES5 before publishing to npm. This often causes problems in the ecosystem because neither browsers (except for most modern versions) nor some tools currently support all ES6 features. We recommend to publish code on npm as ES5 at least for a few more years.\r\n"},{"Id":"7094744522","Type":"IssuesEvent","CreatedAt":"2018-01-13T07:55:25","Actor":"danielloczi","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1299","RelatedDescription":"Opened issue \"React - SignalR NPM package minification error\" (#1299) at aspnet/SignalR","RelatedBody":"I build a React web application, when I tries to build the app in production mode (running the npm run build command), I get the follwoing error:\r\n\r\n```\r\n> my.webapp@0.1.0 build c:\\dev\\my.webapp\r\n> react-scripts build\r\n\r\nCreating an optimized production build...\r\nFailed to compile.\r\n\r\nFailed to minify the code from this file:\r\n\r\n        ./node_modules/@aspnet/signalr-client/dist/src/Loggers.js:6\r\n\r\nRead more here: http://bit.ly/2tRViJ9\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! my.webapp@0.1.0 build: `react-scripts build`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the my.webapp@0.1.0 build script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\<user>\\AppData\\Roaming\\npm-cache\\_logs\\2018-01-13T07_45_32_121Z-debug.log\r\n```\r\n\r\nIf you check the link here (https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#npm-run-build-fails-to-minify ), then it says:\r\n**npm run build fails to minify**\r\nSome third-party packages don't compile their code to ES5 before publishing to npm. This often causes problems in the ecosystem because neither browsers (except for most modern versions) nor some tools currently support all ES6 features. We recommend to publish code on npm as ES5 at least for a few more years.\r\n"},{"Id":"7094576335","Type":"IssuesEvent","CreatedAt":"2018-01-13T05:14:36","Actor":"antoinne85","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1298","RelatedDescription":"Opened issue \"Fresh Checkout Doesn't Build\" (#1298) at aspnet/SignalR","RelatedBody":"### Fresh Checkout Doesn't Build\r\nA fresh checkout doesn't seem to build correctly from the command line, even when following the directions from the [Building From Source](https://github.com/aspnet/Home/wiki/Building-from-source) page.\r\n\r\n### Functional impact\r\nI am unable to build and contribute to the project, as well as build and run the sample projects.\r\n\r\n### Minimal repro steps\r\n1. Clone the repository.\r\n1. Navigate to the repository folder in a terminal.\r\n1. Run build.cmd.\r\n1. Wait for the build process to exit.\r\n\r\n### Expected result\r\nI expected a successful build.\r\n\r\n### Actual result\r\nThe build failed with several errors.\r\n\r\n### Further technical details\r\nI'm just getting started with this project, so I'm unfamiliar with what is expected from the build and I'm not yet attempting to build from Visual Studio. \r\n\r\nI've logged the build output and created [this gist](https://gist.githubusercontent.com/antoinne85/800af997d077ae3fa80e5f3ad422134d/raw/b183f27393ea951de00729a49b605bdb8666ac4a/build-output.log) (link to the raw content--because of its size, the pretty view truncates it).\r\n\r\nAny input or advice you might have on how to get up-and-running would be greatly appreciated."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7095909375","Type":"IssuesEvent","CreatedAt":"2018-01-13T22:30:58","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6934","RelatedDescription":"Reopened issue \"Find ASP.NET Core 2 Razor Pages in another assembly\" (#6934) at aspnet/Mvc","RelatedBody":"Hi, I want to locate My Project Razor Pages in another assembly. \r\nfor doing this I write following code:\r\n\r\n```\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            var adminAssembly = Assembly.Load(new AssemblyName(\"App\"));\r\n            services.AddMvc().AddApplicationPart(adminAssembly).AddRazorOptions(options =>\r\n            {\r\n                var previous = options.CompilationCallback;\r\n                options.CompilationCallback = context =>\r\n                {\r\n                    previous?.Invoke(context);\r\n\r\n                    context.Compilation = context.Compilation.AddReferences(\r\n                        MetadataReference.CreateFromFile(typeof(dodo).Assembly.Location));\r\n                };\r\n            });\r\n\r\n            services.Configure<RazorViewEngineOptions>(options =>\r\n            {\r\n                options.FileProviders.Add(new EmbeddedFileProvider(Assembly.Load(\"App\")));\r\n                options.FileProviders.Add(new PhysicalFileProvider(@\"C:\\Users\\soheil\\Documents\\Visual Studio 2017\\Projects\\WebApplication5\\App\"));\r\n            });\r\n        }\r\n```\r\nmy solution:\r\n![devenv_2017-10-10_18-44-26](https://user-images.githubusercontent.com/22220356/31394411-1c2d5ed0-adeb-11e7-9cfb-c5ce7f903d05.png)\r\n\r\nwhen running `localhost:5000/SameTodo` Get Followig Error:\r\n\r\n> One or more compilation references are missing. Ensure that your project is referencing 'Microsoft.NET.Sdk.Web' and the 'PreserveCompilationContext' property is not set to false.\r\n\r\nstack:\r\n```\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SameTodoModel> Html { get; private set; }\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel>)PageContext?.ViewData;\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public SameTodoModel Model => ViewData.Model;\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel>)PageContext?.ViewData;\r\n```\r\n\r\nand set `PreserveCompilationContext` to false but now worked how can I solve this problem?\r\nalso, ask this in [StackOverflow](https://stackoverflow.com/questions/46670806/locate-razor-pages-in-another-assembly)\r\n\r\n"},{"Id":"7094856329","Type":"IssuesEvent","CreatedAt":"2018-01-13T09:37:11","Actor":"ErcinDedeoglu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7242","RelatedDescription":"Opened issue \"Installing as Windows Service\" (#7242) at aspnet/Mvc","RelatedBody":"How can I install .NET Core MVC web app as Windows Service? https://tinyurl.com/yaa6cltf  this one is not working. old.\r\n\r\nGetting this when i tried:\r\nPackage Microsoft.AspNetCore.All 2.0.5 is not compatible with net452 (.NETFramework,Version=v4.5.2). Package Microsoft.AspNetCore.All 2.0.5 supports: netcoreapp2.0 (.NETCoreApp,Version=v2.0)Edit (0)\r\n\r\n"},{"Id":"7094119317","Type":"IssuesEvent","CreatedAt":"2018-01-12T23:57:49","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6605","RelatedDescription":"Closed issue \"Support absolute routes on Razor Pages\" (#6605) at aspnet/Mvc","RelatedBody":"## rynowak edit\r\n\r\nIn 2.1 we're going to allow routes specified in a page to use absolute route template syntax. That looks like:\r\n```\r\n@page \"~/Example\"\r\n```\r\nor \r\n```\r\n@page \"/Another/Example\"\r\n```\r\n\r\nThe key part is the `~/` or `/`. This makes the route template an absolute template, meaning that it **will not** be concatenated with the pages path. \r\n\r\nExample: (in `/Pages/Blog/About`)\r\n```\r\n@page \"AboutMe\"\r\n```\r\nThis page will execute when the URL path is `/Blog/About/AboutMe`. In 2.0 the `/Blog/About` part of the route template is implied and cannot be overridden. \r\n\r\nIn 2.1 we're adding this capability using the familiar syntax used elsewhere in MVC\r\nExample: (in `/Pages/Blog/About`)\r\n```\r\n@page \"/AboutMe\"\r\n```\r\nOR \r\n```\r\n@page \"~/AboutMe\"\r\n```\r\n\r\nThis page will execute when the URL path is `/AboutMe`. What you see is what you get. This example provides an totally different route template that **replaces the default**. This was not supported in 2.0\r\n\r\n---------\r\n\r\nWe decided to do something different than what was original posted in this issue for technical/design reasons. What was originally explained here would require us to compile **all** pages at startup time before MVC could respond to any requests. \r\n\r\nThe approach used for routing in pages is specifically designed to work based on a simple parse of the document, without the need to compile and run the code. This allows us to quickly build a route table for a large number of pages. \r\n\r\nWe're improving the capabilities that Razor has to participate in the build in 2.1, and doing a lot to make it fast too. We're very hopeful that what we're doing with this is going to be a good change for Razor and that most of our developer base will love it. If that's the case, then we'd have the ability to do some of the things detailed in the original issue.\r\n\r\n------\r\n## Original:\r\n\r\n**Support attribute routes on Razor Pages and Page Models**\r\n\r\nBased on feedback, we want to support customizing Razor Pages routes using attribute routing. This will require we discover and compile all pages ahead of building the route table\r\n\r\n## On Pages\r\nWould rely on #6562 to allow attributes to be specified in the Razor Page file. E.g.:\r\n\r\n``` html\r\n@page\r\n@attribute Route(\"custom\")\r\n\r\n@* GET /custom *@\r\nHello, World!\r\n```\r\n\r\n## On Page Models\r\nThe attributes could be placed on the `PageModel` class directly, and/or on the handler methods, with very similar behavior to attribute routing on controllers and actions (cascading, overriding, composition, etc.). The routes would be additive to the implied routes (we can debate that). E.g.:\r\n\r\n``` c#\r\n[Route(\"custom\")]\r\npublic class MyPageModel : PageModel\r\n{\r\n    // GET /custom/handler/foo\r\n    [HttpGet(\"handler/{param}\")]\r\n    public IActionResult CustomHandlerMethod(string param)\r\n    {\r\n        ...\r\n    }\r\n}\r\n```\r\n  "},{"Id":"7094119277","Type":"PullRequestEvent","CreatedAt":"2018-01-12T23:57:48","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7234","RelatedDescription":"Closed pull request \"Allow override routes on Pages\" (#7234) at aspnet/Mvc","RelatedBody":"Fixes #6605"},{"Id":"7094093293","Type":"PullRequestEvent","CreatedAt":"2018-01-12T23:47:05","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7240","RelatedDescription":"Closed pull request \"Refactor PageRouteModel generation\" (#7240) at aspnet/Mvc","RelatedBody":""},{"Id":"7094060695","Type":"PullRequestEvent","CreatedAt":"2018-01-12T23:33:43","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7241","RelatedDescription":"Opened pull request \"Some cleanup around FileProviderRazorProject with tests\" (#7241) at aspnet/Mvc","RelatedBody":"Follow up to https://github.com/aspnet/Mvc/pull/7228\r\n\r\n- Addressed @pranavkm's feedback\r\n- Normalize `RelativePhysicalPath` in src and tests"},{"Id":"7093856051","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:25:14","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7240","RelatedDescription":"Opened pull request \"Refactor PageRouteModel generation\" (#7240) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7096025356","Type":"IssuesEvent","CreatedAt":"2018-01-14T00:06:21","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1572","RelatedDescription":"Opened issue \"Improve the extensibility of the default identity UI\" (#1572) at aspnet/Identity","RelatedBody":"Support changing the user type from IdentityUser to TUser while using the default UI."},{"Id":"7096022686","Type":"IssuesEvent","CreatedAt":"2018-01-14T00:04:13","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1571","RelatedDescription":"Opened issue \"Bundle and minimize javascript and CSS assets for the default identity UI\" (#1571) at aspnet/Identity","RelatedBody":""},{"Id":"7096016404","Type":"IssuesEvent","CreatedAt":"2018-01-13T23:59:18","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1570","RelatedDescription":"Opened issue \"Add functional tests to the default embedded UI\" (#1570) at aspnet/Identity","RelatedBody":""},{"Id":"7096015543","Type":"IssuesEvent","CreatedAt":"2018-01-13T23:58:31","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1569","RelatedDescription":"Opened issue \"Investigate functional test issues in netcoreapp2.1\" (#1569) at aspnet/Identity","RelatedBody":"The tests are failing to run with a BadImageFormatException on netcoreapp2.1."},{"Id":"7093174804","Type":"PullRequestEvent","CreatedAt":"2018-01-12T19:24:00","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1567","RelatedDescription":"Closed pull request \"Split showing and generating recovery codes\" (#1567) at aspnet/Identity","RelatedBody":""},{"Id":"7093111345","Type":"PullRequestEvent","CreatedAt":"2018-01-12T19:08:29","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1566","RelatedDescription":"Merged pull request \"Use AuthenticatorUrl generated on the server in EnableAuthenticator\" (#1566) at aspnet/Identity","RelatedBody":""},{"Id":"7091160113","Type":"IssuesEvent","CreatedAt":"2018-01-12T11:52:09","Actor":"sebastianbk","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1568","RelatedDescription":"Opened issue \"Expose ASP.NET Identity via LDAP interface (.NET Core 2.0)\" (#1568) at aspnet/Identity","RelatedBody":"I have an ASP.NET Core 2.0 application where I am using the stock implementation of ASP.NET Identity to manage and authenticate my users.\r\n\r\nI would like to use my application as an identity provider for 3rd party service that I am planning on using. The only issue is that this service can only communicate with identity providers over LDAP.\r\n\r\nIs there a way to stand up an LDAP server as part of my ASP.NET Core application?\r\n\r\nI know there is an option to do so in Java by using UnboundID LDAP SDK. However, I cannot find a .NET alternative to this.\r\n\r\nHow should I go about exposing my ASP.NET Identity users via LDAP?"},{"Id":"7089239285","Type":"PullRequestEvent","CreatedAt":"2018-01-12T01:25:46","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1567","RelatedDescription":"Opened pull request \"Split showing and generating recovery codes\" (#1567) at aspnet/Identity","RelatedBody":""},{"Id":"7088970271","Type":"PullRequestEvent","CreatedAt":"2018-01-11T23:50:26","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1566","RelatedDescription":"Opened pull request \"Use AuthenticatorUrl generated on the server in EnableAuthenticator\" (#1566) at aspnet/Identity","RelatedBody":""},{"Id":"7088745418","Type":"IssuesEvent","CreatedAt":"2018-01-11T22:43:48","Actor":"grahamehorner","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1565","RelatedDescription":"Opened issue \"Improve test ability of TOTP\" (#1565) at aspnet/Identity","RelatedBody":"IMHO TOTP needs to use ISystemClock to allow for testing to skew clock outside TOTP TimeStep, also at present the TimeStep is fixed at 3 mins which result in a window of 9 mins either side of the time the code was issued, this should be configurable with a note that a larger worn is less secure and a smaller windows is more prone to expire.\r\n\r\nie. when using an authenticator application a small windows of 2 mins is suffice\r\n     while using email/phone TOTP systems a larger window is required due to delays in communication of the code to the user"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7094245559","Type":"PullRequestEvent","CreatedAt":"2018-01-13T00:56:43","Actor":"javiercn","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2246","RelatedDescription":"Merged pull request \"Load the developer certificate from a default path provided a configuration key has been specified for it\" (#2246) at aspnet/KestrelHttpServer","RelatedBody":"Makes kestrel search for a certificate on a default path based on the presence of a password in config for the default certificate and no explicit path configured for it.\r\n\r\nThis pattern supports containers scenarios where the path changes between the app being run in a container vs the app being run on the host."},{"Id":"7092436566","Type":"IssuesEvent","CreatedAt":"2018-01-12T16:33:46","Actor":"gthuruv","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2256","RelatedDescription":"Opened issue \"TaskCanceledException while reading HttpRequest body content\" (#2256) at aspnet/KestrelHttpServer","RelatedBody":"We see task cancellations while trying to copy the request body content. We do not specify a token to be monitored anywhere in the Request pipeline. The code to read the request content is,\r\n\r\n`await _httpContext.Request.Body.CopyToAsync(_contentStream);`\r\n\r\nThe error we see,\r\n\r\n`System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at OSIsoft.Data.Server.Http.HttpMessage.<TryUnpack>d__21.MoveNext()`\r\n\r\nTryUnpack has the code to copy content from the request body. This is not reproducible on our machines, but we see that happen frequently on our test servers."},{"Id":"7090334314","Type":"IssuesEvent","CreatedAt":"2018-01-12T08:33:42","Actor":"dexterhussain","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2255","RelatedDescription":"Opened issue \"Kestrel Not Opening Port on Ubuntu\" (#2255) at aspnet/KestrelHttpServer","RelatedBody":"Dear All, \r\nI have an application which is running fine on one machine using ubuntu 16 and I am trying to deploy the same application on the other freshly installed machine. When i run the application it shows me successful message \r\n\r\nexilliumwebserver@ExilliumWebServer:~/exiadmin$ dotnet Admin.dll\r\nHosting environment: Production\r\nContent root path: /home/exilliumwebserver/exiadmin\r\nNow listening on: http://localhost:5001\r\nApplication started. Press Ctrl+C to shut down.\r\n\r\nBut nor the 5001 port opens neither the web runs. I have tried checking it my using nmap. All the other machines on which I am running kestrel web server doesnt show any of such error. Please enlighten !"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7094573091","Type":"PullRequestEvent","CreatedAt":"2018-01-13T05:11:30","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1928","RelatedDescription":"Merged pull request \"Support for publish, and more tests\" (#1928) at aspnet/Razor","RelatedBody":""},{"Id":"7094436204","Type":"PullRequestEvent","CreatedAt":"2018-01-13T03:05:47","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1931","RelatedDescription":"Merged pull request \"WIP\" (#1931) at aspnet/Razor","RelatedBody":""},{"Id":"7094344532","Type":"IssuesEvent","CreatedAt":"2018-01-13T01:55:19","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1913","RelatedDescription":"Closed issue \"Flaky test: WorkspaceChanged_ProjectRemovedEvent_RemovesProject \" (#1913) at aspnet/Razor","RelatedBody":"I saw this fail on appveyor, and it looks like virtually none of our code is on the stack. \r\n\r\nhttps://ci.appveyor.com/project/aspnetci/razor/build/1.0.3753"},{"Id":"7094343975","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:54:55","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1926","RelatedDescription":"Merged pull request \"Unify how AdhocWorkspace is constructed.\" (#1926) at aspnet/Razor","RelatedBody":"- This fixes flakey tests that use AdhocWorkspace.\r\n- Created a new `TestWorkspace` type to lock on `AdhocWorkspace` construction. This type can't be constructed/changed in parallel.\r\n- Updated test usages of `AdhocWorkspace` to make use of `TestWorkspace`.\r\n- Added a `Microsoft.CodeAnalysis.Razor.Workspaces.Test.Common` project to have the `TestWorkspace` type.\r\n\r\n#1913"},{"Id":"7094343622","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:54:41","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1932","RelatedDescription":"Merged pull request \"Some pre-requisites for for Razor build server\" (#1932) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/1921\r\n\r\n- Just some stuff to make it easier to build and debug"},{"Id":"7094329481","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:44:31","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1932","RelatedDescription":"Opened pull request \"Some pre-requisites for for Razor build server\" (#1932) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/1921\r\n\r\n- Just some stuff to make it easier to build and debug"},{"Id":"7094024002","Type":"PullRequestEvent","CreatedAt":"2018-01-12T23:20:03","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1931","RelatedDescription":"Opened pull request \"WIP\" (#1931) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7065973641","Type":"PullRequestEvent","CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed pull request \"Update migrate-sql-server.md\" (#1062) at aspnet/Tooling","RelatedBody":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7082740966","Type":"IssuesEvent","CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Opened issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286) at aspnet/Announcements","RelatedBody":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229."},{"Id":"7076432273","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:08:19","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0783](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  "},{"Id":"7076428623","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:07:27","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  CVE-2018-0784, which is in the same templates.  ***** TODO: ADD LINK TO OTHER ISSUE ***** \r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  "},{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"952185961147969537","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"aspnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/H2wBoF77Ri","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":3,"RawContent":null},{"Id":"950775244016332800","CreatedAt":"2018-01-09T17:04:17+00:00","UserScreenname":"aspnet","Text":"Join us for the @aspnet Community Standup at 10 AM Pacific / 18:00 UTC today. We've got special guest… https://t.co/o5WiTdUXQC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":18,"RawContent":null},{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":68,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-01-14T05:30:10.009306Z","RunDurationInMilliseconds":8520}