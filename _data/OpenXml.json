{"Data":{"Sdk":{"Events":[{"Id":"8555201743","Type":"IssuesEvent","CreatedAt":"2018-11-08T09:22:09","Actor":"QuarK264","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/527","RelatedDescription":"Opened issue \"Error display decimal divider for zero double value in Excel\" (#527) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nI have an error connected with displaying decimal divider for zero double value in Excel using custom `NumberingFormat`. I set `FormatCode` `\"0.####\"`, it works fine for values like 3.4342, but fails for 0.0 (get 0.). I have tried to change `FormatCode` to `\"0.0###\"`, when I do it, I got sheet error when open document.\r\n\r\nI think it is a bug, as if I change cell type to string and use pattern `\"0.####\"` in C# `ToString` method for 0.0 value displays 0\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.0\r\n- DocumentFormat.OpenXml Version: 2.7.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing (var document = SpreadsheetDocument.Create(filename, SpreadsheetDocumentType.Workbook))\r\n{\r\n    var workbookPart = document.AddWorkbookPart();\r\n    workbookPart.Workbook = new Workbook();\r\n    var worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\r\n\r\n    var sheetData = CreateContent();\r\n\r\n    DefineStyles(document);\r\n    worksheetPart.Worksheet = new Worksheet();\r\n    worksheetPart.Worksheet.Append(sheetData);\r\n    var sheets = document.WorkbookPart.Workbook.AppendChild(new Sheets());\r\n    var sheet = new Sheet\r\n    {\r\n        Id = document.WorkbookPart.GetIdOfPart(worksheetPart),\r\n        SheetId = 1,\r\n        Name = Strings.SheetName\r\n    };\r\n    sheets.Append(sheet);\r\n\r\n    workbookPart.Workbook.Save();\r\n    document.Close();\r\n}\r\n\r\nprivate static SheetData CreateContent()\r\n{\r\n    var value = TimeSpan.Zero;\r\n    var row1 = new Row {RowIndex = 1};\r\n    var title = new Cell\r\n    {\r\n        CellReference = \"A1\",\r\n        CellValue = new CellValue(value.TotalHours.ToString(CultureInfo.InvariantCulture)),\r\n        DataType = CellValues.Number,\r\n        StyleIndex = 1U\r\n    };\r\n    row1.Append(title);\r\n\r\n    var sheetData = new SheetData();\r\n   sheetData.Append(row1);\r\n\r\n   return sheetData;\r\n}\r\n\r\nprivate static void DefineStyles(SpreadsheetDocument document)\r\n{\r\n    var stylesPart = document.WorkbookPart.AddNewPart<WorkbookStylesPart>();\r\n    var stylesheet = new Stylesheet();\r\n    \r\n    var fonts = new Fonts();\r\n    var font = new Font\r\n    {\r\n        FontName = new FontName\r\n        {\r\n            Val = \"Calibri\"\r\n        },\r\n        FontSize = new FontSize\r\n        {\r\n            Val = 11\r\n        }\r\n    };\r\n    fonts.Append(font);\r\n    fonts.Count = (uint) fonts.ChildElements.Count;\r\n\r\n    var fills = new Fills();\r\n    var fill = new Fill\r\n    {\r\n        PatternFill = new PatternFill\r\n        {\r\n            PatternType = PatternValues.None\r\n        }\r\n    };\r\n    fills.Append(fill);\r\n    fills.Count = (uint) fills.ChildElements.Count;\r\n\r\n    var borders = new Borders();\r\n    var border = new Border\r\n    {\r\n        LeftBorder = new LeftBorder(),\r\n        RightBorder = new RightBorder(),\r\n        TopBorder = new TopBorder(),\r\n        BottomBorder = new BottomBorder(),\r\n        DiagonalBorder = new DiagonalBorder()\r\n    };\r\n    borders.Append(border);\r\n    borders.Count = (uint) borders.ChildElements.Count;\r\n\r\n    var cellStyleFormats = new CellStyleFormats();\r\n    var defaultCellFormat = new CellFormat\r\n    {\r\n        NumberFormatId = 0,\r\n        FontId = 0,\r\n        FillId = 0,\r\n        BorderId = 0\r\n    };\r\n    cellStyleFormats.Append(defaultCellFormat);\r\n    cellStyleFormats.Count = (uint) cellStyleFormats.ChildElements.Count;\r\n\r\n    var numberingFormats = new NumberingFormats();\r\n    //Style with bug\r\n    var nFormat2Decimal = new NumberingFormat\r\n    {\r\n        NumberFormatId = 1U,\r\n        FormatCode = StringValue.FromString(\"0.####\")\r\n    };\r\n    numberingFormats.Append(nFormat2Decimal);\r\n\r\n    var cellFormats = new CellFormats();\r\n    defaultCellFormat = new CellFormat\r\n    {\r\n        NumberFormatId = 0,\r\n        FontId = 0,\r\n        FillId = 0,\r\n        BorderId = 0,\r\n        FormatId = 0\r\n    };\r\n    cellFormats.Append(defaultCellFormat);\r\n\r\n    var timeDoubleCellFormat = new CellFormat\r\n    {\r\n        FontId = 0,\r\n        FillId = 0,\r\n        BorderId = 0,\r\n        FormatId = 1U,\r\n        NumberFormatId = 1U,\r\n        ApplyNumberFormat = true\r\n    };\r\n    cellFormats.Append(timeDoubleCellFormat);\r\n\r\n    var cellStyles = new CellStyles();\r\n    var cellStyle = new CellStyle\r\n    {\r\n        Name = \"Normal\",\r\n        FormatId = 0,\r\n        BuiltinId = 0\r\n    };\r\n    cellStyles.Append(cellStyle);\r\n    cellStyles.Count = (uint) cellStyles.ChildElements.Count;\r\n\r\n    var differentialFormats = new DifferentialFormats {Count = 0};\r\n\r\n    var tableStyles = new TableStyles\r\n    {\r\n        Count = 0,\r\n        DefaultTableStyle = \"TableStyleMedium9\",\r\n        DefaultPivotStyle = \"PivotStyleLight16\"\r\n    };\r\n\r\n    stylesheet.Append(numberingFormats);\r\n    stylesheet.Append(fonts);\r\n    stylesheet.Append(fills);\r\n    stylesheet.Append(borders);\r\n    stylesheet.Append(cellStyleFormats);\r\n    stylesheet.Append(cellFormats);\r\n    stylesheet.Append(cellStyles);\r\n    stylesheet.Append(differentialFormats);\r\n    stylesheet.Append(tableStyles);\r\n\r\n    stylesPart.Stylesheet = stylesheet;\r\n    stylesPart.Stylesheet.Save();\r\n}\r\n``` \r\nSorry for long style definition, it seems it all is mandatory.\r\n\r\n**Observed**\r\n\r\n![CurrentResult](https://user-images.githubusercontent.com/9616488/48188153-1d1a0980-e34e-11e8-97f4-7947a9b31a4c.jpg)\r\n\r\n**Expected**\r\n\r\n![ExpectedResult](https://user-images.githubusercontent.com/9616488/48188500-f3151700-e34e-11e8-874b-ab63b508de1e.PNG)\r\n"},{"Id":"8527901501","Type":"PullRequestEvent","CreatedAt":"2018-11-02T21:09:51","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/526","RelatedDescription":"Merged pull request \"Merge from master into Office2016\" (#526) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"8526849098","Type":"PullRequestEvent","CreatedAt":"2018-11-02T17:34:32","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/526","RelatedDescription":"Opened pull request \"Merge from master into Office2016\" (#526) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"8586337813","Type":"IssuesEvent","CreatedAt":"2018-11-14T07:54:55","Actor":"RachelBook3215","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/260","RelatedDescription":"Opened issue \"ConvertToHtml - docx convert to html without ContentControls\" (#260) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I try to convert docx to html using OpenXmlPowerTools. The .docx file has ContentControls, but the problem is that the content controls moves only with the text, instead of placeholder at the HTML file. \r\nI try to use 'SimplifyMarkupSettings' with the parameter 'RemoveContentControls' set to false, but it is doesn't work.\r\nSee at the code below.\r\n`SimplifyMarkupSettings tabSettings = new SimplifyMarkupSettings\r\n                    {\r\n                        RemoveComments = false,\r\n                        RemoveContentControls = false,\r\n                        RemoveMarkupForDocumentComparison = false,\r\n                        RemoveEndAndFootNotes = false,\r\n                        RemoveFieldCodes = false,\r\n                        RemoveLastRenderedPageBreak = false,\r\n                        RemovePermissions = false,\r\n                        RemoveProof = false,\r\n                        RemoveRsidInfo = false,\r\n                        RemoveSmartTags = false,\r\n                        RemoveSoftHyphens = false,\r\n                        ReplaceTabsWithSpaces = true,\r\n                    };`\r\n\r\n\r\n`"},{"Id":"8514862571","Type":"PullRequestEvent","CreatedAt":"2018-10-31T19:49:13","Actor":"tomjebo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/255","RelatedDescription":"Merged pull request \"Refactor WmlComparer\" (#255) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"This commit refactors the `WmlComparer`, putting classes into their own files and splitting the very large `WmlComparer` class into multiple partial classes. If further fixes many (but not all) issues flagged by\r\nstatic code analysis.\r\n\r\nFor easier reference, the existing `WmlComparer` class is temporarily retained in the `OpenXmlPowerTools.Previous` namespace. For organizational purposes, the refactored version is stored in the`Comparer` folder, which does however not create a namespace.\r\n\r\nThe objective of this commit is to not create breaking changes. The one exception is the removal of the internal `WmlComparer.Coalesce` method, which was only invoked in one unit test. This is deemed a left-over from previous rewrites and is thus removed. The unit test is commented out for now.\r\n\r\nThis pull request essentially prepares the `WmlComparer` for future enhancements."}],"ResultType":"GitHubEvent"}},"RunOn":"2018-11-15T05:30:42.3043108Z","RunDurationInMilliseconds":1538}