{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ML.NET 0.6 (Machine Learning .NET)","PublishedOn":"2018-10-09T00:35:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we’re announcing our latest monthly release: ML.NET 0.6! ML.NET is a cross-platform, open source machine learning framework for .NET developers. We want to enable every .NET developer to train...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/08/announcing-ml-net-0-6-machine-learning-net/","RawContent":null},{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":96,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":9,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null},{"Title":"Announcing ‘Machine Learning .NET’ 0.5","PublishedOn":"2018-09-12T18:55:34+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, coinciding with the .NET Conf 2018, we&#8217;re announcing the release of ML.NET 0.5. It’s been a few months already since we released ML.NET 0.1 at //Build 2018, a cross-platform, open source...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-ml-net-0-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 2 and the preview of the Cosmos DB provider and spatial extensions for EF Core","PublishedOn":"2018-09-12T17:04:13+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 2 available, together with a preview of our data provider for Cosmos DB and new spatial extensions for our SQL Server and in-memory providers. Obtaining the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-entity-framework-core-2-2-preview-2/","RawContent":null},{"Title":"A (Belated) Welcome to C# 7.3","PublishedOn":"2018-09-12T17:00:52+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"A (Belated) Welcome to C# 7.3 Better late than never! Some of you may have noticed that C# 7.3 already shipped, back in Visual Studio 2017 update 15.7. Some of you may even be using the features...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/a-belated-welcome-to-c-7-3/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"},{"Id":"8247970519","Type":"IssuesEvent","CreatedAt":"2018-09-11T17:00:56","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](***TDB***).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n"},{"Id":"8220412616","Type":"IssuesEvent","CreatedAt":"2018-09-05T20:56:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Opened issue \".NET Core Runtime ARM64 Status\" (#82) at dotnet/announcements","RelatedBody":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\n## Current Status\r\n\r\nARM64 is currently broken in .NET Core 3.0 builds. See:\r\n\r\n* [dotnet/coreclr #19805](https://github.com/dotnet/coreclr/issues/19805)\r\n* [dotnet/coreclr #19822](https://github.com/dotnet/coreclr/issues/19822)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8388213677","Type":"PullRequestEvent","CreatedAt":"2018-10-09T05:09:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20311","RelatedDescription":"Closed pull request \"Update BuildTools, CoreFx, CoreSetup to preview1-03308-01, preview1-27009-02, preview1-27008-04, respectively (master)\" (#20311) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"8388211169","Type":"PullRequestEvent","CreatedAt":"2018-10-09T05:08:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20315","RelatedDescription":"Merged pull request \"Disabled outdates corefx test\" (#20315) at dotnet/coreclr","RelatedBody":""},{"Id":"8387998734","Type":"PullRequestEvent","CreatedAt":"2018-10-09T03:46:29","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20298","RelatedDescription":"Merged pull request \"Remove mentions of Rotor from codebase\" (#20298) at dotnet/coreclr","RelatedBody":"Many references to Rotor in this codebase are confusing, as they tend to contrast Rotor's behavior with .NET Framework (neither of which matches CoreCLR) or reference compatibility problems with 15 year old compilers.\r\n\r\nThis series of commits should remove all mentions rotor from the codebase, except from the many non-compiling PAL tests. Many of them reflect a time when the PAL was built as a shared library, so once they are cleaned up they will be purged of the reference to `librotor_pal`.\r\n\r\nFixes #9872"},{"Id":"8387998714","Type":"IssuesEvent","CreatedAt":"2018-10-09T03:46:29","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/9872","RelatedDescription":"Closed issue \"[Question] Mentions of 'Rotor' in the source code\" (#9872) at dotnet/coreclr","RelatedBody":"I don't know if it matters or not, but there's a few mentions of ['Rotor' in the source](https://github.com/dotnet/coreclr/search?q=Rotor&utf8=%E2%9C%93), mostly under `\\src\\pal\\`, `\\src\\inc\\` and `\\src\\vm\\`. \r\n\r\nShould they be updated/removed or just left in there for historical reasons?"},{"Id":"8387843053","Type":"PullRequestEvent","CreatedAt":"2018-10-09T02:51:39","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20315","RelatedDescription":"Opened pull request \"Disabled outdates corefx test\" (#20315) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8388249643","Type":"PullRequestEvent","CreatedAt":"2018-10-09T05:22:59","Actor":"smadala","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10127","RelatedDescription":"Opened pull request \"Insert testplatform 15.9 RTM\" (#10127) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"8387802251","Type":"PullRequestEvent","CreatedAt":"2018-10-09T02:37:29","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10126","RelatedDescription":"Opened pull request \"Update aspnet, aspnet, aspnet, aspnet, aspnet, aspnet, aspnet, aspnet, aspnet, coresetup, sdk, templating, templating, websdk to preview3-35429, preview3-35429, preview3-35429, preview3-35429, preview3-35429, preview3-35429, preview3-35429, preview3-35429, preview3-35429, preview3-27008-03, preview3-63408-02, beta4-20181007-2096585, beta4-20181007-2096585, preview3-20181007-2096581, respectively (release/2.2.1xx)\" (#10126) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"8387643866","Type":"IssuesEvent","CreatedAt":"2018-10-09T01:41:42","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10125","RelatedDescription":"Opened issue \"Enable targeting .NET Core 2.2 from 3.0 SDK\" (#10125) at dotnet/cli","RelatedBody":".NET Core 2.2 and 3.0 are both currently under development.  Normally, we use the version of the runtime inserted into the SDK to determine what preview version to use for the implicit package references to frameworks that are under development.  We don't have a straightforward way to do this since we don't insert the 2.2 runtime into the 3.0 SDK.\r\n\r\nSo for now, the 3.0 SDK won't support targeting .NET Core 2.2.  When .NET Core 2.2 is released, then we will need to update core-sdk to include an ImplicitPackageVariable for .NET Core 2.2 (and the ASP.NET packages) in the BundledVersions.props file."},{"Id":"8387598762","Type":"IssuesEvent","CreatedAt":"2018-10-09T01:25:13","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10124","RelatedDescription":"Opened issue \"Support versionless PackageReference for AspNetCore when targeting .NET Core 3.0\" (#10124) at dotnet/cli","RelatedBody":"In .NET Core 3.0, the syntax for depending on the ASP.NET Core shared framework is:\r\n\r\n```\r\n<FrameworkReference Include=\"Microsoft.AspNetCore\" />\r\n```\r\n\r\nIn .NET Core 2.1 and 2.2, a versionless `PackageReference` is used instead:\r\n\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n```\r\n\r\nIn order to support retargeting 2.x apps to 3.0, we should also support the `PackageReference` syntax  when targeting 3.0.  We might also want a warning or info message suggesting a change to the newer syntax."},{"Id":"8387561632","Type":"IssuesEvent","CreatedAt":"2018-10-09T01:11:35","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10123","RelatedDescription":"Opened issue \"Enable implicit versions tests in core-sdk master branch\" (#10123) at dotnet/cli","RelatedBody":"I'm merging the [implicit ASP.NET PackageVersion support](https://github.com/dotnet/sdk/pull/2533) from our 2.2 branches into master.  The end-to-end scenario requires logic that lives in dotnet/sdk, as well as the correct entries in the BundledVersions.props file, which for the master branch is generated in dotnet/core-sdk.\r\n\r\nBecause of this repo split, I am going to disable the implicit versions tests in core-sdk, until we can insert the dotnet/sdk code that correctly consumes the items from the bundled versions file."},{"Id":"8387532166","Type":"IssuesEvent","CreatedAt":"2018-10-09T01:00:06","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10119","RelatedDescription":"Closed issue \"Publish self-contained solution without replicating all files\" (#10119) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nRun `dotnet publish -c release -r linux-x64 -o testExport` on a solution folder (a folder with inside a .sln file and folders for each project in the solution)\r\n\r\n## Expected  behavior\r\nIt would be better if it creates a single folder with all the common files (e.g. the dotnet framework) and the compiled projects. It can reduce a lot the space used on disk.\r\nNow I have a solution with 6 project inside, compiling with portable options each project is like 2MB, while compiling with self-contained each project is like 100MB, but most of the files across the different projects are redundant\r\n\r\n## Actual behavior\r\nIt creates inside each project a folder named \"testExport\" with the self-contained export. So each folder now contains a copy of all (or maybe just the part used) of dotnet framework\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (che rispecchia un qualsiasi file global.json):\r\n Version:   2.1.402\r\n Commit:    3599f217f4\r\n\r\nAmbiente di runtime:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.4\r\n  Commit:  85255dde3e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8387522477","Type":"IssuesEvent","CreatedAt":"2018-10-09T00:56:22","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10118","RelatedDescription":"Closed issue \"Add fsi tool\" (#10118) at dotnet/cli","RelatedBody":"Currently in order to use fsi, we have to install Visual Studio. Why not integrate fsi into dotnet cli as a tool?\r\n\r\nThen we can use:\r\n```\r\n> dotnet fsi\r\n\r\nMicrosoft (R) F# Interactive version 10.2.3 for F# 4.5\r\nCopyright (c) Microsoft Corporation. All Rights Reserved.\r\n\r\nFor help type #help;;\r\n\r\n>\r\n```"},{"Id":"8387345461","Type":"IssuesEvent","CreatedAt":"2018-10-08T23:51:30","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10112","RelatedDescription":"Closed issue \"Dotnet tool ef, showing error when installed in the same version\" (#10112) at dotnet/cli","RelatedBody":"Moved from https://github.com/aspnet/EntityFrameworkCore/issues/13505 filed by @alanrezendee\r\n\r\nOperating system used:\r\nArchLinux\r\n\r\nDotnet version that presents the error: 2.1.4.\r\nDotnet ef version that presents the error: 2.1.4.\r\n\r\nWhen I run the simple \"dotnet ef\" command, where everything is OK with the tool, I should return for example \"Entity Framework Core .NET Command-line Tools 2.1.2-rtm-30932\", and command-line options of the tool, is displaying the error below:\r\n\r\nError message: A Fatal Error occurred, the required library libhostfxr.so could not be found\r\nIf this is a self-contained application, that library should exist in [some path here.\r\nIf this is a framework-dependent application, install the runtime in the default location [default location] or use the DOTNET_ROOT environment variable to specify the runtime location.\r\n\r\nBefore this error I researched a solution that worked for me, but solving the error message reported above, and presenting a new error as per message below, when again running the \"dotnet ef\" command. Since then I have researched various solutions and none have satisfied my need. Considering this context I was able to make a solution of my own by installing a smaller version of the tool dotnet ef, and this way it worked.\r\n\r\nError Message: It was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.1.5' was not found.\r\n - Check application dependencies and target a framework version installed at:\r\n     / opt / dotnet\r\n - Installing .NET Core prerequisites might help solve this problem:\r\n     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n - The .NET Framework and SDK can be installed from:\r\n     https://aka.ms/dotnet-download\r\n - The following versions are installed:\r\n     2.1.4 at [/opt/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nMy doubts are as follows:\r\nWhy does dotnet version 2.1.4 and dotnet ef 2.1.3 work, and does it not work with the same 2.1.4 versions?"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8383703497","Type":"PullRequestEvent","CreatedAt":"2018-10-08T12:00:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/894","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181007.1 of https://github.com/dotnet/arcade\" (#894) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18507.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18507.1.symbols.nupkg - 2.2.0-beta.18507.1\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18507.1.symbols.nupkg - 2.4.0-beta.18507.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18507.1\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18507.1\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18507.1\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18507.1\n- Microsoft.DotNet.Darc - 1.0.0-beta.18507.1\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18507.1\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18507.1\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18507.1\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18507.1"},{"Id":"8380208806","Type":"PullRequestEvent","CreatedAt":"2018-10-07T12:26:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/893","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181006.1 of https://github.com/dotnet/arcade\" (#893) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18506.1.symbols.nupkg - 2.2.0-beta.18506.1\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18506.1.symbols.nupkg - 2.4.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18506.1\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18506.1\n- Microsoft.DotNet.Darc - 1.0.0-beta.18506.1\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18506.1\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18506.1"},{"Id":"8380168527","Type":"PullRequestEvent","CreatedAt":"2018-10-07T12:01:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/893","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181006.1 of https://github.com/dotnet/arcade\" (#893) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18506.1.symbols.nupkg - 2.2.0-beta.18506.1\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18506.1.symbols.nupkg - 2.4.0-beta.18506.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18506.1.symbols.nupkg - 1.0.0-beta.18506.1\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18506.1\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18506.1\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18506.1\n- Microsoft.DotNet.Darc - 1.0.0-beta.18506.1\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18506.1\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18506.1\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18506.1\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18506.1"},{"Id":"8378261915","Type":"PullRequestEvent","CreatedAt":"2018-10-06T12:20:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/892","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181005.7 of https://github.com/dotnet/arcade\" (#892) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18505.7.symbols.nupkg - 2.2.0-beta.18505.7\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18505.7.symbols.nupkg - 2.4.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18505.7\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18505.7\n- Microsoft.DotNet.Darc - 1.0.0-beta.18505.7\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18505.7\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18505.7"},{"Id":"8378234298","Type":"PullRequestEvent","CreatedAt":"2018-10-06T12:00:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/892","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181005.7 of https://github.com/dotnet/arcade\" (#892) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18505.7.symbols.nupkg - 2.2.0-beta.18505.7\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18505.7.symbols.nupkg - 2.4.0-beta.18505.7\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18505.7.symbols.nupkg - 1.0.0-beta.18505.7\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18505.7\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18505.7\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18505.7\n- Microsoft.DotNet.Darc - 1.0.0-beta.18505.7\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18505.7\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18505.7\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18505.7\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18505.7"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8388236194","Type":"PullRequestEvent","CreatedAt":"2018-10-09T05:18:01","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32712","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27009-00, beta-27009-00, respectively (master)\" (#32712) at dotnet/corefx","RelatedBody":""},{"Id":"8388218851","Type":"PullRequestEvent","CreatedAt":"2018-10-09T05:11:24","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32693","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup, ProjectNTfs, ProjectNTfsTestILC to preview1-03308-01, preview1-27008-04, preview1-27009-02, preview1-27008-04, beta-27008-00, beta-27008-00, respectively (master)\" (#32693) at dotnet/corefx","RelatedBody":""},{"Id":"8388218002","Type":"PullRequestEvent","CreatedAt":"2018-10-09T05:11:05","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32700","RelatedDescription":"Merged pull request \"Improve corefx test coverage for exception types\" (#32700) at dotnet/corefx","RelatedBody":"Contributes to dotnet/coreclr#12782"},{"Id":"8387885602","Type":"IssuesEvent","CreatedAt":"2018-10-09T03:05:54","Actor":"knocte","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32711","RelatedDescription":"Opened issue \"Possible race condition in (System.Memory's)System.Buffers.BufferExtensions.PositionOf causes ArgumentOutOfRangeException\" (#32711) at dotnet/corefx","RelatedBody":"I have a System.IO.Pipelines-based TCP client written [here](https://gitlab.com/DiginexGlobal/geewallet/blob/master/src/GWallet.Backend/JsonRpcSharp.fs#L19).\r\n\r\nThe client works normally in RELEASE mode and when running under integration tests. However I have found that under certain slower conditions (debugging in an Android phone), an exception happens in `System.Buffers.BufferExtensions.PositionOf`:\r\n\r\n```\r\nSystem.AggregateException: One or more errors occurred. ---> System.AggregateException: One or more errors occurred. ---> System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\r\nParameter name: start\r\n  at System.ThrowHelper.ThrowArgumentOutOfRangeException (System.ExceptionArgument argument) [0x00006] in <f6dad3dbe4c6408e8a0f6ade27956b1c>:0\r\n  at System.ReadOnlyMemory`1[T].Slice (System.Int32 start, System.Int32 length) [0x0001e] in <f6dad3dbe4c6408e8a0f6ade27956b1c>:0\r\n  at System.Buffers.ReadOnlySequence`1[T].GetFirstBuffer () [0x00065] in <f6dad3dbe4c6408e8a0f6ade27956b1c>:0\r\n  at System.Buffers.ReadOnlySequence`1[T].get_First () [0x00000] in <f6dad3dbe4c6408e8a0f6ade27956b1c>:0\r\n  at System.Buffers.BuffersExtensions.PositionOf[T] (System.Buffers.ReadOnlySequence`1[T]& source, T value) [0x00008] in <f6dad3dbe4c6408e8a0f6ade27956b1c>:0\r\n  at GWallet.Backend.JsonRpcSharp+keepAdvancingPosition@56.Invoke (System.Buffers.ReadOnlySequence`1[T] buffer) [0x00000] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/JsonRpcSharp.fs:57\r\n  at GWallet.Backend.JsonRpcSharp+clo@54-2.Invoke (System.IO.Pipelines.ReadResult _arg1) [0x00014] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/JsonRpcSharp.fs:63\r\n  at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvokeNoHijackCheck[a,b] (Microsoft.FSharp.Control.AsyncActivation`1[T] ctxt, Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] userCode, b result1) [0x00005] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncPrimitives+continuation@974-1[T].Invoke (Microsoft.FSharp.Core.Unit unitVar0) [0x000ad] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.Trampoline.Execute (Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] firstAction) [0x00020] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncResult`1[T].Commit () [0x0002c] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at <StartupCode$FSharp-Core>.$Async+AwaitAndBindChildResult@1484-3[T].Invoke (System.Boolean _arg3) [0x0000f] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvokeNoHijackCheck[a,b] (Microsoft.FSharp.Control.AsyncActivation`1[T] ctxt, Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] userCode, b result1) [0x00005] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at <StartupCode$FSharp-Core>.$Async+AwaitWaitHandle@1426-4.Invoke (Microsoft.FSharp.Core.Unit unitVar0) [0x00000] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.Trampoline.Execute (Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] firstAction) [0x00020] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at <StartupCode$GWallet-Backend-NetStandard>.$FaultTolerantParallelClient+clo@126-60[E,T,R].Invoke (System.Exception _arg2) [0x000dd] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/FaultTolerantParallelClient.fs:132\r\n  at <StartupCode$GWallet-Backend-NetStandard>.$FaultTolerantParallelClient+clo@126-66[E,T,R].Invoke (System.Exception exn) [0x00000] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/FaultTolerantParallelClient.fs:126\r\n  at <StartupCode$GWallet-Backend-NetStandard>.$FaultTolerantParallelClient+clo@126-68[E,T,R].Invoke (System.Exception edi) [0x00000] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/FaultTolerantParallelClient.fs:126\r\n  at Microsoft.FSharp.Control.AsyncPrimitives.CallFilterThenInvoke[T] (Microsoft.FSharp.Control.AsyncActivation`1[T] ctxt, Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] catchFilter, System.Runtime.ExceptionServices.ExceptionDispatchInfo edi) [0x0000c] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncPrimitives+TryWith@526[T].Invoke (System.Runtime.ExceptionServices.ExceptionDispatchInfo edi) [0x0002a] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at <StartupCode$FSharp-Core>.$Async+Execute@128.Invoke (Microsoft.FSharp.Core.Unit unitVar0) [0x00000] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.Trampoline.Execute (Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] firstAction) [0x00020] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  --- End of inner exception stack trace ---\r\n  at System.Threading.Tasks.Task.ThrowIfExceptional (System.Boolean includeTaskCanceledExceptions) [0x00011] in <4d6eb5dfe2ab4eee884ef920069afd5f>:0\r\n  at System.Threading.Tasks.Task`1[TResult].GetResultCore (System.Boolean waitCompletionNotification) [0x0002b] in <4d6eb5dfe2ab4eee884ef920069afd5f>:0\r\n  at System.Threading.Tasks.Task`1[TResult].get_Result () [0x0000f] in <4d6eb5dfe2ab4eee884ef920069afd5f>:0\r\n  at <StartupCode$GWallet-Backend-NetStandard>.$FaultTolerantParallelClient+clo@73-51[E,R,T].Invoke (System.Threading.Tasks.Task`1[TResult] _arg1) [0x00002] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/FaultTolerantParallelClient.fs:73\r\n  at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvokeNoHijackCheck[a,b] (Microsoft.FSharp.Control.AsyncActivation`1[T] ctxt, Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] userCode, b result1) [0x00005] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncPrimitives+Bind@495-1[TResult,T].Invoke (TResult result1) [0x00000] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncPrimitives+continuation@974-1[T].Invoke (Microsoft.FSharp.Core.Unit unitVar0) [0x000ad] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.Trampoline.Execute (Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] firstAction) [0x00020] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at GWallet.Backend.FSharpUtil.ReRaise (System.Exception ex) [0x00000] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/FSharpUtil.fs:20\r\n  at GWallet.Backend.Account+GetBalanceFromServer@27-5.Invoke (System.Exception _arg2) [0x00028] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/Account.fs:35\r\n  at GWallet.Backend.Account+GetBalanceFromServer@27-8.Invoke (System.Exception exn) [0x00000] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/Account.fs:27\r\n  at GWallet.Backend.Account+GetBalanceFromServer@27-10.Invoke (System.Exception edi) [0x00000] in /Users/andres/Documents/Code/gwalletFRONTEND/src/GWallet.Backend/Account.fs:27\r\n  at Microsoft.FSharp.Control.AsyncPrimitives.CallFilterThenInvoke[T] (Microsoft.FSharp.Control.AsyncActivation`1[T] ctxt, Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] catchFilter, System.Runtime.ExceptionServices.ExceptionDispatchInfo edi) [0x0000c] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.AsyncPrimitives+TryWith@526[T].Invoke (System.Runtime.ExceptionServices.ExceptionDispatchInfo edi) [0x0002a] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at <StartupCode$FSharp-Core>.$Async+Execute@128.Invoke (Microsoft.FSharp.Core.Unit unitVar0) [0x00000] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  at Microsoft.FSharp.Control.Trampoline.Execute (Microsoft.FSharp.Core.FSharpFunc`2[T,TResult] firstAction) [0x00020] in <5b5a6dc5904cf4daa7450383c56d5a5b>:0\r\n  --- End of inner exception stack trace ---\r\n```\r\n\r\nThe area of the code where this happens is:\r\n\r\n```\r\n        let rec ReadPipeInternal (reader: PipeReader) (stringBuilder: StringBuilder) = async {\r\n            let processLine (line:ReadOnlySequence<byte>) =\r\n                line |> GetAsciiString |> stringBuilder.AppendLine |> ignore\r\n\r\n            let rec keepAdvancingPosition buffer =\r\n                // How to call a ref extension method using extension syntax?\r\n                let maybePosition = System.Buffers.BuffersExtensions.PositionOf(ref buffer, byte '\\n')\r\n                                    |> Option.ofNullable\r\n                match maybePosition with\r\n                | None ->\r\n                    ()\r\n                | Some pos ->\r\n                    buffer.Slice(0, pos)\r\n                    |> processLine\r\n                    let nextBuffer = buffer.GetPosition(1L, pos)\r\n                                     |> buffer.Slice\r\n                    keepAdvancingPosition nextBuffer\r\n\r\n            let! result = (reader.ReadAsync().AsTask() |> Async.AwaitTask)\r\n\r\n            keepAdvancingPosition result.Buffer\r\n            reader.AdvanceTo(result.Buffer.Start, result.Buffer.End)\r\n            if not result.IsCompleted then\r\n                return! ReadPipeInternal reader stringBuilder\r\n            else\r\n                return stringBuilder.ToString()\r\n        }\r\n```\r\n\r\nI've tried to guard the call to PositionOf by calling buffer.IsEmpty first (to not call PositionOf in case it's empty), but this results in a NullReferenceException (which is surprising given that buffer is of a struct type, so can't be null)."},{"Id":"8387822094","Type":"IssuesEvent","CreatedAt":"2018-10-09T02:44:21","Actor":"dmklementiev","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32710","RelatedDescription":"Opened issue \"Multiple test failures : /System.Security.Cryptography.Algorithms/tests/AesCcmTests.cs \" (#32710) at dotnet/corefx","RelatedBody":"Note that the failure occurs on Arm64 only!\r\n\r\nThe test: https://github.com/dmklementiev/corefx/blob/master/src/System.Security.Cryptography.Algorithms/tests/AesCcmTests.cs has failed 37 times (details here https://mc.dot.net/#/user/dmklementiev/pr~2Fjenkins~2Fdotnet~2Fcorefx~2Fmaster~2F/test~2Ffunctional~2Fcli~2F/f8e7a02f30f1062cd70104bbf1a364e8acedb3bd/workItem/System.Security.Cryptography.Algorithms.Tests) with the following details:\r\n\r\nUnhandled Exception of Type Xunit.Sdk.EqualException\r\nMessage :\r\nAssert.Equal() Failure\r\nExpected: Byte[] [0, 0, 0, 0, 0, ...]\r\nActual:   Byte[] [163, 189, 216, 244, 17, ...]\r\nStack Trace :\r\n   at System.Security.Cryptography.Algorithms.Tests.AesCcmTests.AesCcmNistTestsTamperCiphertext(AEADTest testCase) in /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Release+AGroup_arm64+TestOuter_false_prtest/src/System.Security.Cryptography.Algorithms/tests/AesCcmTests.cs:line 381\r\n\r\nSimilar failures happened for the same StackTrace for different Actual:   Byte[] values.  Just a few for example:\r\nActual:   Byte[] [43, 61, 80, 100, 121, ...]\r\nActual:   Byte[] [221, 239, 2, 22, 43, ...]\r\nActual:   Byte[] [213, 231, 250, 14, 35, ...]\r\n\r\nThe same at Stack Trace:\r\n\r\n   at System.Security.Cryptography.Algorithms.Tests.AesCcmTests.AesCcmNistTestsTamperTag(AEADTest testCase) in /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Release+AGroup_arm64+TestOuter_false_prtest/src/System.Security.Cryptography.Algorithms/tests/AesCcmTests.cs:line 359\r\n\r\nThe same at Stack Trace:\r\n\r\n   at System.Security.Cryptography.Algorithms.Tests.AesCcmTests.InplaceEncryptTamperTagDecrypt() in /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Release+AGroup_arm64+TestOuter_false_prtest/src/System.Security.Cryptography.Algorithms/tests/AesCcmTests.cs:line 319"},{"Id":"8387692056","Type":"PullRequestEvent","CreatedAt":"2018-10-09T01:59:38","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32702","RelatedDescription":"Merged pull request \"Disable problematic Linq.Parallel test.\" (#32702) at dotnet/corefx","RelatedBody":"This test has been [consistently failing](https://mc.dot.net/#/product/netcore/30/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20181008.01/workItem/System.Linq.Parallel.Tests/analysis/xunit/System.Linq.Parallel.Tests.ParallelQueryCombinationTests~2FSequenceEqual_OperationCanceledException(operation:%20Union-Right)) on RedHat 6.9 in the daily runs.\r\n\r\nI'm going to disable it for now, until @tarekgh gets a chance to take a look at the issue.\r\n\r\nThe failure is tracked in issue #21876."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8388035980","Type":"PullRequestEvent","CreatedAt":"2018-10-09T04:00:04","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30388","RelatedDescription":"Merged pull request \"Merge dev16.0.x to dev16.0.x-vs-deps\" (#30388) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into dev16.0.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-dev16.0.x-vs-deps\ngit reset --hard upstream/dev16.0.x-vs-deps\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-dev16.0.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8387850302","Type":"IssuesEvent","CreatedAt":"2018-10-09T02:54:12","Actor":"ericmutta","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/30390","RelatedDescription":"Opened issue \"VB: Multiple refactoring providers crash when invoking rename refactoring on lambda parameter.\" (#30390) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nVisual Studio Community 2017 v15.8.5\r\n\r\n**Steps to Reproduce**:\r\n\r\nType in the following code:\r\n\r\n```vb\r\nPublic Module Module1\r\n  Public Sub Run(ArgAction As Func(Of String, Integer))\r\n  End Sub\r\n\r\n  Public Sub Main()\r\n    Run(Function(foo) foo.Length)\r\n  End Sub\r\nEnd Module\r\n```\r\n\r\nNext we want to rename the parameter `foo` in the lambda function passed in the call to `Run(...)` so it becomes `food`. Put the caret at the end of `foo` add the `d`. The rename tracking rectangle is activated and the lightbulb is shown:\r\n\r\n![vs_rename_crash_1](https://user-images.githubusercontent.com/20465797/46643695-e5207a80-cb85-11e8-9740-dc989b8727f8.png)\r\n\r\nIf you click the lightbulb (or use the keyboard shortcut) to show the code actions menu, the menu is shown after a brief pause and two refactoring code providers crash immediately:\r\n\r\n![vs_rename_crash_2](https://user-images.githubusercontent.com/20465797/46643777-37fa3200-cb86-11e8-8200-ba564fd7a8ab.png)\r\n\r\nThe stack trace for `VisualBasicAddParameterCheckCodeRefactoringProvider` is:\r\n\r\n```\r\nSystem.InvalidCastException : Unable to cast object of type 'LazyNoneOperation' to type 'Microsoft.CodeAnalysis.Operations.IBlockOperation'.\r\n   at Microsoft.CodeAnalysis.VisualBasic.InitializeParameter.InitializeParameterHelpers.GetBlockOperation(SyntaxNode functionDeclaration,SemanticModel semanticModel,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.VisualBasic.InitializeParameter.VisualBasicAddParameterCheckCodeRefactoringProvider.GetBlockOperation(SyntaxNode functionDeclaration,SemanticModel semanticModel,CancellationToken cancellationToken)\r\n   at async Microsoft.CodeAnalysis.InitializeParameter.AbstractInitializeParameterCodeRefactoringProvider`3.ComputeRefactoringsAsync[TParameterSyntax,TStatementSyntax,TExpressionSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\n...and the stack trace for `VisualBasicInitializeMemberFromParameterCodeRefactoringProvider` is:\r\n\r\n```\r\nSystem.InvalidCastException : Unable to cast object of type 'LazyNoneOperation' to type 'Microsoft.CodeAnalysis.Operations.IBlockOperation'.\r\n   at Microsoft.CodeAnalysis.VisualBasic.InitializeParameter.InitializeParameterHelpers.GetBlockOperation(SyntaxNode functionDeclaration,SemanticModel semanticModel,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.VisualBasic.InitializeParameter.VisualBasicInitializeMemberFromParameterCodeRefactoringProvider.GetBlockOperation(SyntaxNode functionDeclaration,SemanticModel semanticModel,CancellationToken cancellationToken)\r\n   at async Microsoft.CodeAnalysis.InitializeParameter.AbstractInitializeParameterCodeRefactoringProvider`3.ComputeRefactoringsAsync[TParameterSyntax,TStatementSyntax,TExpressionSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe rename operation can be completed without a problem and nothing fatal happens, but it would be great if code providers not related to the rename operation did not crash. Looking at the above stack traces, the culprit seems to be the same function:\r\n\r\n```\r\nMicrosoft.CodeAnalysis.VisualBasic.InitializeParameter.InitializeParameterHelpers.GetBlockOperation()\r\n```"},{"Id":"8387757458","Type":"IssuesEvent","CreatedAt":"2018-10-09T02:22:44","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/30378","RelatedDescription":"Closed issue \"Crash in VS Editor when viewing interpolated string with format specifiers\" (#30378) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open a source file containing the following line of code:\r\n```csharp\r\nvar filename = $\"{generation:000}-{index:0000}{ext}\";\r\n```\r\n\r\n**Expected Behavior**:\r\nView source code with syntax highlighting.\r\n\r\n**Actual Behavior**:\r\n\r\nVS crashes and restarts.\r\n\r\nCrashes at this location: https://github.com/dotnet/roslyn/blob/fe80f83075d723eddd6e26582c75f27f242c69c4/src/Workspaces/CSharp/Portable/EmbeddedLanguages/VirtualChars/CSharpVirtualCharService.cs#L53\r\n\r\nStack:\r\n```\r\nModLoad: 25570000 25575000   C:\\WINDOWS\\assembly\\NativeImages_v4.0.30319_32\\System.Diagaa8d7fa5#\\75439711865fc400acd68387b8b053b4\\System.Diagnostics.Debug.ni.dll\r\nCLR: Managed code called FailFast, saying \"System.InvalidCastException: Unable to cast object of type 'Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax' to type 'Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax'.\r\n   at Microsoft.CodeAnalysis.CSharp.EmbeddedLanguages.VirtualChars.CSharpVirtualCharService.TryConvertToVirtualCharsWorker(SyntaxToken token)\r\n   at Microsoft.CodeAnalysis.EmbeddedLanguages.VirtualChars.AbstractVirtualCharService.TryConvertToVirtualChars(SyntaxToken token)\r\n   at Microsoft.CodeAnalysis.EmbeddedLanguages.LanguageServices.FallbackEmbeddedLanguage.FallbackSyntaxClassifier.AddClassifications(Workspace workspace, SyntaxToken token, SemanticModel semanticModel, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.Classifiers.AbstractEmbeddedLanguagesClassifier.AddClassifications(Workspace workspace, SyntaxToken token, SemanticModel semanticModel, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ClassifyToken(SyntaxToken syntax)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ProcessNodes()\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.Classify(Workspace workspace, SemanticModel semanticModel, TextSpan textSpan, ArrayBuilder`1 list, Func`2 getNodeClassifiers, Func`2 getTokenClassifiers, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.<AddSemanticClassificationsAsync>d__5.MoveNext()\"\r\n```"},{"Id":"8387696385","Type":"IssuesEvent","CreatedAt":"2018-10-09T02:01:03","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/27703","RelatedDescription":"Closed issue \"Possibly wrong `span1.Contains(span2)` \"order\"\" (#27703) at dotnet/roslyn","RelatedBody":"On VSfM sometimes using `ICodeFixService` returns wrong list of code fixes if code changed recently(last ~1sec). I debugged what is happening and my conclusion is that most likely problem is at https://github.com/dotnet/roslyn/blob/9e79136/src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.Executor.cs#L604\r\nWhat we do from VSfM code, we call `ICodeFixService.GetFixesAsync()` and we use `span` and we put cursor position as `span` so something like `(193,193)` and there is diagnostic at `(190,200)` for `CS0103`(The name XXX does not exist in current context). Which will later be used to produce `Add using ...` or `Generate XXX`...  fixes.\r\nBut this doesn't not happen because https://github.com/dotnet/roslyn/blob/9e79136/src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.Executor.cs#L604 filters this diagnostic out, hence no fixes. Should this `span.Value.Contains(diagnostic.Location.SourceSpan)` be `diagnostic.Location.SourceSpan.Value.Contains(span)`?"},{"Id":"8387696353","Type":"IssuesEvent","CreatedAt":"2018-10-09T02:01:02","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/29371","RelatedDescription":"Closed issue \"`in` arguments crash the compiler when temp stores are required\" (#29371) at dotnet/roslyn","RelatedBody":"When trying to build one of my solution's code libraries, csc.exe exits with errorlevel 0x‭80131623‬, and 'dotnet build shows these stack traces:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error : FailFast: System.InvalidOperationException: Unexpected value '4' of type 'Microsoft.CodeAnalysis.RefKind' [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory.StoreToTemp(BoundExpression argument, BoundAssignmentOperator&amp; store, RefKind refKind, SynthesizedLocalKind kind, SyntaxNode syntaxOpt) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.BuildStoresToTemps(Boolean expanded, ImmutableArray`1 argsToParamsOpt, ImmutableArray`1 parameters, ImmutableArray`1 argumentRefKinds, ImmutableArray`1 rewrittenArguments, Boolean forceLambdaSpilling, BoundExpression[] arguments, ArrayBuilder`1 refKinds, ArrayBuilder`1 storesToTemps) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeArguments(SyntaxNode syntax, ImmutableArray`1 rewrittenArguments, Symbol methodOrIndexer, MethodSymbol optionalParametersMethod, Boolean expanded, ImmutableArray`1 argsToParamsOpt, ImmutableArray`1&amp; argumentRefKindsOpt, ImmutableArray`1&amp; temps, Boolean invokedAsExtensionMethod, ThreeState enableCallerInfo) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitObjectCreationExpression(BoundObjectCreationExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression.Accept(BoundTreeVisitor visitor) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32&amp; recursionDepth, BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Visit(BoundNode node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitObjectCreationExpression(BoundObjectCreationExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression.Accept(BoundTreeVisitor visitor) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32&amp; recursionDepth, BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Visit(BoundNode node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitCall(BoundCall node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundCall.Accept(BoundTreeVisitor visitor) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.400-preview-009171\\Roslyn\\Microsoft.CSharp.Core.targets(52,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32&amp; recursionDepth, BoundExpression node) [E:\\projects\\testframework-wow\\src\\Blizzard.TestFramework.WoW\\Blizzard.TestFramework.WoW.csproj]\r\n...\r\n```\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/306848/unexpected-value-4-of-type-microsoftcodeanalysisre.html\r\nVSTS ticketId: 659932_\r\n_These are the original issue comments:_\r\n\r\nDaniel Hobbs on 8/15/2018, 08:47 AM (2 days ago): I had a similar problem. (Unexpected value '4' of type 'Microsoft.CodeAnalysis.RefKind') I think it may be due to lowering with 'in'. I'm on VS 15.8. Here is a repro.\r\n\r\n```C#\r\npublic readonly struct S\r\n{        \r\n    private static readonly S s_Default = default;        \r\n    public static ref readonly S Default => ref s_Default;\r\n}    \r\npublic class C\r\n{\r\n    public C(in S s, int i = 0)\\{ }    \r\n}    \r\npublic static class Foo \r\n{        \r\n    // Crashes CSC - \"csc.exe\" exited with code -2146232797        \r\n    public static C Instance { get; } = new C(s: in S.Default); // use 'in' and omit optional arg    \r\n}\r\n```\r\n\r\n\r\n_These are the original issue solutions:_\r\n(no solutions)"},{"Id":"8387696289","Type":"IssuesEvent","CreatedAt":"2018-10-09T02:01:00","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24518","RelatedDescription":"Closed issue \"Access control should be implemented in compiler layer, not workspaces layer\" (#24518) at dotnet/roslyn","RelatedBody":"See https://github.com/dotnet/roslyn/blob/master/src/Workspaces/Core/Portable/Shared/Extensions/ISymbolExtensions_Accessibility.cs\r\n\r\nThese language questions (of accessibility) should be implemented in the compiler layer, not the workspaces layer.\r\n\r\nSee https://github.com/dotnet/roslyn/blob/94ab292d2c79b1675de0d6ff0a7361ecfbf20cfb/src/Compilers/CSharp/Portable/Binder/Semantics/AccessCheck.cs for the C# implementation.\r\n\r\nThis is related to https://github.com/dotnet/roslyn/issues/23842, which requests these APIs be publicly available.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8385448480","Type":"PullRequestEvent","CreatedAt":"2018-10-08T16:44:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6433","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6433) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @fiigii"},{"Id":"8385442749","Type":"PullRequestEvent","CreatedAt":"2018-10-08T16:43:13","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6433","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6433) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8383687704","Type":"PullRequestEvent","CreatedAt":"2018-10-08T11:57:46","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6432","RelatedDescription":"Opened pull request \"Fix asm.js struct and alignment issues\" (#6432) at dotnet/corert","RelatedBody":"Asm.js does aligned memory accesses unless forced to do otherwise. This causes occasional memory corruption on various structures that aren't 4-byte aligned (two of which get used in interface dispatch). To handle that, this change:\r\n1. Changes the LLVM representation of managed structs to approximately match the managed representation. This fixes DispatchMapEntry, which is 3 uint16s that can be 2-byte aligned.\r\n2. Annotates an unaligned read used by OptionalFields so the compiler can handle it."},{"Id":"8379546624","Type":"PullRequestEvent","CreatedAt":"2018-10-07T03:29:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6389","RelatedDescription":"Merged pull request \"Add ILC architecture document\" (#6389) at dotnet/corert","RelatedBody":"I've been working on this on and off for a while - I think I have something ready for review.\r\n\r\nThis is a high level architectural overview of CoreRT's native compiler.\r\n\r\n@dotnet-bot skip ci please\r\n\r\nCc @nattress @trylek @zamont @mattwarren "},{"Id":"8379221832","Type":"PullRequestEvent","CreatedAt":"2018-10-06T22:38:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6431","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6431) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @github-john-doe @GrabYourPitchforks @GrabYourPitchforks"},{"Id":"8378782660","Type":"PullRequestEvent","CreatedAt":"2018-10-06T17:45:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6431","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6431) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8377427075","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:03:43","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6412","RelatedDescription":"Closed issue \"wasm: indexing into arrays with value type elements of width 2 bytes, e.g. char is incorrect\" (#6412) at dotnet/corert","RelatedBody":"In the WASM Program.cs add\r\n```\r\n        var str = \"123456\";\r\n        char[] chars = str.ToCharArray();\r\n        for (var i = 0; i < chars.Length; i++)\r\n        {\r\n            PrintLine(chars[i].ToString());\r\n        }\r\n```\r\nand it outputs:\r\n```\r\n1\r\n3\r\n5\r\n\r\n\r\n\r\n```\r\nIt appears to be losing every other character.  WASM=0 produces the same output as WASM=1."},{"Id":"8377427037","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:03:29","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Merged pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8375538674","Type":"PullRequestEvent","CreatedAt":"2018-10-05T16:44:01","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Opened pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8387325035","Type":"IssuesEvent","CreatedAt":"2018-10-08T23:44:10","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2574","RelatedDescription":"Opened issue \"Make it easier to express dependencies among projects without referencing output assembly\" (#2574) at dotnet/sdk","RelatedBody":"It is sometimes necessary to build project A before project B without project B referencing the assembly that A generates. In such cases one can use `ProjectReference` with `ReferenceOutputAssembly=\"false\"`. \r\n\r\nThis however is not sufficient in all scenarios, especially when these projects target different, incompatible frameworks and/or multi-target.\r\n\r\nTurns out 3 properties need to be set to make this work:\r\n```xml\r\n<ProjectReference Include=\"B.csproj\" \r\n       ReferenceOutputAssembly=\"false\"\r\n       SkipGetTargetFrameworkProperties=\"true\"\r\n       GlobalPropertiesToRemove=\"TargetFramework\" />\r\n```\r\n\r\nThis is much more complex than it should be.\r\n\r\nProposal: introduce a new item that can be use to express that this project depends on building another project, but has no implication on references. Such item could be called e.g. `ProjectBuildOrderDependency`, `DependsOnProject', etc.\r\n\r\n```xml\r\n<DependsOnProject Include=\"B.csproj\" />\r\n```"},{"Id":"8387245544","Type":"IssuesEvent","CreatedAt":"2018-10-08T23:17:46","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2573","RelatedDescription":"Opened issue \"Publishing is not incremental\" (#2573) at dotnet/sdk","RelatedBody":"Repro project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"PublishThisProject\" AfterTargets=\"Build\" DependsOnTargets=\"Publish\"/>\r\n</Project>\r\n```\r\n\r\nRun msbuild twice:\r\n`msbuild /bl:Repro1.binlog`\r\n`msbuild /bl:Repro2.binlog`\r\n\r\nThe files are copied twice. \r\n\r\n![image](https://user-images.githubusercontent.com/41759/46638412-9f2bce00-cb15-11e8-9104-7866f9a2ebe4.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047894749867270145","CreatedAt":"2018-10-04T17:02:31+00:00","UserScreenname":"dotnet","Text":"Blogged -- Update on .NET Core 3.0 and .NET Framework 4.8 https://t.co/tBpJg3Eoc8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":324,"FavoriteCount":244,"RawContent":null},{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":148,"FavoriteCount":174,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":26,"RawContent":null},{"Id":"1047257170482536454","CreatedAt":"2018-10-02T22:49:01+00:00","UserScreenname":"dotnet","Text":"Hey developers! Let us help you on your journey to Azure. Check out these resources, e-books, and apply for assista… https://t.co/1QzIe9tWvn","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":72,"FavoriteCount":41,"RawContent":null}]}},"RunOn":"2018-10-09T05:30:33.3371821Z","RunDurationInMilliseconds":7401}