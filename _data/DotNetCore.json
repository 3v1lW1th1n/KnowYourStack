{"Data":{"Blog":{"FeedItems":[{"Title":"Work flow of diagnosing memory performance issues – Part 0","PublishedOn":"2020-04-06T00:55:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"I wanted to describe what I do to diagnose memory perf issues, or rather the common part of various work flows of doing such diagnostics. Diagnosing performance issues can take many forms because...","Href":"https://devblogs.microsoft.com/dotnet/work-flow-of-diagnosing-memory-performance-issues-part-0/","RawContent":null},{"Title":"Regex Performance Improvements in .NET 5","PublishedOn":"2020-04-02T21:19:49+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"The System.Text.RegularExpressions namespace has been in .NET for years, all the way back to .NET Framework 1.1. It&#8217;s used in hundreds of places within the .NET implementation itself, and...","Href":"https://devblogs.microsoft.com/dotnet/regex-performance-improvements-in-net-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 2","PublishedOn":"2020-04-02T17:02:30+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Announcing Entity Framework Core 5.0 Preview 2\nToday we are excited to announce the second preview release of EF Core 5.0.\nThe second previews of .NET 5 and ASP.NET Core 5.0 are also available...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-2/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 2","PublishedOn":"2020-04-02T16:29:11+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 2. It contains a set of smaller features and performance improvements. We&#8217;re continuing to work on the bigger features that will define the 5.0...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-2/","RawContent":null},{"Title":".NET for Apache® Spark™ In-Memory DataFrame Support","PublishedOn":"2020-03-30T16:33:38+00:00","CommentsCount":5,"FacebookCount":0,"Summary":".NET for Apache Spark is aimed at making Apache® Spark™, and thus the exciting world of big data analytics, accessible to .NET developers. .NET for Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/net-for-apache-spark-in-memory-dataframe-support/","RawContent":null},{"Title":"Helping Customers Effectively","PublishedOn":"2020-03-30T08:05:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I have to put a disclaimer here since this is not the usual type of blog posts I write. I’m by no means a master at communication. This is just what I thought that seemed to work well. YMMV of...","Href":"https://devblogs.microsoft.com/dotnet/helping-customers-effectively/","RawContent":null},{"Title":"Balancing work on GC threads","PublishedOn":"2020-03-28T20:52:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Server GC, each GC thread will work on its heap in parallel (that&#8217;s a simplistic view and is not necessarily true for all phases but on the high level it&#8217;s exact the idea of a parallel...","Href":"https://devblogs.microsoft.com/dotnet/balancing-work-on-gc-threads/","RawContent":null},{"Title":".NET Core March 2020 Updates – 2.1.17 and 3.1.3","PublishedOn":"2020-03-24T21:21:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2020 Update. These updates only contain non-security fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2020/","RawContent":null},{"Title":"Catch up on the latest .NET Productivity features","PublishedOn":"2020-03-24T17:25:31+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The Roslyn team continuously works to provide tooling that deeply understands the code you are writing in-order to help you be more productive. In this post, I&#8217;ll cover some of the latest .NET...","Href":"https://devblogs.microsoft.com/dotnet/catch-up-on-the-latest-net-productivity-features/","RawContent":null},{"Title":"Announcing F# 5 preview 1","PublishedOn":"2020-03-19T01:31:56+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that F# 5 preview 1 is now available! Here&#8217;s how to get it:\nInstall .NET 5 preview SDK\nInstall Jupyter Notebooks for .NET\nIf you&#8217;re using Visual Studio on...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-5-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"12017084499","Type":"PullRequestEvent","CreatedAt":"2020-04-10T17:34:11","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Merged pull request \"Fix broken links\" (#185) at dotnet/foundation","RelatedBody":""},{"Id":"12017082879","Type":"PullRequestEvent","CreatedAt":"2020-04-10T17:33:58","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Merged pull request \"Fix broken links\" (#184) at dotnet/foundation","RelatedBody":""},{"Id":"12017081176","Type":"PullRequestEvent","CreatedAt":"2020-04-10T17:33:43","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Merged pull request \"Fix broken links\" (#183) at dotnet/foundation","RelatedBody":""},{"Id":"12016351315","Type":"PullRequestEvent","CreatedAt":"2020-04-10T15:55:04","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Opened pull request \"Fix broken links\" (#185) at dotnet/foundation","RelatedBody":""},{"Id":"12007033841","Type":"PullRequestEvent","CreatedAt":"2020-04-09T15:55:04","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Opened pull request \"Fix broken links\" (#184) at dotnet/foundation","RelatedBody":""},{"Id":"11984502394","Type":"PullRequestEvent","CreatedAt":"2020-04-07T15:57:33","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Opened pull request \"Fix broken links\" (#183) at dotnet/foundation","RelatedBody":""},{"Id":"11977507998","Type":"PullRequestEvent","CreatedAt":"2020-04-07T01:58:58","Actor":"david-driscoll","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Opened pull request \"Adding OmniSharp to projects list\" (#182) at dotnet/foundation","RelatedBody":""},{"Id":"11949734867","Type":"PullRequestEvent","CreatedAt":"2020-04-03T14:07:20","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/176","RelatedDescription":"Merged pull request \"Update links and name\" (#176) at dotnet/foundation","RelatedBody":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo"},{"Id":"11949730129","Type":"PullRequestEvent","CreatedAt":"2020-04-03T14:06:54","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/181","RelatedDescription":"Merged pull request \"Add Docker.DotNet\" (#181) at dotnet/foundation","RelatedBody":""},{"Id":"11949562771","Type":"PullRequestEvent","CreatedAt":"2020-04-03T13:51:20","Actor":"galvesribeiro","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/181","RelatedDescription":"Opened pull request \"Add Docker.DotNet\" (#181) at dotnet/foundation","RelatedBody":""},{"Id":"11943319090","Type":"PullRequestEvent","CreatedAt":"2020-04-02T22:57:49","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/180","RelatedDescription":"Merged pull request \"Link Code of Conduct\" (#180) at dotnet/foundation","RelatedBody":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details."},{"Id":"11943043615","Type":"PullRequestEvent","CreatedAt":"2020-04-02T22:15:21","Actor":"terrajobst","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/180","RelatedDescription":"Opened pull request \"Link Code of Conduct\" (#180) at dotnet/foundation","RelatedBody":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details."},{"Id":"11931015197","Type":"PullRequestEvent","CreatedAt":"2020-04-01T20:28:35","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Merged pull request \"Add FlubuCore\" (#179) at dotnet/foundation","RelatedBody":""},{"Id":"11927520661","Type":"PullRequestEvent","CreatedAt":"2020-04-01T14:37:47","Actor":"ChrisSfanos","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/171","RelatedDescription":"Closed pull request \"Create new-projects-v2.md\" (#171) at dotnet/foundation","RelatedBody":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc"},{"Id":"11921445336","Type":"PullRequestEvent","CreatedAt":"2020-04-01T02:17:00","Actor":"mzorec","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Opened pull request \"Add FlubuCore\" (#179) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11789505984","Type":"IssuesEvent","CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Opened issue \"March 2020 .NET Updates\" (#152) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11919267790","Type":"PullRequestEvent","CreatedAt":"2020-03-31T21:15:36","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed pull request \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"11918928835","Type":"PullRequestEvent","CreatedAt":"2020-03-31T20:38:07","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27950","RelatedDescription":"Closed pull request \"Update BuildTools to preview1-04626-03 (release/2.2)\" (#27950) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"12016210771","Type":"PullRequestEvent","CreatedAt":"2020-04-10T15:37:24","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13338","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13338) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200410.1\r\n- **Date Produced**: 4/10/2020 2:29 PM\r\n- **Commit**: 6f3d0952c6f206eca675ea1b9ed87f5e8cde2791\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20179.9 to 3.1.300-preview.20210.1\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n"},{"Id":"12015788985","Type":"PullRequestEvent","CreatedAt":"2020-04-10T14:44:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13338","RelatedDescription":"Opened pull request \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13338) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200410.1\r\n- **Date Produced**: 4/10/2020 2:29 PM\r\n- **Commit**: 6f3d0952c6f206eca675ea1b9ed87f5e8cde2791\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20179.9 to 3.1.300-preview.20210.1\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n"},{"Id":"12000844252","Type":"PullRequestEvent","CreatedAt":"2020-04-09T03:04:58","Actor":"sfoslund","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13336","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13336) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6558\r\n- **Date Produced**: 4/6/2020 10:48 PM\r\n- **Commit**: 863fc6bb184cccfe12caa03bea91b0ddc48843da\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.2.6532 to 5.6.0-preview.3.6558\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n\r\n\r\n"},{"Id":"11999393680","Type":"PullRequestEvent","CreatedAt":"2020-04-08T22:28:56","Actor":"sfoslund","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13337","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Revert to 3.1.2 templates\" (#13337) at dotnet/cli","RelatedBody":""},{"Id":"11999194414","Type":"PullRequestEvent","CreatedAt":"2020-04-08T21:59:29","Actor":"sfoslund","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/13302","RelatedDescription":"Closed pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13302) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"11998939182","Type":"PullRequestEvent","CreatedAt":"2020-04-08T21:24:50","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13335","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Revert to 3.1.2 runtime\" (#13335) at dotnet/cli","RelatedBody":""},{"Id":"11995735936","Type":"PullRequestEvent","CreatedAt":"2020-04-08T15:38:32","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13337","RelatedDescription":"Opened pull request \"Revert to 3.1.2 templates\" (#13337) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"12013728138","Type":"IssuesEvent","CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Opened issue \"GAC assembly reference to .net core api.\" (#1756) at dotnet/standard","RelatedBody":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh"},{"Id":"12001633543","Type":"IssuesEvent","CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Opened issue \"NetFX20 TypeLibType to .Net Standard\" (#1755) at dotnet/standard","RelatedBody":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```"},{"Id":"11984344303","Type":"IssuesEvent","CreatedAt":"2020-04-07T15:43:35","Actor":"richlander","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748) at dotnet/standard","RelatedBody":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n"},{"Id":"11971512880","Type":"IssuesEvent","CreatedAt":"2020-04-06T13:46:59","Actor":"Nekuskus","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Opened issue \"System.TypeInitializationException\" (#1754) at dotnet/standard","RelatedBody":""},{"Id":"11967129334","Type":"IssuesEvent","CreatedAt":"2020-04-06T05:52:38","Actor":"Mordahlhuilhulh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Closed issue \"Memory leak when build X509 chain\" (#1753) at dotnet/standard","RelatedBody":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n"},{"Id":"11960854216","Type":"IssuesEvent","CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Opened issue \"Memory leak when build X509 chain\" (#1753) at dotnet/standard","RelatedBody":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"12018314642","Type":"PullRequestEvent","CreatedAt":"2020-04-10T20:32:10","Actor":"pranavkm","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42902","RelatedDescription":"Merged pull request \"Update branding to preview5\" (#42902) at dotnet/corefx","RelatedBody":""},{"Id":"12016541525","Type":"PullRequestEvent","CreatedAt":"2020-04-10T16:19:36","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42888","RelatedDescription":"Merged pull request \"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler\" (#42888) at dotnet/corefx","RelatedBody":"This is port of dotnet/runtime#33158.\r\n\r\n**Description**\r\nPre-release WinHTTP's version supports client certificate-based authentication over HTTP/2, but the feature must be explicitly opted-in. PR sets WINHTTP_OPTION_ENABLE_HTTP2_PLUS_CLIENT_CERT to TRUE before invoking WinHttpConnect if the request's protocol is HTTP/2 and scheme is HTTPS.\r\n\r\n**Customer impact**\r\nWithout this change, it's not possible to use client certificate-based authentication on HTTP/2 in .Net Framework 4.7.2 and 4.8.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Packaging review**\r\nChange affects System.Net.Http.WinHttpHandler.dll which is distributed in System.Net.Http.WinHttpHandler package.\r\n\r\n**Risk**\r\n**Low**, covered by functional tests in master branch, but only manually tested for 3.1"},{"Id":"12016475895","Type":"PullRequestEvent","CreatedAt":"2020-04-10T16:10:55","Actor":"pranavkm","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42902","RelatedDescription":"Opened pull request \"Update branding to preview5\" (#42902) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"12024528185","Type":"IssuesEvent","CreatedAt":"2020-04-12T03:27:44","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/43292","RelatedDescription":"Opened issue \"Using declaration with ‘_’ should be a discard\" (#43292) at dotnet/roslyn","RelatedBody":"[Sharplab](https://sharplab.io/#v2:CYLg1APgAgTAjAWAFBQMwAJboMLpOgSQBEBLAZwAcB7MgQwCMAbAU3QG9l0vMMoAWdAFkAFAEp0nbhyTdZmAAzoAbrQBO6AProAvOgB2zAO44xAbklzNAOgAqVAMoAXVST0BzMxfQBfL2kwCpJQ0zGLsvkjeQA==)\r\n\r\n‘using var _ = ...;’ currently introduces a local in scope and it can be accessed. ‘_.ToString();’ should fail.\r\n\r\nTagging @chsienki "},{"Id":"12024461335","Type":"IssuesEvent","CreatedAt":"2020-04-12T03:01:13","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/43291","RelatedDescription":"Opened issue \"Offer 'Convert to conditional expression' between throw and return statements\" (#43291) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.5.3\r\n\r\n'Convert to switch expression' is offered here but not 'Convert conditional expression':\r\n\r\n```cs\r\nclass C\r\n{\r\n    int M()\r\n    {\r\n        var index = 42;\r\n\r\n        [||]if (index == -1)\r\n        {\r\n            throw new InvalidOperationException(\"...\");\r\n        }\r\n\r\n        return index;\r\n    }\r\n}\r\n```\r\n\r\nIf you change the `throw` statement to a `return` statement, 'Convert conditional expression' shows up as expected."},{"Id":"12024411016","Type":"IssuesEvent","CreatedAt":"2020-04-12T02:41:15","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/43290","RelatedDescription":"Opened issue \"'Generate Equals/GetHashCode' generates calls to abstract base members\" (#43290) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 16.5.3\r\n\r\nChoose 'Generate Equals and GetHashCode...' here:\r\n\r\n```cs\r\nabstract class Base\r\n{\r\n    public abstract override bool Equals(object? obj);\r\n    public abstract override int GetHashCode();\r\n}\r\n\r\nclass [||]Derived : Base\r\n{\r\n    public int P { get; }\r\n}\r\n```\r\n\r\nResulting code:\r\n\r\n```cs\r\n    public override bool Equals(object? obj)\r\n    {\r\n        return obj is Derived derived &&\r\n               /* ❌ CS0205 Cannot call an abstract base member: 'Base.Equals(object?)'\r\n               ↓↓↓↓↓↓↓↓↓↓↓ */\r\n               base.Equals(obj) &&\r\n               P == derived.P;\r\n    }\r\n\r\n    public override int GetHashCode()\r\n    {\r\n        // ❌ CS0205 Cannot call an abstract base member: 'Base.GetHashCode()'\r\n        //                      ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\n        return HashCode.Combine(base.GetHashCode(), P);\r\n    }\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"12024577213","Type":"IssuesEvent","CreatedAt":"2020-04-12T03:48:50","Actor":"xdrie","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8083","RelatedDescription":"Opened issue \"recommended way to analyze size of output binary\" (#8083) at dotnet/corert","RelatedBody":"I followed the [instructions](https://github.com/dotnet/corert/tree/master/samples/MonoGame) for the MonoGame sample to publish to a native binary compiled with CoreRT.\r\n\r\nHowever, the output size is quite a bit larger with my application than with this template application, and I would like to figure out what is contributing to the size. My application references multiple packages and other assemblies, but I am not sure how much each of those contribute to the size. Ostensibly, not that much; I looked at the file sizes from a `dotnet publish` using CoreCLR and they are in the few KB, while my CoreRT binary is upwards of 50MB. With the minimal MonoGame application, it is about 9MB, which is closer to what I am targeting.\r\n\r\nHow could I diagnose exactly what is causing my CoreRT binaries to be so large?"},{"Id":"12023902273","Type":"PullRequestEvent","CreatedAt":"2020-04-11T23:16:17","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8082","RelatedDescription":"Opened pull request \"Wasm: Update linux instructions for LLVM9\" (#8082) at dotnet/corert","RelatedBody":"You'll see there is a problem with the RID for the libLLVM nuget as described in the updated instructions.  At least that is my limited understanding of it.   I've created this PR with the changes to the documentation to describe the issue I had, but if there's a better way to fix this, then please let me know.  Otherwise this brings the linux build script in line with the Windows one.\r\n\r\nFixes #6827 "},{"Id":"12016048527","Type":"PullRequestEvent","CreatedAt":"2020-04-10T15:16:29","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8080","RelatedDescription":"Merged pull request \"Add support for generating the bss section\" (#8080) at dotnet/corert","RelatedBody":"From Wikipedia: \"BSS (from Block Started by Symbol) is a pseudo-operation in UA-SAP (United Aircraft Symbolic Assembly Program), the assembler developed in the mid-1950s for the IBM 704.\"\r\n\r\n70 years later we still name the section of the executable that holds uninitialized data BSS."},{"Id":"12016035474","Type":"PullRequestEvent","CreatedAt":"2020-04-10T15:14:52","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8079","RelatedDescription":"Merged pull request \"Update compiler from dotnet/runtime\" (#8079) at dotnet/corert","RelatedBody":""},{"Id":"12015785268","Type":"IssuesEvent","CreatedAt":"2020-04-10T14:43:45","Actor":"Shadow4walker","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7880","RelatedDescription":"Closed issue \"HttpWebRequest/HttpWebResponse Not Working!\" (#7880) at dotnet/corert","RelatedBody":"HttpWebRequest request= with Headers ....etc\r\nvar httpWebResponse = (HttpWebResponse) await request.GetResponseAsync()\r\nnever passed this code >fail fast!! idk what to put in the rd.xml or if event i should put anything there!"},{"Id":"12015519495","Type":"PullRequestEvent","CreatedAt":"2020-04-10T14:10:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8081","RelatedDescription":"Merged pull request \"Avoid placing finalizers in the vtable\" (#8081) at dotnet/corert","RelatedBody":"Reflection rooting could sometimes make it so that `Object.Finalize` got a vtable slot. Saves 27 kB on a Hello World (with the default settings that reflection-root all user code)."},{"Id":"12014666278","Type":"PullRequestEvent","CreatedAt":"2020-04-10T12:06:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8081","RelatedDescription":"Opened pull request \"Avoid placing finalizers in the vtable\" (#8081) at dotnet/corert","RelatedBody":"Reflection rooting could sometimes make it so that `Object.Finalize` got a vtable slot. Saves 27 kB on a Hello World (with the default settings that reflection-root all user code)."},{"Id":"12014405376","Type":"PullRequestEvent","CreatedAt":"2020-04-10T11:21:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8080","RelatedDescription":"Opened pull request \"Add support for generating the bss section\" (#8080) at dotnet/corert","RelatedBody":"From Wikipedia: \"BSS (from Block Started by Symbol) is a pseudo-operation in UA-SAP (United Aircraft Symbolic Assembly Program), the assembler developed in the mid-1950s for the IBM 704.\"\r\n\r\n70 years later we still name the section of the executable that holds uninitialized data BSS."},{"Id":"12013715542","Type":"PullRequestEvent","CreatedAt":"2020-04-10T09:31:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8079","RelatedDescription":"Opened pull request \"Update compiler from dotnet/runtime\" (#8079) at dotnet/corert","RelatedBody":""},{"Id":"12003059136","Type":"IssuesEvent","CreatedAt":"2020-04-09T08:55:38","Actor":"space-alien","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8078","RelatedDescription":"Opened issue \".NET Core 3.1 Web API or Blazor Server app\" (#8078) at dotnet/corert","RelatedBody":"I'm trying to get a .NET Core 3.1 web app running with CoreRT.\r\n\r\nI'm starting with the Web API project template before attempting to move to the Blazor Server template.\r\n\r\nThe first thing I had to do was to solve this exception:\r\n> System.Reflection.MissingMetadataException: 'System.Text.Json.JsonPropertyInfoNotNullable<WebApplication1.WeatherForecast,System.DateTime,System.DateTime,System.DateTime>' is missing metadata.\r\n\r\nWhich I did by adding an `rd.xml` file as follows:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"System.Text.Json\" Dynamic=\"Required All\" />\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\nThe web server now gets up and running at least.\r\n\r\nHowever, requests to the Web API project template `/weatherforecast` endpoint all just fail, with Chrome reporting `localhost didn’t send any data. ERR_EMPTY_RESPONSE`.\r\n\r\nAlso, the compiler is still outputting a huge amount of these warnings - all for `System.Text.Json`:\r\n```\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.<>m__Finally1() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.Generic.IEnumerable<TDeclaredProperty>.GetEnumerator() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.IEnumerable.GetEnumerator() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.IDisposable.Dispose() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.MoveNext() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.Generic.IEnumerator<TDeclaredProperty>.get_Current() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.IEnumerator.get_Current() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\n...\r\n```\r\n\r\nAny thoughts on moving forward with this?\r\n\r\nIs it likely to be feasible to get a fairly complex .NET Core 3.1 Blazor web application running with CoreRT at this time? The current 2.1 Web API sample mentions `the risk of adding unsupported features` and that `some functionality might not yet be supported in CoreRT`, but I couldn't find any specifics about unsupported features/scenarios elsewhere in the documentation - other than the problem of reflection causing unlinked dependencies.\r\n\r\n\r\n"},{"Id":"12002801612","Type":"PullRequestEvent","CreatedAt":"2020-04-09T08:27:24","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8077","RelatedDescription":"Merged pull request \"Renaming to match https://github.com/dotnet/runtime/pull/34519\" (#8077) at dotnet/corert","RelatedBody":""},{"Id":"11998872690","Type":"PullRequestEvent","CreatedAt":"2020-04-08T21:17:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8077","RelatedDescription":"Opened pull request \"Renaming to match https://github.com/dotnet/runtime/pull/34519\" (#8077) at dotnet/corert","RelatedBody":""},{"Id":"11994767731","Type":"IssuesEvent","CreatedAt":"2020-04-08T14:12:32","Actor":"Shadow4walker","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8076","RelatedDescription":"Opened issue \"EXCEPTION MESSAGE] MissingMethod\" (#8076) at dotnet/corert","RelatedBody":"again Another failure from me due to not write rd.xml correctly :/\r\nI'm trying to Compile [CefNet](https://github.com/CefNet/CefNet)\r\n\r\nthe rd.xml\r\n` \r\n\r\n    <Assembly Name=\"MyApp\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet.Avalonia\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet\" Dynamic=\"Required All\"/>\r\n    </Assembly>\r\n\r\n`\r\nbut above did not work with this message on Compile\r\n\r\n> EXEC : warning : Method `[CefNet]CefNet.CefSchemeHandlerFactory.CefNet.Internal.ICefSchemeHandlerFactoryPrivate.AvoidCreate()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: CefNet.CefSchemeHandlerFactory CefNet.CefSchemeHandlerFactory.Create(IntPtr)\r\n\r\n>EXEC : warning : Method `[CefNet]CefNet.CefCommandLine.InitFromArgv(int32,native int)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Void CefNet.CApi.cef_command_line_t.InitFromArgv(Int32, Byte**)\r\n\r\nso i have tried this\r\n\r\n` \r\n\r\n    <Assembly Name=\"MyApp\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet.Avalonia\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet\" Dynamic=\"Required All\">\r\n    <Type Name=\"CefNet.CApi.cef_command_line_t\">\r\n    <Method Name=\"InitFromArgv\" Arguments=\"System.Int32,System.SByte\" Dynamic=\"Required All\"/>\r\n    </Type>\r\n    </Assembly>\r\n\r\n`\r\nbut still same message appear and with failure to run output exe app\r\ni have no idea what to do next!"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"12024808878","Type":"PullRequestEvent","CreatedAt":"2020-04-12T05:25:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11257","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11257) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.3\r\n- **Date Produced**: 4/12/2020 2:40 AM\r\n- **Commit**: 2b7b79f4db580536cb91969b1b02434af7da703b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20211.2 to 5.0.0-preview.4.20211.3\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12024483886","Type":"PullRequestEvent","CreatedAt":"2020-04-12T03:09:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11257","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11257) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.3\r\n- **Date Produced**: 4/12/2020 2:40 AM\r\n- **Commit**: 2b7b79f4db580536cb91969b1b02434af7da703b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20211.2 to 5.0.0-preview.4.20211.3\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12024292558","Type":"PullRequestEvent","CreatedAt":"2020-04-12T01:54:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11256","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11256) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.2\r\n- **Date Produced**: 4/11/2020 10:14 PM\r\n- **Commit**: 3c1bd093e90bd54101d36f828010a68f7262157b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20211.1 to 5.0.0-preview.4.20211.2\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12023908252","Type":"PullRequestEvent","CreatedAt":"2020-04-11T23:18:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11256","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11256) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.2\r\n- **Date Produced**: 4/11/2020 10:14 PM\r\n- **Commit**: 3c1bd093e90bd54101d36f828010a68f7262157b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20211.1 to 5.0.0-preview.4.20211.2\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12023901686","Type":"PullRequestEvent","CreatedAt":"2020-04-11T23:16:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11255","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11255) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.1\r\n- **Date Produced**: 4/11/2020 7:45 PM\r\n- **Commit**: c16d3364d4f83307ac3c6f74de15f8ca96b89759\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20210.9 to 5.0.0-preview.4.20211.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12023385720","Type":"PullRequestEvent","CreatedAt":"2020-04-11T20:24:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11255","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11255) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.1\r\n- **Date Produced**: 4/11/2020 7:45 PM\r\n- **Commit**: c16d3364d4f83307ac3c6f74de15f8ca96b89759\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20210.9 to 5.0.0-preview.4.20211.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12023301931","Type":"PullRequestEvent","CreatedAt":"2020-04-11T19:59:54","Actor":"ocallesp","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11254","RelatedDescription":"Opened pull request \"Enable content copying transitive in VS.\" (#11254) at dotnet/sdk","RelatedBody":"This is needed to fix the Fast up-to-date to check\r\nCopyToOutputDirectory items from project references\r\nhttps://github.com/dotnet/project-system/issues/4665\r\n\r\nMore details on MSBuildCopyContentTransitively in\r\nhttps://github.com/microsoft/msbuild/pull/4865\r\n\r\nIs there a way to create a dummy insertion to test it out first ? to check the performance test from AzDo"},{"Id":"12023097975","Type":"IssuesEvent","CreatedAt":"2020-04-11T19:01:24","Actor":"danielloganking","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/11253","RelatedDescription":"Opened issue \"Allow `dotnet restore` to also invoke `dotnet tool restore`\" (#11253) at dotnet/sdk","RelatedBody":"### Issue\r\n\r\nCurrently, we are in the process of upgrading our application from Core 2.2 to Core 3.1. One of the functionalities we depend on in 2.2 is the ability to reference a tool as a project dependency for guaranteed availability during build. Specifically we reference [`Swashbuckle.AspNetCore.Cli`](https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/v5.0.0-rc3#swashbuckleaspnetcorecli) and then have a MSBuild extension to execute it using a `<Target>` node in the `.csproj`. In 2.2 it looks like:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n    <OutputType>Exe</OutputType>\r\n</PropertyGroup>\r\n\r\n<ItemGroup>\r\n  <DotNetCliToolReference Include=\"Swashbuckle.AspNetCore.Cli\" Version=\"2.1.0-beta1\" />\r\n</ItemGroup>\r\n\r\n<Target Name=\"SwaggerToFile\" AfterTargets=\"AfterBuild\">\r\n    <Exec Command=\"dotnet swagger tofile --output $(TargetDir)openapi.json &quot;$(TargetPath)&quot; v1\" />\r\n</Target>\r\n```\r\n\r\nHowever, with the move to local tools in Core 3.x there is no longer a guarantee the tool is installed prior to the build. Though we have added the requisite local tool manifest to the repository root and removed the `DotNetCliToolReference` as required by the upgrade to 3.1, without modification to the custom `Target` the build will error unless the developer has manually run `dotnet tool restore`.\r\n\r\n### Solutions\r\n\r\n#### Option 1 - Extend Custom Target (Works, Non-Ideally)\r\nThe solution that does currently work is to modify the custom `Target` to also call `dotnet tool restore`. This looks like this:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n</PropertyGroup>\r\n\r\n<Target Name=\"SwaggerToFile\" AfterTargets=\"AfterBuild\">\r\n    <Exec Command=\"dotnet tool restore\" />\r\n    <Exec Command=\"dotnet swagger tofile --output $(TargetDir)openapi.json &quot;$(TargetPath)&quot; v1\" />\r\n</Target>\r\n```\r\n\r\nThis however is not ideal as it prevents the developer from using the tool directly until they have built once or manually run `dotnet tool restore` themselves. While a minor inconvenience, this is a gotcha that requires extra documentation and developer training to avoid--it is, to borrow a phrase, not the pit of success.\r\n\r\n#### Option 2 - Add 2nd Custom Target to Extend Restore (Doesn't Currently Work, Ideal)\r\nThe ideal solution would then be to extend the `dotnet restore` command to also call `dotnet tool restore` when this project is being restored. This is better because Visual Studio will automatically restore a solution/project when it is loaded and developers are already in the habit of running `dotnet restore` when they see complaints about missing packages. I tried to do this myself with a 2nd custom target but MSBuild does not seem to respect the extension of the `Restore` target which I assume exists based on [this documentation](https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#restore-target). My attempt at making this work looks like:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n<!-- Doesn't work :( -->\r\n<Target Name=\"LocalToolRestore\" AfterTargets=\"Restore\">\r\n    <Exec Command=\"dotnet tool restore\" />\r\n</Target>\r\n\r\n<Target Name=\"SwaggerToFile\" AfterTargets=\"AfterBuild\">\r\n    <Exec Command=\"dotnet swagger tofile --output $(TargetDir)openapi.json &quot;$(TargetPath)&quot; v1\" />\r\n</Target>\r\n```\r\nWhy this doesn't currently work I'm not sure, though I guess there may be a problem with the working directory or context in which `dotnet restore` is run; that, or the `Restore` target simply isn't currently extensible via a `.csproj` the way `Build` and similar targets are. Whatever the case, I believe that for tools which will be used during or after build it would be a significantly improved experience if this extension were possible (it does not have to be mandatory behavior, an opt-in is fine).\r\n\r\n### Disclaimer\r\n\r\nIt is entirely possible that I have forgotten a key step to making Option 2 work or have not fully understood the implications of the move to local tooling in 3.x. If this is the case, I welcome instruction on how Option 2 is possible today or explanation about how this is an abuse of local tooling (which I expect would then lead to an issue on the Swashbuckle repo).\r\n"},{"Id":"12023087537","Type":"PullRequestEvent","CreatedAt":"2020-04-11T18:58:36","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11252","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/5.0.1xx-preview3' => 'master'\" (#11252) at dotnet/sdk","RelatedBody":"I detected changes in the release/5.0.1xx-preview3 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/5.0.1xx-preview3 by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/5.0.1xx-preview3\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/5.0.1xx-preview3\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/5.0.1xx-preview3-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/5.0.1xx-preview3-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/5.0.1xx-preview3-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/5.0.1xx-preview3-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/5.0.1xx-preview3-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"12023080433","Type":"PullRequestEvent","CreatedAt":"2020-04-11T18:56:32","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11250","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore\" (#11250) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: fcb06124-ac40-4456-eda2-08d7d0ee12d3\r\n- **Build**: 20200410.6\r\n- **Date Produced**: 4/11/2020 1:14 AM\r\n- **Commit**: da136fedaf1eb7c27dca816868ce207d9e917092\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.3.20207.4 to 5.0.0-preview.3.20210.6\r\n\r\n[marker]: <> (End:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n\r\n"},{"Id":"12023079878","Type":"PullRequestEvent","CreatedAt":"2020-04-11T18:56:22","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11251","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk\" (#11251) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee\r\n- **Build**: 20200411.2\r\n- **Date Produced**: 4/11/2020 5:29 PM\r\n- **Commit**: 3814af495962238edfd80daa549e29ba0f3bab41\r\n- **Branch**: refs/heads/release/5.0.1xx-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.3.20207.3 to 5.0.100-preview.3.20211.2\r\n\r\n[marker]: <> (End:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-04-07T01:58:57","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Open PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"},{"Id":"577522629","IsPullRequest":true,"CreatedAt":"2020-03-08T16:27:23","Actor":"AArnott","Number":"162","RawContent":null,"Title":"Create nerdbank-gitversioning.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/162","RelatedDescription":"Closed or merged PR \"Create nerdbank-gitversioning.md\" (#162)"},{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"closed","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"},{"Id":"555038667","IsPullRequest":false,"CreatedAt":"2020-01-25T04:38:47","Actor":"nagytech","Number":"160","RawContent":null,"Title":"Website down","State":"closed","Body":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~","Url":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"567714729","IsPullRequest":true,"CreatedAt":"2020-03-31T21:15:35","Actor":"dotnet-maestro-bot","Number":"28022","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022)"},{"Id":"584089447","IsPullRequest":true,"CreatedAt":"2020-03-27T03:30:09","Actor":"janvorli","Number":"28029","RawContent":null,"Title":"Port to 3.1 - Fix handling thread abort in HelperMethodFrame","State":"closed","Body":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)","Url":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029)"},{"Id":"588639746","IsPullRequest":true,"CreatedAt":"2020-03-26T18:36:55","Actor":"sdmaclea","Number":"28033","RawContent":null,"Title":"For 3.1 Backport #25958 Modify amd64walker to use table based decode","State":"open","Body":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n\r\n## Risk\r\nLow. \r\n+ Only affects debugger operation.\r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n+ Adds tools to regenerate the parser tables\r\n+ Adds documentation\r\n \r\n## Code Reviewer\r\n@hoyosjs @tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Open PR \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033)"},{"Id":"587768007","IsPullRequest":true,"CreatedAt":"2020-03-26T17:08:27","Actor":"gbalykov","Number":"28032","RawContent":null,"Title":"[release/3.1] Fix Runtime_1241 test build","State":"closed","Body":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Runtime_1241 test build\" (#28032)"},{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-03-25T23:18:18","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)","State":"closed","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Closed or merged PR \"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)\" (#28024)"},{"Id":"579461507","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:42","Actor":"omajid","Number":"28026","RawContent":null,"Title":"[release/3.1] Fix build with clang 10","State":"closed","Body":"This fixes 3 different sets of build issues that are seen when compiling with clang 10.\r\n\r\n- Clang 10 fails to compile slist.h because the code contained is   actually invalid. The assignment operator being used doesn't exist.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/33096\r\n\r\n- Clang 10 has moved exception-handling mismatches in function declarations under the -fms-compatibility flag (instead of the -fms-extensions flag). Our declarations of atoll and other similar functions are missing the exception declaration `throw()`. This mismatch in exception declarations makes clang 10 unable to build this code. Fix it by defining THROW_DECL as `throw()` which is supported at least as far back as clang 3.3.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/32837\r\n\r\n- Clang 10 has enabled additional warnings. Lets turn of -Werror globally in this release branch by making the `-ignorewarnings` switch  to `./build.sh` be the default.","Url":"https://github.com/dotnet/coreclr/pull/28026","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build with clang 10\" (#28026)"},{"Id":"577917254","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:25","Actor":"janvorli","Number":"28025","RawContent":null,"Title":"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle","State":"closed","Body":"When there is a race calling RuntimeType.InitializeCache, each of the\r\nracing threads creates a new GC handle using\r\nnew\r\nRuntimeTypeHandle(this).GetGCHandle(GCHandleType.WeakTrackResurrection);\r\nThis ends up calling RuntimeTypeHandle::GetGCHandle native method that\r\nadds the allocated handle into the handle cleanup list of the\r\nAssemblyLoaderAllocator specific for the runtime type.\r\nAll but the winning thread then call GCHandle.InternalFree on the just\r\nallocated handle. That frees the handle, but leaves it on the cleanup\r\nlist of the loader allocator. The same handle can be later allocated for\r\nsome\r\nother purpose. When the AssemblyLoaderAllocator is being destroyed, all\r\nthe handles on the cleanup list are destroyed too. So it destroys also\r\nthe handle that was left on the cleanup list incorrectly. That can cause\r\nall kinds of hard to diagnose issues, like the\r\nhttps://github.com/dotnet/runtime/issues/32171.\r\n\r\nThis change fixes it by adding a FreeGCHandle method on the\r\nRuntimeTypeHandle that besides freeing the handle also removes it from\r\nthe cleanup list of the related AssemblyLoadContext.\r\n\r\n ## Customer impact\r\nHard to diagnose crashes in the runtime caused by closing of random\r\nGC handles. The customer that has reported this issue was using\r\ncollectible assemblies and it was resulting in collecting\r\nLoaderAllocator that was still in use and it lead to crashes at various\r\nplaces.\r\n\r\n ## Regression?\r\nYes, it was introduced in 3.0. In 2.1 and 2.2, the thread that loses\r\nthe race destroys the handle only if the type was not in a collectible\r\nassembly. Since the non-collectible assemblies LoaderAllocator is never\r\ndestroyed, the handles were never cleaned up and so no problem could occur.\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/21737\r\n\r\n ## Testing\r\nCustomer affected by the issue heavily has tested a fixed version and\r\nreported the issue doesn't occur anymore.\r\n\r\n ## Risk\r\nLow, the new code is executed at single place once per process runtine\r\nonly when a thread races for allocating the GC handle with another one\r\nand loses the race.","Url":"https://github.com/dotnet/coreclr/pull/28025","RelatedDescription":"Closed or merged PR \"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle\" (#28025)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-03-25T20:35:59","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"closed","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"587357484","IsPullRequest":true,"CreatedAt":"2020-03-25T18:36:02","Actor":"Anipik","Number":"28030","RawContent":null,"Title":"update branding for coreclr to 3.1.4","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28030","RelatedDescription":"Closed or merged PR \"update branding for coreclr to 3.1.4\" (#28030)"},{"Id":"587368335","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:19","Actor":"Anipik","Number":"28031","RawContent":null,"Title":"update branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28031","RelatedDescription":"Closed or merged PR \"update branding for 2.1.18\" (#28031)"},{"Id":"580316086","IsPullRequest":true,"CreatedAt":"2020-03-13T01:32:05","Actor":"sdmaclea","Number":"28028","RawContent":null,"Title":"WIP Support older 3.x releases with cross OS backport (for testing)","State":"open","Body":"This is a little more than #28027","Url":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Open PR \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028)"},{"Id":"580315472","IsPullRequest":true,"CreatedAt":"2020-03-13T01:29:34","Actor":"sdmaclea","Number":"28027","RawContent":null,"Title":"WIP Port Cross OS DAC to 3.1","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28027","RelatedDescription":"Open PR \"WIP Port Cross OS DAC to 3.1\" (#28027)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-02-18T21:46:38","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"closed","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Closed or merged PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-18T21:32:58","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"566357453","IsPullRequest":true,"CreatedAt":"2020-02-18T21:31:54","Actor":"eiriktsarpalis","Number":"28019","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-18T18:27:24","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"closed","Body":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-18T18:06:39","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"555024664","IsPullRequest":true,"CreatedAt":"2020-02-13T22:26:52","Actor":"briansull","Number":"28003","RawContent":null,"Title":"Port the 5.0 fix for issue #1104","State":"closed","Body":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Closed or merged PR \"Port the 5.0 fix for issue #1104\" (#28003)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-02-12T20:57:40","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Open PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"597925022","IsPullRequest":true,"CreatedAt":"2020-04-10T15:37:23","Actor":"dotnet-maestro[bot]","Number":"13338","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200410.1\r\n- **Date Produced**: 4/10/2020 2:29 PM\r\n- **Commit**: 6f3d0952c6f206eca675ea1b9ed87f5e8cde2791\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20179.9 to 3.1.300-preview.20210.1\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13338","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13338)"},{"Id":"596161722","IsPullRequest":true,"CreatedAt":"2020-04-09T03:04:57","Actor":"dotnet-maestro[bot]","Number":"13336","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6558\r\n- **Date Produced**: 4/6/2020 10:48 PM\r\n- **Commit**: 863fc6bb184cccfe12caa03bea91b0ddc48843da\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.2.6532 to 5.6.0-preview.3.6558\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13336","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13336)"},{"Id":"596672984","IsPullRequest":true,"CreatedAt":"2020-04-08T22:28:56","Actor":"mmitche","Number":"13337","RawContent":null,"Title":"[release/3.1.3xx] Revert to 3.1.2 templates","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13337","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Revert to 3.1.2 templates\" (#13337)"},{"Id":"596128162","IsPullRequest":true,"CreatedAt":"2020-04-08T21:24:49","Actor":"mmitche","Number":"13335","RawContent":null,"Title":"[release/3.1.3xx] Revert to 3.1.2 runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13335","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Revert to 3.1.2 runtime\" (#13335)"},{"Id":"596057168","IsPullRequest":true,"CreatedAt":"2020-04-07T21:02:37","Actor":"mmitche","Number":"13334","RawContent":null,"Title":"[release/2.1.5xx] Update feed tasks versions","State":"closed","Body":"Fix up the feed task version to match core-setup's 2.1 branch. Going on the hunch that the errors seen are not seen in core-setup.","Url":"https://github.com/dotnet/cli/pull/13334","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Update feed tasks versions\" (#13334)"},{"Id":"595947380","IsPullRequest":true,"CreatedAt":"2020-04-07T18:13:28","Actor":"mmitche","Number":"13333","RawContent":null,"Title":"[release/2.1.8xx] Merge from 2.1.5xx and 2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13333","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Merge from 2.1.5xx and 2.1.6xx\" (#13333)"},{"Id":"595947109","IsPullRequest":true,"CreatedAt":"2020-04-07T18:13:07","Actor":"mmitche","Number":"13332","RawContent":null,"Title":"[release/2.1.6xx] Merge from release/2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13332","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Merge from release/2.1.5xx\" (#13332)"},{"Id":"595497861","IsPullRequest":true,"CreatedAt":"2020-04-07T13:52:23","Actor":"mmitche","Number":"13331","RawContent":null,"Title":"[release/2.1.5xx] Enable TLS 1.2","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13331","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Enable TLS 1.2\" (#13331)"},{"Id":"593287142","IsPullRequest":true,"CreatedAt":"2020-04-03T10:37:45","Actor":"v-chmart","Number":"13330","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli master | 20200403","State":"open","Body":"Localization update.","Url":"https://github.com/dotnet/cli/pull/13330","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli master | 20200403\" (#13330)"},{"Id":"592091086","IsPullRequest":true,"CreatedAt":"2020-04-02T03:44:09","Actor":"dotnet-maestro[bot]","Number":"13329","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200401.6\r\n- **Date Produced**: 4/1/2020 5:23 PM\r\n- **Commit**: 06bdc9ce0f3f21c365b998a34165c9c6a8019589\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20201.6\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13329","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13329)"},{"Id":"589929295","IsPullRequest":true,"CreatedAt":"2020-04-02T03:14:17","Actor":"wli3","Number":"13315","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13315","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13315)"},{"Id":"589929389","IsPullRequest":true,"CreatedAt":"2020-04-02T03:14:10","Actor":"wli3","Number":"13316","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13316","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13316)"},{"Id":"589929746","IsPullRequest":true,"CreatedAt":"2020-04-02T03:13:52","Actor":"wli3","Number":"13317","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13317","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13317)"},{"Id":"591476705","IsPullRequest":true,"CreatedAt":"2020-04-01T16:03:25","Actor":"dotnet-maestro[bot]","Number":"13324","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6532\r\n- **Date Produced**: 3/25/2020 11:01 PM\r\n- **Commit**: 1c2681b16a0bb9be9271abe043a1cbf892761ef8\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.6.0-preview.2.6532\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13324","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13324)"},{"Id":"591660841","IsPullRequest":true,"CreatedAt":"2020-04-01T16:00:03","Actor":"dotnet-maestro[bot]","Number":"13327","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13327","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13327)"},{"Id":"591660845","IsPullRequest":true,"CreatedAt":"2020-04-01T15:59:56","Actor":"dotnet-maestro[bot]","Number":"13328","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9a2d95d4-e7b6-4af1-24a3-08d7c517f22b\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13328","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore\" (#13328)"},{"Id":"591503112","IsPullRequest":true,"CreatedAt":"2020-04-01T15:56:15","Actor":"dotnet-maestro[bot]","Number":"13325","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: cadcf242-0374-4d70-4f28-08d7c5f06407\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13325","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#13325)"},{"Id":"591660832","IsPullRequest":true,"CreatedAt":"2020-04-01T06:51:04","Actor":"dotnet-maestro[bot]","Number":"13326","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13326","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13326)"},{"Id":"590005024","IsPullRequest":true,"CreatedAt":"2020-03-31T20:27:31","Actor":"dotnet-maestro-bot","Number":"13318","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* wli3\n* dsplaisted\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13318","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13318)"},{"Id":"590782764","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:55","Actor":"wli3","Number":"13321","RawContent":null,"Title":"Change mac build pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13321","RelatedDescription":"Closed or merged PR \"Change mac build pool\" (#13321)"},{"Id":"590783573","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:40","Actor":"wli3","Number":"13322","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13322","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13322)"},{"Id":"590814958","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:33","Actor":"wli3","Number":"13323","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13323","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13323)"},{"Id":"589929012","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:51","Actor":"wli3","Number":"13313","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13313","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13313)"},{"Id":"589929171","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:44","Actor":"wli3","Number":"13314","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13314","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13314)"},{"Id":"589928899","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:39","Actor":"wli3","Number":"13312","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13312","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13312)"},{"Id":"590031312","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:28","Actor":"dotnet-maestro[bot]","Number":"13319","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200329.7\r\n- **Date Produced**: 3/30/2020 6:18 AM\r\n- **Commit**: 974c51e8486a018d53394cc4852fd451eb940dd6\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20179.7\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13319","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13319)"},{"Id":"590050283","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:19","Actor":"dotnet-maestro[bot]","Number":"13320","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200329.9\r\n- **Date Produced**: 3/30/2020 6:57 AM\r\n- **Commit**: b90f3aeb88e31f9519482ab5f665e953056598d5\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.300-preview.20179.9\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13320","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13320)"},{"Id":"589690301","IsPullRequest":true,"CreatedAt":"2020-03-30T05:34:31","Actor":"dotnet-maestro[bot]","Number":"13311","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200328.4\r\n- **Date Produced**: 3/29/2020 12:37 AM\r\n- **Commit**: e7806934e7e832ba623ca921d25e7cc430d41afe\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20178.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13311","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13311)"},{"Id":"589675028","IsPullRequest":true,"CreatedAt":"2020-03-30T05:27:53","Actor":"dotnet-maestro[bot]","Number":"13310","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200328.10\r\n- **Date Produced**: 3/29/2020 2:38 AM\r\n- **Commit**: 306ef044cf9c8500d4d37f930f2b3f64380b2622\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20178.10\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13310","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13310)"},{"Id":"589441164","IsPullRequest":true,"CreatedAt":"2020-03-27T22:56:05","Actor":"dotnet-maestro[bot]","Number":"13309","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200327.4\r\n- **Date Produced**: 3/27/2020 9:14 PM\r\n- **Commit**: 654cf06615981b190737101d3a1df39e57e20341\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20177.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13309","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13309)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-06T05:52:37","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"closed","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Closed issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"},{"Id":"579889900","IsPullRequest":true,"CreatedAt":"2020-03-12T12:10:44","Actor":"dotnet-maestro[bot]","Number":"1739","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200311.5\r\n- **Date Produced**: 3/12/2020 1:01 AM\r\n- **Commit**: df7ef03819d65500711edd0bceac091264b464b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20161.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1739)"},{"Id":"579213194","IsPullRequest":true,"CreatedAt":"2020-03-11T12:25:51","Actor":"dotnet-maestro[bot]","Number":"1738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1738)"},{"Id":"578529521","IsPullRequest":true,"CreatedAt":"2020-03-10T12:35:54","Actor":"dotnet-maestro[bot]","Number":"1737","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1737","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1737)"},{"Id":"577855009","IsPullRequest":true,"CreatedAt":"2020-03-09T12:10:53","Actor":"dotnet-maestro[bot]","Number":"1736","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1736","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1736)"},{"Id":"577489994","IsPullRequest":true,"CreatedAt":"2020-03-08T12:10:56","Actor":"dotnet-maestro[bot]","Number":"1735","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200307.1\r\n- **Date Produced**: 3/7/2020 2:29 PM\r\n- **Commit**: ca67e6af5b3c6d94755f0912c5365bea44130b12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20157.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1735)"},{"Id":"577331751","IsPullRequest":true,"CreatedAt":"2020-03-07T13:20:45","Actor":"dotnet-maestro[bot]","Number":"1734","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200306.4\r\n- **Date Produced**: 3/6/2020 6:36 PM\r\n- **Commit**: 8ff203f47d83e89ac4b9310b4e902188e0344bf0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20156.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1734","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1734)"},{"Id":"576916652","IsPullRequest":true,"CreatedAt":"2020-03-06T13:10:41","Actor":"dotnet-maestro[bot]","Number":"1733","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200305.4\r\n- **Date Produced**: 3/6/2020 12:19 AM\r\n- **Commit**: 08eea2b992d991297fc23de413bddfb9b3db5082\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20155.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1733","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1733)"},{"Id":"576236548","IsPullRequest":true,"CreatedAt":"2020-03-05T13:25:48","Actor":"dotnet-maestro[bot]","Number":"1732","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1732","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1732)"},{"Id":"575382239","IsPullRequest":true,"CreatedAt":"2020-03-04T13:25:52","Actor":"dotnet-maestro[bot]","Number":"1731","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200303.1\r\n- **Date Produced**: 3/3/2020 2:12 PM\r\n- **Commit**: 421b20fb860907c45673de791177e3fd61402197\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20153.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1731","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1731)"},{"Id":"574651534","IsPullRequest":true,"CreatedAt":"2020-03-03T13:20:48","Actor":"dotnet-maestro[bot]","Number":"1730","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200302.4\r\n- **Date Produced**: 3/2/2020 6:28 PM\r\n- **Commit**: d8c2d041341ea7974fd3f2057e9d6afdd4f37598\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20152.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1730","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1730)"},{"Id":"574149455","IsPullRequest":true,"CreatedAt":"2020-03-02T18:30:15","Actor":"joperezr","Number":"1729","RawContent":null,"Title":"Adding Code of Conduct to the repo","State":"closed","Body":"cc: @karelz @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1729","RelatedDescription":"Closed or merged PR \"Adding Code of Conduct to the repo\" (#1729)"},{"Id":"573958323","IsPullRequest":true,"CreatedAt":"2020-03-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1728","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200301.1\r\n- **Date Produced**: 3/1/2020 2:16 PM\r\n- **Commit**: 8ccad075bbb0db445e03eed0a6073d27bdd4f31a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20151.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1728","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1728)"},{"Id":"573542635","IsPullRequest":true,"CreatedAt":"2020-03-01T13:10:43","Actor":"dotnet-maestro[bot]","Number":"1727","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200229.1\r\n- **Date Produced**: 2/29/2020 2:10 PM\r\n- **Commit**: 86e54fb5076d46a6f959f0329d53c1c72e2280df\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20129.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1727","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1727)"},{"Id":"573290194","IsPullRequest":true,"CreatedAt":"2020-02-29T13:25:48","Actor":"dotnet-maestro[bot]","Number":"1726","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200228.3\r\n- **Date Produced**: 2/29/2020 12:26 AM\r\n- **Commit**: 5966c5dd9deb5aca8fd8183eec454cf6cf864d14\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20128.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1726","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1726)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"597967932","IsPullRequest":true,"CreatedAt":"2020-04-10T20:32:09","Actor":"pranavkm","Number":"42902","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42902","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#42902)"},{"Id":"587757768","IsPullRequest":true,"CreatedAt":"2020-04-10T16:19:35","Actor":"alnikola","Number":"42888","RawContent":null,"Title":"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler","State":"closed","Body":"This is port of dotnet/runtime#33158.\r\n\r\n**Description**\r\nPre-release WinHTTP's version supports client certificate-based authentication over HTTP/2, but the feature must be explicitly opted-in. PR sets WINHTTP_OPTION_ENABLE_HTTP2_PLUS_CLIENT_CERT to TRUE before invoking WinHttpConnect if the request's protocol is HTTP/2 and scheme is HTTPS.\r\n\r\n**Customer impact**\r\nWithout this change, it's not possible to use client certificate-based authentication on HTTP/2 in .Net Framework 4.7.2 and 4.8.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Packaging review**\r\nChange affects System.Net.Http.WinHttpHandler.dll which is distributed in System.Net.Http.WinHttpHandler package.\r\n\r\n**Risk**\r\n**Low**, covered by functional tests in master branch, but only manually tested for 3.1","Url":"https://github.com/dotnet/corefx/pull/42888","RelatedDescription":"Closed or merged PR \"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler\" (#42888)"},{"Id":"596769835","IsPullRequest":true,"CreatedAt":"2020-04-08T18:23:18","Actor":"joperezr","Number":"42901","RawContent":null,"Title":"Adding .NET Framework configurations to OOB packages so that they won't require the netstandard shims when targeting .NET Framework","State":"open","Body":"cc: @ericstj @Anipik @safern \r\n\r\nFixes https://github.com/dotnet/runtime/issues/1625\r\n\r\nThis PR will finish the work on the release/3.1 branch that was started with PR https://github.com/dotnet/corefx/pull/42849 on release/2.1 branch.\r\n\r\nThings that need to happen before merging this PR:\r\n\r\n- [X] Add Net461 configurations to all projects that today ship as NuGet packages and have a .NET Standard asset when consumer targets .NET Framework 4.6.1/4.6.2/4.7/4.7.1/4.7.2/4.8. (This will be done with the first commit, so that it is easier to review this commit by commit.)\r\n- [X] Add Net461 configuration to OpenSSL OOB package which also needs it, but it will be treated specially given that it requires some special types in S.S.C.Algorithms that are not present in 461. (Done with commit 10df782)\r\n- [x] Baseline all of the packages that have new configurations from steps 1 and 2, and now service all packages above that depend on them so that all new package versions will depend on these new packages that have the new configs. After doing this, all of our latest NuGet packages should not require the .NET Standard shims. (Done with 14b5db5)\r\n- [x] Do some extensive testing to make sure API wasn't regressed by adding these new configurations. (I have more info on how I did this here https://github.com/dotnet/corefx/pull/42901#issuecomment-611770142).","Url":"https://github.com/dotnet/corefx/pull/42901","RelatedDescription":"Open PR \"Adding .NET Framework configurations to OOB packages so that they won't require the netstandard shims when targeting .NET Framework\" (#42901)"},{"Id":"593547117","IsPullRequest":true,"CreatedAt":"2020-04-03T17:56:26","Actor":"omajid","Number":"42900","RawContent":null,"Title":"[release/3.1] Fix corefx to build on clang 10","State":"open","Body":"Clang 10 adds/enables new warnings, some of which is affecting the corefx code.\r\n\r\nClang 10 has added `-Walloca` to warn about uses of `alloca()`. This commit replaces the only non-compliant use of that with a single fixed stack-allocated buffer.\r\n\r\nClang 10 has also added `-Wimplicit-int-float-conversion`. This commit uses explicit casts to double to avoid the warnings.\r\n\r\nThis is a backport of dotnet/runtime#33734 to corefx.\r\n\r\nAfter this commit, I can build all of corefx with Clang 10.","Url":"https://github.com/dotnet/corefx/pull/42900","RelatedDescription":"Open PR \"[release/3.1] Fix corefx to build on clang 10\" (#42900)"},{"Id":"591386734","IsPullRequest":true,"CreatedAt":"2020-03-31T22:29:33","Actor":"Anipik","Number":"42899","RawContent":null,"Title":"Stablise the 3.1 branch","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42899","RelatedDescription":"Closed or merged PR \"Stablise the 3.1 branch\" (#42899)"},{"Id":"590339010","IsPullRequest":true,"CreatedAt":"2020-03-30T14:37:07","Actor":"s-tarasov","Number":"42898","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42898","RelatedDescription":"Closed or merged PR \"Update README.md\" (#42898)"},{"Id":"588584064","IsPullRequest":true,"CreatedAt":"2020-03-27T15:18:16","Actor":"joperezr","Number":"42894","RawContent":null,"Title":"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better","State":"closed","Body":"This is porting the last 3 commits that went into https://github.com/dotnet/runtime/pull/33459.\r\n\r\ncc: @Jozkee @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42894","RelatedDescription":"Closed or merged PR \"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better\" (#42894)"},{"Id":"587989374","IsPullRequest":true,"CreatedAt":"2020-03-27T03:12:16","Actor":"Anipik","Number":"42890","RawContent":null,"Title":"rev up assembly and package versions and add package to package builds","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42890","RelatedDescription":"Closed or merged PR \"rev up assembly and package versions and add package to package builds\" (#42890)"},{"Id":"588766967","IsPullRequest":true,"CreatedAt":"2020-03-26T23:06:51","Actor":"Anipik","Number":"42897","RawContent":null,"Title":"building platforms package","State":"closed","Body":"Related PR https://github.com/dotnet/corefx/pull/42872","Url":"https://github.com/dotnet/corefx/pull/42897","RelatedDescription":"Closed or merged PR \"building platforms package\" (#42897)"},{"Id":"588726249","IsPullRequest":true,"CreatedAt":"2020-03-26T22:51:13","Actor":"dotnet-maestro[bot]","Number":"42896","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200326.1\r\n- **Date Produced**: 3/26/2020 5:57 PM\r\n- **Commit**: 83c2d68edf0cc18cf06b12fb2d7eb41031676a3f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20176.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42896","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42896)"},{"Id":"588631300","IsPullRequest":true,"CreatedAt":"2020-03-26T22:47:01","Actor":"safern","Number":"42895","RawContent":null,"Title":"Bump branding to preview4 in 3.1-blazor branch","State":"closed","Body":"I looked at aspnetcore branding and they already moved to preview4.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/blazor-wasm/eng/Versions.props#L12","Url":"https://github.com/dotnet/corefx/pull/42895","RelatedDescription":"Closed or merged PR \"Bump branding to preview4 in 3.1-blazor branch\" (#42895)"},{"Id":"583846290","IsPullRequest":true,"CreatedAt":"2020-03-26T22:23:16","Actor":"bartonjs","Number":"42880","RawContent":null,"Title":"[release/2.1] Data loss - Don't delete private keys detected from SerializedCert imports","State":"closed","Body":"Port of https://github.com/dotnet/runtime/commit/2bcf71309065044c291de38809912b14437ee804","Url":"https://github.com/dotnet/corefx/pull/42880","RelatedDescription":"Closed or merged PR \"[release/2.1] Data loss - Don't delete private keys detected from SerializedCert imports\" (#42880)"},{"Id":"572290580","IsPullRequest":true,"CreatedAt":"2020-03-26T22:21:06","Actor":"bartonjs","Number":"42876","RawContent":null,"Title":"[release/2.1] Suppress the GrayListedLeaf error code on macOS X509Chain","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/32895.\r\n\r\n#### Description\r\n\r\nRecent change to macOS has caused a new error code to appear during X509Chain building. Since this error code has been identified as not having impact on the .NET X509Chain class, ignore it.\r\n\r\n#### Customer Impact\r\n\r\nWithout this fix, customers who upgrade their macOS version and build X509Chains against certificates/certificate-authorities which result in the GrayListedLeaf code will get a `CryptographicException` due to the unmapped error.\r\n\r\n#### Regression?\r\n\r\nNo, reaction to OS update.\r\n\r\n#### Packaging reviewed?\r\n\r\nRequired shim library, no packaging impact.\r\n\r\n#### Risk\r\n\r\n**Low**, covered by unit tests (which originally discovered the issue).","Url":"https://github.com/dotnet/corefx/pull/42876","RelatedDescription":"Closed or merged PR \"[release/2.1] Suppress the GrayListedLeaf error code on macOS X509Chain\" (#42876)"},{"Id":"588053330","IsPullRequest":true,"CreatedAt":"2020-03-26T17:22:38","Actor":"dotnet-maestro[bot]","Number":"42893","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.3\r\n- **Date Produced**: 3/26/2020 12:32 AM\r\n- **Commit**: f5d8d52a3033bccda3ed798ba25fcfd988f78019\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42893","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42893)"},{"Id":"588040516","IsPullRequest":true,"CreatedAt":"2020-03-26T02:17:35","Actor":"safern","Number":"42892","RawContent":null,"Title":"Publish only on all configurations and only publish Json package","State":"closed","Body":"This prevents us from publishing any transport packages in release/3.1-blazor package, and will only publish the json package added in: https://github.com/dotnet/corefx/pull/42889\r\n\r\nOnce that PR is merged, I'll test this on an official build and if green add the default channel and then merge.\r\n\r\ncc: @joperezr @ericstj","Url":"https://github.com/dotnet/corefx/pull/42892","RelatedDescription":"Closed or merged PR \"Publish only on all configurations and only publish Json package\" (#42892)"},{"Id":"587871901","IsPullRequest":true,"CreatedAt":"2020-03-26T01:14:17","Actor":"joperezr","Number":"42889","RawContent":null,"Title":"Add new System.Net.Http.Json project/namespace","State":"closed","Body":"Porting #42879 to new blazor branch. The 3.1 PR was already approved for servicing. It includes all commits from PR https://github.com/dotnet/runtime/pull/33459 up to https://github.com/dotnet/runtime/pull/33459/commits/4970a538111515c734bec677d2bc4cf8e8c88a75\r\n\r\ncc: @ericstj @Jozkee @jeffhandley @stephentoub @terrajobst @mkArtakMSFT @safern @GrabYourPitchforks ","Url":"https://github.com/dotnet/corefx/pull/42889","RelatedDescription":"Closed or merged PR \"Add new System.Net.Http.Json project/namespace\" (#42889)"},{"Id":"587999955","IsPullRequest":true,"CreatedAt":"2020-03-25T22:24:07","Actor":"dotnet-maestro[bot]","Number":"42891","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.1\r\n- **Date Produced**: 3/25/2020 7:29 PM\r\n- **Commit**: 9d9b5795356a138fb834dc4b7ff7141002904244\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42891","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42891)"},{"Id":"578554116","IsPullRequest":true,"CreatedAt":"2020-03-25T21:57:37","Actor":"saurabh500","Number":"42878","RawContent":null,"Title":"Porting OleDb transaction API failure fix","State":"closed","Body":"#### Description\r\n\r\nPort the changes from PR https://github.com/dotnet/runtime/pull/32573\r\nThe changes address https://github.com/dotnet/runtime/issues/31177 and https://github.com/dotnet/runtime/issues/32405\r\n\r\nThe problem manifests in the usage of OleDbTransaction throwing exceptions in System.Data.OleDb. This is caused because a duplicate interface but with incorrect Guid for ITransaction.\r\nThe fix removes the duplicate interface and also releases the COM objects once they have been used.\r\n\r\n#### Customer Impact\r\n\r\nThe customers will be able to use OleDbTransaction.Commit() and OleDbTransaction.RollBack(), successfully. These APIs are important to perform actions on OleDb providers with transaction support.\r\nAlso OleDbConnection.Dispose() would call OleDbTransaction.Rollback(), which used to fail silently underneath. These above issues would be addressed for customer.\r\n\r\n\r\n#### Regression?\r\n\r\nThis is not a regression, and the bug had existed since the beginning. \r\n\r\n#### Risk\r\n\r\nNo risks identified.\r\n\r\n#### Packaging changes reviewed? (if a libraries change) \r\n\r\nPackage changes added after getting guidance from @anipik","Url":"https://github.com/dotnet/corefx/pull/42878","RelatedDescription":"Closed or merged PR \"Porting OleDb transaction API failure fix\" (#42878)"},{"Id":"570892707","IsPullRequest":true,"CreatedAt":"2020-03-25T21:55:32","Actor":"vcsjones","Number":"42873","RawContent":null,"Title":"[release/3.1] Permit incorrectly DER sorted SET for decoding X500 names.","State":"closed","Body":"This is a cherry-pick of https://github.com/dotnet/runtime/commit/b12c90179f115f9b7979263da529921607412f6d to port the fix from dotnet/runtime#32558 in to the 3.1 release branch.\r\n\r\n/cc @bartonjs @danmosemsft \r\n\r\n## Description\r\n\r\n`X500DistinguishedName` values that do not follow the specified sort order decode as the empty string on .NET Core 3.0+ on Linux, but work on Windows.   This change makes the Linux build match the Windows behavior.\r\n\r\nThe fix is to simply skip a specific data conformance validation check, which only has a visible impact on non-conforming values now being accepted.\r\n\r\n## Customer Impact\r\n\r\nReported by Pivotal. Customers that encounter X.509 certificates with a subject name, or issuer name, that contains a segment that is not canonically encoded will see that subject name (or issuer name) as the empty string on .NET Core 3.1 on Linux.\r\n\r\nThis problem only applies to X500DistinguishedName values that use a \"multi-RDN\" value, which is not very common (the CA/Browser forum Baseline Recommendations do not explicitly say to not use this encoding, but their description of distinguished name values uses \"single-value\" terminology).\r\n\r\n## Regression\r\n\r\nYes, from 2.1.  The underlying data reader was replaced during 3.0, with the new reader validating by default and the old reader not validating.\r\n\r\n### Testing\r\n\r\nAdded a unit test to verify that non-conforming data decodes the same on all platforms.\r\n\r\n## Risk\r\n\r\n**Low**.  The change merely bypasses a conformance check, explicitly choosing to accept non-conforming data. The unit tests confirms that the same answer is given for Windows and Linux.","Url":"https://github.com/dotnet/corefx/pull/42873","RelatedDescription":"Closed or merged PR \"[release/3.1] Permit incorrectly DER sorted SET for decoding X500 names.\" (#42873)"},{"Id":"574199017","IsPullRequest":true,"CreatedAt":"2020-03-25T21:14:34","Actor":"microkatz","Number":"42877","RawContent":null,"Title":"[release/3.1] Fix HTTP Digest authentication","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/32983. Original issue: https://github.com/dotnet/runtime/issues/32943\r\n\r\n#### Description\r\n\r\nThis bug was found in testing http requests with a Bosch IP Camera that supports the ONVIF protocol. Bosch is a large manufacturer in the realm of ONVIF compliant cameras. A Bosch camera that was being tested sent a digest challenge with the opaque value as an empty-string. The current dotnet core library fails to use the correct digest scheme because it breaks on parsing the empty string. \r\n\r\n#### Customer Impact\r\n\r\nWithout this fix, customers can not communicate with the Bosch IP Cameras which use HTTP Digest communications.\r\n\r\n#### Regression?\r\n\r\nNo\r\n\r\n#### Packaging reviewed?\r\n\r\nChange needed to System.Net.Http.dll which is part of the shared framework Microsoft.NETCore.App package.\r\n\r\n#### Risk\r\n\r\n**Low**, covered by unit tests","Url":"https://github.com/dotnet/corefx/pull/42877","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix HTTP Digest authentication\" (#42877)"},{"Id":"583846914","IsPullRequest":true,"CreatedAt":"2020-03-25T21:07:45","Actor":"bartonjs","Number":"42881","RawContent":null,"Title":"[release/3.1] Data loss - Don't delete private keys detected from SerializedCert imports","State":"closed","Body":"Port of https://github.com/dotnet/runtime/commit/2bcf71309065044c291de38809912b14437ee804","Url":"https://github.com/dotnet/corefx/pull/42881","RelatedDescription":"Closed or merged PR \"[release/3.1] Data loss - Don't delete private keys detected from SerializedCert imports\" (#42881)"},{"Id":"572283938","IsPullRequest":true,"CreatedAt":"2020-03-25T20:40:54","Actor":"bartonjs","Number":"42875","RawContent":null,"Title":"[release/3.1] Suppress the GrayListedLeaf error code on macOS X509Chain","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/32895.\r\n\r\n#### Description\r\n\r\nRecent change to macOS has caused a new error code to appear during X509Chain building. Since this error code has been identified as not having impact on the .NET X509Chain class, ignore it.\r\n\r\n#### Customer Impact\r\n\r\nWithout this fix, customers who upgrade their macOS version and build X509Chains against certificates/certificate-authorities which result in the GrayListedLeaf code will get a `CryptographicException` due to the unmapped error.\r\n\r\n#### Regression?\r\n\r\nNo, reaction to OS update.\r\n\r\n#### Packaging reviewed?\r\n\r\nRequired shim library, no packaging impact.\r\n\r\n#### Risk\r\n\r\n**Low**, covered by unit tests (which originally discovered the issue).","Url":"https://github.com/dotnet/corefx/pull/42875","RelatedDescription":"Closed or merged PR \"[release/3.1] Suppress the GrayListedLeaf error code on macOS X509Chain\" (#42875)"},{"Id":"587358274","IsPullRequest":true,"CreatedAt":"2020-03-25T18:35:42","Actor":"Anipik","Number":"42886","RawContent":null,"Title":"update branding done for 3.1.4","State":"closed","Body":"- updated branding\r\n- disable stable builds to produce suffix netcoreapp package\r\n- clear packages.build\r\n- updated packageindex","Url":"https://github.com/dotnet/corefx/pull/42886","RelatedDescription":"Closed or merged PR \"update branding done for 3.1.4\" (#42886)"},{"Id":"582831241","IsPullRequest":true,"CreatedAt":"2020-03-25T17:40:53","Actor":"Jozkee","Number":"42879","RawContent":null,"Title":"[release/3.1] Add new System.Net.Http.Json project/namespace","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/33459\r\n**Note that the runtime PR is still open, so please add all feedback that is not related to release/3.1 there** (all new commits on that PR will be ported into here as well)\r\n# Description\r\nSerializing and deserializing JSON payloads from the network is a very common operation for clients, especially in the upcoming Blazor environment. Right now, sending a JSON payload to the server requires multiple lines of code, which will be a major speed bump for those customers. We'd like to add extension methods on top of HttpClient that allows doing those operations with a single method call.\r\n\r\nThis creates a package that targets netstandard2.0 only. \r\nThis does not ship inbox in this branch.\r\n\r\n# Customer Impact\r\nThis provides a solution that serves as a replacement of the old-fashioned [Microsoft.AspNet.WebApi.Client](https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Client), that is compatible with netstandard2.0 and can be used by Blazor WebAssembly apps.\r\n\r\n# Regression\r\nNone. \r\nThis is a brand new project.\r\n\r\n# Testing\r\nAdded unit tests to verify correct behavior of API surface.\r\nAdded unit tests to verify correct behavior of transcoding semantics.\r\n\r\n# Risk\r\nThis is a whole new API that has not even shipped as a preview in runtime, and it is still on active development. ","Url":"https://github.com/dotnet/corefx/pull/42879","RelatedDescription":"Closed or merged PR \"[release/3.1] Add new System.Net.Http.Json project/namespace\" (#42879)"},{"Id":"587368089","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:47","Actor":"Anipik","Number":"42887","RawContent":null,"Title":"branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42887","RelatedDescription":"Closed or merged PR \"branding for 2.1.18\" (#42887)"},{"Id":"587298720","IsPullRequest":true,"CreatedAt":"2020-03-25T00:26:50","Actor":"dotnet-maestro-bot","Number":"42885","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28619-01, servicing-28619-01, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42885","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28619-01, servicing-28619-01, stable, respectively (release/2.1)\" (#42885)"},{"Id":"587197172","IsPullRequest":true,"CreatedAt":"2020-03-24T22:36:16","Actor":"safern","Number":"42884","RawContent":null,"Title":"Clear package list for 3.1-blazor branch","State":"closed","Body":"cc: @joperezr @ericstj @Anipik ","Url":"https://github.com/dotnet/corefx/pull/42884","RelatedDescription":"Closed or merged PR \"Clear package list for 3.1-blazor branch\" (#42884)"},{"Id":"586620784","IsPullRequest":true,"CreatedAt":"2020-03-24T07:09:20","Actor":"safern","Number":"42883","RawContent":null,"Title":"Update branding for release/3.1-blazor","State":"closed","Body":"cc: @joperezr @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42883","RelatedDescription":"Closed or merged PR \"Update branding for release/3.1-blazor\" (#42883)"},{"Id":"586614324","IsPullRequest":true,"CreatedAt":"2020-03-24T01:02:01","Actor":"safern","Number":"42882","RawContent":null,"Title":"Test PR Builds in new branch","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42882","RelatedDescription":"Closed or merged PR \"Test PR Builds in new branch\" (#42882)"},{"Id":"570943287","IsPullRequest":true,"CreatedAt":"2020-02-26T00:10:21","Actor":"cston","Number":"42874","RawContent":null,"Title":"[release/3.1] Improve Expression.Lambda<TDelegate> performance (dotnet/runtime#32768)","State":"open","Body":"Port of https://github.com/dotnet/runtime/pull/32768\r\nFixes https://github.com/dotnet/runtime/issues/32767\r\n\r\n### Description\r\nAn `Expression` lambda delegate cache was added in .NET Core 2.0. If there are many calls to `Expression.Lambda<TDelegate>()` overloads with distinct delegate types which result in cache misses, the result is a performance regression. \r\n\r\n### Customer Impact\r\nPerformance regression with many calls to `Expression.Lambda<TDelegate>()` with distinct delegate types. Customer reported this impact in a migration from .NET Framework to .NET Core.\r\n\r\n### Packaging Impact\r\nNone\r\n\r\n### Regression\r\nRegression from .NET Core 1.0, and .NET Framework.\r\n \r\n### Testing\r\nSee benchmark testing in https://github.com/dotnet/runtime/issues/32767.\r\n\r\n### Risk\r\nLow. The change avoids the cache and allocates a distinct `Expression<TDelegate>` each time.\r\n\r\ncc @ericstj","Url":"https://github.com/dotnet/corefx/pull/42874","RelatedDescription":"Open PR \"[release/3.1] Improve Expression.Lambda<TDelegate> performance (dotnet/runtime#32768)\" (#42874)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"598401255","IsPullRequest":false,"CreatedAt":"2020-04-12T03:27:44","Actor":"jcouv","Number":"43292","RawContent":null,"Title":"Using declaration with ‘_’ should be a discard","State":"open","Body":"[Sharplab](https://sharplab.io/#v2:CYLg1APgAgTAjAWAFBQMwAJboMLpOgSQBEBLAZwAcB7MgQwCMAbAU3QG9l0vMMoAWdAFkAFAEp0nbhyTdZmAAzoAbrQBO6AProAvOgB2zAO44xAbklzNAOgAqVAMoAXVST0BzMxfQBfL2kwCpJQ0zGLsvkjeQA==)\r\n\r\n‘using var _ = ...;’ currently introduces a local in scope and it can be accessed. ‘_.ToString();’ should fail.\r\n\r\nTagging @chsienki \r\n\r\nReported on [SO](https://stackoverflow.com/questions/61151278/using-statement-in-c-sharp-8-without-a-variable)","Url":"https://github.com/dotnet/roslyn/issues/43292","RelatedDescription":"Open issue \"Using declaration with ‘_’ should be a discard\" (#43292)"},{"Id":"598397640","IsPullRequest":false,"CreatedAt":"2020-04-12T03:01:12","Actor":"jnm2","Number":"43291","RawContent":null,"Title":"Offer 'Convert to conditional expression' between throw and return statements","State":"open","Body":"**Version Used**: 16.5.3\r\n\r\n'Convert to switch expression' is offered here but not 'Convert conditional expression':\r\n\r\n```cs\r\nclass C\r\n{\r\n    int M()\r\n    {\r\n        var index = 42;\r\n\r\n        [||]if (index == -1)\r\n        {\r\n            throw new InvalidOperationException(\"...\");\r\n        }\r\n\r\n        return index;\r\n    }\r\n}\r\n```\r\n\r\nIf you change the `throw` statement to a `return` statement, 'Convert conditional expression' shows up as expected.","Url":"https://github.com/dotnet/roslyn/issues/43291","RelatedDescription":"Open issue \"Offer 'Convert to conditional expression' between throw and return statements\" (#43291)"},{"Id":"598394955","IsPullRequest":false,"CreatedAt":"2020-04-12T02:41:15","Actor":"jnm2","Number":"43290","RawContent":null,"Title":"'Generate Equals/GetHashCode' generates calls to abstract base members","State":"open","Body":"**Version Used**: VS 16.5.3\r\n\r\nChoose 'Generate Equals and GetHashCode...' here:\r\n\r\n```cs\r\nabstract class Base\r\n{\r\n    public abstract override bool Equals(object? obj);\r\n    public abstract override int GetHashCode();\r\n}\r\n\r\nclass [||]Derived : Base\r\n{\r\n    public int P { get; }\r\n}\r\n```\r\n\r\nResulting code:\r\n\r\n```cs\r\n    public override bool Equals(object? obj)\r\n    {\r\n        return obj is Derived derived &&\r\n               /* ❌ CS0205 Cannot call an abstract base member: 'Base.Equals(object?)'\r\n               ↓↓↓↓↓↓↓↓↓↓↓ */\r\n               base.Equals(obj) &&\r\n               P == derived.P;\r\n    }\r\n\r\n    public override int GetHashCode()\r\n    {\r\n        // ❌ CS0205 Cannot call an abstract base member: 'Base.GetHashCode()'\r\n        //                      ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\n        return HashCode.Combine(base.GetHashCode(), P);\r\n    }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/43290","RelatedDescription":"Open issue \"'Generate Equals/GetHashCode' generates calls to abstract base members\" (#43290)"},{"Id":"598376483","IsPullRequest":true,"CreatedAt":"2020-04-12T01:29:52","Actor":"dotnet-bot","Number":"43289","RawContent":null,"Title":"Merge master to features/source-generators","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/source-generators.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/source-generators\ngit reset --hard upstream/features/source-generators\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/source-generators --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43289","RelatedDescription":"Closed or merged PR \"Merge master to features/source-generators\" (#43289)"},{"Id":"598376457","IsPullRequest":true,"CreatedAt":"2020-04-12T01:29:47","Actor":"dotnet-bot","Number":"43288","RawContent":null,"Title":"Merge master to features/patterns3","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/patterns3.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/patterns3\ngit reset --hard upstream/features/patterns3\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/patterns3 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43288","RelatedDescription":"Closed or merged PR \"Merge master to features/patterns3\" (#43288)"},{"Id":"598356217","IsPullRequest":false,"CreatedAt":"2020-04-11T21:39:01","Actor":"TessenR","Number":"43287","RawContent":null,"Title":"Incorrect CS8670 warning for possible dereference in initializer that actually doesn't happen","State":"open","Body":"**Version Used**: \r\n\r\n```\r\nBranch master (10 Mar 2020)\r\nLatest commit 441c154 by msftbot[bot]:\r\nMerge pull request #42303 from CyrusNajmabadi/useCompoundParens\r\n\r\nSupport parenthesized expressions in use-compound-operator.\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  C? f = null;\r\n\r\n  static void Main()\r\n  {\r\n    var c = new C() {f = { f = { }  }};\r\n    c.f = new C();\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings. No dereferencing happens in the object initializer and the code runs without exceptions.\r\n\r\n**Actual Behavior**:\r\n`warning CS8670: Object or collection initializer implicitly dereferences possibly null member 'C.f'.`","Url":"https://github.com/dotnet/roslyn/issues/43287","RelatedDescription":"Open issue \"Incorrect CS8670 warning for possible dereference in initializer that actually doesn't happen\" (#43287)"},{"Id":"598313843","IsPullRequest":true,"CreatedAt":"2020-04-11T17:30:18","Actor":"louis-z","Number":"43286","RawContent":null,"Title":"Fix broken links and some grammatical errors in FixAllProvider.md","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43286","RelatedDescription":"Open PR \"Fix broken links and some grammatical errors in FixAllProvider.md\" (#43286)"},{"Id":"598295359","IsPullRequest":false,"CreatedAt":"2020-04-11T15:54:32","Actor":"VBAndCs","Number":"43285","RawContent":null,"Title":"Hide Tags from collapsed method signature","State":"open","Body":"This is a VB.NET sample but consider C# also:\r\n```VB.NET\r\n<InlineData(\"/Test-View.cshtml\")>\r\n<InlineData(\"~/Test-View.CSHTML\")>\r\n<InlineData(\"/Home/Test-View.CSHTML\")>\r\n<InlineData(\"~/Home/Test-View.cshtml\")>\r\n<InlineData(\"~/SHARED/TEST-VIEW.CSHTML\")>\r\nPublic Sub Foo(pageName As String)\r\n\r\nEnd Sub\r\n```\r\n\r\nAfter collapsing this method, this is the text I see:\r\n`<InlineData(\"/Test-View.cshtml\")><InlineData(\"~/Test-View.CSHTML\")><InlineData(\"/Home/Test-View.CSHTML\")><InlineData(\"~/Home/Test-View.cshtml\")><InlineData(\"~/SHARED/TEST-VIEW.CSHTML\")>Public Sub Foo(pageName As String) ...`\r\n\r\nWhich is too long unuseful title. I expect to see the method signature only without and attributes.\r\nAfter collapsing this method, this is the text I see:\r\n`Public Sub Foo(pageName As String) ...`\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/43285","RelatedDescription":"Open issue \"Hide Tags from collapsed method signature\" (#43285)"},{"Id":"598274873","IsPullRequest":false,"CreatedAt":"2020-04-11T14:16:47","Actor":"CreateAndInject","Number":"43284","RawContent":null,"Title":"Allow Type in watch window in order to view its static members.","State":"open","Body":"Like VS2010:\r\n![image](https://user-images.githubusercontent.com/2529999/79046198-09a95700-7c42-11ea-9fd2-0d00ccd0b79a.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/43284","RelatedDescription":"Open issue \"Allow Type in watch window in order to view its static members.\" (#43284)"},{"Id":"598232989","IsPullRequest":true,"CreatedAt":"2020-04-11T09:53:50","Actor":"vivekrajr","Number":"43283","RawContent":null,"Title":"Adds analyzerconfig documentation to csc usage message","State":"open","Body":"Fix for #41367","Url":"https://github.com/dotnet/roslyn/pull/43283","RelatedDescription":"Open PR \"Adds analyzerconfig documentation to csc usage message\" (#43283)"},{"Id":"598178859","IsPullRequest":true,"CreatedAt":"2020-04-11T03:20:59","Actor":"jnm2","Number":"43281","RawContent":null,"Title":"Codegen for module initializers feature","State":"open","Body":"Test plan: https://github.com/dotnet/roslyn/issues/40500\r\n\r\nI have simple codegen working and would like feedback on the approach.\r\n\r\nThe two things I know of that remain are marked by TODO comments:\r\n- Diagnostics/test scenarios in  https://github.com/dotnet/roslyn/issues/40500\r\n- Deterministic call order\r\n\r\nI haven't started looking at either of them yet. Would this PR be good to merge to the feature branch this way?","Url":"https://github.com/dotnet/roslyn/pull/43281","RelatedDescription":"Open PR \"Codegen for module initializers feature\" (#43281)"},{"Id":"598166009","IsPullRequest":true,"CreatedAt":"2020-04-11T01:53:14","Actor":"gafter","Number":"43280","RawContent":null,"Title":"Address some crashes found by fuzz testing.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43280","RelatedDescription":"Open PR \"Address some crashes found by fuzz testing.\" (#43280)"},{"Id":"598160995","IsPullRequest":false,"CreatedAt":"2020-04-11T01:18:37","Actor":"jbevain","Number":"43279","RawContent":null,"Title":"Intellisense regression in 16.5 for ref lambda parameters","State":"open","Body":"**Version Used**: \r\nVerified in VS 16.5, VSM 8.5\r\nRegression from 16.4/8.4\r\n\r\n**Steps to Reproduce**:\r\nSupporting code:\r\n\r\n```csharp\r\npublic interface IComponentData\r\n{\r\n}\r\npublic class EntitiesQueryBuilder\r\n{\r\n\tpublic delegate void F_D<T0>(ref T0 d0) where T0 : struct, IComponentData;\r\n\tpublic void ForEach<T0>(F_D<T0> f) where T0 : struct, IComponentData\r\n\t{\r\n\t}\r\n}\r\npublic abstract class Component\r\n{\r\n\tpublic EntitiesQueryBuilder Entities => null;\r\n\tprotected abstract void OnUpdate();\r\n}\r\npublic struct Person : IComponentData\r\n{\r\n\tpublic float HP;\r\n}\r\npublic class PersonComponent : Component\r\n{\r\n\tprotected override void OnUpdate()\r\n\t{\r\n\t\tEntities.ForEach((ref Person p) =>\r\n\t\t{\r\n\t\t});\r\n\t}\r\n}\r\n```\r\n\r\n1. Paste code in a C# project\r\n2. Go to the `OnUpdate` method in `PersonComponent`\r\n3. Go into the lambda passed to the ForEach call.\r\n4. Type `p.` and ask for completion.\r\n\r\n**Expected Behavior**:\r\nHP field should be available in the IntelliSense.\r\n\r\n**Actual Behavior**:\r\nHP field is not visible anymore in the list presented by IntelliSense.\r\n\r\nThis is a best effort repro from the Unity APIs. This has been originally reported on the [Unity forums](https://forum.unity.com/threads/ecs-intellisense-malfunctioning-work-around.861274/)\r\n\r\nSee picture:\r\n\r\n![image](https://user-images.githubusercontent.com/79284/79031960-9fb48300-7b57-11ea-97a2-c57aa28cdc0b.png)\r\n\r\nThis might be related to  #42910.","Url":"https://github.com/dotnet/roslyn/issues/43279","RelatedDescription":"Open issue \"Intellisense regression in 16.5 for ref lambda parameters\" (#43279)"},{"Id":"598069973","IsPullRequest":true,"CreatedAt":"2020-04-10T23:52:08","Actor":"dibarbet","Number":"43272","RawContent":null,"Title":"Remove previous docker container","State":"closed","Body":"In addition to killing the previous docker container, we should remove it so we can re-use the name.\r\n\r\nExample failure if the container is not removed - https://dev.azure.com/dnceng/public/_build/results?buildId=596677&view=logs&j=0bb0e3da-a79e-5da9-5d54-e0768ef96e56&t=d5e17906-1333-5933-671b-e536ad5fb7e2","Url":"https://github.com/dotnet/roslyn/pull/43272","RelatedDescription":"Closed or merged PR \"Remove previous docker container\" (#43272)"},{"Id":"598139036","IsPullRequest":true,"CreatedAt":"2020-04-10T23:28:44","Actor":"sharwell","Number":"43278","RawContent":null,"Title":"Support CompletionProvider in NuGet packages","State":"open","Body":"Closes #30270","Url":"https://github.com/dotnet/roslyn/pull/43278","RelatedDescription":"Open PR \"Support CompletionProvider in NuGet packages\" (#43278)"},{"Id":"598106899","IsPullRequest":true,"CreatedAt":"2020-04-10T21:40:34","Actor":"sharwell","Number":"43277","RawContent":null,"Title":"Enable nullable reference types in the formatter","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43277","RelatedDescription":"Open PR \"Enable nullable reference types in the formatter\" (#43277)"},{"Id":"598104515","IsPullRequest":true,"CreatedAt":"2020-04-10T21:33:26","Actor":"AlekseyTs","Number":"43276","RawContent":null,"Title":"Finalize the story around instrumentation for top-level statements in a Simple Program.","State":"open","Body":"Related to #41704.","Url":"https://github.com/dotnet/roslyn/pull/43276","RelatedDescription":"Open PR \"Finalize the story around instrumentation for top-level statements in a Simple Program.\" (#43276)"},{"Id":"598097429","IsPullRequest":true,"CreatedAt":"2020-04-10T21:13:28","Actor":"jcouv","Number":"43275","RawContent":null,"Title":"Add support for init-only members","State":"open","Body":"Part of records feature: \r\n- https://github.com/dotnet/csharplang/issues/39 (championed issue)\r\n- https://github.com/dotnet/roslyn/issues/40726 (test plan)\r\nSpeclet: https://github.com/jaredpar/csharplang/blob/init/proposals/init.md\r\n\r\nNote: the first commit is a refactoring to one file.\r\n","Url":"https://github.com/dotnet/roslyn/pull/43275","RelatedDescription":"Open PR \"Add support for init-only members\" (#43275)"},{"Id":"598090153","IsPullRequest":false,"CreatedAt":"2020-04-10T20:53:17","Actor":"ajaybhargavb","Number":"43274","RawContent":null,"Title":"Support LSP hover outside of LiveShare","State":"open","Body":"Roslyn already contains the support for LSP hover but was explicitly disabled on non-liveshare scenarios (https://github.com/dotnet/roslyn/pull/40937) due to classifications not being supported in LSP hover.\r\n\r\nBut we need the C# language server to support hover in order to make C# hovers work in Razor files (even though we might be missing classifications until it is supported).\r\n\r\ncc @dibarbet ","Url":"https://github.com/dotnet/roslyn/issues/43274","RelatedDescription":"Open issue \"Support LSP hover outside of LiveShare\" (#43274)"},{"Id":"598071659","IsPullRequest":false,"CreatedAt":"2020-04-10T20:13:02","Actor":"faso","Number":"43273","RawContent":null,"Title":"Generate constructor not taking into account NRT for type parameters","State":"open","Body":"**Version Used**: \r\nLatest\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Write a class with a field of type `T?`\r\n2. Generate constructor\r\n\r\n**Expected Behavior**:\r\nConstructor should have a parameter of type T?\r\n\r\n**Actual Behavior**:\r\nThe parameter is of type T\r\n\r\nRelated to \r\nhttps://github.com/dotnet/roslyn/issues/41428\r\nand\r\nhttps://github.com/dotnet/roslyn/pull/43083\r\n\r\nI would like to work on this myself\r\n","Url":"https://github.com/dotnet/roslyn/issues/43273","RelatedDescription":"Open issue \"Generate constructor not taking into account NRT for type parameters\" (#43273)"},{"Id":"598057046","IsPullRequest":false,"CreatedAt":"2020-04-10T19:33:12","Actor":"mavasani","Number":"43271","RawContent":null,"Title":"IDE0065 (Using directives must be placed outside of a namespace declaration) is noisy for alias declarations inside namespace","State":"open","Body":"**Version Used**: Latest\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nusing System;\r\n\r\nnamespace N\r\n{\r\n    using GenericInt = GenericClass<int>;\r\n\r\n    public static class A\r\n    {\r\n        public static void M(GenericInt g)\r\n        {\r\n            Console.WriteLine(\"Hello\");\r\n        }\r\n    }\r\n\r\n    public static class GenericClass<T>\r\n    { \r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nEither `IDE0065` does not fire or it has a code style option to allow alias declarations inside namespace. This is a very common pattern and is sometimes essential for correct type resolution.\r\n\r\n**Actual Behavior**:\r\n`IDE0065` fires. This makes it very difficult to enforce this rule on CI.","Url":"https://github.com/dotnet/roslyn/issues/43271","RelatedDescription":"Open issue \"IDE0065 (Using directives must be placed outside of a namespace declaration) is noisy for alias declarations inside namespace\" (#43271)"},{"Id":"598050279","IsPullRequest":true,"CreatedAt":"2020-04-10T19:15:45","Actor":"gafter","Number":"43270","RawContent":null,"Title":"Merge master to features/patterns3","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43270","RelatedDescription":"Open PR \"Merge master to features/patterns3\" (#43270)"},{"Id":"598046925","IsPullRequest":true,"CreatedAt":"2020-04-10T19:07:25","Actor":"chsienki","Number":"43269","RawContent":null,"Title":"Remove older source generators proposal, and redirect to the new one","State":"open","Body":"Deletes the contents of the older proposal, but leaves the file in place in case of existing links.","Url":"https://github.com/dotnet/roslyn/pull/43269","RelatedDescription":"Open PR \"Remove older source generators proposal, and redirect to the new one\" (#43269)"},{"Id":"598036081","IsPullRequest":true,"CreatedAt":"2020-04-10T18:46:18","Actor":"jaredpar","Number":"43268","RawContent":null,"Title":"Update Language Feature Status","State":"open","Body":"Reflecting our current status","Url":"https://github.com/dotnet/roslyn/pull/43268","RelatedDescription":"Open PR \"Update Language Feature Status\" (#43268)"},{"Id":"598032304","IsPullRequest":false,"CreatedAt":"2020-04-10T18:38:40","Actor":"CyrusNajmabadi","Number":"43267","RawContent":null,"Title":"DateTime completion should work in string interpolation format strings.","State":"open","Body":"i.e. here: `$\"Hello, {name}! Today is {date.DayOfWeek}, it's {date:HH:mm} now.\"`\r\n\r\nShould be fairly straightforward to do.  Just need to update the code to not just expect string literals, but also interpolation format strings where the expr type is the right form.","Url":"https://github.com/dotnet/roslyn/issues/43267","RelatedDescription":"Open issue \"DateTime completion should work in string interpolation format strings.\" (#43267)"},{"Id":"598016570","IsPullRequest":true,"CreatedAt":"2020-04-10T18:02:16","Actor":"dotnet-bot","Number":"43266","RawContent":null,"Title":"Merge release/dev16.6 to release/dev16.6-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.6 into release/dev16.6-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.6-to-release/dev16.6-vs-deps\ngit reset --hard upstream/release/dev16.6-vs-deps\ngit merge upstream/release/dev16.6\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.6-to-release/dev16.6-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43266","RelatedDescription":"Open PR \"Merge release/dev16.6 to release/dev16.6-vs-deps\" (#43266)"},{"Id":"598015555","IsPullRequest":false,"CreatedAt":"2020-04-10T18:00:02","Actor":"vsfeedback","Number":"43265","RawContent":null,"Title":"NullReferenceException in DependentProjectsFinder.CreateInternalsVisibleToMap","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/982794/streamjsonrpcremoteinvocationexception-when-adding.html)._\n\n---\n[regression] [worked-in:16.4.2]\r\n_(Not sure about the previous version. I updated to 16.5.3 this morning & it was up to date before that. 16.4.2 is my best guess for the previous version)_\n\nWhen addinging an assemblyinfo.cs file to a .Net Core 3.1 Web Api project I get the following error...\n\nStreamJsonRpc.RemoteInvocationException : Object reference not set to an instance of an object.\n   at async StreamJsonRpc.JsonRpc.InvokeCoreAsync[TResult](<Unknown Parameters>)\n   at async Microsoft.CodeAnalysis.Remote.RemoteEndPoint.InvokeAsync[T](<Unknown Parameters>)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n---> (Remote Exception) {\n  \"type\": \"System.NullReferenceException\",\n  \"message\": \"Object reference not set to an instance of an object.\",\n  \"stack\": \"   at Microsoft.CodeAnalysis.FindSymbols.DependentProjectsFinder.<>c__DisplayClass14_0.<CreateInternalsVisibleToMap>b__0()\\r\\n   at System.Lazy`1.CreateValue()\\r\\n   at System.Lazy`1.LazyInitValue()\\r\\n   at System.Lazy`1.get_Value()\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DependentProjectsFinder.<HasInternalsAccessAsync>d__13.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DependentProjectsFinder.<AddNonSubmissionDependentProjectsAsync>d__12.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DependentProjectsFinder.<GetDependentProjectsCoreAsync>d__8.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DependentProjectsFinder.<GetDependentProjectsWorkerAsync>d__7.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DependentProjectsFinder.<GetDependentProjectsAsync>d__4.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<CreateProjectMapAsync>d__19.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<FindReferencesAsync>d__11.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__30.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.<FindReferencesAsync>d__36.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.CodeLens.CodeLensReferencesService.<FindAsync>d__1`1.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.Remote.CodeAnalysisService.<>c__DisplayClass4_0.<<GetReferenceCountAsync>b__0>d.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.Remote.ServiceBase.<RunServiceAsync>d__15`1.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\",\n  \"code\": -2147467261,\n  \"inner\": null\n} <---\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 4/8/2020, 11:58 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/43265","RelatedDescription":"Open issue \"NullReferenceException in DependentProjectsFinder.CreateInternalsVisibleToMap\" (#43265)"},{"Id":"598003094","IsPullRequest":true,"CreatedAt":"2020-04-10T17:30:59","Actor":"CyrusNajmabadi","Number":"43263","RawContent":null,"Title":"Show the user how their actual format string will format a DateTime","State":"open","Body":"Looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/79010188-4d06a700-7b16-11ea-8325-397938c61787.png)\r\n\r\nUseful to not just know what the individual format characters mean, but how the entire formatted date will look.\r\n\r\nSpecifically, this part was added:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/79016251-4f233280-7b23-11ea-90d5-fb98389d3619.png)\r\n\r\nPreviously, ew just showed `ss -> 30`.  ","Url":"https://github.com/dotnet/roslyn/pull/43263","RelatedDescription":"Open PR \"Show the user how their actual format string will format a DateTime\" (#43263)"},{"Id":"598013308","IsPullRequest":false,"CreatedAt":"2020-04-10T17:01:33","Actor":"KernelErr0r","Number":"43264","RawContent":null,"Title":"An infinite loop of implicit convertions","State":"open","Body":"This smart hack to remove generics makes an infinite loop of implicit conversions. I think it shouldn't call the same operator twice in a row. Is it some kind of a bug, unpredicted behavior or does it have to work that way?\r\n```cs\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tModule module = new Module<string>();\r\n\t}\r\n}\r\n\r\npublic class Module : Module<object>\r\n{\r\n\r\n}\r\n\r\npublic class Module<T>\r\n{\r\n\tpublic static implicit operator Module(Module<T> module)\r\n\t{\r\n\t\treturn module;\r\n\t}\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/43264","RelatedDescription":"Open issue \"An infinite loop of implicit convertions\" (#43264)"},{"Id":"598192624","IsPullRequest":false,"CreatedAt":"2020-04-08T23:10:38","Actor":"mburbea","Number":"43282","RawContent":null,"Title":"Getting a CS0570 while debugging a default interface generator method of a variant interface ","State":"open","Body":"Consider the following interface and a dummy class that implements it.\r\n```cs\r\ninterface I<out T>\r\n{\r\n    System.Collections.Generic.IEnumerable<T> M()\r\n    {\r\n        var x = default(T);\r\n        yield return x;\r\n    }\r\n}\r\n\r\npublic class C : I<C>\r\n{\r\n    public static void Main() => System.Linq.Enumerable.Any(((I<C>)new C()).M());\r\n}\r\n```\r\nnow put a breakpoint on line 6 (`yield return x`).\r\nExecute the program and you'll notice something odd if you try to watch `x`, It tells you the following::\r\n\r\n> error CS0570: '<>x<T>.<>m0(I<T>.<M>d__0)' is not supported by the language\r\n\r\nObviously, the program works so it is supported by the language, but the debugger has no idea what to do with it. \r\nThis also happens for `async` (`Task{T}`,`ValueTask{T}`, or `IAsyncEnumerable<T>`) returning methods\r\n","Url":"https://github.com/dotnet/roslyn/issues/43282","RelatedDescription":"Open issue \"Getting a CS0570 while debugging a default interface generator method of a variant interface \" (#43282)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"598403897","IsPullRequest":false,"CreatedAt":"2020-04-12T03:48:49","Actor":"xdrie","Number":"8083","RawContent":null,"Title":"recommended way to analyze size of output binary","State":"open","Body":"I followed the [instructions](https://github.com/dotnet/corert/tree/master/samples/MonoGame) for the MonoGame sample to publish to a native binary compiled with CoreRT.\r\n\r\nHowever, the output size is quite a bit larger with my application than with this template application, and I would like to figure out what is contributing to the size. My application references multiple packages and other assemblies, but I am not sure how much each of those contribute to the size. Ostensibly, not that much; I looked at the file sizes from a `dotnet publish` using CoreCLR and they are in the few KB, while my CoreRT binary is upwards of 50MB. With the minimal MonoGame application, it is about 9MB, which is closer to what I am targeting.\r\n\r\nHow could I diagnose exactly what is causing my CoreRT binaries to be so large?","Url":"https://github.com/dotnet/corert/issues/8083","RelatedDescription":"Open issue \"recommended way to analyze size of output binary\" (#8083)"},{"Id":"598370515","IsPullRequest":true,"CreatedAt":"2020-04-11T23:16:16","Actor":"yowl","Number":"8082","RawContent":null,"Title":"Wasm: Update linux instructions for LLVM9","State":"open","Body":"You'll see there is a problem with the RID for the libLLVM nuget as described in the updated instructions.  At least that is my limited understanding of it.   I've created this PR with the changes to the documentation to describe the issue I had, but if there's a better way to fix this, then please let me know.  Otherwise this brings the linux build script in line with the Windows one.\r\n\r\nFixes #6827 ","Url":"https://github.com/dotnet/corert/pull/8082","RelatedDescription":"Open PR \"Wasm: Update linux instructions for LLVM9\" (#8082)"},{"Id":"597839463","IsPullRequest":true,"CreatedAt":"2020-04-10T15:16:28","Actor":"MichalStrehovsky","Number":"8080","RawContent":null,"Title":"Add support for generating the bss section","State":"closed","Body":"From Wikipedia: \"BSS (from Block Started by Symbol) is a pseudo-operation in UA-SAP (United Aircraft Symbolic Assembly Program), the assembler developed in the mid-1950s for the IBM 704.\"\r\n\r\n70 years later we still name the section of the executable that holds uninitialized data BSS.","Url":"https://github.com/dotnet/corert/pull/8080","RelatedDescription":"Closed or merged PR \"Add support for generating the bss section\" (#8080)"},{"Id":"597796236","IsPullRequest":true,"CreatedAt":"2020-04-10T15:14:52","Actor":"MichalStrehovsky","Number":"8079","RawContent":null,"Title":"Update compiler from dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8079","RelatedDescription":"Closed or merged PR \"Update compiler from dotnet/runtime\" (#8079)"},{"Id":"597855364","IsPullRequest":true,"CreatedAt":"2020-04-10T14:10:12","Actor":"MichalStrehovsky","Number":"8081","RawContent":null,"Title":"Avoid placing finalizers in the vtable","State":"closed","Body":"Reflection rooting could sometimes make it so that `Object.Finalize` got a vtable slot. Saves 27 kB on a Hello World (with the default settings that reflection-root all user code).","Url":"https://github.com/dotnet/corert/pull/8081","RelatedDescription":"Closed or merged PR \"Avoid placing finalizers in the vtable\" (#8081)"},{"Id":"597129814","IsPullRequest":false,"CreatedAt":"2020-04-09T08:55:38","Actor":"space-alien","Number":"8078","RawContent":null,"Title":".NET Core 3.1 Web API or Blazor Server app","State":"open","Body":"I'm trying to get a .NET Core 3.1 web app running with CoreRT.\r\n\r\nI'm starting with the Web API project template before attempting to move to the Blazor Server template.\r\n\r\nThe first thing I had to do was to solve this exception:\r\n> System.Reflection.MissingMetadataException: 'System.Text.Json.JsonPropertyInfoNotNullable<WebApplication1.WeatherForecast,System.DateTime,System.DateTime,System.DateTime>' is missing metadata.\r\n\r\nWhich I did by adding an `rd.xml` file as follows:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"System.Text.Json\" Dynamic=\"Required All\" />\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\nThe web server now gets up and running at least.\r\n\r\nHowever, requests to the Web API project template `/weatherforecast` endpoint all just fail, with Chrome reporting `localhost didn’t send any data. ERR_EMPTY_RESPONSE`.\r\n\r\nAlso, the compiler is still outputting a huge amount of these warnings - all for `System.Text.Json`:\r\n```\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.<>m__Finally1() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.Generic.IEnumerable<TDeclaredProperty>.GetEnumerator() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.IEnumerable.GetEnumerator() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.IDisposable.Dispose() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.MoveNext() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.Generic.IEnumerator<TDeclaredProperty>.get_Current() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\nEXEC : warning : ignoring debug info for [System.Text.Json]System.Text.Json.JsonPropertyInfoCommon`4+<CreateGenericTDeclaredPropertyIEnumerable>d__28<int8,int8,int8,int8>.System.Collections.IEnumerator.get_Current() [C:\\Data\\Code\\repos\\Owned\\Bakk\\WebApplication1\\WebApplication1.csproj]\r\n...\r\n```\r\n\r\nAny thoughts on moving forward with this?\r\n\r\nIs it likely to be feasible to get a fairly complex .NET Core 3.1 Blazor web application running with CoreRT at this time? The current 2.1 Web API sample mentions `the risk of adding unsupported features` and that `some functionality might not yet be supported in CoreRT`, but I couldn't find any specifics about unsupported features/scenarios elsewhere in the documentation - other than the problem of reflection causing unlinked dependencies.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8078","RelatedDescription":"Open issue \".NET Core 3.1 Web API or Blazor Server app\" (#8078)"},{"Id":"596868948","IsPullRequest":true,"CreatedAt":"2020-04-09T08:27:23","Actor":"jkotas","Number":"8077","RawContent":null,"Title":"Renaming to match https://github.com/dotnet/runtime/pull/34519","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8077","RelatedDescription":"Closed or merged PR \"Renaming to match https://github.com/dotnet/runtime/pull/34519\" (#8077)"},{"Id":"596611567","IsPullRequest":false,"CreatedAt":"2020-04-08T14:12:32","Actor":"Shadow4walker","Number":"8076","RawContent":null,"Title":"EXCEPTION MESSAGE] MissingMethod","State":"open","Body":"again Another failure from me due to not write rd.xml correctly :/\r\nI'm trying to Compile a test app with this library referenced   [CefNet](https://github.com/CefNet/CefNet)\r\n\r\nthe rd.xml\r\n` \r\n\r\n    <Assembly Name=\"MyApp\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet.Avalonia\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet\" Dynamic=\"Required All\"/>\r\n    </Assembly>\r\n\r\n`\r\nbut above did not work with this message on Compile\r\n\r\n> EXEC : warning : Method `[CefNet]CefNet.CefSchemeHandlerFactory.CefNet.Internal.ICefSchemeHandlerFactoryPrivate.AvoidCreate()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: CefNet.CefSchemeHandlerFactory CefNet.CefSchemeHandlerFactory.Create(IntPtr)\r\n\r\n>EXEC : warning : Method `[CefNet]CefNet.CefCommandLine.InitFromArgv(int32,native int)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Void CefNet.CApi.cef_command_line_t.InitFromArgv(Int32, Byte**)\r\n\r\nso i have tried this\r\n\r\n` \r\n\r\n    <Assembly Name=\"MyApp\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet.Avalonia\" Dynamic=\"Required All\"/>\r\n    <Assembly Name=\"CefNet\" Dynamic=\"Required All\">\r\n    <Type Name=\"CefNet.CApi.cef_command_line_t\">\r\n    <Method Name=\"InitFromArgv\" Arguments=\"System.Int32,System.SByte\" Dynamic=\"Required All\"/>\r\n    </Type>\r\n    </Assembly>\r\n\r\n`\r\nbut still same message appear and with failure to run output exe app\r\ni have no idea what to do next!","Url":"https://github.com/dotnet/corert/issues/8076","RelatedDescription":"Open issue \"EXCEPTION MESSAGE] MissingMethod\" (#8076)"},{"Id":"589906202","IsPullRequest":false,"CreatedAt":"2020-04-08T13:47:55","Actor":"Shadow4walker","Number":"8065","RawContent":null,"Title":"How to Solve This (Value cannot be null. Parameter name: property)","State":"closed","Body":"I'm trying To Compile a test App With [https://github.com/quartznet/quartznet](url)\r\nafter Compiling when try to run the Compiled app I got below exception! idk What should i put in the rd.xml to make it run successfully! :/\r\n\r\n> Unhandled Exception: System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\r\n ---> System.ArgumentNullException: Value cannot be null. Parameter name: property\r\n   at System.Linq.Expressions.Expression.Property(Expression, PropertyInfo) + 0x181\r\n   at TestApp!<BaseAddress>+0x12868b5\r\n   at TestApp!<BaseAddress>+0x1286712\r\n   at TestApp!<BaseAddress>+0x15003cd\r\n   at TestApp!<BaseAddress>+0x305d41\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at TestApp!<BaseAddress>+0x88027a\r\n   at TestApp!<BaseAddress>+0x8ff08e\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[]) + 0x82\r\n   at TestApp!<BaseAddress>+0xf10363\r\n   at Quartz.Logging.LogProvider.GetLogger(String) + 0x14\r\n   at TestApp!<BaseAddress>+0x7cbe74\r\n   at TestApp!<BaseAddress>+0xd69a93\r\n   --- End of inner exception stack trace ---\r\n   at TestApp!<BaseAddress>+0xd69a8a\r\n   at TestApp!<BaseAddress>+0xd6995d\r\n   at Quartz.Impl.StdSchedulerFactory.get_Log() + 0x9\r\n   at Quartz.Impl.StdSchedulerFactory.Initialize() + 0x2b4\r\n   at Quartz.Impl.StdSchedulerFactory.<GetScheduler>d__69.MoveNext() + 0x5f\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at TestApp!<BaseAddress>+0xd6b0ca\r\n   at TestApp!<BaseAddress>+0xd6b004\r\n   at TestApp.Models.SchedulerManager.<Init>d__4.MoveNext() + 0xd4\r\n\r\nthe rd.Xml for this Lib Defined as Below\r\n\r\n>     <Assembly Name=\"Quartz\" Dynamic=\"Required All\">\r\n    <Type Name=\"Quartz.Impl.StdSchedulerFactory\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Simpl.RAMJobStore\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Simpl.TaskSchedulingThreadPool\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.QuartzScheduler\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.QuartzSchedulerThread\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.ErrorLogger\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.SchedulerSignalerImpl\" Dynamic=\"Required All\"/>\r\n    </Assembly>\r\n\r\nand when using     `<IlcArg` Include=\"--stacktracedata\" /> \r\n\r\n> Unhandled Exception: System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\r\n ---> System.ArgumentNullException: Value cannot be null. Parameter name: property\r\n   at System.Linq.Expressions.Expression.Property(Expression, PropertyInfo) + 0x181\r\n   at System.Runtime.CompilerServices.CallSiteBinder.Stitch[T](Expression, CallSiteBinder.LambdaSignature`1) + 0x115\r\n   at System.Runtime.CompilerServices.CallSiteBinder.BindCore[T](CallSite`1, Object[]) + 0x92\r\n   at TestApp!<BaseAddress>+0x150055d\r\n   at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x211\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.Run(InterpretedFrame) + 0x17a\r\n   at System.Linq.Expressions.Interpreter.Interpreter.Run(InterpretedFrame) + 0x2e\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[]) + 0x82\r\n   at TestApp!<BaseAddress>+0xf104f3\r\n   at Quartz.Logging.LogProvider.GetLogger(String) + 0x14\r\n   at Quartz.Impl.StdSchedulerFactory..cctor() + 0x34\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd3\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xca\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\r\n   at Quartz.Impl.StdSchedulerFactory.get_Log() + 0x9\r\n   at Quartz.Impl.StdSchedulerFactory.Initialize() + 0x2b4\r\n   at Quartz.Impl.StdSchedulerFactory.<GetScheduler>d__69.MoveNext() + 0x5f\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task) + 0xba\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task) + 0x44\r\n   at TestApp.Models.SchedulerManager.<Init>d__4.MoveNext() + 0x102\r\n\r\n\r\n any help to get ride of this please!","Url":"https://github.com/dotnet/corert/issues/8065","RelatedDescription":"Closed issue \"How to Solve This (Value cannot be null. Parameter name: property)\" (#8065)"},{"Id":"593837288","IsPullRequest":false,"CreatedAt":"2020-04-08T11:12:36","Actor":"teobugslayer","Number":"8071","RawContent":null,"Title":"Attempt at WinForms project part 2","State":"closed","Body":"Hi guys,\r\n\r\nAfter the fixes in https://github.com/dotnet/corert/issues/7995#issuecomment-602634375 and https://github.com/dotnet/corert/issues/7995#issuecomment-602679256 I continued my attempts to run a minimum viable WinForms app. I had to create a minimal rd.xml file:\r\n\r\n```XML\r\n<Directives>\r\n    <Application>\r\n      <Assembly Name=\"System.Resources.Extensions\"  Dynamic=\"Required All\"/>\r\n      <Assembly Name=\"System.Windows.Extensions\" Dynamic=\"Required All\"/>\r\n    </Application>\r\n</Directives>\r\n```\r\n\r\nwhich brought me to the next issue. There's an exception thrown from this code from WinForms:\r\n\r\n```C#\r\nGdip.GdipLoadImageFromStream(new GPStream(stream), out image))\r\n```\r\nSee https://github.com/dotnet/runtime/blob/master/src/libraries/System.Drawing.Common/src/System/Drawing/Image.Windows.cs#L35\r\n\r\nand\r\n```C#\r\ninternal static partial class Interop\r\n{\r\n    internal static partial class Ole32\r\n    {\r\n [ComImport,\r\n            Guid(\"0000000C-0000-0000-C000-000000000046\"),\r\n            InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\r\n        internal unsafe interface IStream\r\n....\r\n```\r\nSee https://github.com/dotnet/runtime/blob/master/src/libraries/Common/src/Interop/Windows/Ole32/Interop.IStream.cs#L19\r\n\r\nConsidering this code talks about _interface_ and _Ole32_, I assume I hit the missing COM support from #4219 . At any rate, I am opening this issue in case you can think of some smart way to continue forward.\r\n\r\nThis is my minimal [repro project](https://github.com/teobugslayer/winforms).","Url":"https://github.com/dotnet/corert/issues/8071","RelatedDescription":"Closed issue \"Attempt at WinForms project part 2\" (#8071)"},{"Id":"596188861","IsPullRequest":false,"CreatedAt":"2020-04-07T22:27:41","Actor":"Michael-Kelley","Number":"8075","RawContent":null,"Title":"Casting unmanaged pointer in UEFI application","State":"open","Body":"I've recently been playing around with compiling UEFI applications with CoreRT and have run into a problem. As I am compiling for UEFI, I have to disable the standard library and set my application as the system module. This means I don't get any sort of object allocation unless I write it myself. I've been trying to implement string allocation, but the compiler fights me with it. How could I go about casting a native unmanaged pointer returned from AllocatePool() to a C# object without the compiler complaining about it?\r\n\r\nEDIT: Trying to instantiate a class with the runtime disabled causes CoreRT to attempt to link Runtime.lib and LIBCMT.lib, which results in a lot of errors about redefined methods and is undesirable. Can this be avoided?","Url":"https://github.com/dotnet/corert/issues/8075","RelatedDescription":"Open issue \"Casting unmanaged pointer in UEFI application\" (#8075)"},{"Id":"594584998","IsPullRequest":true,"CreatedAt":"2020-04-05T19:18:28","Actor":"yowl","Number":"8074","RawContent":null,"Title":"WASM: remove assert for old version of emscripten for 64 bit interlocked exchange","State":"closed","Body":"We've moved on to a version of emscripten that now supports 64 bit interlocked exchange, and while we don't have threads yet, this assert can be removed.\r\nAdded a test for int and long which used to fail and now passes.\r\n\r\nAlso removed a bit of GC debug printf that just slowed down the testing.","Url":"https://github.com/dotnet/corert/pull/8074","RelatedDescription":"Closed or merged PR \"WASM: remove assert for old version of emscripten for 64 bit interlocked exchange\" (#8074)"},{"Id":"594290757","IsPullRequest":true,"CreatedAt":"2020-04-05T15:47:33","Actor":"MichalStrehovsky","Number":"8073","RawContent":null,"Title":"Make type manager, optional fields and finalizer relative pointers","State":"closed","Body":"Produces modest size on disk savings (25 kB on Hello World, 130 kB on a blank WinForms app).","Url":"https://github.com/dotnet/corert/pull/8073","RelatedDescription":"Closed or merged PR \"Make type manager, optional fields and finalizer relative pointers\" (#8073)"},{"Id":"593873782","IsPullRequest":true,"CreatedAt":"2020-04-05T06:14:19","Actor":"MichalStrehovsky","Number":"8072","RawContent":null,"Title":"Wrap LINQ object array delegate thunk in a try/finally","State":"closed","Body":"This ensures we copy back byref args. It wasn't possible when this code was originally witten because the IL generator couldn't generate finallys.\r\n\r\nCloses #2910.","Url":"https://github.com/dotnet/corert/pull/8072","RelatedDescription":"Closed or merged PR \"Wrap LINQ object array delegate thunk in a try/finally\" (#8072)"},{"Id":"593782260","IsPullRequest":true,"CreatedAt":"2020-04-04T18:50:24","Actor":"MichalStrehovsky","Number":"8069","RawContent":null,"Title":"Delete ProjectN specific parts of TypeManagerHandle","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8069","RelatedDescription":"Closed or merged PR \"Delete ProjectN specific parts of TypeManagerHandle\" (#8069)"},{"Id":"593782290","IsPullRequest":true,"CreatedAt":"2020-04-04T15:49:30","Actor":"MichalStrehovsky","Number":"8070","RawContent":null,"Title":"Move IsDynamicType flag out of rare flags","State":"closed","Body":"Some parts of the EEType (sealed vtable pointer, generic composition) are stored as relative pointers, unless the type is dynamic (or we are on a platform that doesn't support relative pointers), in which case they're stored as a full pointer.\r\n\r\nWe can do the same things to a couple other rarely needed pointers (type manager, finalizer, optional fields), but since IsDynamicType is stored in rare flags, we can't because by the time we can read rare flags we already had to skip these fields.\r\n\r\nMoving IsDynamicType to the main flags lets us accomplish this.","Url":"https://github.com/dotnet/corert/pull/8070","RelatedDescription":"Closed or merged PR \"Move IsDynamicType flag out of rare flags\" (#8070)"},{"Id":"592949765","IsPullRequest":true,"CreatedAt":"2020-04-02T22:21:16","Actor":"terrajobst","Number":"8068","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet/corert/pull/8068","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#8068)"},{"Id":"592464356","IsPullRequest":false,"CreatedAt":"2020-04-02T08:50:35","Actor":"MichalStrehovsky","Number":"8067","RawContent":null,"Title":"Fix how we detect where link.exe is","State":"open","Body":"Seems like when the Visual C++ workload is not installed in VS, we get a useless build error:\r\n\r\n```\r\n         \"C:\\Users\\[redacted]\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28504-01\\build\\findvcvarsall.bat\" amd64\r\n         INFO: Could not find files for the given pattern(s).\r\n         C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\lib\\um\\x64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\ucrt\\x64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\um\\x64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\lib\\um\\x64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\ucrt\\x64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\um\\x64;\r\n       Done executing task \"Exec\".\r\n     1>C:\\Users\\[redacted]\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28504-01\\build\\Microsoft.NETCore.Native.Windows.props(98,43): error MSB4184: The expression \"\"System.String[]\".GetValue(1)\" cannot be evaluated. Index was outside the bounds of the array.\r\n```","Url":"https://github.com/dotnet/corert/issues/8067","RelatedDescription":"Open issue \"Fix how we detect where link.exe is\" (#8067)"},{"Id":"592393086","IsPullRequest":false,"CreatedAt":"2020-04-02T06:36:05","Actor":"hez2010","Number":"8066","RawContent":null,"Title":"Support for default interface methods","State":"open","Body":"After I fixed dotnet/efcore#20393 with PR dotnet/efcore#20494, I built efcore again with CoreRT but this time I got 0xc0000005:\r\n\r\n```\r\n......\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.PropertyParameterBinding.BindToParameter(ParameterBindingInfo)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.PropertyParameterBinding..ctor(IProperty)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo.GetValueBufferIndex(IPropertyBase)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo.get_MaterializationContextExpression()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo.get_EntityType()...  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo..ctor(IEntityType,Expression)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo.__GetFieldHelper(int32,EETypePtr&)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ObjectArrayParameterBinding.BindToParameter(ParameterBindingInfo)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ObjectArrayParameterBinding..ctor(IReadOnlyList`1<ParameterBinding>)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity..cctor()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.DebuggerDisplay()...     \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.get_MemberInfo()...      \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.get_Name()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.Create(MemberInfo)...    \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.Create(string)...        \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.IsNone()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity..ctor(object)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity..ctor(MemberInfo)...     \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity..ctor(string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.MemberIdentity.__GetFieldHelper(int32,EETypePtr&)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactoryDependencies..ctor()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory..cctor()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.IsLazyLoaderAsyncMethod(Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.IsLazyLoaderMethod(Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.IsLazyLoader(Type)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.Bind(IEntityType,Type)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.Bind(IConventionEntityType,Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.Bind(IMutableEntityType,Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory.CanBind(Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.LazyLoaderParameterBindingFactory..ctor(LazyLoaderParameterBindingFactoryDependencies)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBindingFactory.<Bind>b__4_0(IConventionServiceProperty)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBindingFactory.<Bind>b__3_0(IMutableServiceProperty)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBindingFactory.Bind(IConventionEntityType,Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBindingFactory.Bind(IMutableEntityType,Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBindingFactory.CanBind(Type,string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBindingFactory..ctor(Type)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.GetCollectionAccessor()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.get_Inverse()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation.get_AssociationEntityType()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetPropertyAccessMode()...  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IProperty.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetPropertyAccessMode()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetO<ValueGenerated>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigationBase.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetPropertyAccessMode()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigationBase.get_IsEagerLoaded()...  \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.GetCollectionAccessor()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.get_IsCollection()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.get_IsOnDependent()...      \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.get_Inverse()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.get_Inverse()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.get_TargetEntityType()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.INavigation.Microsoft.EntityFrameworkCore.Metadata.INavigationBase.get_DeclaringEntityType()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation.get_Inverse()... \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation.get_ForeignKey()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation.get_AssociationEntityType()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase.SetFieldInfo(string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableNavigationBase.SetIsEagerLoaded(Nullable`1<bool>)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableNavigationBase.get_Inverse()... \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableNavigationBase.get_TargetEntityType()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableNavigationBase.get_DeclaringEntityType()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation.get_Inverse()...     \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation.get_ForeignKey()...  \r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.GetReferencingSkipNavigations()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetO<DeleteBehavior>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.GetDeclaredSkipNavigations()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindDeclaredSkipNavigation(string)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindSkipNavigation(MemberInfo)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.SetPrimaryKey(IMutableProperty)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IForeignKey.<GetReferencingSkipNavigations>b__20_1(ISkipNavigation)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IForeignKey.<GetReferencingSkipNavigations>b__20_0(ISkipNavigation)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.Metadata.IForeignKey.GetReferencingSkipNavigations()...\r\nC:\\Users\\hez20\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28802-01\\build\\Microsoft.NETCore.Native.targets(230,5): error MSB3073: command \"\"C:\\Users\\hez20\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28802-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp3.1\\win-x64\\native\\Test.ilc.rsp\"\" exited with code -1073741819. [C:\\Users\\hez20\\source\\Test\\Test.csproj]\r\n```\r\n\r\nIf I backport my fix to release/3.1 branch, there will be no issue while building with CoreRT.","Url":"https://github.com/dotnet/corert/issues/8066","RelatedDescription":"Open issue \"Support for default interface methods\" (#8066)"},{"Id":"589519642","IsPullRequest":true,"CreatedAt":"2020-04-01T02:27:12","Actor":"MichalStrehovsky","Number":"8059","RawContent":null,"Title":"Update GC from dotnet/runtime","State":"closed","Body":"Skipping commits:\r\n\r\ndotnet/runtime@631cb1b3dbe80c374dad691bfdd6989d8efb68d3 - I think we need to pull the Perl script to generate ETW boilerplate into the open.\r\ndotnet/runtime@fcd862e06413a000f9cafa9d2f359226c60b9b42 - not going to mess with that right now\r\ndotnet/runtime@6c1f8adf26cacb963e96d8f046411912aa6ebafe - I think this is for another commit that we skipped\r\ndotnet/runtime@f99b4fe46497185db3b2049913f2af0c839fda00 - more ETW\r\n","Url":"https://github.com/dotnet/corert/pull/8059","RelatedDescription":"Closed or merged PR \"Update GC from dotnet/runtime\" (#8059)"},{"Id":"589815848","IsPullRequest":true,"CreatedAt":"2020-03-29T17:40:57","Actor":"jkotas","Number":"8064","RawContent":null,"Title":"Delete a few more unused methods","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8064","RelatedDescription":"Closed or merged PR \"Delete a few more unused methods\" (#8064)"},{"Id":"589759062","IsPullRequest":true,"CreatedAt":"2020-03-29T15:06:28","Actor":"MichalStrehovsky","Number":"8063","RawContent":null,"Title":"Delete unnecessary native runtime EEType knowledge","State":"closed","Body":"EEType knowledge is triplicated in the compiler, EEType.cs, and the native runtime. The fewer places know about it, the easier it is to maintain/audit.\r\n\r\nI think it would be ideal if the native runtime only knows about the fields that are common to all EETypes and doesn't know about optional fields/rare flags stuff.\r\n\r\nThere is one last spot accessing the EEType optional fields/RareFlags data structure after this - the Align8 rare flag. I'm wondering whether we should just expose an `RhIsAlign8` method out of the managed runtime for the native runtime to call.","Url":"https://github.com/dotnet/corert/pull/8063","RelatedDescription":"Closed or merged PR \"Delete unnecessary native runtime EEType knowledge\" (#8063)"},{"Id":"589581187","IsPullRequest":true,"CreatedAt":"2020-03-29T09:55:32","Actor":"MichalStrehovsky","Number":"8062","RawContent":null,"Title":"Rewrite RhpBox in managed code","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8062","RelatedDescription":"Closed or merged PR \"Rewrite RhpBox in managed code\" (#8062)"},{"Id":"589581104","IsPullRequest":true,"CreatedAt":"2020-03-29T06:43:29","Actor":"MichalStrehovsky","Number":"8061","RawContent":null,"Title":"Move dispatch map handling to managed code","State":"closed","Body":"Removes a bunch of duplicated logic.","Url":"https://github.com/dotnet/corert/pull/8061","RelatedDescription":"Closed or merged PR \"Move dispatch map handling to managed code\" (#8061)"},{"Id":"589539216","IsPullRequest":true,"CreatedAt":"2020-03-28T09:25:13","Actor":"ezruneko","Number":"8060","RawContent":null,"Title":"old link updated","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8060","RelatedDescription":"Closed or merged PR \"old link updated\" (#8060)"},{"Id":"589516190","IsPullRequest":true,"CreatedAt":"2020-03-28T09:03:03","Actor":"MichalStrehovsky","Number":"8058","RawContent":null,"Title":"Update compiler from dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8058","RelatedDescription":"Closed or merged PR \"Update compiler from dotnet/runtime\" (#8058)"},{"Id":"588428795","IsPullRequest":true,"CreatedAt":"2020-03-26T16:58:30","Actor":"kant2002","Number":"8057","RawContent":null,"Title":"Migrate links from CoreCLR to Runtime repository","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8057","RelatedDescription":"Closed or merged PR \"Migrate links from CoreCLR to Runtime repository\" (#8057)"},{"Id":"588082207","IsPullRequest":false,"CreatedAt":"2020-03-26T01:03:51","Actor":"shravan2x","Number":"8056","RawContent":null,"Title":"Task.WaitAll missing IEnumerable<Task> overload","State":"closed","Body":"In general, `Task.WhenAll` is used to wait for a collection for tasks to complete execution. However, `Task.WaitAll` still has valid niche use-cases. For example, in a synchronous method that blocks shutdown until it completes - `appLifetime.ApplicationStopping.Register(() => _shutdownTokenSource.Cancel())`.\r\n\r\n`Task.WaitAll` seems to be missing an overload that takes an `IEnumerable<Task>`. This overload exists for `Task.WhenAll`. Can we add this?","Url":"https://github.com/dotnet/corert/issues/8056","RelatedDescription":"Closed issue \"Task.WaitAll missing IEnumerable<Task> overload\" (#8056)"},{"Id":"587737284","IsPullRequest":false,"CreatedAt":"2020-03-25T14:49:01","Actor":"remibernard","Number":"8055","RawContent":null,"Title":"System.Text.Json with CoreRT in 3.1","State":"closed","Body":"I am getting a `System.Reflection.MissingMetadataException` for `JsonPropertyInfoNotNullable` (with 4 generic parameters), even if it is included in my rd.xml file, or if I try `--rootallapplicationassemblies` or `--completemetadata`.\r\n\r\nTarget framework: `netstandard2.0` (library), .NET Core version 3.1.101,\r\nCompiler package version: `Microsoft.DotNet.ILCompiler (1.0.0-alpha-28725-01)`,\r\nBuild command: `dotnet publish /p:NativeLib=Shared -r win-x64 -c Release myproject.csproj`\r\n\r\nRelevant stack trace:\r\n```\r\nSystem.Reflection.MissingMetadataException: 'System.Text.Json.JsonPropertyInfoNotNullable<System.Object,System.Int64,System.Int64,System.Int64>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x13e\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0x87\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x44\r\n   at System.Text.Json.JsonClassInfo.CreateProperty(Type, Type, Type, PropertyInfo, Type, JsonConverter, JsonSerializerOptions) + 0x2f8\r\n   at System.Text.Json.JsonClassInfo.AddProperty(Type, PropertyInfo, Type, JsonSerializerOptions) + 0xa9\r\n   at System.Text.Json.JsonClassInfo.AddPolicyProperty(Type, JsonSerializerOptions) + 0x32\r\n   at System.Text.Json.JsonSerializerOptions.GetOrAddClass(Type) + 0x51\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type, JsonSerializerOptions, Utf8JsonReader&) + 0x9f\r\n   at System.Text.Json.JsonSerializer.ParseCore(String, Type, JsonSerializerOptions) + 0x131\r\n```\r\n\r\n`Default.rd.xml`:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?> \r\n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">\r\n  <Library>\r\n    <Assembly Name=\"System.Text.Json\" Dynamic=\"Required All\">\r\n      <Type Name=\"System.Text.Json.JsonPropertyInfoNotNullable`4\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n  </Library>\r\n</Directives>\r\n```\r\n\r\nCode snip:\r\n```c#\r\nprivate static object DeserializeJsonElement(Type type, JsonElement element)\r\n        => JsonSerializer.Deserialize(element.GetRawText(), type);\r\n```\r\n\r\nAm I missing something obvious? Or is System.Text.Json not compatible with CoreRT for some reason?\r\nThanks!","Url":"https://github.com/dotnet/corert/issues/8055","RelatedDescription":"Closed issue \"System.Text.Json with CoreRT in 3.1\" (#8055)"},{"Id":"586328794","IsPullRequest":false,"CreatedAt":"2020-03-23T16:12:52","Actor":"theolivenbaum","Number":"8054","RawContent":null,"Title":"Error building under macOS","State":"open","Body":"We're hitting this problem when trying to compile one of our projects under macOS, on an Azure devops VM:\r\n\r\n`ld: illegal text-relocation to '___ThreadStaticRegionEnd'`\r\n\r\nThe same project builds fine on windows and linux.\r\n \r\nThe only solution I found online for this \"illegal text-relocation\" issue was to add `-read_only_relocs suppress`, but this is not anymore supported on macOS & x64.\r\n\r\n\r\nThere are two more warnings besides  this error message:\r\n```\r\n/usr/bin/clang\r\nGenerating native code\r\nld : warning : -read_only_relocs cannot be used with x86_64 [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\nld : warning : could not create compact unwind for _System_Net_Security_System_Net_Security_TlsCipherSuiteData___cctor: stack subq instruction is too different from dwarf stack size [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\nld : warning : can't parse dwarf compilation unit info in obj/Debug/netcoreapp3.1/osx-x64/native/Project.o [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\nld: illegal text-relocation to '___ThreadStaticRegionEnd' in obj/Debug/netcoreapp3.1/osx-x64/native/Project.o from '___RMHSignature_MessagePack_Annotations_MessagePack_MessagePackFormatterAttribute__get_FormatterType' in obj/Debug/netcoreapp3.1/osx-x64/native/Project.o for architecture x86_64\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\n\r\n```\r\n\r\nAny ideas?","Url":"https://github.com/dotnet/corert/issues/8054","RelatedDescription":"Open issue \"Error building under macOS\" (#8054)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"598398730","IsPullRequest":true,"CreatedAt":"2020-04-12T05:25:47","Actor":"dotnet-maestro[bot]","Number":"11257","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.3\r\n- **Date Produced**: 4/12/2020 2:40 AM\r\n- **Commit**: 2b7b79f4db580536cb91969b1b02434af7da703b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20211.2 to 5.0.0-preview.4.20211.3\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11257","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11257)"},{"Id":"598370827","IsPullRequest":true,"CreatedAt":"2020-04-12T01:54:31","Actor":"dotnet-maestro[bot]","Number":"11256","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.2\r\n- **Date Produced**: 4/11/2020 10:14 PM\r\n- **Commit**: 3c1bd093e90bd54101d36f828010a68f7262157b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20211.1 to 5.0.0-preview.4.20211.2\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11256","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11256)"},{"Id":"598344404","IsPullRequest":true,"CreatedAt":"2020-04-11T23:16:04","Actor":"dotnet-maestro[bot]","Number":"11255","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200411.1\r\n- **Date Produced**: 4/11/2020 7:45 PM\r\n- **Commit**: c16d3364d4f83307ac3c6f74de15f8ca96b89759\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20210.9 to 5.0.0-preview.4.20211.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11255","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11255)"},{"Id":"598340449","IsPullRequest":true,"CreatedAt":"2020-04-11T19:59:53","Actor":"ocallesp","Number":"11254","RawContent":null,"Title":"Enable content copying transitive in VS.","State":"open","Body":"This is needed to fix the Fast up-to-date to check\r\nCopyToOutputDirectory items from project references\r\nhttps://github.com/dotnet/project-system/issues/4665\r\n\r\nMore details on MSBuildCopyContentTransitively in\r\nhttps://github.com/microsoft/msbuild/pull/4865\r\n\r\nIs there a way to create a dummy insertion to test it out first ? to check the performance test from AzDo","Url":"https://github.com/dotnet/sdk/pull/11254","RelatedDescription":"Open PR \"Enable content copying transitive in VS.\" (#11254)"},{"Id":"598330172","IsPullRequest":false,"CreatedAt":"2020-04-11T18:59:19","Actor":"danielloganking","Number":"11253","RawContent":null,"Title":"Allow `dotnet restore` to also invoke `dotnet tool restore`","State":"open","Body":"### Issue\r\n\r\n#### No Guaranteed Availability for Local Tool during Build\r\n\r\nCurrently, we are in the process of upgrading our application from Core 2.2 to Core 3.1. One of the functionalities we depend on in 2.2 is the ability to reference a tool as a project dependency for guaranteed availability during build. Specifically, we reference [`Swashbuckle.AspNetCore.Cli`](https://github.com/domaindrivendev/Swashbuckle.AspNetCore/tree/v5.0.0-rc3#swashbuckleaspnetcorecli) and then have a MSBuild extension to execute it using a `<Target>` node in the `.csproj`. In 2.2 it looks like:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n    <OutputType>Exe</OutputType>\r\n</PropertyGroup>\r\n\r\n<ItemGroup>\r\n  <DotNetCliToolReference Include=\"Swashbuckle.AspNetCore.Cli\" Version=\"2.1.0-beta1\" />\r\n</ItemGroup>\r\n\r\n<Target Name=\"SwaggerToFile\" AfterTargets=\"AfterBuild\">\r\n    <Exec Command=\"dotnet swagger tofile --output $(TargetDir)openapi.json &quot;$(TargetPath)&quot; v1\" />\r\n</Target>\r\n```\r\n\r\nHowever, with the move to local tools in Core 3.x there is no longer a guarantee the tool is installed prior to the build. Though we have added the requisite local tool manifest to the repository root and removed the `DotNetCliToolReference` as required by the upgrade to 3.1, without modification to the custom `Target` the build will error unless the developer has manually run `dotnet tool restore`.\r\n\r\n### Solutions\r\n\r\n#### Option 1 - Extend Custom Target (Works, Non-Ideally)\r\nThe solution that does currently work is to modify the custom `Target` to also call `dotnet tool restore`. This looks like this:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n</PropertyGroup>\r\n\r\n<Target Name=\"SwaggerToFile\" AfterTargets=\"AfterBuild\">\r\n    <Exec Command=\"dotnet tool restore\" />\r\n    <Exec Command=\"dotnet swagger tofile --output $(TargetDir)openapi.json &quot;$(TargetPath)&quot; v1\" />\r\n</Target>\r\n```\r\n\r\nThis however is not ideal as it prevents the developer from using the tool directly until they have built once or manually run `dotnet tool restore` themselves. While a minor inconvenience, this is a gotcha that requires extra documentation and developer training to avoid--it is, to borrow a phrase, not the pit of success.\r\n\r\n#### Option 2 - Add 2nd Custom Target to Extend Restore (Doesn't Currently Work, Ideal)\r\nThe ideal solution would then be to extend the `dotnet restore` command to also call `dotnet tool restore` when this project is being restored. This is better because Visual Studio will automatically restore a solution/project when it is loaded and developers are already in the habit of running `dotnet restore` when they see complaints about missing packages. I tried to do this myself with a 2nd custom target but MSBuild does not seem to respect the extension of the `Restore` target which I assume exists based on [this documentation](https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#restore-target). My attempt at making this work looks like:\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n<!-- Doesn't work :( -->\r\n<Target Name=\"LocalToolRestore\" AfterTargets=\"Restore\">\r\n    <Exec Command=\"dotnet tool restore\" />\r\n</Target>\r\n\r\n<Target Name=\"SwaggerToFile\" AfterTargets=\"AfterBuild\">\r\n    <Exec Command=\"dotnet swagger tofile --output $(TargetDir)openapi.json &quot;$(TargetPath)&quot; v1\" />\r\n</Target>\r\n```\r\nWhy this doesn't currently work I'm not sure, though I guess there may be a problem with the working directory or context in which `dotnet restore` is run; that, or the `Restore` target simply isn't currently extensible via a `.csproj` the way `Build` and similar targets are. Whatever the case, I believe that for tools which will be used during or after build it would be a significantly improved experience if this extension were possible (it does not have to be mandatory behavior, an opt-in is fine).\r\n\r\n### Disclaimer\r\n\r\nIt is entirely possible that I have forgotten a key step to making Option 2 work or have not fully understood the implications of the move to local tooling in 3.x. If this is the case, I welcome instruction on how Option 2 is possible today or explanation about how this is an abuse of local tooling (which I expect would then lead to an issue on the Swashbuckle repo).\r\n","Url":"https://github.com/dotnet/sdk/issues/11253","RelatedDescription":"Open issue \"Allow `dotnet restore` to also invoke `dotnet tool restore`\" (#11253)"},{"Id":"598329693","IsPullRequest":true,"CreatedAt":"2020-04-11T18:58:35","Actor":"dotnet-maestro-bot","Number":"11252","RawContent":null,"Title":"[automated] Merge branch 'release/5.0.1xx-preview3' => 'master'","State":"open","Body":"I detected changes in the release/5.0.1xx-preview3 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/5.0.1xx-preview3 by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/5.0.1xx-preview3\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/5.0.1xx-preview3\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/5.0.1xx-preview3-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/5.0.1xx-preview3-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/5.0.1xx-preview3-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/5.0.1xx-preview3-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/5.0.1xx-preview3-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview3-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/11252","RelatedDescription":"Open PR \"[automated] Merge branch 'release/5.0.1xx-preview3' => 'master'\" (#11252)"},{"Id":"598307223","IsPullRequest":true,"CreatedAt":"2020-04-11T18:56:31","Actor":"dotnet-maestro[bot]","Number":"11250","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: fcb06124-ac40-4456-eda2-08d7d0ee12d3\r\n- **Build**: 20200410.6\r\n- **Date Produced**: 4/11/2020 1:14 AM\r\n- **Commit**: da136fedaf1eb7c27dca816868ce207d9e917092\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.3.20207.4 to 5.0.0-preview.3.20210.6\r\n\r\n[marker]: <> (End:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11250","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore\" (#11250)"},{"Id":"598315431","IsPullRequest":true,"CreatedAt":"2020-04-11T18:56:21","Actor":"dotnet-maestro[bot]","Number":"11251","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee\r\n- **Build**: 20200411.2\r\n- **Date Produced**: 4/11/2020 5:29 PM\r\n- **Commit**: 3814af495962238edfd80daa549e29ba0f3bab41\r\n- **Branch**: refs/heads/release/5.0.1xx-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.3.20207.3 to 5.0.100-preview.3.20211.2\r\n\r\n[marker]: <> (End:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11251","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk\" (#11251)"},{"Id":"598252640","IsPullRequest":true,"CreatedAt":"2020-04-11T14:36:35","Actor":"dotnet-maestro[bot]","Number":"11247","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: ed1c2bc3-ada8-4f10-fd59-08d7a4f28342\r\n- **Build**: 20200410.4\r\n- **Date Produced**: 4/10/2020 7:24 PM\r\n- **Commit**: e8f2c815eca1c04a3eaa938112733b9ca56ec97a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.4.20209.7 to 5.0.0-preview.4.20210.4\r\n\r\n[marker]: <> (End:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11247","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore-tooling\" (#11247)"},{"Id":"598252818","IsPullRequest":true,"CreatedAt":"2020-04-11T14:17:42","Actor":"dotnet-maestro[bot]","Number":"11249","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200410.2\r\n- **Date Produced**: 4/11/2020 2:47 AM\r\n- **Commit**: ec727905a9631e3bdd95b4dabe6ce87e4ccbfa3b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20209.4 to 5.0.0-preview.4.20210.2\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20209.2 to 5.0.0-preview.4.20210.2 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11249","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#11249)"},{"Id":"598252724","IsPullRequest":true,"CreatedAt":"2020-04-11T12:06:11","Actor":"dotnet-maestro[bot]","Number":"11248","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: c167c97f-374f-4f20-31ff-08d7a4f3bc87\r\n- **Build**: 20200410.5\r\n- **Date Produced**: 4/11/2020 5:51 AM\r\n- **Commit**: 1f5c045b5cf31e9c99b42fb275032e6c84cb8f3d\r\n- **Branch**: refs/heads/release/fsharp5\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20210.1 to 11.0.0-beta.20210.5\r\n\r\n[marker]: <> (End:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11248","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/fsharp\" (#11248)"},{"Id":"598252467","IsPullRequest":true,"CreatedAt":"2020-04-11T12:04:30","Actor":"dotnet-maestro[bot]","Number":"11246","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200410.10\r\n- **Date Produced**: 4/11/2020 5:47 AM\r\n- **Commit**: 38c2d5513ce8cf584ef53b9971daec2763797169\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n  - **Microsoft.DotNet.PlatformAbstractions**: from 5.0.0-preview.4.20202.18 to 5.0.0-preview.4.20210.10\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11246","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#11246)"},{"Id":"598223879","IsPullRequest":true,"CreatedAt":"2020-04-11T11:06:21","Actor":"dotnet-maestro[bot]","Number":"11245","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200410.9\r\n- **Date Produced**: 4/11/2020 7:56 AM\r\n- **Commit**: 51f69a6bbba7a51ee17e625506f3592b8983d457\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20206.19 to 5.0.0-preview.4.20210.9\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11245","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11245)"},{"Id":"598223014","IsPullRequest":false,"CreatedAt":"2020-04-11T08:50:09","Actor":"MarcoRossignoli","Number":"11244","RawContent":null,"Title":"dotnet tool install fails","State":"open","Body":"I get error when installing `dotnet tool` and seem related to long path(not sure if it's related to https://github.com/dotnet/sdk/issues/10708)\r\n```\r\nC:\\git\\coverlet\\test\\coverlet.integration.tests\\bin\\Debug\\netcoreapp3.1\\d366c85b6c244c8b86cca264210c9e9c (fixnightly -> origin)\r\nλ dotnet tool install coverlet.console --version 1.7.2-preview-0001-g96f4e91319 --tool-path C:\\git\\coverlet\\test\\coverlet.integration.tests\\bin\\Debug\\netcoreapp3.1\\d366c85b6c244c8b86cca264210c9e9c\\coverletTool\r\nMicrosoft.NET.HostModel.HResultException: 80070002\r\n   at Microsoft.NET.HostModel.ResourceUpdater.ThrowExceptionForLastWin32Error()\r\n   at Microsoft.NET.HostModel.ResourceUpdater.AddResourcesFromPEImage(String peFile)\r\n   at Microsoft.NET.HostModel.AppHost.HostWriter.<>c__DisplayClass2_0.<CreateAppHost>g__UpdateResources|1()\r\n   at Microsoft.NET.HostModel.RetryUtil.RetryOnWin32Error(Action func)\r\n   at Microsoft.NET.HostModel.AppHost.HostWriter.CreateAppHost(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String assemblyToCopyResorcesFrom)\r\n   at Microsoft.DotNet.ShellShim.AppHostShellShimMaker.CreateApphostShellShim(FilePath entryPoint, FilePath shimPath)\r\n   at Microsoft.DotNet.ShellShim.ShellShimRepository.<>c__DisplayClass6_0.<CreateShim>b__0()\r\n   at Microsoft.DotNet.Cli.TransactionalAction.<>c__DisplayClass2_0.<Run>b__0()\r\n   at Microsoft.DotNet.Cli.TransactionalAction.Run[T](Func`1 action, Action commit, Action rollback)\r\n   at Microsoft.DotNet.Cli.TransactionalAction.Run(Action action, Action commit, Action rollback)\r\n   at Microsoft.DotNet.ShellShim.ShellShimRepository.CreateShim(FilePath targetExecutablePath, ToolCommandName commandName, IReadOnlyList`1 packagedShims)\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallGlobalOrToolPathCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Tool.Install.ToolInstallCommand.Execute()\r\n   at Microsoft.DotNet.Cli.DotNetTopLevelCommandBase.RunCommand(String[] args)\r\n   at Microsoft.DotNet.Tools.Tool.ToolCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\nC:\\git\\coverlet\\test\\coverlet.integration.tests\\bin\\Debug\\netcoreapp3.1\\d366c85b6c244c8b86cca264210c9e9c (fixnightly -> origin)\r\nλ dotnet tool install coverlet.console --version 1.7.2-preview-0001-g96f4e91319 --tool-path C:\\git\\coverlet\\test\\coverlet.integration.tests\\bin\\Debug\\d366c85b6c244c8b86cca264210c9e9c\\coverletTool\r\nYou can invoke the tool using the following command: coverlet\r\nTool 'coverlet.console' (version '1.7.2-preview-0001-g96f4e91319') was successfully installed.\r\n```\r\nAs you can see if I make path shorter it works. I'm ok with that, but error is a bit hidden and if I search around I found that code related to windows update, so it's not clear the workaround.\r\n```\r\nλ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.201\r\n Commit:    b1768b4ae7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.2.20160.6\r\n  Commit:  d12f79a4d1\r\n\r\n.NET Core SDKs installed:\r\n  2.2.207 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.200-preview-015002 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.300-preview-015048 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.2.20176.6 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.2.20167.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.2.20160.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.2.20160.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/11244","RelatedDescription":"Open issue \"dotnet tool install fails\" (#11244)"},{"Id":"598156022","IsPullRequest":false,"CreatedAt":"2020-04-11T00:47:54","Actor":"DamianEdwards","Number":"11243","RawContent":null,"Title":"Update link provided in build error due to missing ref packs to specific troubleshooting page","State":"open","Body":"See dotnet/docs#17265\r\n\r\nWhen build fails due to a missing ref pack, the error message printed links to [this documentation page](https://docs.microsoft.com/en-us/dotnet/standard/assembly/reference-assemblies), which provides no specific details for solving this issue, especially on non-Windows platforms.\r\n\r\nSuggest we link to a new docs page that helps troubleshoot this specific issue, detailing how to use the new ref assembly NuGet packages.","Url":"https://github.com/dotnet/sdk/issues/11243","RelatedDescription":"Open issue \"Update link provided in build error due to missing ref packs to specific troubleshooting page\" (#11243)"},{"Id":"598149346","IsPullRequest":true,"CreatedAt":"2020-04-11T00:12:18","Actor":"sfoslund","Number":"11242","RawContent":null,"Title":"Single automatic assembly pack package reference","State":"open","Body":"- Changing `BeforeTargets` so package reference is only added once in a multitargeted project, instead of once per .NET framework TFM. \r\n- Adding test coverage to ensure no warnings generated\r\n\r\nShould fix warnings we're seeing with #11188","Url":"https://github.com/dotnet/sdk/pull/11242","RelatedDescription":"Open PR \"Single automatic assembly pack package reference\" (#11242)"},{"Id":"598127943","IsPullRequest":false,"CreatedAt":"2020-04-10T22:49:58","Actor":"dsplaisted","Number":"11241","RawContent":null,"Title":"Add warnings for WindowsDesktop targeting","State":"open","Body":"In .NET 5.0, you will need to specify the TargetPlatform of Windows in order to use Windows Forms or WPF.  You also won't need to use Microsoft.NET.Sdk.WindowsDesktop, you can just use Microsoft.NET.Sdk.  We should add appropriate warnings in the following situations:\r\n\r\n- If the WindowsDesktop SDK is used, we may want to let you know that you can use Microsoft.NET.Sdk instead.\r\n- If `UseWindowsForms` or `UseWPF` is true and the TargetFramework is `net5.0` or higher (with no `-windows`), warn or error that the TargetFramework should be `net5.0-windows` to use Windows Forms or WPF\r\n- If the TargetFramework is `net5.0` or higher (with no `-windows`), and a transitive dependency brings in one of the Microsoft.NETCore.App.WindowsDesktop shared frameworks, we should do one or more of the following:\r\n  - Warn or error that `-windows` should be added to the TargetFramework\r\n  - Make things work: make sure the right framework is referenced in the runtimeconfig, and adjust the TargetPlatformIdentifier if necessary.\r\n","Url":"https://github.com/dotnet/sdk/issues/11241","RelatedDescription":"Open issue \"Add warnings for WindowsDesktop targeting\" (#11241)"},{"Id":"598127264","IsPullRequest":true,"CreatedAt":"2020-04-10T22:47:44","Actor":"elinor-fung","Number":"11240","RawContent":null,"Title":"Show warning if COM server is built with SelfContained=true","State":"open","Body":"Add a warning that COM hosting does not support self-contained.\r\n\r\nRelated: dotnet/runtime#870\r\n\r\n/cc @AaronRobinsonMSFT @jkoritzinsky ","Url":"https://github.com/dotnet/sdk/pull/11240","RelatedDescription":"Open PR \"Show warning if COM server is built with SelfContained=true\" (#11240)"},{"Id":"598107665","IsPullRequest":false,"CreatedAt":"2020-04-10T21:42:56","Actor":"dsplaisted","Number":"11239","RawContent":null,"Title":"Generate target platform assembly attributes","State":"open","Body":"If the `TargetPlatformIdentifier` is set, the .NET SDK should generate assembly attributes for the target platform version, as well as the OSMinimumVersion.  See this spec: https://github.com/dotnet/designs/pull/97\r\n\r\nWe can also include in this setting the `MinimumPlatformVersion` to the `TargetPlatformVersion` if it's not otherwise defined.","Url":"https://github.com/dotnet/sdk/issues/11239","RelatedDescription":"Open issue \"Generate target platform assembly attributes\" (#11239)"},{"Id":"598098189","IsPullRequest":false,"CreatedAt":"2020-04-10T21:15:32","Actor":"dsplaisted","Number":"11238","RawContent":null,"Title":"When global.json specifies an SDK that can't be found, don't block project load in Visual Studio","State":"open","Body":"As described in the \"Global.json failures\" section of this spec: https://github.com/dotnet/designs/pull/104\r\n\r\nWe would update the SDK resolver so that when running in Visual Studio, if the requested SDK from global.json is not found, it would fall back to using the SDK that would have been resolved if there was no global.json.  It will also set properties or include items indicating that the specified SDK couldn't be found.  The SDK will then add a target that will fail the build if it detects these properties or items, giving information about why the resolution failed.\r\n\r\nWe may need to add the ability for [resolvers to read global properties](https://github.com/microsoft/msbuild/issues/2095) in order for the resolver to know that it's running in VS.","Url":"https://github.com/dotnet/sdk/issues/11238","RelatedDescription":"Open issue \"When global.json specifies an SDK that can't be found, don't block project load in Visual Studio\" (#11238)"},{"Id":"598091115","IsPullRequest":false,"CreatedAt":"2020-04-10T20:55:35","Actor":"dsplaisted","Number":"11237","RawContent":null,"Title":"When generating runtimeconfig, do not include OS information in the tfm value","State":"open","Body":"See https://github.com/dotnet/runtime/issues/34033","Url":"https://github.com/dotnet/sdk/issues/11237","RelatedDescription":"Open issue \"When generating runtimeconfig, do not include OS information in the tfm value\" (#11237)"},{"Id":"598088212","IsPullRequest":false,"CreatedAt":"2020-04-10T20:48:25","Actor":"dsplaisted","Number":"11236","RawContent":null,"Title":"Automatically define preprocessor symbols for target platforms","State":"open","Body":"Spec is here: https://github.com/dotnet/designs/blob/master/accepted/2020/net5/net5.md#preprocessor-symbols\r\n\r\nNote that this includes defining preprocessor symbols for the target platform, as well as defining preprocessor symbols for previous versions of .NET and the OS","Url":"https://github.com/dotnet/sdk/issues/11236","RelatedDescription":"Open issue \"Automatically define preprocessor symbols for target platforms\" (#11236)"},{"Id":"598086459","IsPullRequest":false,"CreatedAt":"2020-04-10T20:44:01","Actor":"dsplaisted","Number":"11234","RawContent":null,"Title":"Provide OS APIs for iOS and Android","State":"open","Body":"When a project targets iOS or Android, the operating system API projections should be available to the project at compile time.\r\n\r\nThis should be via an implicit `FrameworkReference` added by the corresponding SDK workload.  The workload should also probably be in charge of carrying the corresponding `KnownFrameworkReference` information.\r\n\r\nIn the .NET SDK, we will probably have to update the framework reference resolution to understand the target platform information.  IE a `KnownFrameworkReference` for `net5.0` should be available in a project targeting `net5.0-ios`, but not vice versa.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/11234","RelatedDescription":"Open issue \"Provide OS APIs for iOS and Android\" (#11234)"},{"Id":"598084374","IsPullRequest":false,"CreatedAt":"2020-04-10T20:39:00","Actor":"dsplaisted","Number":"11233","RawContent":null,"Title":"Set default TargetPlatformVersion for Windows","State":"open","Body":"If the `TargetFramework` specifies `windows` as the `TargetPlatformIdentifier` but doesn't set the `TargetPlatformVersion`, then the SDK should set the version.  This should go in the WindowsDesktop targets, and in the WindowsDesktop optional workload if/when it becomes an optional workload.\r\n\r\nIE, the `TargetFramework` might be `net5.0-windows`.  We haven't closed on what the default `TargetPlatformVersion` would be, but it might be 7, or some version of Windows 10 (10.0.xyz).\r\n\r\nNote that once this default is set for a given TargetFrameworkVersion, it can't be changed for that TargetFrameworkVersion, but for newer TargetFrameworkVersions it could be updated.","Url":"https://github.com/dotnet/sdk/issues/11233","RelatedDescription":"Open issue \"Set default TargetPlatformVersion for Windows\" (#11233)"},{"Id":"598082174","IsPullRequest":false,"CreatedAt":"2020-04-10T20:33:14","Actor":"dsplaisted","Number":"11232","RawContent":null,"Title":"Fail build if an unsupported or unknown operating system is specified in TargetFramework","State":"open","Body":"If the `TargetFramework` is something like `net5.0-mycustomos`, we should fail the build with an error that we don't know what `mycustomos` is.\r\n\r\nWe should think about whether we want to have a hard-coded list of allowed TargetPlatformIdentifiers in the SDK, or allow the optional workloads to declare that they understood the TargetPlatformIdentifier.\r\n\r\nIf a workload supports a given target platform, it should be responsible for generating error messages if the target platform version specified is one it doesn't support (or doesn't support in combination with the target framework version).","Url":"https://github.com/dotnet/sdk/issues/11232","RelatedDescription":"Open issue \"Fail build if an unsupported or unknown operating system is specified in TargetFramework\" (#11232)"},{"Id":"598080377","IsPullRequest":false,"CreatedAt":"2020-04-10T20:28:37","Actor":"dsplaisted","Number":"11231","RawContent":null,"Title":"Update Microsoft.NET.Sdk TargetFramework parsing to understand OS name and versions","State":"open","Body":"The parsing in Microsoft.NET.TargetFrameworkInference.targets needs to be updated to parse the `TargetPlatformIdentifier` and `TargetPlatformVersion` from the `TargetFramework`.\r\n\r\nThe existing parsing implementation (which uses string manipulation) should be replaced with calls to [new MSBuild Intrinsic functions](https://github.com/microsoft/msbuild/issues/5171) which will call the NuGet parsing APIs.\r\n\r\n[.NET 5 TargetFramework spec](https://github.com/dotnet/designs/blob/master/accepted/2020/net5/net5.md)","Url":"https://github.com/dotnet/sdk/issues/11231","RelatedDescription":"Open issue \"Update Microsoft.NET.Sdk TargetFramework parsing to understand OS name and versions\" (#11231)"},{"Id":"598073329","IsPullRequest":false,"CreatedAt":"2020-04-10T20:17:18","Actor":"dsplaisted","Number":"11230","RawContent":null,"Title":"Write library for reading workload manifests","State":"open","Body":"This will be needed by:\r\n\r\n- The [workload SDK resolver](https://github.com/dotnet/sdk/issues/11228)\r\n- The task (part of #11229) that raises errors for missing workloads (to map from missing workload packs to the workloads that should be installed)\r\n- [The VS in-product acquisition experience](https://github.com/dotnet/project-system/issues/6080) (also to map from missing workload packs to the missing workloads, and then likely to the VS component IDs that need to be installed)","Url":"https://github.com/dotnet/sdk/issues/11230","RelatedDescription":"Open issue \"Write library for reading workload manifests\" (#11230)"},{"Id":"598069003","IsPullRequest":false,"CreatedAt":"2020-04-10T20:05:41","Actor":"dsplaisted","Number":"11229","RawContent":null,"Title":"Support workloads in Microsoft.NET.Sdk","State":"open","Body":"Detailed spec is here: dotnet/designs#104. Basics are:\r\n\r\n  - Set WorkloadManifestRoot property\r\n  - Import workload manifest targets from WorkloadManifestRoot\r\n  - Add target to generate build error if there are any MissingWorkloadPack items\r\n  - Import workload .props files","Url":"https://github.com/dotnet/sdk/issues/11229","RelatedDescription":"Open issue \"Support workloads in Microsoft.NET.Sdk\" (#11229)"},{"Id":"598068395","IsPullRequest":false,"CreatedAt":"2020-04-10T20:04:08","Actor":"dsplaisted","Number":"11228","RawContent":null,"Title":"Create MSBuild SDK Resolver for workloads","State":"open","Body":"Detailed spec is here: https://github.com/dotnet/designs/pull/104.  Basics are:\r\n\r\n- [ ] Create MSBuild SDK resolver for workloads\r\n  - [ ] Find specified workload via manifest and resolve to it, or return MissingWorkloadPack item\r\n  - [ ] Implement WorkloadAutoImportPropsLocator pseudo-SDK","Url":"https://github.com/dotnet/sdk/issues/11228","RelatedDescription":"Open issue \"Create MSBuild SDK Resolver for workloads\" (#11228)"},{"Id":"598087147","IsPullRequest":false,"CreatedAt":"2020-04-09T19:18:57","Actor":"jbobo","Number":"11235","RawContent":null,"Title":"dotnet-install.sh doesn't correctly grab global.json sdk version","State":"open","Body":"https://dotnet.microsoft.com/download/dotnet-core/scripts/v1/dotnet-install.sh when run as `bash ./dotnet-install.sh --jsonfile ./global.json` grabs everything in `sdk` after `version` instead of only grabbing the `sdk.version` value.\r\n\r\nExample of `global.json`:\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"3.1\",\r\n    \"allowPrerelease\": false,\r\n    \"rollForward\": \"latestPatch\"\r\n  }\r\n}\r\n```\r\n\r\nerror:\r\n```\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1allowPrerelease:falserollForward:latestPatch/dotnet-sdk-3.1allowPrerelease:falserollForward:latestPatch-linux-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404 Not Found\r\ndotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1allowPrerelease:falserollForward:latestPatch/dotnet-sdk-3.1allowPrerelease:falserollForward:latestPatch-linux-x64.tar.gz\r\ndotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1allowPrerelease:falserollForward:latestPatch/dotnet-dev-centos-x64.3.1allowPrerelease:falserollForward:latestPatch.tar.gz\r\ncurl: (22) The requested URL returned error: 404 Not Found\r\ndotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1allowPrerelease:falserollForward:latestPatch/dotnet-dev-centos-x64.3.1allowPrerelease:falserollForward:latestPatch.tar.gz\r\ndotnet_install: Error: Could not find/download: `.NET Core SDK` with version = 3.1allowPrerelease:falserollForward:latestPatch\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n```\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a2e484a9-5e0c-eb3e-1413-7b507c4fa07d\r\n* Version Independent ID: 5bc7caa5-f1c2-d7d5-fe02-80c65cca9672\r\n* Content: [dotnet-install scripts - .NET Core CLI](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script)\r\n* Content Source: [docs/core/tools/dotnet-install-script.md](https://github.com/dotnet/docs/blob/master/docs/core/tools/dotnet-install-script.md)\r\n* Product: **dotnet-core**\r\n* Technology: **dotnet-cli**\r\n* GitHub Login: @tdykstra\r\n* Microsoft Alias: **tdykstra**","Url":"https://github.com/dotnet/sdk/issues/11235","RelatedDescription":"Open issue \"dotnet-install.sh doesn't correctly grab global.json sdk version\" (#11235)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1248711103967887362","CreatedAt":"2020-04-10T20:35:01+00:00","UserScreenname":"dotnet","Text":"🆒 ! ...excellent video showcase of spectacular components for Xamarin &amp; #XamarinForms applications from our amazing… https://t.co/82ga78ddSf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":22,"FavoriteCount":6,"RawContent":null},{"Id":"1248629315014660096","CreatedAt":"2020-04-10T15:10:01+00:00","UserScreenname":"dotnet","Text":"Don't let your app fall into potential performance traps! \n\nIn this #dotNETConf session replay, we learn how to mak… https://t.co/uBhEhRHvsH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":5,"RawContent":null},{"Id":"1248348967273988096","CreatedAt":"2020-04-09T20:36:01+00:00","UserScreenname":"dotnet","Text":"Here are all the resources you'll need to take advantage of the new #ASPNET Core updates in #dotNET 5 Preview 2. Gr… https://t.co/IRFxrnbcU5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1248284536816848897","CreatedAt":"2020-04-09T16:20:00+00:00","UserScreenname":"dotnet","Text":"Check out this episode of #OnDotNet where @jeremylikness &amp; @TheCodeTraveler give us an intro to GraphQL… https://t.co/r6J83pdctI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":5,"RawContent":null},{"Id":"1248269447367925760","CreatedAt":"2020-04-09T15:20:02+00:00","UserScreenname":"dotnet","Text":"In this #dotNETConf session replay, we get to see what went into building two award-winning apps and that beautiful… https://t.co/7i0VvY1XzU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1247984064986046465","CreatedAt":"2020-04-08T20:26:02+00:00","UserScreenname":"dotnet","Text":"...write @ASPNET Core websites &amp; curious about mobile?\n\nIn this #dotNETConf session, see how your 💙 of C# can be us… https://t.co/6YMrMT2J1E","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":18,"RawContent":null},{"Id":"1247906300442423303","CreatedAt":"2020-04-08T15:17:01+00:00","UserScreenname":"dotnet","Text":".@mbcrump walks us through how to deply web applications to Azure through #VS2019 and hooking them up to a database… https://t.co/5s7UsAHRst","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"1247620167754006531","CreatedAt":"2020-04-07T20:20:02+00:00","UserScreenname":"dotnet","Text":"Does your head spin when thinking about mobile cloud dev? This #dotNETConf session replay with @CodeMillMatt, gives… https://t.co/00iIdSZXGa","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"1247542712640753665","CreatedAt":"2020-04-07T15:12:15+00:00","UserScreenname":"dotnet","Text":"Choose from tons of virtual #Xamarin user groups, live-streams, community stand-ups, and past events this #April. ➕… https://t.co/NR1VpsBZos","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":8,"FavoriteCount":4,"RawContent":null},{"Id":"1247263820197888000","CreatedAt":"2020-04-06T20:44:02+00:00","UserScreenname":"dotnet","Text":"#XamarinForms had many new controls added or updated.\n\nIn this #dotNETConf Focus on Xamarin session, learn what the… https://t.co/zELZiV6SXD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":22,"FavoriteCount":6,"RawContent":null},{"Id":"1247181796393078787","CreatedAt":"2020-04-06T15:18:06+00:00","UserScreenname":"dotnet","Text":"We recently announced full support for a conformant preprocessor in the MSVC toolset starting with #VisualStudio 20… https://t.co/bw4wtttKKe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"1246853104823177219","CreatedAt":"2020-04-05T17:32:00+00:00","UserScreenname":"dotnet","Text":"If you missed any of the sessions from .NET Conf: Focus on Xamarin.... \n\nALL of the sessions are available on our .… https://t.co/yI5yqWr63Y","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":85,"FavoriteCount":35,"RawContent":null},{"Id":"1246459259627298816","CreatedAt":"2020-04-04T15:27:00+00:00","UserScreenname":"dotnet","Text":"Keep up with all the video content our team creates on our .NET YouTube Channel 📹\n\nUse the link below to subscribe… https://t.co/epNSQl4pEo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2020-04-12T05:30:34.6590456Z","RunDurationInMilliseconds":13496}