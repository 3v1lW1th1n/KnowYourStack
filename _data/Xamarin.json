{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7053589609","Type":"PullRequestEvent","CreatedAt":"2018-01-03T20:22:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1155","RelatedDescription":"Merged pull request \"Unwrap JavaProxyThrowable in unhandled exception handler\" (#1155) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/xamarin/xamarin-android/issues/1144\r\n\r\nUser code cannot easily unwrap the inner exception itself unless\r\nit uses reflection to read the `JavaProxyThrowable.InnerException`\r\nproperty which is unacceptable.\r\n\r\nAdd code to unwrap the exception before calling the AppDomain\r\nunhandled exception handler."},{"Id":"7053589604","Type":"IssuesEvent","CreatedAt":"2018-01-03T20:22:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1144","RelatedDescription":"Closed issue \"Throwing FooException makes AppDomain throw JavaProxyThrowable instead of FooException\" (#1144) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new XamarinForms project (template from VSforMac for example).\r\n2. Create class FooException : Exception.\r\n3. Hook into AppDomain.CurrentDomain.UnhandledException with a method Bar(sender, args) that receives the exception in the args.ExceptionObject property.\r\n4. Make the AppPage of the app throw this new FooException.\r\n5. Run the app in iOS: exception received is of type FooException.\r\n6. Run the app in Android. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nException received by the Bar() method is of type FooException (or at least contains the FooException in the InnerException chain?)\r\n\r\n### Actual Behavior\r\nException received by the Bar() method is of type JavaProxyThrowable, and its message is \"Exception of type 'Android.Runtime.JavaProxyThrowable' was thrown\". The only bit of \"FooException\" found in this exception object is in the stack trace, however this is not an acceptable way for the callers to find what exception was really thrown, especially because it would need to be platform-specific code (only Android exhibits this behaviour, other platforms don't).\r\n\r\n### Version Information\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: fd06ff65-69de-47ae-8b99-ddf257032b7c\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nXamarin.Android\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/andres/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nApple Developer Tools\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n### Log File\r\n\r\n(I don't believe there's need for a log file)"},{"Id":"7053262690","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:59:33","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1155","RelatedDescription":"Opened pull request \"Unwrap JavaProxyThrowable in unhandled exception handler\" (#1155) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/xamarin/xamarin-android/issues/1144\r\n\r\nUser code cannot easily unwrap the inner exception itself unless\r\nit uses reflection to read the `JavaProxyThrowable.InnerException`\r\nproperty which is unacceptable.\r\n\r\nAdd code to unwrap the exception before calling the AppDomain\r\nunhandled exception handler."},{"Id":"7052623606","Type":"IssuesEvent","CreatedAt":"2018-01-03T16:28:23","Actor":"alexdrl","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1154","RelatedDescription":"Opened issue \"System.IO.Packaging not resolved correctly\" (#1154) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWe're having an issue with a Xamarin project, which as we added System.IO.Packaging 4.4.1 nuget package dependency, the reference is resolved as the ref/netstandard1.3 DLL, a reference assembly. It seems that because of that, the Xamarin app fails to start because this DLL does not get packaged, and so the app fails to start with this common xamarin error https://forums.xamarin.com/discussion/63584/android-could-not-load-assembly-xxx-during-startup-registration\r\n\r\nThere seems to be an issue open related to that https://github.com/dotnet/corefx/issues/23830\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe application starts correctly.\r\n### Actual Behavior\r\nThe application fails to start with the \"Could not load assembly 'xxx' during startup registration\" error.\r\n### Version Information\r\nVS 15.5.2\r\nXamarin 4.8\r\nXamarin.Android 8.1"},{"Id":"7051526014","Type":"PullRequestEvent","CreatedAt":"2018-01-03T12:12:27","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1152","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix message for missing Platform error XA5207\" (#1152) at xamarin/xamarin-android","RelatedBody":"Fixes #1136\r\n\r\nCommit 7f45a6d reworked the GetJavaPlatformJar Task (and others)\r\nto handle a NRE exception. However the error logging code in\r\nMonoAndroidHelper.cs was not formatted correctly. As a result\r\nthe XA5207 error would be logged without any message.\r\n\r\nThis commit fixes up the LogError call to make sure the error\r\nhas a decent message. It also adds a unit test so that we can\r\ncatch this issue if it regresses in the future."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7054704642","Type":"IssuesEvent","CreatedAt":"2018-01-04T02:42:39","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1495","RelatedDescription":"Opened issue \"[Android] PanGestureRecognizer occasionally neglects firing the Completed event\" (#1495) at xamarin/Xamarin.Forms","RelatedBody":"Migrated from https://bugzilla.xamarin.com/show_bug.cgi?id=39768\r\n\r\n### Description\r\n\r\nMigrated report; there are circumstances where panning slowly in Android can cause it to neglect firing the `Completed` event.\r\n\r\n### Steps to Reproduce\r\n\r\n1. You can utilize the [PanGesture](https://developer.xamarin.com/samples/xamarin-forms/WorkingWithGestures/PanGesture/) sample for this.\r\n2. Add debug logs/breakpoints in the Gesture.Completed case in the PanContainer.cs's OnPanUpdated method display.\r\n3. When running the application, start a pan, hold it for a moment or two, and release.\r\n\r\n### Expected Behavior\r\nThe completed state is reached.\r\n\r\n### Actual Behavior\r\nOccasionally/frequently, this state is not reached. On an S8 this is maybe occurring 20% of the time, but not clear of whether some aspect of the pan is causing it.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0\r\n- Affected Devices: (Tested with an S8)\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link\r\n\r\nAs stated above, the [PanGesture](https://developer.xamarin.com/samples/xamarin-forms/WorkingWithGestures/PanGesture/) sample works for this.\r\n"},{"Id":"7054544171","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:30:15","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1367","RelatedDescription":"Closed issue \"App startup crash in ios 11 and above\" (#1367) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nApp startup crash in ios 11 and above during review in Apple Store, but working fine on developer's physical phone (running ios 11.2).\r\n\r\n### Steps to Reproduce\r\n1. Upload app binary through iTunes Connect.\r\n2. Wait for app reviewed by Apple Store.\r\n3. App startup crash in ios 11 and above.\r\n\r\n### Expected Behavior\r\nRun without problem in all iPhone OS.\r\n\r\n### Actual Behavior\r\nStartup crash on iOS 11 and above in Apple Store side\r\n\r\n### Basic Information\r\n- IDE: Visual Studio 7.3 (build 799)\r\n- Platform Target Frameworks:\r\n   - iOS:  iOS SDK 10.2\r\n   - Android: Android SDK Platform-Tools 27.0.0, Compiling against Android 8.0 (API 26) \r\n- Android Support Library Version: 26.1.0\r\n- Nuget Packages: \r\n   - Json.NET 7.0.1\r\n   - ModernHttpClient 2.4.2\r\n   - Xamarin Mobile 0.7.5\r\n- Affected Devices: iPhone running OS 11 and above"},{"Id":"7054534752","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:26:16","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1442","RelatedDescription":"Closed issue \"Assertion failure crash\" (#1442) at xamarin/Xamarin.Forms","RelatedBody":"Dear Xamarin Support,\r\n\r\nWe are experiencing random crashes (not very consistent, but sometimes during clicking on the navigation \"Back\" button). \r\n\r\n### Description\r\nSystem crash.\r\nHockeyApp does not recognizes this crash and does not send a bug report.\r\n\r\nIt completely shuts down the app. Even when I run in Debug mode. No stack is available.\r\n\r\n### Steps to Reproduce\r\nCannot get a consistent way to reproduce this, but it just happened more than 20 times today :(\r\n\r\n### Expected Behavior\r\nNot crashing?\r\n### Actual Behavior\r\n\r\nThe  \"Application Window\" shows the following cryptic message:\r\n\r\n017-12-20 11:50:08.509 ClimbTag.iOS[1139:940216] *** Assertion failure in void UIViewReportBrokenSuperviewChain(UIView *__strong, UIView *__strong, BOOL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3600.9.1/UIView.m:189\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: 7.3 build 799\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  10.3.3\r\n\r\n\r\n\r\n- Nuget Packages:\r\nNuGet Version: 4.3.1.4445\r\nXamarin.Forms 2.4.0.38779\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n- Affected Devices:\r\niPhone 5c\r\n"},{"Id":"7054527486","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:22:57","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1378","RelatedDescription":"Closed issue \"Java.Lang.IllegalStateException: Can not perform this action after onSaveInstanceState\" (#1378) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI'm filing this on behalf of a customer. Please contact me directly for customer specific details which I can't share here.\r\n\r\nQ: Describe the issue including as much detail as possible\r\nA: We upgraded our mobile app on 11/16. After that we have seen a huge increase in crashes as reported by Google Play console (see picture). The HockeyApp reporting did not see a similar increase.\r\n\r\nHere is the little info that Google Play has on the crash:\r\njava.lang.RuntimeException: \r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:1410)\r\nCaused by: java.lang.reflect.InvocationTargetException: \r\n  at java.lang.reflect.Method.invoke (Native Method)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:1520)\r\n\r\nWe *believe* it is also the most frequent bug we have in HockeyApp, which has more info:\r\nFragmentManagerImpl.checkStateLoss\r\nJava.Lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\njava.lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\nandroid.support.v4.app.FragmentManagerImpl.checkStateLoss()FragmentManager.java:1842\r\nandroid.support.v4.app.FragmentManagerImpl.enqueueAction()FragmentManager.java:1860\r\nandroid.support.v4.app.BackStackRecord.commitInternal()BackStackRecord.java:650\r\nandroid.support.v4.app.BackStackRecord.commit()BackStackRecord.java:609\r\nandroid.support.v4.app.DialogFragment.show()DialogFragment.java:143\r\nmono.java.lang.RunnableImplementor.n_run(Native Method)\r\nmono.java.lang.RunnableImplementor.run()RunnableImplementor.java:30\r\nandroid.app.Activity.runOnUiThread()Activity.java:6082\r\nmd5a9f9c2b68bba3aa8be56a056e4cd456a.MainActivity.n_onActivityResult(Native Method)\r\nmd5a9f9c2b68bba3aa8be56a056e4cd456a.MainActivity.onActivityResult()MainActivity.java:66\r\nepic.mychart.android.library.prelogin.a.b()AuthenticationService.java:758\r\nepic.mychart.android.library.prelogin.a.a()AuthenticationService.java:55\r\nepic.mychart.android.library.prelogin.a$4.a()AuthenticationService.java:605\r\nepic.mychart.android.library.prelogin.a$5.a()AuthenticationService.java:628\r\nepic.mychart.android.library.e.f.onPostExecute()CustomAsyncTask.java:608\r\nandroid.os.AsyncTask.finish()AsyncTask.java:667\r\nat android.os.AsyncTask.-wrap1(AsyncTask.java)\r\nandroid.os.AsyncTask$InternalHandler.handleMessage()AsyncTask.java:684\r\nandroid.os.Handler.dispatchMessage()Handler.java:102\r\nandroid.os.Looper.loop()Looper.java:154\r\nandroid.app.ActivityThread.main()ActivityThread.java:6823\r\njava.lang.reflect.Method.invoke(Native Method)\r\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run()ZygoteInit.java:1557\r\ncom.android.internal.os.ZygoteInit.main()ZygoteInit.java:1445\r\nXamarin caused by: Java.Lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()<9d0e62014b6e4697a3a27c36abf42d32>:0\r\nJava.Interop.JniEnvironment.InstanceMethods.CallNonvirtualVoidMethod(JniObjectReference instance, JniObjectReference type, JniMethodInfo method, JniArgumentValue* args)<788eebdbf0814bff8f927caa5d06e5bb>:0\r\nAndroid.Runtime.JNIEnv.CallNonvirtualVoidMethod(IntPtr jobject, IntPtr jclass, IntPtr jmethod, JValue* parms)<a3404d7626684c388c9fc4514745d9d3>:0\r\nAndroid.Support.V4.App.DialogFragment.Show(FragmentManager manager, string tag)<7e083afc7c9045f59e01d9c14931060d>:0\r\nAcr.UserDialogs.UserDialogsImpl.<>c__DisplayClass26_0<TFragment, TConfig>.<ShowDialog>b__0()<a5fa07ca31cf44ee8fe096156a765ea2>:0\r\nJava.Lang.Thread.RunnableImplementor.Run()<a3404d7626684c388c9fc4514745d9d3>:0\r\nJava.Lang.IRunnableInvoker.n_Run(IntPtr jnienv, IntPtr native__this)<a3404d7626684c388c9fc4514745d9d3>:0\r\nat (wrapper dynamic-method) System.Object:e9b9f417-abc6-4c6f-91e1-cb97882c1fe4 (intptr,intptr)\r\n--- End of managed Java.Lang.IllegalStateException stack trace ---\r\njava.lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\nandroid.support.v4.app.FragmentManagerImpl.checkStateLoss()FragmentManager.java:1842\r\nandroid.support.v4.app.FragmentManagerImpl.enqueueAction()FragmentManager.java:1860\r\nandroid.support.v4.app.BackStackRecord.commitInternal()BackStackRecord.java:650\r\nandroid.support.v4.app.BackStackRecord.c\r\n\r\n\r\n### Steps to Reproduce\r\nAre you able to reproduce the issue? Is it consistent? Or intermittent?\r\n-We don’t know how to reproduce, but it happens a lot to our customers. See picture of crashes.\r\n \r\nDo you have related code to what’s shown in the stack trace? Is that something you can share? \r\n-None of our code is referenced in the Google Play crash report. \r\n\r\n### Expected Behavior\r\nApplication should not crash with this error\r\n\r\n### Actual Behavior\r\nThis crash is reported in Google Play crash reports\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.3.4.267\r\n- Last known good version: Xamarin.Forms 2.3.2.127\r\n- IDE: Visual Studio 2017 Enterprise 15.4.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\nAndroid - all versions\r\n\r\n- Nuget Packages: see attached screenshot for Nuget packages before and after the change that introduced the issue.\r\n- Affected Devices: No specific device type stands out. All devices.\r\n\r\n\r\n[XamarinWorkItemDetails.zip](https://github.com/xamarin/Xamarin.Forms/files/1549558/XamarinWorkItemDetails.zip)\r\n\r\nPlease contact me directly for customer specific details - david.hollowell @ alias"},{"Id":"7054521180","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:20:09","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1447","RelatedDescription":"Closed issue \"VS 2017 + Xamarin: Imported project was not found\" (#1447) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nWhen I try to create a Xamarin.Fomrs project in Visual Studio 2017, it keeps giving me the following error:\r\n![image](https://user-images.githubusercontent.com/9434115/34260193-527324c2-e665-11e7-9fb3-8490cff989cc.png)\r\n\r\nI have tried to re-install VS, but that didn't work. When I open the project in File Explorer, everything is there. However, when I open the solution in Solution Explorer in VS, it says 0 projects, why? How can I fix this?\r\n\r\nThe files .projitems and .shproj do exist, when I open the path in File Explorer, so I don't understand the error\r\n\r\n### Steps to Reproduce\r\n\r\n1. Install Visual Studio 2017 Enterprise \r\n2. Install component for Xamarin (Mobile Development with .NET)\r\n3. Create a new project\r\n4. Select Cross-Platform\r\n5. Select Cross Platform App (Xamarin.Forms)\r\n6. Select Blank App, Android/iOS, Xamarin.Forms & Shared Project\r\n\r\n### Expected Behavior\r\nThe project will be created without issues\r\n\r\n### Actual Behavior\r\nThe project is created with issues that I can't solve\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Have tried different .NET Framework (4.5.2, 4.6.1 & 4.7.1)\r\n- Last known good version: First time using Xamarin\r\n- IDE: Visual Studio 2017 Enterprise. Have also tried with Visual Studio 2015 Enterprise\r\n- Platform Target Frameworks: \r\n- iOS:  10\r\n- Android: Android SDK 25\r\n- Nuget Packages: 4.5.0.4685\r\n\r\n\r\n"},{"Id":"7053795361","Type":"IssuesEvent","CreatedAt":"2018-01-03T21:16:50","Actor":"Paul-Brenner-Tangoe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1494","RelatedDescription":"Opened issue \"[Feature Request] Ability to change page animations\" (#1494) at xamarin/Xamarin.Forms","RelatedBody":"### Summary\r\nRight now there isn't a way to change how the page animates to a new page in forms, this would be nice to have.\r\n\r\n### API Changes\r\nNot really sure how this should look, maybe something like it is discussed [here](https://forums.xamarin.com/discussion/18818/custom-page-transitions-with-xamarin-forms/p1).\r\n\r\n```\r\nPushAsync(Page page, Animation animation)\r\nPushModalAsync(Page page, Animation animation)\r\n```\r\n\r\nAnd then maybe Animation is an enum like this:\r\n\r\n```\r\n    public enum Animation\r\n    {\r\n        FromTopToBottom,\r\n        FromBottomToTop,\r\n        FromLeftToRight,\r\n    }\r\n```\r\n\r\n\r\n### Intended Use Case\r\nTo have control over what animation is done when a new page is pushed.\r\nNote that this has 509 votes on the user voice [site](https://xamarin.uservoice.com/forums/258559-xamarin-forms-suggestions/suggestions/6289977-control-the-animation-when-navigation-pages) as well."},{"Id":"7053445800","Type":"IssuesEvent","CreatedAt":"2018-01-03T19:45:17","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1493","RelatedDescription":"Opened issue \"[UWP] ListView header not setting to null correctly\" (#1493) at xamarin/Xamarin.Forms","RelatedBody":"Migrated from https://bugzilla.xamarin.com/show_bug.cgi?id=28575\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin.Forms application.\r\n2.  Add Content Page to the solution. \r\n3.  Add button to the content page and on button click set the listview.Header=null.\r\n4.  Run the Application\r\n5.  Click on the \"Click\" button; it will display the alert message\"Object reference is not set to the instance of the object\"\r\n\r\n### Expected Behavior\r\n\r\nHeader is set to null\r\n\r\n### Actual Behavior\r\n\r\nHeader remains on UWP, disappears on Android/iOS\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0\r\n- Affected Devices: UWP apps\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link\r\n\r\n[App 2.zip](https://github.com/xamarin/Xamarin.Forms/files/1601493/App.2.zip)\r\n\r\n"},{"Id":"7053214991","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:47:39","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1385","RelatedDescription":"Merged pull request \"[Android] Fix bug : Frame outline color not rendering\" (#1385) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe original issue was that the color wouldn't appear unless padding was set. In my sample I don't see the color on Android at all. iOS renders as I'd expect.\r\n\r\nThis PR fix this issue\r\n\r\n### Bugs Fixed ###\r\n\r\nfixes #1347\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7053214986","Type":"IssuesEvent","CreatedAt":"2018-01-03T18:47:39","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1347","RelatedDescription":"Closed issue \"[Android] Frame outline color not rendering\" (#1347) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nMigrated from https://bugzilla.xamarin.com/show_bug.cgi?id=27460\r\n\r\nThe original issue was that the color wouldn't appear unless padding was set. In my sample I don't see the color on Android at all. iOS renders as I'd expect.\r\n\r\n<img width=\"919\" alt=\"screenshot 2017-12-07 08 14 26\" src=\"https://user-images.githubusercontent.com/41873/33720042-56c5f330-db28-11e7-9aaa-a88f33453560.png\">\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Frame with an outline color.\r\n2. Run and observe on Android the outline doesn't show the color.\r\n\r\n### Expected Behavior\r\nThe outline should be the color I've chosen, regardless of padding.\r\n\r\n### Actual Behavior\r\niOS renders as expected. Android outline isn't the chosen color, red.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- IDE: VS Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.1\r\n  - Android: 7.1 running on 8.0 using FormsAppCompatActivity\r\n- Android Support Library Version: 25.4.0.2\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/1539431/Archive.zip)\r\n\r\n"},{"Id":"7053194473","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:42:27","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1465","RelatedDescription":"Closed pull request \"[Core] AutoCommandExtension\" (#1465) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAutoCommand Extension allows to simplify the use of the Command through conventions, making the ViewModel more readable.\r\n\r\nAutoCommand searches on viewModel the methods that have the following signature:\r\n\r\nbool Can[CommadName] (object parameter); \r\n\r\nvoid [CommandName](object parameter)\r\n\r\nwhere [CommandName] is the value of the Commad parameter of AutoCommand\r\n\r\nExample:\r\n```xml\r\n  ...\r\n  <StackLayout>\r\n        <Label Text=\"Enable Button 1\" />\r\n\t<Switch IsToggled =\"{Binding EnableExecute}\"/>\r\n\t<Label Text=\"Enable Button 2\" />\r\n        <Button Command=\"{AutoCommand Do}\"\r\n    \t\t      Text=\"Execute\"/>\r\n   </StackLayout>\r\n  ...\r\n```\r\n\r\n```csharp\r\nclass ViewModel : INotifyPropertyChanged\r\n{\r\n\tpublic event PropertyChangedEventHandler PropertyChanged;\r\n\tbool  _enableExecute;\r\n\tpublic bool  EnableExecute\r\n\t{\r\n\t\tget { return _enableExecute; }\r\n\t\tset\r\n\t\t{\r\n\t\t\tif (_enableExecute == value)\r\n\t\t\t\treturn;\r\n\t\t\t__enableExecute = value;\r\n\t\t\tOnPropertyChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t[DependedOn(nameof(EnableExecute))]\r\n\tbool CanDo(object parameter)\r\n\t{\r\n\t\treturn EnableExecute;\r\n\t}\r\n\r\n\tvoid Do(object parameter)\r\n\t{\r\n\r\n\t}\r\n\tprotected void OnPropertyChanged([CallerMemberName] string propertyName = null)\r\n\t{\r\n\t\tPropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\r\n\t}\r\n}\r\n```\r\n### Bugs Fixed ###\r\n\r\nnone\r\n\r\n### API Changes ###\r\n\r\nList all API changes here:\r\n\r\nAdded:\r\n -AutoCommandExtension \r\n -DependedOn\r\n\r\n### Behavioral Changes ###\r\n\r\nnone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n\r\n  "},{"Id":"7053102549","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:19:15","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1182","RelatedDescription":"Merged pull request \"[iOS] CGColor creation fixed\" (#1182) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI've replaced the ToCGColor extension function so developers can get the desired color on controls that uses CGColor, for example Frame. No special tests needed since it depends on existing methods.\r\n\r\n### Bugs Fixed ###\r\n\r\nCan't find any specific bug report so far, but here is a library that shows the problem: https://github.com/GalaxiaGuy/xamarin-forms-frame-color\r\n\r\n### API Changes ###\r\n\r\nNone.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone.\r\n\r\n### PR Checklist ###\r\n\r\n- [-] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7055014109","Type":"IssuesEvent","CreatedAt":"2018-01-04T05:21:03","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3152","RelatedDescription":"Closed issue \"Get iOS system log programmatically \" (#3152) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nI need to get iOS system logs programmatically when my application restarts after a crash. It can be accessed using iTunes / Xcode, but I want to do it programmatically in my next app restart or when app crash.\r\n\r\nPlease share your input if any.\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2015\r\nVersion 14.0.25431.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.6.01586\r\n\r\nInstalled Version: Professional\r\n\r\nVisual Basic 2015   00322-50050-56982-AA785\r\nMicrosoft Visual Basic 2015\r\n\r\nVisual C# 2015   00322-50050-56982-AA785\r\nMicrosoft Visual C# 2015\r\n\r\nVisual C++ 2015   00322-50050-56982-AA785\r\nMicrosoft Visual C++ 2015\r\n\r\nApplication Insights Tools for Visual Studio Package   7.18.00214.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0\r\nASP.NET and Web Tools 2015.1 (Beta8)\r\n\r\nASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0\r\nFor additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563\r\n\r\nASP.NET Web Frameworks and Tools 2013   5.2.40314.0\r\nFor additional information, visit http://www.asp.net/\r\n\r\nCommon Azure Tools   1.8\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2016.2    Build 106.0.20160818.163633\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Mobile Services Tools   1.4\r\nMicrosoft Azure Mobile Services Tools\r\n\r\nMicrosoft Team Foundation Server 2015 Power Tools   14.0\r\nPower Tools that extend the Team Foundation Server integration with Visual Studio.\r\n\r\nMicrosoft Visual Studio Process Editor   1.0\r\nProcess Editor for Microsoft Visual Studio Team Foundation Server\r\n\r\nMono Debugging for Visual Studio   4.7.4-pre (c2d89eb)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   3.4.4\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.2\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   14.0.60519.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript   1.8.36.0\r\nTypeScript tools for Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.7.10.38 (34c1b6c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android   8.0.2.1 (c2a33d8)\r\nVisual Studio extension to enable development for Xamarin.Android.\r\n\r\nXamarin.iOS   11.3.0.47 (51128b8)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7054708376","Type":"PullRequestEvent","CreatedAt":"2018-01-04T02:44:25","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3157","RelatedDescription":"Opened pull request \"[macos][corespotlight] Enable CoreSpotlight for XM\" (#3157) at xamarin/xamarin-macios","RelatedBody":"First shown (incorrectly) in El Capitan headers it finally made it's way\nin High Sierra!"},{"Id":"7054595754","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:53:46","Actor":"danbridgellc","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3156","RelatedDescription":"Opened issue \"iOS Designer will not open storyboards\" (#3156) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new iOS app (I used Page Based App)\r\n2. Attempt to open Main.storyboard\r\n\r\n### Expected Behavior\r\n\r\niOS Designer should open storyboard with ability to modify\r\n\r\n### Actual Behavior\r\n\r\nConnects to Mac and then the progress bar just continues to cycle\r\n\r\n### Environment\r\nI have also tried the stable release 15.5 with same results...\r\ncurrently using preview - see below...\r\n\r\n1.Microsoft Visual Studio Enterprise 2017 Preview\r\nVersion 15.6.0 Preview 1.1\r\nVisualStudio.15.Preview/15.6.0-pre.1.1+27205.2004\r\nMicrosoft .NET Framework\r\nVersion 4.7.02046\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual F# 4.1   00369-90000-00000-AA740\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31128.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.0.31121.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.6.0-beta3-62405-07. Commit Hash: 4939752b756ad32cb2ce1bfeab1d4f1637966e08\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.6.0-beta3-62405-07. Commit Hash: 4939752b756ad32cb2ce1bfeab1d4f1637966e08\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.8.0.753 (6575bd113)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.0.25 (HEAD/d8c6e504f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.2 (6857dfc)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n```\r\n\r\n### Build Logs\r\n[iOSDesigner-2018-01-03__20-35-43.234584.log](https://github.com/xamarin/xamarin-macios/files/1602233/iOSDesigner-2018-01-03__20-35-43.234584.log)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n[App1.zip](https://github.com/xamarin/xamarin-macios/files/1602232/App1.zip)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7054552013","Type":"PullRequestEvent","CreatedAt":"2018-01-04T01:33:48","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3155","RelatedDescription":"Merged pull request \"[Vision] Removes incorrect [Abstract] from VNDetectBarcodesRequest\" (#3155) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3140\r\n\r\nAccording to headers and documentation this should not be abstract.\r\nThis was incorrectly added by me in 89071bc19dafc2e7c0d714709866de8d90f35441\r\nI could not find why this was added by checking headers nor I can\r\nrecall why I added it so I'll just say it was a honest mistake :) Oops... 🙈"},{"Id":"7054552005","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:33:47","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3140","RelatedDescription":"Closed issue \"VNDetectBarcodesRequest is incorrectly tagged as `[Abstract]` in binding\" (#3140) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nTry to instance a VNDetectBarcodesRequest class\r\n\r\nRe: https://stackoverflow.com/a/48004821/4984832\r\n\r\n> var detectBarcodesRequest = new VNDetectBarcodesRequest((request, error) => { });\r\n \r\n### Expected Behavior\r\n\r\nCompiles and creates Instance var.\r\n\r\n### Actual Behavior\r\n\r\nAbstract compile error due to  `[Abstract]` attribute : [vision.cs#L156](https://github.com/xamarin/xamarin-macios/blob/1690ccbc991ab59835f76a15ef510cd182259915/src/vision.cs#L156)\r\n\r\nApple Docs: [VNDetectBarcodesRequest](https://developer.apple.com/documentation/vision/vndetectbarcodesrequest) \r\n\r\n### Environment\r\n\r\n```\r\nXamarin.iOS Version: 11.6.1.2\r\n```\r\n\r\n"},{"Id":"7054189505","Type":"PullRequestEvent","CreatedAt":"2018-01-03T23:08:34","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3155","RelatedDescription":"Opened pull request \"[Vision] Removes incorrect [Abstract] from VNDetectBarcodesRequest\" (#3155) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3140\r\n\r\nAccording to headers and documentation this should not be abstract.\r\nThis was incorrectly added by me in 89071bc19dafc2e7c0d714709866de8d90f35441\r\nI could not find why this was added by checking headers nor I can\r\nrecall why I added it so I'll just say it was a honest mistake :) Oops... 🙈"},{"Id":"7053892190","Type":"PullRequestEvent","CreatedAt":"2018-01-03T21:41:50","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3153","RelatedDescription":"Merged pull request \"Create classic snapshot of bgen and update tests/scripts\" (#3153) at xamarin/xamarin-macios","RelatedBody":"Previous PMCS removal changes froze XamMac.BindingAttributes.dll but not bgen.exe which causes interesting issues when we make changes there and run classic XM tests.\r\n\r\nThis can be seen here: https://github.com/xamarin/xamarin-macios/pull/3147\r\n\r\nThis PR freezes bgen-classic in macios-binaries (which will need to be added to master and bumped before this goes in) and update various scripts/tests.\r\n\r\nThis causes two test failures\r\n\r\nhttps://gist.github.com/chamons/07a2a1886e3a0b0e8764eb63b5f80fdf\r\n\r\nsince f8d7c54a0f99b4bced060b2a378b1c25a22363ae updated the wording in some tests about warnings and we're using the 15.5 bgen for classic.\r\n\r\nI lean towards just disabling all XM classic tests in generator, since we're not rebuilding. Thoughts?\r\n\r\nI smoke tested a few classic binding scenarios to mixed results. The ancient version of the binding example in mac-samples (before I updated it to use a binding project) doesn't build, but it didn't build before this change either (due to other unrelated paths we moved). After fixing up the invocation it works. We don't have a classic binding project to test.\r\n  "},{"Id":"7053540938","Type":"PullRequestEvent","CreatedAt":"2018-01-03T20:09:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3154","RelatedDescription":"Merged pull request \"[avfoundation] Add some missing API detected by xtro. Also fix #60924\" (#3154) at xamarin/xamarin-macios","RelatedBody":"xtro data files updated\n\nreference:\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60924"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"948604119945760768","CreatedAt":"2018-01-03T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/tuqMBJJWpq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":15,"RawContent":null},{"Id":"948294578192437248","CreatedAt":"2018-01-02T20:47:00+00:00","UserScreenname":"xamarinhq","Text":"Did your favorite make the cut? Get the full list of the top #Xamarin blog posts of 2017, and see the top post of t… https://t.co/dVcXEnCo7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":23,"RawContent":null},{"Id":"947216981937319938","CreatedAt":"2017-12-30T21:25:01+00:00","UserScreenname":"xamarinhq","Text":"The countdown is winding down! Post No. 2 in the #12DaysofXamarin walks you through implementing push notifications… https://t.co/uiyyYhL6zW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":27,"RawContent":null},{"Id":"946830183532724235","CreatedAt":"2017-12-29T19:48:01+00:00","UserScreenname":"xamarinhq","Text":"Just getting started with #XamarinForms? Let PM @davidortinau show you how to beat the learning curve in post No. 3… https://t.co/0y63QrYo5f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":19,"RawContent":null},{"Id":"946788653736583169","CreatedAt":"2017-12-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":15,"RawContent":null},{"Id":"946472572895588353","CreatedAt":"2017-12-28T20:07:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with C# 7 with @jamesmontemagno in the 4th post in our #12DaysofXamarin countdown: https://t.co/nWuAmDsr0R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":31,"RawContent":null},{"Id":"946430293401067521","CreatedAt":"2017-12-28T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/VlbopDlbd6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":21,"RawContent":null},{"Id":"946110438961541121","CreatedAt":"2017-12-27T20:08:01+00:00","UserScreenname":"xamarinhq","Text":"Our eBook on building \"Enterprise Application Patterns using #XamarinForms\" takes the 5th spot in our… https://t.co/HPidr9WU7g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":56,"RawContent":null},{"Id":"946049788914683905","CreatedAt":"2017-12-27T16:07:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/YpY9vtHgsp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":17,"RawContent":null},{"Id":"945745033117995009","CreatedAt":"2017-12-26T19:56:01+00:00","UserScreenname":"xamarinhq","Text":"\"5 Ways to Boost #XamarinForms App Startup Time\" from David Ortinau marks the halfway point at No. 6 the… https://t.co/ch9JL4J1fe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":39,"RawContent":null},{"Id":"944704928630693888","CreatedAt":"2017-12-23T23:03:01+00:00","UserScreenname":"xamarinhq","Text":"Today in the #12DaysofXamarin, learn how to make your UIs adaptive with #XamarinForms with the 7th most popular… https://t.co/0g7tgzIrEZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":56,"RawContent":null},{"Id":"944297266629705728","CreatedAt":"2017-12-22T20:03:07+00:00","UserScreenname":"xamarinhq","Text":"Get started with async/await in the 8th post of the #12DaysofXamarin: https://t.co/MgpLPtLd2z https://t.co/Yt2iACcgfI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":13,"RawContent":null},{"Id":"944251690777284608","CreatedAt":"2017-12-22T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss your chance to win a three-month @XamarinU subscription just for checking out our new Getting Started Gu… https://t.co/QhYiE3ZQJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":16,"FavoriteCount":4,"RawContent":null},{"Id":"943931836278935554","CreatedAt":"2017-12-21T19:51:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add face tracking and live recognition to your Android apps with this tutorial from @nishanil, coming… https://t.co/hAo63TPY8D","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":25,"RawContent":null},{"Id":"943888044314255360","CreatedAt":"2017-12-21T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/hAQHh5mO3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null},{"Id":"943570956777414656","CreatedAt":"2017-12-20T19:57:01+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin continues, with @pierceboggan explaining how to build #XamarinForms apps with #dotNET Standard… https://t.co/ITkVs5QaQ6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":26,"RawContent":null},{"Id":"943522130012057600","CreatedAt":"2017-12-20T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":37,"RawContent":null},{"Id":"943210078836023297","CreatedAt":"2017-12-19T20:03:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to \"Build Android Apps with Entity Framework\" in post 11 of our #12DaysofXamarin countdown:… https://t.co/RWQ4wzrunW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":29,"RawContent":null},{"Id":"943165786780258304","CreatedAt":"2017-12-19T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"#dotNET Standard comes to the #XamarinForms project templates: https://t.co/ZSlHPxw0IV https://t.co/N9tLs5p3hh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":60,"RawContent":null}]}},"RunOn":"2018-01-04T05:30:37.9429246Z","RunDurationInMilliseconds":3732}