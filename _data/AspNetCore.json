{"Data":{"Blog":{"FeedItems":[{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create an application that uses a database you control to register and track user accounts, that introduces other complications over the long term. As... <a aria-label=\"read more about User accounts made easy with Azure\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T17:02:15+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6738823527","Type":"IssuesEvent","CreatedAt":"2017-10-19T14:30:56","Actor":"Tgueth","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1415","RelatedDescription":"Closed issue \"Anyone able to debug MVC 6 published to Azure\" (#1415) at aspnet/Home","RelatedBody":"I have finished most of the work converting a MVC 5 app to MVC 6 RC1 (although I suspect from reading that I am looking at a lot of work to get to RC2).  I published the app to Azure but am having issues with the startup (runs but doesn't appear to get correct data). I need to debug the app but have tried everything found via google and Bing and am unable to debug the app on Azure via VS2015.  \n\nI have created just a basic ASP.NET 5 MVC 6 app without login capability and published it to Azure with same issue.  Basically, I get a DCOM error when I attempt to attach manually.  And I use the right-click to attach and debug, the source code (I assume the PDB) is apparently not found as the red dots change red outlined circle with white center, usually significantly a wrong version or missing code.\n\nI have checked and I can debug the MVC5 version noted above on Azure, just not MVC 6.\n\nSo questions are:\n\n1) Is there a documented step by step process that works?  All links I have found all fail.\n\n2) Or do I have to revert to adding more logging to the log file to attempt to identify the cause of the problem?\n"},{"Id":"6736508446","Type":"IssuesEvent","CreatedAt":"2017-10-19T04:36:41","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2250","RelatedDescription":"Opened issue \"Performance issue with IFormFile\" (#2250) at aspnet/Home","RelatedBody":"opened by @prashanthi-ediga here: https://github.com/dotnet/core/issues/1031 \r\n\r\n# Issue Title\r\n\r\nReading the stream from http posted file using IFormFile is very slow.\r\n\r\n# General\r\n\r\nWe have implemented an ASP.Net application to read very large Excel Files(100 MB).\r\nOur requirements was to not save the file to any temp location or save file at server.\r\n\r\nSo, we have implemented an API which reads stream data using 'HttpPostedFileBase' and send this stream to openXMLReader. The performance is very good and we were able to achieve good results with 100 MB file for 1000 concurrent users in a ramp up period of 5 minutes.\r\n\r\nRecently,we had to move to .net core in which 'HttpPostedFileBase' was not supported.\r\nSo I am using IFormFile to read stream data and pass it to excelReader.\r\nBut the performance degraded to a great extent.As the number of concurrent users increase the performance is degrading rapidly.\r\n\r\nI have seen few blogs stating to use 'MultipartReader' for large files.But this is storing the stream to a temporary path which is not possible in our scenario.\r\n\r\nCode Sample:\r\n[HttpPost]\r\n        public string ReadExcel_OpenXML(IFormFile postedFile)\r\n        {\r\n            var inputStream = postedFile.OpenReadStream();\r\n             ....\r\n         }\r\nCan you please suggest any alternative or fix to this.\r\nPlease let me know if you need any other details.\r\n\r\nThanks,\r\nPrashanthi.\r\n\r\n\r\n"},{"Id":"6732309910","Type":"IssuesEvent","CreatedAt":"2017-10-18T10:58:12","Actor":"evil-shrike","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2249","RelatedDescription":"Opened issue \"DeveloperExceptionPageMiddleware: add a feature to HttpContext.Features to mark own existence\" (#2249) at aspnet/Home","RelatedBody":"There's a common pattern of adding DeveloperExceptionPageMiddleware in development environment like\r\n```\r\n\t\t\tif (env.IsDevelopment())\r\n\t\t\t{\r\n\t\t\t\tapp.UseDeveloperExceptionPage();\r\n\t\t\t}\r\n```\r\nUsually we add the middleware first. The middleware catch all exception and shows nice page. But in non-development env user will get a generic response with 500 status code.\r\n\r\nIf I add my own middleware after DeveloperExceptionPageMiddleware and try to catch exceptions in it then I need to know will DeveloperExceptionPageMiddleware runs or not. If not then I'll show my own error page. If it runs then I'll just do nothing as it's some sense to see nice page from DeveloperExceptionPageMiddleware then my own.\r\n\r\nThe problem is how can I detect that DeveloperExceptionPageMiddleware  will run. Of cause I can hard-code environment checking but obviously it's not correct.\r\n\r\nAs a workaround I can add my middleware before DeveloperExceptionPageMiddleware. But if I develop a library I have to tell users to not forget to add my middleware before DeveloperExceptionPageMiddleware and not after. It's not very robust.\r\n\r\nMy suggestion is to add a runtime feature to context which would allow detecting DeveloperExceptionPageMiddleware. In the same way as it's implemented in StatusCodePagesMiddleware:\r\n```\r\n      StatusCodePagesFeature statusCodeFeature = new StatusCodePagesFeature();\r\n      context.Features.Set<IStatusCodePagesFeature>((IStatusCodePagesFeature) statusCodeFeature);\r\n      await this._next(context);\r\n```\r\n\r\nSo DeveloperExceptionPageMiddleware could do the similar thing.\r\n```\r\n      DeveloperExceptionPageFeature feature = new DeveloperExceptionPageFeature();\r\n      context.Features.Set<IDeveloperExceptionPageFeature>((IDeveloperExceptionPageFeature) feature);\r\n      await this._next(context);\r\n```\r\n\r\nthen I could do something like this:\r\n```\r\n\ttry\r\n\t{\r\n\t\tawait _next.Invoke(context);\r\n\t}\r\n\tcatch (Exception ex)\r\n\t{\r\n\t\tif (context.Features.Get<IDeveloperExceptionPageFeature>() == null)\r\n\t\t{\r\n\t\t\t// no DeveloperExceptionPageMiddleware in the pipeline, show our own error page:\r\n\t\t\tvar view = new ErrorPage(new ErrorPageModel());\r\n\t\t\tawait view.ExecuteAsync(context);\r\n\t\t} \r\n\t\telse\r\n\t\t{\r\n\t\t\t// let DeveloperExceptionPageMiddleware do what it can\r\n\t\t\tthrow;\r\n\t\t}\r\n\t}\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6741511852","Type":"PullRequestEvent","CreatedAt":"2017-10-20T01:20:05","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1015","RelatedDescription":"Merged pull request \"Adding StreamingCompletion message (C#)\" (#1015) at aspnet/SignalR","RelatedBody":""},{"Id":"6740819372","Type":"PullRequestEvent","CreatedAt":"2017-10-19T21:19:41","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1037","RelatedDescription":"Opened pull request \"Enable reconnect for Redis connection by default\" (#1037) at aspnet/SignalR","RelatedBody":"For now if you try to send when the redis connection is down you'll get something like:\r\n```\r\nError: No connection is available to service this operation: PUBLISH ChatSample.Hubs.Chat; SocketFailure on 127.0.0.1:6379/Subscription, origin: Error, input-buffer: 0, outstanding: 0, last-read: 1s ago, last-write: 1s ago, unanswered-write: 21077s ago, keep-alive: 60s, pending: 0, state: Connecting, last-heartbeat: never, last-mbeat: -1s ago, global: 1s ago\r\n```\r\nand we won't keep a queue or anything around.\r\n\r\nWe'll probably want to change the error returned in the future."},{"Id":"6740367440","Type":"PullRequestEvent","CreatedAt":"2017-10-19T19:38:49","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1036","RelatedDescription":"Opened pull request \"Removing sending OPTIONS request if WebSocket transport requested\" (#1036) at aspnet/SignalR","RelatedBody":"This removes session stickiness requirement for WebSockets\r\n\r\nFixes: #1035"},{"Id":"6740353670","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:35:36","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1035","RelatedDescription":"Opened issue \"Don't send OPTIONS request if the user explicitly requests the WebSocket transport\" (#1035) at aspnet/SignalR","RelatedBody":"WebSocket transport does not need a connection id to work correctly because once it is connected it will stay connected. As a result we don't have to send the OPTIONS request. This will also lift the sessions stickiness requirement for WebSockets. Note: the user needs to make sure that the server supports WebSockets and that the WebSockets transport is enabled on the server (or use transport fallback)"},{"Id":"6736749855","Type":"IssuesEvent","CreatedAt":"2017-10-19T06:25:02","Actor":"Apollo3zehn","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1026","RelatedDescription":"Closed issue \"question - how to handle exceptions during OnDeserialized\" (#1026) at aspnet/SignalR","RelatedBody":"I am using the [OnDeserialized ](https://msdn.microsoft.com/de-de/library/system.runtime.serialization.ondeserializedattribute(v=vs.110).aspx)callback that is called by the Json.NET deserializer after deserialization to validate the transmitted data (models). When the validation fails, an exception is thrown. \r\n\r\nI was using the old SignalR version before. There I got the exception properly forwarded to my javascript client. But now this closes the connection with error \"Websocket closed with status code: 1011 ()\". My C# application throws `TargetInvocationException` that wraps my own exception. \r\n\r\nDo you have an idea how to avoid closing the connection? Am I misusing SignalR somehow?"},{"Id":"6736661125","Type":"PullRequestEvent","CreatedAt":"2017-10-19T05:49:45","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1034","RelatedDescription":"Merged pull request \"Don't build TS client needlessly\" (#1034) at aspnet/SignalR","RelatedBody":"I noticed recently that the ts client was building even though there was no changes - turned out that the path to one of the output files was incorrect which triggered the build since the output was \"missing\". Fixing this. All other changes is VS changing quotes - which is harmless."},{"Id":"6736659988","Type":"PullRequestEvent","CreatedAt":"2017-10-19T05:49:16","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1031","RelatedDescription":"Merged pull request \"Adding roundtripping test for CancelInvocation message\" (#1031) at aspnet/SignalR","RelatedBody":""},{"Id":"6735883016","Type":"PullRequestEvent","CreatedAt":"2017-10-19T00:10:52","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1006","RelatedDescription":"Merged pull request \"OnReceived\" (#1006) at aspnet/SignalR","RelatedBody":"Removed the Receive event in favor of an OnReceived method as detailed in https://github.com/aspnet/SignalR/issues/900\r\n\r\nRoast Me"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6741897785","Type":"IssuesEvent","CreatedAt":"2017-10-20T04:05:10","Actor":"HeroWong95","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6975","RelatedDescription":"Opened issue \"For Html.ActionLink I have some advice\" (#6975) at aspnet/Mvc","RelatedBody":"In Asp.net MVC, the following code is all right\r\n`@Html.ActionLink(\"Go\", \"Checkout\", new { }, new { @class = \"btn btn-primary\", id = \"btnCheckout\" })`\r\n`@Html.ActionLink(\"Go\", \"Checkout\", null, new { @class = \"btn btn-primary\", id = \"btnCheckout\" })`\r\n\r\nIn Asp.Net Core Mvc, Only `@Html.ActionLink(\"Go\", \"Checkout\", new { }, new { @class = \"btn btn-primary\", id = \"btnCheckout\" })` is right\r\n\r\nThis does not seem to affect the use\r\nBut if I move from Asp.Net Mvc to Asp.Net Core Mvc, I need to modify some extra code"},{"Id":"6741670660","Type":"IssuesEvent","CreatedAt":"2017-10-20T02:30:10","Actor":"yedajiang44","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6974","RelatedDescription":"Opened issue \"Unable to open under vs2015\" (#6974) at aspnet/Mvc","RelatedBody":"Unable to open under vs2015,\r\nCan only upgrade vs?"},{"Id":"6741633136","Type":"IssuesEvent","CreatedAt":"2017-10-20T02:14:29","Actor":"HeroWong95","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6973","RelatedDescription":"Opened issue \"Unit Test:Session has not been configured for this application or request\" (#6973) at aspnet/Mvc","RelatedBody":"My mvc app is configured session in Startup.cs, it's ok.\r\nBut when I did the unit test(MSTest), it threw an exception.\r\n`System.InvalidOperationException:“Session has not been configured for this application or request.”`\r\n\r\n`var controller = new TestController\r\n{ \r\n    ControllerContext = new ControllerContext { HttpContext = new DefaultHttpContext() }\r\n}`\r\n\r\nI'm trying to use the 'Moq' framework, But it doesn't have '.Net Core' implementations\r\n\r\nHow to mock session? or How to configure session in unit test?\r\n"},{"Id":"6740457103","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:59:05","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6960","RelatedDescription":"Closed issue \"ModelBinding on IOC resolved type\" (#6960) at aspnet/Mvc","RelatedBody":"ModelBinding does not fully work on actions where we define a \"base\" type as parameter.\r\n\r\nFor instance, in a \"framework library\", I define this action\r\n```\r\n[HttpPost]\r\npublic IActionResult CreateClient([FromServices]ClientViewModelBase viewModel)\r\n[...]\r\n```\r\nwhere ClientBase is define like this\r\n```\r\npublic abstract class ClientViewModelBase\r\n{\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nIn a specific application which uses my \"framework library\", I define a specific class which inherits from ClientBase\r\n```\r\npublic class MyClientViewModel : ClientViewModelBase\r\n{\r\n    public string AdditionalInfos { get; set; }\r\n}\r\n```\r\nOf course in the startup, i add \r\n`services.AddScoped<ClientViewModelBase, MyClientViewModel>()`\r\n\r\nIn my view, I have this\r\n```\r\n@model MyClientViewModel\r\n<form asp-controller=\"MyBasicController\" asp-action=\"CreateClient\">\r\n    <input asp-for=\"Name\" />\r\n    <input asp-for=\"AdditionalInfos\" />\r\n    <input type=\"submit\" value=\"Create client\" />\r\n</form>\r\n```\r\n\r\nWhen I post the data, I see on the browser developer tools that all data are correctly provided to the server\r\nBut when I got the result of ModelBinding inside the action, there's only the \"Name\" property which is filled. The \"AdditionalInfos\" property is null.\r\n\r\nThe problem is that the ModelBinding uses the type provided in the signature of the action (my base type here) instead of the resolved/instantiated type. \r\nI think the ModelBinding must use the type of the instance (by reflection) to make all recursive stuffs instead of the ModelBindingContext.ModelType"},{"Id":"6739977718","Type":"IssuesEvent","CreatedAt":"2017-10-19T18:13:37","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6955","RelatedDescription":"Closed issue \"Want features for data annotation \" (#6955) at aspnet/Mvc","RelatedBody":"Please bring features to share common data annotations between each entity or model.  I will be no need to define separate separate data annotations for each properties of each entity.  \r\n\r\nIt would be more easy and bring code reusablity more if one can declare common data annotations of different properties because we see that common data annotation is like max length 50, int,  required etc. Are used to once and common for all entities. "},{"Id":"6739963305","Type":"IssuesEvent","CreatedAt":"2017-10-19T18:10:30","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6958","RelatedDescription":"Closed issue \"Hosting Http.Sys in production environment\" (#6958) at aspnet/Mvc","RelatedBody":"Hi Team,\r\n\r\nWanted to understand one thing. Let's say, I have written ASP.NET Core MVC application which is hosted on Http.Sys. Therefore, currently what I do, I navigate to published folder and there run **dotnet app.dll**. Server gets started and it starts to listen requests. However, this also opened dotnet console window, which is ok if I am doing development on local machine.\r\n\r\nBut, let's say I would like to take the published folder and deploy on server. Therefore, if I run the same command **dotnet app.dll**, server will get launched and start listening as well, I believe. But, it will have the same console window remain opened there. Is there any way to start the server as a background process, I mean server should keep running but cmd prompt shouldn't be there.\r\n\r\nThanks,\r\nRahul"},{"Id":"6739955860","Type":"IssuesEvent","CreatedAt":"2017-10-19T18:08:53","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6971","RelatedDescription":"Closed issue \"Query parameter not bound if method parameter has same name as property\" (#6971) at aspnet/Mvc","RelatedBody":"If the parameter name in the method is the same as the property beeing bound via query string it doesn't work. If I prefix the query string key then the value is parsed correctly\r\n\r\n**Question**: Should/can the `[FromQuery]` attribute be used on a property to indicate that it should use that name instead of the property name when creating the query string?\r\n\r\nE.g. `[FromQuery(Name = \"q\")]public string SomeReallyLongPropertyName { get; set; }` would generate `http://github.com/aspnet/Mvc?q=work`?\r\n\r\nAttaching a solution where the issue and the question is present.\r\n\r\nThank\r\n\r\n[AspNetCoreMVcBugs.zip](https://github.com/aspnet/Mvc/files/1397651/AspNetCoreMVcBugs.zip)\r\n"},{"Id":"6739574392","Type":"IssuesEvent","CreatedAt":"2017-10-19T16:46:39","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6969","RelatedDescription":"Closed issue \"Response being truncated when outputting event stream when IIS Express is reverse proxying\" (#6969) at aspnet/Mvc","RelatedBody":"I made a repo with simple test case for this issue. Clone and run the below and hit `/sse-test` and things work great when serving from Kestrel directly, but causes some inconsistent truncation when running through Visual Studio and IIS Express.\r\n\r\nhttps://github.com/svallis/SseTest/\r\n\r\nHere's the only real bit of code added to the repo after a `dotnet new mvc`:\r\n\r\nhttps://github.com/svallis/SseTest/blob/master/Controllers/HomeController.cs#L38-L55\r\n\r\nThe output on Kestrel looks right and ends up complete:\r\n\r\n```\r\n1 of 5\r\n2 of 5\r\n3 of 5\r\n4 of 5\r\n5 of 5\r\n```\r\n\r\nThe output under IIS Express is truncated:\r\n\r\n```\r\n1 of 5\r\n2 of 5\r\n3 of 5\r\n4 of 5\r\n5\r\n```\r\n\r\nI'm guessing this is some kind of response caching or other interference at play. What would be the correct way to get around it? Weirdly enough, using static strings works fine on both, it's only when the data is dynamic that problems seem to occur. The larger and more complex the data gets, the less deterministic the output seems to become."},{"Id":"6739563508","Type":"IssuesEvent","CreatedAt":"2017-10-19T16:44:25","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6972","RelatedDescription":"Closed issue \"asp-for binds to incorrect value if view model has property with same name as route placeholder\" (#6972) at aspnet/Mvc","RelatedBody":"\r\n\r\n[AspNetCoreMVcBugs (2).zip](https://github.com/aspnet/Mvc/files/1397825/AspNetCoreMVcBugs.2.zip)\r\n![bug](https://user-images.githubusercontent.com/439028/31764159-ac66751e-b4c0-11e7-93b5-ff03959c97c4.PNG)\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6740275572","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:17:48","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1463","RelatedDescription":"Closed issue \"How to generate mobile  4 digit token in .net core?\" (#1463) at aspnet/Identity","RelatedBody":""},{"Id":"6740272895","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:17:14","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1464","RelatedDescription":"Closed issue \"How to change Type from String to Int and Auto-generated UserName and NormalizedUserName Properties?\" (#1464) at aspnet/Identity","RelatedBody":"I intended to use UserName property as Employee Codes (integers and auto-incrementing). \r\n\r\nAs per policy, My application requires the employee to be able to log in using their employee code (which are integer values of 5 digits, if that's relevant ). \r\n\r\nI was using UserName property to store the employee codes, but now the requirement is to automatically generate an Employee Code (similar behavior of auto increment in SQL Server.) \r\n\r\nIs their anyway to override UserName and used it as integer and auto-generate it whenever a new record is inserted in the table. "},{"Id":"6740260115","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:14:20","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1465","RelatedDescription":"Closed issue \"Best practice to integrate Identity into a multiple-layers project?\" (#1465) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI have google/bing this but no good solution/suggestion found, as all examples just demonstrate the usage in one project, I'm wondering what's the best practice for integrate Identity with a real solution like below.\r\n\r\n- UI Layer (MVC)\r\n- Domain/Models Layer (i.e. `AppUser`, and we may want to keep this layer POCOs)\r\n- Infrastructures Layers (i.e. `AppDbContext`)\r\n\r\nIn this case, we cannot define an `AppDbContext : IdentityDbContext<AppUser>` because` AppUser` is expected an `IdentityUser`, to make this work, we have to add reference to Identity stuffs to Domain layer.\r\n\r\nI understand that if I re-implement all Identity Stores inside the Infrastructures layer, this would work, but this sounds not so good.\r\n\r\nIs there a best practice that we can reuse majority of Identity and keep each layer clean?\r\n\r\nIt's very appreciated to hear your suggestion?\r\n\r\n"},{"Id":"6740252831","Type":"IssuesEvent","CreatedAt":"2017-10-19T19:12:42","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1466","RelatedDescription":"Closed issue \"Suggestion: Support migrating to new Password Hashers over time\" (#1466) at aspnet/Identity","RelatedBody":"Over time, password hashes that were once considered secure are no longer considered so. Therefore, it would be desirable to be able to support multiple hashes in a single identity database, and transparently re-encrypt users' passwords as they login if a more secure hash function is available.\r\n\r\nA newer hash function may mean a new algorithm (e.g. Argon2), or simply more iterations / different configuration parameters for the algorithm already in use.\r\n\r\nA possible implementation would be:\r\n\r\n1.  ASPNet the identity `UserManager` has a `PasswordHashers` property added, which is a list of `IPasswordHasher` objects in order of ascending secure-ness called `PasswordHashers`. The existing `PasswordHasher` property is changed to retrieve the last item in the list, and is made read-only, so that newly stored passwords use the latest hash function.\r\n\r\n2. The  list index of the `PasswordHasher` that was used for a particular user is stored in a property of the `TUser` object called `PasswordHashVersion` \r\n\r\n3. During the authentication process, if the password check is successful, but the `PasswordHashVersion` value indicates it was not hashed using the current hasher, re-hash the password using the current `UserManager.PasswordHasher` and update the hash and version stored in the `TUser` object.\r\n\r\nThis would mean, over time, users still using the application would have their password encryption level upgraded and it would not be stuck at the quality of hashing algorithm available in the year they signed up. Users who no longer user the application would be stuck with the older password hashes. However, administrators could query the database to report on the number of users with legacy hashes, and contact them to request they sign-in to retain their account.\r\n\r\n"},{"Id":"6736032757","Type":"IssuesEvent","CreatedAt":"2017-10-19T01:13:36","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1290","RelatedDescription":"Closed issue \"Shadow properties are introduced while configuring Identity schema manually\" (#1290) at aspnet/Identity","RelatedBody":"I am trying to change the schema of `AspNetUserRoles` table because I have two other fields `FieldA` and `FieldB` and I want both of these fields to be primary keys.\r\n\r\nWhen I do something like this:\r\n\r\n```C#\r\n builder.Entity<ApplicationUserRole>(b =>\r\n            {\r\n                b.HasKey(r => new { r.UserId, r.RoleId, r.FieldA, r.FieldB });\r\n            });\r\n```\r\n\r\nIt configures the primary keys but doesn't remove the default Unique Constraint that is on `UserId` and `RoleId`. What I want is all four fields to be primary key, and remove the default unique constraint.\r\n\r\nI have tried various configurations, but all in vain. So I ended up trying to create the identity schema myself by removing the call `base.OnModelCreating()` and instead copying all the OnModelCreating code from the github repository. When I add the migration, it introduces new shadow properties. E.g. in the generated migration, `AspNetUserLogins` table has these fields: \r\n\r\nLoginProvider, \r\nProviderKey, \r\nApplicationUserId, \r\nProviderDisplayName, \r\nUserId\r\n\r\nWhere `ApplicationUserId` is introduced automatically. Why is this shadow property introduced? And this happens with all other identity tables as well."},{"Id":"6736025842","Type":"IssuesEvent","CreatedAt":"2017-10-19T01:10:38","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1195","RelatedDescription":"Closed issue \"Duplicate foreign keys\" (#1195) at aspnet/Identity","RelatedBody":"```C#\r\npublic class IdentityServerUserLogin: IdentityUserLogin<String>\r\n{\r\n}\r\n\r\nmodelBuilder.Entity<IdentityServerUserLogin>(b =>\r\n\r\n            {\r\n\r\n                b.HasKey(l => new {\r\n                    l.LoginProvider,\r\n                    l.ProviderKey\r\n                });\r\n\r\n                b.ToTable(storeOptions.IdentityServerUserLogin);\r\n\r\n            });\r\n```\r\n\r\nrunning add-migration Initial -c IdentityServer.Database.DbContexts.IdentityServerDbContext\r\n\r\nproduces the following garbage:\r\n\r\n```C#\r\n migrationBuilder.CreateTable(\r\n                name: \"UserLogins\",\r\n                columns: table => new\r\n                {\r\n                    LoginProvider = table.Column<string>(nullable: false),\r\n                    ProviderKey = table.Column<string>(nullable: false),\r\n                    IdentityServerUserId = table.Column<string>(nullable: true),\r\n                    IdentityServerUserId1 = table.Column<string>(nullable: true),\r\n                    ProviderDisplayName = table.Column<string>(nullable: true),\r\n                    UserId = table.Column<string>(nullable: true)\r\n                },\r\n                constraints: table =>\r\n                {\r\n                    table.PrimaryKey(\"PK_UserLogins\", x => new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \"FK_UserLogins_Users_IdentityServerUserId\",\r\n                        column: x => x.IdentityServerUserId,\r\n                        principalTable: \"Users\",\r\n                        principalColumn: \"Id\",\r\n                        onDelete: ReferentialAction.Restrict);\r\n                    table.ForeignKey(\r\n                        name: \"FK_UserLogins_Users_IdentityServerUserId1\",\r\n                        column: x => x.IdentityServerUserId1,\r\n                        principalTable: \"Users\",\r\n                        principalColumn: \"Id\",\r\n                        onDelete: ReferentialAction.Restrict);\r\n                });\r\n```\r\nany idea how to force it to use \"UserId\" only on stop duplicating those UserIds?\r\n\r\nSame problem with UserRoles"},{"Id":"6736009971","Type":"IssuesEvent","CreatedAt":"2017-10-19T01:03:58","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1089","RelatedDescription":"Closed issue \"Assumption that User Id queries are case-insensitive\" (#1089) at aspnet/Identity","RelatedBody":"I have a customer using Postgress for their DB with ASP.NET Identity and they're running into issues with the case sensitive queries against the user Id column. Is there anything that can be fixed/changed in the DbContext model builder that sets that column as case sensitive at the EF level in a DB provider agnostic way?"},{"Id":"6735999399","Type":"IssuesEvent","CreatedAt":"2017-10-19T00:59:29","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1067","RelatedDescription":"Closed issue \"Inheritance one-to-one or zero relationship with IdentityUser class\" (#1067) at aspnet/Identity","RelatedBody":"This is my Classes :\r\n```c#\r\npublic class ApplicationUsers : IdentityUser<Guid>\r\n    {\r\n         ....\r\n        [InverseProperty(\"ApplicationUser\")]\r\n        public virtual User User { get; set; }\r\n        [InverseProperty(\"ApplicationUser\")]\r\n        public virtual WorkerTaxi WorkerTaxi { get; set; }\r\n   }\r\n```\r\nPerson Abstract Class :\r\n```c#\r\n public abstract class Person\r\n    {\r\n        [DatabaseGenerated(DatabaseGeneratedOption.None)]\r\n        public Guid PersonId { get; set; }\r\n        ......\r\n    }\r\n\r\n```\r\nUser Class :\r\n```c#\r\npublic class User:Person\r\n    {\r\n        ....\r\n        [ForeignKey(\"PersonId\")]\r\n        [InverseProperty(\"User\")]\r\n        public virtual ApplicationUsers ApplicationUser { get; set; }\r\n    }\r\n```\r\nAnd WorkerTaxi Class :\r\n```c#\r\npublic class WorkerTaxi : Person\r\n    {\r\n        ....\r\n        [ForeignKey(\"PersonId\")]\r\n        [InverseProperty(\"WorkerTaxi\")]\r\n        public virtual ApplicationUsers ApplicationUser { get; set; }\r\n\r\n    }\r\n```\r\nI want to have one to one or zero relationship between ApplicationUsers.cs and User.cs and ApplicationUsers.cs and WorkerTaxi.\r\n\r\nWhen I run this test, it passes without any problem :\r\n```c#\r\n[TestMethod]\r\n        public async Task Verify_GetAllUser_Method()\r\n        {\r\n            using (var serviceScope = _serviceProvider.GetRequiredService<IServiceScopeFactory>().CreateScope())\r\n            {\r\n                var userManager =\r\n                    serviceScope.ServiceProvider.GetRequiredService<UserManager<ApplicationUsers>>();\r\n                var id = Guid.NewGuid();\r\n                var applicationUsersService =\r\n                    serviceScope.ServiceProvider.GetRequiredService<IApplicationUsersRepository>();\r\n                //--Arrange\r\n                var user = new ApplicationUsers\r\n                {\r\n                    Id = id,\r\n                    Email =\r\n                        \"X7n8N1JeD6CgecTnkdvmtH1sJZI=LY9R6hsG0Or3OSwv9nmDnQ==62ZLaR17B3BIAeQIIE57EZGlT8LwVlSEiB/ih3H1XxE=\",\r\n                    PhoneNumber = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=kByTpFP12CIONabzOFXQTg==fY6QbrosN2tQhXVZS82ZYg==\",\r\n                    UserName = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=FJZ1IeRcp4OHZzgdCwTJgQ==Jsgka2bvSbI/pzO3vbkOzg==\",\r\n                    User = new User\r\n                    {\r\n                        PersonId = id,\r\n                        FirstName = \"fTWDgtfCCdjrNPKhQpSYpA7NnV8=5dq1Tep3IfFLtabGzAKN0w==YA7slsTLCozHt7Mgn1pbXw==\",\r\n                        LastName = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=M6V+PMrCVyecbJPmE4853A==QWUrHVtr2I7ow6oDfZ/6ZQ==\",\r\n                        ProfileImage =\r\n                            \"SuGM+8hg8C3OCxpHd0Jgyu8/an4=yMfzTFs6xEp7SBxN8VvzcA==bJLLw5auqsptskn0hNXDd3nZPBIXbvaZEaQHq90IRCLkzCWflLCgi+NBBarLVdft\",\r\n                        Gender = Gender.Female\r\n                    }\r\n                };\r\n                await userManager.CreateAsync(user: user);\r\n                const int expected = 1;\r\n                //--Actual\r\n                var actual = applicationUsersService.GetAllUser().Count;\r\n                //--Assert\r\n                Assert.AreEqual(expected: expected, actual: actual);\r\n                await userManager.DeleteAsync(user: user);\r\n            }\r\n        }\r\n```\r\nBut when I run this test , I got this error :\r\n```c#\r\n[TestMethod]\r\n        public async Task Verify_GetAllWorker_Method()\r\n        {\r\n            using (var serviceScope = _serviceProvider.GetRequiredService<IServiceScopeFactory>().CreateScope())\r\n            {\r\n                var userManager =\r\n                    serviceScope.ServiceProvider.GetRequiredService<UserManager<ApplicationUsers>>();\r\n                var applicationUsersService =\r\n                    serviceScope.ServiceProvider.GetRequiredService<IApplicationUsersRepository>();\r\n                //--Arrange\r\n                var id = Guid.NewGuid();\r\n\r\n\r\n                var worker = new ApplicationUsers\r\n                {\r\n                    Id = id,\r\n                    Email =\r\n                        \"X7n8N1JeD6CgecTnkdvmtH1sJZI=uRzzvxiDclXJEkm+HwZcDw==WvfCqqAJRunNYo7DGno1ESxt00+ipRxYJ5jDJYq2rSg=\",\r\n                    PhoneNumber = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=alh9Stp8ok1XweUNhuDmIQ==NH5G7k2lHTOxDS24SGTXUg==\",\r\n                    UserName = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=bLI2HWYq0LnnkzLXKLvjwQ==V+9M/G5yeXMs7J71+vSbjQ==\",\r\n                    IsDeleted = false,\r\n                    WorkerTaxi = new WorkerTaxi\r\n                    {\r\n                        PersonId = id,\r\n                        BirthDate = DateTime.Now,\r\n                        BirthPlace = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=T588vuuioT1zHIz7o4GTTw==A+K+k4/rXJmOhF2hbKX5DA==\",\r\n                        DeviceNumber = \"pBHfwiS9RrhpHuwP7q4VYLgLUSw=cLNp+s2+DdCXbhux17lziw==I+BLV+WUWnsnLe7GEcKokw==\",\r\n                        DocumentImage =\r\n                            \"NbGHR/RrGeFenDWNnQ7LazgoKQY=9Wv1ku4hybd64s3ouNnhVg==gmUKXu+YU5hSkTfMJxOT4v7250tSLW0pc5SoY9JLVv/lQ1hnqQyyqZXAoG5MSCH8\",\r\n                        Driver = DriverType.Taxi,\r\n                        DriverLicenseCode =\r\n                            \"u1YSKbB4W+eqDeKgx8rlrTPW1DQ=pIMDMdWdYtOye+d8GGf/lw==fyF11Wfkvpvm2uZJwCdwFg==\",\r\n                        DriverLicenseDate = DateTime.Now,\r\n                        FatherName = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=0KIKpi8TXapLLANwAc3GWQ==Bqvh93OkxhhijBuLjiOwcg==\",\r\n                        FirstName = \"fTWDgtfCCdjrNPKhQpSYpA7NnV8=G63WGL6+dmkDC0ExczxZrA==ggRbM3Df4dcmtYkp7KVohw==\",\r\n                        LastName = \"qUqP5cyxm6YcTAhz05Hph5gvu9M=wTKx3cxcuxy5JqJd6obNSg==SxhwZxvzUlo7EprR+bHKTg==\",\r\n                        MeliCode = \"IsVVIlMUNB9bd7y7yt4mlaFH76I=4+zDBqu22x2y9swI0EvgeA==S4u4K8ayuYp+hoRFV8s3yA==\",\r\n                        MeliCartImage =\r\n                            \"xbCEQTXyjhgIYCBWGOWDNX8yAeE=5eTXYSPcp2iDRLZSLGyBmw==R1ovaeqtJVbqgmqpCmF7wyrAFRgwybGpDnTLhejwRQ6rr0GvlLNzKvKoUSyJdafu\",\r\n                        ProfileImage =\r\n                            \"0EeKhLI1OG/f880FKzQG44gjiTo=TPMcxyaaPT4GcWC/k/laFw==vFV8ADkG8qoberKI+kEXPlIBslJUcUbAaVpWX4zf23gVooVw0jkhtFDJCxKQEIyr\",\r\n                        ShenasnamehCode = \"gAc7m531mVKARZseE9/OL7eickU=57mUHw4a4NdLXLXdpPeEiA==txffKzYDvOh+bODJEN++0w==\",\r\n                        ShenasnamehImage =\r\n                            \"YRgn4oJ6HKekyKf06REGbtWpgiI=p6O8EVq53kzvAZEaIQYHGQ==Wu92TrssQkLe8AwcmUdyrvVeyV/b+Btf6PnYZsi4hUa9xknRBC0WVqnUE15VEHk3\",\r\n                        TaradodCode = \"0kyb/jWQsXrWikM+TPHY/O/r62Q=iSMFo/gq5lvqo7L3SdhbFg==3v8kTvaulmjXfGJ6nwBTrQ==\",\r\n                        TaxiCode = \"0kyb/jWQsXrWikM+TPHY/O/r62Q=bpyuyaihQRmk0orrStzgbw==7quLu5AYu9mJZkYujeHfMg==\",\r\n                        Gender = Gender.Female\r\n                    }\r\n                };\r\n                await userManager.CreateAsync(user: worker);\r\n                const int expected = 1;\r\n                //--Actual\r\n                var actual = applicationUsersService.GetAllWorkerTaxi().Count;\r\n                //--Assert\r\n                Assert.AreEqual(expected: expected, actual: actual);\r\n                await userManager.DeleteAsync(user: worker);\r\n            }\r\n        }\r\n```\r\n\r\n> PS.ServiceTest.ApplicationUsersRepositoryTest.Verify_GetAllWorker_Method threw exception: System.InvalidCastException: Unable to cast object of type 'PS.Model.Models.Taxi.WorkerTaxi' to type 'PS.Model.Models.User'.\r\n\r\nThe error was occurred when await **userManager.CreateAsync(user: worker)** was ran.\r\n\r\nWhere is the Problem ?\r\n\r\nHow can I fix that ?"},{"Id":"6735964074","Type":"IssuesEvent","CreatedAt":"2017-10-19T00:44:10","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/993","RelatedDescription":"Closed issue \"Q: IdentityDbContext in WebSite and MyProjectDbContext in separate assembly sharing a table\" (#993) at aspnet/Identity","RelatedBody":"Hello\r\n\r\nI have a Web Site with of course an `ApplicationDbContext : IdentityDbContext<ApplicationUser>`\r\nwhere my ApplicationUser is : \r\n```C#\r\n    public class ApplicationUser : IdentityUser\r\n    {\r\n        public MyProject.Models.UserInfo UserInfo { get; set; }\r\n    }\r\n```\r\nUserInfo come from MyProject.Models (where I have a MyProjectDbContext) because it used by other project (Web Services, Windows Services...) and is also joined to other table, mainly in history tables...\r\nI wish to keep the ApplicationDbContext (IdentityDbContext) in the web site, and have a separate assembly for my Models.\r\nThe pb is that the migration failed because the table UserInfo is in both assembly\r\n\r\nIs there a way to do that ?\r\nor \r\ndo I have to move the ApplicationDbContext (IdentityDbContext) in my model assembly ?\r\n"},{"Id":"6735044827","Type":"IssuesEvent","CreatedAt":"2017-10-18T20:16:27","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1476","RelatedDescription":"Opened issue \"Support discovery for provisioning client credentials at runtime\" (#1476) at aspnet/Identity","RelatedBody":""},{"Id":"6735038138","Type":"IssuesEvent","CreatedAt":"2017-10-18T20:15:00","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1475","RelatedDescription":"Opened issue \"Support client credentials flow\" (#1475) at aspnet/Identity","RelatedBody":""},{"Id":"6735034580","Type":"IssuesEvent","CreatedAt":"2017-10-18T20:14:11","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1474","RelatedDescription":"Opened issue \"Define default values for every configuration setting we can\" (#1474) at aspnet/Identity","RelatedBody":"Define the issuer dynamically based on the current host.\r\nDefine default values for all openid/oauth parameters of the applications defined by convention.\r\nPlug-in MVC endpoints/etc through IApplicationModelProvider"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6739505451","Type":"PullRequestEvent","CreatedAt":"2017-10-19T16:32:17","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2124","RelatedDescription":"Opened pull request \"[WIP] Migrate to new pipe APIs \" (#2124) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6735500247","Type":"PullRequestEvent","CreatedAt":"2017-10-18T22:04:08","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1728","RelatedDescription":"Merged pull request \"[2.0.x] Ensure the VSIX project is skipped when executing restore and build\" (#1728) at aspnet/Razor","RelatedBody":"The syntax of the Update in repo.targets was not actually matching Razor.sln. Something either changed in MSBuild or this never worked. Either way, this ensures we don't actually execute build and restore on the VSIX csproj when building patches."},{"Id":"6735452732","Type":"PullRequestEvent","CreatedAt":"2017-10-18T21:51:37","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1728","RelatedDescription":"Opened pull request \"[2.0.x] Ensure the VSIX project is skipped when executing restore and build\" (#1728) at aspnet/Razor","RelatedBody":"The syntax of the Update in repo.targets was not actually matching Razor.sln. Something either changed in MSBuild or this never worked. Either way, this ensures we don't actually execute build and restore on the VSIX csproj when building patches."},{"Id":"6734037522","Type":"PullRequestEvent","CreatedAt":"2017-10-18T16:37:38","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1724","RelatedDescription":"Merged pull request \"Add RepositoryRoot\" (#1724) at aspnet/Razor","RelatedBody":null}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6739078198","Type":"PullRequestEvent","CreatedAt":"2017-10-19T15:14:22","Actor":"s-whaley","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/873","RelatedDescription":"Opened pull request \"Account AccessDenied View Razor Syntax Bug Fix\" (#873) at aspnet/Templates","RelatedBody":"views/account/accessdenied ViewData[title] missing @ symbol"},{"Id":"6727246559","Type":"IssuesEvent","CreatedAt":"2017-10-17T12:58:45","Actor":"tverboon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Opened issue \"Unnecessary User.Id provided in password reset link?\" (#872) at aspnet/Templates","RelatedBody":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary."},{"Id":"6715213451","Type":"IssuesEvent","CreatedAt":"2017-10-13T20:09:17","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871) at aspnet/Templates","RelatedBody":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher "},{"Id":"6715040017","Type":"IssuesEvent","CreatedAt":"2017-10-13T19:22:44","Actor":"jkotalik","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Opened issue \"Add HttpsRedirection and HSTS middleware template\" (#871) at aspnet/Templates","RelatedBody":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher "},{"Id":"6698255499","Type":"PullRequestEvent","CreatedAt":"2017-10-10T17:47:03","Actor":"scottsauber","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Opened pull request \"Change Lockout wording of comment\" (#870) at aspnet/Templates","RelatedBody":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want."},{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"},{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"},{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-20T05:30:09.6040187Z","RunDurationInMilliseconds":8335}