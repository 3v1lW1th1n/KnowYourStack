{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework March 2019 Update","PublishedOn":"2019-03-20T00:40:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddressed an issue where the Framework would throw an...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/","RawContent":null},{"Title":".NET Core Container Images now Published to Microsoft Container Registry","PublishedOn":"2019-03-15T14:12:09+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We are now publishing .NET Core container images to Microsoft Container Registry (MCR). We have also made other changes to the images we publish, described in this post.\nImportant: You will need to...","Href":"https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/","RawContent":null},{"Title":".NET Core March 2019 Updates – 1.0.15, 1.1.12, 2.1.9 and 2.2.3","PublishedOn":"2019-03-12T22:59:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes.\n\n.NET Core...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.11 – Machine Learning for .NET","PublishedOn":"2019-03-09T01:03:28+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-0-11-machine-learning-for-net/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 3","PublishedOn":"2019-03-06T19:10:42+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 3. We would like to update you on the .NET Core 3.0 schedule and introduce you to improvements in .NET Core SDK installers, Docker containers, Range, and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/","RawContent":null},{"Title":"Floating-Point Parsing and Formatting improvements in .NET Core 3.0","PublishedOn":"2019-03-05T22:14:48+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"Starting back with the .NET Core 2.1 release, we were making iterative improvements to the floating-point parsing and formatting code in .NET Core. Now, in .NET Core 3.0 Preview 3, we are nearing...","Href":"https://devblogs.microsoft.com/dotnet/floating-point-parsing-and-formatting-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Collecting .NET Core Linux Container CPU Traces from a Sidecar Container","PublishedOn":"2019-03-05T19:31:18+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Introduction\nIn recent years, containerization has gained popularity in DevOps due to its valuable capacities, including more efficient resource utilization and better agility. Microsoft and Docker...","Href":"https://devblogs.microsoft.com/dotnet/collecting-net-core-linux-container-cpu-traces-from-a-sidecar-container/","RawContent":null},{"Title":".NET Framework March 1, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-03-01T18:25:39+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, March 1, we released the February 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-1-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"An update to C# versions and C# tooling","PublishedOn":"2019-02-27T18:59:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Starting with Visual Studio 2019 Preview 4 and RC, we&#8217;ll be adjusting how C# versions are treated in .NET tooling.\nSummary of changes\nFirstly, we&#8217;re adding two new Language Version...","Href":"https://devblogs.microsoft.com/dotnet/an-update-to-c-versions-and-c-tooling/","RawContent":null},{"Title":"How to port desktop applications to .NET Core 3.0","PublishedOn":"2019-02-26T18:00:30+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"In this post, I will describe how to port a desktop application from .NET Framework to .NET Core. I picked a WinForms application as an example. Steps for WPF application are similar and I&#8217;ll...","Href":"https://devblogs.microsoft.com/dotnet/how-to-port-desktop-applications-to-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9266559615","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:03:34","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Merged pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""},{"Id":"9225246598","Type":"PullRequestEvent","CreatedAt":"2019-03-12T10:03:37","Actor":"devlead","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Opened pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""},{"Id":"9214022828","Type":"PullRequestEvent","CreatedAt":"2019-03-10T16:40:38","Actor":"MikeWilliams-UK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Opened pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9208392766","Type":"IssuesEvent","CreatedAt":"2019-03-08T19:00:06","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123) at dotnet/foundation","RelatedBody":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130"},{"Id":"9208389675","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:59:32","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Merged pull request \"Fix logo and update team contributors\" (#136) at dotnet/foundation","RelatedBody":""},{"Id":"9208386555","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:59:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Merged pull request \"adds Umbraco logo\" (#135) at dotnet/foundation","RelatedBody":"fixes #124 "},{"Id":"9208386542","Type":"IssuesEvent","CreatedAt":"2019-03-08T18:59:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124) at dotnet/foundation","RelatedBody":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151"},{"Id":"9208384997","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:58:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Merged pull request \"adds the prism logo\" (#134) at dotnet/foundation","RelatedBody":"fixes #126 "},{"Id":"9208384964","Type":"IssuesEvent","CreatedAt":"2019-03-08T18:58:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126) at dotnet/foundation","RelatedBody":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157"},{"Id":"9208383052","Type":"PullRequestEvent","CreatedAt":"2019-03-08T18:58:27","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Merged pull request \"Add additional ReactiveUI organization projects.\" (#133) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9228689700","Type":"IssuesEvent","CreatedAt":"2019-03-12T17:35:17","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Opened issue \"March 2019 .NET Updates\" (#103) at dotnet/announcements","RelatedBody":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0))\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9150531193","Type":"IssuesEvent","CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Opened issue \"SDK Installers will remove previous patch versions\" (#102) at dotnet/announcements","RelatedBody":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions)."},{"Id":"9078417647","Type":"IssuesEvent","CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Opened issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101) at dotnet/announcements","RelatedBody":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition."},{"Id":"9075495754","Type":"IssuesEvent","CreatedAt":"2019-02-15T14:06:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Opened issue \"Advisory on February 2019 Security update for Windows 10 update 1809\" (#100) at dotnet/announcements","RelatedBody":"<span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.\r\n\r\nWe are actively working on fixing and re-shipping a correction for this issue. If you installed the February 2019 security update and have not yet seen any negative behavior, we recommend that you leave your system as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We are working to improve our testing infrastructure to prevent these type of issues in the future. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this <a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/\" rel=\"nofollow\">post</a> as we have new information.\r\n<h2>Guidance</h2>\r\nWe are working on guidance and will update this pose and as we have new information.\r\n<h2>Workaround</h2>\r\nThere are no known workarounds at this time.\r\n<h2>Symptoms</h2>\r\nAfter installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:\r\n<p class=\"xxxxxmsonormal\"><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></p>\r\n"},{"Id":"9070407129","Type":"IssuesEvent","CreatedAt":"2019-02-14T19:28:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Opened issue \"Supporting new Alpine versions (for containers)\" (#99) at dotnet/announcements","RelatedBody":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread."},{"Id":"9060710562","Type":"IssuesEvent","CreatedAt":"2019-02-13T14:48:22","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Opened issue \"February 2019 .NET Updates\" (#98) at dotnet/announcements","RelatedBody":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework January 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9299608315","Type":"IssuesEvent","CreatedAt":"2019-03-23T05:15:34","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/23417","RelatedDescription":"Opened issue \"few issues with tests/setup-stress-dependencies.sh\" (#23417) at dotnet/coreclr","RelatedBody":"We have warnings like:\r\n`/__w/3/s/tests/../init-tools.sh: line 20: return: can only `return' from a function or sourced script`\r\nbecause `init-tools.sh` was supposed to be called via `source`.\r\nand we have `grep: write error: Broken pipe` issue that we need to fix."},{"Id":"9299604754","Type":"PullRequestEvent","CreatedAt":"2019-03-23T05:13:13","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23354","RelatedDescription":"Merged pull request \"Add call to setup-stress-dependencies.sh to build-test.sh.\" (#23354) at dotnet/coreclr","RelatedBody":"Download CoreDisTools for Ubuntu x64/x86 to allow GCStress=0xc testing in ADO.\r\nJenkins was doing it via python script that copied them, Windows had this code in build-test.cmd."},{"Id":"9299579092","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:54:48","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23325","RelatedDescription":null,"RelatedBody":"\r\nNot sure yet what is the root cause. \r\nReenabling tests for a repro.\r\n\r\n\r\nFixes:#22303"},{"Id":"9299578984","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:54:44","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23325","RelatedDescription":"Closed pull request \"Fix 22303   (interlocked failures on ARM64)\" (#23325) at dotnet/coreclr","RelatedBody":"\r\nNot sure yet what is the root cause. \r\nReenabling tests for a repro.\r\n\r\n\r\nFixes:#22303"},{"Id":"9299563133","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:43:29","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22516","RelatedDescription":"Merged pull request \"Replace slow implementations in ASCIIUtility with fast implementations\" (#22516) at dotnet/coreclr","RelatedBody":"This PR introduces internal workhorse methods for operating on buffers containing ASCII data (as bytes or chars). In particular, these methods provide implementations of:\r\n\r\n- Counting the number of ASCII bytes or chars at the beginning of a sequence; and\r\n- Transcoding ASCII data to and from UTF-16.\r\n\r\nThese workhorse methods will be used internally by the UTF-8 transcoder. However, there is opportunity for other components in the Framework to take direct dependencies on them. For example, I have a separate experimental branch that replumbs the existing `ASCIIEncoding` class to ride on top of these workhorse methods rather than its own existing implementation. Performance numbers from that branch are provided below. (Due to time constraints I only ran the numbers for UTF-16 to ASCII, not the other way around.)\r\n\r\n(_Edit:_ Removed outdated perf numbers.)\r\n\r\n/cc @tannergooding and @ahsonkhan who I believe had some interest in taking advantage of these APIs within CoreLib.\r\n\r\nFor a description of how this is plumbed through `ASCIIEncoding`, see the comment https://github.com/dotnet/coreclr/pull/22516#issuecomment-463824980.\r\n\r\n__Not in this PR:__\r\n\r\n- The UTF-8 transcoding logic which rides on top of this as workhorse."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9299164765","Type":"PullRequestEvent","CreatedAt":"2019-03-23T00:41:19","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11012","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#11012) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190322.1\r\n- **Date Produced**: 3/23/2019 12:05 AM\r\n- **Commit**: 26b345d9b9ee451728bb9d0d6daa51075fb9cbfb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19172.1\r\n\r\n"},{"Id":"9299084860","Type":"PullRequestEvent","CreatedAt":"2019-03-23T00:06:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11012","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#11012) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190322.1\r\n- **Date Produced**: 3/23/2019 12:05 AM\r\n- **Commit**: 26b345d9b9ee451728bb9d0d6daa51075fb9cbfb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19172.1\r\n\r\n"},{"Id":"9299058246","Type":"PullRequestEvent","CreatedAt":"2019-03-22T23:55:58","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11011","RelatedDescription":"Merged pull request \"Mark packages as non-shipping\" (#11011) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"9298857954","Type":"PullRequestEvent","CreatedAt":"2019-03-22T22:50:42","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11011","RelatedDescription":"Opened pull request \"Mark packages as non-shipping\" (#11011) at dotnet/cli","RelatedBody":"\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9297028430","Type":"PullRequestEvent","CreatedAt":"2019-03-22T17:11:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1104) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.6\r\n\r\n"},{"Id":"9291927232","Type":"PullRequestEvent","CreatedAt":"2019-03-22T00:34:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1104) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n"},{"Id":"9268764968","Type":"IssuesEvent","CreatedAt":"2019-03-19T06:25:35","Actor":"githubdigo","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Opened issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9299591393","Type":"PullRequestEvent","CreatedAt":"2019-03-23T05:03:40","Actor":"eanova","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36253","RelatedDescription":"Opened pull request \"Fixed Project's Interop.Zlib.cs link to use common/src/Interop instead.\" (#36253) at dotnet/corefx","RelatedBody":"- Continuation from #35762 \r\n- System.IO.Compression\r\nMoved the Project's Interop.Zlib.cs file to corefx/src/Common/src/Interop/Interop.ZLib.cs and updated the link in the System.IO.Compression project file to match.\r\n@ViktorHofer "},{"Id":"9299567582","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:46:33","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36227","RelatedDescription":"Merged pull request \"Add ASCIIUtility tests\" (#36227) at dotnet/corefx","RelatedBody":"Unit tests for https://github.com/dotnet/coreclr/pull/22516.\r\n\r\nThese tests use private reflection to call into `ASCIIUtility` to test the method implementations. These methods serve as the workhorse routines for `ASCIIEncoding`. There are existing tests for `ASCIIEncoding` (see the project System.Text.Encoding.Tests), but for increased coverage and to exercise edge cases that `ASCIIEncoding` might be hiding I wanted to test the implementation directly. This should also serve as a future-proofing mechanism in case components other than `ASCIIEncoding` end up calling into it."},{"Id":"9299565276","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:45:00","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36252","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#36252) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9299488646","Type":"IssuesEvent","CreatedAt":"2019-03-23T03:51:35","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/18976","RelatedDescription":"Closed issue \"Unable to run new app:  System.DllNotFoundException: Unable to load DLL 'api-ms-win -core-registry-l1-1-0.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\" (#18976) at dotnet/corefx","RelatedBody":"Sorry if that has been previously addressed or answered, could not find an applicable solution.\r\n\r\nThe default generated web app with visual studio.\r\n\r\n```\r\nC:\\Projects\\DotNetCoreTest\\WebApplication\\WebApplication\\bin\\Debug\\netcoreapp1.1\r\n\\win10-x64>C:\\Projects\\DotNetCoreTest\\WebApplication\\WebApplication\\bin\\Debug\\ne\r\ntcoreapp1.1\\win10-x64\\WebApplication.exe\r\n\r\nUnhandled Exception: System.DllNotFoundException: Unable to load DLL 'api-ms-win\r\n-core-registry-l1-1-0.dll': The specified module could not be found. (Exception\r\nfrom HRESULT: 0x8007007E)\r\n   at Interop.mincore.RegOpenKeyEx(SafeRegistryHandle hKey, String lpSubKey, Int\r\n32 ulOptions, Int32 samDesired, SafeRegistryHandle& hkResult)\r\n   at Microsoft.Win32.RegistryKey.InternalOpenSubKeyCore(String name, RegistryRi\r\nghts rights, Boolean throwOnPermissionFailure)\r\n   at Microsoft.AspNetCore.DataProtection.RegistryPolicyResolver.ResolveDefaultP\r\nolicy()\r\n   at Microsoft.Extensions.DependencyInjection.DataProtectionServices.<GetDefaul\r\ntServices>d__0.MoveNext()\r\n   at Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescr\r\niptorExtensions.TryAdd(IServiceCollection collection, IEnumerable`1 descriptors)\r\n\r\n   at Microsoft.Extensions.DependencyInjection.DataProtectionServiceCollectionEx\r\ntensions.AddDataProtection(IServiceCollection services)\r\n   at Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExte\r\nnsions.AddViewServices(IServiceCollection services)\r\n   at Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExte\r\nnsions.AddViews(IMvcCoreBuilder builder)\r\n   at Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.Ad\r\ndMvc(IServiceCollection services)\r\n   at WebApplication.Startup.ConfigureServices(IServiceCollection services) in C\r\n:\\Projects\\DotNetCoreTest\\WebApplication\\WebApplication\\Startup.cs:line 33\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(ISer\r\nviceCollection services)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at WebApplication.Program.Main(String[] args) in C:\\Projects\\DotNetCoreTest\\W\r\nebApplication\\WebApplication\\Program.cs:line 14\r\n```"},{"Id":"9299457414","Type":"IssuesEvent","CreatedAt":"2019-03-23T03:31:28","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/34287","RelatedDescription":"Closed issue \" The code generated is wrong when the property is a generic type\" (#34287) at dotnet/corefx","RelatedBody":"In System.CodeDom project:\r\n`\r\n string type = typeof(int?).Name;\r\nCodeMemberProperty prty = new CodeMemberProperty();\r\nprty.Name = \"CityCode\";\r\nprty.Type = new CodeTypeReference(type);\r\n prty.Attributes = MemberAttributes.Public| MemberAttributes.Final;\r\n.....\r\n`\r\nThen the code generated is:\r\n\r\n`\r\n public Nullable<> CityCode\r\n`\r\n"},{"Id":"9299444843","Type":"IssuesEvent","CreatedAt":"2019-03-23T03:23:47","Actor":"Nukepayload2","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36251","RelatedDescription":"Opened issue \"Microsoft.VisualBasic.Strings.Replace produces unexpected result when replacing Japanese characters\" (#36251) at dotnet/corefx","RelatedBody":"Forwarded from https://github.com/dotnet/vblang/issues/390 \r\n\r\nI found that the `Microsoft.VisualBasic.Strings.Replace` function has a strange behavior. \r\nThe following program replaces Japanese full-width characters \"ポ\" and half-width characters \"ﾎﾟ\" with \"po\":\r\n```vbnet\r\nModule Program\r\n    Sub Main()\r\n        Dim replaced = Replace(Expression:=\"ﾎﾟポ\",\r\n                               Find:=\"ポ\", Replacement:=\"po\",\r\n                               Compare:=CompareMethod.Text)\r\n        Console.WriteLine(replaced)\r\n    End Sub\r\nEnd Module\r\n```\r\n[Run with SharpLab](https://sharplab.io/#v2:EYLgHgbALANANiAbsGAXEAnArgOwD4CSAtgA4D2GqAzgAQDKAnlagKZECwAUMeZbQLIBLAMYYyVMgDNUAOgBqgqlgCGcAELKqIrl35kAJljgsaABTEBzDMo6ca9+lmA1+ywTgAUASi4O/NABFBIhoMFhI4ZWEWfRoAXhoAJXDI6I8AUTASMKotMhwQOIAiQDj/wHz/wF2GIphffzr6hr8AMXd9QqKqmCSUqLYWHHRi8mraxrGxgGEyUmUwwqmZsP4WVAALAxkAFRYwVB87eqmcCWMZAHUMQVYAGXcWDzCI3v19v3ScWLonLnfYvUNjEA)\r\n\r\nThe expected result is \"popo\". But actually the value of `replaced` is \"poﾟpo\". It's inconsistent with the `Range.Replace` function of Excel. \r\nThis bug will affect .NET Core 3.0 when the `Microsoft.VisualBasic.Strings.Replace` function is ported from .NET Framework."},{"Id":"9299376354","Type":"IssuesEvent","CreatedAt":"2019-03-23T02:41:12","Actor":"Akaion","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36250","RelatedDescription":"Opened issue \"Proposal - Change the way Marshal allocates / frees unmanaged memory\" (#36250) at dotnet/corefx","RelatedBody":"From what I understand, Marshal currently uses LocalAlloc when `Marshal.AllocHGlobal` is used and LocalFree when `Marshal.FreeHGlobal` is used.\r\n\r\nThe [documentation](https://docs.microsoft.com/en-nz/windows/desktop/Memory/global-and-local-functions) for Local functions states that Heap functions should be used over Local functions where possible (it states in another documentation that local functions have more overhead and, thus, are less efficient.)\r\n\r\nObviously some benchmarks would need to be done but using HeapAlloc and HeapFree over LocalAlloc and LocalFree seem like a logical thing to use unless there is some reason why these functions can't be used with Marshal."},{"Id":"9299198642","Type":"PullRequestEvent","CreatedAt":"2019-03-23T00:58:37","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36122","RelatedDescription":"Merged pull request \"Add (Try)GetGuid to Utf8JsonReader\" (#36122) at dotnet/corefx","RelatedBody":"This partially addresses https://github.com/dotnet/corefx/issues/34690."},{"Id":"9299114885","Type":"IssuesEvent","CreatedAt":"2019-03-23T00:18:18","Actor":"GasparSantos","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36249","RelatedDescription":"Opened issue \"aspnet core 2.2: System.Net.Socket.Exception from wcf call\" (#36249) at dotnet/corefx","RelatedBody":"I´m facing a lot of System.Net.SocketException after update to aspnet core 2.2 and nuget packages System.ServiceModel.* to version 4.5.3\r\nMy app container is running under an Azure web app Linux, failure occurs when try ingto connect on a external service provider with a soap request.\r\n\r\n**On app initialization** :            AppContext.SetSwitch(\"System.Net.Http.useSocketsHttpHandler\", false);\r\n\r\n\r\n**Exception message**:  Cannot assign requested address\r\n\r\n**StackTrace:**\r\nSystem.Net.Http.HttpRequestException:\r\n   at System.Net.Http.ConnectHelper+<ConnectAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.HttpConnectionPool+<CreateConnectionAsync>d__44.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.HttpConnectionPool+<WaitForCreatedConnectionAsync>d__49.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.HttpConnectionPool+<SendWithRetryAsync>d__39.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.AuthenticationHelper+<SendWithAuthAsync>d__16.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.RedirectHandler+<SendAsync>d__4.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.DecompressionHandler+<SendAsync>d__11.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.DiagnosticsHandler+<SendAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\nInner exception System.Net.Sockets.SocketException handled at System.Net.Http.ConnectHelper+<ConnectAsync>d__2.MoveNext:\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.ConnectHelper+<ConnectAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n\r\n"},{"Id":"9299106959","Type":"PullRequestEvent","CreatedAt":"2019-03-23T00:14:58","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36229","RelatedDescription":"Merged pull request \"Correctly show the '}', ']' within the exception message in Utf8JsonWriter\" (#36229) at dotnet/corefx","RelatedBody":"**Before:**\r\n`'0' is invalid without a matching open.`\r\n\r\n**Now:**\r\n`']' is invalid without a matching open.`\r\n\r\nWas previously passing the token value as `currentDepth` so the default byte value (`0`) was being displayed. Using named parameters fixes that."},{"Id":"9299036371","Type":"IssuesEvent","CreatedAt":"2019-03-22T23:47:44","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36248","RelatedDescription":"Opened issue \"Official builds are failing when publishing to BAR\" (#36248) at dotnet/corefx","RelatedBody":"```\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error : Exception: Root directory of the repo was not found. Check that git is installed and that you are in a folder which is a git repo (.git folder should be present).\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.DarcLib.Helpers.LocalHelpers.GetRootDir(ILogger logger) in /_/src/Microsoft.DotNet.Darc/src/DarcLib/Helpers/LocalHelpers.cs:line 49\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.DarcLib.Local..ctor(ILogger logger, String overrideRootPath) in /_/src/Microsoft.DotNet.Darc/src/DarcLib/Actions/Local.cs:line 28\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.Maestro.Tasks.PushMetadataToBuildAssetRegistry.GetBuildDependenciesAsync(IMaestroApi client, CancellationToken cancellationToken) in /_/src/Maestro/Microsoft.DotNet.Maestro.Tasks/src/PushMetadataToBuildAssetRegistry.cs:line 102\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.Maestro.Tasks.PushMetadataToBuildAssetRegistry.PushMetadataAsync(CancellationToken cancellationToken) in /_/src/Maestro/Microsoft.DotNet.Maestro.Tasks/src/PushMetadataToBuildAssetRegistry.cs:line 76\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error : \r\n```\r\n\r\n`Microsoft.DotNet.DarcLib.Helpers.LocalHelpers.GetRootDir(ILogger logger)` runs a git command with `ProcessStartInfo` and sets the `WorkingDirectory` to: `Environment.CurrentDirectory` so I wonder if that is what is causing the problem. I have some private builds where I run the git command as a separate step and it works just fine.\r\n\r\nMe and @jcagme are investigating the issue and we have an idea on how to fix it. \r\n\r\nOpened this issue to track the build break.\r\n\r\ncc: @danmosemsft @ericstj @wfurt @ViktorHofer "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9299406239","Type":"PullRequestEvent","CreatedAt":"2019-03-23T03:00:10","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34060","RelatedDescription":"Merged pull request \"Merge master to features/editorconfig-in-compiler\" (#34060) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9299350390","Type":"PullRequestEvent","CreatedAt":"2019-03-23T02:24:55","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34338","RelatedDescription":"Merged pull request \"Readonly members improved diagnostics\" (#34338) at dotnet/roslyn","RelatedBody":"- Commit 1 adds the following error codes:\r\n```cs\r\n        ERR_StaticMemberCantBeReadOnly = 8656,\r\n        ERR_AutoPropertyCantBeReadOnly = 8657,\r\n        ERR_InvalidPropertyReadOnlyMods = 8658,\r\n        ERR_DuplicatePropertyReadOnlyMods = 8659,\r\n        ERR_FieldLikeEventCantBeReadOnly = 8660\r\n```\r\n- Commit 2 updates the symbol classes to use these error codes\r\n- Commit 3 improves errors for writable usage of readonly instance variables\r\n\r\ncc @jcouv @agocke @333fred who have had questions or suggestions about what the language should do in some of these cases."},{"Id":"9299258931","Type":"PullRequestEvent","CreatedAt":"2019-03-23T01:30:14","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34366","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#34366) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9299258755","Type":"PullRequestEvent","CreatedAt":"2019-03-23T01:30:10","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34367","RelatedDescription":"Merged pull request \"Merge master to features/lspSupport\" (#34367) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9299258550","Type":"PullRequestEvent","CreatedAt":"2019-03-23T01:30:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34369","RelatedDescription":"Merged pull request \"Merge master to features/readonly-members\" (#34369) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9299257992","Type":"PullRequestEvent","CreatedAt":"2019-03-23T01:29:44","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34361","RelatedDescription":"Merged pull request \"Updated wait operations to fix unreliable .editorconfig integration tests\" (#34361) at dotnet/roslyn","RelatedBody":"This is an interim stability improvement while @jasonmalinowski continues to investigate asynchronous operations in this path."},{"Id":"9299188786","Type":"IssuesEvent","CreatedAt":"2019-03-23T00:53:38","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34371","RelatedDescription":"Opened issue \"Make all compiler parameters available from Project in Workspace layer\" (#34371) at dotnet/roslyn","RelatedBody":"Specifically, Edit and Continue needs to know the value of `/out` parameter."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9299565500","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:45:09","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7204","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7204) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9299390981","Type":"PullRequestEvent","CreatedAt":"2019-03-23T02:50:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7203","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7203) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh"},{"Id":"9299275650","Type":"PullRequestEvent","CreatedAt":"2019-03-23T01:39:55","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7203","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7203) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9299270983","Type":"PullRequestEvent","CreatedAt":"2019-03-23T01:37:01","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7202","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7202) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"9298154033","Type":"PullRequestEvent","CreatedAt":"2019-03-22T20:18:23","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7202","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7202) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9292537087","Type":"PullRequestEvent","CreatedAt":"2019-03-22T03:37:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7198","RelatedDescription":"Merged pull request \" Implement GetConservativeUpperBoundForOutgoingArgs for Unix\" (#7198) at dotnet/corert","RelatedBody":"Fixes #7118 "},{"Id":"9292537078","Type":"IssuesEvent","CreatedAt":"2019-03-22T03:37:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7118","RelatedDescription":"Closed issue \"Abort trap: 6 on CoreFX / macOS\" (#7118) at dotnet/corert","RelatedBody":"There is recurring problem with macOS / CoreFX test builds on the CI:\r\n\r\n```\r\n07:35:02 Discovering: System.Collections.Tests\r\n07:35:03 Discovered:  System.Collections.Tests\r\n07:35:08 Starting:    System.Collections.Tests\r\n07:35:09    System.Collections.Tests.Dictionary_IDictionary_NonGeneric_Tests.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:09       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:13    System.Collections.Tests.SortedList_Generic_Tests_Keys_AsICollection.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:13       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:21    System.Collections.Tests.Queue_ICollection_NonGeneric_Tests.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:21       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:30    System.Collections.Tests.SortedDictionary_Generic_Tests_Keys_AsICollection.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:30       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:37:36 /Users/dotnet-bot/j/workspace/dotnet_corert/master/debug_osx10.12_corefx_prtest/tests/CoreFX/corerun: line 75: 88337 Abort trap: 6           ${TestFolderName}/native/${TestExecutable} ${TestFolderName}/${TestFileName}.dll @${TestFolderName}/${TestFileName}.rsp -xml ${LogDir}/${TestFileName}/testResults.xml -notrait category=nonnetcoreapptests -notrait category=${OSCategory} -notrait category=failing\r\n```\r\n\r\nPRs: \r\n#7115 (https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1578/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n#7116 (https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1576/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n#7089\r\n(https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1539/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n"},{"Id":"9292536265","Type":"PullRequestEvent","CreatedAt":"2019-03-22T03:37:24","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7201","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7201) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @ahoefling"},{"Id":"9292299644","Type":"PullRequestEvent","CreatedAt":"2019-03-22T02:27:12","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7201","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7201) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9291930547","Type":"IssuesEvent","CreatedAt":"2019-03-22T00:35:51","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7200","RelatedDescription":"Opened issue \"[Question] CoreRT future plans\" (#7200) at dotnet/corert","RelatedBody":"Dear CoreRT team,\r\n\r\nHaving followed this repo for now a couple of years and having developed a product depending on it, it's been quite a journey to follow the development in here. It's been very rewarding to be able to follow the progress of a compiler and runtime and I've been stoked to see that it was finally possible to do full AOT compilation of .NET. It's been a joy to watch the discussions and PRs come in one by one, slowly improving the product - thank you to the whole team for all their hard work on this!\r\n\r\nNow for my question.\r\nDuring the past months I've started to notice hints about the future of CoreRT in a growing number of discussions around github and I've been surprised to see references to that CoreRT is still considered an experimental runtime and is often ruled out as a good solution for customers. Whereas initially over the first years following this, it felt like CoreRT was on a path to becoming part of the official \"dotnet\" CLI experience, but these recent discussions seem to indicate that the opposite is true. It strikes me that in the long discussion thread on single file deployment many of the use cases would benefit from CoreRT yet it seems like everybody is ruling it out for reasons I still don't fully understand (apart from the obvious dynamic plugin loading, but honestly there are many alternative ways to implement plugins in CoreRT, some of which we use in our product).\r\n\r\nIt seems to me that you have a stellar product here that would solve so many issues if it were on a path to official support, yet at some point along the way it was decided to not fully support it anyway. @jkotas you hinted in the discussion that the technology would likely end up in a (different) product some day, but even if that calmed my nerves slightly, it also sparked more questions, such as - can we continue to rely on this compiler for our product, or do we run the risk of it suddenly falling out of grace.\r\nI thought at one point that the decision to not officially support CoreRT was simply that it wasn't ready. But now that it feels increasingly more mature yet seems to be ruled out of official support plans, it strikes me that it might be a more strategic decision.\r\n\r\nI know that this might be a tricky question to answer in a public forum, but please don't take it the wrong way. I'm just curious to try to understand if full AOT compilation (not CPAOT but CoreRT) is still being considered a strategic part of the .NET future.\r\n\r\nI have noticed the efforts to unify the sources from the various runtimes which is another hint that long time development is intended. I understand that this repo serves many officially supported products, among those now .NET Native and CPAOT, which leads me to have greater trust in CoreRT going forward.\r\n\r\nBut I hope it makes sense that it would be nice at one point to gain a little clarity of what Microsoft's intentions are in the longer term in this space. In my ideal world, it would be decided to acknowledge how great of a product this already is and it would gain a permanent place on the .NET stage.\r\n\r\n"},{"Id":"9291794896","Type":"PullRequestEvent","CreatedAt":"2019-03-21T23:56:51","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7199","RelatedDescription":"Opened pull request \"Integrating test execution into SuperIlc and other improvements\" (#7199) at dotnet/corert","RelatedBody":"1) Change --cpaot and --corerun from boolean flags to paths to the\r\nactual compilers; this also implicitly removes the --tool-directory\r\noption.\r\n\r\n2) Introduce new compiler index for internal use to easily iterate\r\nover CPAOT vs. Crossgen results. I have also changed the output\r\ndirectory name to be based on this logical enumeration rather than\r\non the plain file name of the compiler exe.\r\n\r\n3) Integrate logic for ETW tracing. I have not yet implemented\r\nthe actual per-assembly JIT breakdown but this delta goes a long way\r\ntowards that goal. The delta is getting big so I'd prefer to merge\r\nsomething in and follow up in a subsequent change if possible.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9291209487","Type":"PullRequestEvent","CreatedAt":"2019-03-21T21:45:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7198","RelatedDescription":"Opened pull request \" Implement GetConservativeUpperBoundForOutgoingArgs\" (#7198) at dotnet/corert","RelatedBody":"Fixes #7118 "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9299138395","Type":"IssuesEvent","CreatedAt":"2019-03-23T00:28:57","Actor":"fadimounir","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3035","RelatedDescription":"Opened issue \"SDK double writes runtime files when publishing self contained apps\" (#3035) at dotnet/sdk","RelatedBody":"Here's a repro:\r\n1) dotnet new console (make sure to target \"netcoreapp3.0\")\r\n2) Edit the csproj and add a PackageReference to NewtonSoft.Json version 9.0.1.\r\n3) dotnet publish -r win-x64\r\n\r\nThe Json library pulls netstandard1.0 runtime packages, and when you run dotnet publish and reference netcoreapp3.0 runtime libraries, the list of files to publish will contain runtime assemblies from both 1.0 and 3.0 runtimes, and will end up double writing some of them.\r\n\r\nExample:\r\n.nuget\\packages\\runtime.any.system.io\\4.1.0\\lib\\netstandard1.5\\System.IO.dll\r\n.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview4-27501-7\\runtimes\\win-x64\\lib\\netcoreapp3.0\\System.IO.dll\r\n\r\n\r\nThis also causes errors when crossgen is enabled (Eventually).\r\n\r\nThe expected behavior is that the SDK should probably ensure that there's a unique copy of each assembly, and take the highest version one."},{"Id":"9298884083","Type":"PullRequestEvent","CreatedAt":"2019-03-22T22:57:56","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3034","RelatedDescription":"Opened pull request \"Mark packages as non-shipping\" (#3034) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"424464892","IsPullRequest":false,"CreatedAt":"2019-03-23T05:15:34","Actor":"sandreenko","Number":"23417","RawContent":null,"Title":"few issues with tests/setup-stress-dependencies.sh","State":"open","Body":"We have warnings like:\r\n`/__w/3/s/tests/../init-tools.sh: line 20: return: can only `return' from a function or sourced script`\r\nbecause `init-tools.sh` was supposed to be called via `source`.\r\nand we have `grep: write error: Broken pipe` issue that we need to fix.","Url":"https://github.com/dotnet/coreclr/issues/23417","RelatedDescription":"Open issue \"few issues with tests/setup-stress-dependencies.sh\" (#23417)"},{"Id":"424444147","IsPullRequest":true,"CreatedAt":"2019-03-23T00:38:32","Actor":"VSadov","Number":"23416","RawContent":null,"Title":"Branchless `System.Index.GetOffset`","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23416","RelatedDescription":"Open PR \"Branchless `System.Index.GetOffset`\" (#23416)"},{"Id":"423992606","IsPullRequest":true,"CreatedAt":"2019-03-23T00:09:22","Actor":"jkoritzinsky","Number":"23401","RawContent":null,"Title":"Fix WinRT marshalling for NotifyPropertyChangedEventArgs and NotifyCollectionChangedEventArgs (CoreCLR side)","State":"closed","Body":"The fix for dotnet/corefx#35909 requires both some runtime work and some framework work since the marshalling helpers for NotifyPropertyChangedEventArgs and NotifyCollectionChangedEventArgs lives in corefx.\r\n\r\nIn this PR: \r\n- Enable marshalling `IntPtr` and `UIntPtr` in a WinRT scenario.\r\n\r\nAlthough these types aren't technically allowed in a WinRT signature, we need to enable support for marshalling them so that we can marshal our types from managed to native through an OS-provided factory like the `INotifyCollectionChangedEventArgsFactory` and ensure that we do not project the native result from that function back to managed, since that undoes the work we did to marshal it and makes it impossible to correctly marshal the object. By marshalling as an IntPtr, we get the native COM interface ponter as-is and don't have to worry about our projection support jumping in.\r\n\r\n- Add a new `Marshal.GetUniqueObjectForIUnknownIgnoreWinRT` method for use by the CoreFX half of this fix.\r\n\r\nTo implement the marshalling of an `INotifyPropertyChangedEventArgs` or `INotifyCollectionChangedEventArgs` to a managed `NotifyPropertyChangedEventArgs` or `NotifyCollectionChangedEventArgs` respectively, we need to be able to call properties directly on these interfaces to marshal them for the projection. Without a way to get an RCW for pointers to these types without having to marshal them to managed through the projection, we cannot implement a way to marshal them through the projection without infinitely recursing to a stack-overflow (current behavior) or manually traversing the native vtable of the interface (which would be extremely messy and wouldn't do what we want).\r\n\r\nThere is prior art of this technique being used within CoreCLR to implement marshalling for the `IReference<T>` and `IReferenceArray<T>` WinRT types.\r\n\r\nWe will not expose this method to users in CoreFX. It is only public so code in the `System.Runtime.WindowsRuntime` package can call it.\r\n\r\nCoreFX work in dotnet/corefx#36224","Url":"https://github.com/dotnet/coreclr/pull/23401","RelatedDescription":"Closed or merged PR \"Fix WinRT marshalling for NotifyPropertyChangedEventArgs and NotifyCollectionChangedEventArgs (CoreCLR side)\" (#23401)"},{"Id":"423964497","IsPullRequest":true,"CreatedAt":"2019-03-22T23:33:24","Actor":"sandreenko","Number":"23399","RawContent":null,"Title":"Delete unused variables in jit. Part1.","State":"closed","Body":"\r\nI would like to get rid of unused variables in jit source for future and check that they are meant to be unused now. \r\n@BruceForstall could you please review a set of such changes?","Url":"https://github.com/dotnet/coreclr/pull/23399","RelatedDescription":"Closed or merged PR \"Delete unused variables in jit. Part1.\" (#23399)"},{"Id":"424425373","IsPullRequest":true,"CreatedAt":"2019-03-22T22:44:15","Actor":"tarekgh","Number":"23415","RawContent":null,"Title":"Re-enable Index/Range Jit test","State":"open","Body":"Fixes #22410","Url":"https://github.com/dotnet/coreclr/pull/23415","RelatedDescription":"Open PR \"Re-enable Index/Range Jit test\" (#23415)"},{"Id":"424412016","IsPullRequest":false,"CreatedAt":"2019-03-22T21:47:44","Actor":"sywhang","Number":"23414","RawContent":null,"Title":"EventPipe: Add telemetry for dropped events","State":"open","Body":"Ran into this issue while helping @andy-ms with some GC traces he was collecting on Linux. With ETW, we can diagnose whether events are dropped in a trace because it keeps track when events are dropped due to insufficient buffer size, etc. EventPipe doesn't keep track when events are dropped, so it's hard to see whether a trace has dropped events when it doesn't have events that we expect it to have. \r\n\r\nOne option to do this might be to add a field in the payload for the Rundown Event that reports how many events were dropped. Or it could be its own event that gets emitted at rundown.","Url":"https://github.com/dotnet/coreclr/issues/23414","RelatedDescription":"Open issue \"EventPipe: Add telemetry for dropped events\" (#23414)"},{"Id":"424381478","IsPullRequest":true,"CreatedAt":"2019-03-22T20:11:38","Actor":"luhenry","Number":"23413","RawContent":null,"Title":"Improve detection of CPU limits when running inside a Container","State":"open","Body":"This focuses on better supporting `--cpuset-cpus` which limits the number of processors we have access to on the CPU; it also specifies which specific processor we have access to, but that’s irrelevant here\r\n\r\nThe work has been done here for all runtime components except `Environment.ProcessorCount`. The work consist in fixing `PAL_GetLogicalCpuCountFromOS` to use `sched_getaffinity`.\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/22302","Url":"https://github.com/dotnet/coreclr/pull/23413","RelatedDescription":"Open PR \"Improve detection of CPU limits when running inside a Container\" (#23413)"},{"Id":"424370996","IsPullRequest":false,"CreatedAt":"2019-03-22T19:39:44","Actor":"AndyAyersMS","Number":"23412","RawContent":null,"Title":"CRST level violation using custom AssemblyLoadContext","State":"open","Body":"I was trying to extend [jitutils PMI](https://github.com/dotnet/jitutils) to use custom assembly load contexts and am hitting a CRST level lock violation.\r\n\r\nI can provide a repro if needed; it is a bit messy.\r\n\r\nAn assembly is loaded into a custom context and PMI is using reflection to enumerate its types. This causes further assembly loading and the custom loader reads an environment var to determine where to search. Reading this env var triggers an array pool rental, which loads up event source, which tries to take a lock, and hits the level violation:\r\n```\r\nAssert failure(PID 18376 [0x000047c8], Thread: 18868 [0x49b4]): Consistency check failed:\r\nCrst Level violation: Can't take level 18 lock CrstEventPipe because you already holding level 17 lock CrstPendingTypeLoadEntry\r\nFAILED: false\r\n```\r\nStack at this point is:\r\n```\r\n\r\n00 KERNELBASE!DebugBreak\r\n01 KERNELBASE!wil::details::DebugBreak\r\n02 CoreCLR!CHECK::Setup\r\n03 CoreCLR!CrstBase::IsSafeToTake\r\n04 CoreCLR!CrstBase::Enter\r\n05 CoreCLR!CrstBase::CrstHolder::{ctor}\r\n06 CoreCLR!EventPipeConfiguration::RegisterProvider\r\n07 CoreCLR!EventPipeConfiguration::CreateProvider\r\n08 CoreCLR!EventPipe::CreateProvider\r\n09 CoreCLR!EventPipeInternal::CreateProvider\r\n0a System_Private_CoreLib!ILStubClass.IL_STUB_PInvoke(System.String, EtwEnableCallback)\r\n0b System_Private_CoreLib!System.Diagnostics.Tracing.EventPipeEventProvider.System.Diagnostics.Tracing.IEventProvider.EventRegister(System.Diagnostics.Tracing.EventSource, EtwEnableCallback, Void*, Int64 ByRef)\r\n0c System_Private_CoreLib!System.Diagnostics.Tracing.EventProvider.EventRegister(System.Diagnostics.Tracing.EventSource, EtwEnableCallback)\r\n0d System_Private_CoreLib!System.Diagnostics.Tracing.EventProvider.Register(System.Diagnostics.Tracing.EventSource)\r\n0e System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.Initialize(System.Guid, System.String, System.String[])\r\n0f System_Private_CoreLib!System.Buffers.ArrayPoolEventSource..ctor()\r\n10 System_Private_CoreLib!System.Buffers.ArrayPoolEventSource..cctor()\r\n11 CoreCLR!CallDescrWorkerInternal\r\n12 CoreCLR!`DispatchCallDebuggerWrapper'::`6'::__Body::Run\r\n13 CoreCLR!DispatchCallDebuggerWrapper\r\n14 CoreCLR!DispatchCallSimple\r\n15 CoreCLR!MethodTable::RunClassInitEx\r\n16 CoreCLR!MethodTable::DoRunClassInitThrowing\r\n17 CoreCLR!MethodTable::CheckRunClassInitThrowing\r\n18 CoreCLR!DynamicHelperFixup\r\n19 CoreCLR!DynamicHelperWorker\r\n1a CoreCLR!DelayLoad_Helper\r\n1b System_Private_CoreLib!System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1[[System.Char, System.Private.CoreLib]].Rent(Int32)\r\n1c System_Private_CoreLib!System.Environment.GetEnvironmentVariableCore(System.String)\r\n1d System_Private_CoreLib!System.Environment.GetEnvironmentVariable(System.String)\r\n1e pmi!Resolver.Resolve(System.String, System.Runtime.Loader.AssemblyLoadContext)\r\n1f pmi!CustomLoadContext.Load(System.Reflection.AssemblyName)\r\n20 System_Private_CoreLib!System.Runtime.Loader.AssemblyLoadContext.ResolveUsingLoad(System.Reflection.AssemblyName)\r\n21 System_Private_CoreLib!System.Runtime.Loader.AssemblyLoadContext.Resolve(IntPtr, System.Reflection.AssemblyName)\r\n22 CoreCLR!CallDescrWorkerInternal\r\n23 CoreCLR!MethodDescCallSite::CallTargetWorker\r\n24 CoreCLR!MethodDescCallSite::Call_RetOBJECTREF\r\n25 CoreCLR!RuntimeInvokeHostAssemblyResolver\r\n26 CoreCLR!BINDER_SPACE::AssemblyBinder::BindUsingHostAssemblyResolver\r\n27 CoreCLR!CLRPrivBinderAssemblyLoadContext::BindAssemblyByName\r\n28 CoreCLR!AssemblySpec::Bind\r\n29 CoreCLR!AppDomain::BindAssemblySpec\r\n2a CoreCLR!PEFile::LoadAssembly\r\n2b CoreCLR!Module::LoadAssembly\r\n2c CoreCLR!Assembly::FindModuleByTypeRef\r\n2d CoreCLR!ClassLoader::LoadTypeDefOrRefThrowing\r\n2e CoreCLR!ClassLoader::LoadApproxTypeThrowing\r\n2f CoreCLR!ClassLoader::LoadApproxParentThrowing\r\n30 CoreCLR!ClassLoader::CreateTypeHandleForTypeDefThrowing\r\n31 CoreCLR!ClassLoader::CreateTypeHandleForTypeKey\r\n32 CoreCLR!ClassLoader::DoIncrementalLoad\r\n33 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body\r\n34 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey\r\n35 CoreCLR!ClassLoader::LoadTypeDefThrowing\r\n36 CoreCLR!ClassLoader::LoadTypeDefOrRefThrowing\r\n37 CoreCLR!GetTypesInner\r\n38 CoreCLR!COMModule::GetTypes\r\n39 System_Private_CoreLib!System.Reflection.RuntimeModule.GetTypes()\r\n3a System_Private_CoreLib!System.Reflection.Assembly.GetTypes()\r\n3b pmi!Worker.LoadTypes(System.Reflection.Assembly)\r\n3c pmi!Worker.Work(System.String)\r\n3d pmi!PrepareMethodinator.Main(System.String[])\r\n3e CoreCLR!CallDescrWorkerInternal\r\n3f CoreCLR!MethodDescCallSite::CallTargetWorker\r\n40 CoreCLR!MethodDescCallSite::Call_RetArgSlot\r\n41 CoreCLR!``RunMain'::`30'::__Body::Run'::`5'::__Body::Run\r\n42 CoreCLR!`RunMain'::`30'::__Body::Run\r\n43 CoreCLR!RunMain\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/23412","RelatedDescription":"Open issue \"CRST level violation using custom AssemblyLoadContext\" (#23412)"},{"Id":"424330660","IsPullRequest":false,"CreatedAt":"2019-03-22T17:52:25","Actor":"marklio","Number":"23411","RawContent":null,"Title":"Assertion failed 'kind == Overwrite'","State":"open","Body":"See IL repro at the bottom. Please let me know if you need more info, or a repro of a different form. This IL is wonky, but this assert is seen on 620 real assemblies from NuGet.org. Commonly, these have been obfuscated by dotfuscator.\r\n\r\nSave the IL below as test.il\r\nilasm test.il /dll\r\nrun amd64 CHK crossgen on the output:\r\n-- crossgen.exe /in test.dll /out test.dll.ni /nologo /verbose /platform_assemblies_paths \"paths_to_il\"\r\nExpected: successful compilation\r\nActual:\r\n```\r\nOpening input file\r\nPreloading input file D:\\scratch\\crossgenrepros\\kind == overwrite\\test.dll\r\nCompiling input file D:\\scratch\\crossgenrepros\\kind == overwrite\\test.dll\r\nCompiling method TestClass.IsValidName\r\n\r\nAssert failure(PID 36548 [0x00008ec4], Thread: 33756 [0x83dc]): Assertion failed 'kind == Overwrite' in 'TestClass:IsValidName(ref):bool:this' (IL size 431)\r\n\r\n    File: c:\\users\\markmil\\source\\repos\\coreclr\\src\\jit\\jithashtable.h Line: 270\r\n    Image: C:\\Users\\markmil\\Source\\Repos\\PMIExperiment\\CrossGenner\\bin\\Debug\\coreclr\\crossgen.exe\r\n```\r\n \r\nIL repro:\r\n```\r\n.assembly extern mscorlib\r\n{\r\n  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\\V.4..\r\n  .ver 4:0:0:0\r\n}\r\n.assembly extern System.Core\r\n{\r\n  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\\V.4..\r\n  .ver 4:0:0:0\r\n}\r\n.assembly Test\r\n{\r\n  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n  .hash algorithm 0x00008004\r\n  .ver 1:0:0:0\r\n}\r\n.module Test.dll\r\n.imagebase 0x00400000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00020003    //  ILONLY 32BITPREFERRED\r\n\r\n.class public auto ansi beforefieldinit TestClass\r\n\textends [mscorlib]System.Object\r\n{\r\n.method public final hidebysig newslot virtual \r\n\tinstance bool IsValidName (\r\n\t\tstring name\r\n\t) cil managed \r\n{\r\n\t// Method begins at RVA 0x35c8\r\n\t// Code size 431 (0x1af)\r\n\t.maxstack 2\r\n\t.locals init (\r\n\t\t[0] int32,\r\n\t\t[1] char,\r\n\t\t[2] valuetype [mscorlib]System.Globalization.UnicodeCategory,\r\n\t\t[3] valuetype [mscorlib]System.Globalization.UnicodeCategory,\r\n\t\t[4] int32,\r\n\t\t[5] int32\r\n\t)\r\n\r\n\tIL_0000: ldc.i4.0\r\n\tIL_0001: stloc 5\r\n\tIL_0005: ldloca 5\r\n\tIL_0009: ldind.i4\r\n\tIL_000a: stloc.s 4\r\n\tIL_000c: ldloc.s 4\r\n\tIL_000e: switch (IL_0017)\r\n\r\n\tIL_0017: ldc.i4.0\r\n\tIL_0018: switch (IL_0048)\r\n\r\n\tIL_0021: ldloc.s 4\r\n\tIL_0023: switch (IL_0170, IL_00a1, IL_005c, IL_013c, IL_0125, IL_01a8, IL_0077, IL_015d)\r\n\r\n\tIL_0048: ldc.i4.0\r\n\tIL_0049: stloc.0\r\n\tIL_004a: ldc.i4 2\r\n\tIL_004f: stloc 5\r\n\tIL_0053: ldloca 5\r\n\tIL_0057: ldind.i4\r\n\tIL_0058: stloc.s 4\r\n\tIL_005a: br.s IL_0021\r\n\r\n\tIL_005c: br IL_0127\r\n\r\n\tIL_0061: ldloc.0\r\n\tIL_0062: ldc.i4.1\r\n\tIL_0063: add\r\n\tIL_0064: stloc.0\r\n\tIL_0065: ldc.i4 6\r\n\tIL_006a: stloc 5\r\n\tIL_006e: ldloca 5\r\n\tIL_0072: ldind.i4\r\n\tIL_0073: stloc.s 4\r\n\tIL_0075: br.s IL_0021\r\n\r\n\tIL_0077: br IL_0127\r\n\r\n\tIL_007c: ldc.i4.0\r\n\tIL_007d: ret\r\n\r\n\tIL_007e: ldarg.1\r\n\tIL_007f: ldloc.0\r\n\tIL_0080: callvirt instance char [mscorlib]System.String::get_Chars(int32)\r\n\tIL_0085: stloc.1\r\n\tIL_0086: ldloc.1\r\n\tIL_0087: call valuetype [mscorlib]System.Globalization.UnicodeCategory [mscorlib]System.Char::GetUnicodeCategory(char)\r\n\tIL_008c: stloc.2\r\n\tIL_008d: ldloc.2\r\n\tIL_008e: stloc.3\r\n\tIL_008f: ldc.i4 1\r\n\tIL_0094: stloc 5\r\n\tIL_0098: ldloca 5\r\n\tIL_009c: ldind.i4\r\n\tIL_009d: stloc.s 4\r\n\tIL_009f: br.s IL_0021\r\n\r\n\tIL_00a1: ldc.i4 -2385\r\n\tIL_00a6: stloc 5\r\n\tIL_00aa: ldloca 5\r\n\tIL_00ae: ldind.i4\r\n\tIL_00af: ldc.i4 -2385\r\n\tIL_00b4: stloc 5\r\n\tIL_00b8: ldloca 5\r\n\tIL_00bc: ldind.i4\r\n\tIL_00bd: ceq\r\n\tIL_00bf: switch (IL_015d, IL_00d1, IL_015d)\r\n\r\n\tIL_00d0: nop\r\n\r\n\tIL_00d1: ldc.i4 1\r\n\tIL_00d6: stloc 5\r\n\tIL_00da: ldloca 5\r\n\tIL_00de: ldind.i4\r\n\tIL_00df: br.s IL_00ed\r\n\r\n\tIL_00e1: ldc.i4.0\r\n\tIL_00e2: stloc 5\r\n\tIL_00e6: ldloca 5\r\n\tIL_00ea: ldind.i4\r\n\tIL_00eb: br.s IL_00ed\r\n\r\n\tIL_00ed: brfalse.s IL_00ef\r\n\r\n\tIL_00ef: ldc.i4.0\r\n\tIL_00f0: stloc 5\r\n\tIL_00f4: ldloca 5\r\n\tIL_00f8: ldind.i4\r\n\tIL_00f9: brfalse IL_00fe\r\n\r\n\tIL_00fe: ldloc.3\r\n\tIL_00ff: switch (IL_0061, IL_0061, IL_0061)\r\n\r\n\tIL_0110: ldc.i4 4\r\n\tIL_0115: stloc 5\r\n\tIL_0119: ldloca 5\r\n\tIL_011d: ldind.i4\r\n\tIL_011e: stloc.s 4\r\n\tIL_0120: br IL_0021\r\n\r\n\tIL_0125: br.s IL_015f\r\n\r\n\tIL_0127: ldc.i4 3\r\n\tIL_012c: stloc 5\r\n\tIL_0130: ldloca 5\r\n\tIL_0134: ldind.i4\r\n\tIL_0135: stloc.s 4\r\n\tIL_0137: br IL_0021\r\n\r\n\tIL_013c: ldloc.0\r\n\tIL_013d: ldarg.1\r\n\tIL_013e: callvirt instance int32 [mscorlib]System.String::get_Length()\r\n\tIL_0143: blt IL_007e\r\n\r\n\tIL_0148: ldc.i4 7\r\n\tIL_014d: stloc 5\r\n\tIL_0151: ldloca 5\r\n\tIL_0155: ldind.i4\r\n\tIL_0156: stloc.s 4\r\n\tIL_0158: br IL_0021\r\n\r\n\tIL_015d: br.s IL_01ad\r\n\r\n\tIL_015f: ldc.i4.0\r\n\tIL_0160: stloc 5\r\n\tIL_0164: ldloca 5\r\n\tIL_0168: ldind.i4\r\n\tIL_0169: stloc.s 4\r\n\tIL_016b: br IL_0021\r\n\r\n\tIL_0170: ldloc.3\r\n\tIL_0171: ldc.i4.8\r\n\tIL_0172: beq IL_0061\r\n\r\n\tIL_0177: br.s IL_0186\r\n\r\n\tIL_0179: ldc.i4.0\r\n\tIL_017a: stloc 5\r\n\tIL_017e: ldloca 5\r\n\tIL_0182: ldind.i4\r\n\r\n\tIL_0183: pop\r\n\tIL_0184: br.s IL_0192\r\n\r\n\tIL_0186: ldc.i4.0\r\n\tIL_0187: stloc 5\r\n\tIL_018b: ldloca 5\r\n\tIL_018f: ldind.i4\r\n\tIL_0190: br.s IL_0183\r\n\r\n\tIL_0192: nop\r\n\tIL_0193: ldc.i4 5\r\n\tIL_0198: stloc 5\r\n\tIL_019c: ldloca 5\r\n\tIL_01a0: ldind.i4\r\n\tIL_01a1: stloc.s 4\r\n\tIL_01a3: br IL_0021\r\n\r\n\tIL_01a8: br IL_007c\r\n\r\n\tIL_01ad: ldc.i4.1\r\n\tIL_01ae: ret\r\n} \r\n} // end of class TestClass\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23411","RelatedDescription":"Open issue \"Assertion failed 'kind == Overwrite'\" (#23411)"},{"Id":"424326656","IsPullRequest":true,"CreatedAt":"2019-03-22T17:42:09","Actor":"AndyAyersMS","Number":"23410","RawContent":null,"Title":"JIT: don't treat whitespace as separator in assembly name lists","State":"open","Body":"Only recognize \";\" as a separator, so that we can support exclusions or inclusions\r\nof assemblies whose names include spaces.\r\n\r\nImpacts the altjit exclude list, and the disasm include list.\r\n\r\nAddresses dotnet/jitutils#200.","Url":"https://github.com/dotnet/coreclr/pull/23410","RelatedDescription":"Open PR \"JIT: don't treat whitespace as separator in assembly name lists\" (#23410)"},{"Id":"424324154","IsPullRequest":false,"CreatedAt":"2019-03-22T17:35:55","Actor":"jkoritzinsky","Number":"23409","RawContent":null,"Title":"Add testing for our WinRT-specific marshalers","State":"open","Body":"We currently don't have any automated tests for our WinRT marshalling. Using the `System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeImportAttribute` pseduo-attribute, we can mark specific types within an assembly as Windows-Runtime types and make them use WinRT marshalling semantics without needing reg-free WinRT support. This pseudo-attribute is used within `System.Runtime.WindowsRuntime` in CoreFX to implement WinRT marshalling helpers. \r\n\r\nWe should use this feature to add some automated testing for the WinRT marshalling within CoreCLR.\r\n\r\nMarshalers to test:\r\n\r\n- [ ] `System.Nullable<T>` -> `Windows.Foundation.IReference<T>`\r\n- [ ] `System.Type` -> `Windows.UI.DirectUI.Xaml.TypeNameNative`\r\n- [ ] `System.Exception` -> `HRESULT`\r\n- [ ] `System.Collections.Generic.KeyValuePair<K,V>` -> `Windows.Foundation.Collections.IKeyValuePair<K,V>`\r\n- [ ] `System.Uri` -> `Windows.Foundation.Uri`\r\n- [ ] `System.ComponentModel.INotifyPropertyChanged` and family\r\n- [ ] `System.Collections.Specialized.INotifyCollectionChanged` and family\r\n- [ ] Hidden-length arrays (implicit length parameter in signature after the array)\r\n","Url":"https://github.com/dotnet/coreclr/issues/23409","RelatedDescription":"Open issue \"Add testing for our WinRT-specific marshalers\" (#23409)"},{"Id":"424236440","IsPullRequest":false,"CreatedAt":"2019-03-22T14:28:02","Actor":"tannergooding","Number":"23408","RawContent":null,"Title":"Expose an attribute to allow sizing a fixed sized buffer based on type and element count.","State":"open","Body":"Today, C# emulates fixed-sized buffers by emitting an explicitly sized struct with a single-field. This works decently enough for primitive types which have a constant size across varying platforms, but it does not work well for user-defined structs which may have different packing or different sizes across varying platforms/architectures.\r\n\r\nThis can be worked around by explicitly declaring a struct that contains `x` elements of type `T`, but this can quickly become overly verbose for fixed-sized buffers that contain many elements (e.g. 128 or even 1025).\r\n\r\nI propose we expose an attribute that the VM will recognize and which it will use to dynamically size the type based on the information given.\r\n\r\nThis will allow a user to define something similar to:\r\n```csharp\r\npublic struct DXGI_RGB\r\n{\r\n    public float Red;\r\n    public float Green;\r\n    public float Blue;\r\n}\r\n\r\npublic struct DXGI_GAMMA_CONTROL\r\n{\r\n    public DXGI_RGB Scale;\r\n    public DXGI_RGB Offset;\r\n    public _GammaCurve_e__FixedBuffer GammaCurve;    // DXGI_RGB[1025]\r\n\r\n    [FixedSizedBuffer(typeof(DXGI_RGB), count: 1025)]\r\n    public struct _GammaCurve_e__FixedBuffer\r\n    {\r\n        private DXGI_RGB e0;\r\n\r\n        public ref DXGI_RGB this[int index] => ref AsSpan()[index];\r\n\r\n        public Span<DXGI_RGB> AsSpan() => MemoryMarshal.CreateSpan(ref e0, 1025);\r\n    }\r\n}\r\n```\r\n\r\nThis would also be beneficial for the `fixed-sized-buffers` proposal in C#, as it would avoid the metadata bloat problem that exists: https://github.com/dotnet/csharplang/blob/725763343ad44a9251b03814e6897d87fe553769/proposals/fixed-sized-buffers.md","Url":"https://github.com/dotnet/coreclr/issues/23408","RelatedDescription":"Open issue \"Expose an attribute to allow sizing a fixed sized buffer based on type and element count.\" (#23408)"},{"Id":"424192945","IsPullRequest":true,"CreatedAt":"2019-03-22T12:46:41","Actor":"dotnet-maestro[bot]","Number":"23407","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190322.01\r\n- **Date Produced**: 3/22/2019 10:33 AM\r\n- **Commit**: b58bfb6da1e5d538f8f2e8a80184943378a5dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27522-01\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23407","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#23407)"},{"Id":"424185400","IsPullRequest":true,"CreatedAt":"2019-03-22T12:26:52","Actor":"dotnet-maestro[bot]","Number":"23406","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23406","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#23406)"},{"Id":"424130648","IsPullRequest":true,"CreatedAt":"2019-03-22T10:04:05","Actor":"MichalStrehovsky","Number":"23405","RawContent":null,"Title":"Remove test exclusion for 23262","State":"open","Body":"The commit that added the test was rolled back.","Url":"https://github.com/dotnet/coreclr/pull/23405","RelatedDescription":"Open PR \"Remove test exclusion for 23262\" (#23405)"},{"Id":"423956953","IsPullRequest":true,"CreatedAt":"2019-03-22T03:34:27","Actor":"dotnet-maestro-bot","Number":"23396","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @adiaaida\n* @tarekgh\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/23396","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#23396)"},{"Id":"423991056","IsPullRequest":false,"CreatedAt":"2019-03-22T02:28:19","Actor":"livarcocc","Number":"23400","RawContent":null,"Title":"dotnet quits unexpectedly on mac os","State":"closed","Body":"@hayatusm commented on [Thu Mar 21 2019](https://github.com/dotnet/cli/issues/11009)\n\nProcess:               dotnet [10526]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        VisualStudio [9812]\r\nResponsible:           dotnet [10526]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-03-21 18:05:39.998 -0500\r\nOS Version:            Mac OS X 10.14.3 (18D109)\r\nReport Version:        12\r\nAnonymous UUID:        552DA19D-37CB-A00A-A2FC-360C4FE69F9E\r\n\r\nSleep/Wake UUID:       F3547967-C847-474B-B2CB-783BD4CCFCCF\r\n\r\nTime Awake Since Boot: 100000 seconds\r\nTime Since Wake:       580 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1c23e __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad2c1c pthread_kill + 285\r\n2   libsystem_c.dylib             \t0x00007fff5c9851c9 abort + 127\r\n3   libcoreclr.dylib              \t0x000000010abf984e PROCAbort + 14\r\n4   libcoreclr.dylib              \t0x000000010abf7cf2 PROCEndProcess(void*, unsigned int, int) + 226\r\n5   libcoreclr.dylib              \t0x000000010aed02c1 UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 737\r\n6   libcoreclr.dylib              \t0x000000010aed0460 DispatchManagedException(PAL_SEHException&, bool) + 304\r\n7   libcoreclr.dylib              \t0x000000010ae31339 IL_Throw(Object*) + 713\r\n8   ???                           \t0x000000011970577f 0 + 4721760127\r\n9   ???                           \t0x0000000119e35527 0 + 4729296167\r\n10  ???                           \t0x0000000119c81b93 0 + 4727511955\r\n11  libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n13  libcoreclr.dylib              \t0x000000010ac90106 RunMain(MethodDesc*, short, int*, PtrArray**) + 694\r\n14  libcoreclr.dylib              \t0x000000010ac90472 Assembly::ExecuteMainMethod(PtrArray**, int) + 402\r\n15  libcoreclr.dylib              \t0x000000010acd0ea4 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n16  libcoreclr.dylib              \t0x000000010ac02046 coreclr_execute_assembly + 230\r\n17  libhostpolicy.dylib           \t0x000000010ab4b388 0x10aac2000 + 562056\r\n18  libhostpolicy.dylib           \t0x000000010ab347df 0x10aac2000 + 468959\r\n19  libhostpolicy.dylib           \t0x000000010ab3b089 0x10aac2000 + 495753\r\n20  libhostfxr.dylib              \t0x000000010aa5d8a3 0x10a9d3000 + 567459\r\n21  libhostfxr.dylib              \t0x000000010aa7d5ee 0x10a9d3000 + 697838\r\n22  libhostfxr.dylib              \t0x000000010aa801c2 0x10a9d3000 + 709058\r\n23  libhostfxr.dylib              \t0x000000010aa7e678 0x10a9d3000 + 702072\r\n24  libhostfxr.dylib              \t0x000000010aa5e919 0x10a9d3000 + 571673\r\n25  dotnet                        \t0x000000010a9a7052 0x10a99a000 + 53330\r\n26  dotnet                        \t0x000000010a9a7645 0x10a99a000 + 54853\r\n27  libdyld.dylib                 \t0x00007fff5c8dced9 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010abfe8c8 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010abfd81e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1e2ee poll + 10\r\n1   libcoreclr.dylib              \t0x000000010abf0a1e CorUnix::CPalSynchronizationManager::ThreadPrepareForShutdown() + 30\r\n2   libcoreclr.dylib              \t0x000000010abf2550 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 944\r\n3   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca17152 __open + 10\r\n1   libcoreclr.dylib              \t0x000000010ac6e3ff TwoWayPipe::WaitForConnection() + 31\r\n2   libcoreclr.dylib              \t0x000000010ac65e11 DbgTransportSession::TransportWorker() + 177\r\n3   libcoreclr.dylib              \t0x000000010ac64759 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n7   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4f32 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010ac62b98 DebuggerRCThread::MainLoop() + 264\r\n7   libcoreclr.dylib              \t0x000000010ac62a2b DebuggerRCThread::ThreadProc() + 251\r\n8   libcoreclr.dylib              \t0x000000010ac62734 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea773 SVR::gc_heap::gc_thread_function() + 163\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4f32 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010ae0785e FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n7   libcoreclr.dylib              \t0x000000010ae07953 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n8   libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n9   libcoreclr.dylib              \t0x000000010ad815c9 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n10  libcoreclr.dylib              \t0x000000010ae07c6c FinalizerThread::FinalizerThreadStart(void*) + 204\r\n11  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n13  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n14  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   libclrjit.dylib               \t0x000000010c3eee68 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x000000010c3eddbe SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf532d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ada3d16 ThreadpoolMgr::TimerThreadFire() + 150\r\n6   libcoreclr.dylib              \t0x000000010ada3be5 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f68ffde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2f68f52d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2f68ec64 CFRunLoopRunSpecific + 463\r\n5   com.apple.CoreFoundation      \t0x00007fff2f68ea70 CFRunLoopRun + 40\r\n6   ???                           \t0x0000000119c901e3 0 + 4727570915\r\n7   ???                           \t0x000000011ad4c271 0 + 4745118321\r\n8   ???                           \t0x000000011af25126 0 + 4747055398\r\n9   libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n11  libcoreclr.dylib              \t0x000000010add168f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n13  libcoreclr.dylib              \t0x000000010ad81533 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010add18af ThreadNative::KickOffThread(void*) + 351\r\n15  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_pthread.dylib       \t0x00007fff5cacf3f8 start_wqthread + 0\r\n1   ???                           \t0x0000000054485244 0 + 1414025796\r\n\r\nThread 14:\r\n0   libsystem_pthread.dylib       \t0x00007fff5cacf3f8 start_wqthread + 0\r\n1   ???                           \t0x0000000000001403 0 + 5123\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf532d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ae1080f __SwitchToThread(unsigned int, unsigned int) + 15\r\n6   libcoreclr.dylib              \t0x000000010ada328c ThreadpoolMgr::GateThreadStart(void*) + 444\r\n7   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 17:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 18:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca17e5e read + 10\r\n1   System.Native.dylib           \t0x000000010df9c79f SignalHandlerLoop + 79\r\n2   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n3   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n4   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 19:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 21:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f68ffde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2f68f52d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2f68ec64 CFRunLoopRunSpecific + 463\r\n5   com.apple.CoreFoundation      \t0x00007fff2f68ea70 CFRunLoopRun + 40\r\n6   ???                           \t0x0000000119c901e3 0 + 4727570915\r\n7   ???                           \t0x000000011ad4c271 0 + 4745118321\r\n8   ???                           \t0x000000011af25126 0 + 4747055398\r\n9   libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n11  libcoreclr.dylib              \t0x000000010add168f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n13  libcoreclr.dylib              \t0x000000010ad81533 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010add18af ThreadNative::KickOffThread(void*) + 351\r\n15  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 22:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9ec0d CLRLifoSemaphore::WaitForSignal(unsigned int) + 269\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 23:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9ec0d CLRLifoSemaphore::WaitForSignal(unsigned int) + 269\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x00000001134845c0  rcx: 0x00007ffee525bf88  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffee525bfc0  rsp: 0x00007ffee525bf88\r\n   r8: 0x000000000009efff   r9: 0xffffffff00000000  r10: 0x0000000000000000  r11: 0x0000000000000206\r\n  r12: 0x0000000000000307  r13: 0x0000000000000000  r14: 0x0000000000000006  r15: 0x000000000000002d\r\n  rip: 0x00007fff5ca1c23e  rfl: 0x0000000000000206  cr2: 0x000070000341eff8\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000005\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x10a99a000 -        0x10a9bcff7 +dotnet (0) <EC08A28E-D343-361D-BA43-97C8616BBE3B> /usr/local/share/dotnet/dotnet\r\n       0x10a9d3000 -        0x10aab9fff +libhostfxr.dylib (0) <9421119C-940C-3E46-B924-583295CD62B9> /usr/local/share/dotnet/host/fxr/2.2.3/libhostfxr.dylib\r\n       0x10aac2000 -        0x10ababfff +libhostpolicy.dylib (0) <63A45EA9-CA14-3C7B-BF29-4A41C1A8BCF3> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libhostpolicy.dylib\r\n       0x10abb5000 -        0x10b107fff +libcoreclr.dylib (0) <69A2907A-6CAB-39EE-9700-D7749FE0B8CC> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libcoreclr.dylib\r\n       0x10c226000 -        0x10c436ff7 +libclrjit.dylib (0) <C5987D3A-F658-3D22-B71F-FD26316E843C> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libclrjit.dylib\r\n       0x10c4da000 -        0x10c4e5fff +System.Globalization.Native.dylib (0) <4CBB0592-3C9A-3E59-BAB3-950323C204FE> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Globalization.Native.dylib\r\n       0x10df95000 -        0x10df9dfff +System.Native.dylib (0) <CE333C0B-EE55-33C2-ACD8-6502D8E762D7> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Native.dylib\r\n       0x10dfbe000 -        0x10dfc4ff7 +System.Security.Cryptography.Native.Apple.dylib (0) <91B1BDF7-6E80-3FAE-ACF6-CA70331B8754> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Security.Cryptography.Native.Apple.dylib\r\n       0x1133ce000 -        0x11344ca87  dyld (655.1) <3EBA447F-A546-366B-B302-8DC3B21A3E30> /usr/lib/dyld\r\n    0x7fff2b980000 -     0x7fff2b980fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <A09CB6D5-3F8A-3E05-B0EB-63878296A059> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff2b998000 -     0x7fff2c038fe3  com.apple.vImage (8.1 - ???) <BDA40EB0-9B20-3ACF-BE37-199578FA84F4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff2c039000 -     0x7fff2c2b0fd7  libBLAS.dylib (1243.200.4) <0ADBEAE3-6636-33E5-AC9F-11C2249E19D3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff2c2b1000 -     0x7fff2c323fe7  libBNNS.dylib (38.200.5) <CC93B9B5-2A8C-3D42-9234-75DD41EC8C0D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff2c324000 -     0x7fff2c6cafff  libLAPACK.dylib (1243.200.4) <45722A8A-5788-3C4C-ADD9-1812763FA635> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff2c6cb000 -     0x7fff2c6e0ffb  libLinearAlgebra.dylib (1243.200.4) <3923AB79-213E-32FD-AC87-8B1A1A832336> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff2c6e1000 -     0x7fff2c6e6ff3  libQuadrature.dylib (3.200.2) <4FBCAC0A-81A4-3C53-8458-27F3569C809D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff2c6e7000 -     0x7fff2c764ffb  libSparse.dylib (79.200.5) <2D650C50-E87E-3F24-9BFA-C8EB6DE1A6E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff2c765000 -     0x7fff2c778ffb  libSparseBLAS.dylib (1243.200.4) <6F8C78BE-A0FD-3507-8A95-541AFC57F1EE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff2c779000 -     0x7fff2c95dff3  libvDSP.dylib (671.220.1) <2F576522-08B1-3C65-8F00-3427E938ADDA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff2c95e000 -     0x7fff2ca13ff3  libvMisc.dylib (671.220.1) <D7B5F89D-3310-31F4-B8BF-42DA300ABE64> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff2ca14000 -     0x7fff2ca14fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <221E4FEF-0431-3316-8281-22B6F8315A09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff2da38000 -     0x7fff2da38fff  com.apple.ApplicationServices (50.1 - 50.1) <86D6F10E-21F8-3CDC-9838-EB07A1C54BA9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff2da39000 -     0x7fff2daa4ff7  com.apple.ApplicationServices.ATS (377 - 453.11) <4080F8BE-F2A2-3707-8754-436FBDB1DAF1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff2db3d000 -     0x7fff2dc5cfff  libFontParser.dylib (228.6) <BBCBEE2C-5B55-3278-B81D-22D72466753E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff2dc5d000 -     0x7fff2dca8ff7  libFontRegistry.dylib (228.12.1.1) <B515718C-81BC-3705-A207-7215486C6D28> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff2dda4000 -     0x7fff2dda8ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <4B1238CC-9B77-3AA5-8329-EE3C736F07EA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2de45000 -     0x7fff2de97ff3  com.apple.HIServices (1.22 - 627.14.2) <1F851BF9-AD29-3558-9EA5-AAD9BAAAC823> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff2de98000 -     0x7fff2dea6ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <5654723A-7B3B-391F-B9F7-0DE4D5940185> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2dea7000 -     0x7fff2def3fff  com.apple.print.framework.PrintCore (14.2 - 503.8) <F1246C9A-2216-3390-8DF1-89304F47CE5D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2def4000 -     0x7fff2df2fff7  com.apple.QD (3.12 - 407.2) <F6B648DA-DA39-3EB4-B593-1B7E316661CD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2df30000 -     0x7fff2df3cff7  com.apple.speech.synthesis.framework (8.1.0 - 8.1.0) <CF19C8B6-AAD5-3DCF-ABD0-3BABB44D119C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2df3d000 -     0x7fff2e1dafff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <5D484151-F269-3D98-B507-0544A6B950AC> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2e540000 -     0x7fff2e901fff  com.apple.CFNetwork (976 - 976) <A434842F-305B-301D-8F88-373CA7BF7196> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff2ee3f000 -     0x7fff2ef0bfff  com.apple.ColorSync (4.13.0 - 3340) <2F45EB01-0C51-3D25-9836-18F99222E1C7> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff2f0a6000 -     0x7fff2f136fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E7EF105-B843-370D-884E-0A43E1A5800B> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff2f1c8000 -     0x7fff2f569fef  com.apple.CoreData (120 - 866.1) <18CD58FD-513E-385B-B43C-08EEB909709C> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff2f56a000 -     0x7fff2f653ff7  com.apple.CoreDisplay (101.3 - 106.2) <EE0D334B-8B71-3A70-9F90-677171D6762F> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff2f654000 -     0x7fff2faa1fef  com.apple.CoreFoundation (6.9 - 1562) <02A2C178-9FF6-385C-A9C5-7F4FC9D66311> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff2faa3000 -     0x7fff30130ff7  com.apple.CoreGraphics (2.0 - 1249.2) <78B75F62-4B60-3FF4-9259-8981E755F6CD> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff30132000 -     0x7fff3045bfff  com.apple.CoreImage (14.2.0 - 720.0.130) <B356BA95-EDD3-35D8-9E4B-250AF6C6DDF9> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff30911000 -     0x7fff30911fff  com.apple.CoreServices (941 - 941) <6DBA4791-26DB-39FB-A6A3-5910A0F2EDD2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff30912000 -     0x7fff30990ffb  com.apple.AE (771 - 771) <4B009524-699E-3891-98DD-E3B6BB433C8F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff30991000 -     0x7fff30c69ff7  com.apple.CoreServices.CarbonCore (1178.16 - 1178.16) <17FC2B9E-EB6C-3768-A2D0-6E086F2563D9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff30c6a000 -     0x7fff30cb4ff7  com.apple.DictionaryServices (1.2 - 284.16.3) <1DAC9153-FB5A-3798-8797-CBFEFF227F71> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff30cb5000 -     0x7fff30cbdffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <8E1507EA-F0A8-3845-B32D-4FBC1381E89C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff30cbe000 -     0x7fff30e89fff  com.apple.LaunchServices (941 - 941) <A8E42760-995C-35E2-BF4A-C96FD0633B29> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff30e8a000 -     0x7fff30f2cfff  com.apple.Metadata (10.7.0 - 1191.53) <48609998-8A34-3CAF-8A42-52C180809656> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff30f2d000 -     0x7fff30f78ff7  com.apple.CoreServices.OSServices (941 - 941) <1B9EA259-09DF-332B-807A-BD50F3184CAC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff30f79000 -     0x7fff30fe7ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <CEC29BB5-D28E-3424-84FE-70756E521F3B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff30fe8000 -     0x7fff3100cffb  com.apple.coreservices.SharedFileList (71.27 - 71.27) <6389B59D-DDAC-3C97-A982-137B9B1FB734> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff31354000 -     0x7fff314b9ffb  com.apple.CoreText (352.0 - 584.26) <5F61037C-825D-37A4-9091-0047413CC213> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff314ba000 -     0x7fff314f7fff  com.apple.CoreVideo (1.8 - 0.0) <34EC73F1-F0ED-32F5-B96E-7683B1F9A7A2> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff3180b000 -     0x7fff31810fff  com.apple.DiskArbitration (2.7 - 2.7) <97707A79-30E7-3D99-AA20-B992B0900BC4> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff319d9000 -     0x7fff31da7fff  com.apple.Foundation (6.9 - 1562) <83D4A12B-EA5A-3C62-8D93-95E64F0A256B> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff31e18000 -     0x7fff31e48ff3  com.apple.GSS (4.0 - 2.0) <86D07291-5DFC-30C2-9A18-5FCEDB0BE621> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff320ce000 -     0x7fff32161fff  com.apple.framework.IOKit (2.0.2 - 1483.240.1) <241690BB-8AFA-3B6A-A210-67874197CB59> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff32163000 -     0x7fff3216dff7  com.apple.IOSurface (255.1 - 255.1) <58826B1A-38E8-3C76-8FFC-76C9282DA893> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff321c4000 -     0x7fff32362fff  com.apple.ImageIO.framework (3.3.0 - 1822.1) <908907D5-5C29-32F7-ACD9-C6A6D51C4D15> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff32363000 -     0x7fff32367ffb  libGIF.dylib (1822.1) <35E37B95-1962-3A25-9C9E-CADD161152B3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff32368000 -     0x7fff3244dfe7  libJP2.dylib (1822.1) <BDBCBF28-12DB-3D63-B6F0-A559D1839F81> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff3244e000 -     0x7fff32473ff7  libJPEG.dylib (1822.1) <D443C754-4AFC-38E1-9E45-D309ACBCE17B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff32746000 -     0x7fff3276cfe7  libPng.dylib (1822.1) <28FE6E2C-1A17-3A84-AAF3-76014DEADDD4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff3276d000 -     0x7fff3276fff7  libRadiance.dylib (1822.1) <687906E3-4EC2-3CE9-B7EA-34418239EE1B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff32770000 -     0x7fff327beffb  libTIFF.dylib (1822.1) <0A1C083B-CE2F-3A00-8E45-EB58DCA2FF34> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff33868000 -     0x7fff33881fff  com.apple.Kerberos (3.0 - 1) <5D1B0593-3C0E-32D5-AAE5-ABC22A98B639> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff342a3000 -     0x7fff34336fff  com.apple.Metal (158.5 - 158.5) <72BF7187-81FE-389B-882F-7B2587FEB455> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff34353000 -     0x7fff34373ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <18281B14-0C6A-38F8-AB80-2D4BB0743C88> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff34374000 -     0x7fff343f2ff7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <BEAF764B-362B-3C45-86F5-2AFBA5FA0F47> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff343f3000 -     0x7fff3441bfff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <116D6C1A-2FD7-3743-95A0-CDDA3D459529> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff3441c000 -     0x7fff3454eff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <88E80BEE-3D2B-328B-80D4-F4717BDB2E9F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff3454f000 -     0x7fff3456aff7  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <E0E652B0-1624-3435-AD60-83A9C4B59852> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff3456b000 -     0x7fff3456bff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <1BBA8BC8-49C6-3C9B-B985-7CE4373E3553> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff35769000 -     0x7fff35775ffb  com.apple.NetFS (6.0 - 4.0) <918DF6CD-2DB0-36A8-B869-5EF637A06C0D> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff38235000 -     0x7fff3828dfff  com.apple.opencl (2.15.1 - 2.15.1) <CC9439C3-FF30-38D2-BF2F-EA0EF1B5775E> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff3828e000 -     0x7fff382aaff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <2CB1F122-2FA0-347C-8454-9CE0FA150832> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff382ab000 -     0x7fff382b7ffb  com.apple.OpenDirectory (10.14 - 207.200.4) <A3FB0F0C-57F4-3F89-A4B1-63DA1F7C9E8E> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff38c1a000 -     0x7fff38c1cfff  libCVMSPluginSupport.dylib (17.3.1) <B2310175-04D6-378B-A220-A8AD7F0DA68E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff38c1d000 -     0x7fff38c22ff3  libCoreFSCache.dylib (163.20) <566DB80E-F1D6-3AEC-AF06-08955507AFEE> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff38c23000 -     0x7fff38c27fff  libCoreVMClient.dylib (163.20) <B9A89373-BDCD-3003-9A82-6D73B930A122> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff38c28000 -     0x7fff38c30ffb  libGFXShared.dylib (17.3.1) <9FFA679A-8CC9-3932-8A41-AA80C386AD3A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff38c31000 -     0x7fff38c3cfff  libGL.dylib (17.3.1) <CFAB6AE4-E646-3E8A-B872-EF091CAF949E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff38c3d000 -     0x7fff38c77fef  libGLImage.dylib (17.3.1) <1AEC8E56-D851-3516-96FE-2829883A8302> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff38deb000 -     0x7fff38e28fff  libGLU.dylib (17.3.1) <90279918-D4B2-31E0-9709-8E06628D9486> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff397d8000 -     0x7fff397e7ff3  com.apple.opengl (17.3.1 - 17.3.1) <2F59064F-D6EF-35CD-9747-20A91DB3D5DF> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff3a643000 -     0x7fff3a89cfff  com.apple.QuartzCore (1.11 - 696.3) <01A2F065-8759-311D-AC2E-FD49F52A87FA> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff3b0f0000 -     0x7fff3b418ff7  com.apple.security (7.0 - 58286.240.4) <91A03FF2-2EE9-36A7-AC4F-169E11FE7846> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff3b419000 -     0x7fff3b4a8fff  com.apple.securityfoundation (6.0 - 55185.200.14) <F6A0EC77-51DB-3312-991C-3E1F920DE8F1> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff3b4da000 -     0x7fff3b4deff3  com.apple.xpc.ServiceManagement (1.0 - 1) <26BA237C-DBA0-3322-B9BF-8B8E739E3A20> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff3b89b000 -     0x7fff3b90bff3  com.apple.SystemConfiguration (1.17 - 1.17) <A8FD596E-C858-397F-836C-978038B97AC0> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff3eb79000 -     0x7fff3ec1efe7  com.apple.APFS (1.0 - 1) <BCB42C90-DEE0-3CD2-9B28-55CD8EFD9487> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff3f66a000 -     0x7fff3f66bff3  com.apple.AggregateDictionary (1.0 - 1) <EBA6443E-6CF0-34F6-B77A-3FCEC57F8F80> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff3ff70000 -     0x7fff3ff7ffcf  com.apple.AppleFSCompression (96.200.3 - 1.0) <78D538DD-1D24-34FC-AFB3-10411494870D> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff400c9000 -     0x7fff40112ff3  com.apple.AppleJPEG (1.0 - 1) <EC4C49F1-C060-3C0F-910F-3620985D4F12> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff40365000 -     0x7fff4038dff7  com.apple.applesauce (1.0 - ???) <58654BC0-9243-39D1-BC43-B7F2E37A3A44> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff404f3000 -     0x7fff40509ffb  com.apple.AssertionServices (1.0 - 1) <3F767D20-FE14-35CF-A089-E0445375ECFB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff40cb9000 -     0x7fff40cc2ff3  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <05CF66F0-9650-3F75-9857-F8D186043866> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff40d66000 -     0x7fff40dd7ffb  com.apple.BaseBoard (360.24 - 360.24) <04AF4372-C5D3-3F0A-A688-68D888D6D138> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff4298c000 -     0x7fff42995fff  com.apple.CommonAuth (4.0 - 2.0) <090893E5-BB65-39DA-A174-EAB2C7191EFE> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff436a6000 -     0x7fff436bafff  com.apple.CoreEmoji (1.0 - 69.19.8) <26BC0F82-08C1-3EBD-9299-D3CC5091C467> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff43c90000 -     0x7fff43d02ff7  com.apple.CoreNLP (1.0 - 130.15.22) <D0A3E880-CDEA-360A-9838-220D76BAECC6> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff44a99000 -     0x7fff44a9dff7  com.apple.DSExternalDisplay (3.1 - 380) <76449D22-BA27-3FB1-AD25-A290936E6DEA> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff45dc2000 -     0x7fff461eafff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <41218EB7-19C9-3813-A793-B0623387CADF> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff4b1b7000 -     0x7fff4b1bcff7  com.apple.GPUWrangler (3.28.4 - 3.28.4) <7E06C75D-5502-3F1D-987C-4F103917CD85> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff4c027000 -     0x7fff4c036fff  com.apple.GraphVisualizer (1.0 - 5) <CAFE626E-9738-3C14-88AA-B6A9182F2C39> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff4c187000 -     0x7fff4c1fcfff  com.apple.Heimdal (4.0 - 2.0) <D99FF31F-6310-3D80-8AE3-64934385AC11> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff4d5ec000 -     0x7fff4d5f3ffb  com.apple.IOAccelerator (404.2.2 - 404.2.2) <2F099589-DBE9-3442-AC93-F4AB363482A0> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff4d5f7000 -     0x7fff4d610fff  com.apple.IOPresentment (1.0 - 42.6) <F7E91CC9-E4BB-3904-8647-0473E3BCAF70> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff4dd23000 -     0x7fff4de1afff  com.apple.LanguageModeling (1.0 - 159.15.15) <34609F31-4DA1-3881-8947-85BEA7AFC938> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff4de1b000 -     0x7fff4de5cff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <07E008F3-E823-333B-8B41-A46024AB0561> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff4de63000 -     0x7fff4de69ff7  com.apple.LinguisticData (1.0 - 238.23.4) <F6AA7095-3975-3C76-9833-BBE955EFEBD7> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff4ebc6000 -     0x7fff4ebeeffb  com.apple.spotlight.metadata.utilities (1.0 - 1191.53) <2CFFD786-87A5-3629-B5E1-8E4DEF51ADA8> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff4ebef000 -     0x7fff4ec81fff  com.apple.gpusw.MetalTools (1.0 - 1) <C0489BBD-C25C-33E5-84CD-8A50205080A0> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff4eed5000 -     0x7fff4eeffff7  com.apple.MultitouchSupport.framework (2410.5 - 2410.5) <3A712911-F672-3BB3-B62B-A2A7BADF3578> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff4f172000 -     0x7fff4f17dfff  com.apple.NetAuth (6.2 - 6.2) <A6474ABC-FD4B-3A8F-AB33-7AACEEED7F0E> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff4fa4a000 -     0x7fff4faa0fff  com.apple.OTSVG (1.0 - ???) <F020144A-D840-390D-A87F-29E8095C78AF> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff5578f000 -     0x7fff55a41ff3  com.apple.SkyLight (1.600.0 - 337.5) <B18B2F6F-F44B-3B5B-8DA1-3B8977E59240> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff57616000 -     0x7fff57623ffb  com.apple.TCC (1.0 - 1) <81F88B91-49C1-36E7-8A39-C4BD654EE942> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff5960a000 -     0x7fff5960cff3  com.apple.loginsupport (1.0 - 1) <67BC49D6-320F-33ED-912E-16E5A342F385> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff598c7000 -     0x7fff598fffff  libCRFSuite.dylib (41.15.4) <92752A96-D1CF-3CA1-837A-1E075AE4C642> /usr/lib/libCRFSuite.dylib\r\n    0x7fff59902000 -     0x7fff5990dff7  libChineseTokenizer.dylib (28.15.3) <55572692-4918-3C54-AD35-726E03EC47D5> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff5999e000 -     0x7fff5999fff7  libDiagnosticMessagesClient.dylib (107) <15210AC0-61F9-3F9D-A159-A009F62EB537> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff599d6000 -     0x7fff59b99ff7  libFosl_dynamic.dylib (18.3.2) <D67B74E9-EB95-38BC-995C-5F4CC044C3F7> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff59bef000 -     0x7fff59c0eff7  libMobileGestalt.dylib (645.220.9) <C2C55511-993B-34D2-9040-902BFDA38141> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff59c0f000 -     0x7fff59c0ffff  libOpenScriptingUtil.dylib (179) <441A2E60-5D5C-3567-9B00-AA22E6EE5358> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff59d50000 -     0x7fff59d51ffb  libSystem.B.dylib (1252.200.5) <C6201660-5E17-397D-BA21-C503420CD706> /usr/lib/libSystem.B.dylib\r\n    0x7fff59ddb000 -     0x7fff59ddcfff  libThaiTokenizer.dylib (2.15.1) <F09EB0BB-1E8A-3391-BEF5-7D91F0715A62> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff59def000 -     0x7fff59e05ffb  libapple_nghttp2.dylib (1.24.1) <71C126C5-D869-3E67-9778-058FA7F3CA74> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff59e06000 -     0x7fff59e2fffb  libarchive.2.dylib (54.200.3) <32B8634D-E465-3F6D-B254-A20D44504508> /usr/lib/libarchive.2.dylib\r\n    0x7fff59eb3000 -     0x7fff59eb3ff3  libauto.dylib (187) <003DEF68-0C59-3AFB-A7B7-A1B5ED301AF2> /usr/lib/libauto.dylib\r\n    0x7fff59f8a000 -     0x7fff59f9aff3  libbsm.0.dylib (39.200.18) <58A9ACEC-BF46-3A4E-86F5-3DD9AD7095B4> /usr/lib/libbsm.0.dylib\r\n    0x7fff59f9b000 -     0x7fff59fa9fff  libbz2.1.0.dylib (38.200.3) <4DEC3797-087F-3C8D-815B-48E895813251> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff59faa000 -     0x7fff5a001ff7  libc++.1.dylib (400.9.4) <B260AC33-EB9A-30C6-8746-D011B3B02B08> /usr/lib/libc++.1.dylib\r\n    0x7fff5a002000 -     0x7fff5a017fff  libc++abi.dylib (400.17) <446F4748-8A89-3D2E-AE1C-27EEBE93A8AB> /usr/lib/libc++abi.dylib\r\n    0x7fff5a018000 -     0x7fff5a018ff3  libcharset.1.dylib (51.200.6) <43F7E100-F5D1-36AB-A26E-CF94196A19C0> /usr/lib/libcharset.1.dylib\r\n    0x7fff5a019000 -     0x7fff5a029ffb  libcmph.dylib (6.15.1) <CEDA6538-C071-3B5A-948E-DF61E2878983> /usr/lib/libcmph.dylib\r\n    0x7fff5a02a000 -     0x7fff5a042ffb  libcompression.dylib (52.200.13) <05A2A91B-D24D-39E8-A071-261CBC5BB158> /usr/lib/libcompression.dylib\r\n    0x7fff5a2ed000 -     0x7fff5a303fff  libcoretls.dylib (155.220.1) <1229F9EA-C070-3D03-9DC6-F548C59F9FD5> /usr/lib/libcoretls.dylib\r\n    0x7fff5a304000 -     0x7fff5a305ff3  libcoretls_cfhelpers.dylib (155.220.1) <33661841-3C3B-3608-86AC-C88D1CD6FE98> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff5a97c000 -     0x7fff5a9d3ffb  libcups.2.dylib (462.10) <29B6D106-A5F2-321D-8916-90F595545D88> /usr/lib/libcups.2.dylib\r\n    0x7fff5ab0b000 -     0x7fff5ab0bfff  libenergytrace.dylib (17.200.1) <F5BA8134-16F9-31CD-90E1-D1EBEBADA4AE> /usr/lib/libenergytrace.dylib\r\n    0x7fff5ab3d000 -     0x7fff5ab42ff7  libgermantok.dylib (17.15.2) <9381B152-5CFD-3D23-A5A7-4D64EE55B85E> /usr/lib/libgermantok.dylib\r\n    0x7fff5ab43000 -     0x7fff5ab48ff7  libheimdal-asn1.dylib (520.220.2) <D851A47D-E162-35F8-B8D4-6ABEA7FFDAD7> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff5ab74000 -     0x7fff5ac65ff7  libiconv.2.dylib (51.200.6) <9FB95807-7C62-32B7-A19F-946D7FB7CCA6> /usr/lib/libiconv.2.dylib\r\n    0x7fff5ac66000 -     0x7fff5aec9ffb  libicucore.A.dylib (62109.0.1) <FEB89BD3-79C4-3208-A754-7E6BC4D38548> /usr/lib/libicucore.A.dylib\r\n    0x7fff5af16000 -     0x7fff5af17fff  liblangid.dylib (128.15.1) <663D0A24-7260-31D1-9BFE-74D67B6F72F6> /usr/lib/liblangid.dylib\r\n    0x7fff5af18000 -     0x7fff5af30fff  liblzma.5.dylib (10.200.3) <9A52A949-0CB1-39B6-9244-D079FB609559> /usr/lib/liblzma.5.dylib\r\n    0x7fff5af48000 -     0x7fff5aff8fff  libmecab.1.0.0.dylib (779.24.1) <590BC39C-2A3E-368B-9499-C808B84C4955> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff5aff9000 -     0x7fff5b236ff7  libmecabra.dylib (779.24.1) <22BFD5A8-EA42-3DC3-8910-F27DCFB1B631> /usr/lib/libmecabra.dylib\r\n    0x7fff5b40e000 -     0x7fff5b766ffb  libnetwork.dylib (1229.240.1) <F99593DA-3089-3008-BE5B-5AC096EBF3A3> /usr/lib/libnetwork.dylib\r\n    0x7fff5b7f8000 -     0x7fff5bf7efe7  libobjc.A.dylib (750.1) <804715F4-F52D-34D0-8FEC-A25DC08513C3> /usr/lib/libobjc.A.dylib\r\n    0x7fff5bf91000 -     0x7fff5bf95ffb  libpam.2.dylib (22.200.1) <85253002-89F2-3872-9C8A-1801303A2EBB> /usr/lib/libpam.2.dylib\r\n    0x7fff5bf98000 -     0x7fff5bfceff7  libpcap.A.dylib (79.200.4) <6D25197A-2F7C-3147-A45A-F6F13E55909F> /usr/lib/libpcap.A.dylib\r\n    0x7fff5c0e8000 -     0x7fff5c100ffb  libresolv.9.dylib (65.200.2) <A1A77B4E-1AF0-3039-9945-D05440494E00> /usr/lib/libresolv.9.dylib\r\n    0x7fff5c154000 -     0x7fff5c32bfe7  libsqlite3.dylib (274.22) <B30E3B7E-E22E-37A0-A3EB-EA333ADEE13E> /usr/lib/libsqlite3.dylib\r\n    0x7fff5c5b8000 -     0x7fff5c5bbffb  libutil.dylib (51.200.4) <10C5E165-0939-363A-9D13-7076F3B513EC> /usr/lib/libutil.dylib\r\n    0x7fff5c5bc000 -     0x7fff5c5c9fff  libxar.1.dylib (404) <16E875B3-CF89-3059-87BB-36D301B32E7B> /usr/lib/libxar.1.dylib\r\n    0x7fff5c5ce000 -     0x7fff5c6b1fff  libxml2.2.dylib (32.8) <3E7875AC-3195-3800-AC48-8AA3B7BE51E4> /usr/lib/libxml2.2.dylib\r\n    0x7fff5c6b2000 -     0x7fff5c6daff3  libxslt.1.dylib (16.1) <D6EBFEBB-F88E-398F-B1B5-66F413C2CD32> /usr/lib/libxslt.1.dylib\r\n    0x7fff5c6db000 -     0x7fff5c6edffb  libz.1.dylib (70.200.4) <15F7B40A-424C-33BB-BF2C-7E8195128B78> /usr/lib/libz.1.dylib\r\n    0x7fff5c75e000 -     0x7fff5c762ff3  libcache.dylib (81) <704331AC-E43D-343A-8C24-39201142AF27> /usr/lib/system/libcache.dylib\r\n    0x7fff5c763000 -     0x7fff5c76dff3  libcommonCrypto.dylib (60118.220.1) <9C865644-EE9A-3662-AB77-7C8A5E561784> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff5c76e000 -     0x7fff5c775fff  libcompiler_rt.dylib (63.4) <817772E3-E836-3FFD-A39B-BDCD1C357221> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff5c776000 -     0x7fff5c77fff3  libcopyfile.dylib (146.200.3) <5C5C4F35-DAB7-3CF1-940F-F47192AB8289> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff5c780000 -     0x7fff5c804fdf  libcorecrypto.dylib (602.230.1) <C78D1A87-5543-3561-BEB4-3B480BA94ECB> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff5c88b000 -     0x7fff5c8c5ff7  libdispatch.dylib (1008.220.2) <2FDB1401-5119-3DF0-91F5-F4E105F00CD7> /usr/lib/system/libdispatch.dylib\r\n    0x7fff5c8c6000 -     0x7fff5c8f5ff3  libdyld.dylib (655.1) <90C801E7-5D05-37A8-810C-B58E8C53953A> /usr/lib/system/libdyld.dylib\r\n    0x7fff5c8f6000 -     0x7fff5c8f6ffb  libkeymgr.dylib (30) <A4EFD9A4-2EF3-3E18-B325-F527E3821939> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff5c8f7000 -     0x7fff5c903ff7  libkxld.dylib (4903.241.1) <D039B38D-E8E6-3011-94F5-A21CD3D59526> /usr/lib/system/libkxld.dylib\r\n    0x7fff5c904000 -     0x7fff5c904ff7  liblaunch.dylib (1336.240.2) <D5F0014D-CF46-3B04-9DE0-A1466DA14A2C> /usr/lib/system/liblaunch.dylib\r\n    0x7fff5c905000 -     0x7fff5c90afff  libmacho.dylib (921) <6ADB99F3-D142-3A0A-B3CE-031354766ACC> /usr/lib/system/libmacho.dylib\r\n    0x7fff5c90b000 -     0x7fff5c90dffb  libquarantine.dylib (86.220.1) <58524FD7-63C5-38E0-9D90-845A79551C14> /usr/lib/system/libquarantine.dylib\r\n    0x7fff5c90e000 -     0x7fff5c90fff3  libremovefile.dylib (45.200.2) <BA53CA8A-9974-3A43-9265-B110B1AE470F> /usr/lib/system/libremovefile.dylib\r\n    0x7fff5c910000 -     0x7fff5c927ff3  libsystem_asl.dylib (356.200.4) <33C62769-1242-3BC1-9459-13CBCDECC7FE> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff5c928000 -     0x7fff5c928fff  libsystem_blocks.dylib (73) <152EDADF-7D94-35F2-89B7-E66DCD945BBA> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff5c929000 -     0x7fff5c9b1fff  libsystem_c.dylib (1272.200.26) <D6C701A2-9F17-308D-B6AC-9E17EF31B7DF> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff5c9b2000 -     0x7fff5c9b5ff7  libsystem_configuration.dylib (963.200.27) <94898525-ECC8-3CC9-B312-CBEAAC305E32> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff5c9b6000 -     0x7fff5c9b9ff7  libsystem_coreservices.dylib (66) <10818C17-70E1-328E-A3E3-C3EB81AEC590> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff5c9ba000 -     0x7fff5c9c0ffb  libsystem_darwin.dylib (1272.200.26) <07468CF7-982F-37C4-83D0-D5E602A683AA> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff5c9c1000 -     0x7fff5c9c7ff7  libsystem_dnssd.dylib (878.240.1) <5FEA5E1E-E80F-3616-AD33-8E936D61F31A> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff5c9c8000 -     0x7fff5ca14ff3  libsystem_info.dylib (517.200.9) <54B65F21-2E93-3579-9B72-6637A03245D9> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff5ca15000 -     0x7fff5ca3dff7  libsystem_kernel.dylib (4903.241.1) <CA10BC3A-5B09-32CE-B74F-BAD01755AA37> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff5ca3e000 -     0x7fff5ca89ff7  libsystem_m.dylib (3158.200.7) <AF25F8E8-194C-314F-A2D3-A424853EE796> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff5ca8a000 -     0x7fff5caaeff7  libsystem_malloc.dylib (166.220.1) <4777DC06-F9C6-356E-82AB-86A1C6D62F3A> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff5caaf000 -     0x7fff5cabaff3  libsystem_networkextension.dylib (767.240.1) <4DB0D4A2-83E7-3638-AAA0-39CECD5C25F8> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff5cabb000 -     0x7fff5cac2fff  libsystem_notify.dylib (172.200.21) <65B3061D-41D7-3485-B217-A861E05AD50B> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff5cac3000 -     0x7fff5caccfef  libsystem_platform.dylib (177.200.16) <83DED753-51EC-3B8C-A98D-883A5184086B> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff5cacd000 -     0x7fff5cad7fff  libsystem_pthread.dylib (330.230.1) <80CC5992-823E-327E-BB6E-9D4568B84161> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff5cad8000 -     0x7fff5cadbff7  libsystem_sandbox.dylib (851.230.3) <D6469A17-C13C-3538-A300-D6517BB7F249> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff5cadc000 -     0x7fff5cadeff3  libsystem_secinit.dylib (30.220.1) <5964B6D2-19D4-3CF9-BDBC-4EB1D42348F1> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff5cadf000 -     0x7fff5cae6ff7  libsystem_symptoms.dylib (820.237.2) <487E1794-4C6E-3B1B-9C55-95B1A5FF9B90> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff5cae7000 -     0x7fff5cafcff7  libsystem_trace.dylib (906.220.1) <4D4BA88A-FA32-379D-8860-33838723B35F> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff5cafe000 -     0x7fff5cb03ffb  libunwind.dylib (35.4) <EF1A77FD-A86B-39F5-ABEA-6100AB23583A> /usr/lib/system/libunwind.dylib\r\n    0x7fff5cb04000 -     0x7fff5cb34fff  libxpc.dylib (1336.240.2) <EE0CDA53-6FF9-3B4E-A571-335A5FF6B6F4> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 57080\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=340.7M resident=0K(0%) swapped_out_or_unallocated=340.7M(100%)\r\nWritable regions: Total=114.9M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=114.9M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        2 \r\nDispatch continuations            8192K        2 \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                            42.6M       11 \r\nMALLOC guard page                   16K        5 \r\nMALLOC_LARGE (reserved)            9.9M        2         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.1M       25 \r\nStack                             19.2M       25 \r\nVM_ALLOCATE                       18.9G      728 \r\nVM_ALLOCATE (reserved)              68K        3         reserved VM address space (unallocated)\r\n__DATA                            16.4M      194 \r\n__FONT_DATA                          4K        2 \r\n__LINKEDIT                       218.0M       11 \r\n__TEXT                           122.6M      198 \r\n__UNICODE                          564K        2 \r\nmapped file                       94.8M      577 \r\nshared memory                       48K        6 \r\n===========                     =======  ======= \r\nTOTAL                             19.4G     1778 \r\nTOTAL, minus reserved VM space    19.4G     1778 \r\n\r\nModel: MacBookAir7,2, BootROM 182.0.0.0.0, 2 processors, Intel Core i5, 1.6 GHz, 4 GB, SMC 2.27f2\r\nGraphics: Intel HD Graphics 6000, Intel HD Graphics 6000, Built-In\r\nMemory Module: BANK 0/DIMM0, 2 GB, DDR3, 1600 MHz, 0x80AD, 0x483943434E4E4E384A544D4C41522D4E544D\r\nMemory Module: BANK 1/DIMM0, 2 GB, DDR3, 1600 MHz, 0x80AD, 0x483943434E4E4E384A544D4C41522D4E544D\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x117), Broadcom BCM43xx 1.0 (7.77.61.1 AirPortDriverBrcmNIC-1305.2)\r\nBluetooth: Version 6.0.10f1, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nSerial ATA Device: APPLE SSD SM0128G, 121.33 GB\r\nUSB Device: USB 3.0 Bus\r\nUSB Device: Internal Memory Card Reader\r\nUSB Device: BRCM20702 Hub\r\nUSB Device: Bluetooth USB Host Controller\r\nThunderbolt Bus: MacBook Air, Apple Inc., 27.2\r\n\n\n---\n\n@livarcocc commented on [Thu Mar 21 2019](https://github.com/dotnet/cli/issues/11009#issuecomment-475439504)\n\nWhich command are you running that leads to this?\n\n---\n\n@hayatusm commented on [Thu Mar 21 2019](https://github.com/dotnet/cli/issues/11009#issuecomment-475440340)\n\nrun -> start without debugging. It is an empty project just wanted to see if it runs before I do anything\n\n---\n\n@livarcocc commented on [Thu Mar 21 2019](https://github.com/dotnet/cli/issues/11009#issuecomment-475443033)\n\nIs this through VS4Mac? Can you try dotnet run or dotnet <your_app>.dll from the command line and tell us what you see?\r\n\r\nAlso, what version of the .net core sdk are you using?\n\n---\n\n@hayatusm commented on [Thu Mar 21 2019](https://github.com/dotnet/cli/issues/11009#issuecomment-475445059)\n\nthis is through VS4MAC. Same error message when I run it from command line. \r\n\r\nI am using .netcore sdk 2.2.105\n\n---\n\n@livarcocc commented on [Thu Mar 21 2019](https://github.com/dotnet/cli/issues/11009#issuecomment-475446649)\n\nGiven that this is crashing on libcoreclr, I am going to move this issue to coreclr. The CLI itself is all IL.\n\n","Url":"https://github.com/dotnet/coreclr/issues/23400","RelatedDescription":"Closed issue \"dotnet quits unexpectedly on mac os\" (#23400)"},{"Id":"424011184","IsPullRequest":false,"CreatedAt":"2019-03-22T01:41:10","Actor":"VincentBu","Number":"23404","RawContent":null,"Title":"[arm] corefx test failed with exit code -1073740791","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_corefx_jitstressregs0x80_tst/56/\r\n\r\n**Log:**\r\n```\r\nC:\\j\\workspace\\arm_cross_che---ef34fc8c\\_\\fx\\artifacts\\bin\\tests\\System.Security.Cryptography.X509Certificates.Tests\\netcoreapp-Windows_NT-Release-arm>C:\\j\\workspace\\arm_cross_che---ef34fc8c\\_\\fx\\artifacts\\bin\\testhost\\netcoreapp-Windows_NT-Release-arm\\dotnet.exe xunit.console.dll System.Security.Cryptography.X509Certificates.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=failing -notrait category=OuterLoop \r\n  Discovering: System.Security.Cryptography.X509Certificates.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Security.Cryptography.X509Certificates.Tests (found 443 of 462 test cases)\r\n  Starting:    System.Security.Cryptography.X509Certificates.Tests (parallel test collections = on, max threads = 8)\r\n----- end  4:47:30.66 ----- exit code -1073740791\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23404","RelatedDescription":"Open issue \"[arm] corefx test failed with exit code -1073740791\" (#23404)"},{"Id":"424010521","IsPullRequest":false,"CreatedAt":"2019-03-22T01:37:20","Actor":"Zhentar","Number":"23403","RawContent":null,"Title":"[JIT] Bounds check not eliminated in simple for loop for span argument passed with ref / in modifier","State":"open","Body":"https://github.com/Zhentar/xxHash3.NET/blob/7fb40da7d535c6d5fb024d2c5363cc2bb3c2a068/xxHash3/xxHash3_AVX2.cs#L103\r\n```cs\r\nfor (int i = 0; i < blocks.Length; i++)\r\n{\r\n\tref readonly var block = ref blocks[i];\r\n```\r\nThis seems like a pretty straightforward scenario (that's not covered by any of the existing issues that I see). But I'm still seeing bounds checks:\r\n```asm\r\n          for (int i = 0; i < blocks.Length; i++)\r\n               ^^^^^^^^^\r\n       xor     r9d,r9d\r\n       mov     r10d,dword ptr [rcx+8]\r\n       test    r10d,r10d\r\n       jle     M10_L01\r\n           ref readonly var block = ref blocks[i];\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nM10_L00:\r\n       cmp     r9d,r10d\r\n       jae     M10_L02\r\n       movsxd  r11,r9d\r\n       shl     r11,0Ah\r\n       add     r11,qword ptr [rcx]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23403","RelatedDescription":"Open issue \"[JIT] Bounds check not eliminated in simple for loop for span argument passed with ref / in modifier\" (#23403)"},{"Id":"423996861","IsPullRequest":true,"CreatedAt":"2019-03-22T00:24:13","Actor":"jkoritzinsky","Number":"23402","RawContent":null,"Title":"Runtime support for upcoming .NET Core WinRT Host","State":"open","Body":"Add `ActivationFactoryLoader.GetActivationFactory` entrypoint for the upcoming .NET Core WinRT host (dotnet/core-setup#5527).\r\n\r\nEnable assemblies that a WinRT assembly depends on to be loaded into an AssemblyLoadContext other than the default (required since the WinRT components do not necessarily own the TPA).\r\n\r\nEnsure that COM is started correctly before marshalling to or from COM interfaces in the COM interface marshaler.\r\n","Url":"https://github.com/dotnet/coreclr/pull/23402","RelatedDescription":"Open PR \"Runtime support for upcoming .NET Core WinRT Host\" (#23402)"},{"Id":"423859302","IsPullRequest":true,"CreatedAt":"2019-03-22T00:10:42","Actor":"briansull","Number":"23391","RawContent":null,"Title":"Add azure-pipeline job: coreclr-ci (Test Pri0 Linux_musl x64 release)","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23391","RelatedDescription":"Closed or merged PR \"Add azure-pipeline job: coreclr-ci (Test Pri0 Linux_musl x64 release)\" (#23391)"},{"Id":"423860220","IsPullRequest":false,"CreatedAt":"2019-03-21T22:44:50","Actor":"Alan-FGR","Number":"23392","RawContent":null,"Title":"Marshalling native non-PODs yield different results depending on their size ","State":"closed","Body":"Hi there. This issue was originally reported on dotnet/csharplang here: https://github.com/dotnet/csharplang/issues/2357 but as requested I'm migrating it here since it's the most appropriate place.\r\n\r\n----\r\nI was marshaling some data from C++ and I came across a strange inconsistent behavior, here's a repro project:\r\nhttps://github.com/Alan-FGR/PinvokeDebug\r\nhere's the native code:\r\nhttps://github.com/Alan-FGR/PinvokeDebug/blob/c63b8e1b310ab6ad0316e1044580789aa7348b2f/Dll/Dll.cpp#L9-L44\r\nhere's the C# code:\r\nhttps://github.com/Alan-FGR/PinvokeDebug/blob/c63b8e1b310ab6ad0316e1044580789aa7348b2f/PinvokeProblemDebug/Program.cs#L8-L46\r\n(github should be displaying the lines here, that isn't working on my end though)\r\nNote how the only difference is that single extra float. The version with 3 floats works fine, with 2 it doesn't, but if I cast it into a POD it works fine. I can see why that doesn't work since the destructor is called when exiting the scope, but what I don't understand is the inconsistency there.\r\n\r\nAm I not supposed to do that? Is it OK to return PODs?","Url":"https://github.com/dotnet/coreclr/issues/23392","RelatedDescription":"Closed issue \"Marshalling native non-PODs yield different results depending on their size \" (#23392)"},{"Id":"423963944","IsPullRequest":true,"CreatedAt":"2019-03-21T22:09:34","Actor":"luhenry","Number":"23398","RawContent":null,"Title":"Fix `Environment.ProcessorCount` when passing `--cpus` to Docker CLI","State":"open","Body":"This focuses on better supporting Docker CLI's parameter `--cpus`, which limits the amount of CPU time available to the container (ex: 1.8 means 180% CPU time, ie on 2 cores 90% for each core, on 4 cores 45% on each core, etc.)\r\n\r\nAll the runtime components depending on the number of processors available are:\r\n - ThreadPool\r\n - GC\r\n - `Environment.ProcessorCount` via `SystemNative::GetProcessorCount`\r\n - `SimpleRWLock::m_spinCount`\r\n - `BaseDomain::m_iNumberOfProcessors` (it's used to determine the GC heap to affinitize to)\r\n\r\nAll the above components take advantage of `--cpus` via `CGroup::GetCpuLimit` with #12797, allowing to optimize performance in a container/machine with limited resources. This makes sure the runtime components makes the best use of available resources.\r\n\r\nIn the case of `Environment.ProcessorCount`, the behavior is such that passing `--cpus=1.5` on a machine with 8 processors will return `1`  as shown in #22302 (comment). This behavior is not consistent with [Windows Job Objects](https://docs.microsoft.com/en-us/windows/desktop/api/winnt/ns-winnt-jobobject_cpu_rate_control_information) which still returns the number of processors for the container/machine even if it only gets parts of the total number of cycles.\r\n\r\nThis behavior is erroneous because the container still has access to the full range of processors on the machine, and only its _processor time_ is limited. For example, in the case of a 4 processors machine, with a value of `--cpus=1.8`, there can be 4 threads running in parallel even though each thread will only get `1.8 / 8 = .45` or 45% of all cycles of each processor.\r\n\r\nThe work consist in reverting the behavior of `SystemNative::GetProcessorCount` to pre #12797.","Url":"https://github.com/dotnet/coreclr/pull/23398","RelatedDescription":"Open PR \"Fix `Environment.ProcessorCount` when passing `--cpus` to Docker CLI\" (#23398)"},{"Id":"423957104","IsPullRequest":false,"CreatedAt":"2019-03-21T21:48:34","Actor":"vancem","Number":"23397","RawContent":null,"Title":"EventSource","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/issues/23397","RelatedDescription":"Closed issue \"EventSource\" (#23397)"},{"Id":"423933727","IsPullRequest":false,"CreatedAt":"2019-03-21T20:45:28","Actor":"BruceForstall","Number":"23395","RawContent":null,"Title":"[arm] Assertion: (nextByte & MORE_BYTES_TO_FOLLOW) && \"Must have another code\"","State":"open","Body":"arm32 altjit frameworks PMI run on Windows x86 Checked\r\n\r\n```\r\nCompleted assembly xunit.performance.execution - #types: 23, #methods: 113, skipped types: 0, skipped methods: 0\r\nAssert failure(PID 164180 [0x00028154], Thread: 96844 [0x17a4c]): (nextByte & MORE_BYTES_TO_FOLLOW) && \"Must have another code\"\r\nCORECLR! decodeHeader + 0x2EE (0x0f62e6ee)\r\nCORECLR! DecodeGCHdrInfo + 0x13B (0x0f3d83eb)\r\nCORECLR! EECodeManager::GetFunctionSize + 0xE3 (0x0f3db2f3)\r\nCORECLR! EEJitManager::JitTokenToMethodRegionInfo + 0x15E (0x0f145d1e)\r\nCORECLR! EECodeInfo::GetMethodRegionInfo + 0x26 (0x0f14292e)\r\nCORECLR! ETW::MethodLog::SendMethodEvent + 0x2C0 (0x0f1f8846)\r\nCORECLR! ETW::MethodLog::SendEventsForJitMethodsHelper + 0x10E (0x0f1f8016)\r\nCORECLR! ETW::MethodLog::SendEventsForJitMethods + 0x190 (0x0f1f7ded)\r\nCORECLR! ETW::EnumerationLog::IterateDomain + 0x10A (0x0f1f0106)\r\nCORECLR! ETW::EnumerationLog::IterateAppDomain + 0x6F (0x0f1ef91d)\r\n    File: f:\\gh\\coreclr10\\src\\inc\\gcdecoder.cpp Line: 199\r\n    Image: F:\\gh\\coreclr10\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23395","RelatedDescription":"Open issue \"[arm] Assertion: (nextByte & MORE_BYTES_TO_FOLLOW) && \"Must have another code\"\" (#23395)"},{"Id":"423933210","IsPullRequest":false,"CreatedAt":"2019-03-21T20:44:12","Actor":"BruceForstall","Number":"23394","RawContent":null,"Title":"[arm] Assertion: header.ebpFrame || !header.localloc","State":"open","Body":"With frameworks PMI arm32 altjit run on Windows x86 Checked, get many of these assertions:\r\n\r\n```\r\nCompleted assembly jit-dasm - #types: 5, #methods: 38, skipped types: 0, skipped methods: 0\r\nAssert failure(PID 169636 [0x000296a4], Thread: 169640 [0x296a8]): header.ebpFrame || !header.localloc\r\nCORECLR! DecodeGCHdrInfo + 0x3E9 (0x0f3d8699)\r\nCORECLR! EECodeManager::GetFunctionSize + 0xE3 (0x0f3db2f3)\r\nCORECLR! EEJitManager::JitTokenToMethodRegionInfo + 0x15E (0x0f145d1e)\r\nCORECLR! EECodeInfo::GetMethodRegionInfo + 0x26 (0x0f14292e)\r\nCORECLR! ETW::MethodLog::SendMethodEvent + 0x2C0 (0x0f1f8846)\r\nCORECLR! ETW::MethodLog::SendEventsForJitMethodsHelper + 0x10E (0x0f1f8016)\r\nCORECLR! ETW::MethodLog::SendEventsForJitMethods + 0x190 (0x0f1f7ded)\r\nCORECLR! ETW::EnumerationLog::IterateDomain + 0x10A (0x0f1f0106)\r\nCORECLR! ETW::EnumerationLog::IterateAppDomain + 0x6F (0x0f1ef91d)\r\nCORECLR! ETW::EnumerationLog::EnumerationHelper + 0x115 (0x0f1e90e7)\r\n    File: f:\\gh\\coreclr10\\src\\vm\\eetwain.cpp Line: 222\r\n    Image: F:\\gh\\coreclr10\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\r\n```\r\n\r\nAlso:\r\n```\r\nCompleted assembly System.ComponentModel.Primitives - #types: 25, #methods: 154, skipped types: 0, skipped methods: 0\r\nCompleted assembly System.Net.HttpListener - #types: 187, #methods: 1194, skipped types: 0, skipped methods: 0\r\nCompleted assembly Microsoft.Win32.Primitives - #types: 3, #methods: 14, skipped types: 0, skipped methods: 0\r\nCompleted assembly NuGet.Repositories - #types: 4, #methods: 32, skipped types: 0, skipped methods: 0\r\nCompleted assembly System.ComponentModel.EventBasedAsync - #types: 9, #methods: 66, skipped types: 0, skipped methods: 0\r\nCompleted assembly System.ComponentModel - #types: 1, #methods: 4, skipped types: 0, skipped methods: 0\r\n```\r\n\r\nand many more.","Url":"https://github.com/dotnet/coreclr/issues/23394","RelatedDescription":"Open issue \"[arm] Assertion: header.ebpFrame || !header.localloc\" (#23394)"},{"Id":"423932236","IsPullRequest":false,"CreatedAt":"2019-03-21T20:41:36","Actor":"BruceForstall","Number":"23393","RawContent":null,"Title":"[arm] Assertion: header.prologSize + (size_t)(header.epilogCount*header.epilogSize) <= infoPtr->methodSize","State":"open","Body":"Running arm32 altjit PMI on frameworks on x86 Checked leads to many VM assertions like:\r\n```\r\nCompleted assembly Microsoft.DotNet.Cli.Utils - #types: 136, #methods: 597, skipped types: 0, skipped methods: 0\r\nAssert failure(PID 163532 [0x00027ecc], Thread: 163744 [0x27fa0]): header.prologSize + (size_t)(header.epilogCount*header.epilogSize) <= infoPtr->methodSize\r\nCORECLR! DecodeGCHdrInfo + 0x2D6 (0x0f3d8586)\r\nCORECLR! EECodeManager::GetFunctionSize + 0xE3 (0x0f3db2f3)\r\nCORECLR! EEJitManager::JitTokenToMethodRegionInfo + 0x15E (0x0f145d1e)\r\nCORECLR! EECodeInfo::GetMethodRegionInfo + 0x26 (0x0f14292e)\r\nCORECLR! ETW::MethodLog::SendMethodEvent + 0x2C0 (0x0f1f8846)\r\nCORECLR! ETW::MethodLog::SendEventsForJitMethodsHelper + 0x10E (0x0f1f8016)\r\nCORECLR! ETW::MethodLog::SendEventsForJitMethods + 0x190 (0x0f1f7ded)\r\nCORECLR! ETW::EnumerationLog::IterateDomain + 0x10A (0x0f1f0106)\r\nCORECLR! ETW::EnumerationLog::IterateAppDomain + 0x6F (0x0f1ef91d)\r\nCORECLR! ETW::EnumerationLog::EnumerationHelper + 0x115 (0x0f1e90e7)\r\n    File: f:\\gh\\coreclr10\\src\\vm\\eetwain.cpp Line: 213\r\n    Image: F:\\gh\\coreclr10\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\r\n```\r\n\r\nAlso,\r\n```\r\nSystem.Private.CoreLib\r\nMicrosoft.DotNet.Cli.Utils\r\nSystem.Linq.Queryable\r\nSystem.Text.Encoding.CodePages\r\n```\r\n\r\nand more.\r\n","Url":"https://github.com/dotnet/coreclr/issues/23393","RelatedDescription":"Open issue \"[arm] Assertion: header.prologSize + (size_t)(header.epilogCount*header.epilogSize) <= infoPtr->methodSize\" (#23393)"},{"Id":"423852087","IsPullRequest":true,"CreatedAt":"2019-03-21T17:25:04","Actor":"stephentoub","Number":"23390","RawContent":null,"Title":"[release/2.2] Add stack depth check to all Task continuations","State":"open","Body":"Port https://github.com/dotnet/coreclr/pull/23152 to release/2.2\r\n\r\nDue to all of the file renames that have been made in master, cherry-pick didn't work, and I did a line-by-line manual port of the change.\r\n\r\n#### Description\r\n\r\nCurrently Task has a stack depth check that avoids stack overflows on very deep stack continuation chains, but it only applies to Task.ContinueWith, not to other kinds of continuations. As await has been spreading far and wide, it has since become the dominant form of continuation, and this stack depth check doesn't currently apply to it.  In general this has been deemed fine, based on the idea that for \"normal\" code, the code that sets up the chain will have approximately the same depth as the code the executes the chain (e.g. calling into a bunch of nested async methods, the leaf yields, and then the continuation chain unwinds back through approximately the same stack depth).  However, because of how exceptions are handled, if an exception is thrown on a fairly deep stack, it can result in significantly more stack consumed as part of executing the continuation chain then setting it up, resulting in stack overflows while handling exceptions in async methods.\r\n\r\n#### Customer Impact\r\n\r\nStack overflows / app crashes when async code with deep call stacks throw exceptions.\r\n\r\nThe customer can work around it by adding \"await Task.Yield();\" or similar at strategic points in their code, but figuring out where to do so can be very challenging, and likely also involves adding try/catch/finally blocks around the awaits on the problematic path.\r\n\r\n[edit - danmosemsft ] Requested by major internal service.\r\n\r\n#### Regression?\r\n\r\nNo.  We've just seen more customers hitting this as async/await gets propagated through significantly larger quantities of code.\r\n\r\n#### Packaging reviewed? \r\n\r\nChange affects System.Private.CoreLib only.\r\n\r\n#### Risk\r\n\r\nThe change itself is low risk in terms of code churn.  It just removes the existing \"stack guard\" mechanism and replaces it with a tried-and-true mechanism from the runtime, and then adds a call to that in one central location.  The main risk would be if some code somewhere somehow depended on an await continuation running synchronously and now it may end up running asynchronously (that was already possible, it's just now possible in additional situations).","Url":"https://github.com/dotnet/coreclr/pull/23390","RelatedDescription":"Open PR \"[release/2.2] Add stack depth check to all Task continuations\" (#23390)"},{"Id":"423838948","IsPullRequest":true,"CreatedAt":"2019-03-21T17:07:13","Actor":"BruceForstall","Number":"23389","RawContent":null,"Title":"Replace Linux pmi_asm_diffs use of zip/unzip with tar","State":"closed","Body":"It appears our arm64 machines don't have 'zip', so are failing\r\nto archive the final results.","Url":"https://github.com/dotnet/coreclr/pull/23389","RelatedDescription":"Closed or merged PR \"Replace Linux pmi_asm_diffs use of zip/unzip with tar\" (#23389)"},{"Id":"423830820","IsPullRequest":true,"CreatedAt":"2019-03-21T16:41:39","Actor":"mikem8361","Number":"23388","RawContent":null,"Title":"[WIP] Add corefx tests to coreclr test runs.","State":"open","Body":"This is still a work-in-progress. The test-job.yml template now has\r\na new flag \"corefxTests\" that can be set to enable corefx tests instead\r\nof the coreclr ones. This flag can be passed through the platform-matrix.yml\r\ntemplate as a jobParameter.\r\n\r\nThere is no filtering done yet so there are lots of failures.\r\n\r\nThis change is waiting for an arcade change that allows arguments/traits\r\nbe passed to the runtest scripts to do filtering.\r\n\r\nThe last piece of this work is writing a build task that processes the\r\ntests\\corefx\\corefx.issues.json file and creates the notraits/traits\r\narguments for each test. This build task can be based on the old corefx\r\ntest runner here: tests\\src\\Common\\CoreFX\\TestFileSetup.\r\n\r\nSummary of the steps involved:\r\n\r\n1) Select the helix .proj file to use based on the \"corefxTests\" flag (in test-job.yml)\r\n2) Restore the blob feed build task: Microsoft.DotNet.Build.Tasks.Feed (in send-to-helix-step.yml)\r\n3) Execute the helix msbuild file helixcorefxtests.proj (in send-to-helix-step.yml)\r\n4) Run the CompressRuntimeDirectory target to zip up the \"testhost\" directory for the helix correlation payload (helixcorefxtests.proj)\r\n5) Run the GetTestAssetManifest target to download and process the list of test asset zips (helixcorefxtests.proj)\r\n6) Run the new build task to process the corefx.issues.json test filtering (not done yet).\r\n7) Run the BuildTestAssetManifest target to build the HelixWorkItems from the test asset list (helixcorefxtests.proj)","Url":"https://github.com/dotnet/coreclr/pull/23388","RelatedDescription":"Open PR \"[WIP] Add corefx tests to coreclr test runs.\" (#23388)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"424440016","IsPullRequest":true,"CreatedAt":"2019-03-23T00:41:19","Actor":"dotnet-maestro[bot]","Number":"11012","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190322.1\r\n- **Date Produced**: 3/23/2019 12:05 AM\r\n- **Commit**: 26b345d9b9ee451728bb9d0d6daa51075fb9cbfb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19172.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11012","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/clicommandlineparser\" (#11012)"},{"Id":"424426729","IsPullRequest":true,"CreatedAt":"2019-03-22T23:55:57","Actor":"nguerrera","Number":"11011","RawContent":null,"Title":"Mark packages as non-shipping","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11011","RelatedDescription":"Closed or merged PR \"Mark packages as non-shipping\" (#11011)"},{"Id":"423523637","IsPullRequest":true,"CreatedAt":"2019-03-22T17:07:07","Actor":"dotnet-bot","Number":"11003","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11003","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11003)"},{"Id":"424177387","IsPullRequest":true,"CreatedAt":"2019-03-22T12:40:11","Actor":"dotnet-maestro[bot]","Number":"11010","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11010","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11010)"},{"Id":"423947903","IsPullRequest":true,"CreatedAt":"2019-03-21T23:59:36","Actor":"nugetlurker","Number":"11008","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into cli","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.5906 into cli release/2.1.7xx branch","Url":"https://github.com/dotnet/cli/pull/11008","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.5906 into cli\" (#11008)"},{"Id":"423947882","IsPullRequest":true,"CreatedAt":"2019-03-21T23:59:12","Actor":"nugetlurker","Number":"11007","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into cli","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.5906 into cli release/2.2.3xx branch","Url":"https://github.com/dotnet/cli/pull/11007","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.5906 into cli\" (#11007)"},{"Id":"423982717","IsPullRequest":false,"CreatedAt":"2019-03-21T23:57:06","Actor":"hayatusm","Number":"11009","RawContent":null,"Title":"dotnet quits unexpectedly on mac os","State":"closed","Body":"Process:               dotnet [10526]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        VisualStudio [9812]\r\nResponsible:           dotnet [10526]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-03-21 18:05:39.998 -0500\r\nOS Version:            Mac OS X 10.14.3 (18D109)\r\nReport Version:        12\r\nAnonymous UUID:        552DA19D-37CB-A00A-A2FC-360C4FE69F9E\r\n\r\nSleep/Wake UUID:       F3547967-C847-474B-B2CB-783BD4CCFCCF\r\n\r\nTime Awake Since Boot: 100000 seconds\r\nTime Since Wake:       580 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1c23e __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad2c1c pthread_kill + 285\r\n2   libsystem_c.dylib             \t0x00007fff5c9851c9 abort + 127\r\n3   libcoreclr.dylib              \t0x000000010abf984e PROCAbort + 14\r\n4   libcoreclr.dylib              \t0x000000010abf7cf2 PROCEndProcess(void*, unsigned int, int) + 226\r\n5   libcoreclr.dylib              \t0x000000010aed02c1 UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 737\r\n6   libcoreclr.dylib              \t0x000000010aed0460 DispatchManagedException(PAL_SEHException&, bool) + 304\r\n7   libcoreclr.dylib              \t0x000000010ae31339 IL_Throw(Object*) + 713\r\n8   ???                           \t0x000000011970577f 0 + 4721760127\r\n9   ???                           \t0x0000000119e35527 0 + 4729296167\r\n10  ???                           \t0x0000000119c81b93 0 + 4727511955\r\n11  libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n13  libcoreclr.dylib              \t0x000000010ac90106 RunMain(MethodDesc*, short, int*, PtrArray**) + 694\r\n14  libcoreclr.dylib              \t0x000000010ac90472 Assembly::ExecuteMainMethod(PtrArray**, int) + 402\r\n15  libcoreclr.dylib              \t0x000000010acd0ea4 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n16  libcoreclr.dylib              \t0x000000010ac02046 coreclr_execute_assembly + 230\r\n17  libhostpolicy.dylib           \t0x000000010ab4b388 0x10aac2000 + 562056\r\n18  libhostpolicy.dylib           \t0x000000010ab347df 0x10aac2000 + 468959\r\n19  libhostpolicy.dylib           \t0x000000010ab3b089 0x10aac2000 + 495753\r\n20  libhostfxr.dylib              \t0x000000010aa5d8a3 0x10a9d3000 + 567459\r\n21  libhostfxr.dylib              \t0x000000010aa7d5ee 0x10a9d3000 + 697838\r\n22  libhostfxr.dylib              \t0x000000010aa801c2 0x10a9d3000 + 709058\r\n23  libhostfxr.dylib              \t0x000000010aa7e678 0x10a9d3000 + 702072\r\n24  libhostfxr.dylib              \t0x000000010aa5e919 0x10a9d3000 + 571673\r\n25  dotnet                        \t0x000000010a9a7052 0x10a99a000 + 53330\r\n26  dotnet                        \t0x000000010a9a7645 0x10a99a000 + 54853\r\n27  libdyld.dylib                 \t0x00007fff5c8dced9 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010abfe8c8 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010abfd81e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1e2ee poll + 10\r\n1   libcoreclr.dylib              \t0x000000010abf0a1e CorUnix::CPalSynchronizationManager::ThreadPrepareForShutdown() + 30\r\n2   libcoreclr.dylib              \t0x000000010abf2550 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 944\r\n3   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca17152 __open + 10\r\n1   libcoreclr.dylib              \t0x000000010ac6e3ff TwoWayPipe::WaitForConnection() + 31\r\n2   libcoreclr.dylib              \t0x000000010ac65e11 DbgTransportSession::TransportWorker() + 177\r\n3   libcoreclr.dylib              \t0x000000010ac64759 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n7   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4f32 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010ac62b98 DebuggerRCThread::MainLoop() + 264\r\n7   libcoreclr.dylib              \t0x000000010ac62a2b DebuggerRCThread::ThreadProc() + 251\r\n8   libcoreclr.dylib              \t0x000000010ac62734 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea773 SVR::gc_heap::gc_thread_function() + 163\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e6d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010ae9e6ee CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 206\r\n7   libcoreclr.dylib              \t0x000000010aeea751 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010aeea6cf SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010ae0b098 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n13  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf0712 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4f32 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010ae0785e FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n7   libcoreclr.dylib              \t0x000000010ae07953 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n8   libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n9   libcoreclr.dylib              \t0x000000010ad815c9 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n10  libcoreclr.dylib              \t0x000000010ae07c6c FinalizerThread::FinalizerThreadStart(void*) + 204\r\n11  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n12  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n13  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n14  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   libclrjit.dylib               \t0x000000010c3eee68 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x000000010c3eddbe SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf532d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ada3d16 ThreadpoolMgr::TimerThreadFire() + 150\r\n6   libcoreclr.dylib              \t0x000000010ada3be5 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f68ffde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2f68f52d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2f68ec64 CFRunLoopRunSpecific + 463\r\n5   com.apple.CoreFoundation      \t0x00007fff2f68ea70 CFRunLoopRun + 40\r\n6   ???                           \t0x0000000119c901e3 0 + 4727570915\r\n7   ???                           \t0x000000011ad4c271 0 + 4745118321\r\n8   ???                           \t0x000000011af25126 0 + 4747055398\r\n9   libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n11  libcoreclr.dylib              \t0x000000010add168f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n13  libcoreclr.dylib              \t0x000000010ad81533 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010add18af ThreadNative::KickOffThread(void*) + 351\r\n15  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_pthread.dylib       \t0x00007fff5cacf3f8 start_wqthread + 0\r\n1   ???                           \t0x0000000054485244 0 + 1414025796\r\n\r\nThread 14:\r\n0   libsystem_pthread.dylib       \t0x00007fff5cacf3f8 start_wqthread + 0\r\n1   ???                           \t0x0000000000001403 0 + 5123\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf532d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ae1080f __SwitchToThread(unsigned int, unsigned int) + 15\r\n6   libcoreclr.dylib              \t0x000000010ada328c ThreadpoolMgr::GateThreadStart(void*) + 444\r\n7   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n10  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 17:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 18:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca17e5e read + 10\r\n1   System.Native.dylib           \t0x000000010df9c79f SignalHandlerLoop + 79\r\n2   libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n3   libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n4   libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 19:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9eb20 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 21:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca1617a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5ca166d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f68ffde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2f68f52d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2f68ec64 CFRunLoopRunSpecific + 463\r\n5   com.apple.CoreFoundation      \t0x00007fff2f68ea70 CFRunLoopRun + 40\r\n6   ???                           \t0x0000000119c901e3 0 + 4727570915\r\n7   ???                           \t0x000000011ad4c271 0 + 4745118321\r\n8   ???                           \t0x000000011af25126 0 + 4747055398\r\n9   libcoreclr.dylib              \t0x000000010af57397 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010adbd561 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 945\r\n11  libcoreclr.dylib              \t0x000000010add168f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010ad80f23 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 419\r\n13  libcoreclr.dylib              \t0x000000010ad81533 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010add18af ThreadNative::KickOffThread(void*) + 351\r\n15  libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 22:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9ec0d CLRLifoSemaphore::WaitForSignal(unsigned int) + 269\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 23:\r\n0   libsystem_kernel.dylib        \t0x00007fff5ca197de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5cad3593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x000000010abf06d5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010abf0327 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010abf4ca3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010abf4e18 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010ae9ec0d CLRLifoSemaphore::WaitForSignal(unsigned int) + 269\r\n7   libcoreclr.dylib              \t0x000000010ae9ef30 CLRLifoSemaphore::Wait(unsigned int, unsigned int, unsigned int) + 608\r\n8   libcoreclr.dylib              \t0x000000010ada0d5e ThreadpoolMgr::WorkerThreadStart(void*) + 958\r\n9   libcoreclr.dylib              \t0x000000010abfb218 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff5cad0305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff5cad326f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff5cacf415 thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x00000001134845c0  rcx: 0x00007ffee525bf88  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffee525bfc0  rsp: 0x00007ffee525bf88\r\n   r8: 0x000000000009efff   r9: 0xffffffff00000000  r10: 0x0000000000000000  r11: 0x0000000000000206\r\n  r12: 0x0000000000000307  r13: 0x0000000000000000  r14: 0x0000000000000006  r15: 0x000000000000002d\r\n  rip: 0x00007fff5ca1c23e  rfl: 0x0000000000000206  cr2: 0x000070000341eff8\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000005\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x10a99a000 -        0x10a9bcff7 +dotnet (0) <EC08A28E-D343-361D-BA43-97C8616BBE3B> /usr/local/share/dotnet/dotnet\r\n       0x10a9d3000 -        0x10aab9fff +libhostfxr.dylib (0) <9421119C-940C-3E46-B924-583295CD62B9> /usr/local/share/dotnet/host/fxr/2.2.3/libhostfxr.dylib\r\n       0x10aac2000 -        0x10ababfff +libhostpolicy.dylib (0) <63A45EA9-CA14-3C7B-BF29-4A41C1A8BCF3> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libhostpolicy.dylib\r\n       0x10abb5000 -        0x10b107fff +libcoreclr.dylib (0) <69A2907A-6CAB-39EE-9700-D7749FE0B8CC> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libcoreclr.dylib\r\n       0x10c226000 -        0x10c436ff7 +libclrjit.dylib (0) <C5987D3A-F658-3D22-B71F-FD26316E843C> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/libclrjit.dylib\r\n       0x10c4da000 -        0x10c4e5fff +System.Globalization.Native.dylib (0) <4CBB0592-3C9A-3E59-BAB3-950323C204FE> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Globalization.Native.dylib\r\n       0x10df95000 -        0x10df9dfff +System.Native.dylib (0) <CE333C0B-EE55-33C2-ACD8-6502D8E762D7> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Native.dylib\r\n       0x10dfbe000 -        0x10dfc4ff7 +System.Security.Cryptography.Native.Apple.dylib (0) <91B1BDF7-6E80-3FAE-ACF6-CA70331B8754> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.2.3/System.Security.Cryptography.Native.Apple.dylib\r\n       0x1133ce000 -        0x11344ca87  dyld (655.1) <3EBA447F-A546-366B-B302-8DC3B21A3E30> /usr/lib/dyld\r\n    0x7fff2b980000 -     0x7fff2b980fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <A09CB6D5-3F8A-3E05-B0EB-63878296A059> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff2b998000 -     0x7fff2c038fe3  com.apple.vImage (8.1 - ???) <BDA40EB0-9B20-3ACF-BE37-199578FA84F4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff2c039000 -     0x7fff2c2b0fd7  libBLAS.dylib (1243.200.4) <0ADBEAE3-6636-33E5-AC9F-11C2249E19D3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff2c2b1000 -     0x7fff2c323fe7  libBNNS.dylib (38.200.5) <CC93B9B5-2A8C-3D42-9234-75DD41EC8C0D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff2c324000 -     0x7fff2c6cafff  libLAPACK.dylib (1243.200.4) <45722A8A-5788-3C4C-ADD9-1812763FA635> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff2c6cb000 -     0x7fff2c6e0ffb  libLinearAlgebra.dylib (1243.200.4) <3923AB79-213E-32FD-AC87-8B1A1A832336> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff2c6e1000 -     0x7fff2c6e6ff3  libQuadrature.dylib (3.200.2) <4FBCAC0A-81A4-3C53-8458-27F3569C809D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff2c6e7000 -     0x7fff2c764ffb  libSparse.dylib (79.200.5) <2D650C50-E87E-3F24-9BFA-C8EB6DE1A6E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff2c765000 -     0x7fff2c778ffb  libSparseBLAS.dylib (1243.200.4) <6F8C78BE-A0FD-3507-8A95-541AFC57F1EE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff2c779000 -     0x7fff2c95dff3  libvDSP.dylib (671.220.1) <2F576522-08B1-3C65-8F00-3427E938ADDA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff2c95e000 -     0x7fff2ca13ff3  libvMisc.dylib (671.220.1) <D7B5F89D-3310-31F4-B8BF-42DA300ABE64> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff2ca14000 -     0x7fff2ca14fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <221E4FEF-0431-3316-8281-22B6F8315A09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff2da38000 -     0x7fff2da38fff  com.apple.ApplicationServices (50.1 - 50.1) <86D6F10E-21F8-3CDC-9838-EB07A1C54BA9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff2da39000 -     0x7fff2daa4ff7  com.apple.ApplicationServices.ATS (377 - 453.11) <4080F8BE-F2A2-3707-8754-436FBDB1DAF1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff2db3d000 -     0x7fff2dc5cfff  libFontParser.dylib (228.6) <BBCBEE2C-5B55-3278-B81D-22D72466753E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff2dc5d000 -     0x7fff2dca8ff7  libFontRegistry.dylib (228.12.1.1) <B515718C-81BC-3705-A207-7215486C6D28> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff2dda4000 -     0x7fff2dda8ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <4B1238CC-9B77-3AA5-8329-EE3C736F07EA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2de45000 -     0x7fff2de97ff3  com.apple.HIServices (1.22 - 627.14.2) <1F851BF9-AD29-3558-9EA5-AAD9BAAAC823> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff2de98000 -     0x7fff2dea6ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <5654723A-7B3B-391F-B9F7-0DE4D5940185> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2dea7000 -     0x7fff2def3fff  com.apple.print.framework.PrintCore (14.2 - 503.8) <F1246C9A-2216-3390-8DF1-89304F47CE5D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2def4000 -     0x7fff2df2fff7  com.apple.QD (3.12 - 407.2) <F6B648DA-DA39-3EB4-B593-1B7E316661CD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2df30000 -     0x7fff2df3cff7  com.apple.speech.synthesis.framework (8.1.0 - 8.1.0) <CF19C8B6-AAD5-3DCF-ABD0-3BABB44D119C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2df3d000 -     0x7fff2e1dafff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <5D484151-F269-3D98-B507-0544A6B950AC> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2e540000 -     0x7fff2e901fff  com.apple.CFNetwork (976 - 976) <A434842F-305B-301D-8F88-373CA7BF7196> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff2ee3f000 -     0x7fff2ef0bfff  com.apple.ColorSync (4.13.0 - 3340) <2F45EB01-0C51-3D25-9836-18F99222E1C7> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff2f0a6000 -     0x7fff2f136fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E7EF105-B843-370D-884E-0A43E1A5800B> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff2f1c8000 -     0x7fff2f569fef  com.apple.CoreData (120 - 866.1) <18CD58FD-513E-385B-B43C-08EEB909709C> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff2f56a000 -     0x7fff2f653ff7  com.apple.CoreDisplay (101.3 - 106.2) <EE0D334B-8B71-3A70-9F90-677171D6762F> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff2f654000 -     0x7fff2faa1fef  com.apple.CoreFoundation (6.9 - 1562) <02A2C178-9FF6-385C-A9C5-7F4FC9D66311> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff2faa3000 -     0x7fff30130ff7  com.apple.CoreGraphics (2.0 - 1249.2) <78B75F62-4B60-3FF4-9259-8981E755F6CD> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff30132000 -     0x7fff3045bfff  com.apple.CoreImage (14.2.0 - 720.0.130) <B356BA95-EDD3-35D8-9E4B-250AF6C6DDF9> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff30911000 -     0x7fff30911fff  com.apple.CoreServices (941 - 941) <6DBA4791-26DB-39FB-A6A3-5910A0F2EDD2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff30912000 -     0x7fff30990ffb  com.apple.AE (771 - 771) <4B009524-699E-3891-98DD-E3B6BB433C8F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff30991000 -     0x7fff30c69ff7  com.apple.CoreServices.CarbonCore (1178.16 - 1178.16) <17FC2B9E-EB6C-3768-A2D0-6E086F2563D9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff30c6a000 -     0x7fff30cb4ff7  com.apple.DictionaryServices (1.2 - 284.16.3) <1DAC9153-FB5A-3798-8797-CBFEFF227F71> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff30cb5000 -     0x7fff30cbdffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <8E1507EA-F0A8-3845-B32D-4FBC1381E89C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff30cbe000 -     0x7fff30e89fff  com.apple.LaunchServices (941 - 941) <A8E42760-995C-35E2-BF4A-C96FD0633B29> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff30e8a000 -     0x7fff30f2cfff  com.apple.Metadata (10.7.0 - 1191.53) <48609998-8A34-3CAF-8A42-52C180809656> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff30f2d000 -     0x7fff30f78ff7  com.apple.CoreServices.OSServices (941 - 941) <1B9EA259-09DF-332B-807A-BD50F3184CAC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff30f79000 -     0x7fff30fe7ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <CEC29BB5-D28E-3424-84FE-70756E521F3B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff30fe8000 -     0x7fff3100cffb  com.apple.coreservices.SharedFileList (71.27 - 71.27) <6389B59D-DDAC-3C97-A982-137B9B1FB734> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff31354000 -     0x7fff314b9ffb  com.apple.CoreText (352.0 - 584.26) <5F61037C-825D-37A4-9091-0047413CC213> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff314ba000 -     0x7fff314f7fff  com.apple.CoreVideo (1.8 - 0.0) <34EC73F1-F0ED-32F5-B96E-7683B1F9A7A2> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff3180b000 -     0x7fff31810fff  com.apple.DiskArbitration (2.7 - 2.7) <97707A79-30E7-3D99-AA20-B992B0900BC4> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff319d9000 -     0x7fff31da7fff  com.apple.Foundation (6.9 - 1562) <83D4A12B-EA5A-3C62-8D93-95E64F0A256B> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff31e18000 -     0x7fff31e48ff3  com.apple.GSS (4.0 - 2.0) <86D07291-5DFC-30C2-9A18-5FCEDB0BE621> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff320ce000 -     0x7fff32161fff  com.apple.framework.IOKit (2.0.2 - 1483.240.1) <241690BB-8AFA-3B6A-A210-67874197CB59> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff32163000 -     0x7fff3216dff7  com.apple.IOSurface (255.1 - 255.1) <58826B1A-38E8-3C76-8FFC-76C9282DA893> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff321c4000 -     0x7fff32362fff  com.apple.ImageIO.framework (3.3.0 - 1822.1) <908907D5-5C29-32F7-ACD9-C6A6D51C4D15> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff32363000 -     0x7fff32367ffb  libGIF.dylib (1822.1) <35E37B95-1962-3A25-9C9E-CADD161152B3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff32368000 -     0x7fff3244dfe7  libJP2.dylib (1822.1) <BDBCBF28-12DB-3D63-B6F0-A559D1839F81> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff3244e000 -     0x7fff32473ff7  libJPEG.dylib (1822.1) <D443C754-4AFC-38E1-9E45-D309ACBCE17B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff32746000 -     0x7fff3276cfe7  libPng.dylib (1822.1) <28FE6E2C-1A17-3A84-AAF3-76014DEADDD4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff3276d000 -     0x7fff3276fff7  libRadiance.dylib (1822.1) <687906E3-4EC2-3CE9-B7EA-34418239EE1B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff32770000 -     0x7fff327beffb  libTIFF.dylib (1822.1) <0A1C083B-CE2F-3A00-8E45-EB58DCA2FF34> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff33868000 -     0x7fff33881fff  com.apple.Kerberos (3.0 - 1) <5D1B0593-3C0E-32D5-AAE5-ABC22A98B639> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff342a3000 -     0x7fff34336fff  com.apple.Metal (158.5 - 158.5) <72BF7187-81FE-389B-882F-7B2587FEB455> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff34353000 -     0x7fff34373ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <18281B14-0C6A-38F8-AB80-2D4BB0743C88> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff34374000 -     0x7fff343f2ff7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <BEAF764B-362B-3C45-86F5-2AFBA5FA0F47> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff343f3000 -     0x7fff3441bfff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <116D6C1A-2FD7-3743-95A0-CDDA3D459529> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff3441c000 -     0x7fff3454eff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <88E80BEE-3D2B-328B-80D4-F4717BDB2E9F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff3454f000 -     0x7fff3456aff7  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <E0E652B0-1624-3435-AD60-83A9C4B59852> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff3456b000 -     0x7fff3456bff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <1BBA8BC8-49C6-3C9B-B985-7CE4373E3553> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff35769000 -     0x7fff35775ffb  com.apple.NetFS (6.0 - 4.0) <918DF6CD-2DB0-36A8-B869-5EF637A06C0D> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff38235000 -     0x7fff3828dfff  com.apple.opencl (2.15.1 - 2.15.1) <CC9439C3-FF30-38D2-BF2F-EA0EF1B5775E> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff3828e000 -     0x7fff382aaff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <2CB1F122-2FA0-347C-8454-9CE0FA150832> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff382ab000 -     0x7fff382b7ffb  com.apple.OpenDirectory (10.14 - 207.200.4) <A3FB0F0C-57F4-3F89-A4B1-63DA1F7C9E8E> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff38c1a000 -     0x7fff38c1cfff  libCVMSPluginSupport.dylib (17.3.1) <B2310175-04D6-378B-A220-A8AD7F0DA68E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff38c1d000 -     0x7fff38c22ff3  libCoreFSCache.dylib (163.20) <566DB80E-F1D6-3AEC-AF06-08955507AFEE> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff38c23000 -     0x7fff38c27fff  libCoreVMClient.dylib (163.20) <B9A89373-BDCD-3003-9A82-6D73B930A122> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff38c28000 -     0x7fff38c30ffb  libGFXShared.dylib (17.3.1) <9FFA679A-8CC9-3932-8A41-AA80C386AD3A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff38c31000 -     0x7fff38c3cfff  libGL.dylib (17.3.1) <CFAB6AE4-E646-3E8A-B872-EF091CAF949E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff38c3d000 -     0x7fff38c77fef  libGLImage.dylib (17.3.1) <1AEC8E56-D851-3516-96FE-2829883A8302> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff38deb000 -     0x7fff38e28fff  libGLU.dylib (17.3.1) <90279918-D4B2-31E0-9709-8E06628D9486> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff397d8000 -     0x7fff397e7ff3  com.apple.opengl (17.3.1 - 17.3.1) <2F59064F-D6EF-35CD-9747-20A91DB3D5DF> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff3a643000 -     0x7fff3a89cfff  com.apple.QuartzCore (1.11 - 696.3) <01A2F065-8759-311D-AC2E-FD49F52A87FA> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff3b0f0000 -     0x7fff3b418ff7  com.apple.security (7.0 - 58286.240.4) <91A03FF2-2EE9-36A7-AC4F-169E11FE7846> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff3b419000 -     0x7fff3b4a8fff  com.apple.securityfoundation (6.0 - 55185.200.14) <F6A0EC77-51DB-3312-991C-3E1F920DE8F1> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff3b4da000 -     0x7fff3b4deff3  com.apple.xpc.ServiceManagement (1.0 - 1) <26BA237C-DBA0-3322-B9BF-8B8E739E3A20> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff3b89b000 -     0x7fff3b90bff3  com.apple.SystemConfiguration (1.17 - 1.17) <A8FD596E-C858-397F-836C-978038B97AC0> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff3eb79000 -     0x7fff3ec1efe7  com.apple.APFS (1.0 - 1) <BCB42C90-DEE0-3CD2-9B28-55CD8EFD9487> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff3f66a000 -     0x7fff3f66bff3  com.apple.AggregateDictionary (1.0 - 1) <EBA6443E-6CF0-34F6-B77A-3FCEC57F8F80> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff3ff70000 -     0x7fff3ff7ffcf  com.apple.AppleFSCompression (96.200.3 - 1.0) <78D538DD-1D24-34FC-AFB3-10411494870D> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff400c9000 -     0x7fff40112ff3  com.apple.AppleJPEG (1.0 - 1) <EC4C49F1-C060-3C0F-910F-3620985D4F12> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff40365000 -     0x7fff4038dff7  com.apple.applesauce (1.0 - ???) <58654BC0-9243-39D1-BC43-B7F2E37A3A44> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff404f3000 -     0x7fff40509ffb  com.apple.AssertionServices (1.0 - 1) <3F767D20-FE14-35CF-A089-E0445375ECFB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff40cb9000 -     0x7fff40cc2ff3  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <05CF66F0-9650-3F75-9857-F8D186043866> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff40d66000 -     0x7fff40dd7ffb  com.apple.BaseBoard (360.24 - 360.24) <04AF4372-C5D3-3F0A-A688-68D888D6D138> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff4298c000 -     0x7fff42995fff  com.apple.CommonAuth (4.0 - 2.0) <090893E5-BB65-39DA-A174-EAB2C7191EFE> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff436a6000 -     0x7fff436bafff  com.apple.CoreEmoji (1.0 - 69.19.8) <26BC0F82-08C1-3EBD-9299-D3CC5091C467> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff43c90000 -     0x7fff43d02ff7  com.apple.CoreNLP (1.0 - 130.15.22) <D0A3E880-CDEA-360A-9838-220D76BAECC6> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff44a99000 -     0x7fff44a9dff7  com.apple.DSExternalDisplay (3.1 - 380) <76449D22-BA27-3FB1-AD25-A290936E6DEA> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff45dc2000 -     0x7fff461eafff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <41218EB7-19C9-3813-A793-B0623387CADF> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff4b1b7000 -     0x7fff4b1bcff7  com.apple.GPUWrangler (3.28.4 - 3.28.4) <7E06C75D-5502-3F1D-987C-4F103917CD85> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff4c027000 -     0x7fff4c036fff  com.apple.GraphVisualizer (1.0 - 5) <CAFE626E-9738-3C14-88AA-B6A9182F2C39> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff4c187000 -     0x7fff4c1fcfff  com.apple.Heimdal (4.0 - 2.0) <D99FF31F-6310-3D80-8AE3-64934385AC11> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff4d5ec000 -     0x7fff4d5f3ffb  com.apple.IOAccelerator (404.2.2 - 404.2.2) <2F099589-DBE9-3442-AC93-F4AB363482A0> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff4d5f7000 -     0x7fff4d610fff  com.apple.IOPresentment (1.0 - 42.6) <F7E91CC9-E4BB-3904-8647-0473E3BCAF70> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff4dd23000 -     0x7fff4de1afff  com.apple.LanguageModeling (1.0 - 159.15.15) <34609F31-4DA1-3881-8947-85BEA7AFC938> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff4de1b000 -     0x7fff4de5cff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <07E008F3-E823-333B-8B41-A46024AB0561> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff4de63000 -     0x7fff4de69ff7  com.apple.LinguisticData (1.0 - 238.23.4) <F6AA7095-3975-3C76-9833-BBE955EFEBD7> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff4ebc6000 -     0x7fff4ebeeffb  com.apple.spotlight.metadata.utilities (1.0 - 1191.53) <2CFFD786-87A5-3629-B5E1-8E4DEF51ADA8> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff4ebef000 -     0x7fff4ec81fff  com.apple.gpusw.MetalTools (1.0 - 1) <C0489BBD-C25C-33E5-84CD-8A50205080A0> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff4eed5000 -     0x7fff4eeffff7  com.apple.MultitouchSupport.framework (2410.5 - 2410.5) <3A712911-F672-3BB3-B62B-A2A7BADF3578> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff4f172000 -     0x7fff4f17dfff  com.apple.NetAuth (6.2 - 6.2) <A6474ABC-FD4B-3A8F-AB33-7AACEEED7F0E> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff4fa4a000 -     0x7fff4faa0fff  com.apple.OTSVG (1.0 - ???) <F020144A-D840-390D-A87F-29E8095C78AF> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff5578f000 -     0x7fff55a41ff3  com.apple.SkyLight (1.600.0 - 337.5) <B18B2F6F-F44B-3B5B-8DA1-3B8977E59240> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff57616000 -     0x7fff57623ffb  com.apple.TCC (1.0 - 1) <81F88B91-49C1-36E7-8A39-C4BD654EE942> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff5960a000 -     0x7fff5960cff3  com.apple.loginsupport (1.0 - 1) <67BC49D6-320F-33ED-912E-16E5A342F385> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff598c7000 -     0x7fff598fffff  libCRFSuite.dylib (41.15.4) <92752A96-D1CF-3CA1-837A-1E075AE4C642> /usr/lib/libCRFSuite.dylib\r\n    0x7fff59902000 -     0x7fff5990dff7  libChineseTokenizer.dylib (28.15.3) <55572692-4918-3C54-AD35-726E03EC47D5> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff5999e000 -     0x7fff5999fff7  libDiagnosticMessagesClient.dylib (107) <15210AC0-61F9-3F9D-A159-A009F62EB537> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff599d6000 -     0x7fff59b99ff7  libFosl_dynamic.dylib (18.3.2) <D67B74E9-EB95-38BC-995C-5F4CC044C3F7> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff59bef000 -     0x7fff59c0eff7  libMobileGestalt.dylib (645.220.9) <C2C55511-993B-34D2-9040-902BFDA38141> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff59c0f000 -     0x7fff59c0ffff  libOpenScriptingUtil.dylib (179) <441A2E60-5D5C-3567-9B00-AA22E6EE5358> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff59d50000 -     0x7fff59d51ffb  libSystem.B.dylib (1252.200.5) <C6201660-5E17-397D-BA21-C503420CD706> /usr/lib/libSystem.B.dylib\r\n    0x7fff59ddb000 -     0x7fff59ddcfff  libThaiTokenizer.dylib (2.15.1) <F09EB0BB-1E8A-3391-BEF5-7D91F0715A62> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff59def000 -     0x7fff59e05ffb  libapple_nghttp2.dylib (1.24.1) <71C126C5-D869-3E67-9778-058FA7F3CA74> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff59e06000 -     0x7fff59e2fffb  libarchive.2.dylib (54.200.3) <32B8634D-E465-3F6D-B254-A20D44504508> /usr/lib/libarchive.2.dylib\r\n    0x7fff59eb3000 -     0x7fff59eb3ff3  libauto.dylib (187) <003DEF68-0C59-3AFB-A7B7-A1B5ED301AF2> /usr/lib/libauto.dylib\r\n    0x7fff59f8a000 -     0x7fff59f9aff3  libbsm.0.dylib (39.200.18) <58A9ACEC-BF46-3A4E-86F5-3DD9AD7095B4> /usr/lib/libbsm.0.dylib\r\n    0x7fff59f9b000 -     0x7fff59fa9fff  libbz2.1.0.dylib (38.200.3) <4DEC3797-087F-3C8D-815B-48E895813251> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff59faa000 -     0x7fff5a001ff7  libc++.1.dylib (400.9.4) <B260AC33-EB9A-30C6-8746-D011B3B02B08> /usr/lib/libc++.1.dylib\r\n    0x7fff5a002000 -     0x7fff5a017fff  libc++abi.dylib (400.17) <446F4748-8A89-3D2E-AE1C-27EEBE93A8AB> /usr/lib/libc++abi.dylib\r\n    0x7fff5a018000 -     0x7fff5a018ff3  libcharset.1.dylib (51.200.6) <43F7E100-F5D1-36AB-A26E-CF94196A19C0> /usr/lib/libcharset.1.dylib\r\n    0x7fff5a019000 -     0x7fff5a029ffb  libcmph.dylib (6.15.1) <CEDA6538-C071-3B5A-948E-DF61E2878983> /usr/lib/libcmph.dylib\r\n    0x7fff5a02a000 -     0x7fff5a042ffb  libcompression.dylib (52.200.13) <05A2A91B-D24D-39E8-A071-261CBC5BB158> /usr/lib/libcompression.dylib\r\n    0x7fff5a2ed000 -     0x7fff5a303fff  libcoretls.dylib (155.220.1) <1229F9EA-C070-3D03-9DC6-F548C59F9FD5> /usr/lib/libcoretls.dylib\r\n    0x7fff5a304000 -     0x7fff5a305ff3  libcoretls_cfhelpers.dylib (155.220.1) <33661841-3C3B-3608-86AC-C88D1CD6FE98> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff5a97c000 -     0x7fff5a9d3ffb  libcups.2.dylib (462.10) <29B6D106-A5F2-321D-8916-90F595545D88> /usr/lib/libcups.2.dylib\r\n    0x7fff5ab0b000 -     0x7fff5ab0bfff  libenergytrace.dylib (17.200.1) <F5BA8134-16F9-31CD-90E1-D1EBEBADA4AE> /usr/lib/libenergytrace.dylib\r\n    0x7fff5ab3d000 -     0x7fff5ab42ff7  libgermantok.dylib (17.15.2) <9381B152-5CFD-3D23-A5A7-4D64EE55B85E> /usr/lib/libgermantok.dylib\r\n    0x7fff5ab43000 -     0x7fff5ab48ff7  libheimdal-asn1.dylib (520.220.2) <D851A47D-E162-35F8-B8D4-6ABEA7FFDAD7> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff5ab74000 -     0x7fff5ac65ff7  libiconv.2.dylib (51.200.6) <9FB95807-7C62-32B7-A19F-946D7FB7CCA6> /usr/lib/libiconv.2.dylib\r\n    0x7fff5ac66000 -     0x7fff5aec9ffb  libicucore.A.dylib (62109.0.1) <FEB89BD3-79C4-3208-A754-7E6BC4D38548> /usr/lib/libicucore.A.dylib\r\n    0x7fff5af16000 -     0x7fff5af17fff  liblangid.dylib (128.15.1) <663D0A24-7260-31D1-9BFE-74D67B6F72F6> /usr/lib/liblangid.dylib\r\n    0x7fff5af18000 -     0x7fff5af30fff  liblzma.5.dylib (10.200.3) <9A52A949-0CB1-39B6-9244-D079FB609559> /usr/lib/liblzma.5.dylib\r\n    0x7fff5af48000 -     0x7fff5aff8fff  libmecab.1.0.0.dylib (779.24.1) <590BC39C-2A3E-368B-9499-C808B84C4955> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff5aff9000 -     0x7fff5b236ff7  libmecabra.dylib (779.24.1) <22BFD5A8-EA42-3DC3-8910-F27DCFB1B631> /usr/lib/libmecabra.dylib\r\n    0x7fff5b40e000 -     0x7fff5b766ffb  libnetwork.dylib (1229.240.1) <F99593DA-3089-3008-BE5B-5AC096EBF3A3> /usr/lib/libnetwork.dylib\r\n    0x7fff5b7f8000 -     0x7fff5bf7efe7  libobjc.A.dylib (750.1) <804715F4-F52D-34D0-8FEC-A25DC08513C3> /usr/lib/libobjc.A.dylib\r\n    0x7fff5bf91000 -     0x7fff5bf95ffb  libpam.2.dylib (22.200.1) <85253002-89F2-3872-9C8A-1801303A2EBB> /usr/lib/libpam.2.dylib\r\n    0x7fff5bf98000 -     0x7fff5bfceff7  libpcap.A.dylib (79.200.4) <6D25197A-2F7C-3147-A45A-F6F13E55909F> /usr/lib/libpcap.A.dylib\r\n    0x7fff5c0e8000 -     0x7fff5c100ffb  libresolv.9.dylib (65.200.2) <A1A77B4E-1AF0-3039-9945-D05440494E00> /usr/lib/libresolv.9.dylib\r\n    0x7fff5c154000 -     0x7fff5c32bfe7  libsqlite3.dylib (274.22) <B30E3B7E-E22E-37A0-A3EB-EA333ADEE13E> /usr/lib/libsqlite3.dylib\r\n    0x7fff5c5b8000 -     0x7fff5c5bbffb  libutil.dylib (51.200.4) <10C5E165-0939-363A-9D13-7076F3B513EC> /usr/lib/libutil.dylib\r\n    0x7fff5c5bc000 -     0x7fff5c5c9fff  libxar.1.dylib (404) <16E875B3-CF89-3059-87BB-36D301B32E7B> /usr/lib/libxar.1.dylib\r\n    0x7fff5c5ce000 -     0x7fff5c6b1fff  libxml2.2.dylib (32.8) <3E7875AC-3195-3800-AC48-8AA3B7BE51E4> /usr/lib/libxml2.2.dylib\r\n    0x7fff5c6b2000 -     0x7fff5c6daff3  libxslt.1.dylib (16.1) <D6EBFEBB-F88E-398F-B1B5-66F413C2CD32> /usr/lib/libxslt.1.dylib\r\n    0x7fff5c6db000 -     0x7fff5c6edffb  libz.1.dylib (70.200.4) <15F7B40A-424C-33BB-BF2C-7E8195128B78> /usr/lib/libz.1.dylib\r\n    0x7fff5c75e000 -     0x7fff5c762ff3  libcache.dylib (81) <704331AC-E43D-343A-8C24-39201142AF27> /usr/lib/system/libcache.dylib\r\n    0x7fff5c763000 -     0x7fff5c76dff3  libcommonCrypto.dylib (60118.220.1) <9C865644-EE9A-3662-AB77-7C8A5E561784> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff5c76e000 -     0x7fff5c775fff  libcompiler_rt.dylib (63.4) <817772E3-E836-3FFD-A39B-BDCD1C357221> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff5c776000 -     0x7fff5c77fff3  libcopyfile.dylib (146.200.3) <5C5C4F35-DAB7-3CF1-940F-F47192AB8289> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff5c780000 -     0x7fff5c804fdf  libcorecrypto.dylib (602.230.1) <C78D1A87-5543-3561-BEB4-3B480BA94ECB> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff5c88b000 -     0x7fff5c8c5ff7  libdispatch.dylib (1008.220.2) <2FDB1401-5119-3DF0-91F5-F4E105F00CD7> /usr/lib/system/libdispatch.dylib\r\n    0x7fff5c8c6000 -     0x7fff5c8f5ff3  libdyld.dylib (655.1) <90C801E7-5D05-37A8-810C-B58E8C53953A> /usr/lib/system/libdyld.dylib\r\n    0x7fff5c8f6000 -     0x7fff5c8f6ffb  libkeymgr.dylib (30) <A4EFD9A4-2EF3-3E18-B325-F527E3821939> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff5c8f7000 -     0x7fff5c903ff7  libkxld.dylib (4903.241.1) <D039B38D-E8E6-3011-94F5-A21CD3D59526> /usr/lib/system/libkxld.dylib\r\n    0x7fff5c904000 -     0x7fff5c904ff7  liblaunch.dylib (1336.240.2) <D5F0014D-CF46-3B04-9DE0-A1466DA14A2C> /usr/lib/system/liblaunch.dylib\r\n    0x7fff5c905000 -     0x7fff5c90afff  libmacho.dylib (921) <6ADB99F3-D142-3A0A-B3CE-031354766ACC> /usr/lib/system/libmacho.dylib\r\n    0x7fff5c90b000 -     0x7fff5c90dffb  libquarantine.dylib (86.220.1) <58524FD7-63C5-38E0-9D90-845A79551C14> /usr/lib/system/libquarantine.dylib\r\n    0x7fff5c90e000 -     0x7fff5c90fff3  libremovefile.dylib (45.200.2) <BA53CA8A-9974-3A43-9265-B110B1AE470F> /usr/lib/system/libremovefile.dylib\r\n    0x7fff5c910000 -     0x7fff5c927ff3  libsystem_asl.dylib (356.200.4) <33C62769-1242-3BC1-9459-13CBCDECC7FE> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff5c928000 -     0x7fff5c928fff  libsystem_blocks.dylib (73) <152EDADF-7D94-35F2-89B7-E66DCD945BBA> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff5c929000 -     0x7fff5c9b1fff  libsystem_c.dylib (1272.200.26) <D6C701A2-9F17-308D-B6AC-9E17EF31B7DF> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff5c9b2000 -     0x7fff5c9b5ff7  libsystem_configuration.dylib (963.200.27) <94898525-ECC8-3CC9-B312-CBEAAC305E32> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff5c9b6000 -     0x7fff5c9b9ff7  libsystem_coreservices.dylib (66) <10818C17-70E1-328E-A3E3-C3EB81AEC590> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff5c9ba000 -     0x7fff5c9c0ffb  libsystem_darwin.dylib (1272.200.26) <07468CF7-982F-37C4-83D0-D5E602A683AA> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff5c9c1000 -     0x7fff5c9c7ff7  libsystem_dnssd.dylib (878.240.1) <5FEA5E1E-E80F-3616-AD33-8E936D61F31A> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff5c9c8000 -     0x7fff5ca14ff3  libsystem_info.dylib (517.200.9) <54B65F21-2E93-3579-9B72-6637A03245D9> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff5ca15000 -     0x7fff5ca3dff7  libsystem_kernel.dylib (4903.241.1) <CA10BC3A-5B09-32CE-B74F-BAD01755AA37> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff5ca3e000 -     0x7fff5ca89ff7  libsystem_m.dylib (3158.200.7) <AF25F8E8-194C-314F-A2D3-A424853EE796> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff5ca8a000 -     0x7fff5caaeff7  libsystem_malloc.dylib (166.220.1) <4777DC06-F9C6-356E-82AB-86A1C6D62F3A> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff5caaf000 -     0x7fff5cabaff3  libsystem_networkextension.dylib (767.240.1) <4DB0D4A2-83E7-3638-AAA0-39CECD5C25F8> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff5cabb000 -     0x7fff5cac2fff  libsystem_notify.dylib (172.200.21) <65B3061D-41D7-3485-B217-A861E05AD50B> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff5cac3000 -     0x7fff5caccfef  libsystem_platform.dylib (177.200.16) <83DED753-51EC-3B8C-A98D-883A5184086B> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff5cacd000 -     0x7fff5cad7fff  libsystem_pthread.dylib (330.230.1) <80CC5992-823E-327E-BB6E-9D4568B84161> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff5cad8000 -     0x7fff5cadbff7  libsystem_sandbox.dylib (851.230.3) <D6469A17-C13C-3538-A300-D6517BB7F249> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff5cadc000 -     0x7fff5cadeff3  libsystem_secinit.dylib (30.220.1) <5964B6D2-19D4-3CF9-BDBC-4EB1D42348F1> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff5cadf000 -     0x7fff5cae6ff7  libsystem_symptoms.dylib (820.237.2) <487E1794-4C6E-3B1B-9C55-95B1A5FF9B90> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff5cae7000 -     0x7fff5cafcff7  libsystem_trace.dylib (906.220.1) <4D4BA88A-FA32-379D-8860-33838723B35F> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff5cafe000 -     0x7fff5cb03ffb  libunwind.dylib (35.4) <EF1A77FD-A86B-39F5-ABEA-6100AB23583A> /usr/lib/system/libunwind.dylib\r\n    0x7fff5cb04000 -     0x7fff5cb34fff  libxpc.dylib (1336.240.2) <EE0CDA53-6FF9-3B4E-A571-335A5FF6B6F4> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 57080\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=340.7M resident=0K(0%) swapped_out_or_unallocated=340.7M(100%)\r\nWritable regions: Total=114.9M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=114.9M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        2 \r\nDispatch continuations            8192K        2 \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                            42.6M       11 \r\nMALLOC guard page                   16K        5 \r\nMALLOC_LARGE (reserved)            9.9M        2         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.1M       25 \r\nStack                             19.2M       25 \r\nVM_ALLOCATE                       18.9G      728 \r\nVM_ALLOCATE (reserved)              68K        3         reserved VM address space (unallocated)\r\n__DATA                            16.4M      194 \r\n__FONT_DATA                          4K        2 \r\n__LINKEDIT                       218.0M       11 \r\n__TEXT                           122.6M      198 \r\n__UNICODE                          564K        2 \r\nmapped file                       94.8M      577 \r\nshared memory                       48K        6 \r\n===========                     =======  ======= \r\nTOTAL                             19.4G     1778 \r\nTOTAL, minus reserved VM space    19.4G     1778 \r\n\r\nModel: MacBookAir7,2, BootROM 182.0.0.0.0, 2 processors, Intel Core i5, 1.6 GHz, 4 GB, SMC 2.27f2\r\nGraphics: Intel HD Graphics 6000, Intel HD Graphics 6000, Built-In\r\nMemory Module: BANK 0/DIMM0, 2 GB, DDR3, 1600 MHz, 0x80AD, 0x483943434E4E4E384A544D4C41522D4E544D\r\nMemory Module: BANK 1/DIMM0, 2 GB, DDR3, 1600 MHz, 0x80AD, 0x483943434E4E4E384A544D4C41522D4E544D\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x117), Broadcom BCM43xx 1.0 (7.77.61.1 AirPortDriverBrcmNIC-1305.2)\r\nBluetooth: Version 6.0.10f1, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nSerial ATA Device: APPLE SSD SM0128G, 121.33 GB\r\nUSB Device: USB 3.0 Bus\r\nUSB Device: Internal Memory Card Reader\r\nUSB Device: BRCM20702 Hub\r\nUSB Device: Bluetooth USB Host Controller\r\nThunderbolt Bus: MacBook Air, Apple Inc., 27.2\r\n","Url":"https://github.com/dotnet/cli/issues/11009","RelatedDescription":"Closed issue \"dotnet quits unexpectedly on mac os\" (#11009)"},{"Id":"423464116","IsPullRequest":true,"CreatedAt":"2019-03-21T22:39:24","Actor":"livarcocc","Number":"10998","RawContent":null,"Title":"Update branding to 2.2.300","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10998","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.300\" (#10998)"},{"Id":"423463722","IsPullRequest":true,"CreatedAt":"2019-03-21T22:38:40","Actor":"livarcocc","Number":"10997","RawContent":null,"Title":"Update branding to 2.1.7xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10997","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.7xx\" (#10997)"},{"Id":"422695219","IsPullRequest":true,"CreatedAt":"2019-03-21T22:38:25","Actor":"dotnet-maestro[bot]","Number":"10991","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190317.10\r\n- **Date Produced**: 3/18/2019 7:14 AM\r\n- **Commit**: de7be3ba62b92e5c48c36876c851a14f154444af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190320.2\r\n- **Date Produced**: 3/20/2019 5:43 PM\r\n- **Commit**: f70fa34786cff993625a4548ae0125335eabe82e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19170.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10991","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10991)"},{"Id":"423577885","IsPullRequest":false,"CreatedAt":"2019-03-21T18:31:59","Actor":"ashishnegi","Number":"11005","RawContent":null,"Title":"Understanding use of Nuget.exe in restore command","State":"closed","Body":"From documentation of [dotnet restore](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore?tabs=netcore2x), it says:\r\n\r\n>The dotnet restore command uses NuGet to restore dependencies \r\n\r\nDoes `dotnet`\r\n* uses `nuget.exe` found in `PATH` or \r\n* ships `nuget.exe` with itself or \r\n* consumes nuget as library in dotnet binary ?\r\n\r\nI need this information to understand if failure of dotnet restore can be changes in my `PATH` corruption or not ?","Url":"https://github.com/dotnet/cli/issues/11005","RelatedDescription":"Closed issue \"Understanding use of Nuget.exe in restore command\" (#11005)"},{"Id":"423853618","IsPullRequest":false,"CreatedAt":"2019-03-21T17:28:20","Actor":"JeremyMorton","Number":"11006","RawContent":null,"Title":"DotnetCliTool references don't work if BaseIntermediateOutputPath is changed in a Directory.Build.props file.","State":"open","Body":"## Steps to reproduce\r\nI have a hard time coming up with a public repro, since I don't know of public DotnetCliTools; I'm hitting this with an internal one.\r\n\r\nI tried debugging dotnet.exe, but build.cmd doesn't make a dotnet.pdb and I can't build in VS nor Rider in order to be able to run under a debugger (nor does `dotnet build` work, ironically).\r\n\r\n* Add a reference to a DotnetCliTool and a target to run it to your .csproj:\r\n```XML\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"MyDotnetCliTool\" Version = \"1.0.0\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"RunMyDotnetCliToolForTargetFramework\" DependsOnTargets=\"RunMyDotnetCliTool\" BeforeTargets=\"BeforeBuild\" Condition=\"'$(TargetFrameworks)' == ''\" />\r\n  <Target Name=\"RunMyDotnetCliToolForTargetFrameworks\" DependsOnTargets=\"RunMyDotnetCliTool\" BeforeTargets=\"DispatchToInnerBuilds\" Condition=\"'$(TargetFrameworks)' != ''\" />\r\n  <Target Name=\"RunMyDotnetCliTool\">\r\n    <Exec WorkingDirectory=\"$(MSBuildProjectDirectory)\" Command=\"dotnet -d mydotnetclitool\" />\r\n    <Message Text=\"Ran dotnet -d mydotnetclitool\" Importance=\"High\" />\r\n  </Target>\r\n```\r\n* Run `dotnet build` and it will find and run `dotnet -d mydotnetclitool` successfully.\r\n* *IMPORTANT* Delete the `obj` subdirectory that the above, successful run created.\r\n* Create a Directory.Build.props, as that is the mechanism to override BaseIntermediateOutputPath.\r\n```XML\r\n<Project>\r\n  <PropertyGroup>\r\n    <BaseIntermediateOutputPath>c:/build_directories/obj/</BaseIntermediateOutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n* Create the `c:/build_directories/obj/` directory.\r\n* Run `dotnet build` and it will fail to find `dotnet-mydotnetclitool.dll` when it tries to run `dotnet -d mydotnetclitool`\r\n\r\n## Expected  behavior\r\nThat it finds the `dotnet-mydotnetclitool.dll` that the DotnetCliToolReference brought down to the machine.\r\n```\r\n  Persisting no-op dg to C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.nuget.dgspec.json\r\n  Restore completed in 829.89 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Restore completed in 902.96 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Telemetry is: Enabled\r\n  projectfactory: MSBUILD_EXE_PATH = C:\\Program Files\\dotnet\\sdk\\2.2.104\\MSBuild.dll\r\n  projectfactory: MSBuild project path = C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj\r\n  projecttoolscommandresolver: resolving commandspec from 1 Tool Libraries.\r\n  projecttoolscommandresolver: Attempting to resolve command spec from tool MyDotnetCliTool\r\n  projecttoolscommandresolver: nuget packages root:\r\n  - C:\\Users\\jmorton\\.nuget\\packages\\\r\n  - C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\r\n  projecttoolscommandresolver: found tool lockfile at : C:\\Users\\jmorton\\.nuget\\packages\\.tools\\MyDotnetCliTool\\1.0.0\\netcoreapp2.2\\project.assets.json\r\n  projecttoolscommandresolver: expect deps.json at: C:\\Users\\jmorton\\.nuget\\packages\\.tools\\MyDotnetCliTool\\1.0.0\\netcoreapp2.2\\MyDotnetCliTool.deps.json\r\n  projecttoolscommandresolver: attempting to create commandspec\r\n  packagedcommandspecfactory: attempting to find command dotnet-mydotnetclitool in MyDotnetCliTool\r\n  PackagedCommandSpecFactory: Looking for prefercliruntime file at `C:\\Users\\jmorton\\.nuget\\packages\\MyDotnetCliTool\\1.0.0\\lib\\netcoreapp2.0\\..\\..\\prefercliruntime`\r\n  Running C:\\Program Files\\dotnet\\dotnet.exe exec --depsfile C:\\Users\\jmorton\\.nuget\\packages\\.tools\\MyDotnetCliTool\\1.0.0\\netcoreapp2.2\\MyDotnetCliTool.deps.json --additionalprobingpath C:\\Users\\jmorton\\.nuget\\packages --additionalprobingpath \"c:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\" C:\\Users\\jmorton\\.nuget\\packages\\MyDotnetCliTool\\1.0.0\\lib\\netcoreapp2.0\\dotnet-mydotnetclitool.dll\r\n  Process ID: 12708\r\n  Ran dotnet -d mydotnetclitool\r\n  Project1 -> C:\\projects\\MyProgram\\src\\Project1\\Project1\\bin\\Debug\\netcoreapp2.1\\Project1.dll\r\n```\r\n\r\n## Actual behavior\r\nIt fails to find `dotnet-mydotnetclitool.dll` if, and only if, the `dotnet restore` was ran with `BaseIntermediateOutputPath` redirected to another location:\r\n```\r\n  Persisting no-op dg to C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.nuget.dgspec.json\r\n  Restore completed in 829.89 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Restore completed in 902.96 ms for C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj.\r\n  Telemetry is: Enabled\r\n  projectfactory: MSBUILD_EXE_PATH = C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\MSBuild.dll\r\n  projectfactory: MSBuild project path = C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj\r\n  projecttoolscommandresolver: resolving commandspec from 1 Tool Libraries.\r\n  projecttoolscommandresolver: Attempting to resolve command spec from tool MyDotnetCliTool\r\n  projecttoolscommandresolver: nuget packages root:\r\n\r\n  projecttoolscommandresolver: failed to resolve commandspec from library.\r\n  Microsoft.DotNet.Cli.Utils.CommandUnknownException: No executable found matching command \"dotnet-mydotnetclitool\". See https://aka.ms/missing-command for more information.\r\n     at Microsoft.DotNet.CommandFactory.CommandFactoryUsingResolver.Create(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n     at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n     at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\nC:\\projects\\MyProgram\\src\\Project1\\Project1.csproj(126,5): error MSB3073: The command \"dotnet -d mydotnetclitool\" exited with code 1. [C:\\projects\\MyProgram\\src\\Project1\\Project1.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\nThis also occurred without a global.json:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/11006","RelatedDescription":"Open issue \"DotnetCliTool references don't work if BaseIntermediateOutputPath is changed in a Directory.Build.props file.\" (#11006)"},{"Id":"423531889","IsPullRequest":true,"CreatedAt":"2019-03-21T00:41:45","Actor":"mlorbetske","Number":"11004","RawContent":null,"Title":"[WIP] Convert from using Newtonsoft.Json for reading launchSettings.json to System.Text.Json","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11004","RelatedDescription":"Open PR \"[WIP] Convert from using Newtonsoft.Json for reading launchSettings.json to System.Text.Json\" (#11004)"},{"Id":"423519365","IsPullRequest":true,"CreatedAt":"2019-03-20T23:41:21","Actor":"wli3","Number":"11002","RawContent":null,"Title":"Move to System.Text.Json for local global tools","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11002","RelatedDescription":"Open PR \"Move to System.Text.Json for local global tools\" (#11002)"},{"Id":"423519068","IsPullRequest":true,"CreatedAt":"2019-03-20T23:40:21","Actor":"wli3","Number":"11001","RawContent":null,"Title":"Bcl.json better commit","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11001","RelatedDescription":"Closed or merged PR \"Bcl.json better commit\" (#11001)"},{"Id":"423486374","IsPullRequest":true,"CreatedAt":"2019-03-20T22:53:43","Actor":"nguerrera","Number":"10999","RawContent":null,"Title":"Clean up package references for source build","State":"closed","Body":"* Remove package references that aren't needed\r\n* Move hard-coded versions to eng\\Versions.props","Url":"https://github.com/dotnet/cli/pull/10999","RelatedDescription":"Closed or merged PR \"Clean up package references for source build\" (#10999)"},{"Id":"423507694","IsPullRequest":true,"CreatedAt":"2019-03-20T22:53:37","Actor":"LordMike","Number":"11000","RawContent":null,"Title":"Add solution folder argument to dotnet-sln add","State":"open","Body":"I've begun work on the first half of what I think \"dotnet-sln add\" should be allowed to do:\r\n\r\n- Target arbitrary solution folders within an SLN\r\n- Add arbitrary files as solution-level files, and not just projects\r\n\r\nIf possible, I'd like some feedback before proceeding to add the ability for \"dotnet-sln add\" to add arbitrary files. So, I suppose this is kind of a WIP which isn't exactly preferable... Sorry about that.\r\n\r\nIs there a test project for \"dotnet sln\" ?\r\n\r\nRelated issues:\r\n- Issue https://github.com/dotnet/cli/issues/8678, which discuses a \"add\" feature that allows arbitrary files to be added; where I outline my intended commandline layout\r\n- PR https://github.com/dotnet/cli/pull/10873, which touches on a similar subject, but also adds a unit test project. Naming between that PR, and this one, should be coordinated.","Url":"https://github.com/dotnet/cli/pull/11000","RelatedDescription":"Open PR \"Add solution folder argument to dotnet-sln add\" (#11000)"},{"Id":"422986481","IsPullRequest":true,"CreatedAt":"2019-03-20T20:37:07","Actor":"livarcocc","Number":"10993","RawContent":null,"Title":"Update branding to 2.2.203","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10993","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.203\" (#10993)"},{"Id":"422986019","IsPullRequest":true,"CreatedAt":"2019-03-20T20:36:56","Actor":"livarcocc","Number":"10992","RawContent":null,"Title":"Update branding to 2.1.603","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10992","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.603\" (#10992)"},{"Id":"423314749","IsPullRequest":false,"CreatedAt":"2019-03-20T17:29:00","Actor":"polterguy","Number":"10996","RawContent":null,"Title":"Support for generate command","State":"closed","Body":"Somebody sent me a pull request to my [own repo](https://github.com/polterguy/magic) supplying a CLI template file, and I started playing around with the CLI arguably for the first time really studying it myself, and I quickly realized the beauty of the dotnet CLI project, allowing me to among other things _\"generate\"_ entire solution/project structures, etc.\r\n\r\nHowever, as I look through the project, I realize at least for my own purposes, how extremely useful it would be to have something resembling _\"ng generate\"_ in the dotnet CLI, which unfortunately doesn't seem to exist at the moment.\r\n\r\nFor instance for my personal usage in [Magic](https://github.com/polterguy/magic), being able to _\"generate\"_ new controllers/services/etc by using the dotnet CLI, would significantly reduce the pain associated with adding to the existing code base of a Magic project.\r\n\r\nTo create a new domain type in Magic for instance, requires to create a new service, a new service interface, a new controller endpoint, and the database model + the view model. Plus (possibly) also new projects for each of the previously mentioned classes/interfaces. If the CLI could simply _\"automagically\"_ create this for me, and my users, and either associate with existing project, and/or create new projects and associate the solution with - Obviously a lot of time would be saved in this process ...\r\n\r\nBasically, what I am looking for, is something similar to `ng generate`, which allows the developer to generate components, etc - Hopefully implemented in such a way that I could extend it myself somehow, to work with my own Magic project ...\r\n\r\n* Is this something that has been considered implement in the dotnet CLI?\r\n* If not, why?\r\n* Is it possible to create as my own plugin to the CLI?\r\n* Would you possibly be willing to accept a pull request, if I actually went forth and implemented such commands myself, assuming it's generic in nature, good solid code, obeys by your coding standard, and not in any ways _\"hard coded\"_ towards my own baby (Magic) ...?\r\n\r\nThx,\r\n\r\n.t","Url":"https://github.com/dotnet/cli/issues/10996","RelatedDescription":"Closed issue \"Support for generate command\" (#10996)"},{"Id":"423127451","IsPullRequest":false,"CreatedAt":"2019-03-20T08:36:33","Actor":"leighghunt","Number":"10995","RawContent":null,"Title":"Build fails with 'MSB3552: Resource file \"**/*.resx\" cannot be found.' on Mac when folders with windows like paths exist in project folder","State":"open","Body":"## Steps to reproduce\r\n- Create a new console application\r\n- Create a folder named `D:\\Processed` within the project directory\r\n- Build the project\r\n\r\n## Expected  behavior\r\n- Successful build\r\n\r\n## Actual behavior\r\n- Build fails.\r\n```\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.12 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.102/Microsoft.Common.CurrentVersion.targets(3049,5): error MSB3552: Resource file \"**/*.resx\" cannot be found. [/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\nComplete work through of issue from scratch:\r\n```\r\n✔ ~/dev/test \r\n21:30 $ mkdir dotnet-cli-build-error\r\n✔ ~/dev/test \r\n21:30 $ cd dotnet-cli-build-error/\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:30 $ dotnet new console\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj...\r\n  Restoring packages for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj...\r\n  Generating MSBuild file /Users/leigh/dev/test/dotnet-cli-build-error/obj/dotnet-cli-build-error.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/leigh/dev/test/dotnet-cli-build-error/obj/dotnet-cli-build-error.csproj.nuget.g.targets.\r\n  Restore completed in 197.37 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n\r\nRestore succeeded.\r\n\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:30 $ dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.83 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n  dotnet-cli-build-error -> /Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:02.26\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ mkdir D\\:\\\\Processed\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ ls -l\r\ntotal 16\r\ndrwxr-xr-x  2 leigh  staff   64 20 Mar 21:31 D:\\Processed\r\n-rw-r--r--  1 leigh  staff  204 20 Mar 21:30 Program.cs\r\ndrwxr-xr-x  3 leigh  staff   96 20 Mar 21:31 bin\r\n-rw-r--r--  1 leigh  staff  237 20 Mar 21:30 dotnet-cli-build-error.csproj\r\ndrwxr-xr-x  7 leigh  staff  224 20 Mar 21:31 obj\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ dotnet clean; dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 20/03/19 9:31:43 PM.\r\n     1>Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" on node 1 (Clean target(s)).\r\n     1>CoreClean:\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.deps.json\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.runtimeconfig.json\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.runtimeconfig.dev.json\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.pdb\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.csprojAssemblyReference.cache\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.csproj.CoreCompileInputs.cache\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.AssemblyInfoInputs.cache\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.AssemblyInfo.cs\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\".\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.pdb\".\r\n     1>Done Building Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" (Clean target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.49\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.12 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.102/Microsoft.Common.CurrentVersion.targets(3049,5): error MSB3552: Resource file \"**/*.resx\" cannot be found. [/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/2.2.102/Microsoft.Common.CurrentVersion.targets(3049,5): error MSB3552: Resource file \"**/*.resx\" cannot be found. [/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.91\r\n✘-1 ~/dev/test/dotnet-cli-build-error \r\n```\r\n\r\nNote that removal of the folder resolves the issue:\r\n```\r\n21:31 $ rmdir D\\:\\\\Processed/\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ dotnet clean; dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 20/03/19 9:31:56 PM.\r\n     1>Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" on node 1 (Clean target(s)).\r\n     1>CoreClean:\r\n         Deleting file \"/Users/leigh/dev/test/dotnet-cli-build-error/obj/Debug/netcoreapp2.2/dotnet-cli-build-error.csprojAssemblyReference.cache\".\r\n     1>Done Building Project \"/Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj\" (Clean target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.45\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 36.79 ms for /Users/leigh/dev/test/dotnet-cli-build-error/dotnet-cli-build-error.csproj.\r\n  dotnet-cli-build-error -> /Users/leigh/dev/test/dotnet-cli-build-error/bin/Debug/netcoreapp2.2/dotnet-cli-build-error.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.07\r\n✔ ~/dev/test/dotnet-cli-build-error \r\n21:31 $ \r\n\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.102\r\n Commit:    96ff75a873\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.102/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.1 [/usr/local/share/dotnet/sdk]\r\n  1.0.4 [/usr/local/share/dotnet/sdk]\r\n  2.1.4 [/usr/local/share/dotnet/sdk]\r\n  2.2.100-preview3-009430 [/usr/local/share/dotnet/sdk]\r\n  2.2.102 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10995","RelatedDescription":"Open issue \"Build fails with 'MSB3552: Resource file \"**/*.resx\" cannot be found.' on Mac when folders with windows like paths exist in project folder\" (#10995)"},{"Id":"422994622","IsPullRequest":true,"CreatedAt":"2019-03-20T00:48:17","Actor":"wli3","Number":"10994","RawContent":null,"Title":"dotnet list package interactive","State":"closed","Body":"add --interactive flag to dotnet list\r\n\r\ncontinue of https://github.com/dotnet/cli/pull/10721","Url":"https://github.com/dotnet/cli/pull/10994","RelatedDescription":"Closed or merged PR \"dotnet list package interactive\" (#10994)"},{"Id":"422422588","IsPullRequest":false,"CreatedAt":"2019-03-18T21:44:36","Actor":"billwert","Number":"10990","RawContent":null,"Title":"dotnet build does not consider <Optimize> tag for output directory","State":"closed","Body":"When running ```dotnet build``` passing ```-c Release```, the output directory is ```bin\\Release```. If you omit passing ```-c Release``` and instead rely on the ```<Optimize>``` tag, the output directory is ```bin\\Debug```.\r\n\r\n## Steps to reproduce\r\n```dotnet new console```\r\nedit csproj, add ```<Optimize>true</Optimize>``` somewhere\r\n```dotnet build```\r\n\r\n## Expected  behavior\r\nOutput path is Release\r\n\r\n## Actual behavior\r\nOutput path is Debug\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18358\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.1 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10990","RelatedDescription":"Closed issue \"dotnet build does not consider <Optimize> tag for output directory\" (#10990)"},{"Id":"421916098","IsPullRequest":false,"CreatedAt":"2019-03-18T17:47:24","Actor":"patrikbeno","Number":"10988","RawContent":null,"Title":"RestoreLockedMode: Unexpected NU1004 when ProjectReference refers to a project with custom AssemblyName","State":"closed","Body":"## Steps to reproduce\r\n\r\n```xml\r\n<!-- ClassLib1/ClassLib1.csproj -->\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <!-- following line breaks RestoreLockedMode=true -->\r\n    <AssemblyName>CustomName</AssemblyName>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n<!-- ClassLib2/ClassLib2.csproj -->\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\ClassLib1\\ClassLib1.csproj\" />  \r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n```\r\n$ cd ClassLib2\r\n$ dotnet restore -f --use-lock-file\r\n$ dotnet restore -f --locked-mode\r\n```\r\n\r\n## Expected  behavior\r\n\r\n`dotnet restore -f --locked-mode` completes without error.\r\n\r\n## Actual behavior\r\n\r\n```\r\nClassLib2/ClassLib2.csproj : error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file.\r\nRestore failed in 56.35 ms for /solution/ClassLib2/ClassLib2.csproj.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\ntested in latest `dotnet/core/sdk:2.2-alpine` docker image\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     alpine\r\n OS Version:  3.8\r\n OS Platform: Linux\r\n RID:         linux-musl-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.105/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10988","RelatedDescription":"Closed issue \"RestoreLockedMode: Unexpected NU1004 when ProjectReference refers to a project with custom AssemblyName\" (#10988)"},{"Id":"422330845","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:13","Actor":"jaredpar","Number":"10989","RawContent":null,"Title":"Error NETSDK1005 temporarily fires when switching TF","State":"open","Body":"## Steps to reproduce\r\n\r\n1. Create a netcoreapp3.0 console application\r\n1. Ensure the error list is visible \r\n1. Open the project file for editing \r\n1. Change the `TargetFramework` value to net472\r\n1. Save All\r\n\r\n## Expected  behavior\r\nNo errors\r\n\r\n## Actual behavior\r\nBriefly a NETSDK1005 error will appear in the error list. It seems to disappear as soon as auto-restore kicks in. \r\n\r\nThis error is causing the Roslyn team issues as it breaks our integration tests. They are keyed to fail on any error and even this transient one is considered. There are work arounds but they end up causing us to more globally suppress NETSDK1005 which we'd like to avoid. \r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10989","RelatedDescription":"Open issue \"Error NETSDK1005 temporarily fires when switching TF\" (#10989)"},{"Id":"421800450","IsPullRequest":true,"CreatedAt":"2019-03-16T12:34:07","Actor":"dotnet-maestro[bot]","Number":"10987","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19165.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10987","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#10987)"},{"Id":"421755124","IsPullRequest":false,"CreatedAt":"2019-03-16T01:37:46","Actor":"swaroop-sridhar","Number":"10986","RawContent":null,"Title":"Supporting third party libraries/frameworks ","State":"open","Body":"Recently, we had enquiries for a customer who wanted to deploy their own custom framework on client machines. This discussion is about possible solutions for this scenario in .Net Core 3.\r\n \r\n## Customer requirements\r\n \r\nThe developer wants to:\r\n* Implement a suite of several libraries, that are used by several client apps.\r\n* Deploy one copy of library-suite on client machines in a central location\r\n* Push updates to the library-suite without having to recompile the client apps\r\n* Is happy to change their library-suite/apps to target .net core 3\r\n \r\nIn particular, the customer specifically asked allowing third party frameworks (similar to standard frameworks like `Microsoft.AspNetCore.App`).\r\n\r\n## Solution Options\r\n \r\n### Additional-deps\r\nThis is a simple solution to separate some of the app’s dependencies to a separate (possible shared) location. This option involves:\r\n* App development: Remove references to the library-suite from the apps, instead use a different light-up option such as startup-hook.\r\n* On client machines: Deploy the library-suite to a shared location, and set up `DOTNET_ADDITIONAL_DEPS` when apps are run.\r\n\r\nAdditional-deps have several known limitations, for example, as noted here.\r\n \r\n### Startup Hook\r\nThis option involves dynamically loading the library-suite into apps during application startup. \r\n* This requires setting `DOTNET_STARTUP_HOOKS` to appropriate loader code on client machines at app-startup. The loader code can then use custom logic to load the library-suite from a possible shared/versioned location.\r\n* This may require some coordination with other parties (ex: profiler) that may use the startup-hook (multiple assemblies can be hooked up at startup).\r\n\r\n### Custom AppHost\r\nThe library developer provides a custom host to be used by the app-developers. The custom host will then setup the appropriate library dependencies during app startup, before starting the runtime.\r\n \r\n### Components\r\nThis option is to load the library-suite as a plugin, where:\r\n* The library-suite exposes a minimal version (similar to reference assemblies) which only exposes the public API, and implements stub code to load the implementation assemblies dynamically.\r\n* Apps build with a package-reference to the suite.\r\nAt runtime, the above stub code loads the actual library code (say, using the AssemblyDependencyResolver), from a possibly shared location.\r\n \r\n### Third-party frameworks\r\nIn this option, the library-suite is published as a framework. This naturally achieves the customer requirements because:\r\n* The library-suite is published as a nuget package that contains:\r\n    * Its reference assemblies\r\n    * A target file that can be imported by the apps to include this suite as an additional target framework\r\n* Apps import/reference the above nuget package and ship independent of the library-suite’s implementation\r\n* The implementation assemblies of the library-suite are installed to `dotnet/shared/<library-suite>/<version>` on client machines. (one-copy shared, versioned location).\r\n \r\nThe above approach is straight-forward for developers to use. However, support for third-party frameworks is not yet officially available. \r\n\r\nI tried out a prototype, and was able to load a custom framework from a shared location (with some work-arounds for issues discussed below).\r\n \r\n### Pending work\r\nHere’s the known required work, there will likely be more as we productize this feature:\r\n* Tooling for adding frameworks: It should easy to add a framework to the list of dependent frameworks published in the `runtimeconfig.json` file (ex: add a framework to `RuntimeFramework` item). However, currently doesn’t work in the CLI because the property is overwritten by one of the build tasks. This should be a straightforward issue to fix.\r\n* Mismatched shared framework versions can cause problems: dotnet/core-setup#4947. This is again a bug that should be fixed.\r\n \r\n### Reservations\r\nWhile we agree that supporting third-party frameworks is useful for developers, there are some reservations about making this feature publicly available in .Net Core 3. The concerns are:\r\n* Bugs: We have a controlled environment with known frameworks. Custom frameworks may trigger unforeseen bugs. It is better to let the multiple-frameworks feature bake with existing framework for a release cycle.\r\n* Framework references: There are unresolved issues with supporting custom framework-references (which are not exposed by using third-party frameworks with package-references).\r\n* Install location:  Unanticipated issues with custom code within `dotnet` install location (`dotnet/shared/…`).\r\n* Design limitation: We have previously excluded custom frameworks from .net core 3. We may redesign the issue in .net core 3.1. But exposing the feature now may create a compatibility requirement, and restrict design options. Note that users may themselves figure out and use custom frameworks – but these are not supported by the `dotnet` org.\r\n \r\n## Discussion\r\n \r\nPlease add your thoughts / considerations about:\r\n* Exposing the possibility of third-party frameworks to customers, say as a sample.\r\n* Any other options to solve the customer scenario.\r\n* Similar usage scenarios\r\n","Url":"https://github.com/dotnet/cli/issues/10986","RelatedDescription":"Open issue \"Supporting third party libraries/frameworks \" (#10986)"},{"Id":"421727930","IsPullRequest":false,"CreatedAt":"2019-03-15T22:34:42","Actor":"MichaelSimons","Number":"10985","RawContent":null,"Title":"'Exec format error' when running global tool on ARM32","State":"open","Body":"Installing a global tool on ARM32 doesn't run.  Fails with `cannot execute binary file: Exec format error`.\r\n\r\n# Repro Steps\r\n1. Requirement - run from an ARM32 machine.  \r\n1. docker run -it --rm mcr.microsoft.com/dotnet/core/sdk:3.0\r\n1. dotnet tool install --tool-path /mytool <some tool>\r\n1. cd /mytool \r\n1. execute installed tool\r\n\r\n# Results\r\n\r\ncannot execute binary file: Exec format error`\r\n\r\n# Expected Results\r\n\r\nThe tool should run\r\n\r\n# Observations\r\n1. I verified this scenario works for 2.1 but not 3.0.\r\n1. The app will run if you path down to the .store/.../tools folder and run dotnet/tool.dll\r\n1. This was discovered with testing installing PowerShell as a global tool - https://github.com/dotnet/dotnet-docker/pull/960#discussion_r266060183.  PowerShell in this case is built against 2.1 but has a custom roll forward policy defined - https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/roll-forward-on-no-candidate-fx.md.  I don't know if that is a factor or not.  It works just find in amd64.\r\n","Url":"https://github.com/dotnet/cli/issues/10985","RelatedDescription":"Open issue \"'Exec format error' when running global tool on ARM32\" (#10985)"},{"Id":"421698028","IsPullRequest":true,"CreatedAt":"2019-03-15T20:46:37","Actor":"Potapy4","Number":"10984","RawContent":null,"Title":"Fix typo","State":"open","Body":"- Rename from `.Net` to `.NET`","Url":"https://github.com/dotnet/cli/pull/10984","RelatedDescription":"Open PR \"Fix typo\" (#10984)"},{"Id":"421627864","IsPullRequest":false,"CreatedAt":"2019-03-15T17:28:51","Actor":"wli3","Number":"10983","RawContent":null,"Title":"Should we unify global tools invocation and local tools invocation","State":"open","Body":"local tools require prefix `dotnet` like `dotnet t-rex` due to technical constrain while global tools only need `t-rex`. The cause tools' author needing extra documentation. Should we also allow global tools be able to invoke by `dotnet t-rex` ?","Url":"https://github.com/dotnet/cli/issues/10983","RelatedDescription":"Open issue \"Should we unify global tools invocation and local tools invocation\" (#10983)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"423998952","IsPullRequest":true,"CreatedAt":"2019-03-22T17:11:38","Actor":"dotnet-maestro[bot]","Number":"1104","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1104)"},{"Id":"422563592","IsPullRequest":false,"CreatedAt":"2019-03-19T06:25:32","Actor":"githubdigo","Number":"1103","RawContent":null,"Title":"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Open issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103)"},{"Id":"421676181","IsPullRequest":true,"CreatedAt":"2019-03-18T19:09:34","Actor":"terrajobst","Number":"1102","RawContent":null,"Title":"Expose RandomNumberGenerator.GetInt32","State":"closed","Body":"Fixes #1101.","Url":"https://github.com/dotnet/standard/pull/1102","RelatedDescription":"Closed or merged PR \"Expose RandomNumberGenerator.GetInt32\" (#1102)"},{"Id":"420975088","IsPullRequest":false,"CreatedAt":"2019-03-18T19:09:34","Actor":"khellang","Number":"1101","RawContent":null,"Title":"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32","State":"closed","Body":"I'd like to propose the inclusion of the new `System.Security.Cryptography.RandomNumberGenerator.GetInt32` APIs, added in https://github.com/dotnet/corefx/pull/31243.\r\n\r\nAs noted in https://github.com/dotnet/corefx/issues/30873, this is often incorrectly implemented, which can lead to security vulnerabilities and bias. It would be nice if it was part of the standard, to have a convenient API for this across all platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex ec34484..2b7d68b 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -810,6 +810,8 @@ namespace System.Security.Cryptography\r\n         public virtual void GetBytes(System.Span<byte> data) { }\r\n         public virtual void GetNonZeroBytes(byte[] data) { }\r\n         public virtual void GetNonZeroBytes(System.Span<byte> data) { }\r\n+        public static int GetInt32(int fromInclusive, int toExclusive) { throw null; }\r\n+        public static int GetInt32(int toExclusive) { throw null; }\r\n     }\r\n     [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n     public abstract partial class RC2 : System.Security.Cryptography.SymmetricAlgorithm\r\n\r\n```\r\n\r\n// @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1101","RelatedDescription":"Closed issue \"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32\" (#1101)"},{"Id":"420728685","IsPullRequest":false,"CreatedAt":"2019-03-13T21:30:55","Actor":"OpenSpacesAndPlaces","Number":"1100","RawContent":null,"Title":"Question....On .Net Framework 4.7 without any SDKs...","State":"open","Body":"I'm currently running into an issue with a hosting company that only has .Net Framework 4.7 installed and no supporting SDKS for netstandard 2.0.\r\n\r\nThe netstandard 2.0. library is needed for EntityFramework Core and SignalR Core.\r\n\r\nThe problem is:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n\r\n- Simply trying to add the 4.7.1. dll results in:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context\r\n\r\n- Pre-compiling/Publish has not helped.\r\n- Attempting to include the required base libraries (the ones .Net Standard would be used to pull in) has not helped.\r\n- Various combinations of assembly rules/config settings has not helped.\r\n\r\n---\r\n\r\nI'm totally fine with hand adding every last nuget package needed if there is a way to redirect the netstandard bindings to the base libraries.\r\n\r\nUnfortunately there is no RDP access to the server - so any fix has to be within the confines of bin folder drops or web.config values.\r\n\r\n---\r\n\r\nAny help appreciated!\r\nAny other details I can provide - let me know!","Url":"https://github.com/dotnet/standard/issues/1100","RelatedDescription":"Open issue \"Question....On .Net Framework 4.7 without any SDKs...\" (#1100)"},{"Id":"419180568","IsPullRequest":false,"CreatedAt":"2019-03-10T17:28:29","Actor":"jinyuttt","Number":"1099","RawContent":null,"Title":"Elliptic Curve Cryptography","State":"closed","Body":"Provide elliptic curve cryptography? ","Url":"https://github.com/dotnet/standard/issues/1099","RelatedDescription":"Closed issue \"Elliptic Curve Cryptography\" (#1099)"},{"Id":"418668244","IsPullRequest":true,"CreatedAt":"2019-03-09T00:32:27","Actor":"stephentoub","Number":"1098","RawContent":null,"Title":"Add dummy field to TypedReference","State":"closed","Body":"cc: @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1098","RelatedDescription":"Closed or merged PR \"Add dummy field to TypedReference\" (#1098)"},{"Id":"418474274","IsPullRequest":false,"CreatedAt":"2019-03-07T22:27:38","Actor":"MgSam","Number":"1097","RawContent":null,"Title":"Change .NET Standard 2.1 version number","State":"closed","Body":"It was just [announced ](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/#) that the next version of .NET Standard will be 2.1, which will be implemented by .NET Core 3.0 and incompatible with .NET Core 2.1 and incompatible with any version of .NET Framework. Got all that?\r\n\r\nI implore you to please change the version number of Standard 2.1 before it's too late. It is extremely confusing to have it be Standard 2.1 which is incompatible with Core 2.1. I strongly feel that Standard should version alongside of Core (given that Core is the lead implementation of .NET) and should be Standard 3.0\r\n\r\nIn lieu of that, at the very least it should get a version number which doesn't actively lead to confusion by aligning with the version number of an incompatible version of Core. Standard 2.5?\r\n\r\nI know Microsoft has a reputation to uphold at being horrible at naming things, but this is a bridge too far :)","Url":"https://github.com/dotnet/standard/issues/1097","RelatedDescription":"Closed issue \"Change .NET Standard 2.1 version number\" (#1097)"},{"Id":"417603266","IsPullRequest":true,"CreatedAt":"2019-03-06T03:17:38","Actor":"terrajobst","Number":"1096","RawContent":null,"Title":"Update information for .NET Standard 2.1","State":"closed","Body":"This updates the version table for .NET Standard 2.1 as well as the API diff.\r\n\r\n/cc @mairaw ","Url":"https://github.com/dotnet/standard/pull/1096","RelatedDescription":"Closed or merged PR \"Update information for .NET Standard 2.1\" (#1096)"},{"Id":"417601953","IsPullRequest":true,"CreatedAt":"2019-03-06T03:11:36","Actor":"terrajobst","Number":"1095","RawContent":null,"Title":"Add footnote regarding .NET Framework 4.6.1 support","State":"closed","Body":"This mirrors what's already in the docs","Url":"https://github.com/dotnet/standard/pull/1095","RelatedDescription":"Closed or merged PR \"Add footnote regarding .NET Framework 4.6.1 support\" (#1095)"},{"Id":"416990675","IsPullRequest":false,"CreatedAt":"2019-03-04T21:01:09","Actor":"tannergooding","Number":"1094","RawContent":null,"Title":"Consider the HWIntrinsic APIs for NS2.1","State":"open","Body":"### Summary\r\n\r\nWe should consider including the Harware Intrinsic APIs as part of `netstandard2.1` given that they are trivial to \"support\" (you just expose the APIs and return `false` for all the `IsSupported` checks, as the shared framework code is already doing), were designed in a way that the feature can be incrementally enabled by a given runtime, are already finding use in the shared framework code, and will allow users to more readily write cross-runtime libraries.\r\n\r\n### Rationale\r\n\r\n`netcoreapp3.0` is adding ~1500 APIs in order to support the new \"Hardware Intrinsics\" feature. These APIs provide support for writing more efficient algorithms that can take advantage of hardware specific functionality.\r\n\r\nWhile the number of APIs exposed may seem daunting, the APIs are hardware specific and were designed such that you must perform the appropriate checks before attempting to use a given API or they will result in a `PlatformNotSupportedException` at runtime. For example, `System.Runtime.Intrinsics.X86.Sse` is a class that exposes the SSE ISA for the x86 and x64 architectures. Before using any of the methods on that class, you must emit an `if (Sse.IsSupported)` check to validate that both the current hardware and the current runtime support this ISA.\r\n\r\nThese API declarations are also part of the existing shared framework code and have a default implementation of returning `false` for the `IsSupported` checks and throwing `PlatformNotSupportedException` from any of the other exposed hardware-specific APIs. This has allowed us to already take a cross-runtime dependency on these intrinsics in places like `SpanHelpers`, `Decimal`, `BitOperations`, `BitArray`, and more.\r\n\r\nGiven the above, I propose that these APIs be included as part of `netstandard2.1` as it will allow general library and application developers to share in the same benefits we have already seen. That is, it will light-up on .NET Core 3.0 and will do nothing on other runtimes. This will avoid the need for them to cross-compile their code in a number of cases.\r\n\r\nFor the runtimes that don't support this functionality yet, they should require somewhere between no and minimal changes. For the most part, they should already be internally compiling these APIs and hitting the `IsSupported=false` paths. So they will ultimately just be exposing these APIs to the end-user and would require no changes. The work that may be required is to ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types have the appropriate ABI dependent type layouts. That is, these types should have the appropriate packing (e.g. `16` for `Vector128<T>` on x86/x64 since it maps to the `__m128` ABI primitive defined by the Windows and System V calling convention specifications).\r\n\r\nExposing this will also allow the various runtimes to have incremental \"light-up\" of these APIs. That is, rather than waiting for the next release to both expose and implement the APIs, they can expose the the APIs as part of `netstandard2.1` and the corresponding version of their runtime (e.g `x.0`). They can then light up individual ISAs and make them available to their users as they see fit (e.g. They could enable just `SSE` in `x.1` and could enable SSE2/SSE3 in `x.2`, etc).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1094","RelatedDescription":"Open issue \"Consider the HWIntrinsic APIs for NS2.1\" (#1094)"},{"Id":"416499863","IsPullRequest":false,"CreatedAt":"2019-03-03T18:13:53","Actor":"proof85","Number":"1093","RawContent":null,"Title":"HashCode to standard","State":"closed","Body":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase","Url":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093)"},{"Id":"414920447","IsPullRequest":false,"CreatedAt":"2019-02-27T02:53:49","Actor":"divega","Number":"1092","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1","State":"open","Body":"This is mainly about adding the API from https://github.com/dotnet/corefx/issues/31595 (commit https://github.com/dotnet/corefx/commit/b30fc2b4ee302e449e3580ae39cb083a76b813c9), plus possibly two additional async method possibly coming from https://github.com/dotnet/corefx/issues/35611, to .NET Standard 2.1.\r\n\r\ncc @roji @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1092","RelatedDescription":"Open issue \"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1\" (#1092)"},{"Id":"414887877","IsPullRequest":false,"CreatedAt":"2019-02-27T00:35:13","Actor":"ChaseFlorell","Number":"1091","RawContent":null,"Title":"Collection<T> and ObservableCollection<T> do not support ranges","State":"open","Body":"This is taken directly from https://github.com/dotnet/corefx/issues/10752 [by @robertmclaws]\r\n\r\nThis API change is already approved in .netcore (tentatively scheduled for 3.0), and I think it's equally as important to be available in .netstandard\r\n\r\n```csharp\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nPlease see the linked issue for the full discussion.\r\n\r\nI'm assuming it would land [here](https://github.com/dotnet/standard/blob/master/src/netstandard/ref/System.Collections.ObjectModel.cs) and the appropriate shims would be created, however I don't know enough about netstandard to actually draw up the PR.\r\n","Url":"https://github.com/dotnet/standard/issues/1091","RelatedDescription":"Open issue \"Collection<T> and ObservableCollection<T> do not support ranges\" (#1091)"},{"Id":"414879247","IsPullRequest":false,"CreatedAt":"2019-02-27T00:01:34","Actor":"wtgodbe","Number":"1090","RawContent":null,"Title":"Sort out baseline between netstandard & netcoreapp","State":"open","Body":"We should sit down & go over the diff between netstandard & netcoreapp, and decide what we need to fix/how we need to fix it.\r\n\r\nCC @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1090","RelatedDescription":"Open issue \"Sort out baseline between netstandard & netcoreapp\" (#1090)"},{"Id":"414599564","IsPullRequest":true,"CreatedAt":"2019-02-26T13:10:54","Actor":"dotnet-maestro[bot]","Number":"1089","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1089)"},{"Id":"414366560","IsPullRequest":true,"CreatedAt":"2019-02-26T02:10:06","Actor":"terrajobst","Number":"1087","RawContent":null,"Title":"Remove windows row","State":"closed","Body":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander ","Url":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Closed or merged PR \"Remove windows row\" (#1087)"},{"Id":"414395637","IsPullRequest":true,"CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Number":"1088","RawContent":null,"Title":"Update .NET Standard 2.1 API delta","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Closed or merged PR \"Update .NET Standard 2.1 API delta\" (#1088)"},{"Id":"414093373","IsPullRequest":true,"CreatedAt":"2019-02-25T13:10:50","Actor":"dotnet-maestro[bot]","Number":"1086","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1086)"},{"Id":"413818940","IsPullRequest":true,"CreatedAt":"2019-02-24T13:10:46","Actor":"dotnet-maestro[bot]","Number":"1085","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1085)"},{"Id":"413693365","IsPullRequest":true,"CreatedAt":"2019-02-23T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1084","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1084)"},{"Id":"413628435","IsPullRequest":true,"CreatedAt":"2019-02-23T00:53:44","Actor":"terrajobst","Number":"1083","RawContent":null,"Title":"Add \"generated by a tool\"-header","State":"closed","Body":"This adds a header to all the Markdown files provided in the docs folder that\r\nshow the API set of .NET Standard. The header indicates that these are\r\ngenerated by a tool and PRs are generally not accepted.\r\n\r\nFixes #1053.","Url":"https://github.com/dotnet/standard/pull/1083","RelatedDescription":"Closed or merged PR \"Add \"generated by a tool\"-header\" (#1083)"},{"Id":"413393938","IsPullRequest":true,"CreatedAt":"2019-02-22T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1082","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1082","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1082)"},{"Id":"413086694","IsPullRequest":true,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1080","RawContent":null,"Title":"Add SwitchExpressionException","State":"closed","Body":"Fixes #1077\r\n\r\nThis adds `SwitchExpressionException` that was added for supporting C#'s [`switch` expression construct](https://github.com/dotnet/csharplang/blob/master/proposals/patterns.md#switch-expression). The exception type was discussed in CoreFX in [this API request](https://github.com/dotnet/corefx/issues/33284).","Url":"https://github.com/dotnet/standard/pull/1080","RelatedDescription":"Closed or merged PR \"Add SwitchExpressionException\" (#1080)"},{"Id":"412707494","IsPullRequest":false,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1077","RawContent":null,"Title":"Include SwitchExpression added for C# 8","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1077","RelatedDescription":"Closed issue \"Include SwitchExpression added for C# 8\" (#1077)"},{"Id":"413148623","IsPullRequest":false,"CreatedAt":"2019-02-21T22:14:20","Actor":"wtgodbe","Number":"1081","RawContent":null,"Title":"Use Arcade defaults for DebugType, etc","State":"open","Body":"https://github.com/dotnet/standard/blob/4a006e962fc5c5651b7712028e0e352b1e011a58/Directory.Build.props#L86-L104\r\n\r\nCC @tmat ","Url":"https://github.com/dotnet/standard/issues/1081","RelatedDescription":"Open issue \"Use Arcade defaults for DebugType, etc\" (#1081)"},{"Id":"412718646","IsPullRequest":true,"CreatedAt":"2019-02-21T22:12:16","Actor":"tmat","Number":"1078","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/standard/pull/1078","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#1078)"},{"Id":"412912955","IsPullRequest":true,"CreatedAt":"2019-02-21T13:10:49","Actor":"dotnet-maestro[bot]","Number":"1079","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1079","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1079)"},{"Id":"412413302","IsPullRequest":true,"CreatedAt":"2019-02-20T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1076","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19119.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1076","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1076)"},{"Id":"412032685","IsPullRequest":false,"CreatedAt":"2019-02-19T17:11:56","Actor":"YairHalberstadt","Number":"1075","RawContent":null,"Title":"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit","State":"closed","Body":"I'm currently looking into targeting .Net Standard for Iron Python: https://github.com/IronLanguages/dlr/issues/175\r\n\r\nSome of the required Reflection.Emit APIs are missing from the System.Reflection.Emit nuget package when targeting .Net Standard 2.0, such as `DynamicMethod` and `TypeBuilder.CreateType()`. However they exist in both .Net Core and .Net Framework, and I believe it was decided in https://github.com/dotnet/corefx/issues/29365 (specifically from https://github.com/dotnet/corefx/issues/29365#issuecomment-398256162  and onwards) that such APIs should be included in the Nuget Package, and should throw when used from an AOT runtime.\r\n\r\nThe work to do that was completed in https://github.com/dotnet/corefx/pull/30741.\r\n\r\nIs there any reason why the Nuget package doesn't seem to reflect this?\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1075","RelatedDescription":"Closed issue \"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit\" (#1075)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"424464104","IsPullRequest":true,"CreatedAt":"2019-03-23T05:03:40","Actor":"eanova","Number":"36253","RawContent":null,"Title":"Fixed Project's Interop.Zlib.cs link to use common/src/Interop instead.","State":"open","Body":"- Continuation from #35762 \r\n- System.IO.Compression\r\nMoved the Project's Interop.Zlib.cs file to corefx/src/Common/src/Interop/Interop.ZLib.cs and updated the link in the System.IO.Compression project file to match.\r\n@ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/36253","RelatedDescription":"Open PR \"Fixed Project's Interop.Zlib.cs link to use common/src/Interop instead.\" (#36253)"},{"Id":"424012345","IsPullRequest":true,"CreatedAt":"2019-03-23T04:46:33","Actor":"GrabYourPitchforks","Number":"36227","RawContent":null,"Title":"Add ASCIIUtility tests","State":"closed","Body":"Unit tests for https://github.com/dotnet/coreclr/pull/22516.\r\n\r\nThese tests use private reflection to call into `ASCIIUtility` to test the method implementations. These methods serve as the workhorse routines for `ASCIIEncoding`. There are existing tests for `ASCIIEncoding` (see the project System.Text.Encoding.Tests), but for increased coverage and to exercise edge cases that `ASCIIEncoding` might be hiding I wanted to test the implementation directly. This should also serve as a future-proofing mechanism in case components other than `ASCIIEncoding` end up calling into it.","Url":"https://github.com/dotnet/corefx/pull/36227","RelatedDescription":"Closed or merged PR \"Add ASCIIUtility tests\" (#36227)"},{"Id":"424462981","IsPullRequest":true,"CreatedAt":"2019-03-23T04:44:59","Actor":"Dotnet-GitSync-Bot","Number":"36252","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corefx/pull/36252","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#36252)"},{"Id":"424457812","IsPullRequest":false,"CreatedAt":"2019-03-23T03:23:47","Actor":"Nukepayload2","Number":"36251","RawContent":null,"Title":"Microsoft.VisualBasic.Strings.Replace produces unexpected result when replacing Japanese characters","State":"open","Body":"Forwarded from https://github.com/dotnet/vblang/issues/390 \r\n\r\nI found that the `Microsoft.VisualBasic.Strings.Replace` function has a strange behavior. \r\nThe following program replaces Japanese full-width characters \"ポ\" and half-width characters \"ﾎﾟ\" with \"po\":\r\n```vbnet\r\nModule Program\r\n    Sub Main()\r\n        Dim replaced = Replace(Expression:=\"ﾎﾟポ\",\r\n                               Find:=\"ポ\", Replacement:=\"po\",\r\n                               Compare:=CompareMethod.Text)\r\n        Console.WriteLine(replaced)\r\n    End Sub\r\nEnd Module\r\n```\r\n[Run with SharpLab](https://sharplab.io/#v2:EYLgHgbALANANiAbsGAXEAnArgOwD4CSAtgA4D2GqAzgAQDKAnlagKZECwAUMeZbQLIBLAMYYyVMgDNUAOgBqgqlgCGcAELKqIrl35kAJljgsaABTEBzDMo6ca9+lmA1+ywTgAUASi4O/NABFBIhoMFhI4ZWEWfRoAXhoAJXDI6I8AUTASMKotMhwQOIAiQDj/wHz/wF2GIphffzr6hr8AMXd9QqKqmCSUqLYWHHRi8mraxrGxgGEyUmUwwqmZsP4WVAALAxkAFRYwVB87eqmcCWMZAHUMQVYAGXcWDzCI3v19v3ScWLonLnfYvUNjEA)\r\n\r\nThe expected result is \"popo\". But actually the value of `replaced` is \"poﾟpo\". It's inconsistent with the `Range.Replace` function of Excel. \r\nThis bug will affect .NET Core 3.0 when the `Microsoft.VisualBasic.Strings.Replace` function is ported from .NET Framework.","Url":"https://github.com/dotnet/corefx/issues/36251","RelatedDescription":"Open issue \"Microsoft.VisualBasic.Strings.Replace produces unexpected result when replacing Japanese characters\" (#36251)"},{"Id":"424454717","IsPullRequest":false,"CreatedAt":"2019-03-23T02:41:11","Actor":"Akaion","Number":"36250","RawContent":null,"Title":"Proposal - Change the way Marshal allocates / frees unmanaged memory","State":"open","Body":"From what I understand, Marshal currently uses LocalAlloc when `Marshal.AllocHGlobal` is used and LocalFree when `Marshal.FreeHGlobal` is used.\r\n\r\nThe [documentation](https://docs.microsoft.com/en-nz/windows/desktop/Memory/global-and-local-functions) for Local functions states that Heap functions should be used over Local functions where possible (it states in another documentation that local functions have more overhead and, thus, are less efficient.)\r\n\r\nObviously some benchmarks would need to be done but using HeapAlloc and HeapFree over LocalAlloc and LocalFree seems like a logical thing to use unless there is some reason why these functions can't be used with Marshal.","Url":"https://github.com/dotnet/corefx/issues/36250","RelatedDescription":"Open issue \"Proposal - Change the way Marshal allocates / frees unmanaged memory\" (#36250)"},{"Id":"424441728","IsPullRequest":false,"CreatedAt":"2019-03-23T00:18:18","Actor":"GasparSantos","Number":"36249","RawContent":null,"Title":"aspnet core 2.2: System.Net.Sockets.SocketException from wcf call","State":"open","Body":"I´m facing a lot of System.Net.Sockets.SocketException after update to aspnet core 2.2 and nuget packages System.ServiceModel.* to version 4.5.3\r\nMy app container is running under an Azure web app Linux, failure occurs when try ingto connect on a external service provider with a soap request.\r\n\r\n**On app initialization** :            AppContext.SetSwitch(\"System.Net.Http.useSocketsHttpHandler\", false);\r\n\r\n\r\n**Exception message**:  Cannot assign requested address\r\n\r\n**StackTrace:**\r\nSystem.Net.Http.HttpRequestException:\r\n   at System.Net.Http.ConnectHelper+<ConnectAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.HttpConnectionPool+<CreateConnectionAsync>d__44.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.HttpConnectionPool+<WaitForCreatedConnectionAsync>d__49.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.HttpConnectionPool+<SendWithRetryAsync>d__39.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.AuthenticationHelper+<SendWithAuthAsync>d__16.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.RedirectHandler+<SendAsync>d__4.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.DecompressionHandler+<SendAsync>d__11.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.DiagnosticsHandler+<SendAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\nInner exception System.Net.Sockets.SocketException handled at System.Net.Http.ConnectHelper+<ConnectAsync>d__2.MoveNext:\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Net.Http.ConnectHelper+<ConnectAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/36249","RelatedDescription":"Open issue \"aspnet core 2.2: System.Net.Sockets.SocketException from wcf call\" (#36249)"},{"Id":"424028226","IsPullRequest":true,"CreatedAt":"2019-03-23T00:14:57","Actor":"ahsonkhan","Number":"36229","RawContent":null,"Title":"Correctly show the '}', ']' within the exception message in Utf8JsonWriter","State":"closed","Body":"**Before:**\r\n`'0' is invalid without a matching open.`\r\n\r\n**Now:**\r\n`']' is invalid without a matching open.`\r\n\r\nWas previously passing the token value as `currentDepth` so the default byte value (`0`) was being displayed. Using named parameters fixes that.","Url":"https://github.com/dotnet/corefx/pull/36229","RelatedDescription":"Closed or merged PR \"Correctly show the '}', ']' within the exception message in Utf8JsonWriter\" (#36229)"},{"Id":"424437164","IsPullRequest":false,"CreatedAt":"2019-03-22T23:47:43","Actor":"safern","Number":"36248","RawContent":null,"Title":"Official builds are failing when publishing to BAR","State":"open","Body":"```\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error : Exception: Root directory of the repo was not found. Check that git is installed and that you are in a folder which is a git repo (.git folder should be present).\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.DarcLib.Helpers.LocalHelpers.GetRootDir(ILogger logger) in /_/src/Microsoft.DotNet.Darc/src/DarcLib/Helpers/LocalHelpers.cs:line 49\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.DarcLib.Local..ctor(ILogger logger, String overrideRootPath) in /_/src/Microsoft.DotNet.Darc/src/DarcLib/Actions/Local.cs:line 28\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.Maestro.Tasks.PushMetadataToBuildAssetRegistry.GetBuildDependenciesAsync(IMaestroApi client, CancellationToken cancellationToken) in /_/src/Maestro/Microsoft.DotNet.Maestro.Tasks/src/PushMetadataToBuildAssetRegistry.cs:line 102\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error :    at Microsoft.DotNet.Maestro.Tasks.PushMetadataToBuildAssetRegistry.PushMetadataAsync(CancellationToken cancellationToken) in /_/src/Maestro/Microsoft.DotNet.Maestro.Tasks/src/PushMetadataToBuildAssetRegistry.cs:line 76\r\nC:\\Users\\vsagent\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19170.2\\tools\\SdkTasks\\PublishBuildAssets.proj(30,5): error : \r\n```\r\n\r\n`Microsoft.DotNet.DarcLib.Helpers.LocalHelpers.GetRootDir(ILogger logger)` runs a git command with `ProcessStartInfo` and sets the `WorkingDirectory` to: `Environment.CurrentDirectory` so I wonder if that is what is causing the problem. I have some private builds where I run the git command as a separate step and it works just fine.\r\n\r\nMe and @jcagme are investigating the issue and we have an idea on how to fix it. \r\n\r\nOpened this issue to track the build break.\r\n\r\ncc: @danmosemsft @ericstj @wfurt @ViktorHofer ","Url":"https://github.com/dotnet/corefx/issues/36248","RelatedDescription":"Open issue \"Official builds are failing when publishing to BAR\" (#36248)"},{"Id":"424413730","IsPullRequest":true,"CreatedAt":"2019-03-22T23:36:04","Actor":"stephentoub","Number":"36245","RawContent":null,"Title":"Fix WSAStartup interop","State":"closed","Body":"Our WSAStartup interop is incorrect, but thankfully other than it adding some unnecessary cost, it doesn't actually break anything.\r\n\r\nThe WSADATA struct in Windows differs in layout between 32-bit and 64-bit, making our interop signature wrong.  But, we don't actually read out any of the resulting data, so the incorrectness doesn't negatively impact consumption.  It does incur some unnecessary cost, though, in that the marshaling attributes and the inclusion of `string` in the struct is causing two strings to be allocated that are unnecessary.\r\n\r\nThis change just deletes the contents of the struct so as to avoid any potential future misuse and to eliminate those allocations.  It then uses the Size on the StructLayout to ensure that the struct is large enough for either the 32-bit or 64-bit interop cases.  And it hides this all with private visibility so that it doesn't leak out into the consuming code.\r\n\r\ncc: @davidsh, @jkotas","Url":"https://github.com/dotnet/corefx/pull/36245","RelatedDescription":"Closed or merged PR \"Fix WSAStartup interop\" (#36245)"},{"Id":"424326541","IsPullRequest":false,"CreatedAt":"2019-03-22T22:36:15","Actor":"jpfreyen","Number":"36238","RawContent":null,"Title":"Consider making FileInfo.Length Property UInt64","State":"closed","Body":".NETCore documentation states the FileInfo.Length property, i.e. the size of a file in bytes, is a **signed** int\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.io.fileinfo.length?view=netcore-2.1\r\n\r\nWhy?  file size has no meaning as a negative number.   Why make it signed and introduce a theoretical possibly of an overflow, underflow, or wraparound error?  Values/properties like this should be unsigned to 100% eliminate the chance of a bug, even if it's theoretical.","Url":"https://github.com/dotnet/corefx/issues/36238","RelatedDescription":"Closed issue \"Consider making FileInfo.Length Property UInt64\" (#36238)"},{"Id":"424423183","IsPullRequest":false,"CreatedAt":"2019-03-22T22:33:45","Actor":"roozbehid-ic","Number":"36247","RawContent":null,"Title":"RequestUri case modification while being used in HttpClient causes problem inside docker","State":"open","Body":"**What is wrong**\r\nMaking connection to http://ttt.CP.com fails inside docker with aliases, although at the same time all Linux tools woks fine with that address.\r\n\r\n**Details**\r\nI noticed that case is changed when sending requests and (although it seems cases should not matter for domain names) it will cause problem in Windows using dockers.\r\n\r\n\r\nProgram.cs\r\n```\r\nusing System;\r\n\r\nnamespace ConsoleApp16\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var client_ = new System.Net.Http.HttpClient();\r\n            using (var request_ = new System.Net.Http.HttpRequestMessage())\r\n            {\r\n                request_.Method = new System.Net.Http.HttpMethod(\"GET\");\r\n                request_.Headers.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(\"application/json\"));\r\n                request_.RequestUri = new System.Uri(\"http://ttt.CP.com\", System.UriKind.RelativeOrAbsolute);\r\n\r\n                var response_ = client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead).GetAwaiter().GetResult();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nmy docker-compose.yml\r\n```\r\nversion: '2.4'\r\nservices:\r\n  nginx:\r\n    image: nginx\r\n    expose:\r\n     - \"80\"\r\n    networks: \r\n      mynetwork2:\r\n        aliases:\r\n          - ttt.CP.com\r\n\r\n  myapi:\r\n    build: .\r\n    networks: \r\n      mynetwork2:\r\n        aliases:\r\n          - aaa.CP.com\r\n           \r\n   \r\nnetworks:\r\n  mynetwork2:\r\n    driver: bridge\r\n```\r\n\r\nDockerfile\r\n```\r\nFROM mcr.microsoft.com/dotnet/core/sdk:2.1 AS build\r\nWORKDIR /src\r\nCOPY TestProgram/ TestProgram/\r\nWORKDIR /src/TestProgram\r\nENTRYPOINT [\"dotnet\",\"run\"]\r\n#ENTRYPOINT [\"/bin/bash\"]\r\n```\r\n\r\nTestProgram.csproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\ndocker version\r\n```\r\nClient: Docker Engine - Community\r\n Version:           18.09.3\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        774a1f4\r\n Built:             Thu Feb 28 06:32:50 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.3\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       774a1f4\r\n  Built:            Thu Feb 28 06:40:58 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n```\r\n\r\nNow if you run `docker-compose up` you will get\r\n```\r\nmyapi_1  |\r\nmyapi_1  | Unhandled Exception: System.Net.Http.HttpRequestException: No such device or address ---> System.Net.Sockets.SocketException: No such device or address\r\nmyapi_1  |    at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\nmyapi_1  |    --- End of inner exception stack trace ---\r\nmyapi_1  |    at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\nmyapi_1  |    at System.Threading.Tasks.ValueTask`1.get_Result()\r\nmyapi_1  |    at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\nmyapi_1  |    at System.Threading.Tasks.ValueTask`1.get_Result()\r\nmyapi_1  |    at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\nmyapi_1  |    at System.Threading.Tasks.ValueTask`1.get_Result()\r\nmyapi_1  |    at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\nmyapi_1  |    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\nmyapi_1  |    at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\nmyapi_1  |    at ConsoleApp16.Program.Main(String[] args) in /src/TestProgram/Program.cs:line 16\r\n```\r\n\r\nBut if you get into docker (`docker-compose run --entrypoint /bin/bash myapi`)\r\n```\r\nroot@6a612eff59c3:/src/TestProgram# ping ttt.CP.com\r\nPING ttt.CP.com (172.20.0.3) 56(84) bytes of data.\r\n64 bytes from dtest_nginx_1.dtest_mynetwork2 (172.20.0.3): icmp_seq=1 ttl=64 time=0.128 ms\r\n\r\nroot@6a612eff59c3:/src/TestProgram# nslookup ttt.CP.com\r\nServer:         127.0.0.11\r\nAddress:        127.0.0.11#53\r\n\r\nNon-authoritative answer:\r\nName:   ttt.CP.com\r\nAddress: 172.20.0.3\r\n\r\nroot@6a612eff59c3:/src/TestProgram# cat /etc/hosts\r\n127.0.0.1       localhost\r\n::1     localhost ip6-localhost ip6-loopback\r\nfe00::0 ip6-localnet\r\nff00::0 ip6-mcastprefix\r\nff02::1 ip6-allnodes\r\nff02::2 ip6-allrouters\r\n172.20.0.2      6a612eff59c3\r\n\r\nroot@6a612eff59c3:/src/TestProgram# cat /etc/resolv.conf\r\nnameserver 127.0.0.11\r\noptions ndots:0\r\n\r\nroot@6a612eff59c3:/src/TestProgram# dig 127.0.0.11 ttt.CP.com\r\n\r\n; <<>> DiG 9.10.3-P4-Debian <<>> 127.0.0.11 ttt.CP.com\r\n;; global options: +cmd\r\n;; Got answer:\r\n;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id: 35646\r\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 0\r\n\r\n;; QUESTION SECTION:\r\n;127.0.0.11.                    IN      A\r\n\r\n;; Query time: 49 msec\r\n;; SERVER: 127.0.0.11#53(127.0.0.11)\r\n;; WHEN: Fri Mar 22 22:30:53 UTC 2019\r\n;; MSG SIZE  rcvd: 28\r\n\r\n;; Got answer:\r\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 9856\r\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\r\n\r\n;; QUESTION SECTION:\r\n;ttt.CP.com.                    IN      A\r\n\r\n;; ANSWER SECTION:\r\nttt.CP.com.             600     IN      A       172.20.0.3\r\n\r\n;; Query time: 0 msec\r\n;; SERVER: 127.0.0.11#53(127.0.0.11)\r\n;; WHEN: Fri Mar 22 22:30:53 UTC 2019\r\n;; MSG SIZE  rcvd: 54\r\n\r\n\r\nroot@6a612eff59c3:/src/TestProgram# curl ttt.CP.com\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<title>Welcome to nginx!</title>\r\n<style>\r\n    body {\r\n        width: 35em;\r\n        margin: 0 auto;\r\n        font-family: Tahoma, Verdana, Arial, sans-serif;\r\n    }\r\n</style>\r\n</head>\r\n<body>\r\n<h1>Welcome to nginx!</h1>\r\n<p>If you see this page, the nginx web server is successfully installed and\r\nworking. Further configuration is required.</p>\r\n\r\n<p>For online documentation and support please refer to\r\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\r\nCommercial support is available at\r\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\r\n\r\n<p><em>Thank you for using nginx.</em></p>\r\n</body>\r\n</html>\r\n```\r\n\r\nWorkarounds:\r\n- change `ttt.CP.com` to `ttt.cp.com` in .net console program.\r\n- adding a new aliases in `docker-compose.yml`\r\n```\r\n        aliases:\r\n          - ttt.CP.com\r\n          - ttt.cp.com\r\n```\r\n\r\nBut while all tools work fine in OS,I assume net core application should not lower case the domain name!","Url":"https://github.com/dotnet/corefx/issues/36247","RelatedDescription":"Open issue \"RequestUri case modification while being used in HttpClient causes problem inside docker\" (#36247)"},{"Id":"424421166","IsPullRequest":true,"CreatedAt":"2019-03-22T22:28:46","Actor":"Dotnet-GitSync-Bot","Number":"36246","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corefx/pull/36246","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36246)"},{"Id":"424398029","IsPullRequest":true,"CreatedAt":"2019-03-22T22:21:57","Actor":"stephentoub","Number":"36242","RawContent":null,"Title":"Avoid thread pool work item allocation in Socket.Send/ReceiveAsync","State":"closed","Body":"In an async method when you await a task, there are effectively three possible flows:\r\n1. the task is already completed, and execution simply continues\r\n2. the task is not yet completed, we hook up a continuation, and at some point later the task completes and invokes the continuation\r\n3. the task is not yet completed, but by the time we go to hook up the continuation, it has completed.\r\n\r\nIn case (3), the C# await code is already assuming that things are completing asynchronously, so we can't just keep executing the C# code synchronously.  And if we were to invoke the delegate synchronously, we risk a stack dive, as we're now further down the stack, and if that kept happening, we could run out of stack space.  So we're forced to queue the continuation.\r\n\r\nWith sockets, case (3) happens more frequently than we might expect: data isn't available immediately but is very soon.  Every time it does, we incur an allocation from using QueueUserWorkItem.\r\n\r\nHowever, in the common case where we're inside an async method, which means it's handling ExecutionContext flow for us, and we can instead use UnsafeQueueUserWorkItem, which has a fast-path that's AsyncStateMachineBox-aware, and can avoid a work item allocation if the continuation/state are coming from an async method.\r\n\r\nSo, this change just sees whether we need to flow context, and if we don't, uses UnsafeQueueUserWorkItem instead of QueueUserWorkItem, avoiding the allocation in the common case.\r\n\r\ncc: @geoffkizer, @davidsh, @benaadams ","Url":"https://github.com/dotnet/corefx/pull/36242","RelatedDescription":"Closed or merged PR \"Avoid thread pool work item allocation in Socket.Send/ReceiveAsync\" (#36242)"},{"Id":"424332040","IsPullRequest":true,"CreatedAt":"2019-03-22T21:56:14","Actor":"rmkerr","Number":"36239","RawContent":null,"Title":"Add additional diagnostics to PostAsync_RedirectWith307_LargePayload","State":"closed","Body":"See #36220 for details","Url":"https://github.com/dotnet/corefx/pull/36239","RelatedDescription":"Closed or merged PR \"Add additional diagnostics to PostAsync_RedirectWith307_LargePayload\" (#36239)"},{"Id":"424383688","IsPullRequest":true,"CreatedAt":"2019-03-22T21:55:53","Actor":"Dotnet-GitSync-Bot","Number":"36241","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/36241","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36241)"},{"Id":"424413514","IsPullRequest":false,"CreatedAt":"2019-03-22T21:53:12","Actor":"divega","Number":"36244","RawContent":null,"Title":"Consider \"relocating\" extension methods defined on System.Data.Common to System.Data","State":"open","Body":"By \"relocating\", I actually mean copying the extension methods (with new names?) and deprecating the existing ones. \r\n\r\nThere are specifically two extension methods defined in System.Data.Common.DbDataReaderExtensions:\r\n``` csharp\r\npublic static System.Collections.ObjectModel.ReadOnlyCollection<DbColumn> GetColumnSchema(\r\n    this DbDataReader reader);\r\n\r\npublic static bool CanGetColumnSchema(this DbDataReader reader);\r\n```\r\nBut in https://github.com/dotnet/corefx/pull/36123/files we decided that similar extension methods belong in the System.Data namespace instead. \r\n\r\nNormally, you import System.Data.Common only if you:\r\n\r\n- Building an ADO.NET provider\r\n- Consuming ADO.NET APIs in a provider-agnostic way\r\n\r\nFor consuming extension methods applicable to all ADO.NET providers, System.Data is a better choice.","Url":"https://github.com/dotnet/corefx/issues/36244","RelatedDescription":"Open issue \"Consider \"relocating\" extension methods defined on System.Data.Common to System.Data\" (#36244)"},{"Id":"424410304","IsPullRequest":false,"CreatedAt":"2019-03-22T21:41:34","Actor":"divega","Number":"36243","RawContent":null,"Title":"Due diligence on new DbDataReader extension method class on System.Data.Common and unification","State":"open","Body":"This issue to make sure we follow up with @terrajobst to make sure we do the right thing for the new extension method sponsor class created in https://github.com/dotnet/corefx/pull/36123. \r\n\r\nPossible concerns are:\r\n\r\n1. Should the class be included in .NET Standard 2.1?\r\n2. Understand in which of the TFMs targeted by the System.Data.Common package the methods will be available\r\n\r\ncc @roji @ajcvickers ","Url":"https://github.com/dotnet/corefx/issues/36243","RelatedDescription":"Open issue \"Due diligence on new DbDataReader extension method class on System.Data.Common and unification\" (#36243)"},{"Id":"424344193","IsPullRequest":false,"CreatedAt":"2019-03-22T18:26:48","Actor":"mazhou-msft","Number":"36240","RawContent":null,"Title":"S.T.J.JsonSerializer does not serialize value tuples","State":"open","Body":"Using latest nightly build of .NET Core 3.0 and write:\r\n\r\n```c#\r\nstring s = JsonSerializer.ToString((a: 1, b: 2));\r\nConsole.WriteLine(s);\r\n```\r\nYou will get a string repreenting a empty object `{}`. I think the right behiavor is to have `{ \"Item1\": 1, \"Item2\": 2 }` and I expect it should also work for deserialization.","Url":"https://github.com/dotnet/corefx/issues/36240","RelatedDescription":"Open issue \"S.T.J.JsonSerializer does not serialize value tuples\" (#36240)"},{"Id":"424304874","IsPullRequest":false,"CreatedAt":"2019-03-22T16:50:30","Actor":"sdmaclea","Number":"36237","RawContent":null,"Title":"API Proposal - Add high level AssemblyDependencyResolver APIs","State":"open","Body":"API Proposal TBD","Url":"https://github.com/dotnet/corefx/issues/36237","RelatedDescription":"Open issue \"API Proposal - Add high level AssemblyDependencyResolver APIs\" (#36237)"},{"Id":"424300887","IsPullRequest":false,"CreatedAt":"2019-03-22T16:41:28","Actor":"sdmaclea","Number":"36236","RawContent":null,"Title":"API proposal AssemblyLoadContext.ActiveForContextSensitiveReflection","State":"open","Body":"### ActiveForContextSensitiveReflection\r\n\r\nThere is a need for a general solution to allow code executing outside a given `AssemblyLoadContext` to behave as if it was loaded within the context for a small set of context sensitive reflection APIs. These APIs are used to load assemblies and resolve types by name.  Their behavior is currently sensitive to their caller's `AssemblyLoadContext`.\r\n\r\nThis is required in part because of the design of `AssemblyLoadContext` which:\r\n* Requires `System.Private.CoreLib` to be loaded exclusively in the `Default` context. \r\n* Strongly recommends the runtime framework be completely loaded into the `Default` context.\r\n* Recommends most frameworks be loaded exclusively in the `Default` context.\r\n\r\nThis means code executing on behalf of an `AssemblyLoadContext` is not loaded into its client `AssemblyLoadContext`.  This means the existing mechanism for inferring the currect `AssemblyLoadContext` is insufficient in some scenarios. The typical case is when a framework or library is using reflection on behalf of client code loaded into a custom `AssemblyLoadContext`\r\n\r\nThis proposal is for a mechanism for code to explicitly set a specific `AssemblyLoadContext` as the `ActiveForContextSensitiveReflection` for a using block and its asynchronous flow of control.  Previous context is restored upon exiting the using block. Blocks can be nested.\r\n\r\n#### Context Sensitive Reflection APIs\r\nThe following is an exhaustive set of APIs which will be affected, by `AssemblyLoadContext.ActiveForContextSensitiveReflection`.  \r\n\r\n(The set is exhaustive as of preview 3, but may grow as we fix dotnet/coreclr#22213)\r\n```C#\r\nnamespace System\r\n{\r\n    public static partial class Activator\r\n    {\r\n        public static ObjectHandle CreateInstance(string assemblyName, string typeName);\r\n        public static ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes);\r\n        public static ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes);\r\n    }\r\n    public abstract partial class Type : MemberInfo, IReflect\r\n    {\r\n        public static Type GetType(string typeName, bool throwOnError, bool ignoreCase);\r\n        public static Type GetType(string typeName, bool throwOnError);\r\n        public static Type GetType(string typeName);\r\n        public static Type GetType(string typeName, Func<AssemblyName, Assembly> assemblyResolver, Func<Assembly, string, bool, Type> typeResolver);\r\n        public static Type GetType(string typeName, Func<AssemblyName, Assembly> assemblyResolver, Func<Assembly, string, bool, Type> typeResolver, bool throwOnError);\r\n        public static Type GetType(string typeName, Func<AssemblyName, Assembly> assemblyResolver, Func<Assembly, string, bool, Type> typeResolver, bool throwOnError, bool ignoreCase);\r\n    }\r\n}\r\nnamespace System.Reflection\r\n{\r\n    public abstract partial class Assembly : ICustomAttributeProvider, ISerializable\r\n    {\r\n        public static Assembly Load(string assemblyString);\r\n        public static Assembly Load(AssemblyName assemblyRef);\r\n    }\r\n}\r\n```\r\n#### Basic Usage\r\n```C#\r\n  AssemblyLoadContext alc = new AssemblyLoadContext();\r\n  using (alc.ActivateForContextSensitiveReflection())\r\n  {\r\n    // In this block, alc acts as the current executing context for context sensitive reflection APIs.\r\n    //\r\n    // This does not mean all assemblies will be loaded into it. Nor does it mean the set of type\r\n    // resolved by it will come exclusively from assemblies it has loaded.\r\n    // \r\n    // Rather when alc is ActiveForContextSensitiveReflection, the context sensitive reflection APIs\r\n    // behavior will be modified such that:\r\n    //\r\n    // When loading assemblies, alc.Load() is called first, before falling back to default. \r\n    // alc.Resolve(...) handler will be called before AppDomain.ResolvingAssembly(...)\r\n    //\r\n    // When resolving types, the type cache in this alc is consulted. It will include types \r\n    // loaded into other AssemblyLoadContexts but used by this context\r\n    \r\n    Assembly assembly = Assembly.Load(myPlugin); // Attempts to loads calling alc.Load() first, with normal fallback.\r\n    \r\n    Type t = Type.GetType(\"MyPlugin.MyType\"); // Resolves type as if alc was active execution context\r\n\r\n    // Affects async methods\r\n    TResult result = await AsyncMethod();\r\n\r\n    // Ideally also affects threads and queued work items.\r\n    Thread t = new Thread(new ThreadStart(ThreadProc));\r\n    t.Start();\r\n\r\n    ThreadPool.QueueUserWorkItem(ThreadProc);\r\n  }\r\n```\r\n#### Maintaining and restoring original behavior\r\n```C#\r\nstatic void Main(string[] args)\r\n{\r\n  // On App startup, AssemblyLoadContext.ActiveContext is null\r\n  // Behavior prior to .NET Core 3.0 is unchanged\r\n  Assembly assembly = Assembly.Load(myPlugin); // Will load into the Default ALC.\r\n}\r\n\r\nvoid SomeMethod()\r\n{\r\n  using (AssemblyLoadContext.ActivateForContextSensitiveReflection(null))\r\n  {\r\n    // AssemblyLoadContext.ActiveContext is null\r\n    // Behavior prior to .NET Core 3.0 is unchanged\r\n    Assembly assembly = Assembly.Load(myPlugin); // Will load into the ALC containing SomeMethod(). \r\n  }\r\n}\r\n```\r\n#### Design doc\r\nDetailed design doc is in review dotnet/coreclr#23335.\r\n\r\n## Proposed API changes\r\n\r\n```C#\r\nnamespace System.Runtime.Loader\r\n{\r\n    public partial class AssemblyLoadContext\r\n    {\r\n        public static AssemblyLoadContext ActiveForContextSensitiveReflection { get { return _asyncLocalActiveContext.Value; }}\r\n\r\n        public IDisposable ActivateForContextSensitiveReflection();\r\n\r\n        static public IDisposable Activate(Assembly activating);\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/36236","RelatedDescription":"Open issue \"API proposal AssemblyLoadContext.ActiveForContextSensitiveReflection\" (#36236)"},{"Id":"424029334","IsPullRequest":true,"CreatedAt":"2019-03-22T14:39:37","Actor":"dotnet-maestro-bot","Number":"36230","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to beta-27522-00, beta-27522-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/36230","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27522-00, beta-27522-00, respectively (master)\" (#36230)"},{"Id":"424225603","IsPullRequest":false,"CreatedAt":"2019-03-22T14:04:54","Actor":"roji","Number":"36235","RawContent":null,"Title":"Look into removing DbDataReaderExtensions.Facade.cs","State":"open","Body":"There are currently two DbDataReaderExtensions classes under System.Data.Common, defining `GetColumnSchema()`:\r\n\r\n1. DbDataReaderExtensions.cs. GetColumnSchema() checks if the reader implements IDbColumnSchemaGenerator and calls into that, otherwise throws.\r\n2. DbDataReaderExtensions.Facade.cs. GetColumnSchema()calls the traditional GetSchemaTable()` and translates to the new DbColumn (so a backwards compat shim). This file isn't referenced in the csproj.\r\n\r\nThe second seems to be a leftover from .NET Framework, since in .NET Core pre-2.0 DataTable didn't exist. However, I'm not sure if there's any sense in keeping this in the corefx repo today.\r\n\r\n/cc @divega","Url":"https://github.com/dotnet/corefx/issues/36235","RelatedDescription":"Open issue \"Look into removing DbDataReaderExtensions.Facade.cs\" (#36235)"},{"Id":"424176604","IsPullRequest":true,"CreatedAt":"2019-03-22T13:59:52","Actor":"dotnet-maestro[bot]","Number":"36232","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19171.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.SourceRewriter** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36232","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#36232)"},{"Id":"424190080","IsPullRequest":true,"CreatedAt":"2019-03-22T13:39:36","Actor":"dotnet-maestro[bot]","Number":"36234","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190322.01\r\n- **Date Produced**: 3/22/2019 10:33 AM\r\n- **Commit**: b58bfb6da1e5d538f8f2e8a80184943378a5dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27522-01\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview4-27522-01\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview4-27522-01\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36234","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#36234)"},{"Id":"424179945","IsPullRequest":true,"CreatedAt":"2019-03-22T13:32:33","Actor":"dotnet-maestro[bot]","Number":"36233","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190321.73\r\n- **Date Produced**: 3/22/2019 12:49 AM\r\n- **Commit**: f61314dab43e29eaa5c4323a890bc408be014f83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview4-27521-73\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview4-27521-73\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview4-27521-73\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36233","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#36233)"},{"Id":"424031329","IsPullRequest":true,"CreatedAt":"2019-03-22T06:55:06","Actor":"stephentoub","Number":"36231","RawContent":null,"Title":"Fix build break in System.Console due to conflicting PRs","State":"closed","Body":"cc: @ahsonkhan, @tmds","Url":"https://github.com/dotnet/corefx/pull/36231","RelatedDescription":"Closed or merged PR \"Fix build break in System.Console due to conflicting PRs\" (#36231)"},{"Id":"424019675","IsPullRequest":true,"CreatedAt":"2019-03-22T04:25:20","Actor":"Dotnet-GitSync-Bot","Number":"36228","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @ahoefling","Url":"https://github.com/dotnet/corefx/pull/36228","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36228)"},{"Id":"424009394","IsPullRequest":false,"CreatedAt":"2019-03-22T01:31:03","Actor":"dotnet-mc-bot","Number":"36226","RawContent":null,"Title":"Test failure: System.Net.Tests.SyncWebClientTest/UploadData_LargeData_Success(echoServer: http://corefx-net-http11.azurewebsites.net/Echo.ashx)","State":"open","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Net.Tests.SyncWebClientTest/UploadData_LargeData_Success(echoServer: http://corefx-net-http11.azurewebsites.net/Echo.ashx)` has failed.\n\nFailure Message:\n```\nSystem.Net.WebException : The remote server returned an error: (500) Internal Server Error.\n```\n\nStack Trace:\n```\n   at System.Net.HttpWebRequest.GetResponse() in /__w/1/s/src/System.Net.Requests/src/System/Net/HttpWebRequest.cs:line 1009\n   at System.Net.WebClient.GetWebResponse(WebRequest request) in /__w/1/s/src/System.Net.WebClient/src/System/Net/WebClient.cs:line 249\n   at System.Net.WebClient.DownloadBits(WebRequest request, Stream writeStream) in /__w/1/s/src/System.Net.WebClient/src/System/Net/WebClient.cs:line 818\n   at System.Net.WebClient.UploadBits(WebRequest request, Stream readStream, Byte[] buffer, Int32 chunkSize, Byte[] header, Byte[] footer) in /__w/1/s/src/System.Net.WebClient/src/System/Net/WebClient.cs:line 982\n   at System.Net.WebClient.UploadDataInternal(Uri address, String method, Byte[] data, WebRequest& request) in /__w/1/s/src/System.Net.WebClient/src/System/Net/WebClient.cs:line 451\n   at System.Net.WebClient.UploadData(Uri address, String method, Byte[] data) in /__w/1/s/src/System.Net.WebClient/src/System/Net/WebClient.cs:line 435\n   at System.Net.WebClient.UploadData(String address, Byte[] data) in /__w/1/s/src/System.Net.WebClient/src/System/Net/WebClient.cs:line 414\n   at System.Net.Tests.SyncWebClientTest.<>c__DisplayClass5_0.<UploadDataAsync>b__0() in /__w/1/s/src/System.Net.WebClient/tests/WebClientTest.cs:line 712\n   at System.Threading.Tasks.Task`1.InnerInvoke() in /__w/2/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Future.cs:line 517\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj) in /__w/2/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2439\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/2/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 288\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state) in /__w/2/s/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs:line 313\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread) in /__w/2/s/src/System.Private.CoreLib/shared/System/Threading/Tasks/Task.cs:line 2400\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Net.Tests.WebClientTestBase.UploadData_LargeData_Success(Uri echoServer) in /__w/1/s/src/System.Net.WebClient/tests/WebClientTest.cs:line 654\n--- End of stack trace from previous location where exception was thrown ---\n```\n\nBuild : 3.0 - 20190321.9 (Core Tests)\nFailing configurations:\n- Debian.9.Amd64-x64\n  - Release\n- RedHat.7.Amd64-x64\n  - Release\n- Ubuntu.1604.Arm64-arm64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190321.9/workItem/System.Net.WebClient.Tests/analysis/xunit/System.Net.Tests.SyncWebClientTest~2FUploadData_LargeData_Success(echoServer:%20http:~2F~2Fcorefx-net-http11.azurewebsites.net~2FEcho.ashx)","Url":"https://github.com/dotnet/corefx/issues/36226","RelatedDescription":"Open issue \"Test failure: System.Net.Tests.SyncWebClientTest/UploadData_LargeData_Success(echoServer: http://corefx-net-http11.azurewebsites.net/Echo.ashx)\" (#36226)"},{"Id":"423995307","IsPullRequest":true,"CreatedAt":"2019-03-22T00:23:39","Actor":"safern","Number":"36225","RawContent":null,"Title":"Enable publishing build logs in the publish step","State":"closed","Body":"cc: @jcagme ","Url":"https://github.com/dotnet/corefx/pull/36225","RelatedDescription":"Closed or merged PR \"Enable publishing build logs in the publish step\" (#36225)"},{"Id":"423994157","IsPullRequest":true,"CreatedAt":"2019-03-22T00:11:26","Actor":"jkoritzinsky","Number":"36224","RawContent":null,"Title":"Fix WinRT marshalling for NotifyPropertyChangedEventArgs and NotifyCollectionChangedEventArgs (CoreFX side)","State":"open","Body":"The fix for dotnet/corefx#35909 requires both some runtime work and some framework work since the marshalling helpers for NotifyPropertyChangedEventArgs and NotifyCollectionChangedEventArgs lives in corefx.\r\n\r\nIn this PR:\r\n\r\n - Update the signatures of `INotifyCollectionChangedEventArgsFactory.CreateInstanceWithAllParameters` and `INotifyPropertyChangedEventArgsFactory.CreateInstance` to be as close to their official `winmd` signature as possible.\r\n\r\nWe cannot update the return types since we need to make sure we return the raw COM object pointer and not a pointer to an RCW that was projected through our WinRT type projection back to managed. (depends on dotnet/coreclr#23401)\r\n\r\n- Call a new function on `System.Runtime.InteropServices.Marshal` called `GetUniqueObjectForIUnknownIgnoreWinRT` (introduced in dotnet/coreclr#23401) to get back an RCW for the IUnknown pointer without going through the WinRT projections. The WinRT projections for `INotifyPropertyChangedEventArgs` and `INotifyCollectionChangedEventArgs` go through this code to project themselves to the managed code, so we need a way to get back a \"raw\" RCW that is not projected to avoid infinitely recursing into a stack-overflow (current behavior) and avoid having to manually traversing the vtable of the native interfaces (impractical to implement).\r\n\r\nDepends on dotnet/coreclr#23401\r\n\r\nFixes #35909 ","Url":"https://github.com/dotnet/corefx/pull/36224","RelatedDescription":"Open PR \"Fix WinRT marshalling for NotifyPropertyChangedEventArgs and NotifyCollectionChangedEventArgs (CoreFX side)\" (#36224)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"424439089","IsPullRequest":true,"CreatedAt":"2019-03-23T01:30:14","Actor":"dotnet-bot","Number":"34366","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34366","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34366)"},{"Id":"424439100","IsPullRequest":true,"CreatedAt":"2019-03-23T01:30:10","Actor":"dotnet-bot","Number":"34367","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34367","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#34367)"},{"Id":"424439121","IsPullRequest":true,"CreatedAt":"2019-03-23T01:30:05","Actor":"dotnet-bot","Number":"34369","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34369","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#34369)"},{"Id":"424391101","IsPullRequest":true,"CreatedAt":"2019-03-23T01:29:44","Actor":"sharwell","Number":"34361","RawContent":null,"Title":"Updated wait operations to fix unreliable .editorconfig integration tests","State":"closed","Body":"This is an interim stability improvement while @jasonmalinowski continues to investigate asynchronous operations in this path.","Url":"https://github.com/dotnet/roslyn/pull/34361","RelatedDescription":"Closed or merged PR \"Updated wait operations to fix unreliable .editorconfig integration tests\" (#34361)"},{"Id":"424445795","IsPullRequest":false,"CreatedAt":"2019-03-23T00:53:37","Actor":"tmat","Number":"34371","RawContent":null,"Title":"Make all compiler parameters available from Project in Workspace layer","State":"open","Body":"Specifically, Edit and Continue needs to know the value of `/out` parameter.","Url":"https://github.com/dotnet/roslyn/issues/34371","RelatedDescription":"Open issue \"Make all compiler parameters available from Project in Workspace layer\" (#34371)"},{"Id":"424439729","IsPullRequest":true,"CreatedAt":"2019-03-23T00:04:15","Actor":"dibarbet","Number":"34370","RawContent":null,"Title":"[PERSONAL REVIEW] Features/lsp support","State":"open","Body":"Verified - \r\n1.  ```build -pack``` creates nuget pkg ```artifacts/packages/Debug/Shipping/Microsoft.CodeAnalysis.Protocol.LanguageServices.3.1.0-dev.nupkg```\r\n2.  ```%localappdata%/Microsoft/VisualStudio/16.0...RoslynDev/devenv.exe.config``` contains \r\n```xml\r\n<dependentAssembly>\r\n    <assemblyIdentity name=\"Microsoft.CodeAnalysis.Protocol.LanguageServices\" publicKeyToken=\"<redacted>\" culture=\"neutral\"/>\r\n    <bindingRedirect oldVersion=\"0.0.0.0-42.42.42.42\" newVersion=\"42.42.42.42\"/>\r\n    <codeBase version=\"42.42.42.42\" href=\"C:\\USERS\\DABARBET\\APPDATA\\LOCAL\\MICROSOFT\\VISUALSTUDIO\\16.0_57BEAA6BROSLYNDEV\\EXTENSIONS\\MICROSOFT\\ROSLYN LANGUAGE SERVICES\\42.42.42.4242424\\Microsoft.CodeAnalysis.Protocol.LanguageServices.dll\"/>\r\n</dependentAssembly>\r\n```\r\n3.  ```%localappdata%/Microsoft/VisualStudio/16.0...RoslynDev/Extensions/Microsoft/Roslyn Language Services/42.../Microsoft.CodeAnalysis.Protocol.LanguageServices.dll``` exists","Url":"https://github.com/dotnet/roslyn/pull/34370","RelatedDescription":"Open PR \"[PERSONAL REVIEW] Features/lsp support\" (#34370)"},{"Id":"424439112","IsPullRequest":true,"CreatedAt":"2019-03-23T00:00:32","Actor":"dotnet-bot","Number":"34368","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"open","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34368","RelatedDescription":"Open PR \"Merge master to features/NullableDogfood\" (#34368)"},{"Id":"424437486","IsPullRequest":true,"CreatedAt":"2019-03-22T23:49:51","Actor":"AlekseyTs","Number":"34365","RawContent":null,"Title":"Adjust Implement Interface action for Default Interface Methods","State":"open","Body":"- Do not generate implementation for sealed or static members.\r\n- Do not generate implicit implementation for non-public members.\r\n- Do not generate explicit implementation for inaccessible members.","Url":"https://github.com/dotnet/roslyn/pull/34365","RelatedDescription":"Open PR \"Adjust Implement Interface action for Default Interface Methods\" (#34365)"},{"Id":"424407435","IsPullRequest":true,"CreatedAt":"2019-03-22T21:31:27","Actor":"GeorgeAlexandria","Number":"34364","RawContent":null,"Title":"Append xml doc comment for ILocalSymbol.IsFunctionValue","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/34364","RelatedDescription":"Open PR \"Append xml doc comment for ILocalSymbol.IsFunctionValue\" (#34364)"},{"Id":"424406938","IsPullRequest":true,"CreatedAt":"2019-03-22T21:29:48","Actor":"ivanbasov","Number":"34363","RawContent":null,"Title":"VS SDK update to 16.1","State":"open","Body":"Need it for the right fix of https://github.com/dotnet/roslyn/issues/34089","Url":"https://github.com/dotnet/roslyn/pull/34363","RelatedDescription":"Open PR \"VS SDK update to 16.1\" (#34363)"},{"Id":"424403092","IsPullRequest":false,"CreatedAt":"2019-03-22T21:17:01","Actor":"mikadumont","Number":"34362","RawContent":null,"Title":"Ctrl+Q does not work once I uninstalled ReSharper and reset my keybindings to default. ","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 Preview. \r\n\r\n**Steps to Reproduce**:\r\n1. Uninstall ReSharper\r\n2. Set keybindings to default and click reset.  \r\n3. Restart Visual Studio.\r\n4. Ctrl+Q disappears from the search visual studio box and doesn't trigger. \r\n\r\n**Expected Behavior**:\r\nExpect Ctrl+Q to work after uninstalling ReSharper and resetting my keybdindings to default.\r\n","Url":"https://github.com/dotnet/roslyn/issues/34362","RelatedDescription":"Open issue \"Ctrl+Q does not work once I uninstalled ReSharper and reset my keybindings to default. \" (#34362)"},{"Id":"424389605","IsPullRequest":false,"CreatedAt":"2019-03-22T20:35:27","Actor":"tmat","Number":"34360","RawContent":null,"Title":"Allow implementations of DocumentDiagnosticAnalyzer to return DiagnosticData","State":"open","Body":"Currently the class defines abstract methods:\r\n\r\n```C#\r\npublic abstract Task<ImmutableArray<Diagnostic>> AnalyzeSyntaxAsync(Document document, CancellationToken cancellationToken);\r\n\r\npublic abstract Task<ImmutableArray<Diagnostic>> AnalyzeSemanticsAsync(Document document, CancellationToken cancellationToken);\r\n```\r\n\r\nWhen these methods return the caller converts the returned Diagnostics to `DiagnosticData` inferring the document and span information from Location of the diagnostic. This is good for the common case where the diagnostics originate from a compiler or an analyzer, but in some cases the implementation needs to cons up a special Location just to make the inference logic produce the right `DiagnosticData`. \r\n\r\nThe proposal is to add methods that return DiagnosticData like so:\r\n\r\n```C#\r\npublic virtual Task<ImmutableArray<Diagnostic>> AnalyzeSyntaxAsync(Document document, CancellationToken cancellationToken) => throw new NotImplementedException(\"Must override either AnalyzeSyntaxAsync or AnalyzeSyntaxImplAsync\");\r\n\r\npublic virtual Task<ImmutableArray<Diagnostic>> AnalyzeSemanticsAsync(Document document, CancellationToken cancellationToken) => throw new NotImplementedException(\"Must override either AnalyzeSemanticsAsync or AnalyzeSemanticsAsync\");\r\n\r\npublic virtual Task<ImmutableArray<DiagnosticData>> AnalyzeSyntaxImplAsync(Document document, CancellationToken cancellationToken)\r\n{\r\n  var diagnostics = await AnalyzeSyntaxAsync();\r\n  convert diagnostics to diagnostic data;\r\n}\r\n\r\npublic abstract Task<ImmutableArray<DiagnosticData>> AnalyzeSemanticsImplAsync(Document document, CancellationToken cancellationToken)\r\n{\r\n  var diagnostics = await AnalyzeSemanticsAsync();\r\n  convert diagnostics to diagnostic data;\r\n}\r\n```\r\n\r\nThe implementation can then choose to return either Diagnostics or DiagnosticData.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/34360","RelatedDescription":"Open issue \"Allow implementations of DocumentDiagnosticAnalyzer to return DiagnosticData\" (#34360)"},{"Id":"424377930","IsPullRequest":true,"CreatedAt":"2019-03-22T20:00:28","Actor":"ryzngard","Number":"34359","RawContent":null,"Title":"Do not return null task In RemoveHostClientExtensions","State":"open","Body":"If `IRemoveHostClientService` does not exist, this extension can return a null task. Instead it should return a task with a null result.","Url":"https://github.com/dotnet/roslyn/pull/34359","RelatedDescription":"Open PR \"Do not return null task In RemoveHostClientExtensions\" (#34359)"},{"Id":"424175712","IsPullRequest":true,"CreatedAt":"2019-03-22T18:30:08","Actor":"dotnet-bot","Number":"34350","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34350","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34350)"},{"Id":"424337892","IsPullRequest":true,"CreatedAt":"2019-03-22T18:10:32","Actor":"ryzngard","Number":"34358","RawContent":null,"Title":"Move checks in build.ps1 into try/catch block","State":"open","Body":"Moves the powershell version and longpath checks into the try/catch block. \r\n\r\nAlso changes the `Write-Warning` to `Write-Host` to better fit the rest of the output in the script","Url":"https://github.com/dotnet/roslyn/pull/34358","RelatedDescription":"Open PR \"Move checks in build.ps1 into try/catch block\" (#34358)"},{"Id":"424335025","IsPullRequest":false,"CreatedAt":"2019-03-22T18:03:20","Actor":"kendrahavens","Number":"34357","RawContent":null,"Title":"Ability to promote dead code analysis suggestion to warning or error","State":"open","Body":"Ability to promote dead code analysis suggestion (IDE0051) to warning or error\r\n\r\n![image](https://user-images.githubusercontent.com/8293542/54843595-fa9be380-4c91-11e9-85cb-436adcf768ae.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/34357","RelatedDescription":"Open issue \"Ability to promote dead code analysis suggestion to warning or error\" (#34357)"},{"Id":"424317118","IsPullRequest":false,"CreatedAt":"2019-03-22T17:19:36","Actor":"JoeRobich","Number":"34356","RawContent":null,"Title":"Re-enable EnableNgenOptimizationLogDetails","State":"open","Body":"Once we have been updated with a version of the Arcade SDK that contains a fix for https://github.com/dotnet/arcade/issues/2309 we should revert the change made in https://github.com/dotnet/roslyn/pull/34339","Url":"https://github.com/dotnet/roslyn/issues/34356","RelatedDescription":"Open issue \"Re-enable EnableNgenOptimizationLogDetails\" (#34356)"},{"Id":"424026106","IsPullRequest":true,"CreatedAt":"2019-03-22T17:07:02","Actor":"jcouv","Number":"34348","RawContent":null,"Title":"Fix completion after null-coalescing assignment","State":"closed","Body":"@ivanbasov  for review\r\n\r\nFYI @RikkiGibson \r\nFixes https://github.com/dotnet/roslyn/issues/34324","Url":"https://github.com/dotnet/roslyn/pull/34348","RelatedDescription":"Closed or merged PR \"Fix completion after null-coalescing assignment\" (#34348)"},{"Id":"424272298","IsPullRequest":false,"CreatedAt":"2019-03-22T17:05:55","Actor":"JoeRobich","Number":"34354","RawContent":null,"Title":"Spanish_Unit_Tests Job test timeout exceeded","State":"closed","Body":"[Test Logs](https://dev.azure.com/dnceng/public/_build/results?buildId=130642&view=logs&jobId=25fa373a-98a5-5235-2ed8-ead0b7a28f80)\r\n[Test Logs](https://dev.azure.com/dnceng/public/_build/results?buildId=130679&view=logs)\r\n\r\n```\r\n   6 running,  0 queued, 54 completed\r\n   5 running,  0 queued, 55 completed\r\n   4 running,  0 queued, 56 completed\r\n   3 running,  0 queued, 57 completed\r\n   2 running,  0 queued, 58 completed\r\n   1 running,  0 queued, 59 completed\r\nRoslyn Error: test timeout exceeded, dumping remaining processes\r\nDumping xunit.console.x86 5456 to F:\\workspace\\_work\\1\\s\\artifacts\\log\\Debug\\xunit.console.x86-0.dmp ... succeeded\r\nCommand failed to execute with exit code 1: F:\\workspace\\_work\\1\\s\\artifacts\\bin\\RunTests\\Debug\\net472\\RunTests.exe \"C:\\Users\\vsagent\\.nuget\\packages\\xunit.runner.console\\2.4.1-pre.build.4059\\tools\\net472\" \"-out:F:\\workspace\\_work\\1\\s\\artifacts\\TestResults\\Debug\" \"-logs:F:\\workspace\\_work\\1\\s\\artifacts\\log\\Debug\" -nocache -tfm:net472 -xml -timeout:65 -procdumppath:F:\\workspace\\_work\\1\\s\\.tools\\ProcDump F:\\workspace\\_work\\1\\s\\artifacts\\bin\\InteractiveHost.UnitTests\\Debug\\net472\\InteractiveHost.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.Build.Tasks.CodeAnalysis.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.CodeAnalysis.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CodeStyle.UnitTests\\Debug\\net46\\Microsoft.CodeAnalysis.CodeStyle.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.CodeStyle.UnitTests\\Debug\\net46\\Microsoft.CodeAnalysis.CSharp.CodeStyle.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.CommandLine.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.CommandLine.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.EditorFeatures.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.EditorFeatures.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.EditorFeatures2.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.EditorFeatures2.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Emit.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Emit.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.ExpressionCompiler.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.ExpressionCompiler.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.IOperation.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.IOperation.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.ResultProvider.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.ResultProvider.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Scripting.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Scripting.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Scripting.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Scripting.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Symbol.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Symbol.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Syntax.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Syntax.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Workspaces.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Workspaces.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.EditorFeatures.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.EditorFeatures.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.EditorFeatures2.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.EditorFeatures2.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.FunctionResolver.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.ExpressionEvaluator.FunctionResolver.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Scripting.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Scripting.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Scripting.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Scripting.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.CodeStyle.UnitTests\\Debug\\net46\\Microsoft.CodeAnalysis.VisualBasic.CodeStyle.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.CommandLine.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.CommandLine.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Emit.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Emit.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.ExpressionCompiler.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.ExpressionEvaluator.ExpressionCompiler.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.ResultProvider.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.ExpressionEvaluator.ResultProvider.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Scripting.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Scripting.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Scripting.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Scripting.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Semantic.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Symbol.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Symbol.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Syntax.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Syntax.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Workspaces.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Workspaces.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Workspaces.MSBuild.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Workspaces.MSBuild.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Workspaces.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Workspaces.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.VisualStudio.LanguageServices.CSharp.UnitTests\\Debug\\net472\\Microsoft.VisualStudio.LanguageServices.CSharp.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.VisualStudio.LanguageServices.UnitTests\\Debug\\net472\\Microsoft.VisualStudio.LanguageServices.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Roslyn.Compilers.VisualBasic.IOperation.UnitTests\\Debug\\net472\\Roslyn.Compilers.VisualBasic.IOperation.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Roslyn.VisualStudio.Next.UnitTests\\Debug\\net472\\Roslyn.VisualStudio.Next.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\VBCSCompiler.UnitTests\\Debug\\net472\\VBCSCompiler.UnitTests.dll\r\nSystem.Management.Automation.RuntimeException: Command failed to execute with exit code 1: F:\\workspace\\_work\\1\\s\\artifacts\\bin\\RunTests\\Debug\\net472\\RunTests.exe \"C:\\Users\\vsagent\\.nuget\\packages\\xunit.runner.console\\2.4.1-pre.build.4059\\tools\\net472\" \"-out:F:\\workspace\\_work\\1\\s\\artifacts\\TestResults\\Debug\" \"-logs:F:\\workspace\\_work\\1\\s\\artifacts\\log\\Debug\" -nocache -tfm:net472 -xml -timeout:65 -procdumppath:F:\\workspace\\_work\\1\\s\\.tools\\ProcDump F:\\workspace\\_work\\1\\s\\artifacts\\bin\\InteractiveHost.UnitTests\\Debug\\net472\\InteractiveHost.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.Build.Tasks.CodeAnalysis.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.CodeAnalysis.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CodeStyle.UnitTests\\Debug\\net46\\Microsoft.CodeAnalysis.CodeStyle.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.CodeStyle.UnitTests\\Debug\\net46\\Microsoft.CodeAnalysis.CSharp.CodeStyle.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.CommandLine.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.CommandLine.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.EditorFeatures.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.EditorFeatures.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.EditorFeatures2.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.EditorFeatures2.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Emit.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Emit.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.ExpressionCompiler.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.ExpressionCompiler.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.IOperation.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.IOperation.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.ResultProvider.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.ResultProvider.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Scripting.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Scripting.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Scripting.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Scripting.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Symbol.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Symbol.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Syntax.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Syntax.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.CSharp.Workspaces.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.CSharp.Workspaces.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.EditorFeatures.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.EditorFeatures.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.EditorFeatures2.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.EditorFeatures2.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.FunctionResolver.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.ExpressionEvaluator.FunctionResolver.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Scripting.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Scripting.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Scripting.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Scripting.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.CodeStyle.UnitTests\\Debug\\net46\\Microsoft.CodeAnalysis.VisualBasic.CodeStyle.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.CommandLine.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.CommandLine.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Emit.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Emit.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.ExpressionCompiler.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.ExpressionEvaluator.ExpressionCompiler.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.ResultProvider.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.ExpressionEvaluator.ResultProvider.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Scripting.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Scripting.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Scripting.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Scripting.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Semantic.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Symbol.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Symbol.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Syntax.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Syntax.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Workspaces.Desktop.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Workspaces.Desktop.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Workspaces.MSBuild.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Workspaces.MSBuild.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.CodeAnalysis.Workspaces.UnitTests\\Debug\\net472\\Microsoft.CodeAnalysis.Workspaces.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.VisualStudio.LanguageServices.CSharp.UnitTests\\Debug\\net472\\Microsoft.VisualStudio.LanguageServices.CSharp.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Microsoft.VisualStudio.LanguageServices.UnitTests\\Debug\\net472\\Microsoft.VisualStudio.LanguageServices.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Roslyn.Compilers.VisualBasic.IOperation.UnitTests\\Debug\\net472\\Roslyn.Compilers.VisualBasic.IOperation.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\Roslyn.VisualStudio.Next.UnitTests\\Debug\\net472\\Roslyn.VisualStudio.Next.UnitTests.dll F:\\workspace\\_work\\1\\s\\artifacts\\bin\\VBCSCompiler.UnitTests\\Debug\\net472\\VBCSCompiler.UnitTests.dll\r\nen Exec-CommandCore, F:\\workspace\\_work\\1\\s\\eng\\build-utils.ps1: línea 81\r\nen Exec-Console, F:\\workspace\\_work\\1\\s\\eng\\build-utils.ps1: línea 150\r\nen TestUsingOptimizedRunner, F:\\workspace\\_work\\1\\s\\eng\\build.ps1: línea 429\r\nen <ScriptBlock>, F:\\workspace\\_work\\1\\s\\eng\\build.ps1: línea 611\r\nen <ScriptBlock>, <sin archivo>: línea 1\r\nKilling running build processes...\r\n##[error]Cmd.exe exited with code '1'.\r\n##[section]Finishing: Build and Test\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/34354","RelatedDescription":"Closed issue \"Spanish_Unit_Tests Job test timeout exceeded\" (#34354)"},{"Id":"424183907","IsPullRequest":true,"CreatedAt":"2019-03-22T16:41:50","Actor":"dotnet-maestro[bot]","Number":"34351","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/34351","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#34351)"},{"Id":"424281477","IsPullRequest":true,"CreatedAt":"2019-03-22T15:58:32","Actor":"jasonmalinowski","Number":"34355","RawContent":null,"Title":"Fix GetOpenDocumentInCurrentContextWithChanges with linked files","State":"open","Body":"If you call GetOpenDocumentInCurrentContextWithChanges, and the SourceText given isn't the one currently in the workspace, it forks the solution to get the text to match. It was only forking the active context, which meant if the feature (like completion) then tried to look at the other linked files, it might crash because the text is entirely in a different state. The crashes we saw in the wild are when editing towards the end of the file and you had a delete -- it means a span in one file is simply running past the end of one of the linked documents.\r\n\r\nThe fix is to make sure all linked copies are updated.","Url":"https://github.com/dotnet/roslyn/pull/34355","RelatedDescription":"Open PR \"Fix GetOpenDocumentInCurrentContextWithChanges with linked files\" (#34355)"},{"Id":"424241173","IsPullRequest":true,"CreatedAt":"2019-03-22T14:37:25","Actor":"kzu","Number":"34353","RawContent":null,"Title":"Add ExternalAccess for Xamarin","State":"open","Body":"Xamarin is planning on unifying some Rosln-powered analyzers, code\r\nfixers and completion providers into a new shared (for both VS and\r\nVSfM) repository and some of the existing code that currently lives\r\nin MonoDevelop repo requires internal access.","Url":"https://github.com/dotnet/roslyn/pull/34353","RelatedDescription":"Open PR \"Add ExternalAccess for Xamarin\" (#34353)"},{"Id":"424193076","IsPullRequest":true,"CreatedAt":"2019-03-22T12:47:04","Actor":"KGRWhite","Number":"34352","RawContent":null,"Title":"Typo Fix","State":"open","Body":"Noticed and fixed typo while reading docs","Url":"https://github.com/dotnet/roslyn/pull/34352","RelatedDescription":"Open PR \"Typo Fix\" (#34352)"},{"Id":"424055641","IsPullRequest":false,"CreatedAt":"2019-03-22T05:42:14","Actor":"valdisiljuconoks","Number":"34349","RawContent":null,"Title":"Visual Studio 2019 RC file closed after executing \"rename file to xxx.cs\" action","State":"open","Body":"**Version Used**: \r\nVS 16.0 RC3\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Add new class file `Class1.cs` with type `Class1` inside\r\n2. Rename `Class1` to `Class2`\r\n3. Open Quick Actions menu and choose \"Rename file to Class2.cs\"\r\n\r\n**Expected Behavior**:\r\nNew `Class2.cs` file remains still open in IDE.\r\n\r\n**Actual Behavior**:\r\nFile is closed and file one under is open in preview (if this feature is enabled).","Url":"https://github.com/dotnet/roslyn/issues/34349","RelatedDescription":"Open issue \"Visual Studio 2019 RC file closed after executing \"rename file to xxx.cs\" action\" (#34349)"},{"Id":"424021189","IsPullRequest":false,"CreatedAt":"2019-03-22T02:35:09","Actor":"jdm7dv","Number":"34347","RawContent":null,"Title":"Cannot find path 'D:\\roslyn\\System.Windows.Forms.dll' because it does not exist.","State":"open","Body":"**Version Used**: \r\n Windows 8.1\r\n**Steps to Reproduce**:\r\n\r\n1. build a release version of the powershell rc set PATH in the Control Panel replace old system powershell env variable. sign out sign back in to set variable not using a sandbox.\r\n2. open Visual 2017 CMD prompt\r\n3. runt the restore.cmd batch file.\r\n\r\n**Expected Behavior**:\r\nrestore.cmd to complete \r\n**Actual Behavior**:\r\nCannot find path 'D:\\roslyn\\System.Windows.Forms.dll' because it does not exist.","Url":"https://github.com/dotnet/roslyn/issues/34347","RelatedDescription":"Open issue \"Cannot find path 'D:\\roslyn\\System.Windows.Forms.dll' because it does not exist.\" (#34347)"},{"Id":"423991751","IsPullRequest":true,"CreatedAt":"2019-03-22T01:30:07","Actor":"dotnet-bot","Number":"34345","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34345","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34345)"},{"Id":"424002268","IsPullRequest":true,"CreatedAt":"2019-03-22T00:52:27","Actor":"ivanbasov","Number":"34346","RawContent":null,"Title":"Refactoring of AbstractRecommendationService. Required for ThenInclude","State":"open","Body":"Preparation for https://github.com/dotnet/roslyn/pull/34312","Url":"https://github.com/dotnet/roslyn/pull/34346","RelatedDescription":"Open PR \"Refactoring of AbstractRecommendationService. Required for ThenInclude\" (#34346)"},{"Id":"423981530","IsPullRequest":true,"CreatedAt":"2019-03-21T23:39:29","Actor":"chcosta","Number":"34343","RawContent":null,"Title":"Validating CI failures","State":"closed","Body":"Previous PR attempt just stopped scheduling CI builds.  Weird.  Trying this again..","Url":"https://github.com/dotnet/roslyn/pull/34343","RelatedDescription":"Closed or merged PR \"Validating CI failures\" (#34343)"},{"Id":"423984451","IsPullRequest":true,"CreatedAt":"2019-03-21T23:38:22","Actor":"chcosta","Number":"34344","RawContent":null,"Title":"/* Do Not Merge */ Validate CI failures","State":"closed","Body":"hmm... Still trying to get Azure DevOps builds to run.","Url":"https://github.com/dotnet/roslyn/pull/34344","RelatedDescription":"Closed or merged PR \"/* Do Not Merge */ Validate CI failures\" (#34344)"},{"Id":"423978586","IsPullRequest":true,"CreatedAt":"2019-03-21T23:02:35","Actor":"sharwell","Number":"34342","RawContent":null,"Title":"Enable VSTHRD003 (Avoid awaiting foreign Tasks)","State":"open","Body":"Fixes #34331 ","Url":"https://github.com/dotnet/roslyn/pull/34342","RelatedDescription":"Open PR \"Enable VSTHRD003 (Avoid awaiting foreign Tasks)\" (#34342)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"424462989","IsPullRequest":true,"CreatedAt":"2019-03-23T04:45:08","Actor":"Dotnet-GitSync-Bot","Number":"7204","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7204","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7204)"},{"Id":"424449878","IsPullRequest":true,"CreatedAt":"2019-03-23T02:50:28","Actor":"Dotnet-GitSync-Bot","Number":"7203","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7203","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7203)"},{"Id":"424383732","IsPullRequest":true,"CreatedAt":"2019-03-23T01:37:01","Actor":"Dotnet-GitSync-Bot","Number":"7202","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7202","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7202)"},{"Id":"423956207","IsPullRequest":true,"CreatedAt":"2019-03-22T03:37:40","Actor":"jkotas","Number":"7198","RawContent":null,"Title":" Implement GetConservativeUpperBoundForOutgoingArgs for Unix","State":"closed","Body":"Fixes #7118 ","Url":"https://github.com/dotnet/corert/pull/7198","RelatedDescription":"Closed or merged PR \" Implement GetConservativeUpperBoundForOutgoingArgs for Unix\" (#7198)"},{"Id":"424019704","IsPullRequest":true,"CreatedAt":"2019-03-22T03:37:24","Actor":"Dotnet-GitSync-Bot","Number":"7201","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @ahoefling","Url":"https://github.com/dotnet/corert/pull/7201","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7201)"},{"Id":"423999173","IsPullRequest":false,"CreatedAt":"2019-03-22T00:35:51","Actor":"christianscheuer","Number":"7200","RawContent":null,"Title":"[Question] CoreRT future plans","State":"open","Body":"Dear CoreRT team,\r\n\r\nHaving followed this repo for now a couple of years and having developed a product depending on it, it's been quite a journey to follow the development in here. It's been very rewarding to be able to follow the progress of a compiler and runtime and I've been stoked to see that it was finally possible to do full AOT compilation of .NET. It's been a joy to watch the discussions and PRs come in one by one, slowly improving the product - thank you to the whole team for all their hard work on this!\r\n\r\nNow for my question.\r\nDuring the past months I've started to notice hints about the future of CoreRT in a growing number of discussions around github and I've been surprised to see references to that CoreRT is still considered an experimental runtime and is often ruled out as a good solution for customers. Whereas initially over the first years following this, it felt like CoreRT was on a path to becoming part of the official \"dotnet\" CLI experience, but these recent discussions seem to indicate that the opposite is true. It strikes me that in the long discussion thread on single file deployment many of the use cases would benefit from CoreRT yet it seems like everybody is ruling it out for reasons I still don't fully understand (apart from the obvious dynamic plugin loading, but honestly there are many alternative ways to implement plugins in CoreRT, some of which we use in our product).\r\n\r\nIt seems to me that you have a stellar product here that would solve so many issues if it were on a path to official support, yet at some point along the way it was decided to not fully support it anyway. @jkotas you hinted in the discussion that the technology would likely end up in a (different) product some day, but even if that calmed my nerves slightly, it also sparked more questions, such as - can we continue to rely on this compiler for our product, or do we run the risk of it suddenly falling out of grace.\r\nI thought at one point that the decision to not officially support CoreRT was simply that it wasn't ready. But now that it feels increasingly more mature yet seems to be ruled out of official support plans, it strikes me that it might be a more strategic decision.\r\n\r\nI know that this might be a tricky question to answer in a public forum, but please don't take it the wrong way. I'm just curious to try to understand if full AOT compilation (not CPAOT but CoreRT) is still being considered a strategic part of the .NET future.\r\n\r\nI have noticed the efforts to unify the sources from the various runtimes which is another hint that long time development is intended. I understand that this repo serves many officially supported products, among those now .NET Native and CPAOT, which leads me to have greater trust in CoreRT going forward.\r\n\r\nBut I hope it makes sense that it would be nice at one point to gain a little clarity of what Microsoft's intentions are in the longer term in this space. In my ideal world, it would be decided to acknowledge how great of a product this already is and it would gain a permanent place on the .NET stage.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7200","RelatedDescription":"Open issue \"[Question] CoreRT future plans\" (#7200)"},{"Id":"423991016","IsPullRequest":true,"CreatedAt":"2019-03-21T23:56:51","Actor":"trylek","Number":"7199","RawContent":null,"Title":"Integrating test execution into SuperIlc and other improvements","State":"open","Body":"1) Change --cpaot and --corerun from boolean flags to paths to the\r\nactual compilers; this also implicitly removes the --tool-directory\r\noption.\r\n\r\n2) Introduce new compiler index for internal use to easily iterate\r\nover CPAOT vs. Crossgen results. I have also changed the output\r\ndirectory name to be based on this logical enumeration rather than\r\non the plain file name of the compiler exe.\r\n\r\n3) Integrate logic for ETW tracing. I have not yet implemented\r\nthe actual per-assembly JIT breakdown but this delta goes a long way\r\ntowards that goal. The delta is getting big so I'd prefer to merge\r\nsomething in and follow up in a subsequent change if possible.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7199","RelatedDescription":"Open PR \"Integrating test execution into SuperIlc and other improvements\" (#7199)"},{"Id":"423793795","IsPullRequest":true,"CreatedAt":"2019-03-21T16:47:52","Actor":"Dotnet-GitSync-Bot","Number":"7197","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7197","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7197)"},{"Id":"423603532","IsPullRequest":true,"CreatedAt":"2019-03-21T08:49:33","Actor":"Dotnet-GitSync-Bot","Number":"7196","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7196","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7196)"},{"Id":"423543547","IsPullRequest":true,"CreatedAt":"2019-03-21T07:39:13","Actor":"Dotnet-GitSync-Bot","Number":"7195","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @GrabYourPitchforks @GrabYourPitchforks @grant-d @sywhang","Url":"https://github.com/dotnet/corert/pull/7195","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7195)"},{"Id":"421886707","IsPullRequest":true,"CreatedAt":"2019-03-21T01:11:57","Actor":"Dotnet-GitSync-Bot","Number":"7182","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7182","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7182)"},{"Id":"423475823","IsPullRequest":true,"CreatedAt":"2019-03-20T22:34:10","Actor":"nattress","Number":"7194","RawContent":null,"Title":"Get CoreCLR tests from Azure","State":"closed","Body":"Jenkins saved build artifacts are likely to be deleted as we move to AzDO. Move them all to the cloudcijobs account and update URL pointers in the repo.","Url":"https://github.com/dotnet/corert/pull/7194","RelatedDescription":"Closed or merged PR \"Get CoreCLR tests from Azure\" (#7194)"},{"Id":"423152064","IsPullRequest":true,"CreatedAt":"2019-03-20T18:22:11","Actor":"MichalStrehovsky","Number":"7192","RawContent":null,"Title":"Run CoreFX tests single threaded","State":"closed","Body":"Might help us avoid `abort trap 6` that has been plaguing the CI (#7118).\r\n\r\nDisabling parallel execution everywhere because it doesn't have big impact on test execution time and helps keep the changes to build-job.yml short.","Url":"https://github.com/dotnet/corert/pull/7192","RelatedDescription":"Closed or merged PR \"Run CoreFX tests single threaded\" (#7192)"},{"Id":"423152175","IsPullRequest":true,"CreatedAt":"2019-03-20T18:20:16","Actor":"MichalStrehovsky","Number":"7193","RawContent":null,"Title":"Make CoreFX tests RD.XML smaller","State":"closed","Body":"Most of this stuff is no longer needed.","Url":"https://github.com/dotnet/corert/pull/7193","RelatedDescription":"Closed or merged PR \"Make CoreFX tests RD.XML smaller\" (#7193)"},{"Id":"423022378","IsPullRequest":true,"CreatedAt":"2019-03-20T07:41:28","Actor":"jkotas","Number":"7191","RawContent":null,"Title":"Add back APIs dropped from RuntimeHelpers by accident","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7191","RelatedDescription":"Closed or merged PR \"Add back APIs dropped from RuntimeHelpers by accident\" (#7191)"},{"Id":"422926102","IsPullRequest":true,"CreatedAt":"2019-03-19T23:42:06","Actor":"trylek","Number":"7190","RawContent":null,"Title":"SuperIlc improvements, part #1","State":"closed","Body":"This change enables parallelization of ILC compilation when building\r\nmultiple assemblies. For the CoreCLR framework I'm observing about\r\n3~4 times compilation time speedup (about 33 seconds where\r\npreviously I was observing about 120 seconds with SuperIlc and\r\nabout 180 seconds with the legacy scripts).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7190","RelatedDescription":"Closed or merged PR \"SuperIlc improvements, part #1\" (#7190)"},{"Id":"422441417","IsPullRequest":true,"CreatedAt":"2019-03-19T23:03:16","Actor":"trylek","Number":"7189","RawContent":null,"Title":"Fix the last remaining compilation error in ASP.NET assemblies","State":"closed","Body":"This change fixes the build of ASP.NET S.P.Corelib which needs\r\nGC ref map construction for ByRefLike types - I skipped this\r\ncorner case in my initial implementation with a TODO throw.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7189","RelatedDescription":"Closed or merged PR \"Fix the last remaining compilation error in ASP.NET assemblies\" (#7189)"},{"Id":"421843317","IsPullRequest":true,"CreatedAt":"2019-03-19T19:33:05","Actor":"EgorBo","Number":"7180","RawContent":null,"Title":"[WIP] Move Enum to shared","State":"closed","Body":"This PR tests CoreRT side of https://github.com/dotnet/coreclr/pull/23177","Url":"https://github.com/dotnet/corert/pull/7180","RelatedDescription":"Closed or merged PR \"[WIP] Move Enum to shared\" (#7180)"},{"Id":"421749829","IsPullRequest":true,"CreatedAt":"2019-03-19T18:57:19","Actor":"nattress","Number":"7176","RawContent":null,"Title":"Dotnet publish support for ready-to-run images","State":"closed","Body":"* Publishing MSBuild script changes to enable dotnet publish support with `<NativeCodeGen>ReadyToRun</NativeCodeGen>` set in the project file.\r\n    * To enable for a project, add a reference to `Microsoft.DotNet.ILCompiler` package, enable ready-to-run compilation with `<NativeCodeGen>readytorun</NativeCodeGen>` in the project file. Assemblies can be skipped by adding the assembly filename (without extension) to the `ReadyToRunSkipAssembly` item.\r\n    * In ready-to-run mode, the `BuildAllReadyToRunAssemblies` target is used to trigger ILC instead of the `LinkNative` target (which is used for single-file RyuJit mode). `BuildAllReadyToRunAssemblies` compiles assemblies in parallel through nested invocations of MSBuild, each optimizing a single assembly.\r\n    * Sub-invocations of MSBuild use the same project file but override the set of targets that are run, restricting the targets to just collecting the list of dependencies to reference and invoking IlcCompile. This keeps the compilation context the same so all intermediates and binaries go into the same bin and obj directories.\r\n* Add a functional test (WebApi) that is built using the live built compiler in this tree which starts up Asp.Net Core and sends a web request to it.\r\n* Remove .ni extension for produced images to match Crossgen\r\n* Remove the ReadyToRunMultiModule test. It is not an interesting test now we are able to compile all the assemblies in a published .NET Core app.","Url":"https://github.com/dotnet/corert/pull/7176","RelatedDescription":"Closed or merged PR \"Dotnet publish support for ready-to-run images\" (#7176)"},{"Id":"421954193","IsPullRequest":true,"CreatedAt":"2019-03-18T12:58:49","Actor":"MichalStrehovsky","Number":"7186","RawContent":null,"Title":"Add infrastructure to remove framework features","State":"closed","Body":"This makes it possible to remove framework features that add a big pile of junk code and data to the output: ETW instrumentation, and ResourceManager.\r\n\r\nLong term, we will probably want IL Linker to do this, but given the level of funding for CoreRT, interest in making IL Linker play well with other things that hook into the build flow, etc., it's easier to just put this functionality into the CoreRT compiler for now. This is sufficiently \"on the side\" within the compiler that I'm not too worried about it. It's the same as the temporary RD.XML parser.\r\n\r\nI don't expect this to grow beyond one more thing: removal of globalization code.\r\n\r\nWith this, Hello world goes from 4,187,136 bytes, to 3,798,016 bytes (ETW removed) to 3,364,352 bytes (ETW & resource manager removed).","Url":"https://github.com/dotnet/corert/pull/7186","RelatedDescription":"Closed or merged PR \"Add infrastructure to remove framework features\" (#7186)"},{"Id":"422203816","IsPullRequest":true,"CreatedAt":"2019-03-18T12:58:30","Actor":"MichalStrehovsky","Number":"7188","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7188","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7188)"},{"Id":"422027423","IsPullRequest":false,"CreatedAt":"2019-03-18T03:59:41","Actor":"rogusdev","Number":"7187","RawContent":null,"Title":"System.IO.IOException while building CoreRT samples in vagrant box","State":"open","Body":"The Documentation folder has a README that links to \"Prerequisites for building\" here:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md\r\n\r\nHowever, the samples (e.g. HellowWorld and WebApi) instead link to:\r\nhttps://github.com/dotnet/corert/blob/master/samples/prerequisites.md\r\n\r\nI suspect the former doc is more up to date, so perhaps the samples should just link to that.\r\n\r\nHowever even the non-sample prereqs doc appears to be out of date.  I have ubuntu 18.04 (running in virtualbox) and it did not find the dependency \"libicu55\" when I attempted to apt-get it.\r\n\r\nAdditionally, possibly because of the missing dependency (or perhaps because of the virtualbox, tho I doubt it?), I was unable to build HelloWorld in linux.  I got this exception:\r\n```\r\n.../2.2.103/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(308,5): error MSB4018: The \"EmbedAppNameInHost\" task failed unexpectedly. [/vagran\r\nt/dotnet/HelloWorld/HelloWorld.csproj]\r\n.../2.2.103/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(308,5): error MSB4018: System.IO.IOException: Invalid argument [/vagrant/dotnet/He\r\nlloWorld/HelloWorld.csproj]\r\n.../2.2.103/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(308,5): error MSB4018:    at System.IO.MemoryMappedFiles.MemoryMappedView.CreateVi\r\new(SafeMemoryMappedFileHandle memMappedFileHandle, MemoryMappedFileAccess access, Int64 requestedOffset, Int64 requestedSize) [/vagrant/dotnet/HelloWorld/HelloWorld.csproj]\r\n...(call stack continues for a few more lines)\r\n```\r\n\r\nI followed the directions from:\r\nhttps://github.com/dotnet/corert/tree/master/samples/HelloWorld\r\n\r\nIt does work in windows for me.\r\n\r\nThese are the versions that were restored in my initial linux run of this app:\r\n```\r\n  Restoring packages for /vagrant/dotnet/HelloWorld/HelloWorld.csproj...\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetAppHost 2.2.1.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostResolver 2.2.1.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.DotNetHostPolicy 2.2.1.\r\n  Installing runtime.linux-x64.Microsoft.DotNet.ILCompiler 1.0.0-alpha-27516-01.\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 2.2.1.\r\n  Restore completed in 49.34 sec for /vagrant/dotnet/HelloWorld/HelloWorld.csproj.\r\n```","Url":"https://github.com/dotnet/corert/issues/7187","RelatedDescription":"Open issue \"System.IO.IOException while building CoreRT samples in vagrant box\" (#7187)"},{"Id":"421953020","IsPullRequest":true,"CreatedAt":"2019-03-17T18:59:07","Actor":"jkotas","Number":"7185","RawContent":null,"Title":"Enclose Win32 resource file name in quotes","State":"closed","Body":"Fixes #7184","Url":"https://github.com/dotnet/corert/pull/7185","RelatedDescription":"Closed or merged PR \"Enclose Win32 resource file name in quotes\" (#7185)"},{"Id":"421950139","IsPullRequest":false,"CreatedAt":"2019-03-17T18:59:07","Actor":"Fabi","Number":"7184","RawContent":null,"Title":"Can not open input file if spaces in assembly name (remake)","State":"closed","Body":"The current corert version got the same problems like in https://github.com/dotnet/corert/issues/5096\r\n\r\nProbably caused by the Win32 resource implementation.","Url":"https://github.com/dotnet/corert/issues/7184","RelatedDescription":"Closed issue \"Can not open input file if spaces in assembly name (remake)\" (#7184)"},{"Id":"421907804","IsPullRequest":true,"CreatedAt":"2019-03-17T14:01:10","Actor":"MichalStrehovsky","Number":"7183","RawContent":null,"Title":"Add options to favor code size or code speed","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7183","RelatedDescription":"Closed or merged PR \"Add options to favor code size or code speed\" (#7183)"},{"Id":"421799813","IsPullRequest":true,"CreatedAt":"2019-03-17T10:06:49","Actor":"MichalStrehovsky","Number":"7177","RawContent":null,"Title":"Optimize method alignment","State":"closed","Body":"Method alignment of 16 is more optimal in terms of processor cache utilization. This number results in better raw performance in microbenchmarks and more stable microbenchmark results. It also matches the alignment choice made by e.g. the C++ compiler.\r\n\r\nAlso adding opt-out switch for use cases that favor code size to execution speed.","Url":"https://github.com/dotnet/corert/pull/7177","RelatedDescription":"Closed or merged PR \"Optimize method alignment\" (#7177)"},{"Id":"421873177","IsPullRequest":true,"CreatedAt":"2019-03-17T05:24:51","Actor":"Dotnet-GitSync-Bot","Number":"7181","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7181","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7181)"},{"Id":"421821154","IsPullRequest":true,"CreatedAt":"2019-03-16T15:47:49","Actor":"Dotnet-GitSync-Bot","Number":"7179","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Potapy4","Url":"https://github.com/dotnet/corert/pull/7179","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7179)"},{"Id":"421810328","IsPullRequest":true,"CreatedAt":"2019-03-16T14:02:35","Actor":"MichalStrehovsky","Number":"7178","RawContent":null,"Title":"Factor numeric constant parsing out of ParseConstantValue","State":"open","Body":"Salvages the usable part of #5455.\r\n\r\nAfter looking at the Enum code in CoreCLR, Enum APIs already only work on runtime types, so that pull request can be made simpler (no need for a `LowLevelEnumInfo`). I'll look into that one weekend.","Url":"https://github.com/dotnet/corert/pull/7178","RelatedDescription":"Open PR \"Factor numeric constant parsing out of ParseConstantValue\" (#7178)"},{"Id":"421688625","IsPullRequest":true,"CreatedAt":"2019-03-16T03:58:51","Actor":"jkotas","Number":"7175","RawContent":null,"Title":"Delete exclusions of selected upstack framework binaries","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7175","RelatedDescription":"Closed or merged PR \"Delete exclusions of selected upstack framework binaries\" (#7175)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"424443069","IsPullRequest":false,"CreatedAt":"2019-03-23T00:28:57","Actor":"fadimounir","Number":"3035","RawContent":null,"Title":"SDK double writes runtime files when publishing self contained apps","State":"open","Body":"Here's a repro:\r\n1) dotnet new console (make sure to target \"netcoreapp3.0\")\r\n2) Edit the csproj and add a PackageReference to NewtonSoft.Json version 9.0.1.\r\n3) dotnet publish -r win-x64\r\n\r\nThe Json library pulls netstandard1.x runtime packages, and when you run dotnet publish and reference netcoreapp3.0 runtime libraries, the list of files to publish will contain runtime assemblies from both 1.x and 3.0 runtimes, and will end up double writing some of them.\r\n\r\nExample:\r\n.nuget\\packages\\runtime.any.system.io\\4.1.0\\lib\\netstandard1.5\\System.IO.dll\r\n.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview4-27501-7\\runtimes\\win-x64\\lib\\netcoreapp3.0\\System.IO.dll\r\n\r\n\r\nThis also causes errors when crossgen is enabled (Eventually).\r\n\r\nThe expected behavior is that the SDK should probably ensure that there's a unique copy of each assembly, and take the highest version one.","Url":"https://github.com/dotnet/sdk/issues/3035","RelatedDescription":"Open issue \"SDK double writes runtime files when publishing self contained apps\" (#3035)"},{"Id":"424428233","IsPullRequest":true,"CreatedAt":"2019-03-22T22:57:56","Actor":"nguerrera","Number":"3034","RawContent":null,"Title":"Mark packages as non-shipping","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3034","RelatedDescription":"Open PR \"Mark packages as non-shipping\" (#3034)"},{"Id":"423890353","IsPullRequest":false,"CreatedAt":"2019-03-22T00:31:43","Actor":"jnm2","Number":"3031","RawContent":null,"Title":"Native assets are not copied to bin for net472 app if any referenced package uses netstandard2.0","State":"closed","Body":"Full description is here: https://github.com/dotnet/symreader-converter/issues/151\r\n\r\nI suspect this is an SDK bug in `C:\\Program Files\\dotnet\\sdk\\2.1.504\\Sdks\\Microsoft.NET.Sdk\\tools\\net46\\Microsoft.NET.Build.Tasks.dll`; see https://github.com/dotnet/symreader-converter/issues/151#issuecomment-475344092.\r\n\r\nMy workaround for now is to add this to the csproj, but it's obviously brittle:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <ReferenceCopyLocalPaths Include=\"C:\\Users\\jmusser\\.nuget\\packages\\microsoft.diasymreader.native\\1.7.0\\runtimes\\win-x64\\native\\Microsoft.DiaSymReader.Native.amd64.dll\" />\r\n  </ItemGroup>\r\n```","Url":"https://github.com/dotnet/sdk/issues/3031","RelatedDescription":"Closed issue \"Native assets are not copied to bin for net472 app if any referenced package uses netstandard2.0\" (#3031)"},{"Id":"423947858","IsPullRequest":true,"CreatedAt":"2019-03-21T21:22:23","Actor":"nugetlurker","Number":"3033","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5906 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3033","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5906 into sdk\" (#3033)"},{"Id":"423947836","IsPullRequest":true,"CreatedAt":"2019-03-21T21:22:20","Actor":"nugetlurker","Number":"3032","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5906 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5906 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3032","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5906 into sdk\" (#3032)"},{"Id":"423513883","IsPullRequest":true,"CreatedAt":"2019-03-20T23:17:58","Actor":"peterhuene","Number":"3030","RawContent":null,"Title":"Prevent copy-local of runtime assets when targeting .NET Framework TFM.","State":"open","Body":"This commit prevents the copying of \"runtime\" assets (those that end up\r\nin the `runtimes/` sub-directory for resolution based on the RID at\r\nruntime) when building or publishing an application that targets a .NET\r\nFramework TFM.  Only the .NET Core runtime will resolve these assets\r\nbased on RID, so copying them for .NET Framework targeted applications\r\nis unnecessary.\r\n\r\nFixes dotnet/cli#10979.","Url":"https://github.com/dotnet/sdk/pull/3030","RelatedDescription":"Open PR \"Prevent copy-local of runtime assets when targeting .NET Framework TFM.\" (#3030)"},{"Id":"423465719","IsPullRequest":true,"CreatedAt":"2019-03-20T20:49:07","Actor":"livarcocc","Number":"3029","RawContent":null,"Title":"Update branding to 2.2.300","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3029","RelatedDescription":"Open PR \"Update branding to 2.2.300\" (#3029)"},{"Id":"423465302","IsPullRequest":true,"CreatedAt":"2019-03-20T20:48:01","Actor":"livarcocc","Number":"3028","RawContent":null,"Title":"Updating brandh to 2.1.700","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3028","RelatedDescription":"Open PR \"Updating brandh to 2.1.700\" (#3028)"},{"Id":"423048476","IsPullRequest":false,"CreatedAt":"2019-03-20T03:24:01","Actor":"davidwengier","Number":"3027","RawContent":null,"Title":"Duplicate \"_PackageReferenceToAdd\" item name breaks builds in VS","State":"open","Body":"Looks like this was introduced here:\r\nhttps://github.com/dotnet/sdk/commit/63d7cdec5041a9a97b002b1e81d3d1f835cad871\r\n\r\n`_PackageReferenceToAdd` is used twice.\r\nIt's used in: https://github.com/dotnet/sdk/blob/afae0615d5cbb16c058c5ce1fd65215d07df24d9/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.TargetingPackResolution.targets#L124\r\n\r\nand:\r\n\r\nhttps://github.com/dotnet/sdk/blob/f217153b0a1624a012041a4de375faf76ddfdc07/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.DefaultItems.targets#L278\r\n\r\nThis is breaking the https://github.com/dotnet/project-system build in VS for me (we have duplicate nuget references)","Url":"https://github.com/dotnet/sdk/issues/3027","RelatedDescription":"Open issue \"Duplicate \"_PackageReferenceToAdd\" item name breaks builds in VS\" (#3027)"},{"Id":"422694774","IsPullRequest":true,"CreatedAt":"2019-03-19T12:03:51","Actor":"dotnet-maestro[bot]","Number":"3025","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19167.10\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190317.10\r\n- **Date Produced**: 3/18/2019 7:14 AM\r\n- **Commit**: de7be3ba62b92e5c48c36876c851a14f154444af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19167.10\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19167.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190320.2\r\n- **Date Produced**: 3/20/2019 5:43 PM\r\n- **Commit**: f70fa34786cff993625a4548ae0125335eabe82e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19170.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19170.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3025","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3025)"},{"Id":"422622666","IsPullRequest":false,"CreatedAt":"2019-03-19T09:25:27","Actor":"itn3000","Number":"3024","RawContent":null,"Title":"dotnet pack always failed on Ubuntu-18.04 with dotnet-sdk-3.0-preview3","State":"open","Body":"# Overview\r\n\r\n`dotnet pack` command always failed in Ubuntu-18.04 in dotnet-sdk-3.0-preview3.\r\nif dotnet-sdk-2.2 was used, it successed.\r\n\r\n# Environment\r\n\r\nplatform is ubuntu-18.04-x64(created from azure virtual machine)\r\n\r\nhere is my `dotnet --info`\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /home/itn/dotnet/sdk/3.0.100-preview3-010431/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview3-010431 [/home/itn/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/home/itn/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/home/itn/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n1. download dotnet-sdk-3.0-preview3 for linux-x64 from [SDK's download page](https://dotnet.microsoft.com/download/dotnet-core/3.0)\r\n2. extract archive to directory(`$HOME/dotnet`)\r\n3. add `$HOME/dotnet` to `$PATH` env\r\n4. run `dotnet new classlib --name test1`\r\n5. change directory to test1\r\n6. change `TargetFramework` to `netstandard2.1`\r\n6. run `dotnet pack`\r\n\r\n# Expected Behavior\r\n\r\ntest1.nupkg was created in `bin` directory.\r\n\r\n# Actual Behavior\r\n\r\nfailed to create nupkg with following error message.\r\n```\r\n/home/itn/dotnet/sdk/3.0.100-preview3-010431/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(199,5): error NU5019: File not found: '/home/itn/test1/bin/Debug/netstandard2.1/test1.dll'. [/home/itn/test1/test1.csproj]\r\n```\r\n`/home/itn/test1/bin/Debug/netstandard2.1/test1.dll` was created successfuly.\r\nI also tried to change `TargetFramework` to `netstandard2.0`, but did not success.\r\n","Url":"https://github.com/dotnet/sdk/issues/3024","RelatedDescription":"Open issue \"dotnet pack always failed on Ubuntu-18.04 with dotnet-sdk-3.0-preview3\" (#3024)"},{"Id":"421891895","IsPullRequest":false,"CreatedAt":"2019-03-17T07:33:13","Actor":"fernacolo","Number":"3023","RawContent":null,"Title":"PackAsTool true breaks debugging in Visual Studio when project is WPF","State":"open","Body":"I'm writing a tool application that uses WPF. It is intended to be called from console, but it shows graphics that cannot be represented by text, therefore I need WPF. It works fine in .NET Framework, but when migrating to .NET Core, when I add `<PackAsTool>true</PackAsTool>`, VS2019 cannot debug it anymore, saying:\r\n\r\n **The debug executable 'c:\\path\\to\\mytool.exe' specified in 'mytool' debug profile does not exist.**\r\n\r\nThis might be a VS2019 issue (as you are probably thinking right now 😉), however it seems that when `<PackAsTool>true</PackAsTool>` is added to the `.csproj`, it **changes the output type to dll**, even though the project says it's `WinExe`:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <UseWPF>true</UseWPF>\r\n    <PackageType>DotnetTool</PackageType>\r\n    <PackAsTool>true</PackAsTool>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThis is bad because I cannot use the simplicity of `<PackAsTool>true</PackAsTool>` for publishing and installation (i.e. have an automatic shim installed to path).\r\n\r\nEven if I ignore the VS limitation, I'm also not sure if a DLL would work as expected for a WPF project. My understanding is that WPF requires `WinExe` for certain features.\r\n\r\nHere's my `dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nAnd this is my VS version:\r\n\r\n![image](https://user-images.githubusercontent.com/8313235/54486907-1b0c0e00-484c-11e9-80a9-9503c7136747.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3023","RelatedDescription":"Open issue \"PackAsTool true breaks debugging in Visual Studio when project is WPF\" (#3023)"},{"Id":"422743497","IsPullRequest":false,"CreatedAt":"2019-03-15T23:16:35","Actor":"jzabroski","Number":"3026","RawContent":null,"Title":"<EnableDefaultItems>true</EnableDefaultItems> not configurable","State":"open","Body":"Example usage:\r\n\r\n```\r\n<PropertyGroup>\r\n    <EnableDefaultItems>true</EnableDefaultItems>\r\n    <DefaultItems>\r\n      <DefaultItem Type=\"Compile\" Include=\"**/*.cs\" Exclude=\"**/*.user; **/*.*proj; **/*.sln; **/*.vssscc\" />\r\n      <DefaultItem Type=\"EmbeddedResource\" Include=\"**/*.resx; **/*.sql\" Exclude=\"**/*.user; **/*.*proj; **/*.sln; **/*.vssscc\" />\r\n      <DefaultItem Type=\"None\" Include=\"**/*\" Exclude=\"**/*.user; **/*.*proj; **/*.sln; **/*.vssscc\" />\r\n    </DefaultItems>\r\n</PropertyGroup>\r\n```\r\n\r\nhttps://aka.ms/sdkimplicititems lays out the current behavior of `EnableDefaultItems` - I find it strange that the only way to auto-include resources if they have a resx extension.\r\n\r\nI love the ability to do the following, but it does not allow me to recursively include an entire folder as a certain Build Action (like EmbeddedResource):\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <EnableDefaultItems>false</EnableDefaultItems>\r\n</PropertyGroup>\r\n```\r\n\r\nI don't know about most developers, but I hate project file merge conflicts, and we have to deal with a lot of them in our SQL projects using FluentMigrator.  Our directory structure looks like:\r\n\r\n```\r\nDatabase.csproj\r\n \\_ Schema\r\n    \\_ Functions\r\n    \\_ Security\r\n    \\_ Stored Procedures\r\n    \\_ Triggers\r\n    \\_ Types\r\n    \\_ Views\r\n```\r\n\r\nIdeally, I want the ability to say \"any item in this folder tree is an EmbeddedResource\".  I realize you can [use wildcards](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-items?view=vs-2015#BKMK_Wildcards) like `<EmbeddedResource Include=\"Schema/**/*.sql\" />` but the user story doesn't work well - adding new SQL files includes them as Content, etc.  Here is a link to a StackOverflow question where someone else opines on the same pain in a different context of RazorTemplate engine: https://stackoverflow.com/questions/27839645/automatically-add-files-as-embedded\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3026","RelatedDescription":"Open issue \"<EnableDefaultItems>true</EnableDefaultItems> not configurable\" (#3026)"},{"Id":"420462297","IsPullRequest":true,"CreatedAt":"2019-03-15T20:24:11","Actor":"dotnet-maestro[bot]","Number":"3020","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19162.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3020","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3020)"},{"Id":"418571115","IsPullRequest":true,"CreatedAt":"2019-03-15T01:00:20","Actor":"dotnet-bot","Number":"3013","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3013","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3013)"},{"Id":"421179324","IsPullRequest":true,"CreatedAt":"2019-03-14T23:24:43","Actor":"johnbeisner","Number":"3022","RawContent":null,"Title":"Picking up the latest changes from the BuildPerformanceTestAssets repo","State":"closed","Body":"Reference: https://github.com/dotnet/BuildPerformanceTestAssets/pull/5\r\n\r\n@jorive","Url":"https://github.com/dotnet/sdk/pull/3022","RelatedDescription":"Closed or merged PR \"Picking up the latest changes from the BuildPerformanceTestAssets repo\" (#3022)"},{"Id":"420786755","IsPullRequest":true,"CreatedAt":"2019-03-14T23:09:17","Actor":"peterhuene","Number":"3021","RawContent":null,"Title":"Remove duplicates items from resolved publish assets.","State":"closed","Body":"When `CopyLocalLockFileAssemblies` was true, `ReferenceCopyLocalPaths`\r\ncontained the set of `RuntimePackAsset` items.\r\n\r\nWhen resolving assets to copy local for publish, the `RuntimePackAsset` items\r\nwere added twice: once explicitly and again via `ReferenceCopyLocalPaths`.\r\n\r\nThis commit fixes this by only adding to the resolved copy local assets for\r\npublish when `CopyLocalLockFileAssemblies` is false.\r\n\r\nFixes #3007.","Url":"https://github.com/dotnet/sdk/pull/3021","RelatedDescription":"Closed or merged PR \"Remove duplicates items from resolved publish assets.\" (#3021)"},{"Id":"417040414","IsPullRequest":false,"CreatedAt":"2019-03-14T23:09:16","Actor":"sbomer","Number":"3007","RawContent":null,"Title":"Duplicate items in _ResolvedCopyLocalPublishAssets","State":"closed","Body":"- When `ResolveCopyLocalAssets` runs during self-contained publish (`_UseBuildDependencyFile` is false), it outputs `_ResolvedCopyLocalPublishAssets`.\r\n- When `_ComputeResolvedCopyLocalPublishAssets` runs, it adds to `_ResolvedCopyLocalPublishAssets` the contents of (`ReferenceCopyLocalPaths` \\ `_ResolvedCopyLocalBuildAssets`):\r\nhttps://github.com/dotnet/sdk/blob/c60af5f303fa67d25550ecfa54975caef0f5c828/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L398-L399\r\n\r\n`_ResolvedCopyLocalBuildAssets` is empty, so it gets a duplicate copy of items in `ReferenceCopyLocalPaths` (which comes from `RuntimePackAsset`), for example `System.Private.CoreLib.dll`.\r\n\r\nBefore https://github.com/dotnet/sdk/pull/2646, `ResolvedAssembliesToPublish` only had one Item for System.Private.CoreLib.dll. I noticed this while trying to update https://github.com/mono/linker/blob/master/src/ILLink.Tasks/ILLink.Tasks.targets#L451 to work with the newest SDK. `_ManagedAssembliesToLink` was computed from `ResolvedAssembliesToPublish`, but that line breaks when there are multiple files with the same Filename in the input:\r\n```\r\nC:\\Users\\svbomer\\.nuget\\packages\\illink.tasks\\0.1.6\\build\\ILLink.Tasks.targets(451,34): error MSB4094: \"C:\\Users\\svbomer\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview-27324-5\\runtimes\\win-x64\\native\\System.Private.CoreLib.dll;C:\\Users\\svbomer\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview-27324-5\\runtimes\\win-x64\\native\\System.Private.CoreLib.dll\" is an invalid value for the \"AssemblyPath\" parameter of the \"CheckEmbeddedRootDescriptor\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [D:\\linker\\test\\ILLink.Tasks.Tests\\bin\\debug\\netcoreapp3.0\\helloworld\\helloworld.csproj]\r\n```\r\n\r\nhttps://github.com/dotnet/sdk/pull/2666 may be relevant.\r\n\r\n/cc @peterhuene @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3007","RelatedDescription":"Closed issue \"Duplicate items in _ResolvedCopyLocalPublishAssets\" (#3007)"},{"Id":"419948212","IsPullRequest":true,"CreatedAt":"2019-03-13T12:00:14","Actor":"dotnet-maestro[bot]","Number":"3018","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19161.14\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19161.14\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3018","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3018)"},{"Id":"420065077","IsPullRequest":true,"CreatedAt":"2019-03-12T23:01:18","Actor":"dsplaisted","Number":"3019","RawContent":null,"Title":"Don't set \"platform library\" for .NET Core 3.0 and higher","State":"closed","Body":"Don't try to exclude files from the platform library on .NET Core 3.0 and higher, which uses runtime and targeting packs instead\r\n\r\nFixes #3004\r\n\r\nTo help verify whether this is safe, I looked at the places where `MicrosoftNETPlatformLibrary` is used:\r\n\r\n- It's used by the `GenerateDepsFile`, `GenerateRuntimeConfigurationFiles`, and `ResolveCopyLocalAssets` tasks.  These all simply pass it to `LockFileExtensions.CreateProjectContext`.  In that method, it's used as part of the check to determine if the app is framework dependent:\r\n    ```C#\r\n    bool isFrameworkDependent = (platformLibrary != null || runtimeFrameworks?.Any() == true) &&\r\n        (!isSelfContained || string.IsNullOrEmpty(lockFileTarget.RuntimeIdentifier));\r\n    ```\r\n    Note that for .NET Core 3.0 and higher, the `ResolveFrameworkReferences` should add `RuntimeFramework` items, so the `isFrameworkDependent` calculation should still work.\r\n- In the created `ProjectContext`, the `GetRuntimeLibraries` method excludes assets from the platform library for framework dependent apps.\r\n- The `GenerateRuntimeConfigurationFiles` task also uses the platform library from the `ProjectContext` in order to write the runtimeconfig file, but only if there aren't any `RuntimeFrameworks`.\r\n- The `ResolvePackageAssets` task excludes assets from the platform library in `GetPlatformPackageExclusions`.  (It also excludes assets from libraries matching names of `RuntimeFrameworks`, which I believe we should now remove, as those assets will come from runtime packs and won't be in the assets file anyway now).\r\n- The `_RestoreCrossgen` and `PrepforRestoreForComposeStore` use the platform library name.  These are both part of support for `dotnet store`, which we are [considering dropping](https://github.com/dotnet/sdk/issues/2914), and which will need a lot of work in any case if we want it to work when targeting .NET Core 3","Url":"https://github.com/dotnet/sdk/pull/3019","RelatedDescription":"Closed or merged PR \"Don't set \"platform library\" for .NET Core 3.0 and higher\" (#3019)"},{"Id":"419043286","IsPullRequest":false,"CreatedAt":"2019-03-11T15:36:04","Actor":"saxenark","Number":"3014","RawContent":null,"Title":"Installing JRE in microsoft/dotnet:sdk container","State":"closed","Body":"Hi,\r\n\r\nI need JRE to run dependencies for my .NET core sdk 2.2 unit tests in Visual Studio 2017. I would like to know how to install JRE into my windows docker container. Through the docker environment, I tried to run java.exe but it does not run.\r\n\r\nSo, my question is how do I install JRE on my container?\r\n\r\n```\r\nFROM microsoft/dotnet:sdk\r\n\r\nWORKDIR C:/Temp\r\nCOPY jre-8u202-windows-x64.exe ./Java.exe\r\n\r\nWORKDIR C:/P4Source\r\n\r\nI am using Windows Server 2016 1607 with Docker basic EE\r\n\r\nThanks,\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3014","RelatedDescription":"Closed issue \"Installing JRE in microsoft/dotnet:sdk container\" (#3014)"},{"Id":"419249712","IsPullRequest":true,"CreatedAt":"2019-03-11T13:32:19","Actor":"dotnet-maestro[bot]","Number":"3017","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19160.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19160.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19160.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19160.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3017","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3017)"},{"Id":"419177642","IsPullRequest":true,"CreatedAt":"2019-03-10T13:16:08","Actor":"dotnet-maestro[bot]","Number":"3016","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19159.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19159.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3016","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3016)"},{"Id":"419069291","IsPullRequest":true,"CreatedAt":"2019-03-09T14:16:04","Actor":"dotnet-maestro[bot]","Number":"3015","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19158.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19158.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3015","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3015)"},{"Id":"417286822","IsPullRequest":true,"CreatedAt":"2019-03-08T14:43:34","Actor":"dotnet-maestro[bot]","Number":"3008","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19154.14\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19154.14\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19155.29\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19155.29\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19156.20\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19156.20\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19157.23\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19157.23\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3008","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3008)"},{"Id":"418539657","IsPullRequest":true,"CreatedAt":"2019-03-07T23:28:08","Actor":"dotnet-maestro[bot]","Number":"3012","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19157.4\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19157.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3012","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3012)"},{"Id":"418538996","IsPullRequest":false,"CreatedAt":"2019-03-07T22:15:49","Actor":"nkolev92","Number":"3011","RawContent":null,"Title":"The SDK should error if a FrameworkReference is not supported for a certain TFM","State":"open","Body":"Came up during the design discussion for FrameworkReference + NuGet. \r\nhttps://github.com/NuGet/Home/issues/7342\r\n\r\nThe SDK should error if a FrameworkReference is not supported for a certain TFM. \r\n\r\n* In the project author case, clearly call out that this is an authoring mistake. \r\n* In the transitive (project/package) case, clearly blame the package/project. \r\n\r\nIt's worth considering how we handle bad framework assemblies. \r\n\r\n//cc @nguerrera","Url":"https://github.com/dotnet/sdk/issues/3011","RelatedDescription":"Open issue \"The SDK should error if a FrameworkReference is not supported for a certain TFM\" (#3011)"},{"Id":"417443376","IsPullRequest":false,"CreatedAt":"2019-03-06T16:38:50","Actor":"nguerrera","Number":"3009","RawContent":null,"Title":"Trouble moving bin/ and obj/ to .bin/ and .obj/","State":"closed","Body":"*Moved from https://github.com/dotnet/project-system/issues/1437#issuecomment-469568035*\r\n\r\n@dzmitry-lahoda wrote:\r\n\r\nNot sure if right thread - but some tooling is wrong...\r\n\r\nSee the line with `ProjectAssetsFile`? If I remove it - my `csproj` fails to build. \r\nWhy I ever need it? My task for to build from VS 2017 and VS Code and from `dotnet` command line into `.bin` and `.obj` because of Unity:(. So I did it. But when VS 2017 opens solution - it generates `obj`. So I did fix which kinda should work.  But got issues - I followed the path, and got into `C:\\Program Files\\dotnet\\sdk\\2.2.102\\Sdks\\Microsoft.NET.Sdk\\targets\\` folder and into `ProjectAssetsFile`. So here is fix:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <!-- fixing VS 2017 bug which makes it output directory which is not requested -->\r\n  <PropertyGroup>\r\n    <ProjectAssetsFile>$(MSBuildProjectDirectory)\\.obj\\project.assets.json</ProjectAssetsFile>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n      <PreBuildEvent>\r\n       IF EXIST \"$(MSBuildProjectDirectory)\\.obj\\obj\" (\r\n         rmdir \"$(MSBuildProjectDirectory)\\.obj\\obj\" /s /q\r\n       )\r\n       IF EXIST \"$(MSBuildProjectDirectory)\\obj\" (\r\n         move  \"$(MSBuildProjectDirectory)\\obj\" \"$(MSBuildProjectDirectory)\\.obj\"\r\n       )\r\n      </PreBuildEvent>\r\n      \r\n      <PostBuildEvent>\r\n       IF EXIST \"$(MSBuildProjectDirectory)\\.obj\\obj\" (\r\n         rmdir \"$(MSBuildProjectDirectory)\\.obj\\obj\" /s /q\r\n       )\r\n       IF EXIST \"$(MSBuildProjectDirectory)\\obj\" (\r\n         move  \"$(MSBuildProjectDirectory)\\obj\" \"$(MSBuildProjectDirectory)\\.obj\"\r\n       )\r\n      </PostBuildEvent>      \r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n    <IsPackable>false</IsPackable>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <OutputPath>.bin\\Debug\\</OutputPath>\r\n    <BaseIntermediateOutputPath>.obj\\Debug\\</BaseIntermediateOutputPath>\r\n    <IntermediateOutputPath>.obj\\Debug\\</IntermediateOutputPath>\r\n    <BaseOutputPath>.bin\\Debug\\</BaseOutputPath>\r\n    <UseCommonOutputDirectory>true</UseCommonOutputDirectory>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <OutputPath>.bin\\Release\\</OutputPath>\r\n    <BaseIntermediateOutputPath>.obj\\Release\\</BaseIntermediateOutputPath>\r\n    <IntermediateOutputPath>.obj\\Release\\</IntermediateOutputPath>\r\n    <BaseOutputPath>.bin\\Release\\</BaseOutputPath>\r\n    <UseCommonOutputDirectory>true</UseCommonOutputDirectory>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.9.0\" />\r\n    <PackageReference Include=\"xunit\" Version=\"$(xUnitVersion)\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"$(xUnitVersion)\" />\r\n  </ItemGroup>\r\n  </ItemGroup>  \r\n</Project>\r\n````\r\n\r\n\r\nThere is other workaround. Very weird - depends on order of and some hacky `Import` declarations, but it breaks `xunit` runner and VS Code. Ssee lines with `Microsoft.NET.Sdk`:\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <OutputPath>.bin\\Debug\\</OutputPath>\r\n    <BaseIntermediateOutputPath>.obj\\Debug\\</BaseIntermediateOutputPath>\r\n    <IntermediateOutputPath>.obj\\Debug\\</IntermediateOutputPath>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <OutputPath>.bin\\Release\\</OutputPath>\r\n    <BaseIntermediateOutputPath>.obj\\Release\\</BaseIntermediateOutputPath>\r\n    <IntermediateOutputPath>.obj\\Release\\</IntermediateOutputPath>\r\n  </PropertyGroup>\r\n  <Import Project=\"Sdk.props\" Sdk=\"Microsoft.NET.Sdk\" />\r\n  <ItemGroup>\r\n    <None Remove=\".gitignore\" />\r\n\r\n    <None Remove=\"**/*.meta\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Buffers\" Version=\"4.5.0\" />\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.3\" />\r\n    <PackageReference Include=\"System.Memory\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"4.5.2\" />\r\n  </ItemGroup>\r\n\r\n  <Import Project=\"Sdk.targets\" Sdk=\"Microsoft.NET.Sdk\" />\r\n</Project>\r\n```\r\nDoes next relates dotnet/project-system#1438? \r\n\r\nI was not able to find solution on SO. \r\n\r\nShould I create separate issue with that with steps:\r\n1. Build into `.bin` and `.obj`\r\n2. Ensure there are no `bin` and `obj` created.\r\n3. Check VS Code, VS 2017, dotnet.exe\r\n\r\nOr my case is relevant for `respecting`?","Url":"https://github.com/dotnet/sdk/issues/3009","RelatedDescription":"Closed issue \"Trouble moving bin/ and obj/ to .bin/ and .obj/\" (#3009)"},{"Id":"417548547","IsPullRequest":false,"CreatedAt":"2019-03-05T23:22:40","Actor":"sbomer","Number":"3010","RawContent":null,"Title":"GenerateDepsFile no longer respects FilesToSkip from runtime packs","State":"open","Body":"- Runtime pack dependencies in deps.json and in the DependencyContext model have a \"runtimepack.\" prefix prependend to the nuget package id (see https://github.com/dotnet/sdk/commit/16eddf3d635133c35f42974dcd491c8263066b37#diff-0723634e548f98293eebe3970b71e0ddR328).\r\n- The heuristic in `GetPackageParts` gets the package id from the name of a nuspec in a parent directory:\r\n https://github.com/dotnet/sdk/blob/ab2176b3447e3e7820b5a340408110b6d498f907/src/Tasks/Common/NuGetUtils.cs#L48-L52\r\n\r\n`GenerateDepsFile` uses `GetPackageParts` to build the list of packages with dependencies to remove. When it looks for files to trim from the dependency model, it doesn't match any of the dependencies that have the \"runtimepack.\" prefix, so those files don't get skipped.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3010","RelatedDescription":"Open issue \"GenerateDepsFile no longer respects FilesToSkip from runtime packs\" (#3010)"},{"Id":"416947669","IsPullRequest":true,"CreatedAt":"2019-03-05T20:41:11","Actor":"nugetlurker","Number":"3006","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5867 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5867 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/3006","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5867 into sdk\" (#3006)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1107676822957744128","CreatedAt":"2019-03-18T16:15:08+00:00","UserScreenname":"dotnet","Text":"Got a suggested topic or guest for a .NET Community Standup? \n\nLet us know!\n\nhttps://t.co/STWml56tti","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1106559820415406080","CreatedAt":"2019-03-15T14:16:34+00:00","UserScreenname":"dotnet","Text":".NET Core Container Images now Published to Microsoft Container Registry https://t.co/025dCayCnx","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":88,"FavoriteCount":53,"RawContent":null},{"Id":"1106511609768357889","CreatedAt":"2019-03-15T11:05:00+00:00","UserScreenname":"dotnet","Text":"Did you know you could build video games with .NET? \n\nCheck out this episode of #OnDotNet where \n@BrianPeek &amp;… https://t.co/g6DSHnfV18","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":55,"FavoriteCount":20,"RawContent":null},{"Id":"1105555943285288961","CreatedAt":"2019-03-12T19:47:31+00:00","UserScreenname":"dotnet","Text":"Tune in to the @VisualStudio channel on Thursday for a virtual workshop for Windows Application Developers\n\nMore de… https://t.co/6IsLRLIz6N","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2019-03-23T05:30:28.3327322Z","RunDurationInMilliseconds":8964}