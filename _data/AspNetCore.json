{"Data":{"Blog":{"FeedItems":[{"Title":"How to get started with Azure and .NET","PublishedOn":"2018-09-04T19:05:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure is a big cloud with lots of services, and for even the most experienced user it can be intimidating to know which service will best meet your needs. This blog post is intended to provide a short...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/09/04/how-to-get-started-with-azure-and-net/","RawContent":null},{"Title":"Library Manager Released in 15.8","PublishedOn":"2018-08-31T07:47:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Microsoft Library Manager (LibMan) is now available in the general release of Visual Studio 2017 as of v15.8. LibMan first previewed earlier this year, and now, after a much-anticipated wait, LibMan...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/31/library-manager-release-in-15-8/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview1: Endpoint Routing","PublishedOn":"2018-08-27T21:25:25+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Endpoint Routing in 2.2 What is it? We&#8217;re making a big investment in routing starting in 2.2 to make it interoperate more seamlessly with middleware. For 2.2 this will start with us making a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/27/asp-net-core-2-2-0-preview1-endpoint-routing/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview1: SignalR Java Client","PublishedOn":"2018-08-23T20:41:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was authored by Mikael Mengistu. In ASP.NET Core 2.2 we are introducing a Java Client for SignalR. The first preview of this new client is available now. This client supports connecting to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/23/asp-net-core-2-2-0-preview1-signalr-java-client/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview1: Open API Analyzers & Conventions","PublishedOn":"2018-08-23T18:18:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"What is it? Open API (alternatively known as Swagger) is a language-agnostic specification for describing REST APIs. The Open API ecosystem has tools that allows for discovering, testing and producing...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/23/asp-net-core-2-20-preview1-open-api-analyzers-conventions/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview1: Healthchecks","PublishedOn":"2018-08-23T05:28:22+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"What is it? We&#8217;re adding a health checks service and middleware in 2.2.0 to make it easy to use ASP.NET Core in environments that require health checks &#8211; such as Kubernetes. The new...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/22/asp-net-core-2-2-0-preview1-healthcheck/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview1: HTTP/2 in Kestrel","PublishedOn":"2018-08-23T00:26:16+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"As part of the 2.2.0-preview1 release, we’ve added support for HTTP/2 in Kestrel. What is HTTP/2? HTTP/2 is a major revision of the HTTP protocol. Some of the notable features of HTTP/2 are support...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/22/asp-net-core-2-2-0-preview1-http-2-in-kestrel/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview1 now available","PublishedOn":"2018-08-22T17:57:25+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we’re very happy to announce that the first preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. We’ve been working hard on this release over the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/22/asp-net-core-2-2-0-preview1-now-available/","RawContent":null},{"Title":"LibMan CLI Released","PublishedOn":"2018-08-22T15:17:34+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The Command Line Interface (CLI) is now available for Microsoft Library Manager (LibMan) and can be downloaded via NuGet. Look for Microsoft.Web.LibraryManager.Cli The LibMan CLI is cross-platform, so...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/22/libman-cli-released/","RawContent":null},{"Title":"Improvements in Visual Studio 2017 15.8 for web and Azure developers","PublishedOn":"2018-08-15T22:37:09+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"This week we released Visual Studio 2017 version 15.8. Our 15.8 update brings the following improvements for web developers: Custom docker image tags during Publish Zip push deployment for Azure...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/08/15/improvements-in-visual-studio-2017-15-8-for-web-developers/","RawContent":null}],"ResultType":"Feed"},"Home-Issues":{"Issues":[{"Id":"357475201","IsPullRequest":false,"CreatedAt":"2018-09-06T02:41:28","Actor":"aspnet-hello","Number":"3506","RawContent":null,"Title":"Test failure: CanValidateMixDataAnnotations","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=545178&buildTypeId=XPlat_Mac_MacUniverseCoreCLR) occasionally with the following error:\r\n```\r\nExpected: DataAnnotation validation failed for members Dep1, Dep2 with the error 'Dep1 != Dep2'.\r\nDataAnnotation validation failed for members Required with the error 'The Required field is required.'.\r\nDataAnnotation validation failed for members StringLength with the error 'Too long.'.\r\nDataAnnotation validation failed for members IntRange with the error 'Out of range.'.\r\nDataAnnotation validation failed for members Custom with the error 'The field Custom is invalid.'. - I don't want to go to nowhere!\r\nExpected: True\r\nActual:   False\r\n   at Microsoft.Extensions.Options.Tests.OptionsBuilderTest.ValidateFailure[TOptions](OptionsValidationException e, String name, String[] errors) in /_/test/Microsoft.Extensions.Options.Test/OptionsBuilderTest.cs:line 399\r\n   at Microsoft.Extensions.Options.Tests.OptionsBuilderTest.CanValidateMixDataAnnotations() in /_/test/Microsoft.Extensions.Options.Test/OptionsBuilderTest.cs:line 616\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on master.\r\n\r\nCC @Eilon (because the bot doesn't know who else to pick)\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Home/issues/3506","RelatedDescription":"Open issue \"Test failure: CanValidateMixDataAnnotations\" (#3506)"},{"Id":"357445768","IsPullRequest":false,"CreatedAt":"2018-09-06T00:01:06","Actor":"aspnet-hello","Number":"3505","RawContent":null,"Title":"Test failure: SendEmptyData_Success","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=544982&buildTypeId=Releases_21Public_OsxUniverse) occasionally with the following error:\r\n```\r\nSystem.IO.IOException : Failed to bind to address http://127.0.0.1:49153: address already in use.\r\n---- Microsoft.AspNetCore.Connections.AddressInUseException : Address already in use\r\n-------- System.Net.Sockets.SocketException : Address already in use\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Start()\r\n   at Microsoft.AspNetCore.WebSockets.Test.KestrelWebSocketHelpers.CreateServer(ILoggerFactory loggerFactory, Func`2 app, Int32 port) in /_/test/Microsoft.AspNetCore.WebSockets.Test/KestrelWebSocketHelpers.cs:line 59\r\n   at Microsoft.AspNetCore.WebSockets.Test.WebSocketMiddlewareTests.SendEmptyData_Success() in /_/test/Microsoft.AspNetCore.WebSockets.Test/WebSocketMiddlewareTests.cs:line 93\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n----- Inner Stack Trace -----\r\n   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n   at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()\r\n------- Stdout: -------\r\n| [2018-09-05T16:01:37] TestLifetime Information: Starting test SendEmptyData_Success\r\n| [2018-09-05T16:01:37] TestLifetime Information: Starting test SendEmptyData_Success\r\n| [2018-09-05T16:01:37] Microsoft.AspNetCore.Server.Kestrel Critical: Unable to start Kestrel.\r\n| System.IO.IOException: Failed to bind to address http://127.0.0.1:49153: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use ---> System.Net.Sockets.SocketException: Address already in use\r\n|    at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n|    at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n|    at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()\r\n|    --- End of inner exception stack trace ---\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n| --- End of stack trace from previous location where exception was thrown ---\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n|    --- End of inner exception stack trace ---\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n|    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\r\n| [2018-09-05T16:01:37] TestLifetime Information: Finished test SendEmptyData_Success in 0.009063s\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.1.\r\n\r\nCC @Eilon (because the bot doesn't know who else to pick)\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Home/issues/3505","RelatedDescription":"Open issue \"Test failure: SendEmptyData_Success\" (#3505)"},{"Id":"357431335","IsPullRequest":false,"CreatedAt":"2018-09-05T22:47:19","Actor":"pakrym","Number":"3504","RawContent":null,"Title":"DependencyInjection stackoverflow test failure","State":"open","Body":"The test that is failing is `CompilesInLimitedStackSpace` test that is using availible to the max.\r\n\r\nBut somehow between `2.2.0-preview-26820-02` and `2.2.0-preview2-26903-02` amount of available stack space went down on OSX and Ubuntu.","Url":"https://github.com/aspnet/Home/issues/3504","RelatedDescription":"Open issue \"DependencyInjection stackoverflow test failure\" (#3504)"},{"Id":"357357908","IsPullRequest":false,"CreatedAt":"2018-09-05T21:58:37","Actor":"john345331","Number":"3500","RawContent":null,"Title":"Many to many self reference table - guid Id changes itself","State":"closed","Body":"https://stackoverflow.com/questions/52191661/many-to-many-self-reference-table-guid-id-changes-itself","Url":"https://github.com/aspnet/Home/issues/3500","RelatedDescription":"Closed issue \"Many to many self reference table - guid Id changes itself\" (#3500)"},{"Id":"357411824","IsPullRequest":false,"CreatedAt":"2018-09-05T21:30:52","Actor":"natemcmaster","Number":"3503","RawContent":null,"Title":"Known issue: version mismatches in 2.1 patch updates (often causes FileLoadException)","State":"open","Body":"Some ASP.NET Core 2.1 users have been affected by a bug in the .NET Core host (see https://github.com/dotnet/core-setup/issues/4512) which can cause apps to fail with System.IO.FileLoadException. The issue may also be present in your app, even if the app does not fail with System.IO.FileLoadException.\r\n\r\n### Affected versions\r\n2.1.1 through 2.1.4\r\n\r\n### Symptom 1\r\nASP.NET Core apps running on the Microsoft.AspNetCore.App shared framework may fail to run after the machine-wide version of .NET Core is updated. Apps fail with an error such as:\r\n\r\n> Unhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'Microsoft.Extensions.Identity.Core, Version=2.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. **The located assembly's manifest definition does not match the assembly reference.** (Exception from HRESULT: 0x80131040)\r\n   at Diary.Api.Startup.ConfigureServices(IServiceCollection services)\r\n\r\n### Symptom 2\r\nWhen publishing an ASP.NET Core application which references Microsoft.AspNetCore.App, additional Microsoft assemblies are in the publish output.\r\n\r\nFor example, if you run `dotnet publish --output PublishDir/ ` and you see `Microsoft.Extensions.*.dll` or `Microsoft.AspNetCore.*.dll` files in `PublishDir/`, you may be running into this issue.\r\n\r\n### Cause\r\nThis issue is typically caused by .csproj files which have a PackageReference to a package which is already part of Microsoft.AspNetCore.App. \r\n\r\nFor example,\r\n```xml\r\n<ItemGroup>\r\n  <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n  <PackageReference Include=\"Microsoft.AspNetCore.SignalR\" Version=\"1.0.3\" />\r\n</ItemGroup>\r\n```\r\n\r\nThe Microsoft.AspNetCore.SignalR package is already pulled in as a part of Microsoft.AspNetCore.App, so does not normally need to be referenced. The presence of this reference causes a mismatch of versions, which in turn causes a problem with the .NET Core host, as described in https://github.com/dotnet/core-setup/issues/4376.\r\n\r\nMore technical details here: https://github.com/Azure/app-service-announcements-discussions/issues/65#issuecomment-417379227\r\n\r\n### Workaround 1\r\n\r\nRemove PackageReference's which are already part of Microsoft.AspNetCore.App. You can find a list of what this package pulls in by looking at https://www.nuget.org/packages/microsoft.aspnetcore.app#show-dependency-groups. This will avoid the version mismatch.\r\n\r\n### Workaround 2\r\nUpgrade the Microsoft.AspNetCore.App PackageReference to the latest 2.1.x version by adding the `Version` attribute.\r\n```xml\r\n  <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.3\" />\r\n```\r\n\r\n:warning: This may have unintended consequences on your deployment environment. If the deployment environment does not have the the 2.1.3 runtime, apps will fail to start with an error. In Azure or apps hosted behind IIS, this may appear as HTTP 502.5 error.","Url":"https://github.com/aspnet/Home/issues/3503","RelatedDescription":"Open issue \"Known issue: version mismatches in 2.1 patch updates (often causes FileLoadException)\" (#3503)"},{"Id":"356693733","IsPullRequest":false,"CreatedAt":"2018-09-05T21:12:28","Actor":"kjbartel","Number":"3490","RawContent":null,"Title":"ASP.Net Core runtime 2.1.3 throws FileLoadException","State":"closed","Body":"1. Description of the problem:\r\nAfter installing the latest .Net Core SDK (2.1.401) ASP.Net Core apps targeting netocoreapp2.1 throw a FileLoadException when calling WebHost.Start() or WebHost.Run(). Previous packaged builds using a FDD fail to run if a new version of the runtime is installed.\r\n\r\n2. Steps to reproduce\r\n- Create a new ASP.Net Web Application targeting .Net Core and ASP.Net Core 2.1in VS\r\n- Add a reference to the `Microsoft.AspNetCore.SignalR` nuget package. (Installed version 1.0.3 for me)\r\n- Run / Debug\r\n- Exception thrown: \r\n> Could not load file or assembly 'Microsoft.AspNetCore.Connections.Abstractions, Version=2.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\n3. The version of `Microsoft.AspNetCore.App`\r\n2.1.1\r\n\r\n4. The output of `dotnet --info`\r\n\r\n> .NET` Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n>\r\n> Runtime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n>\r\n> Host (useful for support):\r\n  Version: 2.1.3\r\n  Commit:  124038c13e\r\n>\r\n> .NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n>\r\n> .NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]","Url":"https://github.com/aspnet/Home/issues/3490","RelatedDescription":"Closed issue \"ASP.Net Core runtime 2.1.3 throws FileLoadException\" (#3490)"},{"Id":"357369030","IsPullRequest":false,"CreatedAt":"2018-09-05T20:34:03","Actor":"kugarliyifan","Number":"3501","RawContent":null,"Title":"Is there anyway to replace file and auto restart asp.net core website","State":"closed","Body":"Is there anyway to replace file and auto restart website on iis 8 like asp.net mvc.....I publish use win-64x mode,,I want to like asp.net ,,,upload new dll file use ftp and website can auto restart....Is that Anyway to make this???","Url":"https://github.com/aspnet/Home/issues/3501","RelatedDescription":"Closed issue \"Is there anyway to replace file and auto restart asp.net core website\" (#3501)"},{"Id":"357391346","IsPullRequest":false,"CreatedAt":"2018-09-05T20:31:59","Actor":"jdmichel","Number":"3502","RawContent":null,"Title":"WebApplicationFactory WithWebHostBuilder configuration priority seems wrong","State":"open","Body":"I'm trying to upgrade an integration test and related app from aspnetcore 2.0 to 2.1, and running into problems with configuration settings and WebApplicationFactory. \r\n\r\nIf I use the following code, then the existing setting in appsetting.json takes precedence over the setting for the test.\r\n// From the integration test constructor...\r\nvar client = factory.WithWebHostBuilder(builder =>\r\n            {\r\n                builder.UseSetting(\"Foo:Bar\", \"True\");\r\n            }).CreateClient();\r\n\r\nIf I remove the setting from appsettings.json then I get the value from the setting above. \r\nIt seems that WithWebHostBuilder() is adding a new provider at the head of the list instead of the tail. I think you would always want the programmatic UseSetting to take precedence over all the other configuration providers. \r\n\r\nMy workaround is to keep using the previous code which used TestServer explicitly like so:\r\n_server = new TestServer(WebHost.CreateDefaultBuilder().UseStartup<Startup>());\r\nvar client = _server.CreateClient();\r\nThis reads settings from a local copy of the appsettings.json file from the integration test directory, but at least it works.\r\n\r\nSince switching to 2.1 these tests all get BadRequest for every client call (the controller isn't even called) and I'm not sure why. Which is why I tried to update the tests to use the WebApplicationFactory. \r\n\r\nSomething here seems to be an undocumented breaking change.","Url":"https://github.com/aspnet/Home/issues/3502","RelatedDescription":"Open issue \"WebApplicationFactory WithWebHostBuilder configuration priority seems wrong\" (#3502)"},{"Id":"355577808","IsPullRequest":false,"CreatedAt":"2018-09-05T17:25:48","Actor":"stuartwhiteford-electrum","Number":"3482","RawContent":null,"Title":"HandleRequirementAsync is not called in AuthorizationHandler when resource is null","State":"closed","Body":"I have the following in the Startup.cs\r\n```\r\nservices.AddAuthorization(options =>\r\n{\r\n    options.AddPolicy(\"EditPolicy\", policy =>\r\n        policy.Requirements.Add(new SameAuthorRequirement()));\r\n});\r\n\r\nservices.AddSingleton<IAuthorizationHandler, DocumentAuthorizationHandler>();\r\n```       \r\nand the following handler and requirement classes\r\n```\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing ResourceAuthSample.Models;\r\n\r\nnamespace ResourceAuthSample\r\n{\r\n    public class DocumentAuthorizationHandler :\r\n    AuthorizationHandler<SameAuthorRequirement, Document>\r\n    {\r\n        protected override Task HandleRequirementAsync(\r\n            AuthorizationHandlerContext context,\r\n            SameAuthorRequirement requirement,\r\n            Document resource)\r\n        {\r\n            if (context.User.Identity?.Name == resource.Author)\r\n            {\r\n                context.Succeed(requirement);\r\n            }\r\n\r\n            return Task.CompletedTask;\r\n        }\r\n    }\r\n\r\n    public class SameAuthorRequirement : IAuthorizationRequirement { }\r\n}\r\n```\r\nthen in my controller I have the following action\r\n```\r\npublic async Task<IActionResult> Privacy()\r\n{\r\n    var document = new Document { Author = \"Stuart\" };\r\n\r\n    // Setting the document to null ensures that the HandleRequirementAsync() is not called.\r\n    // document = null;\r\n\r\n    var authorizationResult = await _authorizationService.AuthorizeAsync(User, document, \"EditPolicy\");\r\n\r\n    return View();\r\n}\r\n```\r\nI was expecting that even if the resource (document) was null then the HandleRequirementAsync() method would still be called - in the event that you might want to base the success/failure on whether the resource is null.\r\n\r\nBut given this check (in **AuthorizationHandler.cs**)\r\nhttps://github.com/aspnet/Security/blob/beaa2b443d46ef8adaf5c2a89eb475e1893037c2/src/Microsoft.AspNetCore.Authorization/AuthorizationHandler.cs#L51\r\nwill return false the method won't be called.\r\n\r\nLooking at the IAuthorizationService, it states that \"Resource is an optional parameter and may be null. Please ensure that you check it is not null before acting upon it.\" This seems to suggest that the resource might be null when checking in the handler, or have I misinterpreted that comment?\r\n\r\nMicrosoft.AspNetCore.App version is: 2.1.1.\r\n\r\ndotnet --info output is:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3\r\n  Commit:  124038c13e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nThanks,\r\nStuart.","Url":"https://github.com/aspnet/Home/issues/3482","RelatedDescription":"Closed issue \"HandleRequirementAsync is not called in AuthorizationHandler when resource is null\" (#3482)"},{"Id":"357317996","IsPullRequest":false,"CreatedAt":"2018-09-05T16:55:56","Actor":"kugarliyifan","Number":"3499","RawContent":null,"Title":"when run at server throw Cannot find compilation library location for package error","State":"open","Body":"i create the project by asp.net core 2.1 ,Microsoft.AspNetCore.App version is 2.1.3,,my server is windows 2012 64x,.net core runtime is 2.1.3,,i use the publish the website ,configuation is \r\n![image](https://user-images.githubusercontent.com/18448413/45108437-2c72b000-b16f-11e8-9748-e63fdf7a18f5.png) ,,,but when i request the site,it throw the error like this \r\n![image](https://user-images.githubusercontent.com/18448413/45108552-82dfee80-b16f-11e8-9432-bbbb4f436942.png)\r\n but i never references this package....how can i solve this ,,,please help me\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3499","RelatedDescription":"Open issue \"when run at server throw Cannot find compilation library location for package error\" (#3499)"},{"Id":"357197707","IsPullRequest":false,"CreatedAt":"2018-09-05T12:05:49","Actor":"kdrvn","Number":"3498","RawContent":null,"Title":"JsonPatch: test operations fail when contract resolver is used to serialize data","State":"open","Body":"### Functional impact\r\nWhen controlling data serialization using a contract resolver (and the contract resolver is not registered for the JsonConvert's default settings), test operations in patch requests fail.\r\n\r\n### Minimal repro steps\r\nIssue noticed in `Microsoft.AspNetCore.JsonPatch 2.1.1`.\r\n\r\nExample code:\r\n```\r\nclass Person\r\n{\r\n    public string FirstName { get; set; }\r\n    public string MiddleName { get; set; }\r\n    public string LastName { get; set; }\r\n}\r\n\r\nclass NoMiddleNameContractResolver : DefaultContractResolver {\r\n    protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)\r\n    {\r\n        JsonProperty property = base.CreateProperty(member, memberSerialization);\r\n\r\n        if (property.DeclaringType == typeof(Person) && property.PropertyName == nameof(Person.MiddleName))\r\n            property.ShouldSerialize = obj => false;\r\n\r\n        return property;\r\n    }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var contractResolver = new NoMiddleNameContractResolver();\r\n        var serializerSettings = new JsonSerializerSettings { ContractResolver = contractResolver };\r\n\r\n        var person = new Person { FirstName = \"John\", MiddleName = \"Alexander\", LastName = \"Doe\" };\r\n        var serializedValue = JsonConvert.SerializeObject(person, serializerSettings);\r\n\r\n        var jsonTestValue = $\"[{{ op: \\\"test\\\", path: \\\"/0\\\", value: {serializedValue} }}]\";\r\n        var operations = JsonConvert.DeserializeObject<Operation<List<Person>>[]>(jsonTestValue, serializerSettings).ToList();\r\n\r\n        var patchDoc = new JsonPatchDocument<List<Person>>(operations, contractResolver);\r\n\r\n        var people = new List<Person> { person };\r\n\r\n        try\r\n        {\r\n            patchDoc.ApplyTo(people);\r\n            Console.WriteLine(\"patch test passed\");\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.WriteLine($\"patch test failed: {ex}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Expected result\r\nApplyTo method does not throw an error, test operation was successful.\r\n\r\n### Actual result\r\nApplyTo method throw an error, due to failed test operation.\r\n\r\n### Further technical details\r\nEach implementation of the `IAdapter` interface uses the static JsonConvert class with the default serializer settings. The provided ContractResolver is not being used when serializing values being compared.\r\n\r\n[DictionaryAdapterOfU](https://github.com/aspnet/JsonPatch/blob/release/2.2/src/Microsoft.AspNetCore.JsonPatch/Internal/DictionaryAdapterOfTU.cs#L168)\r\n[DynamicObjectAdapter](https://github.com/aspnet/JsonPatch/blob/release/2.2/src/Microsoft.AspNetCore.JsonPatch/Internal/DynamicObjectAdapter.cs#L126)\r\n[ListAdapter](https://github.com/aspnet/JsonPatch/blob/release/2.2/src/Microsoft.AspNetCore.JsonPatch/Internal/ListAdapter.cs#L180)\r\n[PocoAdapter](https://github.com/aspnet/JsonPatch/blob/release/2.2/src/Microsoft.AspNetCore.JsonPatch/Internal/PocoAdapter.cs#L164)\r\n","Url":"https://github.com/aspnet/Home/issues/3498","RelatedDescription":"Open issue \"JsonPatch: test operations fail when contract resolver is used to serialize data\" (#3498)"},{"Id":"357002631","IsPullRequest":false,"CreatedAt":"2018-09-04T22:43:52","Actor":"paulomorgado","Number":"3497","RawContent":null,"Title":"Consider making public methods of Microsoft.Extensions.DependencyInjection.ActivatorUtilities extension methods","State":"open","Body":"    serviceProvider.CreateInstance(instanceType, params);\r\n\r\nfeels better than\r\n\r\n    ActivatorUtilities.CreateInstance(serviceProvider, instanceType, params);\r\n\r\nor even\r\n\r\n    CreateInstance(serviceProvider, instanceType, params);\r\n","Url":"https://github.com/aspnet/Home/issues/3497","RelatedDescription":"Open issue \"Consider making public methods of Microsoft.Extensions.DependencyInjection.ActivatorUtilities extension methods\" (#3497)"},{"Id":"356991820","IsPullRequest":false,"CreatedAt":"2018-09-04T22:01:24","Actor":"aspnet-hello","Number":"3496","RawContent":null,"Title":"Test failure: System_CanUnprotectWithCert","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=544356&buildTypeId=XPlat_Mac_MacUniverseCoreCLR) occasionally with the following error:\r\n```\r\nSystem.Security.Cryptography.CryptographicException : An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.\r\n---- System.IO.FileNotFoundException : Could not load file or assembly 'System.Security.Cryptography.Pkcs, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) in /_/src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyRingBasedDataProtector.cs:line 141\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(IDataProtector protector, String plaintext) in /_/src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs:line 199\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.<>c__DisplayClass7_0.<System_CanUnprotectWithCert>b__0(DirectoryInfo directory) in /_/test/Microsoft.AspNetCore.DataProtection.Extensions.Test/DataProtectionProviderTests.cs:line 272\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.WithUniqueTempDirectory(Action`1 testCode) in /_/test/Microsoft.AspNetCore.DataProtection.Extensions.Test/DataProtectionProviderTests.cs:line 298\r\n----- Inner Stack Trace -----\r\n   at System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml(XmlDocument xmlDocument)\r\n   at System.Security.Cryptography.Xml.KeyInfo.GetXml(XmlDocument xmlDocument)\r\n   at System.Security.Cryptography.Xml.EncryptedKey.GetXml(XmlDocument document)\r\n   at System.Security.Cryptography.Xml.KeyInfo.GetXml(XmlDocument xmlDocument)\r\n   at System.Security.Cryptography.Xml.EncryptedData.GetXml(XmlDocument document)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(XmlElement inputElement, EncryptedData encryptedData, Boolean content)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.EncryptElement(XElement plaintextElement) in /_/src/Microsoft.AspNetCore.DataProtection/XmlEncryption/CertificateXmlEncryptor.cs:line 104\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Encrypt(XElement plaintextElement) in /_/src/Microsoft.AspNetCore.DataProtection/XmlEncryption/CertificateXmlEncryptor.cs:line 85\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element) in /_/src/Microsoft.AspNetCore.DataProtection/XmlEncryption/XmlEncryptionExtensions.cs:line 100\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate) in /_/src/Microsoft.AspNetCore.DataProtection/KeyManagement/XmlKeyManager.cs:line 414\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate) in /_/src/Microsoft.AspNetCore.DataProtection/KeyManagement/XmlKeyManager.cs:line 133\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded) in /_/src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyRingProvider.cs:line 102\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow) in /_/src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyRingProvider.cs:line 177\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) in /_/src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyRingBasedDataProtector.cs:line 102\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on master.\r\n\r\nCC @Eilon (because the bot doesn't know who else to pick)\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Home/issues/3496","RelatedDescription":"Open issue \"Test failure: System_CanUnprotectWithCert\" (#3496)"},{"Id":"356957496","IsPullRequest":false,"CreatedAt":"2018-09-04T20:08:22","Actor":"JunTaoLuo","Number":"3495","RawContent":null,"Title":"Unable to start Kestrel: path base can only be configured using IApplicationBuilder.UsePathBase","State":"open","Body":"_From @JDGHHou on September 4, 2018 19:3_\n\nMy application runs fine in Visual Studio 2017 using the built-in IIS Express. However, when I deploy my code to IIS, suddenly I get the attached error.\r\n\r\nI have found a couple of articles saying that I need to set my application URL to \r\n\"applicationUrl\": \"http://localhost/\"\r\nrather than \r\n\"applicationUrl\": \"http://localhost/{my application name}/\"\r\n\r\nBut when I do that, my application tries to deploy to the webroot, and my application is stored in a folder elsewhere, so that doesn't work.\r\n\r\nIn all this, I am so confused as to what Microsoft's approach is. Why - if IIS Express works great at the press of a button - doesn't Microsoft just copy that exactly and apply it to IIS? I understand there may be more in-depth configuration a user may need to do, but that should be optional for users who need something more complex. Deploying something in IIS is almost always a complete living nightmare involving a million random undocumented settings. It is needlessly difficult and seems to default to the most random edge-case setup, rather than the most simple.\r\n\r\nAnyway... Can someone please tell me how to make my application just deploy to IIS and work the same as it already does on other Microsoft products?\r\n\r\n----------THIS IS THE ERROR MESSAGE --------------------\r\nSystem.InvalidOperationException: 'A path base can only be configured using IApplicationBuilder.UsePathBase().'\r\n-----------------------------------------------\r\n\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using 'C:\\Users\\JohnDunn\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.InvalidOperationException: A path base can only be configured using IApplicationBuilder.UsePathBase().\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)\n\n_Copied from original issue: aspnet/KestrelHttpServer#2882_","Url":"https://github.com/aspnet/Home/issues/3495","RelatedDescription":"Open issue \"Unable to start Kestrel: path base can only be configured using IApplicationBuilder.UsePathBase\" (#3495)"},{"Id":"356919175","IsPullRequest":false,"CreatedAt":"2018-09-04T18:09:17","Actor":"danmosemsft","Number":"3494","RawContent":null,"Title":"ASP.Net Core 2.1 not releasing memory","State":"open","Body":"_From @BinaryPatrick on September 4, 2018 18:4_\n\nAn application running under a 15-25 requests per second load exhibits an endlessly growing memory footprint.\r\n\r\nAt first I thought I must have a memory leak, but when I run `dotnet new webapi`, compile the code using the release flag, and run it using `dotnet webapi.dll`, I get the same result.\r\n\r\nI generated a load of ~20 GET requests a second to https://localhost:5001/api/values and after 10 minutes, the memory usage is up to 800Mb and growing.\r\n\r\nThis is with the stock asp.net webapi template. Is this the expected memory usage?\n\n_Copied from original issue: dotnet/corefx#32100_","Url":"https://github.com/aspnet/Home/issues/3494","RelatedDescription":"Open issue \"ASP.Net Core 2.1 not releasing memory\" (#3494)"},{"Id":"356612164","IsPullRequest":false,"CreatedAt":"2018-09-04T17:57:06","Actor":"Amine-Smahi","Number":"3489","RawContent":null,"Title":"How to Scaffold Identity UI in ASP.NET Core 2.2 preview1 ","State":"closed","Body":"\r\nIn ASP.NET Core 2.1 we had the chance to use scaffold using visual studio like this\r\n\r\n![image](https://user-images.githubusercontent.com/24621701/45003154-48dbe480-afd7-11e8-9085-a67371374fb1.png)\r\n\r\nBut now in ASP.NET Core 2.2 preview1 the new scaffold item is missing in visual studio \r\n\r\n![image](https://user-images.githubusercontent.com/24621701/45003175-88a2cc00-afd7-11e8-8892-995109ee7ae8.png)\r\n","Url":"https://github.com/aspnet/Home/issues/3489","RelatedDescription":"Closed issue \"How to Scaffold Identity UI in ASP.NET Core 2.2 preview1 \" (#3489)"},{"Id":"356498471","IsPullRequest":false,"CreatedAt":"2018-09-04T17:55:39","Actor":"martinmikulka","Number":"3488","RawContent":null,"Title":"Timestamp passed via RedirectToAction loses precision in target action","State":"closed","Body":"Hello, I am facing a problem when calling RedirectToAction() method and passing a timestamp via parameter:\r\n\r\n```\r\npublic IActionResult ActionOne()\r\n{\r\n   var timestamp = new DateTimeOffset(2018,7,25,14,16,18,120,new TimeSpan());\r\n   return RedirectToAction(\"ActionTwo\", new { Timestamp = timestamp });\r\n}\r\n\r\npublic IActionResult ActionTwo(DateTimeOffset timestamp)\r\n{\r\n   ...\r\n}\r\n```\r\n\r\nWhen I dump the timestamp variable inside the ActionOne:\r\nMillisecond [int]: 120\r\nTicks [long]: 636681249781200000\r\n\r\nWhen I dump the timestamp variable inside the ActionTwo:\r\nMillisecond [int]: 0\r\nTicks [long]: 636681249780000000\r\n\r\nThe target variable has lost miliseconds precision.\r\nDo I have to pass the timestamp in some different way or is it a bug?\r\n\r\nThanks, Martin\r\n","Url":"https://github.com/aspnet/Home/issues/3488","RelatedDescription":"Closed issue \"Timestamp passed via RedirectToAction loses precision in target action\" (#3488)"},{"Id":"356898880","IsPullRequest":false,"CreatedAt":"2018-09-04T17:05:54","Actor":"mkArtakMSFT","Number":"3493","RawContent":null,"Title":"DefaultObjectPool is not threadsafe","State":"open","Body":"_From @fofewyoung on September 3, 2018 10:18_\n\ni found DefaultObjectPool is not thread safe in 2.1, \r\nthe test result is:\r\n\r\n2.0.0   ----  pass\r\n2.1.0-preview1-final  -- pass\r\n2.1.0-preview2-final  -- failed\r\n2.1.0                          -- failed\r\n2.2.0-preview1-35029  --failed\r\n\r\nmy test code is below:\r\n\r\n        class AClass\r\n        {\r\n            public int i = 0;\r\n\r\n            public void Reset()\r\n            {\r\n                i = 0;\r\n            }\r\n        }\r\n\r\n        static DefaultObjectPool<AClass> PoolInstance;\r\n        void TestDOP() // call this function in Main\r\n        {\r\n            PoolInstance = new DefaultObjectPool<AClass>(new DefaultPooledObjectPolicy<AClass>(), 10);\r\n            for (int i = 0; i < 8; i++)\r\n            {\r\n                var t = new Thread(OnTest1);\r\n                t.Start();\r\n            }\r\n        }\r\n        void OnTest1()\r\n        {\r\n            while (true)\r\n            {\r\n                var obj = PoolInstance.Get();\r\n                if (obj.i != 0)\r\n                    Console.WriteLine(\"bug\");\r\n                obj.i = 123;\r\n\r\n                var obj2 = PoolInstance.Get();\r\n                if (obj2.i != 0)\r\n                    Console.WriteLine(\"bug\");\r\n                obj2.i = 321;\r\n\r\n                obj.Reset();\r\n                PoolInstance.Return(obj);\r\n                obj2.Reset();\r\n                PoolInstance.Return(obj2);\r\n            }\r\n        }\n\n_Copied from original issue: aspnet/Common#394_","Url":"https://github.com/aspnet/Home/issues/3493","RelatedDescription":"Open issue \"DefaultObjectPool is not threadsafe\" (#3493)"},{"Id":"356815299","IsPullRequest":false,"CreatedAt":"2018-09-04T13:40:47","Actor":"sdluhaibing","Number":"3492","RawContent":null,"Title":"The NETCore website failed to start process with commandline '\"xxx.exe\" ', ErrorCode = '0x800700d8'.","State":"open","Body":"The NETCore website failed to start process with commandline '\"xxx.exe\" ', ErrorCode = '0x800700d8'.\r\n\r\nstdout log is empty.\r\nOS: Windows 7 enterprise, 32 bit\r\n.NET Core 1.0.0 on both Server and develop environment.\r\nMy app was published with runtime win7-x86. I found can build with any runtime name like\"testruntime\" and publish. Not sure if this is one issue.\r\n\r\nThe website(build with default) works fine on windows server 2008R2 64bit and 2012R2 64 bit.\r\nAlready checked the known issues in https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/troubleshoot?view=aspnetcore-2.1\r\nbut no lucky. BTW, the windows update was done by company LAN tool. Any suggestion/idea would be appreciated.","Url":"https://github.com/aspnet/Home/issues/3492","RelatedDescription":"Open issue \"The NETCore website failed to start process with commandline '\"xxx.exe\" ', ErrorCode = '0x800700d8'.\" (#3492)"},{"Id":"356479081","IsPullRequest":false,"CreatedAt":"2018-09-04T11:52:18","Actor":"dustyghost","Number":"3487","RawContent":null,"Title":"HttpRequestException - An existing connection was forcibly closed by the remote host","State":"closed","Body":"We have a web app calling a web service via API calls. \r\nWe get the below error after creating a new record in that service. \r\n\r\nOther code in our application seems to work ok, but for some reason, this particular issue is cropping up for this task only.\r\n\r\n> System.Net.Http.HttpRequestException\r\n>   HResult=0x80131620\r\n>   Message=Error while copying content to a stream.\r\n>   Source=System.Net.Http\r\n>   StackTrace:\r\n>    at System.Net.Http.HttpContent.<LoadIntoBufferAsyncCore>d__52.MoveNext()\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__62.MoveNext()\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n>    at AcidWebApp.Repositories.LitmusRepository.<CreateLitmus>d__6.MoveNext() in C:\\Users\\Mark\\projects\\AcidWebApp\\Repositories\\LitmusRepository.cs:line 83\r\n> \r\n> Inner Exception 1:\r\n> IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n> \r\n> Inner Exception 2:\r\n> SocketException: An existing connection was forcibly closed by the remote host\r\n> \r\n\r\nWe are using a helper class for this:\r\n```\r\nusing System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Authentication;\r\nusing Microsoft.AspNetCore.Http;\r\n\r\nnamespace AcidWebApp.Helpers\r\n{\r\n    public interface IHttpClientHelper\r\n    {\r\n        Task<HttpClient> GetHttpClient(HttpContext httpContext);\r\n        Task<HttpClient> GetHttpClient();\r\n    }\r\n\r\n    public class HttpClientHelper : IHttpClientHelper\r\n    {\r\n        private readonly string _apiUrl;\r\n        private readonly IHttpContextAccessor _httpContextAccessor;\r\n\r\n        public HttpClientHelper(string apiUrl, IHttpContextAccessor httpContextAccessor)\r\n        {\r\n            _apiUrl = apiUrl;\r\n            _httpContextAccessor = httpContextAccessor;\r\n        }\r\n\r\n        public async Task<HttpClient> GetHttpClient(HttpContext httpContext)\r\n        {\r\n            var client = new HttpClient();\r\n            var accessToken = await httpContext.GetTokenAsync(\"access_token\");\r\n            client.BaseAddress = new Uri(_apiUrl);\r\n            client.SetBearerToken(accessToken);\r\n            return client;\r\n        }\r\n\r\n        public async Task<HttpClient> GetHttpClient()\r\n        {\r\n            var client = new HttpClient();\r\n            var accessToken = await _httpContextAccessor.HttpContext.GetTokenAsync(\"access_token\");\r\n            client.BaseAddress = new Uri(_apiUrl);\r\n            client.SetBearerToken(accessToken);\r\n            return client;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis is the implementation that has the issue:\r\n```\r\npublic async Task<Litmus> CreateLitmus(Litmus litmus)\r\n{\r\n\tvar httpClient = await _httpClientHelper.GetHttpClient();\r\n\tvar response = await httpClient.PostAsJsonAsync(\"Litmus\", litmus);\r\n\r\n\tif (!response.IsSuccessStatusCode) return null;\r\n\r\n\tvar result = response.Content.ReadAsStringAsync().Result;\r\n\treturn JsonConvert.DeserializeObject<Litmus>(result);\r\n}\r\n```","Url":"https://github.com/aspnet/Home/issues/3487","RelatedDescription":"Closed issue \"HttpRequestException - An existing connection was forcibly closed by the remote host\" (#3487)"},{"Id":"356770644","IsPullRequest":false,"CreatedAt":"2018-09-04T11:38:28","Actor":"SergeBerwert","Number":"3491","RawContent":null,"Title":"Add Array elements with JsonPatchDocument not suporrted","State":"open","Body":"I am working on a project with Json Patch. I Tried to add an element to an array. JsonPatchDocument reported the following problem: \r\nMessage: \r\n\r\n`The type 'ContactDetail[]' which is an array is not supported for JSON patch operations as it has a fixed size.\r\n`\r\n\r\nI Think JsonPatchDocument should be able to extend arrays in this case. It doesn’t make sense to me because Json dos do not differentiate any list types. It is impossible for a client to know if the server is capable of handling the patch or not. I know the operation is maybe slow, but I would expect that this works.\r\n\r\nThats What i tried:\r\n\r\nSource Json:\r\n```\r\n {\r\n  \"Id\": \"1\",\r\n  \"Name\": {\r\n    \"Title\": \"Prof. Dr. Dr. ind Inf\",\r\n    \"FirstName\": \"Firstname\",\r\n    \"MiddleName\": \"MiddleName\",\r\n    \"LastName\": \"LastName\",\r\n    \"Suffix\": \"Msr.\"\r\n  },\r\n  \"Type\": 1,\r\n  \"ContactDetails\": [\r\n    {\r\n      \"Id\": \"1\",\r\n      \"Type\": \"Phone\",\r\n      \"Icon\": null,\r\n      \"Name\": \"Mobile\",\r\n      \"Value\": \"+41 000 000000\"\r\n    },\r\n    {\r\n      \"Id\": \"2\",\r\n      \"Type\": \"EMail\",\r\n      \"Icon\": null,\r\n      \"Name\": \"Email\",\r\n      \"Value\": \"person@email.com\"\r\n    }\r\n  ],\r\n  \"Locations\": null\r\n}\r\n```\r\n\r\nPatch:\r\n```\r\n[\r\n  {\r\n    \"op\": \"add\",\r\n    \"path\": \"/ContactDetails/-\",\r\n    \"value\": {\r\n      \"Name\": \"NewName\",\r\n      \"Type\": \"Mobile\",\r\n      \"Value\": \"Add 5 Element\"\r\n    }\r\n  }\r\n]\r\n```\r\n\r\nResult:\r\n```Message: The type 'ContactDetail[]' which is an array is not supported for json patch operations as it has a fixed size. - Operation: Microsoft.AspNetCore.JsonPatch.Operations.Operation`1[Profile] - AffectedObject Profile```\r\n","Url":"https://github.com/aspnet/Home/issues/3491","RelatedDescription":"Open issue \"Add Array elements with JsonPatchDocument not suporrted\" (#3491)"},{"Id":"356454201","IsPullRequest":false,"CreatedAt":"2018-09-03T10:48:20","Actor":"gimlichael","Number":"3486","RawContent":null,"Title":"RequestHeaders - favor empty collection over null values","State":"open","Body":"When working with the different request headers, we have to do null-checks for now.\r\n\r\nPlease consider following the [best practises for working with collections](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/guidelines-for-collections), that clearly states:\r\n\r\n**X DO NOT return null values from collection properties or from methods returning collections. Return an empty collection or an empty array instead.**\r\n\r\nThanks.","Url":"https://github.com/aspnet/Home/issues/3486","RelatedDescription":"Open issue \"RequestHeaders - favor empty collection over null values\" (#3486)"},{"Id":"356425270","IsPullRequest":false,"CreatedAt":"2018-09-03T10:29:52","Actor":"sorcer1","Number":"3485","RawContent":null,"Title":"Validate model attribute is no longer called since upgraded to dotnet core 2.1","State":"closed","Body":"Hello,\r\n\r\nIn some of my api controllers if put my custom attribute [ValidateModel], it works to send a specific error message when the model is invalid.\r\nSince my upgrade to dotnet core 2.1 the attribute is no longer called and now i have a generic error message like :\r\n\r\n```\r\n{\r\n    \"lastname\": [\r\n        \"The field Name is required\"\r\n    ]\r\n}\r\n```\r\n\r\nMy custom attribute :\r\n```\r\n    public class ValidateModelAttribute : ActionFilterAttribute\r\n    {\r\n        public override void OnActionExecuting(ActionExecutingContext context)\r\n        {\r\n            if (!context.ModelState.IsValid)\r\n            {\r\n                // Send my specific error message\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nCan some one explain me why my attribute is no more working ?","Url":"https://github.com/aspnet/Home/issues/3485","RelatedDescription":"Closed issue \"Validate model attribute is no longer called since upgraded to dotnet core 2.1\" (#3485)"},{"Id":"356123435","IsPullRequest":false,"CreatedAt":"2018-08-31T21:05:05","Actor":"aspnet-hello","Number":"3484","RawContent":null,"Title":"Test failure: FinalizeCacheHeadersAsync_AddsDate_IfNoneSpecified","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=543346&buildTypeId=Releases_22xPublic_HighSierraOsxUniverse) occasionally with the following error:\r\n```\r\nAssert.Equal() Failure\r\n                                 ↓ (pos 24)\r\nExpected: ··· 31 Aug 2018 19:04:37 GMT\r\nActual:   ··· 31 Aug 2018 19:04:38 GMT\r\n                                 ↑ (pos 24)\r\n   at Microsoft.AspNetCore.ResponseCaching.Tests.ResponseCachingMiddlewareTests.FinalizeCacheHeadersAsync_AddsDate_IfNoneSpecified() in /_/test/Microsoft.AspNetCore.ResponseCaching.Tests/ResponseCachingMiddlewareTests.cs:line 651\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.2.\r\n\r\nCC @Eilon (because the bot doesn't know who else to pick)\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Home/issues/3484","RelatedDescription":"Open issue \"Test failure: FinalizeCacheHeadersAsync_AddsDate_IfNoneSpecified\" (#3484)"},{"Id":"356098967","IsPullRequest":false,"CreatedAt":"2018-08-31T19:28:19","Actor":"retslig","Number":"3483","RawContent":null,"Title":"License update to project","State":"open","Body":"I was hoping the project owner would consider updating the project license to use spdx identifier for the \"Apache License, Version 2.0\" license. Your license in the github api only shows as \"Other\". \r\nSee https://api.github.com/repos/aspnet/Home/license for your current license.\r\nAlso note your current license committed in the repo is already \"Apache License, Version 2.0\" https://github.com/aspnet/Home/blob/master/LICENSE.txt.\r\nThis is no change to the license at all, but then allows anyone using the github license API to get an exact match of the licensed used and not have to use any string magic to come up with your license.\r\n\r\nIf your unfamiliar with SPDX see spdx.org. \r\n\r\nPretty sure this can be done in your settings somewhere. Here is an example of your API json and your\r\nspdx_id is null.\r\n```json\r\n{\r\n  \"name\": \"LICENSE.txt\",\r\n  \"path\": \"LICENSE.txt\",\r\n  \"sha\": \"a275bdeab78db1ee28e357d86c2b3ac9d6e00773\",\r\n  \"size\": 593,\r\n  \"url\": \"https://api.github.com/repos/aspnet/Home/contents/LICENSE.txt?ref=master\",\r\n  \"html_url\": \"https://github.com/aspnet/Home/blob/master/LICENSE.txt\",\r\n  \"git_url\": \"https://api.github.com/repos/aspnet/Home/git/blobs/a275bdeab78db1ee28e357d86c2b3ac9d6e00773\",\r\n  \"download_url\": \"https://raw.githubusercontent.com/aspnet/Home/master/LICENSE.txt\",\r\n\"type\": \"file\",\r\n  \"content\": \"Q29weXJpZ2h0IChjKSAuTkVUIEZvdW5kYXRpb24gYW5kIENvbnRyaWJ1dG9y\\ncwoKQWxsIHJpZ2h0cyByZXNlcnZlZC4KCkxpY2Vuc2VkIHVuZGVyIHRoZSBB\\ncGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5\\nb3UgbWF5IG5vdCB1c2UKdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNl\\nIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0\\naGUKTGljZW5zZSBhdAoKICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNl\\nbnNlcy9MSUNFTlNFLTIuMAoKVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2Fi\\nbGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0\\ncmlidXRlZAp1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBh\\nbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IKQ09ORElU\\nSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4g\\nU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKc3BlY2lmaWMgbGFuZ3VhZ2UgZ292\\nZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUg\\nTGljZW5zZS4=\\n\",\r\n  \"encoding\": \"base64\",\r\n  \"_links\": {\r\n    \"self\": \"https://api.github.com/repos/aspnet/Home/contents/LICENSE.txt?ref=master\",\r\n    \"git\": \"https://api.github.com/repos/aspnet/Home/git/blobs/a275bdeab78db1ee28e357d86c2b3ac9d6e00773\",\r\n    \"html\": \"https://github.com/aspnet/Home/blob/master/LICENSE.txt\"\r\n  },\r\n  \"license\": {\r\n    \"key\": \"other\",\r\n    \"name\": \"Other\",\r\n    \"spdx_id\": null,\r\n    \"url\": null,\r\n    \"node_id\": \"MDc6TGljZW5zZTA=\"\r\n  }\r\n}\r\n```","Url":"https://github.com/aspnet/Home/issues/3483","RelatedDescription":"Open issue \"License update to project\" (#3483)"},{"Id":"355416211","IsPullRequest":false,"CreatedAt":"2018-08-30T19:01:51","Actor":"TanvirArjel","Number":"3480","RawContent":null,"Title":"ASP.NET Core Identity in MVC pattern","State":"closed","Body":"ASP.NET Core 2.1 and later provides ASP.NET Core Identity as a Razor Class Library. Actually I don't want to use Razor Pages in my MVC application. So how can I generate identity related codes in MVC pattern as previous versions.\r\n\r\nThank you.","Url":"https://github.com/aspnet/Home/issues/3480","RelatedDescription":"Closed issue \"ASP.NET Core Identity in MVC pattern\" (#3480)"},{"Id":"355438316","IsPullRequest":false,"CreatedAt":"2018-08-30T10:39:52","Actor":"muzzammilhussain","Number":"3481","RawContent":null,"Title":"Unable to login on Firefox","State":"closed","Body":"# Issue Title\r\n\r\nI am using dotnet  core 2.0 with Angular 5. I am able to login on all browsers in Development but in production it gives me error only on firefox and I am unable to login \r\n\r\n# General\r\n\r\nI am using dotnet core on Ubuntu with Nginx . I am unable to login on firefox on production but works fine in Development. When I try to login I get this result.\r\nAug 29 18:02:22 allieschools dotnet-example[1176]: info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\nAug 29 18:02:22 allieschools dotnet-example[1176]:       Executed action method Allied.Server.Controllers.AuthController.Login (server), returned result Microsoft.AspNetCore.Mvc.UnauthorizedResult in 0.0514ms.\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3481","RelatedDescription":"Closed issue \"Unable to login on Firefox\" (#3481)"},{"Id":"355375638","IsPullRequest":false,"CreatedAt":"2018-08-30T00:00:53","Actor":"john-luke-laue","Number":"3479","RawContent":null,"Title":"DistrubutedSession error: A severe error occurred on the current command. The results, if any, should be discarded. Operation cancelled by user. ","State":"open","Body":"I'm getting an error in DistributedSession. The source of the error seems to come from Cancellation tokens. \r\nThere was discussion on quieting some of the noisy logs coming from cancellation tokens here in [Session Issue 189](https://github.com/aspnet/Session/issues/189)\r\n\r\nI'm wondering if the same can be done for this error? Or, if not, how can I handle this error myself?\r\n\r\nI'll keep trying, but so far, I'm unable to reproduce.\r\n\r\n**Exception Message:** A severe error occurred on the current command. The results, if any, should be discarded. Operation cancelled by user. \r\n**Stack trace:** \r\n```\r\nSystem.Data.SqlClient.SqlException (0x80131904): A severe error occurred on the current command.  The results, if any, should be discarded. Operation cancelled by user.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption)\r\n   at System.Data.SqlClient.SqlCommand.CompleteAsyncExecuteReader(Boolean isInternal, Boolean forDescribeParameterEncryption)\r\n   at System.Data.SqlClient.SqlCommand.InternalEndExecuteReader(IAsyncResult asyncResult, String endMethod, Boolean isInternal)\r\n   at System.Data.SqlClient.SqlCommand.EndExecuteReaderInternal(IAsyncResult asyncResult)\r\n   at System.Data.SqlClient.SqlCommand.EndExecuteReaderAsync(IAsyncResult asyncResult)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Extensions.Caching.SqlServer.DatabaseOperations.d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Extensions.Caching.SqlServer.DatabaseOperations.d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Extensions.Caching.SqlServer.SqlServerCache.d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Session.DistributedSession.d__32.MoveNext()\r\n```\r\n\r\nThe IIS logs also show this message in addition to stack trace: _Session cache read exception_\r\n\r\nI found [a test that tests for this message](https://github.com/aspnet/Session/blob/1869bd09fabb7ba2b9cdf457fbd5f7eaf6592bea/test/Microsoft.AspNetCore.Session.Tests/SessionTests.cs#L595), if that helps.\r\n\r\nasp.net core 2.1\r\nMVC site with DistributedSqlServerCache. Session is backed by SqlServer.\r\n","Url":"https://github.com/aspnet/Home/issues/3479","RelatedDescription":"Open issue \"DistrubutedSession error: A severe error occurred on the current command. The results, if any, should be discarded. Operation cancelled by user. \" (#3479)"},{"Id":"355303541","IsPullRequest":false,"CreatedAt":"2018-08-29T20:25:16","Actor":"stanuku","Number":"3478","RawContent":null,"Title":"2.1.3 Release notes has a typo for the patch version, it has 2.1.2 instead","State":"closed","Body":"https://github.com/aspnet/Home/releases/tag/2.1.3 has\r\n\r\n_We are pleased to announce the release of ASP.NET Core **2.1.2**._","Url":"https://github.com/aspnet/Home/issues/3478","RelatedDescription":"Closed issue \"2.1.3 Release notes has a typo for the patch version, it has 2.1.2 instead\" (#3478)"},{"Id":"355297736","IsPullRequest":false,"CreatedAt":"2018-08-29T19:36:18","Actor":"NETESudarshan","Number":"3477","RawContent":null,"Title":"2.1.3 Release notes has a typo for the patch version, it has 2.1.2 instead.","State":"closed","Body":"https://github.com/aspnet/Home/releases/tag/2.1.3 has\r\n\r\n_We are pleased to announce the release of ASP.NET Core 2.1.**2**._","Url":"https://github.com/aspnet/Home/issues/3477","RelatedDescription":"Closed issue \"2.1.3 Release notes has a typo for the patch version, it has 2.1.2 instead.\" (#3477)"}],"ResultType":"GitHubIssue"},"Mvc-Issues":{"Issues":[{"Id":"356155824","IsPullRequest":false,"CreatedAt":"2018-09-06T03:53:08","Actor":"benaadams","Number":"8370","RawContent":null,"Title":"PagedBufferedTextWriter creates too many async statemachines ","State":"closed","Body":"`PagedBufferedTextWriter` is used to allow sync writes from `IHtmlContent` types without blocking threads and gumming up the async nature of ASP.NET Core.\r\n\r\nHowever it acts overly conservatively in case something has been sync written when it normally hasn't. This causes lots of additional async statemachines to be created:\r\n\r\n1 request in the RazorRendering benchmarkapp https://github.com/aspnet/Mvc/pull/8366 currently creates 9,764 FlushAsync statemachines and 8,774 WriteAsync statemachines\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/44939983-7e879000-ad81-11e8-9650-95d867849141.png)","Url":"https://github.com/aspnet/Mvc/issues/8370","RelatedDescription":"Closed issue \"PagedBufferedTextWriter creates too many async statemachines \" (#8370)"},{"Id":"356153162","IsPullRequest":true,"CreatedAt":"2018-09-06T03:53:08","Actor":"benaadams","Number":"8368","RawContent":null,"Title":"Fast-path async in PagedBufferedTextWriter","State":"closed","Body":"`PagedBufferedTextWriter` creates and executes far more async statemachines than it requires.\r\n\r\n1 request in the RazorRendering benchmarkapp https://github.com/aspnet/Mvc/pull/8366 currently creates 9,764 FlushAsync statemachines and 8,774 WriteAsync statemachines\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/44939983-7e879000-ad81-11e8-9650-95d867849141.png)\r\n\r\nAdding the fast-path reduces it to 900 FlushAsync statemachines (all from when FlushAsync is called externally) \r\n\r\n![image](https://user-images.githubusercontent.com/1142958/44940161-d1ae1280-ad82-11e8-977c-603acf15c2c0.png)\r\n\r\nResolves https://github.com/aspnet/Mvc/issues/8370","Url":"https://github.com/aspnet/Mvc/pull/8368","RelatedDescription":"Closed or merged PR \"Fast-path async in PagedBufferedTextWriter\" (#8368)"},{"Id":"357057274","IsPullRequest":true,"CreatedAt":"2018-09-06T03:52:38","Actor":"rynowak","Number":"8386","RawContent":null,"Title":"React to LinkGenerator changes","State":"closed","Body":"This is just a reaction to the API changes, and doesn't introduce anything new. \r\n\r\nI'll send another PR in the future with additional LinkGenerator extension methods focused on MVC.","Url":"https://github.com/aspnet/Mvc/pull/8386","RelatedDescription":"Closed or merged PR \"React to LinkGenerator changes\" (#8386)"},{"Id":"357477291","IsPullRequest":false,"CreatedAt":"2018-09-06T02:53:31","Actor":"treenew","Number":"8392","RawContent":null,"Title":"Why dotnet exit with use blob url.","State":"open","Body":"#### Is this a Bug or Feature request?: Bug\r\n\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n[https://github.com/treenew/UEditor.Samples](https://github.com/treenew/UEditor.Samples)\r\n\r\n#### Description of the problem:\r\n![Uploading GIF.gif…](https://www.cnblogs.com/images/cnblogs_com/sofire/656252/o_GIF.gif)\r\n[gif images](https://www.cnblogs.com/images/cnblogs_com/sofire/656252/o_GIF.gif)\r\n\r\nWhen i upload a file use ueditor on debugger mode, the vs degbuger exit on selected file.\r\n```\r\n程序“[19892] dotnet.exe: 程序跟踪”已退出，返回值为 0 (0x0)。\r\n程序“[19892] dotnet.exe”已退出，返回值为 -1 (0xffffffff)。\r\n```\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:2.1.1\r\n`google chrome`:v63.0.3239.132\r\n\r\nIs chrome or vs or dotnet bug ?","Url":"https://github.com/aspnet/Mvc/issues/8392","RelatedDescription":"Open issue \"Why dotnet exit with use blob url.\" (#8392)"},{"Id":"357452634","IsPullRequest":true,"CreatedAt":"2018-09-06T00:37:49","Actor":"dotnet-maestro-bot","Number":"8391","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @pranavkm\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Mvc merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Mvc.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Mvc/pull/8391","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#8391)"},{"Id":"356107760","IsPullRequest":true,"CreatedAt":"2018-09-06T00:07:04","Actor":"benaadams","Number":"8366","RawContent":null,"Title":"Add RazorRendering benchmarkapp","State":"closed","Body":"Sample page for performance testing as requested\r\n\r\nUrl Path: /Category/PageA\r\n\r\n/cc @rynowak @davidfowl \r\n\r\nCall count tracing for 1,144 requests; items for PRs highlighted: \r\n* Diagnostics (https://github.com/aspnet/Mvc/pull/8349 not merged breaking)\r\n* IList (https://github.com/aspnet/Mvc/pull/8353 merged)\r\n* ViewBuffer (https://github.com/aspnet/Mvc/pull/8339 merged)\r\n* Reduce viewContext (https://github.com/aspnet/Mvc/pull/8338 merged)\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/44933458-11640280-ad61-11e8-881e-28d25373967c.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Mvc/pull/8366","RelatedDescription":"Closed or merged PR \"Add RazorRendering benchmarkapp\" (#8366)"},{"Id":"357140946","IsPullRequest":true,"CreatedAt":"2018-09-06T00:05:31","Actor":"xin9le","Number":"8387","RawContent":null,"Title":"Micro performance improvement in ModelState.IsValid","State":"closed","Body":"# Overview\r\nCurrently, `ModelState.IsValid` calls `GetValidity` method twice. However `GetValidity` method is recursive method which is a little heavy, so we shouldn't call it twice. This pull-request resolves this problem using local variable cache.\r\n\r\n\r\n# Risk\r\nLow. Only use local variable.","Url":"https://github.com/aspnet/Mvc/pull/8387","RelatedDescription":"Closed or merged PR \"Micro performance improvement in ModelState.IsValid\" (#8387)"},{"Id":"356683200","IsPullRequest":true,"CreatedAt":"2018-09-06T00:04:21","Actor":"HassanHashemi","Number":"8379","RawContent":null,"Title":"Remove redundant check","State":"closed","Body":"Fixes https://github.com/aspnet/Mvc/issues/8374","Url":"https://github.com/aspnet/Mvc/pull/8379","RelatedDescription":"Closed or merged PR \"Remove redundant check\" (#8379)"},{"Id":"356260303","IsPullRequest":false,"CreatedAt":"2018-09-06T00:04:21","Actor":"nour-s","Number":"8374","RawContent":null,"Title":"Redundant check ' if (actionContext == null) ' in ActionContext.cs","State":"closed","Body":"I'm not sure if this is the right way to report this, but please let me know how to do it better.\r\n\r\nIt is a minor observation, that checking \r\n\r\nhttps://github.com/aspnet/Mvc/blob/a67d9363e22be8ef63a1a62539991e1da3a6e30e/src/Microsoft.AspNetCore.Mvc.Abstractions/ActionContext.cs#L39\r\n\r\nis useless, because if that's true, it would fail earlier at\r\nhttps://github.com/aspnet/Mvc/blob/a67d9363e22be8ef63a1a62539991e1da3a6e30e/src/Microsoft.AspNetCore.Mvc.Abstractions/ActionContext.cs#L33-L38\r\n\r\nwhen calling the base class's constructor.\r\n","Url":"https://github.com/aspnet/Mvc/issues/8374","RelatedDescription":"Closed issue \"Redundant check ' if (actionContext == null) ' in ActionContext.cs\" (#8374)"},{"Id":"357443692","IsPullRequest":true,"CreatedAt":"2018-09-05T23:49:33","Actor":"pranavkm","Number":"8390","RawContent":null,"Title":"Refactor DefaultPageApplicationModel to use conventions","State":"open","Body":"","Url":"https://github.com/aspnet/Mvc/pull/8390","RelatedDescription":"Open PR \"Refactor DefaultPageApplicationModel to use conventions\" (#8390)"},{"Id":"356943785","IsPullRequest":true,"CreatedAt":"2018-09-05T23:28:47","Actor":"natemcmaster","Number":"8384","RawContent":null,"Title":"Update branding to 2.2.0-preview3","State":"closed","Body":"When this PR merges, the release/2.2 branch is open for preview3 changes.","Url":"https://github.com/aspnet/Mvc/pull/8384","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.0-preview3\" (#8384)"},{"Id":"356914798","IsPullRequest":false,"CreatedAt":"2018-09-05T21:35:15","Actor":"Eilon","Number":"8383","RawContent":null,"Title":"Timestamp passed via RedirectToAction loses precision in target action","State":"closed","Body":"_From @martinmikulka on Monday, 03 September 2018 13:05:33_\r\n\r\nHello, I am facing a problem when calling RedirectToAction() method and passing a timestamp via parameter:\r\n\r\n```\r\npublic IActionResult ActionOne()\r\n{\r\n   var timestamp = new DateTimeOffset(2018,7,25,14,16,18,120,new TimeSpan());\r\n   return RedirectToAction(\"ActionTwo\", new { Timestamp = timestamp });\r\n}\r\n\r\npublic IActionResult ActionTwo(DateTimeOffset timestamp)\r\n{\r\n   ...\r\n}\r\n```\r\n\r\nWhen I dump the timestamp variable inside the ActionOne:\r\nMillisecond [int]: 120\r\nTicks [long]: 636681249781200000\r\n\r\nWhen I dump the timestamp variable inside the ActionTwo:\r\nMillisecond [int]: 0\r\nTicks [long]: 636681249780000000\r\n\r\nThe target variable has lost miliseconds precision.\r\nDo I have to pass the timestamp in some different way or is it a bug?\r\n\r\nThanks, Martin\r\n\r\n\r\n_Copied from original issue: aspnet/Home#3488_","Url":"https://github.com/aspnet/Mvc/issues/8383","RelatedDescription":"Closed issue \"Timestamp passed via RedirectToAction loses precision in target action\" (#8383)"},{"Id":"357327670","IsPullRequest":false,"CreatedAt":"2018-09-05T17:23:42","Actor":"steveoh","Number":"8389","RawContent":null,"Title":"ApiConventions","State":"open","Body":"#### Is this a Bug or Feature request?:\r\nBug or misunderstanding of feature and possibly a feature request\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n\r\nConsider having multiple api methods with different 200 generic response types and different method names and signatures but all the other status codes produce the same result object. I think this is a pretty typical/common scenario for api's.\r\n\r\n```cs\r\n/// <response code=\"400\">yada</response>\r\n/// <response code=\"404\">yada</response>\r\n/// <response code=\"500\">yada</response>\r\n[HttpGet]\r\n[ProducesResponseType(StatusCodes.Status200OK, Type = typeof(ApiResponseContainer<Result>))]\r\n[ProducesResponseType(StatusCodes.Status400BadRequest, Type = typeof(ApiResponseContainer))]\r\n[ProducesResponseType(StatusCodes.Status404NotFound, Type = typeof(ApiResponseContainer))]\r\n[ProducesResponseType(StatusCodes.Status500InternalServerError, Type = typeof(ApiResponseContainer))]\r\n[Route(\"yadayada\")]\r\npublic async Task<ObjectResult> Method(string a, string b, [FromQuery] Object options)\r\n```\r\n\r\nI tried to remove the duplication into a convention.\r\n\r\n```cs\r\npublic static MyConvention {\r\n[ProducesResponseType(StatusCodes.Status400BadRequest, Type = typeof(ApiResponseContainer))]\r\n[ProducesResponseType(StatusCodes.Status404NotFound, Type = typeof(ApiResponseContainer))]\r\n[ProducesResponseType(StatusCodes.Status500InternalServerError, Type = typeof(ApiResponseContainer))]\r\npublic static void Default() {}\r\n}\r\n```\r\n\r\n```cs\r\n[HttpGet]\r\n[ProducesResponseType(StatusCodes.Status200OK, Type = typeof(ApiResponseContainer<Result>))]\r\n[ApiConventionMethod(typeof(MyConvention), nameof(MyConvention.Default))]\r\n[Route(\"yadayada\")]\r\npublic async Task<ObjectResult> Method(string a, string b, [FromQuery] Object options)\r\n```\r\n\r\n#### Description of the problem:\r\nIt appears you cannot merge existing method attributes with an api convention method because it's not a feature/implemented or that it wasn't applied because the signatures don't match. When I tried this, only the xml comments where being used in the doc.\r\n\r\nI would like `[ApiConventionTypeMatch(ApiConventionTypeMatchBehavior.Any)]` to work on method and parameter signatures (if that is the reason of my issue) in order to remove some of the doc code into a convention that can be reused across the api. \r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n```\r\ndotnet --version\r\n2.2.100-preview1-009349\r\n<PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.2.0-preview1-35029\"/>\r\n```","Url":"https://github.com/aspnet/Mvc/issues/8389","RelatedDescription":"Open issue \"ApiConventions\" (#8389)"},{"Id":"357320823","IsPullRequest":false,"CreatedAt":"2018-09-05T17:03:43","Actor":"strawd","Number":"8388","RawContent":null,"Title":"ASP.NET Core 2.1.0 breaks attribute-routed endpoints in applications targeting Microsoft.NET.Sdk","State":"open","Body":"#### Is this a Bug or Feature request?:\r\n\r\nBug or breaking change\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n\r\n1. Run `dotnet new webapi`\r\n2. Run `dotnet run`\r\n3. Make a request, ex. run `curl -k https://localhost:5001/api/values` and verify that the response is a `200 OK`\r\n4. Stop the application\r\n5. Edit the project file to change the `Sdk` attribute to `Microsoft.NET.Sdk` and add `<OutputType>Exe</OutputType>` to the first `<PropertyGroup>` tag\r\n6. Run `dotnet run`\r\n7. Make the same request as before, and observe that the response is now `404 Not Found`\r\n\r\n#### Description of the problem:\r\n\r\nWe found that updating from `Microsoft.AspNetCore.All` version 2.0.9 to version 2.1.0 or switching to the `Microsoft.AspNetCore.App` package (which starts at version 2.1.0) breaks applications exposing attribute-routed web APIs when the SDK of the project is `Microsoft.NET.Sdk`, as opposed to `Microsoft.NET.Sdk.Web`.\r\n\r\nAfter updating the dependency, all of the web API endpoints return a 404 error early in the pipeline instead of processing through to the controller. We see the following logged by the framework:\r\n\r\n```\r\nTRACE Microsoft.AspNetCore.Server.Kestrel            Begin Scope: ConnectionId:0HLGJ95MK9TK0\r\nDEBUG Microsoft.AspNetCore.Server.Kestrel            Connection id \"0HLGJ95MK9TK0\" started.\r\nTRACE Microsoft.AspNetCore.Hosting.Internal.WebHost  Begin Scope: RequestId:0HLGJ95MK9TK0:00000001 RequestPath:<path>\r\nDEBUG Microsoft.AspNetCore.Hosting.Internal.WebHost  Request starting HTTP/1.1 GET <uri> application/json\r\nDEBUG Microsoft.AspNetCore.Builder.RouterMiddleware  Request did not match any routes.\r\nDEBUG Microsoft.AspNetCore.Builder.RouterMiddleware  Request did not match any routes.\r\nDEBUG Microsoft.AspNetCore.Server.Kestrel            Connection id \"0HLGJ95MK9TK0\" completed keep alive response.\r\nINFO  Microsoft.AspNetCore.Hosting.Internal.WebHost  Request finished in 197.7742ms 404\r\nTRACE Microsoft.AspNetCore.Hosting.Internal.WebHost  End Scope: RequestId:0HLGJ95MK9TK0:00000001 RequestPath:<path>\r\n```\r\n\r\nWe found that explicit routes do still work as expected, so the issue only affects attribute routing. The issue existed whether we used 2.0 conventions or 2.1 conventions (using `CompatibilityVersion.Version_2_1` and the `[ApiController]` attribute).\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\nIssue observed in `Microsoft.AspNetCore.App` and `Microsoft.AspNetCore.All` versions 2.1.0, 2.1.1, 2.1.2 and 2.1.3.","Url":"https://github.com/aspnet/Mvc/issues/8388","RelatedDescription":"Open issue \"ASP.NET Core 2.1.0 breaks attribute-routed endpoints in applications targeting Microsoft.NET.Sdk\" (#8388)"},{"Id":"356988350","IsPullRequest":false,"CreatedAt":"2018-09-04T21:48:28","Actor":"guardrex","Number":"8385","RawContent":null,"Title":"Possible bug in RP conventions behavior (or just a ? on optional route params)","State":"open","Body":"#### Is this a Bug or Feature request?:\r\n\r\nPossible bug, but mostly in need of clarification for the docs. https://github.com/aspnet/Docs/issues/6173#issuecomment-386825256\r\n\r\n#### Steps to reproduce:\r\n\r\nApp sets up a page route with an optional route param:\r\n\r\n```csharp\r\noptions.Conventions.AddPageRoute(\"/Contact\", \"TheContactPage/{text?}\");\r\n```\r\n\r\n#### Description of the problem:\r\n\r\nWorks when the param is present: `http://localhost:5000/TheContactPage/SomeValue`.\r\n\r\nDoesn't work when the param isn't present (in spite of designation as optional): `http://localhost:5000/TheContactPage`. The app loads the app's Index page (i.e., no route matches).\r\n\r\nSide-note: Upon rendering, the Contact page link in the Layout page points to `/TheContactPage` (`<a href=\"/TheContactPage\">Contact</a>`) (good); but since that fails to resolve to the Contact page, it breaks the link.\r\n\r\nThe following is **not** a valid workaround ...\r\n\r\n```csharp\r\noptions.Conventions.AddPageRoute(\"/Contact\", \"TheContactPage\");\r\noptions.Conventions.AddPageRoute(\"/Contact\", \"TheContactPage/{text}\");\r\n```\r\n\r\nThe behavior doesn't change; and to make matters worse, the layout link to Contact (`<a asp-page=\"/Contact\">Contact</a>`) isn't rendered to `/TheContactPage` ... it renders without a destination (`<a href=\"\">Contact</a>`).\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n```xml\r\n<PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.3\" />\r\n```\r\n\r\n#### Question\r\n\r\nBy-design? ... or bug? If by-design, I'll document that optional route params don't work with `AddPageRoute`.\r\n\r\n#### Extended problem report\r\n\r\nApp sets up a page route with an optional route param as described above ...\r\n\r\n```csharp\r\noptions.Conventions.AddPageRoute(\"/Contact\", \"TheContactPage/{text?}\");\r\n```\r\n\r\nAfter `/TheContactPage` is requested, it fouls other Layout page links in the topic's sample app.\r\n\r\nThey go from (first rendered) ...\r\n\r\n```html\r\n<ul class=\"dropdown-menu multi-level\">\r\n    <li><a href=\"/OtherPages/Page1\">Page 1</a></li>\r\n    <li><a href=\"/OtherPages/Page2\">Page 2</a></li>\r\n    <li><a href=\"/OtherPages/Page3\">Page 3</a></li>\r\n</ul>\r\n```\r\n\r\n... to (rendered after `/TheContactPage` is requested) ...\r\n\r\n```html\r\n<ul class=\"dropdown-menu multi-level\">\r\n    <li><a href=\"/OtherPages/Page1/TheContactPage\">Page 1</a></li>\r\n    <li><a href=\"/OtherPages/Page2/TheContactPage\">Page 2</a></li>\r\n    <li><a href=\"/OtherPages/Page3/TheContactPage\">Page 3</a></li>\r\n</ul>\r\n```","Url":"https://github.com/aspnet/Mvc/issues/8385","RelatedDescription":"Open issue \"Possible bug in RP conventions behavior (or just a ? on optional route params)\" (#8385)"},{"Id":"356735002","IsPullRequest":false,"CreatedAt":"2018-09-04T18:27:42","Actor":"edem-e-akoussanh","Number":"8380","RawContent":null,"Title":"Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB6003: The specified task executable \"dotnet\" could not be run. The specified executable is not a valid application for this OS platform","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nBug: Unable to build and run Asp.Net Core 2.1 projects.\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n1.  dotnet new mvc\r\n2.  build and run\r\n\r\n#### Description of the problem:\r\nAny Asp.net core 2.1 project ends up with this error, during build and run:\r\n1>------ Build started: Project: WebApplication1, Configuration: Debug Any CPU ------\r\n1>C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.design\\2.1.1\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB6003: The specified task executable \"dotnet\" could not be run. The specified executable is not a valid application for this OS platform.\r\n1>Done building project \"WebApplication1.csproj\" -- FAILED.\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n\r\nI tried uninstalling dotnet sdk and re-installing but problem still persists. \r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <UserSecretsId>aspnet-WebApplication1-B780E107-3B99-4B5A-9A15-493D503F8A95</UserSecretsId>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.1.3\" PrivateAssets=\"All\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n","Url":"https://github.com/aspnet/Mvc/issues/8380","RelatedDescription":"Closed issue \"Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB6003: The specified task executable \"dotnet\" could not be run. The specified executable is not a valid application for this OS platform\" (#8380)"},{"Id":"356228452","IsPullRequest":false,"CreatedAt":"2018-09-04T18:22:14","Actor":"KrystianKolad","Number":"8373","RawContent":null,"Title":"Removing item from list in named handler removes always last item","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nModels and Page source:\r\nhttps://gist.github.com/KrystianKolad/0fb85e9adc7eed1b6e7e6c33c945cae8\r\n\r\n#### Description of the problem:\r\nI have a razor page Add where I can create conference. This conference has a list of lectures, which I add and delete by using named handlers(see gist). Everything works fine until I try to delete lecture from list where I have more than 1 - in this case, it will always remove the last one. For example, if I have a list of 4 lectures(a,b,c,d), when I try to remove first(a), I remove fourth(d). When I debugg it, I can clearly see that my list does not contain lecture a, but when my page loads, lecture a is still in there and there is no lecture d. When I submit of course there is no lectude d.\r\nI have found a question on stack overflow about same thing:https://stackoverflow.com/questions/50197357/asp-net-core-razor-pages-dynamic-list but there is no response.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\nMicrosoft.AspNetCore.All version 2.0.0\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n","Url":"https://github.com/aspnet/Mvc/issues/8373","RelatedDescription":"Closed issue \"Removing item from list in named handler removes always last item\" (#8373)"},{"Id":"356290231","IsPullRequest":false,"CreatedAt":"2018-09-04T17:56:34","Actor":"spottedmahn","Number":"8375","RawContent":null,"Title":"Debugging ASP.NET Source From Visual Studio","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nQuestion\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n\r\n- Start a new ASP.NET Core project -> MVC type\r\n- Configure remote debugging: [Debugging ASP.NET Core 2.0 Source Code](https://www.stevejgordon.co.uk/debugging-asp-net-core-2-source)\r\n- Set a breakpoint on `SelectCandidates` (reference: [Debugging ASP.NET Core 2.0 source code - breakpoints](https://blog.reyno.co.uk/debugging-asp-net-core-source-code/))\r\n   - That should set a break point on `Microsoft.AspNetCore.Mvc.Internal.SelectCandidates`\r\n- F5 and step through the code in `SelectCandidates`\r\n\r\n#### Description of the problem:\r\n\r\n- Stepping through the code, via F10, skips over lines\r\n- Many of the variable values cannot be inspected\r\n\r\n> cannot obtain value of the local variable or argument because it is not available at this instruction pointer, possibly because it has been optimized away.\r\n\r\n>Cannot evaluate expression because a thread is stopped at a point where garbage collection is impossible, possibly because the code is optimized.\t\r\n\r\n![trouble debugging asp net core source](https://user-images.githubusercontent.com/14079228/44957355-6f96ff80-ae9f-11e8-9f9a-35e3aabb9ca7.gif)\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n2.0.0\r\n\r\n#### Questions\r\n\r\n- Where can/should I report issues around this experience?\r\n- Are there any official docs on this?\r\n- I assume a lot of the behavior I'm seeing is because I'm trying to debug `Release` assemblies.  Are `Debug` build assemblies available?\r\n","Url":"https://github.com/aspnet/Mvc/issues/8375","RelatedDescription":"Closed issue \"Debugging ASP.NET Source From Visual Studio\" (#8375)"},{"Id":"356786560","IsPullRequest":false,"CreatedAt":"2018-09-04T16:54:31","Actor":"Kris0","Number":"8382","RawContent":null,"Title":"Url Annotation is buggy","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nCreate a Model with a Single Property string, annotate it with [Url] and a View with a input that binds the value of the input to the model.\r\n\r\nNow type as Url:\r\nhttps://httpsblabla\r\n\r\n#### Description of the problem:\r\nSee the ModelState beeing valid.\r\n\r\n#### Version Microsoft.AspNetCore.All:\r\n2.0.5","Url":"https://github.com/aspnet/Mvc/issues/8382","RelatedDescription":"Closed issue \"Url Annotation is buggy\" (#8382)"},{"Id":"356783739","IsPullRequest":false,"CreatedAt":"2018-09-04T16:35:18","Actor":"Kris0","Number":"8381","RawContent":null,"Title":"ModelValidation EmailAddress is buggy","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nCreate a Model with a Single Property string, annotate it with [EmailAddress] and a View with a input that binds the value of the input to the model.\r\n\r\nNow type as Email:\r\nSomeThing@.com \r\n\r\n#### Description of the problem:\r\n\r\nSee the ModelState beeing valid.\r\n\r\n#### Version `Microsoft.AspNetCore.All`:\r\n2.0.5\r\n","Url":"https://github.com/aspnet/Mvc/issues/8381","RelatedDescription":"Closed issue \"ModelValidation EmailAddress is buggy\" (#8381)"},{"Id":"356617193","IsPullRequest":true,"CreatedAt":"2018-09-04T00:20:30","Actor":"SimonCropp","Number":"8378","RawContent":null,"Title":"fix some spelling","State":"open","Body":"","Url":"https://github.com/aspnet/Mvc/pull/8378","RelatedDescription":"Open PR \"fix some spelling\" (#8378)"},{"Id":"356341259","IsPullRequest":false,"CreatedAt":"2018-09-03T02:48:47","Actor":"BHare1985","Number":"8377","RawContent":null,"Title":"DefaultModelBinder for SortedSet automatically sorts","State":"closed","Body":"#### Is this a Bug or Feature request?: \r\n\r\nBug\r\n\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nsend a post payload of `ids[]=3&ids[]=1&ids[]=2` to a mvc controller action like `public JsonResult SaveSortOrder(SortedSet<int> ids)`\r\n\r\n#### Description of the problem:\r\n\r\nWhen using default parameterization of a javascript array in jquery, the payload for the array `[3,1,2]` looks like `ids[]=3&ids[]=1&ids[]=2`. If using `traditional: true` then it will look like `ids=3&ids=1&ids=2`\r\n\r\nHowever the DefaultModelBinder will turn both payloads into an array like `[1,2,3]`. \r\n\r\nI am not sure why it's assuming I want to automatically sort (I could see a use-case where that could be useful) but my default assumption is that it would work like `List<int>` and maintain the order, in fact I would make the assumption that `SortedSet` would guarantee the order was maintained, whereas I would assume `List` may not.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: \r\n\r\nMicrosoft.AspNet.Mvc.5.2.6 (.NET 4.52)","Url":"https://github.com/aspnet/Mvc/issues/8377","RelatedDescription":"Closed issue \"DefaultModelBinder for SortedSet automatically sorts\" (#8377)"},{"Id":"356314844","IsPullRequest":true,"CreatedAt":"2018-09-02T21:18:12","Actor":"gqqnbig","Number":"8376","RawContent":null,"Title":"LocalizedHtmlString.Value doesn't include arguments","State":"open","Body":"Clarify that Value doesn't include arguments","Url":"https://github.com/aspnet/Mvc/pull/8376","RelatedDescription":"Open PR \"LocalizedHtmlString.Value doesn't include arguments\" (#8376)"},{"Id":"356176850","IsPullRequest":true,"CreatedAt":"2018-09-01T06:25:37","Actor":"Matthiee","Number":"8372","RawContent":null,"Title":"Adds ObjectResult for Forbid Response","State":"open","Body":"[RFC 7231, in section 6.5.3. 403 Forbidden](https://tools.ietf.org/html/rfc7231#page-59), specifically states:\r\n\r\n> A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\r\n\r\nFixes #8219","Url":"https://github.com/aspnet/Mvc/pull/8372","RelatedDescription":"Open PR \"Adds ObjectResult for Forbid Response\" (#8372)"},{"Id":"356156591","IsPullRequest":false,"CreatedAt":"2018-09-01T01:00:54","Actor":"benaadams","Number":"8371","RawContent":null,"Title":"CI failure - HttpResponseMessageOutputFormatterTests (intermittent)","State":"closed","Body":"```\r\nMicrosoft.AspNetCore.Mvc.WebApiCompatShimTest.HttpResponseMessageOutputFormatterTests.Disposed_CalledOn_HttpResponseMessage [FAIL]\r\n17:19:48   Failed   Microsoft.AspNetCore.Mvc.WebApiCompatShimTest.HttpResponseMessageOutputFormatterTests.Disposed_CalledOn_HttpResponseMessage\r\n17:19:48   Error Message:\r\n17:19:48    System.NullReferenceException : Object reference not set to an instance of an object.\r\n17:19:48   Stack Trace:\r\n17:19:48      at System.Collections.Generic.Dictionary`2.FindEntry(TKey key)\r\n17:19:48      at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n17:19:48      at Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory)\r\n17:19:48      at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)\r\n17:19:48      at Moq.Proxy.CastleProxyFactory.CreateProxy(Type mockType, ICallInterceptor interceptor, Type[] interfaces, Object[] arguments)\r\n17:19:48      at Moq.Mock`1.<InitializeInstance>b__20_0()\r\n17:19:48      at Moq.Mock`1.OnGetObject()\r\n17:19:48      at Moq.Mock`1.get_Object()\r\n17:19:48      at Microsoft.AspNetCore.Mvc.WebApiCompatShimTest.HttpResponseMessageOutputFormatterTests.Disposed_CalledOn_HttpResponseMessage() in /_/test/Microsoft.AspNetCore.Mvc.WebApiCompatShimTest/HttpResponseMessageOutputFormatterTests.cs:line 29\r\n17:19:48   --- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/aspnet/Mvc/issues/8371","RelatedDescription":"Closed issue \"CI failure - HttpResponseMessageOutputFormatterTests (intermittent)\" (#8371)"},{"Id":"356155759","IsPullRequest":true,"CreatedAt":"2018-09-01T00:28:28","Actor":"pranavkm","Number":"8369","RawContent":null,"Title":"Add a feature to disable file watching in Razor pages","State":"open","Body":"Fixes https://github.com/aspnet/Mvc/issues/8362","Url":"https://github.com/aspnet/Mvc/pull/8369","RelatedDescription":"Open PR \"Add a feature to disable file watching in Razor pages\" (#8369)"},{"Id":"356125873","IsPullRequest":false,"CreatedAt":"2018-08-31T21:16:11","Actor":"peterhuene","Number":"8367","RawContent":null,"Title":"dotnet run System.ArgumentNullException: for a simple program with new installation of .netcore 2.1.401","State":"open","Body":"_From @Petermarcu on August 31, 2018 18:56_\n\n@noorrocks commented on [Wed Aug 29 2018](https://github.com/dotnet/core/issues/1904)\n\n# Issue Title\r\n\r\ndotnet run System.ArgumentNullException: for a simple program with new installation of .netcore 2.1.401\r\n\r\n# General\r\n\r\nTrying to get started with .netcore programming. Followed the basic tut from asp.net website but failed.\r\n\r\nhttps://www.asp.net/get-started\r\n\r\nI get the error (attached) after dotnet run command. \r\n\r\n[Powershell output](https://codeshare.io/5w3X9p)\r\n\r\nThis is my first ever program after a fresh installation of the latest SDK (as of now). I have tried console app and it works fine. Even a simple app with 'web' template works ok and display 'Hello World' in the browser. However, as soon as I add 'services.addMVC' to the app it breaks with the same error. I have done all my research and tried a lot of things, but not sure what is happening.\r\n\r\nProgram files:\r\n[Files](https://app.box.com/s/kzsy7t5tzmg93ykqkhvxbyci1l5zgre7)\r\n\n\n---\n\n@noorrocks commented on [Thu Aug 30 2018](https://github.com/dotnet/core/issues/1904#issuecomment-417336820)\n\nAfter wrestling with this problem for two days, finally, I have caught the issue.\r\n\r\nif you see the 'powershell output', my project directory is ' Directory: C:\\#NIN\\dotnetcore'\r\n\r\nSomehow, it doesn't like the '#' in a folder name. I created a new folder without '#' and it worked like a charm.\r\n\r\nI was also able to reproduce this problem on a different PC.\r\n\r\nPlease note that it only bothers the '#' if it's at the root folder name. Down the chain, it works OK.\r\n\r\nThis issue can be marked as a **known issue**, I think.\r\n\r\n\r\n\n\n\n\n_Copied from original issue: dotnet/cli#9932_","Url":"https://github.com/aspnet/Mvc/issues/8367","RelatedDescription":"Open issue \"dotnet run System.ArgumentNullException: for a simple program with new installation of .netcore 2.1.401\" (#8367)"},{"Id":"355992531","IsPullRequest":false,"CreatedAt":"2018-08-31T13:59:48","Actor":"Yaevh","Number":"8365","RawContent":null,"Title":"Allow validation attributes on `PageModel` itself","State":"open","Body":"#### Is this a Bug or Feature request?: Feature request\r\n\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project): https://github.com/Yaevh/RootModelValidationDemo\r\n\r\n\r\n#### Description of the problem:\r\nAs of 2.1.0, validation attributes are allowed on controller parameters, bound controller parameters, page model properties and handler method parameters. They are however not allowed on page models themselves, which makes it impossible to implement complex, multi-property validation in Razor Pages declaratively. Right now one must either invoke such validation manually, or encapsulate all properties in a custom viewmodel and decorate that viewmodel with a validation attribute, which is rather awkward considering that `PageModel` is the actual viewmodel for the page.\r\nAre there any plans to allow validation of whole `PageModel`s in Razor Pages?\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 2.1.0\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n","Url":"https://github.com/aspnet/Mvc/issues/8365","RelatedDescription":"Open issue \"Allow validation attributes on `PageModel` itself\" (#8365)"},{"Id":"355735529","IsPullRequest":true,"CreatedAt":"2018-08-30T21:51:57","Actor":"rynowak","Number":"8364","RawContent":null,"Title":"Add a functional test for middleware after routing","State":"closed","Body":"It came up during routing discussions that we don't have any tests for\r\nthis scenario.","Url":"https://github.com/aspnet/Mvc/pull/8364","RelatedDescription":"Closed or merged PR \"Add a functional test for middleware after routing\" (#8364)"},{"Id":"355702944","IsPullRequest":true,"CreatedAt":"2018-08-30T21:18:55","Actor":"pranavkm","Number":"8363","RawContent":null,"Title":"Log harder on the CI","State":"closed","Body":"","Url":"https://github.com/aspnet/Mvc/pull/8363","RelatedDescription":"Closed or merged PR \"Log harder on the CI\" (#8363)"}],"ResultType":"GitHubIssue"},"SignalR-Issues":{"Issues":[{"Id":"357494632","IsPullRequest":false,"CreatedAt":"2018-09-06T04:45:04","Actor":"juepiezhongren","Number":"2918","RawContent":null,"Title":"xamarin.ios got SIGABRT while trying to re-StartAsync after call StopAsync","State":"open","Body":"__","Url":"https://github.com/aspnet/SignalR/issues/2918","RelatedDescription":"Open issue \"xamarin.ios got SIGABRT while trying to re-StartAsync after call StopAsync\" (#2918)"},{"Id":"357476034","IsPullRequest":false,"CreatedAt":"2018-09-06T02:46:29","Actor":"aspnet-hello","Number":"2917","RawContent":null,"Title":"Test failure: CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=545199&buildTypeId=Releases_22xPublic_UbuntuUniverse) occasionally with the following error:\r\n```\r\nSystem.TimeoutException : Operation in CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser timed out at /_/test/Microsoft.AspNetCore.SignalR.Redis.Tests/RedisEndToEnd.cs:118\r\n   at System.Threading.Tasks.TaskExtensions.OrTimeout[T](Task`1 task, TimeSpan timeout, String memberName, String filePath, Nullable`1 lineNumber) in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/TaskExtensions.cs:line 67\r\n   at Microsoft.AspNetCore.SignalR.Redis.Tests.RedisEndToEndTests.CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser(HttpTransportType transportType, String protocolName) in /_/test/Microsoft.AspNetCore.SignalR.Redis.Tests/RedisEndToEnd.cs:line 118\r\n--- End of stack trace from previous location where exception was thrown ---\r\n------- Stdout: -------\r\n| [0.005s] TestLifetime Information: Starting test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser-ServerSentEvents-json at 2018-09-06T02:14:24\r\n| [0.003s] TestLifetime Information: Starting test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser_ServerSentEvents_json at 2018-09-06T02:14:24\r\n| [0.023s] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Pj4XujS5DVHaOxCiFcZzcQ - Starting transport. Transfer mode: Text.\r\n| [0.032s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: Pj4XujS5DVHaOxCiFcZzcQ - HttpConnection Started.\r\n| [0.033s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Pj4XujS5DVHaOxCiFcZzcQ - Using HubProtocol 'json v1'.\r\n| [0.045s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Pj4XujS5DVHaOxCiFcZzcQ - HubConnection started.\r\n| [0.055s] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: zVjC7qqgbu5tqKWWnNjC9A - Starting transport. Transfer mode: Text.\r\n| [0.058s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: zVjC7qqgbu5tqKWWnNjC9A - HttpConnection Started.\r\n| [0.058s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: zVjC7qqgbu5tqKWWnNjC9A - Using HubProtocol 'json v1'.\r\n| [0.065s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: zVjC7qqgbu5tqKWWnNjC9A - HubConnection started.\r\n| [5.078s] TestLifetime Information: Finished test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser_ServerSentEvents_json in 5.0748792s\r\n| [5.086s] TestLifetime Information: Finished test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser-ServerSentEvents-json in 5.0814278s\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.2.\r\n\r\nCC @muratg\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/SignalR/issues/2917","RelatedDescription":"Open issue \"Test failure: CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser\" (#2917)"},{"Id":"356943388","IsPullRequest":true,"CreatedAt":"2018-09-05T23:28:32","Actor":"natemcmaster","Number":"2909","RawContent":null,"Title":"Update branding to 1.1.0-preview3","State":"closed","Body":"When this PR merges, the release/2.2 branch is open for preview3 changes.","Url":"https://github.com/aspnet/SignalR/pull/2909","RelatedDescription":"Closed or merged PR \"Update branding to 1.1.0-preview3\" (#2909)"},{"Id":"357347488","IsPullRequest":true,"CreatedAt":"2018-09-05T18:20:44","Actor":"BrennanConroy","Number":"2916","RawContent":null,"Title":"Add VSCode debug configuration for Java","State":"open","Body":"","Url":"https://github.com/aspnet/SignalR/pull/2916","RelatedDescription":"Open PR \"Add VSCode debug configuration for Java\" (#2916)"},{"Id":"356710260","IsPullRequest":true,"CreatedAt":"2018-09-05T16:31:06","Actor":"vicancy","Number":"2906","RawContent":null,"Title":"Fix TestWebSocketConnectionFeature that CancellationToken is not working","State":"closed","Body":"","Url":"https://github.com/aspnet/SignalR/pull/2906","RelatedDescription":"Closed or merged PR \"Fix TestWebSocketConnectionFeature that CancellationToken is not working\" (#2906)"},{"Id":"357020231","IsPullRequest":false,"CreatedAt":"2018-09-05T16:02:10","Actor":"Kikimora","Number":"2913","RawContent":null,"Title":"Swagger support?","State":"closed","Body":"How can I generate swagger documentation for SignalR API?","Url":"https://github.com/aspnet/SignalR/issues/2913","RelatedDescription":"Closed issue \"Swagger support?\" (#2913)"},{"Id":"357027012","IsPullRequest":false,"CreatedAt":"2018-09-05T00:57:38","Actor":"mikaelm12","Number":"2915","RawContent":null,"Title":"Java client should support using custom HttpClient for testing","State":"open","Body":"This will open up the test-ability of the client by allowing us to test code paths that depend on network calls that we will then be able to simulate. ","Url":"https://github.com/aspnet/SignalR/issues/2915","RelatedDescription":"Open issue \"Java client should support using custom HttpClient for testing\" (#2915)"},{"Id":"357022223","IsPullRequest":true,"CreatedAt":"2018-09-05T00:26:34","Actor":"mikaelm12","Number":"2914","RawContent":null,"Title":"Use HubException for error in HandShakeResponse","State":"open","Body":"Errors in the `HandshakeResponse` were generic exceptions. They should be  `HubException`s","Url":"https://github.com/aspnet/SignalR/pull/2914","RelatedDescription":"Open PR \"Use HubException for error in HandShakeResponse\" (#2914)"},{"Id":"356986240","IsPullRequest":true,"CreatedAt":"2018-09-04T21:40:36","Actor":"mikaelm12","Number":"2912","RawContent":null,"Title":"Spotless with custom formatting rules for the Java client","State":"open","Body":"I created a custom rule set that covers our conventions. I like this more than the google java formatter because of their apparently intentionally unchangeable line length limit's and their 2 space indentations.\r\n\r\nIssue: https://github.com/aspnet/SignalR/issues/2676 ","Url":"https://github.com/aspnet/SignalR/pull/2912","RelatedDescription":"Open PR \"Spotless with custom formatting rules for the Java client\" (#2912)"},{"Id":"356974308","IsPullRequest":true,"CreatedAt":"2018-09-04T21:00:00","Actor":"dotnet-maestro-bot","Number":"2911","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2.\r\nI'm a robot and am configured to help you automatically keep release/2.2 up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @BrennanConroy\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout release/2.2\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/SignalR merge/release/2.1-to-release/2.2:merge/release/2.1-to-release/2.2\r\ngit merge merge/release/2.1-to-release/2.2\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.1-to-release/2.2' on https://github.com/dotnet-maestro-bot/SignalR.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.1.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/2911","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#2911)"},{"Id":"356917106","IsPullRequest":true,"CreatedAt":"2018-09-04T20:57:20","Actor":"BrennanConroy","Number":"2907","RawContent":null,"Title":"Avoid ODE in tests with Server logging (#2742)","State":"closed","Body":"https://github.com/aspnet/SignalR/issues/2886\r\n\r\nChange from 2.2 https://github.com/aspnet/SignalR/pull/2742\r\n\r\n@muratg For 2.1","Url":"https://github.com/aspnet/SignalR/pull/2907","RelatedDescription":"Closed or merged PR \"Avoid ODE in tests with Server logging (#2742)\" (#2907)"},{"Id":"355752580","IsPullRequest":false,"CreatedAt":"2018-09-04T20:56:13","Actor":"aspnet-hello","Number":"2895","RawContent":null,"Title":"Test failure: CanSendAndReceiveUserMessagesWhenOneConnectionWithUserDisconnects","State":"closed","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=542609&buildTypeId=Releases_21Public_UbuntuUniverse) occasionally with the following error:\r\n```\r\n[Test Collection Cleanup Failure (RedisEndToEndTestsCollection)]: System.Exception : Command '/usr/bin/docker stop redisTestContainer' failed with exit code '1'. Output:\r\nError response from daemon: No such container: redisTestContainer\r\n   at Microsoft.AspNetCore.SignalR.Redis.Tests.Docker.RunProcessAndThrowIfFailed(String fileName, String arguments, ILogger logger, TimeSpan timeout) in /_/test/Microsoft.AspNetCore.SignalR.Redis.Tests/Docker.cs:line 90\r\n   at Microsoft.AspNetCore.SignalR.Redis.Tests.Docker.Stop(ILogger logger) in /_/test/Microsoft.AspNetCore.SignalR.Redis.Tests/Docker.cs:line 74\r\n   at Microsoft.AspNetCore.SignalR.Redis.Tests.RedisServerFixture`1.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Redis.Tests/RedisServerFixture.cs:line 60\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.1.\r\n\r\nCC @muratg\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/SignalR/issues/2895","RelatedDescription":"Closed issue \"Test failure: CanSendAndReceiveUserMessagesWhenOneConnectionWithUserDisconnects\" (#2895)"},{"Id":"355752525","IsPullRequest":false,"CreatedAt":"2018-09-04T20:56:02","Actor":"aspnet-hello","Number":"2894","RawContent":null,"Title":"Test failure: CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser","State":"closed","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=542609&buildTypeId=Releases_21Public_UbuntuUniverse) occasionally with the following error:\r\n```\r\nMicrosoft.AspNetCore.SignalR.HubException : An unexpected error occurred invoking 'EchoUser' on the server. RedisConnectionException: No connection is available to service this operation: PUBLISH Microsoft.AspNetCore.SignalR.Redis.Tests.EchoHub:user:userA; SocketFailure on 127.0.0.1:6379/Subscription, origin: Error, input-buffer: 0, outstanding: 0, last-read: 0s ago, last-write: 0s ago, unanswered-write: 1994017s ago, keep-alive: 60s, pending: 0, state: Connecting, last-heartbeat: never, last-mbeat: -1s ago, global: 0s ago\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.InvokeCoreAsyncCore(String methodName, Type returnType, Object[] args, CancellationToken cancellationToken) in /_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:line 381\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.InvokeCoreAsync(String methodName, Type returnType, Object[] args, CancellationToken cancellationToken) in /_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:line 193\r\n   at System.Threading.Tasks.TaskExtensions.OrTimeout(Task task, TimeSpan timeout, String memberName, String filePath, Nullable`1 lineNumber) in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/TaskExtensions.cs:line 35\r\n   at Microsoft.AspNetCore.SignalR.Redis.Tests.RedisEndToEndTests.CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser(HttpTransportType transportType, String protocolName) in /_/test/Microsoft.AspNetCore.SignalR.Redis.Tests/RedisEndToEnd.cs:line 115\r\n--- End of stack trace from previous location where exception was thrown ---\r\n------- Stdout: -------\r\n| [2018-08-30T20:16:56] TestLifetime Information: Starting test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser-WebSockets-json\r\n| [2018-08-30T20:16:56] TestLifetime Information: Starting test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser_WebSockets_json\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.Http.Connections.Client.Internal.WebSocketsTransport Information: Starting transport. Transfer mode: Text. Url: 'ws://127.0.0.1:33597/echo?id=OduIO4jO2JHklOZWOuP1kQ'.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Started.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Using HubProtocol 'json v1'.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: HubConnection started.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.Http.Connections.Client.Internal.WebSocketsTransport Information: Starting transport. Transfer mode: Text. Url: 'ws://127.0.0.1:36607/echo?id=tr1aizv-iIj-6im05oX9YQ'.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Started.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Using HubProtocol 'json v1'.\r\n| [2018-08-30T20:16:56] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: HubConnection started.\r\n| [2018-08-30T20:16:56] TestLifetime Information: Finished test CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser_WebSockets_json in 0.0154677s\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.1.\r\n\r\nCC @muratg\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/SignalR/issues/2894","RelatedDescription":"Closed issue \"Test failure: CanSendAndReceiveUserMessagesFromMultipleConnectionsWithSameUser\" (#2894)"},{"Id":"356956686","IsPullRequest":true,"CreatedAt":"2018-09-04T20:05:49","Actor":"BrennanConroy","Number":"2910","RawContent":null,"Title":"Add NodeJS in-box support","State":"open","Body":"https://github.com/aspnet/SignalR/issues/2535\r\n\r\nAlso fixes https://github.com/aspnet/SignalR/issues/2893","Url":"https://github.com/aspnet/SignalR/pull/2910","RelatedDescription":"Open PR \"Add NodeJS in-box support\" (#2910)"},{"Id":"356938775","IsPullRequest":true,"CreatedAt":"2018-09-04T19:08:08","Actor":"mikaelm12","Number":"2908","RawContent":null,"Title":"Unify exceptions for unsupported message types","State":"open","Body":"\r\nIssue: https://github.com/aspnet/SignalR/issues/2822","Url":"https://github.com/aspnet/SignalR/pull/2908","RelatedDescription":"Open PR \"Unify exceptions for unsupported message types\" (#2908)"},{"Id":"355762602","IsPullRequest":false,"CreatedAt":"2018-09-04T17:26:08","Actor":"blahblehblah","Number":"2896","RawContent":null,"Title":"[ts-client] get AccessTokenFactory not being called on each request? ","State":"closed","Body":"I will need to rebuild the connection in order for it to get the capture the new token","Url":"https://github.com/aspnet/SignalR/issues/2896","RelatedDescription":"Closed issue \"[ts-client] get AccessTokenFactory not being called on each request? \" (#2896)"},{"Id":"356454080","IsPullRequest":false,"CreatedAt":"2018-09-03T10:47:55","Actor":"cgyqu","Number":"2905","RawContent":null,"Title":"HubOptions Bug Or Design?","State":"open","Body":"If I set the KeepAliveInterval  over 30 seconds,The connection will close after 30 seconds.\r\nBut I don't see this  in the document.[ASP.NET Core SignalR configuration](https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration?view=aspnetcore-2.1)\r\n\r\n**Code**\r\n```\r\n services.AddSignalR(options =>\r\n {\r\n     options.KeepAliveInterval = TimeSpan.FromSeconds(50);\r\n     options.EnableDetailedErrors = true;\r\n     options.HandshakeTimeout = TimeSpan.FromSeconds(50);\r\n })\r\n```\r\n**Cient Log**\r\n>Connection closed with error: Error: Server timeout elapsed without receiving a message from the server.\r\nConnection disconnected after 30s\r\n\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2905","RelatedDescription":"Open issue \"HubOptions Bug Or Design?\" (#2905)"},{"Id":"356276380","IsPullRequest":true,"CreatedAt":"2018-09-02T11:58:11","Actor":"benaadams","Number":"2904","RawContent":null,"Title":"Don't capture AsyncLocals onto Timers","State":"open","Body":"/cc @davidfowl ","Url":"https://github.com/aspnet/SignalR/pull/2904","RelatedDescription":"Open PR \"Don't capture AsyncLocals onto Timers\" (#2904)"},{"Id":"356137452","IsPullRequest":false,"CreatedAt":"2018-09-01T05:42:11","Actor":"ashikns","Number":"2901","RawContent":null,"Title":"Which version to use?","State":"closed","Body":"It's difficult to understand the differences between various versions of the packages here. On nuget the latest released is 1.1.0 preview, the latest commit is to branch called 2.2, the master branch is 3.0(?). Which of the branches can I use? Also please note that I am planning to use Azure hosted SignalR and I read it's only supported in 2.2. Can anyone provide info what's the difference between these versions?","Url":"https://github.com/aspnet/SignalR/issues/2901","RelatedDescription":"Closed issue \"Which version to use?\" (#2901)"},{"Id":"356174260","IsPullRequest":false,"CreatedAt":"2018-09-01T05:33:04","Actor":"davidfowl","Number":"2903","RawContent":null,"Title":"Javascript client marks state as connected before the handshake response has been received","State":"open","Body":"The .NET client waits for the handshake to complete before marking the connection as usable but this isn't the same for the javascript client.\r\n\r\nhttps://github.com/aspnet/SignalR/blob/f42f4c56e61c5891a851907cf4639575dbbc8df4/clients/ts/signalr/src/HubConnection.ts#L123\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2903","RelatedDescription":"Open issue \"Javascript client marks state as connected before the handshake response has been received\" (#2903)"},{"Id":"356147727","IsPullRequest":true,"CreatedAt":"2018-08-31T23:16:12","Actor":"mikaelm12","Number":"2902","RawContent":null,"Title":"Add Spotless google-java check to build","State":"open","Body":"This adds Spotless configured to use the google-java format. \r\nA couple issues with this. The line length limit messes with the file head and it's configured to use 2 space indenting instead of 4.\r\nPersonally I'd rather write a custom set of rules. If people would rather that than I'll close this PR in favor of that.\r\nIssue: https://github.com/aspnet/SignalR/issues/2676","Url":"https://github.com/aspnet/SignalR/pull/2902","RelatedDescription":"Open PR \"Add Spotless google-java check to build\" (#2902)"},{"Id":"356068506","IsPullRequest":false,"CreatedAt":"2018-08-31T17:42:38","Actor":"anurse","Number":"2900","RawContent":null,"Title":"Consider sharing a Redis connection between all hubs","State":"open","Body":"Currently we create the Redis connection in `RedisHubLifetimeManager<THub>` which means there is a connection per Hub. This is likely not necessary, and we can probably look at sharing the connection between all Hubs. We should consider sharing the connection.","Url":"https://github.com/aspnet/SignalR/issues/2900","RelatedDescription":"Open issue \"Consider sharing a Redis connection between all hubs\" (#2900)"},{"Id":"355859639","IsPullRequest":false,"CreatedAt":"2018-08-31T07:39:24","Actor":"freever","Number":"2899","RawContent":null,"Title":"Xamarin.Android regression?","State":"closed","Body":"Has there been a regression on #1886 ? iOS is still OK but my Xamarin.Android app has suddenly started throwing out the same old errors:\r\n\r\n> Can not resolve reference: `System.Threading.Tasks.Extensions`, referenced by `System.IO.Pipelines`. Please add a NuGet package or assembly reference for `System.Threading.Tasks.Extensions`, or remove the reference to `System.IO.Pipelines`\r\n\r\n> Can not resolve reference: `System.Threading.Tasks.Extensions`, referenced by `Microsoft.AspNetCore.SignalR.Client.Core`. Please add a NuGet package or assembly reference for `System.Threading.Tasks.Extensions`, or remove the reference to `Microsoft.AspNetCore.SignalR.Client.Core`.\r\n\r\n> Can not resolve reference: `System.Threading.Tasks.Extensions`, referenced by `System.Threading.Channels`. Please add a NuGet package or assembly reference for `System.Threading.Tasks.Extensions`, or remove the reference to `System.Threading.Channels`.\t\r\n\r\n> Can not resolve reference: `System.Threading.Tasks.Extensions`, referenced by `Microsoft.AspNetCore.Http.Connections.Client`. Please add a NuGet package or assembly reference for `System.Threading.Tasks.Extensions`, or remove the reference to `Microsoft.AspNetCore.Http.Connections.Client`.\t\t\r\n\r\nI am on he latest versions of everything:\r\n\r\n- SignalR.Client 1.0.3\r\n- VS 15.9.0 Preview 1.0 (Xamarin.Android 9.1.0.12)\r\n- VS Mac 7.8 Preview (Xamarin.Android 9.1.0.12)\r\n\r\nMy build server is running a few versions behind and does not have the same build error:\r\n- VS Mac 7.6 (Xamarin.Android 9.0.0)\r\n\r\nLocally I am running the latest betas so I might be the canary in the coal mine?","Url":"https://github.com/aspnet/SignalR/issues/2899","RelatedDescription":"Closed issue \"Xamarin.Android regression?\" (#2899)"},{"Id":"355785471","IsPullRequest":false,"CreatedAt":"2018-08-30T23:08:14","Actor":"fastrocket","Number":"2898","RawContent":null,"Title":"How to create Hub and new route at run-time using Roslyn scripting?","State":"open","Body":"In my ASP.NET Core 2.1 application, users can create new classes and types at run-time using Roslyn scripting. With that in mind, I'm trying to create a new Hub with a method that can handle this new type (input and output). I can't use generics since they are a compile-time construct. \r\n\r\nI believe the \"new\" hub will also need to be instantiated via Roslyn scripting. The reason for this is I want a strongly typed Hub and Client for performance reasons. (The strongly-typed C# client can be instantiated via Roslyn.)\r\n\r\nHowever, hubs and their routes need to be declared in Startup.cs which is essentially compile-time. \r\n\r\nOne other consideration is using a hub that uses the \"dynamic\" type. But this is slower than using a strongly-typed type, and could require boxing/unboxing of value types.\r\n\r\nAny pointers would be appreciated since I have searched the web and docs to no avail. Thanks!","Url":"https://github.com/aspnet/SignalR/issues/2898","RelatedDescription":"Open issue \"How to create Hub and new route at run-time using Roslyn scripting?\" (#2898)"},{"Id":"355773341","IsPullRequest":true,"CreatedAt":"2018-08-30T22:15:12","Actor":"dotnet-maestro-bot","Number":"2897","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"open","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @BrennanConroy\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/SignalR.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/2897","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2897)"},{"Id":"355447381","IsPullRequest":false,"CreatedAt":"2018-08-30T06:49:53","Actor":"Kimmen","Number":"2893","RawContent":null,"Title":"\"can't find variable: ErrorEvent\" when running in React-Native","State":"open","Body":"We are using Signalr in our React-Native app for pushing data through websockets. Sometimes we get a websocket error (perhaps if you run start twice, haven't looked at it). But when that happens we get a crash stating \"**can't find variable: ErrorEvent**\", I've attached a screenshot (See below)\r\n\r\nThe code that emits this error can be found in WebSocketTransport.ts on line 60: https://github.com/aspnet/SignalR/blob/f91ba389077b43fcab85a9a31e5678229093295a/clients/ts/signalr/src/WebSocketTransport.ts#L60\r\n\r\nThis might correlate to [JavaScriptCore runtime](https://trac.webkit.org/wiki/JavaScriptCore) that is used in React-Native. Maybe effects Safari as well?\r\n\r\n* Versions of Server-Side NuGet Packages: 1.0.0-preview1-10015\r\n* Versions of Client-Side NuGet/NPM Packages: 1.1.0-preview1-35029\r\n* Are you using the C# client or the JavaScript client: Javascript\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.): Azure Web App\r\n* The Operating System on the Server (Windows/Linux/macOS): Windows\r\n* The Operating System on the Client (Windows/Linux/macOS): Android\r\n* The Browser on the client, if using the JavaScript client (IE/Chrome/Edge/Firefox/etc.): React-Native / JavaScriptCore runtime according to [React-Natives documentation](https://facebook.github.io/react-native/docs/javascript-environment.html).\r\n\r\n\r\n\r\n![error-event](https://user-images.githubusercontent.com/1217354/44834466-94863b00-ac31-11e8-8518-6c7effd117cd.png)","Url":"https://github.com/aspnet/SignalR/issues/2893","RelatedDescription":"Open issue \"\"can't find variable: ErrorEvent\" when running in React-Native\" (#2893)"},{"Id":"355319920","IsPullRequest":true,"CreatedAt":"2018-08-29T21:27:24","Actor":"dotnet-maestro-bot","Number":"2892","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @anurse\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/SignalR.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/2892","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2892)"},{"Id":"355308716","IsPullRequest":true,"CreatedAt":"2018-08-29T21:27:23","Actor":"anurse","Number":"2891","RawContent":null,"Title":"Port build fixes from release/2.2","State":"closed","Body":"","Url":"https://github.com/aspnet/SignalR/pull/2891","RelatedDescription":"Closed or merged PR \"Port build fixes from release/2.2\" (#2891)"},{"Id":"355301973","IsPullRequest":true,"CreatedAt":"2018-08-29T19:55:58","Actor":"anurse","Number":"2890","RawContent":null,"Title":"fix chrome headless lag on Win7","State":"closed","Body":"Apparently, adding these switches makes Chrome Headless not super slow... I have no idea why but [the internet](https://github.com/Codeception/CodeceptJS/issues/561#issuecomment-373666779) said so.\r\n\r\nFixes https://github.com/aspnet/Coherence-Signed/issues/916","Url":"https://github.com/aspnet/SignalR/pull/2890","RelatedDescription":"Closed or merged PR \"fix chrome headless lag on Win7\" (#2890)"},{"Id":"355290258","IsPullRequest":true,"CreatedAt":"2018-08-29T19:55:20","Actor":"anurse","Number":"2889","RawContent":null,"Title":"add --no-restore when building functional test proj","State":"closed","Body":"Fixes https://github.com/aspnet/Coherence-Signed/issues/917\r\nFixes https://github.com/aspnet/Coherence-Signed/issues/918","Url":"https://github.com/aspnet/SignalR/pull/2889","RelatedDescription":"Closed or merged PR \"add --no-restore when building functional test proj\" (#2889)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"356516824","IsPullRequest":false,"CreatedAt":"2018-09-04T20:07:19","Actor":"stardocs-services","Number":"1953","RawContent":null,"Title":"Adding roles with same names for different applications","State":"closed","Body":"I have just extended my IdentityRole like this:\r\n\r\n```\r\npublic class AspApplicationRoles : IdentityRole\r\n{\r\n    public AspApplicationRoles() : base() { }\r\n    public AspApplicationRoles(String Name) : base(Name) { }\r\n    [Required]\r\n    public String ApplicationId { get; set; }\r\n    public AspNetApplications Application { get; set; }\r\n}\r\n```\r\nThen, in order to add the same role names but have a different ApplicationId, I created a custom rolevalidator like this:\r\n\r\n```\r\npublic class ApplicationRoleValidator<TRole> : RoleValidator<TRole> where TRole : AspApplicationRoles\r\n    {\r\n        private RoleManager<TRole, string> Manager { get; set; }\r\n        private AspApplicationRoles data = new AspApplicationRoles();\r\n        private ApplicationDbContext dbContext = new ApplicationDbContext();\r\n\r\n        public ApplicationRoleValidator(RoleManager<TRole, string> manager) : base(manager)\r\n        {\r\n            Manager = manager;\r\n        }\r\n\r\n        public override async Task<IdentityResult> ValidateAsync(TRole Input)\r\n        {\r\n            data = dbContext.AspApplicationRoles.Where(ar => ar.ApplicationId == Input.ApplicationId && ar.Name == Input.Name).SingleOrDefault();\r\n            if (data == null)\r\n            {\r\n                return IdentityResult.Success;\r\n            }\r\n            else\r\n            {\r\n                return IdentityResult.Failed(\"Role already exists\");\r\n            }\r\n        }\r\n    }\r\n```\r\nI then had to change my applicationRoleManagers like this:\r\n\r\n```\r\npublic class ApplicationRoleManager : RoleManager<AspApplicationRoles>\r\n{\r\n    public ApplicationRoleManager(IRoleStore<AspApplicationRoles, string> roleStore)\r\n        : base(roleStore)\r\n    {\r\n        RoleValidator = new ApplicationRoleValidator<AspApplicationRoles>(this);\r\n    }\r\n    public static ApplicationRoleManager Create(IdentityFactoryOptions<ApplicationRoleManager> options, IOwinContext context)\r\n    {\r\n        var manager = new ApplicationRoleManager(new ApplicationRoleStore(context.Get<ApplicationDbContext>()));\r\n        return manager;\r\n    }\r\n}\r\n```\r\nI have also removed the unique key on the database tables like this:\r\n\r\n```\r\nprotected override void OnModelCreating(DbModelBuilder modelBuilder)\r\n    {\r\n        base.OnModelCreating(modelBuilder);\r\n\r\n        var role = modelBuilder.Entity<IdentityRole>()\r\n            .ToTable(\"AspNetRoles\");\r\n        role.Property(r => r.Name)\r\n            .IsRequired()\r\n            .HasMaxLength(256)\r\n            .HasColumnAnnotation(\"Index\", new IndexAnnotation(\r\n                new IndexAttribute(\"RoleNameIndex\")\r\n                { IsUnique = false }));\r\n    }\r\n```\r\n\r\nHowever, I still can't have the same role names and I still get EntityValidationError \"Role Manager already exists. I have tried to search for a solution but I can't seem to find it or see it.","Url":"https://github.com/aspnet/Identity/issues/1953","RelatedDescription":"Closed issue \"Adding roles with same names for different applications\" (#1953)"},{"Id":"356845718","IsPullRequest":false,"CreatedAt":"2018-09-04T15:06:56","Actor":"sintetico82","Number":"1955","RawContent":null,"Title":"AS.NET Core 2.1 - Password forgot: Invalid Token","State":"closed","Body":"Hello,\r\nI have the **invalid code** on the forgot password procedure. In the razor pages scaffolding template i have:\r\n\r\nthe `ForgotPassword` razor page\r\n```\r\n                // For more information on how to enable account confirmation and password reset please \r\n                // visit https://go.microsoft.com/fwlink/?LinkID=532713\r\n                var code = await _userManager.GeneratePasswordResetTokenAsync(user);\r\n                var callbackUrl = Url.Page(\r\n                    \"/Account/ResetPassword\",\r\n                    pageHandler: null,\r\n                    values: new { code },\r\n                    protocol: Request.Scheme);\r\n                await _emailSender.SendEmailAsync(\r\n                    Input.Email,\r\n                    \"Reset Password\",\r\n                    $\"PEr eseguire il reset della password <a href='{ HtmlEncoder.Default.Encode(callbackUrl)}'>seguire questo link</a>.\");\r\n\r\n                return RedirectToPage(\"./ForgotPasswordConfirmation\");\r\n```\r\n\r\nIt encode the token but when the token arrive on the `ResetPassword` razor page it dosent decode as well:\r\n\r\n```\r\n public IActionResult OnGet(string code = null)\r\n        {\r\n            if (code == null)\r\n            {\r\n                return BadRequest(\"A code must be supplied for password reset.\");\r\n            }\r\n            else\r\n            {\r\n                Input = new InputModel\r\n                {\r\n                    Code = code\r\n                };\r\n                return Page();\r\n            }\r\n        }\r\n```\r\n\r\nSo they are different.\r\n","Url":"https://github.com/aspnet/Identity/issues/1955","RelatedDescription":"Closed issue \"AS.NET Core 2.1 - Password forgot: Invalid Token\" (#1955)"},{"Id":"356520791","IsPullRequest":false,"CreatedAt":"2018-09-03T14:09:24","Actor":"IlyaSolovyov","Number":"1954","RawContent":null,"Title":"Manage/_Layout.cshtml doesn't load without \"AddDefaultUI\"","State":"open","Body":"### Title\r\nReplacing \".AddDefaultIdentity\" with \".AddIdentity\" without using \".AddDefaultUI\" command means that even after scaffolding all pages Manage section doesn't load its layout file.\r\n\r\n### Minimal repro steps\r\n1. Create new application with Identity\r\n2. Disable default UI.\r\n3. Scaffold all the pages.\r\n4. Sign in and navigate to /Identity/Manage.\r\n\r\n### Expected result\r\n![image](https://user-images.githubusercontent.com/23297756/44991006-8458bd80-af9b-11e8-9c1e-e383f8892a85.png)\r\n\r\n### Actual result\r\n![image](https://user-images.githubusercontent.com/23297756/44991056-a0f4f580-af9b-11e8-969e-d9b1f73baa19.png)\r\n\r\n\r\n### Further technical details\r\nScaffolded file \"Identity/Pages/Account/Manage/_Layout.csthml\" has a \"Layout = \"/Areas/Identity/Pages/_Layout.cshtml\";\" line that points to a non-existing file. There are no _Layout pages in Identity area other than the one in Manage section. Pointing it to global one doesn't change anything. Removing _Layout file doesn't help either","Url":"https://github.com/aspnet/Identity/issues/1954","RelatedDescription":"Open issue \"Manage/_Layout.cshtml doesn't load without \"AddDefaultUI\"\" (#1954)"},{"Id":"356125543","IsPullRequest":false,"CreatedAt":"2018-08-31T21:14:36","Actor":"layinka","Number":"1952","RawContent":null,"Title":"Login not working on Firefox private mode","State":"open","Body":"Hi,\r\nI am experiencing something  very weird, I am currently using  the asp.net core identity 2.1.1. I noticed that the login works well on chrome(both normal and incognito mode) and works well on firefox, but when i tried it in Firefox private mode, the login form redirected to the homepage without login me in\r\n\r\nAnyone else experience this?\r\nI am using Firfox 60.0.1","Url":"https://github.com/aspnet/Identity/issues/1952","RelatedDescription":"Open issue \"Login not working on Firefox private mode\" (#1952)"},{"Id":"356052944","IsPullRequest":false,"CreatedAt":"2018-08-31T16:48:20","Actor":"natemcmaster","Number":"1951","RawContent":null,"Title":"Compiler error CS0433 caused by duplicate types: IdentityServiceCollectionExtensions","State":"open","Body":"We have two types in the different assemblies with the same name. This can lead to unresolvable compiler errors when referencing Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions\r\n\r\n> error CS0433: The type 'IdentityServiceCollectionExtensions' exists in both 'Microsoft.AspNetCore.Identity, Version=2.1.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' and 'Microsoft.Extensions.Identity.Core, Version=2.1.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n\r\nhttps://github.com/aspnet/Identity/blob/release/2.1/src/Identity/IdentityServiceCollectionExtensions.cs\r\nhttps://github.com/aspnet/Identity/blob/release/2.1/src/Core/IdentityServiceCollectionExtensions.cs\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/1951","RelatedDescription":"Open issue \"Compiler error CS0433 caused by duplicate types: IdentityServiceCollectionExtensions\" (#1951)"},{"Id":"355782929","IsPullRequest":true,"CreatedAt":"2018-08-31T02:03:30","Actor":"dotnet-maestro-bot","Number":"1950","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Identity.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1950","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1950)"},{"Id":"354353310","IsPullRequest":false,"CreatedAt":"2018-08-30T22:26:44","Actor":"saurabhlogward","Number":"1943","RawContent":null,"Title":"Does asp net core identity supports the hierarchy based resource access?","State":"closed","Body":"I am planning To use the asp net identity as a web api for my use case where I have to create  a company based hierarchy and based on which I need to provide the resource access.\r\nI can have many such hierarchy for each company accounts. All I need to achieve  through asp net core identity is, identifying the logged in user, to which company it belongs to and what can he/she have access to with in the hierarchy.\r\n\r\nIs this achievable using asp net core identity? ","Url":"https://github.com/aspnet/Identity/issues/1943","RelatedDescription":"Closed issue \"Does asp net core identity supports the hierarchy based resource access?\" (#1943)"},{"Id":"355522577","IsPullRequest":false,"CreatedAt":"2018-08-30T22:23:56","Actor":"A51UK","Number":"1949","RawContent":null,"Title":"Can ASP.NET Identity 2.1 be made to use MVC UI not Web Pages?","State":"closed","Body":"I just try out the ASP.NET Identity 2.1, and was think of upgrade a project from Identity 2.0 to Identity 2.1 but found that it have been turn to the Web Pages Modal not the MVC one, is there a way to pick which ASP.NET Identity 2.1 UI modal to use (e.g. MVC not Web Pages)?  If not it would be a good think to added in the next update. ","Url":"https://github.com/aspnet/Identity/issues/1949","RelatedDescription":"Closed issue \"Can ASP.NET Identity 2.1 be made to use MVC UI not Web Pages?\" (#1949)"},{"Id":"355483965","IsPullRequest":false,"CreatedAt":"2018-08-30T08:44:19","Actor":"GuidoNeele","Number":"1948","RawContent":null,"Title":"User signed out after requesting /Identity/Account/Manage/TwoFactorAuthentication","State":"open","Body":"ASP.NET Core 2.1.1\r\n\r\nI've configured an asp.net core mvc project with Identity. I'm using the default UI but have scaffolded it because had to translate it to Dutch. When I navigate the Manage pages everything works well until /Identity/Account/Manage/TwoFactorAuthentication is requested. The page is shown but the user is signed out. After navigating away from the page the user is redirected to the login page. The issue is triggered by \r\nhttps://github.com/aspnet/Identity/blob/fcc02103aa10dcdd8759e0463cac2717114f3c1e/src/UI/Areas/Identity/Pages/V3/Account/Manage/TwoFactorAuthentication.cshtml.cs#L58\r\n\r\n```\r\nStartup.cs\r\n...\r\nservices.AddDbContext<ApplicationDbContext>(options =>\r\n        options\r\n          .UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\nservices\r\n    .AddIdentity<ApplicationUser, IdentityRole>(options =>\r\n    {\r\n        options.Password.RequiredLength = 10;\r\n        options.Password.RequireDigit = false;\r\n        options.Password.RequiredUniqueChars = 0;\r\n        options.Password.RequireLowercase = false;\r\n        options.Password.RequireNonAlphanumeric = false;\r\n        options.Password.RequireUppercase = false;\r\n    })\r\n    .AddDefaultUI()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n\r\nservices.ConfigureApplicationCookie(options =>\r\n{\r\n    options.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n    options.SlidingExpiration = true;\r\n});\r\n\r\nservices.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme);\r\n...\r\n```\r\n\r\n```\r\nDebug output\r\n...\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request starting HTTP/1.1 GET http://localhost:44308/Identity/Account/Manage/TwoFactorAuthentication  \r\nMicrosoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker:Information: Route matched with {page = \"/Account/Manage/TwoFactorAuthentication\", area = \"Identity\", action = \"\", controller = \"\"}. Executing action /Account/Manage/TwoFactorAuthentication\r\nMicrosoft.AspNetCore.Authorization.DefaultAuthorizationService:Information: Authorization was successful.\r\nMicrosoft.AspNetCore.Authorization.DefaultAuthorizationService:Information: Authorization was successful.\r\nMicrosoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker:Information: Executing handler method OnGet with arguments ((null)) - ModelState is Valid\r\nMicrosoft.EntityFrameworkCore.Infrastructure:Information: Entity Framework Core 2.1.1-rtm-30846 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None\r\nMicrosoft.EntityFrameworkCore.Database.Command:Information: Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[FirstName], [e].[FullName], [e].[InviteSecret], [e].[IsInvited], [e].[LastLogin], [e].[LastName], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]\r\nFROM [AspNetUsers] AS [e]\r\nWHERE [e].[Id] = @__get_Item_0\r\nMicrosoft.EntityFrameworkCore.Database.Command:Information: Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (Size = 450), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]\r\nFROM [AspNetUserTokens] AS [e]\r\nWHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)\r\nMicrosoft.EntityFrameworkCore.Database.Command:Information: Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[FirstName], [e].[FullName], [e].[InviteSecret], [e].[IsInvited], [e].[LastLogin], [e].[LastName], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]\r\nFROM [AspNetUsers] AS [e]\r\nWHERE [e].[Id] = @__get_Item_0\r\n**Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler:Information: AuthenticationScheme: Identity.Application signed out.\r\nMicrosoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler:Information: AuthenticationScheme: Identity.External signed out.\r\nMicrosoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler:Information: AuthenticationScheme: Identity.TwoFactorUserId signed out.\r\nMicrosoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler:Information: Identity.TwoFactorRememberMe was not authenticated. Failure message: No principal.**\r\nMicrosoft.EntityFrameworkCore.Database.Command:Information: Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (Size = 450), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]\r\nFROM [AspNetUserTokens] AS [e]\r\nWHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)\r\nMicrosoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker:Information: Executed action /Account/Manage/TwoFactorAuthentication in 17174.327ms\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 17189.4446ms 200 text/html; charset=utf-8\r\n...\r\n```\r\n\r\n```\r\n.csproj\r\n...\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Proxies\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.1.1\" />\r\n</ItemGroup>\r\n...\r\n```\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/1948","RelatedDescription":"Open issue \"User signed out after requesting /Identity/Account/Manage/TwoFactorAuthentication\" (#1948)"},{"Id":"355353535","IsPullRequest":true,"CreatedAt":"2018-08-29T22:39:44","Actor":"dotnet-maestro-bot","Number":"1947","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @HaoK\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Identity.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1947","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1947)"},{"Id":"353923928","IsPullRequest":true,"CreatedAt":"2018-08-29T21:41:52","Actor":"HaoK","Number":"1941","RawContent":null,"Title":"Allow cookie validation when stores don't support security stamp","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/1880\r\n\r\n@ajcvickers @blowdart ","Url":"https://github.com/aspnet/Identity/pull/1941","RelatedDescription":"Closed or merged PR \"Allow cookie validation when stores don't support security stamp\" (#1941)"},{"Id":"354949958","IsPullRequest":false,"CreatedAt":"2018-08-29T00:20:58","Actor":"brunobalmeida","Number":"1946","RawContent":null,"Title":"ASP.NET core 2.0 Authentication does persist more than 15 Seconds","State":"open","Body":"I have seen the topic: https://github.com/aspnet/Identity/issues/1389, which seems to be the same issue. But in my case something else (weird) is happening. I have set the authentication and the cookies configuration. Although, the user is logged out almost instantaneously. The weird part refers to the cookies and the expiration of them. When I look at the developer tools on Chrome my cookies are like this: \r\n\r\n![image](https://user-images.githubusercontent.com/26010402/44757928-a9fb4800-aaff-11e8-86f2-fd81f240edd4.png)\r\n\r\nDoes anybody has any ideia on how to set those cookies to the correct expiration date? \r\n\r\nMy startup looks like this:\r\n\r\n`services.AddIdentity<ApplicationUser, IdentityRole>(config =>\r\n            {\r\n                config.SignIn.RequireConfirmedEmail = false;\r\n            })\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n\r\n            services.Configure<SecurityStampValidatorOptions>(options => options.ValidationInterval = TimeSpan.FromMinutes(30));\r\n\r\n\r\n            services.AddAuthentication()\r\n                .Services.ConfigureApplicationCookie(o =>\r\n            {\r\n\r\n                o.LoginPath = \"/account/login\";\r\n                o.LogoutPath = \"/account/logout\";\r\n                o.SlidingExpiration = true;\r\n                o.Cookie.Expiration = TimeSpan.FromHours(1);\r\n                o.Cookie = new CookieBuilder\r\n                {\r\n                    HttpOnly = true,\r\n                    Name = \".BrAssociation.Security.Cookie\",\r\n                    Path = \"/\",\r\n                    SameSite = SameSiteMode.Lax,\r\n                    SecurePolicy = CookieSecurePolicy.SameAsRequest\r\n                };\r\n\r\n\r\n            });`\r\n","Url":"https://github.com/aspnet/Identity/issues/1946","RelatedDescription":"Open issue \"ASP.NET core 2.0 Authentication does persist more than 15 Seconds\" (#1946)"},{"Id":"354480148","IsPullRequest":true,"CreatedAt":"2018-08-27T22:15:59","Actor":"dotnet-maestro-bot","Number":"1945","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @HaoK\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Identity.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1945","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1945)"},{"Id":"351721357","IsPullRequest":false,"CreatedAt":"2018-08-27T20:40:22","Actor":"ryanbrandenburg","Number":"1926","RawContent":null,"Title":"Test failure: CannotLogInWithoutRequiredEmailConfirmation_WithGlobalAuthorizeFilter","State":"closed","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=533918&buildTypeId=XPlat_HighSierraOsxUniverse) occasionally with the following error:\r\n```\r\nSystem.OutOfMemoryException : Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.Threading.Thread.StartInternal()\r\n   at System.Threading.Thread.Start(Object parameter)\r\n   at System.IO.FileSystemWatcher.RunningInstance.Start()\r\n   at System.IO.FileSystemWatcher.StartRaisingEvents()\r\n   at System.IO.FileSystemWatcher.StartRaisingEventsIfNotDisposed()\r\n   at System.IO.FileSystemWatcher.set_EnableRaisingEvents(Boolean value)\r\n   at Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.TryEnableFileSystemWatcher()\r\n   at Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(String filter)\r\n   at Microsoft.AspNetCore.Mvc.TagHelpers.Internal.FileVersionProvider.AddFileVersionToPath(String path)\r\n   at Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Process(TagHelperContext context, TagHelperOutput output)\r\n   at Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(TagHelperContext context, TagHelperOutput output)\r\n   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner.RunAsync(TagHelperExecutionContext executionContext)\r\n   at Identity.DefaultUI.WebSite.Pages.Pages__Layout.<ExecuteAsync>b__46_14()\r\n   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()\r\n   at Identity.DefaultUI.WebSite.Pages.Pages__Layout.<ExecuteAsync>b__46_1()\r\n   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()\r\n   at Identity.DefaultUI.WebSite.Pages.Pages__Layout.ExecuteAsync()\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderLayoutAsync(ViewContext context, ViewBufferTextWriter bodyWriter)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.TestHost.HttpContextBuilder.<>c__DisplayClass10_0.<<SendAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.TestHost.ClientHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Mvc.Testing.Handlers.CookieContainerHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Microsoft.AspNetCore.Identity.FunctionalTests.Index.CreateAsync(HttpClient client, DefaultUIContext context)\r\n   at Microsoft.AspNetCore.Identity.FunctionalTests.UserStories.RegisterNewUserAsync(HttpClient client, String userName, String password)\r\n   at Microsoft.AspNetCore.Identity.FunctionalTests.LoginTests`2.CannotLogInWithoutRequiredEmailConfirmation_WithGlobalAuthorizeFilter()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on master.\r\n\r\nCC @Eilon (because the bot doesn't know who else to pick)\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Identity/issues/1926","RelatedDescription":"Closed issue \"Test failure: CannotLogInWithoutRequiredEmailConfirmation_WithGlobalAuthorizeFilter\" (#1926)"},{"Id":"354441805","IsPullRequest":true,"CreatedAt":"2018-08-27T20:39:57","Actor":"HaoK","Number":"1944","RawContent":null,"Title":"Disable parallelization","State":"closed","Body":"For https://github.com/aspnet/Identity/issues/1926\r\n\r\nTest running time go from 17s -> 29s locally\r\n\r\n@Eilon @ajcvickers ","Url":"https://github.com/aspnet/Identity/pull/1944","RelatedDescription":"Closed or merged PR \"Disable parallelization\" (#1944)"},{"Id":"354228998","IsPullRequest":false,"CreatedAt":"2018-08-27T08:33:45","Actor":"vankampenp","Number":"1942","RawContent":null,"Title":"Race condition in userManager.CreateAsync","State":"open","Body":"In a site where I create users on the fly I have the following code:\r\n \r\n```\r\nvar user = await userManager.FindByNameAsync(userName);\r\nif (user == null) //does not exist create it\r\n{\r\n     user = new IdentityUser\r\n    {\r\n           UserName = userName\r\n    ..\r\n    }                     \r\n    IdentityResult idresult = await userManager.CreateAsync(user, password);\r\n    if (!idresult.Succeeded)\r\n    {\r\n           if (idresult.Errors.FirstOrDefault(e => e.Code == \"DuplicateUserName\") == null)\r\n           {           \r\n                    ...\r\n            }\r\n            //duplicate user from a different thread\r\n             user = await userManager.FindByNameAsync(userName);\r\n        }\r\n...\r\n```\r\n\r\nIn a race condition, where a user tried to create the user the same time on a mobile and a PC (with different IP addresses), I got an uncatched error on CreateAsync\r\n\r\nMicrosoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details. ---> System.Data.SqlClient.SqlException: Cannot insert duplicate key row in object 'dbo.AspNetUsers' with unique index 'UserNameIndex'. The duplicate key value is (...).\r\n  \r\nI don't understand why the store did not catch the errror, as it can return a DuplicateUserName error, but that was not returned here.","Url":"https://github.com/aspnet/Identity/issues/1942","RelatedDescription":"Open issue \"Race condition in userManager.CreateAsync\" (#1942)"},{"Id":"352767009","IsPullRequest":true,"CreatedAt":"2018-08-25T00:21:28","Actor":"dotnet-maestro-bot","Number":"1933","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Identity.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1933","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1933)"},{"Id":"353574561","IsPullRequest":true,"CreatedAt":"2018-08-23T23:47:50","Actor":"javiercn","Number":"1940","RawContent":null,"Title":"Sync Identity UI default layout with the templates layout","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/1940","RelatedDescription":"Closed or merged PR \"Sync Identity UI default layout with the templates layout\" (#1940)"},{"Id":"352941688","IsPullRequest":false,"CreatedAt":"2018-08-23T18:44:42","Actor":"BenjaminCharlton","Number":"1934","RawContent":null,"Title":"Shouldn't we have a Microsoft.AspNetCore.Identity.UserManager<TUser, TKey> below the UserManager<TUser>?","State":"closed","Body":"In `Microsoft.AspNetCore.Identity` there are two imprtant classes: `UserManager<TUser>` and `RoleManager<TRole>`\r\n\r\nHowever, the go-to User and Role for a lot of people are `Microsoft.AspNetCore.Identity.IdentityUser<TKey>` and `Microsoft.AspNetCore.Identity.IdentityRole<TKey>`.\r\n\r\nIf in their implementation `TKey` is `int` (or anything other than string) then various functions such as `FindByIdAsync(string userId)` won't build.\r\n\r\nI think that `Microsoft.AspNetCore.Identity.UserManager<TUser>` should inherit from a new generic base class `Microsoft.AspNetCore.Identity.UserManager<TUser, TKey>` and `Microsoft.AspNetCore.Identity.RoleManager<TRole>` should inherit from a new generic base class `Microsoft.AspNetCore.Identity.RoleManager<TRole, TKey>`\r\n\r\nThis would not be a breaking change for anyone using the existing implementation with a string Id but it would help those of us using other primary key types.\r\n\r\nWhat do you think?\r\nIf you like the idea I think I could contribute the necessary changes.","Url":"https://github.com/aspnet/Identity/issues/1934","RelatedDescription":"Closed issue \"Shouldn't we have a Microsoft.AspNetCore.Identity.UserManager<TUser, TKey> below the UserManager<TUser>?\" (#1934)"},{"Id":"353139188","IsPullRequest":false,"CreatedAt":"2018-08-23T18:40:11","Actor":"mvonck","Number":"1936","RawContent":null,"Title":"'IdentityRole.cs' does not set 'NormalizedName' when using constructor 'Role(string roleName)'","State":"closed","Body":"In IdentityRole.cs the following code:\r\n\r\n````\r\n        /// <summary>\r\n        /// Initializes a new instance of <see cref=\"IdentityRole\"/>.\r\n        /// </summary>\r\n        /// <param name=\"roleName\">The role name.</param>\r\n        /// <remarks>\r\n        /// The Id property is initialized to form a new GUID string value.\r\n        /// </remarks>\r\n        public IdentityRole(string roleName) : this()\r\n        {\r\n            Name = roleName;\r\n        }\r\n```\r\n\r\nshould be:\r\n\r\n``` \r\n        /// <summary>\r\n        /// Initializes a new instance of <see cref=\"IdentityRole\"/>.\r\n        /// </summary>\r\n        /// <param name=\"roleName\">The role name.</param>\r\n        /// <remarks>\r\n        /// The Id property is initialized to form a new GUID string value.\r\n        /// </remarks>\r\n        public IdentityRole(string roleName) : this()\r\n        {\r\n            Name = roleName;\r\n            NormalizedName = roleName.ToUpperInvariant();\r\n        }\r\n```","Url":"https://github.com/aspnet/Identity/issues/1936","RelatedDescription":"Closed issue \"'IdentityRole.cs' does not set 'NormalizedName' when using constructor 'Role(string roleName)'\" (#1936)"},{"Id":"353499842","IsPullRequest":false,"CreatedAt":"2018-08-23T18:32:29","Actor":"javiercn","Number":"1939","RawContent":null,"Title":"Identity tests failing on the VSTS-CI","State":"closed","Body":"@HaoK A bunch of identity tests are failing in the VSTS-CI for a while, could you take a look at them?\r\nhttps://dotnet.visualstudio.com/public/_build/results?buildId=15079&view=ms.vss-test-web.test-result-details","Url":"https://github.com/aspnet/Identity/issues/1939","RelatedDescription":"Closed issue \"Identity tests failing on the VSTS-CI\" (#1939)"},{"Id":"352948321","IsPullRequest":false,"CreatedAt":"2018-08-23T18:29:00","Actor":"alexsandro-xpt","Number":"1935","RawContent":null,"Title":"Can I use External Logins with JWT approach but without Identity stack?","State":"closed","Body":"I'm would like to setup my JWT ASPNet Core with Facebook External Login but a don't like to install all Identity stack dependence at my project.\r\n\r\nCan I do that? How?","Url":"https://github.com/aspnet/Identity/issues/1935","RelatedDescription":"Closed issue \"Can I use External Logins with JWT approach but without Identity stack?\" (#1935)"},{"Id":"353363519","IsPullRequest":false,"CreatedAt":"2018-08-23T12:47:08","Actor":"thomaslevesque","Number":"1938","RawContent":null,"Title":"MVC1000 warning due to the use of IHtmlHelper.Partial","State":"closed","Body":"Warning MVC1000 is triggered in the following scaffolded pages:\r\n- Identity/Account/ExternalLogins.cshtml\r\n- Identity/Account/Index.cshtml\r\n\r\n> Use of IHtmlHelper.Partial may result in application deadlocks. Consider using <partial> Tag Helper or IHtmlHelper.PartialAsync.\r\n\r\n(there might be other instances of this, but I didn't scaffold all pages)","Url":"https://github.com/aspnet/Identity/issues/1938","RelatedDescription":"Closed issue \"MVC1000 warning due to the use of IHtmlHelper.Partial\" (#1938)"},{"Id":"353142201","IsPullRequest":false,"CreatedAt":"2018-08-22T22:00:59","Actor":"aspnet-hello","Number":"1937","RawContent":null,"Title":"Test failure: QueryingIdentityEndpointsReturnsNotFoundWhenIdentityIsNotPresent","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=536973&buildTypeId=Releases_22xPublic_Win2012) occasionally with the following error:\r\n```\r\nSystem.InvalidOperationException : Can't find'C:\\b\\w\\33bdfc1cae7b2a38\\modules\\Identity\\test\\Identity.FunctionalTests\\bin\\Release\\netcoreapp2.2\\Identity.DefaultUI.WebSite.deps.json'. This file is required for functional tests to run properly. There should be a copy of the file on your source project bin folder. If that is not the case, make sure that the property PreserveCompilationContext is set to true on your project file. E.g '<PreserveCompilationContext>true</PreserveCompilationContext>'. For functional tests to work they need to either run from the build output folder or the Identity.DefaultUI.WebSite.deps.json file from your application's output directory must be copied to the folder where the tests are running on. A common cause for this error is having shadow copying enabled when the tests run.\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureDepsFile()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.EnsureServer()\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(DelegatingHandler[] handlers)\r\n   at Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient(WebApplicationFactoryClientOptions options)\r\n   at Microsoft.AspNetCore.Identity.FunctionalTests.NoIdentityAddedTests.QueryingIdentityEndpointsReturnsNotFoundWhenIdentityIsNotPresent(String endpoint) in /_/test/Identity.FunctionalTests/NoIdentityAddedTests.cs:line 31\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.2.\r\n\r\nCC @Eilon (because the bot doesn't know who else to pick)\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Identity/issues/1937","RelatedDescription":"Open issue \"Test failure: QueryingIdentityEndpointsReturnsNotFoundWhenIdentityIsNotPresent\" (#1937)"},{"Id":"351857996","IsPullRequest":true,"CreatedAt":"2018-08-22T00:53:48","Actor":"javiercn","Number":"1929","RawContent":null,"Title":"Support Bootstrap 3 and Bootstrap 4 on idenity UI","State":"closed","Body":"* Disables razor compilation by default.\r\n* Compiles two sets of razor views after Build\r\n  * Microsoft.AspNetCore.Identity.UI.Views.V3\r\n  * Microsoft.AspNetCore.Identity.UI.Views.V4\r\n* Adds a new overload to AddDefaultUI to load the appropriate version of the views at runtime\r\n* Fix a couple of minor bugs in the markup\r\n* Add test variant for Bootstrap3","Url":"https://github.com/aspnet/Identity/pull/1929","RelatedDescription":"Closed or merged PR \"Support Bootstrap 3 and Bootstrap 4 on idenity UI\" (#1929)"},{"Id":"352721979","IsPullRequest":false,"CreatedAt":"2018-08-21T21:43:48","Actor":"fishingry","Number":"1932","RawContent":null,"Title":"The total size of an index or primary key cannot exceed 900 bytes.","State":"open","Body":"The default length of `UserId` and `RoleId` should not be 450, it's a `Guid` by default, so the size should match the default value as well.\r\n\r\nOnce if I need UserId as a foreign key and if it's part of multiple primary keys, MS SQL throws this error:\r\n\r\n> The total size of an index or primary key cannot exceed 900 bytes.\r\n\r\nFor example, table Customer, 2 primary keys:\r\n\r\n1.     UserId(nvarchar(450)),   --PK, FK. it does not work even if changing length to 100!\r\n2.     CustomerTypeId(int),   --PK, FK. CustomerType is another table\r\n3.     it will be worse if I had more PKs and FKs\r\n\r\nI don't want to customize anything about Identity Framework tables, I want keep using default setup.","Url":"https://github.com/aspnet/Identity/issues/1932","RelatedDescription":"Open issue \"The total size of an index or primary key cannot exceed 900 bytes.\" (#1932)"},{"Id":"352300995","IsPullRequest":false,"CreatedAt":"2018-08-20T21:21:06","Actor":"Karthik2610","Number":"1931","RawContent":null,"Title":"Resource file with out building the solution","State":"open","Body":"Hi,\r\nI am using .net core 2.1, and i am using appsettings.json file , AppSettings key value .\r\ne.g like below\r\n \"AppSettings\": {\r\n\"ErrorMessage\": \"First Name required\"\r\n}\r\nWhen i change the \"First Name required\" to \"First/Last Name required\" it is not reflecting, it needs rebuild.\r\nIs there any other res file where we change the message with out building the application on the run.","Url":"https://github.com/aspnet/Identity/issues/1931","RelatedDescription":"Open issue \"Resource file with out building the solution\" (#1931)"},{"Id":"351866220","IsPullRequest":false,"CreatedAt":"2018-08-20T10:06:07","Actor":"slavanap","Number":"1930","RawContent":null,"Title":"Need assistance to investigate why RazorPageBase.User doesn't contain logged-in user identity","State":"closed","Body":"I thought it was cookies issue at the beginning, but it's not. I'm running .NET Core MVC application as a console application, I register identity&auth with code snippet at the end of the message.\r\nMy issue is that User variable in MVC view doesn't contain user identity after successful user SignIn (`_signInManager.PasswordSignInAsync(...).Succeeded` is `true`).\r\n\r\nRazorPageBase.User is not Authenticated after successful sign-in. **How to fix this?** Tried with Chrome & Firefox. Debug looks like this:\r\n![2018-08-19](https://user-images.githubusercontent.com/1901547/44304673-463c8680-a36b-11e8-84bb-6af60676a2f2.jpg)\r\n\r\nMy Startup.cs. The app was originally migrated from netcore2.0 to netcore2.1, but I don't like new app template where you can't customize Identity pages, that's why I want to keep them, if possible.\r\n```\r\nusing System;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing CoreApp.Data;\r\nusing CoreApp.Models;\r\nusing CoreApp.Services;\r\nusing FirebirdSql.EntityFrameworkCore.Firebird.Extensions;\r\nusing System.Text;\r\nusing Microsoft.AspNetCore.Http;\r\n\r\nnamespace CoreApp {\r\n\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);\r\n            services.AddEntityFrameworkNpgsql().AddDbContext<ApplicationDbContext>(\r\n                opt => opt.UseNpgsql(Configuration.GetConnectionString(\"Main\"), o => o.UseNetTopologySuite()));\r\n            services.AddEntityFrameworkNpgsql().AddDbContext<NominatimContext>(\r\n                opt => opt.UseNpgsql(Configuration.GetConnectionString(\"Nominatim\")));\r\n\r\n            services.AddIdentityCore<ApplicationUser>(options => {\r\n                options.Password.RequireDigit = false;\r\n                options.Password.RequiredLength = 4;\r\n                options.Password.RequireLowercase = false;\r\n                options.Password.RequireNonAlphanumeric = false;\r\n                options.Password.RequireUppercase = false;\r\n                options.SignIn.RequireConfirmedEmail = false;\r\n                options.SignIn.RequireConfirmedPhoneNumber = false;\r\n            })\r\n               .AddRoles<IdentityRole>()\r\n               .AddEntityFrameworkStores<ApplicationDbContext>()\r\n               .AddSignInManager()\r\n               .AddDefaultTokenProviders();\r\n            services.AddAuthentication().AddIdentityCookies(builder => {\r\n                builder.ApplicationCookie.Configure(options => {\r\n                    options.Cookie.HttpOnly = false;\r\n                    options.Cookie.SameSite = SameSiteMode.None;\r\n                });\r\n            });\r\n\r\n            services.AddMvc();\r\n\r\n            // Add application services.\r\n            services.AddTransient<IEmailSender, EmailSender>();\r\n            services.AddSingleton<Tracker>();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, IApplicationLifetime applicationLifetime, IServiceProvider provider)\r\n        {\r\n            if (env.IsDevelopment()) {\r\n                //app.UseBrowserLink();\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseDatabaseErrorPage();\r\n            }\r\n            else {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n            app.UseAuthentication();\r\n\r\n            app.UseMvc(routes => {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n\r\n            if (!env.IsDevelopment()) {\r\n                using (var scope = app.ApplicationServices.GetService<IServiceScopeFactory>().CreateScope()) {\r\n                    scope.ServiceProvider.GetRequiredService<ApplicationDbContext>().Database.Migrate();\r\n                }\r\n            }\r\n            Task.Run(() => app.ApplicationServices.GetService<Tracker>().RunAsync(7331, applicationLifetime.ApplicationStopping));\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Identity/issues/1930","RelatedDescription":"Closed issue \"Need assistance to investigate why RazorPageBase.User doesn't contain logged-in user identity\" (#1930)"},{"Id":"351764707","IsPullRequest":true,"CreatedAt":"2018-08-17T23:13:32","Actor":"HaoK","Number":"1928","RawContent":null,"Title":"Merge release/2.2 -> master","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/1928","RelatedDescription":"Closed or merged PR \"Merge release/2.2 -> master\" (#1928)"},{"Id":"351741392","IsPullRequest":true,"CreatedAt":"2018-08-17T22:42:00","Actor":"dotnet-maestro-bot","Number":"1927","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @HaoK\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Identity.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/1927","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#1927)"}],"ResultType":"GitHubIssue"},"Kestrel-Issues":{"Issues":[{"Id":"357458613","IsPullRequest":true,"CreatedAt":"2018-09-06T01:11:03","Actor":"JunTaoLuo","Number":"2887","RawContent":null,"Title":"Minimize blocking threads to improve test reliability","State":"open","Body":"Addresses https://github.com/aspnet/KestrelHttpServer/issues/2598. Back port of https://github.com/aspnet/KestrelHttpServer/commit/e4f101e7253b6da4d6452bf3dbe165d9f56841bb.\r\n\r\ncc @muratg @natemcmaster for 2.1.5 tell mode. Note that this is a test change only.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2887","RelatedDescription":"Open PR \"Minimize blocking threads to improve test reliability\" (#2887)"},{"Id":"357457835","IsPullRequest":false,"CreatedAt":"2018-09-06T01:06:10","Actor":"JunTaoLuo","Number":"2886","RawContent":null,"Title":"Backport https://github.com/aspnet/KestrelHttpServer/pull/2780","State":"open","Body":"We should back port the in-memory functional tests to 2.1 (https://github.com/aspnet/KestrelHttpServer/pull/2780). This improvement fixed a slew of flaky tests.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2886","RelatedDescription":"Open issue \"Backport https://github.com/aspnet/KestrelHttpServer/pull/2780\" (#2886)"},{"Id":"357445784","IsPullRequest":false,"CreatedAt":"2018-09-06T00:01:10","Actor":"aspnet-hello","Number":"2885","RawContent":null,"Title":"Test failure: AppCanHandleClientAbortingConnectionMidResponse","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=544982&buildTypeId=Releases_21Public_OsxUniverse) occasionally with the following error:\r\n```\r\nAssert.Empty() Failure\r\nCollection: [WriteContext { EventId = ConnectionError, Exception = System.IO.IOException: Protocol wrong type for socket ---> System.Net.Sockets.SocketException: Protocol wrong type for socket\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitable.GetResult() in /_/src/Kestrel.Transport.Sockets/Internal/SocketAwaitable.cs:line 40\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.ProcessSends() in /_/src/Kestrel.Transport.Sockets/Internal/SocketConnection.cs:line 258\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoSend() in /_/src/Kestrel.Transport.Sockets/Internal/SocketConnection.cs:line 201\r\n   --- End of inner exception stack trace ---, Formatter = Func`3 { ... }, LoggerName = \"Microsoft.AspNetCore.Server.Kestrel.Transport.Sock\"..., LogLevel = Information, ... }]\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.AppCanHandleClientAbortingConnectionMidResponse(ListenOptions listenOptions) in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 2505\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.1.\r\n\r\nCC @muratg\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2885","RelatedDescription":"Open issue \"Test failure: AppCanHandleClientAbortingConnectionMidResponse\" (#2885)"},{"Id":"357340071","IsPullRequest":false,"CreatedAt":"2018-09-05T17:59:48","Actor":"JunTaoLuo","Number":"2884","RawContent":null,"Title":"Allow non-ASCII characters in response header values","State":"open","Body":"Following up for https://github.com/aspnet/KestrelHttpServer/issues/1144. We may want to allow UTF-8 characters in response header values now to parallel our acceptance of UTF-8 characters in request header values. Note that the app has some degree of control over the response headers and their values.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2884","RelatedDescription":"Open issue \"Allow non-ASCII characters in response header values\" (#2884)"},{"Id":"357006401","IsPullRequest":false,"CreatedAt":"2018-09-04T23:01:22","Actor":"aspnet-hello","Number":"2883","RawContent":null,"Title":"Test failure: ClosingConnectionMidChunkPrefixThrows","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=544428&buildTypeId=Releases_21Public_UbuntuUniverse) occasionally with the following error:\r\n```\r\nAssert.Equal() Failure\r\n          ↓ (pos 0)\r\nExpected: \r\nActual:   HTTP/1.1 200 OK\\r\\nDate: Tue, 04 Sep 2018 2···\r\n          ↑ (pos 0)\r\n   at Microsoft.AspNetCore.Testing.TestConnection.ReceiveEnd(String[] lines) in /_/test/shared/TestConnection.cs:line 159\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ChunkedRequestTests.ClosingConnectionMidChunkPrefixThrows(ListenOptions listenOptions) in /_/test/Kestrel.FunctionalTests/ChunkedRequestTests.cs:line 683\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on 2.1.\r\n\r\nCC @muratg\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2883","RelatedDescription":"Open issue \"Test failure: ClosingConnectionMidChunkPrefixThrows\" (#2883)"},{"Id":"356937186","IsPullRequest":false,"CreatedAt":"2018-09-04T20:08:23","Actor":"JDGHHou","Number":"2882","RawContent":null,"Title":"Unable to start Kestrel: path base can only be configured using IApplicationBuilder.UsePathBase","State":"closed","Body":"My application runs fine in Visual Studio 2017 using the built-in IIS Express. However, when I deploy my code to IIS, suddenly I get the attached error.\r\n\r\nI have found a couple of articles saying that I need to set my application URL to \r\n\"applicationUrl\": \"http://localhost/\"\r\nrather than \r\n\"applicationUrl\": \"http://localhost/{my application name}/\"\r\n\r\nBut when I do that, my application tries to deploy to the webroot, and my application is stored in a folder elsewhere, so that doesn't work.\r\n\r\nIn all this, I am so confused as to what Microsoft's approach is. Why - if IIS Express works great at the press of a button - doesn't Microsoft just copy that exactly and apply it to IIS? I understand there may be more in-depth configuration a user may need to do, but that should be optional for users who need something more complex. Deploying something in IIS is almost always a complete living nightmare involving a million random undocumented settings. It is needlessly difficult and seems to default to the most random edge-case setup, rather than the most simple.\r\n\r\nAnyway... Can someone please tell me how to make my application just deploy to IIS and work the same as it already does on other Microsoft products?\r\n\r\n----------THIS IS THE ERROR MESSAGE --------------------\r\nSystem.InvalidOperationException: 'A path base can only be configured using IApplicationBuilder.UsePathBase().'\r\n-----------------------------------------------\r\n\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using 'C:\\Users\\JohnDunn\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.InvalidOperationException: A path base can only be configured using IApplicationBuilder.UsePathBase().\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2882","RelatedDescription":"Closed issue \"Unable to start Kestrel: path base can only be configured using IApplicationBuilder.UsePathBase\" (#2882)"},{"Id":"356187830","IsPullRequest":false,"CreatedAt":"2018-09-04T19:16:31","Actor":"Tratcher","Number":"2874","RawContent":null,"Title":"SETTINGS_HEADER_TABLE_SIZE doesn't work with Chrome","State":"closed","Body":"https://github.com/aspnet/KestrelHttpServer/pull/2838\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2SettingsParameterOutOfRangeException\r\n  HResult=0x80131500\r\n  Message=HTTP/2 SETTINGS parameter SETTINGS_HEADER_TABLE_SIZE must be set to a value between 0 and 4096\r\n  Source=Microsoft.AspNetCore.Server.Kestrel.Core\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2PeerSettings.Update(IList`1 settings) in D:\\github\\AspNet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http2\\Http2PeerSettings.cs:line 47\r\n```\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/153020ef8a81aa6b4c6efebd83a8b04863e4d40d/src/Kestrel.Core/Internal/Http2/Http2PeerSettings.cs#L40-L46\r\n\r\nRepro: The checked in Http2 sample app.\r\n\r\nIE and Edge work. Chrome is sending 65536. This bug prevents any HTTP/2 connections from Chrome. There's no workaround. @JunTaoLuo @muratg I guess now we get to find out if anybody ever tries preview2...\r\n\r\nhttps://tools.ietf.org/html/rfc7540#section-6.5.2\r\n```\r\n   SETTINGS_HEADER_TABLE_SIZE (0x1):  Allows the sender to inform the\r\n      remote endpoint of the maximum size of the header compression\r\n      table used to decode header blocks, in octets.  The encoder can\r\n      select any size equal to or less than this value by using\r\n      signaling specific to the header compression format inside a\r\n      header block (see [COMPRESSION]).  The initial value is 4,096\r\n      octets.\r\n```\r\n\r\nThis was misinterpreted as to never allow a value over 4kb. What it really meant was that the side compressing headers must not grow the table beyond the size specified by the one decompressing the headers. There should be no limit enforced on the client's value, we should use the lesser of the client value and our own value, and our value should be allowed to be larger than 4kb.\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/153020ef8a81aa6b4c6efebd83a8b04863e4d40d/src/Kestrel.Core/Http2Limits.cs#L53-L56\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2874","RelatedDescription":"Closed issue \"SETTINGS_HEADER_TABLE_SIZE doesn't work with Chrome\" (#2874)"},{"Id":"356249626","IsPullRequest":true,"CreatedAt":"2018-09-04T19:15:36","Actor":"Tratcher","Number":"2877","RawContent":null,"Title":"Remove limits on SETTINGS_HEADER_TABLE_SIZE","State":"closed","Body":" #2874 This fixes a regression that prevented Kestrel from accepting HTTP/2 connections from Chrome. \r\n\r\nPreview2 reset candidate.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2877","RelatedDescription":"Closed or merged PR \"Remove limits on SETTINGS_HEADER_TABLE_SIZE\" (#2877)"},{"Id":"356922509","IsPullRequest":false,"CreatedAt":"2018-09-04T18:19:23","Actor":"halter73","Number":"2881","RawContent":null,"Title":"Backport #2865 (flow CancellationToken when writing chunked response) to 2.1.x","State":"open","Body":" #2865","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2881","RelatedDescription":"Open issue \"Backport #2865 (flow CancellationToken when writing chunked response) to 2.1.x\" (#2881)"},{"Id":"356884075","IsPullRequest":false,"CreatedAt":"2018-09-04T16:20:42","Actor":"Tratcher","Number":"2880","RawContent":null,"Title":"Add HTTP/2 interop tests using chrome headless mode","State":"open","Body":"https://stackoverflow.com/questions/45130993/how-to-start-chromedriver-in-headless-mode\r\n\r\nEven a hello world integration test would have caught this regression: https://github.com/aspnet/KestrelHttpServer/issues/2874","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2880","RelatedDescription":"Open issue \"Add HTTP/2 interop tests using chrome headless mode\" (#2880)"},{"Id":"356852964","IsPullRequest":false,"CreatedAt":"2018-09-04T15:04:18","Actor":"andras-ferencz","Number":"2879","RawContent":null,"Title":"Add an exception for responses that are prematurely cut off due to their size.","State":"open","Body":"This is a \"feature\" that has plagued me for months, until I realized there was a very easy fix - https://stackoverflow.com/questions/16436533/how-to-modify-the-default-allowed-response-size-settings-for-a-web-api-applicati .\r\n\r\nUnless configured, there seems to be a (configurable) upper limit on the response size for JSON strings and responses in general - instead of throwing returning 500 and an exception that tells us the response is too large for the server to handle, it trims the response to the limit and sends it, leading to malformed JSON strings and 〈capslock〉developer frustration〈/capslock〉. \r\n\r\nI feel that an  exception (maybe can be toggled on/off) should be implemented here that at least tells us the server encountered an error instead of sending half of a response that inevitably breaks the client.\r\n\r\n🐊","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2879","RelatedDescription":"Open issue \"Add an exception for responses that are prematurely cut off due to their size.\" (#2879)"},{"Id":"356291557","IsPullRequest":false,"CreatedAt":"2018-09-02T15:33:25","Actor":"rene98c","Number":"2878","RawContent":null,"Title":"I broke the http/2 , preview 2.2","State":"open","Body":"Where do i start debugging this?\r\n\r\nMy app was working great for 2 weeks on http2 but today i broke it.\r\nIt has to do something with browser, how it loads static resources, css and javascript. I optimized the static content delivery and finally figured that http2 is to blame.\r\nIt started to lock up with pending status at chrome browser while i  was refreshing the page few  times (ctrl - f5) . kestrel did not show any errors and database log was ok.\r\nChecked the server resource usage, cpu memory  all looked fine like before, no change there.\r\nNot a browser issue too, chrome, edge, firefox behaved the same, just waiting for the first byte.\r\nAnd now it fails to load the page almost every time. just a minute ago i noticed app finally responded after 10minutes.\r\nThe app did load almost instantly and was fast before this issue started to occur.\r\nI changed the kestrel to use only http1 and it started working fine on every server i deployed it. \r\nI have app running on 3 different virtual machines (debian 9.5), developing on windows and it locked up the same.\r\n\r\nI'll post some updates as soon i find anything else.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2878","RelatedDescription":"Open issue \"I broke the http/2 , preview 2.2\" (#2878)"},{"Id":"356218499","IsPullRequest":false,"CreatedAt":"2018-09-01T17:12:18","Actor":"davidfowl","Number":"2876","RawContent":null,"Title":"Tests aborted on linux and OSX","State":"open","Body":"Seen this a few times now\r\n\r\n```\r\n  Starting test group: UnitTests/netcoreapp2.2\r\n  Microsoft (R) Test Execution Command Line Tool Version 15.7.0\r\n  Copyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\n  Starting test execution, please wait...\r\n  [xUnit.net 00:00:01.30]     ServerPipeListenForConnections [FAIL]\r\n  [xUnit.net 00:00:01.32]     ServerPipeDispatchConnections [FAIL]\r\n  [xUnit.net 00:00:01.33]     InitAndCloseServerPipe [FAIL]\r\n  The active test run was aborted. Reason: Assertion Failed\r\n  ThreadId is incorrect\r\n     at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvMemory.Validate(Boolean closed) in /kestrel/src/Kestrel.Transport.Libuv/Internal/Networking/UvMemory.cs:line 84\r\n     at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.loop_close(UvLoopHandle handle) in /kestrel/src/Kestrel.Transport.Libuv/Internal/Networking/LibuvFunctions.cs:line 111\r\n     at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle.ReleaseHandle() in /kestrel/src/Kestrel.Transport.Libuv/Internal/Networking/UvLoopHandle.cs:line 48\r\n     at System.Runtime.InteropServices.SafeHandle.InternalFinalize()\r\n     at System.Runtime.InteropServices.SafeHandle.Finalize()\r\n\r\n  [xUnit.net 00:00:20.89]     ContentLength_Received_MultipleDataFramesOverSize_Reset [SKIP]\r\n  Skipped  ContentLength_Received_MultipleDataFramesOverSize_Reset\r\n\r\n  Total tests: Unknown. Passed: 6427. Failed: 0. Skipped: 1.\r\n  Test execution time: 45.0423 Seconds\r\n  Test Run Aborted.\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2876","RelatedDescription":"Open issue \"Tests aborted on linux and OSX\" (#2876)"},{"Id":"356207864","IsPullRequest":false,"CreatedAt":"2018-09-01T14:47:15","Actor":"liuhongbo","Number":"2875","RawContent":null,"Title":"HttpConnectionContext add feature to expose RemoteEndPoint","State":"open","Body":"when ConnectionContext passes to ConnectionHandler.OnConnectedAsync,  right now, there is no way to know the information about RemoteEndPoint.\r\n\r\nIs it a good idea to add feature to the HttpConnectionContext to be able to access the RemoteEndPoint information?\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2875","RelatedDescription":"Open issue \"HttpConnectionContext add feature to expose RemoteEndPoint\" (#2875)"},{"Id":"356093661","IsPullRequest":true,"CreatedAt":"2018-08-31T19:08:24","Actor":"JunTaoLuo","Number":"2873","RawContent":null,"Title":"PR feedback for https://github.com/aspnet/KestrelHttpServer/pull/2838","State":"open","Body":"Following up for comments in previous PR. Not merging until release/2.2 is open.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2873","RelatedDescription":"Open PR \"PR feedback for https://github.com/aspnet/KestrelHttpServer/pull/2838\" (#2873)"},{"Id":"356062707","IsPullRequest":false,"CreatedAt":"2018-08-31T17:22:27","Actor":"Tratcher","Number":"2872","RawContent":null,"Title":"Make HPACK max field sizes configurable","State":"open","Body":"HPackDecoder.MaxStringOctets is hardcoded to 4kb. This represents the maximum size of header fields, both compressed and uncompressed. Since the request PathAndQuery is now a single http/2 header this may be a problem for some apps that were used to the prior request line length limit of 8kb.\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/2813\r\n\r\nCompare to nginx http://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_max_header_size which also defaults to 4kb, but only for the compressed size.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2872","RelatedDescription":"Open issue \"Make HPACK max field sizes configurable\" (#2872)"},{"Id":"355680700","IsPullRequest":true,"CreatedAt":"2018-08-31T00:33:31","Actor":"dotnet-maestro-bot","Number":"2869","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @davidfowl\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/KestrelHttpServer.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2869","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2869)"},{"Id":"355347676","IsPullRequest":true,"CreatedAt":"2018-08-30T23:58:47","Actor":"JunTaoLuo","Number":"2867","RawContent":null,"Title":"Parse requests with UTF-8 header values","State":"closed","Body":"Addresses https://github.com/aspnet/KestrelHttpServer/issues/1144.\r\n\r\nSo far this is only on the request side and we are only allowing UTF-8 header values.\r\n\r\nPath/QueryString/Header Keys are still ASCII only.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2867","RelatedDescription":"Closed or merged PR \"Parse requests with UTF-8 header values\" (#2867)"},{"Id":"355775050","IsPullRequest":false,"CreatedAt":"2018-08-30T22:22:51","Actor":"halter73","Number":"2871","RawContent":null,"Title":"Add default debug-level logging for selected TLS protocol and cipher suite","State":"open","Body":"","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2871","RelatedDescription":"Open issue \"Add default debug-level logging for selected TLS protocol and cipher suite\" (#2871)"},{"Id":"355688346","IsPullRequest":true,"CreatedAt":"2018-08-30T17:46:45","Actor":"Tratcher","Number":"2870","RawContent":null,"Title":"Implement MaxRequestHeadersTotalSize for HTTP/2, improve error handling","State":"open","Body":" #2812, #2811\r\n\r\nCounting the size of headers as they're received is pretty straight forward. Note this count is tracked separately for headers and trailers.\r\n\r\nI've temporarily disabled http/2 request trailers to avoid multithreaded dictionary corruption. #2051 will re-implement them properly.\r\n\r\nMost of the changes are around error handling. Because all streams share one header decompression state you can't stop processing a headers frame part way through without risking corruption to the decompression state for future streams. The safest action in the short term is to treat all header errors as connection errors. Most of these errors are for basic protocol correctness and should not happen in reality.\r\n\r\nA few errors like header length limits will be more common. We'll want to overhaul the error handling mechanics to allow request validation errors to be handled on a per stream basis. To do this we would need to:\r\n- Capture errors from request/header validation\r\n- Continue to decompress Headers and Continuation frames to maintain the compression state while discarding the headers.\r\n- Optionally send a 4XX response as appropriate for the error\r\n- Reset the stream\r\n\r\nI didn't want to start that refactor yet as having the limits working is more important. Well behaved clients won't be impacted.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2870","RelatedDescription":"Open PR \"Implement MaxRequestHeadersTotalSize for HTTP/2, improve error handling\" (#2870)"},{"Id":"355432791","IsPullRequest":true,"CreatedAt":"2018-08-30T16:49:34","Actor":"davidfowl","Number":"2868","RawContent":null,"Title":"Fix platform benchmarks TFM","State":"closed","Body":"Remove workaround and make the TFM netcoreapp2.2 for the PlatformBenchmarks","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2868","RelatedDescription":"Closed or merged PR \"Fix platform benchmarks TFM\" (#2868)"},{"Id":"355295447","IsPullRequest":true,"CreatedAt":"2018-08-29T19:12:56","Actor":"davidfowl","Number":"2866","RawContent":null,"Title":"Add diagnostic messages to show hanging tests in the output","State":"open","Body":"Now test hangs will show up.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2866","RelatedDescription":"Open PR \"Add diagnostic messages to show hanging tests in the output\" (#2866)"},{"Id":"355018588","IsPullRequest":true,"CreatedAt":"2018-08-29T06:40:45","Actor":"davidfowl","Number":"2865","RawContent":null,"Title":"Flow the cancellation tokens to ReadAsync and WriteAsync","State":"open","Body":"","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2865","RelatedDescription":"Open PR \"Flow the cancellation tokens to ReadAsync and WriteAsync\" (#2865)"},{"Id":"354940592","IsPullRequest":true,"CreatedAt":"2018-08-28T23:35:23","Actor":"benaadams","Number":"2864","RawContent":null,"Title":"Go Slow","State":"closed","Body":"No merge!","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2864","RelatedDescription":"Closed or merged PR \"Go Slow\" (#2864)"},{"Id":"354871814","IsPullRequest":true,"CreatedAt":"2018-08-28T22:56:19","Actor":"drieseng","Number":"2863","RawContent":null,"Title":"Remove workaround for CoreFx #24562","State":"closed","Body":"Remove workaround for https://github.com/dotnet/corefx/issues/24562. This issue caused a bind to a recently used endpoint to fail on macOS and Linux.\r\n\r\nAddresses #2820","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2863","RelatedDescription":"Closed or merged PR \"Remove workaround for CoreFx #24562\" (#2863)"},{"Id":"354822837","IsPullRequest":true,"CreatedAt":"2018-08-28T18:44:25","Actor":"dotnet-maestro-bot","Number":"2862","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @davidfowl\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/KestrelHttpServer.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2862","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2862)"},{"Id":"354518008","IsPullRequest":true,"CreatedAt":"2018-08-28T17:56:46","Actor":"halter73","Number":"2859","RawContent":null,"Title":"Avoid throwing the same exception instances in parallel","State":"closed","Body":"We want to avoid throwing the same exception instances in parallel since throwing mutates the instance's stack trace.\r\n\r\nThere's still a case where the same exception instance could theoretically be thrown from both the input and output pipe in parallel when using the libuv transport, but this is only in the case of an exception type being thrown that we don't expect to ever see. I added a ConnectionError log that should fail any tests where it's seen.\r\n\r\n#2806","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2859","RelatedDescription":"Closed or merged PR \"Avoid throwing the same exception instances in parallel\" (#2859)"},{"Id":"354626742","IsPullRequest":true,"CreatedAt":"2018-08-28T16:32:34","Actor":"davidfowl","Number":"2861","RawContent":null,"Title":"Don't preserve the ExecutionContext when dispatching callbacks","State":"closed","Body":"- The layers up stack already preserve and restore the ExecutionContext, there's no need to capture and run for the scheduler callback and cancellation token callback","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2861","RelatedDescription":"Closed or merged PR \"Don't preserve the ExecutionContext when dispatching callbacks\" (#2861)"},{"Id":"354541563","IsPullRequest":false,"CreatedAt":"2018-08-28T02:01:27","Actor":"aspnet-hello","Number":"2860","RawContent":null,"Title":"Test failure: LoggingConnectionAdapterCanBeAddedBeforeAndAfterHttpsAdapter","State":"open","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=540403&buildTypeId=XPlat_Linux_UbuntuUniverseCoreCLR) occasionally with the following error:\r\n```\r\nSystem.IO.IOException : Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__46_2(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.InMemory.FunctionalTests.TestTransport.InMemoryHttpClientSlim.GetStream(Stream rawStream, Uri requestUri, Boolean validateCertificate) in /_/test/Kestrel.InMemory.FunctionalTests/TestTransport/InMemoryHttpClientSlim.cs:line 129\r\n   at Microsoft.AspNetCore.Server.Kestrel.InMemory.FunctionalTests.TestTransport.InMemoryHttpClientSlim.GetStringAsync(Uri requestUri, Boolean validateCertificate) in /_/test/Kestrel.InMemory.FunctionalTests/TestTransport/InMemoryHttpClientSlim.cs:line 34\r\n   at Microsoft.AspNetCore.Server.Kestrel.InMemory.FunctionalTests.TestTransport.InMemoryHttpClientSlim.GetStringAsync(String requestUri, Boolean validateCertificate) in /_/test/Kestrel.InMemory.FunctionalTests/TestTransport/InMemoryHttpClientSlim.cs:line 29\r\n   at Microsoft.AspNetCore.Testing.TaskExtensions.TimeoutAfter[T](Task`1 task, TimeSpan timeout, String filePath, Int32 lineNumber)\r\n   at Microsoft.AspNetCore.Server.Kestrel.InMemory.FunctionalTests.LoggingConnectionAdapterTests.LoggingConnectionAdapterCanBeAddedBeforeAndAfterHttpsAdapter() in /_/test/Kestrel.InMemory.FunctionalTests/LoggingConnectionAdapterTests.cs:line 32\r\n--- End of stack trace from previous location where exception was thrown ---\r\n------- Stdout: -------\r\n| [0.001s] TestLifetime Information: Starting test LoggingConnectionAdapterCanBeAddedBeforeAndAfterHttpsAdapter at 2018-08-28T01:06:46\r\n| [0.036s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting starting\r\n| [0.048s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting started\r\n| [0.049s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Loaded hosting startup assembly testhost\r\n| [0.102s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLGCGA35HG4L\" started.\r\n| [0.229s] LoggingConnectionAdapter Debug: ReadAsync[5] 16 03 01 01 3E \r\n|                                          \\x16\\x03\\x01\\x01>\r\n| [0.237s] LoggingConnectionAdapter Debug: ReadAsyncr\n|                                          \\x01\\0\\x01:\\x03\\x03ØÉÎ¼âÏ 0/k\\x0e\\x17ÏzõÖx=\\\"×?Ê:jâeE\\0\\0ªÀ0À,À(À$À\\x14À\r\n|                                          \\0¥\\0£\\0¡\\0\\0k\\0j\\0i\\0h\\09\\08\\07\\06\\0\\0\\0\\0À2À.À*À&À\\x0fÀ\\x05\\0\\0=\\05\\0À/À+À'À#À\\x13À    \\0¤\\0¢\\0 \\0\\0g\\0@\\0?\\0>\\03\\02\\01\\00\\0\\0\\0\\0\\0E\\0D\\0C\\0BÀ1À-À)À%À\\x0eÀ\\x04\\0\\0<\\0/\\0\\0AÀ\\x11À\\x07À\\u000cÀ\\x02\\0\\x05\\0\\x04À\\x12À\\x08\\0\\x16\\0\\x13\\0\\x10\\0\r\nÀ\r\nÀ\\x03\\0\r\n|                                          \\0ÿ\\x01\\0\\0g\\0\\0\\0\\x0e\\0\\u000c\\0\\0    localhost\\0\\u000b\\0\\x04\\x03\\0\\x01\\x02\\0\r\n|                                          \\0\\x1c\\0\\x1a\\0\\x17\\0\\x19\\0\\x1c\\0\\x1b\\0\\x18\\0\\x1a\\0\\x16\\0\\x0e\\0\r\n\\0\\u000b\\0\\u000c\\0    \\0\r\n|                                          \\0#\\0\\0\\0\r\n\\0 \\0\\x1e\\x06\\x01\\x06\\x02\\x06\\x03\\x05\\x01\\x05\\x02\\x05\\x03\\x04\\x01\\x04\\x02\\x04\\x03\\x03\\x01\\x03\\x02\\x03\\x03\\x02\\x01\\x02\\x02\\x02\\x03\\0\\x0f\\0\\x01\\x01\r\n| [0.260s] LoggingConnectionAdapter Debug: WriteAsync[1192] 16 03 03 00 42 02 00 00 3E 03 03 E4 F0 B6 43 B9 D4 F0 D0 2F 22 E8 B5 BD B7 47 37 CC 75 87 62 1E C8 19 62 AA 2D 19 C9 F0 29 00 6B 00 C0 30 00 00 16 FF 01 00 01 00 00 0B 00 04 03 00 01 02 00 23 00 00 00 0F 00 01 01 16 03 03 03 01 0B 00 02 FD 00 02 FA 00 02 F7 30 82 02 F3 30 82 01 DF A0 03 02 01 02 02 10 32 B6 9D 2C 9F C5 0F AF 4F 1D A2 21 1D 5F 70 E1 30 09 06 05 2B 0E 03 02 1D 05 00 30 14 31 12 30 10 06 03 55 04 03 13 09 6C 6F 63 61 6C 68 6F 73 74 30 1E 17 0D 31 35 30 39 31 36 30 36 32 31 30 39 5A 17 0D 31 36 30 39 31 36 30 36 32 31 30 38 5A 30 14 31 12 30 10 06 03 55 04 03 13 09 6C 6F 63 61 6C 68 6F 73 74 30 82 01 22 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 82 01 0F 00 30 82 01 0A 02 82 01 01 00 9A 51 99 A1 A0 D6 08 E5 D9 58 35 E5 C1 A5 09 8C 6B DF 76 95 29 C5 87 68 1B 18 87 06 25 28 C2 BF E5 F9 F8 C5 AB EC 69 AA 08 D2 FF 95 52 5D DE B8 AA AD C4 AE 87 CE 73 BC 94 AD 31 40 34 C7 59 1B A7 55 7F 34 5A A0 73 57 39 94 23 9A F6 C6 30 E3 8E 25 0C 38 CD CF C1 B7 90 D3 AB 27 91 B7 8E B6 83 12 CF FC 79 08 13 8E 4D 13 CA 91 BE C1 FA B9 4D 41 37 5A BF A4 7C 6C 9E 46 \r\n...\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on master.\r\n\r\nCC @muratg\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2860","RelatedDescription":"Open issue \"Test failure: LoggingConnectionAdapterCanBeAddedBeforeAndAfterHttpsAdapter\" (#2860)"},{"Id":"354501986","IsPullRequest":false,"CreatedAt":"2018-08-27T22:30:53","Actor":"Tratcher","Number":"2858","RawContent":null,"Title":"Change how HTTP/2 frames are parsed and generated","State":"open","Body":"The Http2FrameReader reads the exact structure of the incoming frame into a memory blob before it begins to parse it, first reading the header to get the length and then reading the payload.\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/b039fb73c41468b6d6a28770285ba432d328023e/src/Kestrel.Core/Internal/Http2/Http2FrameReader.cs#L22-L36\r\n\r\nThis amounts to triple buffering of some frames and is unnecessary for parsing. The Http2FrameWriter does something similar composing the exact frame bytes into a whole frame before sending it.\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/b039fb73c41468b6d6a28770285ba432d328023e/src/Kestrel.Core/Internal/Http2/Http2FrameWriter.cs#L198-L223\r\n\r\nAlternative: Frames can be parsed directly from the incoming pipe buffer. The logical fields like flags, length, frametype, etc. can still be written to a Http2Frame object, but it doesn't have to be stored in it's serialized state. \r\n- E.g. Make sure you have received the 9 byte frame header,\r\n- parse the individual fields in order,\r\n - check the frame type and flags, \r\n - make sure you have enough bytes for any supplementary frame fields, parse those, \r\n - wait for the rest of the frame body to arrive,\r\n - then pass the pipe buffer directly to the associated handler. \r\n - The header parser can parse directly from that buffer. The data frame handler can copy directly from that buffer to the stream's request body pipe.\r\n\r\nThe only place you need to allocate a large buffer is for the response header compression, the whole frame needs to be compressed before you can know the exact headers length. Interestingly this compression takes place under the write lock, so that buffer could be rented from the pipe itself to avoid double buffering.\r\n\r\n@davidfowl ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2858","RelatedDescription":"Open issue \"Change how HTTP/2 frames are parsed and generated\" (#2858)"}],"ResultType":"GitHubIssue"},"Razor-Issues":{"Issues":[{"Id":"356986102","IsPullRequest":true,"CreatedAt":"2018-09-06T00:24:46","Actor":"NTaylorMullen","Number":"2569","RawContent":null,"Title":"Allow TagHelpers to occur after unclosed C# blocks without assert failures.","State":"closed","Body":"- This scenario wasn't considered previously.\r\n\r\n#2566 \r\n\r\nFYI mostly, waiting for 2.2 to be open.","Url":"https://github.com/aspnet/Razor/pull/2569","RelatedDescription":"Closed or merged PR \"Allow TagHelpers to occur after unclosed C# blocks without assert failures.\" (#2569)"},{"Id":"356984110","IsPullRequest":false,"CreatedAt":"2018-09-06T00:05:45","Actor":"NTaylorMullen","Number":"2568","RawContent":null,"Title":"Handle unclosed C# code blocks better when intermingling HTML","State":"closed","Body":"Original issue: https://github.com/aspnet/Razor/issues/2566\r\n\r\nPaste the following code with `test` as a TagHelper.\r\n```\r\n<test>\r\n        @if (ShowFooter){\r\n        { }\r\n</test>\r\n```\r\nThe end `test` gets understood as an invalid closing tag because of the above unclosed C# statement. In our journey of re-writing the syntax tree we should handle this scenario better and close out the incomplete C# code block once we see an unpaired closing tag.\r\n\r\n@ajaybhargavb could you cost this based on what you feel it would take to do with the new world Html aware Razor parser?","Url":"https://github.com/aspnet/Razor/issues/2568","RelatedDescription":"Closed issue \"Handle unclosed C# code blocks better when intermingling HTML\" (#2568)"},{"Id":"356591896","IsPullRequest":false,"CreatedAt":"2018-09-05T02:35:42","Actor":"cmooring","Number":"2567","RawContent":null,"Title":"Duplicate attribute on new mvc or Razor Pages application","State":"closed","Body":"Hi,\r\n\r\nI submitted [a comment on this issue](https://github.com/dotnet/cli/issues/4710#issuecomment-395801559) a while back on the dotnet issues board. This occurs when simply creating a new mvc or razor project, letting vscode add the tasks and launch.json files and then performing a build. \r\n\r\nI'm not sure if this is Razor specific, but I think if there is an easy way to get this addressed for new users, it would be really good. I did manage to stop the build errors from occurring by simply adding the following suggestion shown by [this comment](https://github.com/dotnet/cli/issues/4710#issuecomment-404974482) further down the same issue. \r\n\r\n`<PropertyGroup>\r\n  <EnableDefaultRazorTargetAssemblyInfoAttributes>false</EnableDefaultRazorTargetAssemblyInfoAttributes>\r\n</PropertyGroup>`\r\n\r\nThanks,\r\nChris","Url":"https://github.com/aspnet/Razor/issues/2567","RelatedDescription":"Closed issue \"Duplicate attribute on new mvc or Razor Pages application\" (#2567)"},{"Id":"356998401","IsPullRequest":true,"CreatedAt":"2018-09-04T22:26:31","Actor":"pranavkm","Number":"2570","RawContent":null,"Title":"Move tasks and targets in to Razor Sdk","State":"open","Body":"","Url":"https://github.com/aspnet/Razor/pull/2570","RelatedDescription":"Open PR \"Move tasks and targets in to Razor Sdk\" (#2570)"},{"Id":"353953362","IsPullRequest":false,"CreatedAt":"2018-09-04T18:19:36","Actor":"JDGHHou","Number":"2556","RawContent":null,"Title":"POST Model to Controller from HTML form, then pass to ViewComponent Invoke: in View, HtmlHelper outputs value properly, but TagHelper does not.","State":"closed","Body":"1) In my MVC/Razor project, I have an html form:\r\n```\r\n    <form>\r\n           <span>\r\n                <label asp-for=\"CustomerNumber\" class=\"lm_title\"></label>\r\n                <input asp-for=\"CustomerNumber\" id=\"params_customernumber\" />\r\n            </span>\r\n            <span>\r\n                <label asp-for=\"SalesOrderNumber\" class=\"lm_title\"></label>\r\n                <input asp-for=\"SalesOrderNumber\" id=\"params_salesordernumber\" />\r\n                @Html.TextBox(\"mytext\", Model.SalesOrderNumber)\r\n            </span>\r\n    </form>\r\n```\r\n2) In the onChange event of that form, I call a javascript function that converts my form to JSON:\r\n```\r\n    {\"CustomerNumber\" : \"2\", \"SalesOrderNumber\": \"\"}\r\n```\r\n3) I pass that JSON string to my Controller action. The Controller properly maps the JSON string to my model. Inside that Controller action, I update the SalesOrderNumber on the model, then return the ViewComponent....\r\n```\r\n        [HttpPost()]\r\n        public IActionResult updateParams(Parameters paramModel)\r\n        { \r\n            paramModel.SalesOrderNumber = \"8675309\";\r\n            return ViewComponent(\"ParametersTab\", paramModel);\r\n        }\r\n```\r\n4) Which then calls the ViewComponent Invoke code below. When I set breakpoints, I can see that model.SalesOrderNumber = \"8765309\" right before it returns the View.\r\n```\r\n        public IViewComponentResult Invoke (Parameters pModel)\r\n        {\r\n            MyProject.Models.Parameters model = (pModel is null)?new Parameters():pModel;\r\n            return View(model);\r\n        }\r\n```\r\n5) So then, WHY, in my View \r\n     ...does this HtmlHelper output the value properly....\r\n```\r\n     @Html.TextBox(\"mytext\", Model.SalesOrderNumber)\r\n``` \r\n\r\n     ... But this TagHelper does not ....\r\n\r\n```\r\n     <input asp-for=\"SalesOrderNumber\" id=\"params_salesordernumber\" />\r\n```      \r\nI will add that the other TagHelper that outputs the CustomerNumber works just fine:\r\n```\r\n    <input asp-for=\"CustomerNumber\" id=\"params_customernumber\" />\r\n```\r\n6) If I set the value directly in the Invoke function, instead of passing the model to the Invoke function, it works... so can someone please tell me why setting the value on the model in the Controller, then returning the ViewComponent seemingly passes the value all the way through, but can't output it with an input TagHelper?\r\n","Url":"https://github.com/aspnet/Razor/issues/2556","RelatedDescription":"Closed issue \"POST Model to Controller from HTML form, then pass to ViewComponent Invoke: in View, HtmlHelper outputs value properly, but TagHelper does not.\" (#2556)"},{"Id":"356330193","IsPullRequest":false,"CreatedAt":"2018-09-03T01:14:09","Actor":"rynowak","Number":"2566","RawContent":null,"Title":"Assert hit rewriting tag helpers (in VS)","State":"open","Body":"https://github.com/aspnet/Razor/blob/master/src/Microsoft.AspNetCore.Razor.Language/Legacy/TagHelperParseTreeRewriter.cs#L141\r\n\r\nIt's possible to trigger this assert with some valid code:\r\n```\r\n<TemplatedTable Items=\"@Items\">\r\n    <Header><th>Col1</th><th>Col2</th><th>Col3</th></Header>\r\n    <Footer>\r\n        @if (ShowFooter)\r\n        { }\r\n        <tr><td>The</td><td></td><td>End</td></tr>\r\n    </Footer>\r\n</TemplatedTable>\r\n```\r\n\r\nIn this case `TemplatedTable` and `Footer` are both tag helpers created from a Blazor component. Putting the cursor at the end of `@if (ShowFooter)` and typing `{` (let vs complete the matching `}`. Deleting the `}` again will rethrow the assert.\r\n\r\nIt looks like what's happening is that the change triggers a full reparse, which changes the context of `</Footer>` which makes the tag helper invalid. \r\n\r\nThis seems like a less than great way for us to do error recovery on an unclosed code-block. It would be better to terminate the code block once we see an unpaired closing tag. ","Url":"https://github.com/aspnet/Razor/issues/2566","RelatedDescription":"Open issue \"Assert hit rewriting tag helpers (in VS)\" (#2566)"},{"Id":"356278444","IsPullRequest":true,"CreatedAt":"2018-09-02T12:27:17","Actor":"benaadams","Number":"2565","RawContent":null,"Title":"Don't capture asynclocals onto Timer","State":"open","Body":"Pattern is a workaround for not having api https://github.com/dotnet/corefx/issues/26523\r\n\r\nAlso a bit less captured scope onto the Task.StartNew\r\n\r\n/cc @davidfowl ","Url":"https://github.com/aspnet/Razor/pull/2565","RelatedDescription":"Open PR \"Don't capture asynclocals onto Timer\" (#2565)"},{"Id":"356009608","IsPullRequest":false,"CreatedAt":"2018-08-31T14:45:16","Actor":"QuickWire","Number":"2564","RawContent":null,"Title":"Problem with referencing a COM object from ASP.NET Core 2.1 Targeting  .NET 461.","State":"open","Body":"Hi, I've found that just adding a reference to a COM object causes the build to fail with this single error:\r\n\r\n> …\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error : The assembly path obj\\Debug\\net461\\win7-x86\\Interop.MyComLib.dll is invalid. Assembly paths must be rooted.\r\n\r\nAs a quick work-around I disabled the error in **RazorTagHelper.cs**, rebuilt and replaced my current 2.1.2\\tasks\\netstandard2.0\\Microsoft.AspNetCore.Razor.Tasks.dll\r\nIt’s unclear to me where the path of the referenced COM import library is stored let alone created. Maybe the “rooted assembly path” check should verify it’s not a COM object first?\r\n\r\n```\r\n   // My work-around is:\r\n       protected override bool ValidateParameters()\r\n        {\r\n           ...\r\n            for (var i = 0; i < Assemblies.Length; i++)\r\n            {\r\n                if (!Path.IsPathRooted(Assemblies[i]))\r\n                {\r\n                    // my COM object doesn't seem to have a rooted path and this fails - so lets make it a warning instead\r\n                    //Log.LogError(\"The assembly path {0} is invalid. Assembly paths must be rooted.\", Assemblies[i]);\r\n                    //return false;\r\n                    Log.LogWarning(\"The assembly path {0} is invalid. Assembly paths must be rooted.\", Assemblies[i]);\r\n                }\r\n            }\r\n\r\n```\r\n","Url":"https://github.com/aspnet/Razor/issues/2564","RelatedDescription":"Open issue \"Problem with referencing a COM object from ASP.NET Core 2.1 Targeting  .NET 461.\" (#2564)"},{"Id":"355742073","IsPullRequest":true,"CreatedAt":"2018-08-30T20:29:33","Actor":"rynowak","Number":"2563","RawContent":null,"Title":"[Discussion/Prototype] Feature/utf 8","State":"open","Body":"","Url":"https://github.com/aspnet/Razor/pull/2563","RelatedDescription":"Open PR \"[Discussion/Prototype] Feature/utf 8\" (#2563)"},{"Id":"355318373","IsPullRequest":false,"CreatedAt":"2018-08-29T23:00:47","Actor":"FreshRob","Number":"2561","RawContent":null,"Title":"Parent Taghelper Suppressing output after exception returns empty 200 page","State":"closed","Body":"When a parent taghelper renders a child taghelper which throws an exception\r\nAnd and Parent tag helper has a try cache to suppress the output it,\r\nThen entire page returns an empty 200\r\n\r\nTested \r\n2.0.9\r\n2.1.3\r\n\r\n``` csharp\r\nusing System;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Razor.TagHelpers;\r\nusing Microsoft.Extensions.Logging;\r\n\r\nnamespace WebApplication1\r\n{\r\n    [HtmlTargetElement(\"parent-tag\", TagStructure = TagStructure.NormalOrSelfClosing)]\r\n    public class ParentTagTagHelper : TagHelper\r\n    {\r\n        private readonly ILogger _logger;\r\n\r\n        public ParentTagTagHelper(ILogger<ParentTagTagHelper> logger)\r\n        {\r\n            _logger = logger;\r\n        }\r\n        public override async Task ProcessAsync(TagHelperContext context, TagHelperOutput output)\r\n        {\r\n            try\r\n            {\r\n                (await output.GetChildContentAsync()).GetContent();\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                _logger.LogError(\"child tag helper failed\", e);\r\n                output.SuppressOutput();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n``` csharp\r\nusing System;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing Microsoft.AspNetCore.Mvc.ViewFeatures;\r\nusing Microsoft.AspNetCore.Razor.TagHelpers;\r\n\r\nnamespace WebApplication1\r\n{\r\n    [HtmlTargetElement(\"child-tag\")]\r\n    public class ChildTagTagHelper : TagHelper\r\n    {\r\n        private readonly IHtmlHelper _htmlHelper;\r\n\r\n\r\n        [ViewContext]\r\n        public ViewContext ViewContext { get; set; }\r\n\r\n        public ChildTagTagHelper(IHtmlHelper htmlHelper)\r\n        {\r\n            _htmlHelper = htmlHelper;\r\n        }\r\n\r\n        public override async Task ProcessAsync(TagHelperContext context, TagHelperOutput output)\r\n        {\r\n           throw new Exception();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n```\r\n\r\n``` html\r\n<parent-tag>\r\n                <child-tag></child-tag>\r\n            </parent-tag>\r\n```\r\n","Url":"https://github.com/aspnet/Razor/issues/2561","RelatedDescription":"Closed issue \"Parent Taghelper Suppressing output after exception returns empty 200 page\" (#2561)"},{"Id":"355360888","IsPullRequest":true,"CreatedAt":"2018-08-29T23:00:16","Actor":"NTaylorMullen","Number":"2562","RawContent":null,"Title":"Allow content to be written after caught exception from child TagHelper.","State":"closed","Body":"- The issue was that the `executeChildContentAsync` call was stopping the invocation of the `_endTagHelperWritingScope`. Therefore, we'd never finish the TagHelper content scope and all following content would be ignored.\r\n- Added two tests to validate the new functionality.\r\n\r\n#2561","Url":"https://github.com/aspnet/Razor/pull/2562","RelatedDescription":"Closed or merged PR \"Allow content to be written after caught exception from child TagHelper.\" (#2562)"},{"Id":"354897794","IsPullRequest":true,"CreatedAt":"2018-08-28T21:00:32","Actor":"ajaybhargavb","Number":"2560","RawContent":null,"Title":" Renamed HtmlTextSyntax to HtmlTextLiteralSyntax for consistency","State":"closed","Body":"Nothing to see here. Just a rename for consistency with the csharp nodes\r\n\r\nFYI","Url":"https://github.com/aspnet/Razor/pull/2560","RelatedDescription":"Closed or merged PR \" Renamed HtmlTextSyntax to HtmlTextLiteralSyntax for consistency\" (#2560)"},{"Id":"354884637","IsPullRequest":false,"CreatedAt":"2018-08-28T20:09:25","Actor":"TheJayMann","Number":"2559","RawContent":null,"Title":"Razor Language Service does not appear to work with cshtml files in fsproj project","State":"open","Body":"I have noticed for a while now that when attempting to use Giraffe.Razor to make views for a Giraffe web application, the cshtml files themselves have no intellisense or formatting outside of basic html.  After playing around a bit with adding ProjectCapability elements directly to the fsproj, I noticed if I add CSharp as a project capability and reopening the project in Visual Studio (as adding this capability tends to crash Visual Studio the moment a cshtml file is open, or immediately if one is already open), the cshtml file now gets basic razor formatting in addition to the html formatting, but no csharp intellisense, and all fs files only get basic fsharp formatting with no intellisense.\r\n\r\nI would like to request that somehow Razor Language Service could somehow be made to work for this situation.  Having the design time editor treat the files as simply html files with no knowledge of how the razor or csharp bits work makes the use of Razor templates nearly worthless to me.","Url":"https://github.com/aspnet/Razor/issues/2559","RelatedDescription":"Open issue \"Razor Language Service does not appear to work with cshtml files in fsproj project\" (#2559)"},{"Id":"354855777","IsPullRequest":false,"CreatedAt":"2018-08-28T18:44:32","Actor":"ajaybhargavb","Number":"2558","RawContent":null,"Title":"Directive usage errors need to appear in runtime too","State":"open","Body":"There are cases like https://github.com/aspnet/Razor/issues/2539#issuecomment-416384015 when using directives as variables in cshtml results in a weird csharp error at runtime. Instead we should provide a Razor error like it does during design time.\r\n\r\ncc @dougbu @NTaylorMullen ","Url":"https://github.com/aspnet/Razor/issues/2558","RelatedDescription":"Open issue \"Directive usage errors need to appear in runtime too\" (#2558)"},{"Id":"353518500","IsPullRequest":false,"CreatedAt":"2018-08-28T16:24:05","Actor":"BenjaminCharlton","Number":"2554","RawContent":null,"Title":"rzc discover exited with code 1","State":"closed","Body":"Hi!\r\n\r\nI'd really appreciate some guidance please because I have a build error and didn't find any matching hits on Google for `rzc discover exited with code 1`\r\n\r\nI'm running Visual Studio 2017 Community Edition. My project is ASP. NET Angular. I have a single build error that refers to code that I didn't write myself (it's part of the template). The error is:\r\n\r\n```\r\nrzc discover exited with code 1.\r\nC:\\Users\\USER\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets\r\nLine 69\t\r\n```\r\n\r\nWhen I double click on the error message it takes me to this line of code below. I copied the subsequent lines too because they form part of the same XML tag.\r\n\r\n   ```\r\n <RazorTagHelper\r\n      Debug=\"$(_RazorDebugTagHelperTask)\"\r\n      DebugTool=\"$(_RazorDebugTagHelperTool)\"\r\n      ToolAssembly=\"$(_RazorToolAssembly)\"\r\n      UseServer=\"$(UseRazorBuildServer)\"\r\n      ForceServer=\"$(_RazorForceBuildServer)\"\r\n      SuppressCurrentUserOnlyPipeOptions=\"$(_RazorSuppressCurrentUserOnlyPipeOptions)\"\r\n      PipeName=\"$(_RazorBuildServerPipeName)\"\r\n      Version=\"$(RazorLangVersion)\"\r\n      Configuration=\"@(ResolvedRazorConfiguration)\"\r\n      Extensions=\"@(ResolvedRazorExtension)\"\r\n      Assemblies=\"@(RazorReferencePath)\"\r\n      ProjectRoot=\"$(MSBuildProjectDirectory)\"\r\n      TagHelperManifest=\"$(_RazorTagHelperOutputCache)\">\r\n```\r\n\r\nI can't imagine what might be wrong with it as I didn't change anything in this file. It appears to be related to Razor so I posted my problem here. Can anybody spot why my project won't build or know a way to fix it, please? It'd really help me out!\r\n\r\nMany thanks\r\n\r\nBenjamin","Url":"https://github.com/aspnet/Razor/issues/2554","RelatedDescription":"Closed issue \"rzc discover exited with code 1\" (#2554)"},{"Id":"354470607","IsPullRequest":false,"CreatedAt":"2018-08-27T20:42:42","Actor":"benaadams","Number":"2557","RawContent":null,"Title":"Generate Page classes as sealed","State":"open","Body":"None of the virtual/overriden properties or methods on a Page are inlinable (as they are virtual); if the generated Page was `sealed` they would be.\r\n\r\nThe non-inlinablity causes crazy call counts for moderate sized pages e.g.\r\n\r\nFor 9k requests of a Razor Page\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/44684663-8f629980-aa41-11e8-9bb7-5ee0387ed2b2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/44684807-eec0a980-aa41-11e8-8dce-36dbd956aa1a.png)\r\n\r\n/cc @rynowak @davidfowl ","Url":"https://github.com/aspnet/Razor/issues/2557","RelatedDescription":"Open issue \"Generate Page classes as sealed\" (#2557)"},{"Id":"351901259","IsPullRequest":false,"CreatedAt":"2018-08-27T18:36:30","Actor":"ryanbrandenburg","Number":"2548","RawContent":null,"Title":"Test failure: Publish_WithP2P_WorksWhenBuildProjectReferencesIsDisabled","State":"closed","Body":"This test [fails](http://aspnetci/viewLog.html?buildId=535151&buildTypeId=Lite_UniverseTest) occasionally with the following error:\r\n```\r\nMicrosoft.AspNetCore.Razor.Design.IntegrationTests.Assert+BuildFailedException : Build failed.\r\ndotnet msbuild /nr:false /p:RunningAsTest=true /p:MicrosoftNETCoreAppVersion=2.2.0-preview1-26618-02 /p:NETStandardLibraryPackageVersion=2.0.3 /restore /p:_RazorBuildServerPipeName=\"acf072b6-7901-447a-900d-2b4b9daf26d4\" /p:Configuration=Release \r\nMicrosoft (R) Build Engine version 15.8.166+gd4e8d81a88 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n  Restoring packages for C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\ClassLibrary\\ClassLibrary.csproj...\r\n  Restoring packages for C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\AppWithP2PReference\\AppWithP2PReference.csproj...\r\n  Restoring packages for C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\ClassLibrary2\\ClassLibrary2.csproj...\r\n  Generating MSBuild file C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\AppWithP2PReference\\obj\\AppWithP2PReference.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\ClassLibrary\\obj\\ClassLibrary.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\ClassLibrary\\obj\\ClassLibrary.csproj.nuget.g.targets.\r\n  Generating MSBuild file C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\AppWithP2PReference\\obj\\AppWithP2PReference.csproj.nuget.g.targets.\r\n  Restore completed in 338.65 ms for C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\ClassLibrary\\ClassLibrary.csproj.\r\n  Restore completed in 331.25 ms for C:\\b\\t\\buildTmp\\Razor\\22ciet4t.4n4\\AppWithP2PReference\\AppWithP2PReference.csproj.\r\n   at Microsoft.AspNetCore.Razor.Design.IntegrationTests.Assert.BuildPassed(MSBuildResult result) in /_/test/Microsoft.AspNetCore.Razor.Design.Test/IntegrationTests/Assert.cs:line 27\r\n   at Microsoft.AspNetCore.Razor.Design.IntegrationTests.PublishIntegrationTest.Publish_WithP2P_WorksWhenBuildProjectReferencesIsDisabled() in /_/test/Microsoft.AspNetCore.Razor.Design.Test/IntegrationTests/PublishIntegrationTest.cs:line 378\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\nOther tests within that build may have failed with a similar message, but they are not listed here. Check the link above for more info.\r\n\r\nThis test failed on master.\r\n\r\nCC @mkArtakMSFT\n\nThis issue was made automatically. If there is a problem contact ryanbrandenburg.","Url":"https://github.com/aspnet/Razor/issues/2548","RelatedDescription":"Closed issue \"Test failure: Publish_WithP2P_WorksWhenBuildProjectReferencesIsDisabled\" (#2548)"},{"Id":"353951111","IsPullRequest":true,"CreatedAt":"2018-08-24T23:02:06","Actor":"ajaybhargavb","Number":"2555","RawContent":null,"Title":"Renamed WhiteSpace to Whitespace","State":"closed","Body":"This was inconsistent with other places. Changed it to the correct casing. I didn't change the public facing one.\r\n\r\nFYI only\r\n\r\n@NTaylorMullen ","Url":"https://github.com/aspnet/Razor/pull/2555","RelatedDescription":"Closed or merged PR \"Renamed WhiteSpace to Whitespace\" (#2555)"},{"Id":"353415148","IsPullRequest":false,"CreatedAt":"2018-08-23T14:43:44","Actor":"danjohnso","Number":"2553","RawContent":null,"Title":"Referencing different versions of Razor.Design causes builds to fail","State":"open","Body":"We are on TFS 2018 and after updating our .NET Core SDK to 2.1.401 and updating the relevant packages in our solution, the build server is unable to build our web project.  Error is identical to this issue in the blazor project (https://github.com/aspnet/Blazor/issues/1298), but we are not using blazor.  Worst part is it is intermittent.  I will try changing setting or clearing nuget caches or repairing the sdk and it might work for one build, but then any subsequent build with no code or environment changes will fail.  Running the dotnet build command manually from cmd as the agent user will usually succeed and not run into this issue.  \r\n\r\n```\r\nC:\\Users\\tfsagent\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB4062: The \"Microsoft.AspNetCore.Razor.Tasks.RazorTagHelper\" task could not be loaded from the assembly C:\\Users\\tfsagent\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\..\\..\\\\tasks\\netstandard2.0\\Microsoft.AspNetCore.Razor.Tasks.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [D:\\agent\\_work\\6\\s\\TES\\TES.Web\\TES.Web.csproj]\r\nBuild FAILED.\r\nC:\\Users\\tfsagent\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB4062: The \"Microsoft.AspNetCore.Razor.Tasks.RazorTagHelper\" task could not be loaded from the assembly C:\\Users\\tfsagent\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\..\\..\\\\tasks\\netstandard2.0\\Microsoft.AspNetCore.Razor.Tasks.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [D:\\agent\\_work\\6\\s\\TES\\TES.Web\\TES.Web.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\nTime Elapsed 00:00:04.46\r\nError: C:\\Program Files\\dotnet\\dotnet.exe failed with return code: 1\r\n```","Url":"https://github.com/aspnet/Razor/issues/2553","RelatedDescription":"Open issue \"Referencing different versions of Razor.Design causes builds to fail\" (#2553)"},{"Id":"351562256","IsPullRequest":false,"CreatedAt":"2018-08-22T21:42:52","Actor":"josejmoran","Number":"2544","RawContent":null,"Title":"Update the Razor template to use latest Bootstrap 4.1.3","State":"closed","Body":"It will be great if we can have the template make use of the latest Bootstrap 4.1.3.","Url":"https://github.com/aspnet/Razor/issues/2544","RelatedDescription":"Closed issue \"Update the Razor template to use latest Bootstrap 4.1.3\" (#2544)"},{"Id":"352747446","IsPullRequest":true,"CreatedAt":"2018-08-22T01:39:25","Actor":"dotnet-maestro-bot","Number":"2552","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @natemcmaster\n* @aspnetci\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Razor merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Razor.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Razor/pull/2552","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2552)"},{"Id":"352740901","IsPullRequest":true,"CreatedAt":"2018-08-21T22:59:03","Actor":"natemcmaster","Number":"2551","RawContent":null,"Title":"Allow building this repo with VS 15.x","State":"closed","Body":"This is more like an FYI PR. We need this change because our CI environments have updated or will update soon to VS 15.8","Url":"https://github.com/aspnet/Razor/pull/2551","RelatedDescription":"Closed or merged PR \"Allow building this repo with VS 15.x\" (#2551)"},{"Id":"352348235","IsPullRequest":true,"CreatedAt":"2018-08-21T21:20:34","Actor":"ajaybhargavb","Number":"2550","RawContent":null,"Title":"Auto generate CSharp syntax tree nodes","State":"closed","Body":"#2508 \r\n\r\n- Auto generated syntax nodes, visitors and factories\r\n- Renamed RazorComment to RazorCommentLiteral to avoid a conflict\r\n- Modified the Visit() contract\r\n- Added new SyntaxKinds\r\n- Regenerated baselines","Url":"https://github.com/aspnet/Razor/pull/2550","RelatedDescription":"Closed or merged PR \"Auto generate CSharp syntax tree nodes\" (#2550)"},{"Id":"352316652","IsPullRequest":false,"CreatedAt":"2018-08-20T22:18:28","Actor":"JeanCollas","Number":"2549","RawContent":null,"Title":"Datatemplating","State":"open","Body":"In XAML it is quite easy to use datatemplate on items. \r\nIn Razor, it does not seem possible to do it without including an external view/component.\r\n\r\nIt is quite often that I get several `foreach` on a page, with the same kind of items, and using razor, I have to repeat the same template several times, it is not very handy.\r\n\r\nI would see something similar to functions:\r\n\r\n```csharp\r\n@templates {\r\n     EventItemTemplate(string name, DateTime time, string place) {\r\n         <div class=\"event\">\r\n              <div class=\"event-name\">@name</div>\r\n              <div class=\"event-time\">@time.ToString(\"g\")</div>\r\n              <div class=\"event-place\">@place</div>\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=\"events\">\r\n    <div class=\"events-title\">Coming events and in progress</div>\r\n    @foreach(var e in events.Where(e2=>e2.EndTime > DateTime.UtcNow)) \r\n    {\r\n        @EventItemTemplate(e.Name, e.Start, e.Place)\r\n    }\r\n</div>\r\n\r\n<div class=\"events\">\r\n    <div class=\"events-title\">Past events</div>\r\n    @foreach(var e in events.Where(e2=>e2.EndTime < DateTime.UtcNow)) \r\n    {\r\n        @EventItemTemplate(e.Name, e.Start, e.Place)\r\n    }\r\n</div>\r\n\r\n```\r\n\r\nIt would highly simplify the display of a structure like this:\r\n\r\nbuilding.cs \r\n```csharp\r\npublic class Building\r\n{\r\n    public string Address {get;set;}\r\n    public List<Floor> Floors {get;set;}\r\n}\r\npublic class Floor\r\n{\r\n    public string Number {get;set;}\r\n    public List<Premise> Premises {get;set;}\r\n}\r\npublic class Premise\r\n{\r\n    public string Door {get;set;}\r\n    public string Owner {get;set;}\r\n    public List<string> Residents {get;set;}\r\n}\r\n```\r\n\r\nbuilding.cshtml\r\n\r\n```csharp\r\n@templates {\r\n     BuildingTemplate(Building b) {\r\n         <div class=\"building\">\r\n              <div class=\"building-name\">@b.Name</div>\r\n              <div class=\"building-floors\">\r\n               @foreach(var f in p.Floors)\r\n               {\r\n                  @FloorTemplate(f)\r\n               }\r\n              </div>\r\n         <div>\r\n     }\r\n     FloorTemplate(Floor f) {\r\n         <div class=\"floor\">\r\n              <div class=\"floor-number\">@f.Number</div>\r\n              <div class=\"floor-premises\">\r\n               @foreach(var p in f.Premises)\r\n               {\r\n                  @PremiseTemplate(p)\r\n               }\r\n              </div>\r\n         <div>\r\n     }\r\n     PremiseTemplate(Premise p) {\r\n         <div class=\"premise\">\r\n              <div class=\"premise-door\">@p.Door</div>\r\n              <div class=\"premise-owner\">@p.Owner</div>\r\n              <div class=\"premise-residents\">\r\n               @foreach(var r in p.Resident)\r\n               {\r\n                     <span class=\"premise-resident\">@r</span>\r\n               }\r\n              </div>\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=\"buildings left-side\">\r\n    @foreach(var b in Model.BuildingsLeft) \r\n    {\r\n        @BuildingTemplate(b)\r\n    }\r\n</div>\r\n\r\n<div class=\"buildings right-side\">\r\n    @foreach(var b in Model.BuildingsRight) \r\n    {\r\n        @BuildingTemplate(b)\r\n    }\r\n</div>\r\n```\r\n\r\nIt may allow recursive templates\r\n\r\n```csharp\r\n@templates {\r\n     CommentItemTemplate(CommentViewModel comment) {\r\n         <div class=\"comment\">\r\n              <div class=\"comment-name\">By: @name</div>\r\n              <div class=\"comment-time\">@time.ToString(\"g\")</div>\r\n              @if(comment.Comments?.Count>0)\r\n              {\r\n                  <div class=\"comment-subcomments\">\r\n                  @foreach(var c in comment.Comments)\r\n                  {\r\n                          @CommentItemTemplate(c)\r\n                  }\r\n                  </div>\r\n              }\r\n         <div>\r\n     }\r\n}\r\n\r\n<div class=\"comments\">\r\n    <div class=\"comments-title\">Comments</div>\r\n    @foreach(var c in Model.Comments) \r\n    {\r\n        @CommentItemTemplate(c)\r\n    }\r\n</div>\r\n```\r\nIn that specific case, component may be a better choice of implementation, but that is just an example.\r\n\r\nGlobally defined c# variables may be available or not, depending on language constraints. If not available, they can still be passed as parameters anyway.\r\n\r\nIt seems quite clean to me, does it conflict the current language in any way?","Url":"https://github.com/aspnet/Razor/issues/2549","RelatedDescription":"Open issue \"Datatemplating\" (#2549)"},{"Id":"351561776","IsPullRequest":false,"CreatedAt":"2018-08-20T16:36:26","Actor":"josejmoran","Number":"2543","RawContent":null,"Title":"Add a CSS Grid Layout template for new projects","State":"closed","Body":"It will be great to have a template for creating new projects where the Razor pages make use of CSS Grid Layout and CSS only without the use of javascript libraries: No bootstrap, No jquery, just core technologies.","Url":"https://github.com/aspnet/Razor/issues/2543","RelatedDescription":"Closed issue \"Add a CSS Grid Layout template for new projects\" (#2543)"},{"Id":"351733595","IsPullRequest":true,"CreatedAt":"2018-08-17T22:17:27","Actor":"dotnet-maestro-bot","Number":"2547","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master.\r\nI'm a robot and am configured to help you automatically keep master up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @ajaybhargavb\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout master\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Razor merge/release/2.2-to-master:merge/release/2.2-to-master\r\ngit merge merge/release/2.2-to-master\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.2-to-master' on https://github.com/dotnet-maestro-bot/Razor.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.2.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Razor/pull/2547","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2547)"},{"Id":"351723914","IsPullRequest":true,"CreatedAt":"2018-08-17T20:16:09","Actor":"dotnet-maestro-bot","Number":"2546","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2.\r\nI'm a robot and am configured to help you automatically keep release/2.2 up to date, so\r\nI've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @ajaybhargavb\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR\r\nby creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n```\r\ngit checkout release/2.2\r\ngit pull\r\ngit fetch --force https://github.com/dotnet-maestro-bot/Razor merge/release/2.1-to-release/2.2:merge/release/2.1-to-release/2.2\r\ngit merge merge/release/2.1-to-release/2.2\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging.\r\nYou can do this [using GitHub](https://help.github.com/articles/resolving-a-merge-conflict-on-github/)\r\nor using the [command line](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/).\r\n\r\nMaintainers of this repo have permission to the branch 'merge/release/2.1-to-release/2.2' on https://github.com/dotnet-maestro-bot/Razor.\r\nYou can push changes to this branch to resolve conflicts or other issues in this pull request. The bot will attempt\r\nto update this branch as more changes are discovered on release/2.1.\r\n\r\nPlease contact ASP.NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/aspnet/BuildTools/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Razor/pull/2546","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#2546)"},{"Id":"351684929","IsPullRequest":true,"CreatedAt":"2018-08-17T20:11:03","Actor":"ajaybhargavb","Number":"2545","RawContent":null,"Title":"[Port] Skip BuildIncremental_SimpleMvc_PersistsTargetInputFile on xplat","State":"closed","Body":"For some inexplicable reason timestamps returned as part of the test often show up\r\nas being different resulting in test flakiness. We've manually verified that this\r\nis not a product issue and builds are correctly incremental on xplat. See #2219\r\nfor past discussions.\r\n\r\nFixes https://github.com/aspnet/Razor/issues/2527\r\n\r\nFYI @mkArtakMSFT ","Url":"https://github.com/aspnet/Razor/pull/2545","RelatedDescription":"Closed or merged PR \"[Port] Skip BuildIncremental_SimpleMvc_PersistsTargetInputFile on xplat\" (#2545)"},{"Id":"351307832","IsPullRequest":true,"CreatedAt":"2018-08-16T18:27:34","Actor":"ajaybhargavb","Number":"2542","RawContent":null,"Title":"Update korebuild VS version range","State":"closed","Body":"This removes the requirement to have a 15.7 VS to build the VSIX","Url":"https://github.com/aspnet/Razor/pull/2542","RelatedDescription":"Closed or merged PR \"Update korebuild VS version range\" (#2542)"},{"Id":"351009436","IsPullRequest":true,"CreatedAt":"2018-08-16T00:27:27","Actor":"ajaybhargavb","Number":"2541","RawContent":null,"Title":"Update VSIX build langversion to 7.2","State":"closed","Body":"We now use some 7.2 features and it is sometimes failing in VSTS CI","Url":"https://github.com/aspnet/Razor/pull/2541","RelatedDescription":"Closed or merged PR \"Update VSIX build langversion to 7.2\" (#2541)"}],"ResultType":"GitHubIssue"},"Templates-Issues":{"Issues":[{"Id":"266880667","IsPullRequest":true,"CreatedAt":"2017-10-24T21:42:12","Actor":"s-whaley","Number":"873","RawContent":null,"Title":"Account AccessDenied View Razor Syntax Bug Fix","State":"closed","Body":"views/account/accessdenied ViewData[title] missing @ symbol","Url":"https://github.com/aspnet/Templates/pull/873","RelatedDescription":"Closed or merged PR \"Account AccessDenied View Razor Syntax Bug Fix\" (#873)"},{"Id":"267855162","IsPullRequest":false,"CreatedAt":"2017-10-24T19:00:48","Actor":"ezeasharma","Number":"874","RawContent":null,"Title":"The project file could not be loaded for csproj","State":"closed","Body":"I migrated my .netcore 1.1 proj to 2.0 using this link https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/\r\n\r\nbut when i perform \"dotnet restore -v d\" i get the following error:\r\n\r\n```\r\nBuild started 10/23/2017 19:57:01.\r\n     1>Project \"someproj.csproj\" on node 1 (Restore target(s)).\r\n     1>Building with tools version \"15.0\".\r\n     1>someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n     1>Done Building Project \"someproj.csproj\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/someproj/someproj.csproj\" (Restore target) (1) ->\r\n         /someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nHere is the output for dotnet --info\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nThis is my csproj file\r\n```\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n    <Folder Include=\"swagger_static\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Serilog\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"Serilog.Extensions.Logging\" Version=\"1.4.0\" />\r\n    <PackageReference Include=\"Serilog.Sinks.Console\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"1.0.0\" />\r\n    <PackageReference Include=\"Dapper\" Version=\"1.50.2\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"System.Threading\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n  <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n</ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.common\\recon.curator.common.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.service\\recon.curator.service.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```","Url":"https://github.com/aspnet/Templates/issues/874","RelatedDescription":"Closed issue \"The project file could not be loaded for csproj\" (#874)"},{"Id":"232879172","IsPullRequest":false,"CreatedAt":"2017-10-24T16:37:14","Actor":"a-elnajjar","Number":"847","RawContent":null,"Title":"Post test ","State":"closed","Body":"Hi asp.net Team;\r\nI see your Templates/test/Microsoft.Web.Templates.Web.Tests/WebAPITests.cs only have tow test methods for testing and verify GET Web API is working. I want to ask can I add testing and verify methods for POST Web API?","Url":"https://github.com/aspnet/Templates/issues/847","RelatedDescription":"Closed issue \"Post test \" (#847)"},{"Id":"252192148","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:47","Actor":"Dave3of5","Number":"864","RawContent":null,"Title":"Authentication on SPA apps","State":"closed","Body":"There seems to be no template for authentication on the SPA templates.\r\n\r\nI've been looking up various blog post and third party articles on how to add Jwt Authentication but they are scattered and most are for dotnet core 1.1. It would be nice if there was a template that showed the \"correct\" way to do this in dotnet core 2.0.","Url":"https://github.com/aspnet/Templates/issues/864","RelatedDescription":"Closed issue \"Authentication on SPA apps\" (#864)"},{"Id":"252376700","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:23","Actor":"pejta2207","Number":"865","RawContent":null,"Title":"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token","State":"closed","Body":"**Description**\r\nThe issue is related to Individual Accounts Authentication template. It seems that providing incorrect authentication code for ConfirmEmail action in AccountController (e.g. token which already expired) should result in displaying error page. However, Razor throws an exception while generating the default error view:\r\n\r\n```\r\nNullReferenceException: Object reference not set to an instance of an object.\r\nAspNetCore._Views_Shared_Error_cshtml+<ExecuteAsync>d__0.MoveNext() in Error.cshtml, line 9\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Create new project with Individual Accounts Authentication template.\r\n2. Run the application.\r\n3. Register any user via the registration form.\r\n4. Retrieve UserId of the registered user.\r\n5. Try to confirm email with incorrect token, e.g. http://localhost:PORT/Account/ConfirmEmail?UserId={UserId}&Code=INVALID_CODE\r\n\r\n**Further technical details**\r\nIt's probably caused by the last line in ConfirmEmail action in AccountController:\r\n```\r\nvar result = await _userManager.ConfirmEmailAsync(user, code);\r\nreturn View(result.Succeeded ? \"ConfirmEmail\" : \"Error\");\r\n```\r\n\r\nWhen invalid token is passed, Error view is not provided with `ErrorViewModel`. When `Model` is accessed in 9th line of Error.cshtml (`@if (Model.ShowRequestId)`), it throws NullReferenceException.","Url":"https://github.com/aspnet/Templates/issues/865","RelatedDescription":"Closed issue \"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token\" (#865)"},{"Id":"260997320","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:05","Actor":"joeaudette","Number":"868","RawContent":null,"Title":"IEmailSender should have explicitly named parameters for html vs plain text","State":"closed","Body":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217","Url":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Closed issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868)"},{"Id":"268102418","IsPullRequest":false,"CreatedAt":"2017-10-24T16:35:17","Actor":"Eilon","Number":"875","RawContent":null,"Title":"This repo is OBSOLETE - please see the README file for information","State":"open","Body":"Please refer to the README at https://github.com/aspnet/Templates for information.","Url":"https://github.com/aspnet/Templates/issues/875","RelatedDescription":"Open issue \"This repo is OBSOLETE - please see the README file for information\" (#875)"},{"Id":"266114525","IsPullRequest":false,"CreatedAt":"2017-10-21T00:03:24","Actor":"tverboon","Number":"872","RawContent":null,"Title":"Unnecessary User.Id provided in password reset link?","State":"closed","Body":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary.","Url":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Closed issue \"Unnecessary User.Id provided in password reset link?\" (#872)"},{"Id":"265394026","IsPullRequest":false,"CreatedAt":"2017-10-13T20:09:16","Actor":"jkotalik","Number":"871","RawContent":null,"Title":"Add HttpsRedirection and HSTS middleware template","State":"closed","Body":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher ","Url":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871)"},{"Id":"264318035","IsPullRequest":true,"CreatedAt":"2017-10-10T17:47:02","Actor":"scottsauber","Number":"870","RawContent":null,"Title":"Change Lockout wording of comment","State":"open","Body":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want.","Url":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Open PR \"Change Lockout wording of comment\" (#870)"},{"Id":"262627101","IsPullRequest":false,"CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Number":"869","RawContent":null,"Title":"QR Codes should be supported in templates","State":"closed","Body":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments","Url":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869)"},{"Id":"254163608","IsPullRequest":false,"CreatedAt":"2017-09-07T12:16:42","Actor":"elAndyG","Number":"866","RawContent":null,"Title":"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)","State":"closed","Body":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n","Url":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866)"},{"Id":"255851740","IsPullRequest":false,"CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Number":"867","RawContent":null,"Title":"Cannot force version of the template to install","State":"open","Body":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version","Url":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Open issue \"Cannot force version of the template to install\" (#867)"},{"Id":"251697737","IsPullRequest":true,"CreatedAt":"2017-08-22T14:57:33","Actor":"phenning","Number":"862","RawContent":null,"Title":"Use template engine templates","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/862","RelatedDescription":"Closed or merged PR \"Use template engine templates\" (#862)"},{"Id":"251783689","IsPullRequest":false,"CreatedAt":"2017-08-21T22:59:07","Actor":"GoshaFighten","Number":"863","RawContent":null,"Title":"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template","State":"closed","Body":"This issue relates to the [one](https://github.com/DevExpress/devextreme-angular/issues/534). I've created an Angular application using .NET Core 2.0. The issue is reproducible regardless if I use Visual Studio 2017 15.3 or `dotnet new angular`. Everything works fine in the Development mode. But, once I publish my application with the [DevExtreme Angular](https://github.com/DevExpress/devextreme-angular) package using `dotnet publish -c Release`, I'm getting the following error:\r\n\r\n```\r\n      ERROR in ./$$_gendir/~/devextreme-angular/ui/data-grid.ngfactory.ts\r\n      Module parse failed: D:\\FromCustomers\\GH534\\NGCore\\NGCore\\$$_gendir\\node_modules\\devextreme-angular\\ui\\data-grid.ngfactory.ts Unexpected token (63:38)\r\n      You may need an appropriate loader to handle this file type.\r\n      | import * as i52 from 'devextreme-angular/core/iterable-differ-helper';\r\n      | import * as i53 from 'devextreme-angular/core/nested-option';\r\n      | export const DxDataGridModuleNgFactory:i0.NgModuleFactory<i1.DxDataGridModule> = i0.╔╡cmf(i1.DxDataGridModule,\r\n      |     ([] as any[]),(_l:any) => {\r\n      |       return i0.╔╡mod([i0.╔╡mpd(512,i0.ComponentFactoryResolver,i0.╔╡CodegenComponentFactoryResolver,\r\n       @ ./$$_gendir/ClientApp/app/components/fetchdata/fetchdata.component.ngfactory.ts 8:0-102\r\n       @ ./$$_gendir/ClientApp/app/app.module.server.ngfactory.ts\r\n       @ ./ClientApp/boot.server.ts\r\nD:\\FromCustomers\\GH534\\NGCore\\NGCore\\NGCore.csproj(41,5): error MSB3073: The command \"node node_modules/webpack/bin/webpack.js --env.prod\" exited with code 2.\r\n```\r\n\r\nI added\r\n\r\n```\r\n\"devextreme\": \"^17.1.5\",\r\n\"devextreme-angular\": \"^17.1.5\",\r\n```\r\n\r\nto the `package.json` file. Then, I added DevExtreme CSS files to the `webpack.config.vendor.js` as\r\n\r\n```\r\nconst nonTreeShakableModules = [\r\n    'bootstrap',\r\n    'bootstrap/dist/css/bootstrap.css',\r\n    'es6-promise',\r\n    'es6-shim',\r\n    'event-source-polyfill',\r\n    'jquery',\r\n    'devextreme/dist/css/dx.common.css',\r\n    'devextreme/dist/css/dx.light.css'\r\n];\r\n```\r\n\r\nIf instead of the following line in the webpack.config.js file\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nI use\r\n\r\n```\r\n{ test: /\\.ts$/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nor\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] },\r\n```\r\n\r\neverything works fine. A similar configuration in a project created using Angular CLI works fine as well.\r\n\r\nThe attached `NGCore` project illustrates the issue and `test-app` created with Angular CLI illustrates that this works in a standard Angular CLI project after I call `ng eject`.\r\n\r\nWhat can be the problem here? Is it in DevExtreme modules or in your webpack configuration?\r\n[test-app.zip](https://github.com/aspnet/Templates/files/1240256/test-app.zip)\r\n[NGCore.zip](https://github.com/aspnet/Templates/files/1240259/NGCore.zip)\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/863","RelatedDescription":"Closed issue \"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template\" (#863)"},{"Id":"248880384","IsPullRequest":false,"CreatedAt":"2017-08-09T00:05:00","Actor":"Rick-Anderson","Number":"861","RawContent":null,"Title":"Razor Page scaffolder should add `@page \"{id:int}\"` directive","State":"closed","Body":"The RP scaffolder should add `@page \"{id:int}\"` directive so generated links pass the ID as route data, not query strings.\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/861","RelatedDescription":"Closed issue \"Razor Page scaffolder should add `@page \"{id:int}\"` directive\" (#861)"},{"Id":"248842171","IsPullRequest":false,"CreatedAt":"2017-08-08T20:59:26","Actor":"Rick-Anderson","Number":"860","RawContent":null,"Title":"Razor Pages scaffolder eats    DbUpdateConcurrencyException","State":"closed","Body":"Expected behavior:\r\nScaffolder should correctly handle `DbUpdateConcurrencyException`\r\n\r\nActual behavior:\r\n`DbUpdateConcurrencyException` is caught and ignored.\r\n\r\nTo repro: \r\n\r\n* Create a RP project and add a model.\r\n* [Scaffold the model](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model#add-scaffold-tooling-and-perform-initial-migration)\r\n\r\nThe *Edit.cshtml.cs* file contains the following code:\r\n\r\n```cs\r\npublic async Task<IActionResult> OnPostAsync()\r\n{\r\n    if (!ModelState.IsValid)\r\n    {\r\n        return Page();\r\n    }\r\n\r\n    _context.Attach(Movie).State = EntityState.Modified;\r\n\r\n    try\r\n    {\r\n        await _context.SaveChangesAsync();\r\n    }\r\n    catch (DbUpdateConcurrencyException)\r\n    {\r\n        \r\n    }\r\n\r\n    return RedirectToPage(\"./Index\");\r\n}\r\n```\r\nIt should be\r\n\r\n```cs\r\ncatch (DbUpdateConcurrencyException)\r\n        {\r\n            if (!MovieExists(movie.ID))\r\n            {\r\n                return NotFound();\r\n            }\r\n            else\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/aspnet/Templates/issues/860","RelatedDescription":"Closed issue \"Razor Pages scaffolder eats    DbUpdateConcurrencyException\" (#860)"},{"Id":"248139089","IsPullRequest":false,"CreatedAt":"2017-08-08T04:05:18","Actor":"alexavrutin","Number":"859","RawContent":null,"Title":"r1","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/issues/859","RelatedDescription":"Closed issue \"r1\" (#859)"},{"Id":"238353055","IsPullRequest":false,"CreatedAt":"2017-08-03T18:01:57","Actor":"stevedesmond-ca","Number":"851","RawContent":null,"Title":"Why do non-sentence headers end in a period?","State":"closed","Body":"See https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Views/Account/ResetPasswordConfirmation.cshtml as an example -- almost all the `<h1>`s have periods after them, when they should more likely be Title Case with no period.","Url":"https://github.com/aspnet/Templates/issues/851","RelatedDescription":"Closed issue \"Why do non-sentence headers end in a period?\" (#851)"},{"Id":"247185643","IsPullRequest":false,"CreatedAt":"2017-08-03T17:58:29","Actor":"Rick-Anderson","Number":"858","RawContent":null,"Title":"Razor Page templates use fully qualified name ","State":"closed","Body":"The constructor uses the FQN when it's not necessary. For example:\r\n\r\nSee [Pages/Movie/Index.cshtml.cs](https://github.com/aspnet/Docs/blob/master/aspnetcore/tutorials/razor-pages/razor-pages-start/sample/RazorPagesMovie/Pages/Movie/Index.cshtml.cs#L14-L16)\r\n\r\n`using RazorPagesMovie.Models;` is in the template.\r\n\r\nTo repro - follow the [Razor Pages tutorial](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model)\r\n","Url":"https://github.com/aspnet/Templates/issues/858","RelatedDescription":"Closed issue \"Razor Page templates use fully qualified name \" (#858)"},{"Id":"246217674","IsPullRequest":false,"CreatedAt":"2017-08-03T17:56:43","Actor":"Rick-Anderson","Number":"857","RawContent":null,"Title":"Templates should use app.UseMvcWithDefaultRoute();","State":"closed","Body":"I recommend the templates use `app.UseMvcWithDefaultRoute();` rather than\r\n\r\n```csharp\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(\r\n        name: \"default\",\r\n        template: \"{controller}/{action=Index}/{id?}\");\r\n});\r\n```\r\n\r\nThe more complex code is a barrier to entry for new users who don't need this flexibility. Advanced users will have no problem adding the above code when they need it. The code above doesn't make much sense to Razor Pages developers. Recommend this change for all templates but especially for the Razor Pages template.\r\n\r\ncc @DamianEdwards  - part of the lower the barrier to entry effort.","Url":"https://github.com/aspnet/Templates/issues/857","RelatedDescription":"Closed issue \"Templates should use app.UseMvcWithDefaultRoute();\" (#857)"},{"Id":"244917331","IsPullRequest":false,"CreatedAt":"2017-08-03T17:55:35","Actor":"RehanSaeed","Number":"856","RawContent":null,"Title":"Sharing Common Files Between Templates","State":"closed","Body":"I have a ReadMe.html file which I'd like to share between my project templates. The file is mostly the same for all three templates, except that it contains a few symbols common to all my templates. I'd like to keep one copy of this file and use symbols to define template specific sections.\r\n```\r\n<html>\r\n<p>Common paragraph...</p>\r\n<!--#if MyTemplate1-->\r\n<p>MyTemplate1 paragraph...</p>\r\n<!--#endif-->\r\n<!--#if MyTemplate2-->\r\n<p>MyTemplate2 paragraph...</p>\r\n<!--#endif-->\r\n</html>\r\n```\r\n\r\nI can think of a way this might work without any help from the templating engine: Keep a common copy of the file, then copy the file into the template folders as a pre-packaging step in my build script. The disadvantage is that now I have three copies of my file unless I use a .gitignores file but then I have the extra step of having to remove the .gitignores file from the template output.\r\n\r\nI propose that you should be able to add a file as a link, then mark that file as common in your template.json file. Finally, when generating the project, the file is converted from a linked file, into a real one.\r\n","Url":"https://github.com/aspnet/Templates/issues/856","RelatedDescription":"Closed issue \"Sharing Common Files Between Templates\" (#856)"},{"Id":"244134597","IsPullRequest":false,"CreatedAt":"2017-08-03T17:30:02","Actor":"jkotalik","Number":"855","RawContent":null,"Title":"File new template error for Windows 8.1 32 bit for individual auth.","State":"closed","Body":"Steps:\r\n\r\n1. Download VS2017 Int Preview and dotnet preview3 on Windows 8.1 32 bit.\r\n2. File new... ASP.NET Core app, Web Application with Individual User Accounts Authorization\r\n3. Run application, try to register a new user\r\n\r\nExpected Results: A page would show up saying to apply migrations to the database or the user is registered.\r\nActual Results: SqlException on the SQL Server not being found. \r\n![4fce5f97](https://user-images.githubusercontent.com/8302101/28383504-3b7bf12c-6c76-11e7-91d0-5fe2675924a2.PNG)\r\n\r\n\r\nThe fix I had to do was change the ConnectionStrings' DefaultConnection from mssqllocaldb to ProjectsV12. \r\n\r\nMost likely, we would need to change https://github.com/aspnet/Templates/blob/a594b47c417593d43141d3b4eb2bc41d6ad85f20/src/Rules/StarterWeb/IndividualAuth/appsettings.json#L3 to use a variable for the database.","Url":"https://github.com/aspnet/Templates/issues/855","RelatedDescription":"Closed issue \"File new template error for Windows 8.1 32 bit for individual auth.\" (#855)"},{"Id":"244047453","IsPullRequest":false,"CreatedAt":"2017-07-20T08:45:31","Actor":"dazinator","Number":"854","RawContent":null,"Title":"typescript confiugration file item template","State":"closed","Body":"When the typescript configuration file is added to a project, by default it is \"content\" which also by default means it ends up being included in the nuget package when you do a `dotnet pack`. Given that the typescript configuration file is used primarily at build time, I don't think it should be included in a resulting nuget pack by default. Can it be changed to create this in the `csproj`:\r\n\r\n```\r\n <ItemGroup>\r\n    <Content Update=\"Scripts\\tsconfig.json\">\r\n      <Pack>false</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n```\r\n\r\nWithout this, if another project takes a dependency on this nuget package, you get build errors like this:\r\n\r\n```\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tTS18003\tBuild:No inputs were found in config file 'C:/Users/darrell.tunnell/.nuget/packages/gluon.module.themeswitcher/2.0.0/contentFiles/any/net452/Scripts/tsconfig.json'. Specified 'include' paths were '[\"**/*\"]' and 'exclude' paths were '[\"node_modules\",\"wwwroot\"]'.\tReach.GCv3.Mvc.Module.CompanyLogo\tC:\\Users\\darrell.tunnell\\Source\\Repos\\gc3-website\\src\\Reach.GCv3.Mvc.Module.CompanyLogo\\tsc\t1\t\r\n\r\n\r\n```\r\n\r\ni.e VS is doscovering the typescript configuration files within referenced nuget packages!","Url":"https://github.com/aspnet/Templates/issues/854","RelatedDescription":"Closed issue \"typescript confiugration file item template\" (#854)"},{"Id":"240276652","IsPullRequest":true,"CreatedAt":"2017-07-05T16:50:58","Actor":"ryanbrandenburg","Number":"853","RawContent":null,"Title":"Remove PackageTargetFallback","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/853","RelatedDescription":"Closed or merged PR \"Remove PackageTargetFallback\" (#853)"},{"Id":"239518221","IsPullRequest":true,"CreatedAt":"2017-07-05T14:09:36","Actor":"scottaddie","Number":"852","RawContent":null,"Title":"Clarify password reset sentence in ForgotPassword view","State":"closed","Body":"The `ForgotPassword.cshtml` view includes a sentence which was missing a comma and reversed the words \"reset\" and \"password\".\r\n\r\n/cc: @phenning @mlorbetske ","Url":"https://github.com/aspnet/Templates/pull/852","RelatedDescription":"Closed or merged PR \"Clarify password reset sentence in ForgotPassword view\" (#852)"},{"Id":"233959214","IsPullRequest":false,"CreatedAt":"2017-06-06T16:59:43","Actor":"mlorbetske","Number":"850","RawContent":null,"Title":"File new default names inconsistency.","State":"open","Body":"_From @Bartmax on July 24, 2015 2:48_\n\nAll items in the file new dialog (client side) default names kind of follows a pattern but it's not consistent:\n\nStyleSheet.css\nJavaScript.js\nhtmlpage.html (all lowercase)\nCoffeeScript.coffee\njson-schema.json\npackage.json\netc.\n\nSome must have a specific name (like package.json) while others just reflect the file type. \n\nI see 2 inconsistencies here:\n\n1) casing is inconsistent.\n2) TypeScript it suggest file.ts instead of TypeScript.ts\n\n\n_Copied from original issue: aspnet/Tooling#118_","Url":"https://github.com/aspnet/Templates/issues/850","RelatedDescription":"Open issue \"File new default names inconsistency.\" (#850)"},{"Id":"233568569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:14:20","Actor":"neman","Number":"849","RawContent":null,"Title":"Unable to install nuget template","State":"closed","Body":"I created nuget template. When I try to install it, I got the following error at the end\r\n\r\n```C:\\Program Files\\dotnet\\sdk\\1.0.4\\NuGet.targets(97,5): error : Unable to resolve 'Test.Templates' for '.NETCoreApp,Version=v1.0'. [C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj]\r\n\r\nGenerating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.targets.\r\n  Writing lock file to disk. Path: C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\project.assets.json\r\n  Restore failed in 13,16 sec for C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj.\r\n\r\n  Errors in C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj\r\n      Unable to resolve 'BIB.Templates' for '.NETCoreApp,Version=v1.0'.\r\n\r\n  NuGet Config files used:\r\n      C:\\Users\\nemke\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n      C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n  Feeds used:\r\n      https://api.nuget.org/v3/index.json\r\n      C:\\local-nuget\r\n      C:\\Users\\nemke\\.dotnet\\NuGetFallbackFolder\r\n      C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n```\r\n\r\n#### dotnetinfo\r\n\r\n```\r\nC:\\Temp> dotnet --info\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.4\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002111-00\r\n  Build    : 1ff021936263d492539399688f46fd3827169983\r\n``` \r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/849","RelatedDescription":"Closed issue \"Unable to install nuget template\" (#849)"},{"Id":"233555569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:13:42","Actor":"neman","Number":"848","RawContent":null,"Title":"Wrong CLI command for template installation at nuget.org","State":"closed","Body":"When I go tu nuget.org to search for some template I got the following page for link https://www.nuget.org/packages/NetEscapades.Templates/\r\n\r\n![image](https://cloud.githubusercontent.com/assets/350314/26781234/bf4cc98c-49ed-11e7-9e4a-08bb168b6c62.png)\r\n\r\nThe command instruct to use `Install-Package NetEscapades.Templates` which does not work. \r\n\r\n```\r\nInstall-Package NetEscapades.Templates\r\nInstall-Package : No match was found for the specified search criteria and package name 'NetEscapades.Templates'. Try Get-PackageSource to see all available registered p ackage sources.\r\nAt line:1 char:1\r\n+ Install-Package NetEscapades.Templates\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Microsoft.Power....InstallPackage:InstallPackage) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NoMatchFoundForCriteria,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\nThe correct command is `dotnet new --install \"NetEscapades.Templates::*\"`\r\n\r\nWill this be fixed in future release?  Which will be the correct CLI command?\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/848","RelatedDescription":"Closed issue \"Wrong CLI command for template installation at nuget.org\" (#848)"},{"Id":"226082169","IsPullRequest":true,"CreatedAt":"2017-05-03T18:58:53","Actor":"phenning","Number":"846","RawContent":null,"Title":"Revert \"Add MVC precompilation package for 1.1\"","State":"closed","Body":"This reverts commit 461cd822646505fb53c6b0ac416af3780e32578f.\r\n\r\n# Conflicts:\r\n#\tsrc/BaseTemplates/StarterWeb/StarterWeb.csproj\r\n#\tsrc/Templates.xml","Url":"https://github.com/aspnet/Templates/pull/846","RelatedDescription":"Closed or merged PR \"Revert \"Add MVC precompilation package for 1.1\"\" (#846)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"Andrew-MSFT","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2018-06-25T20:46:49","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"closed","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"},{"Id":"249781859","IsPullRequest":true,"CreatedAt":"2017-08-14T15:57:44","Actor":"balachir","Number":"1055","RawContent":null,"Title":"Update known-issues-vs2017.md for VS 15.3 RTW","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1055","RelatedDescription":"Closed or merged PR \"Update known-issues-vs2017.md for VS 15.3 RTW\" (#1055)"},{"Id":"247941709","IsPullRequest":false,"CreatedAt":"2017-08-05T03:07:41","Actor":"snebjorn","Number":"1054","RawContent":null,"Title":"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime","State":"closed","Body":"Hi, I'm curious about how you made Browser Link inject a custom script into the page body at runtime.\r\nI have to do something similar (ritterim/stuntman#158) so wondering if you've willing to share the implementation :)\r\n\r\nI also made a [stackoverflow post](https://stackoverflow.com/questions/45501245/programmatically-inject-custom-script-into-page-body-at-runtime-like-browser-l)\r\n\r\nThanks","Url":"https://github.com/aspnet/Tooling/issues/1054","RelatedDescription":"Closed issue \"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime\" (#1054)"},{"Id":"247229183","IsPullRequest":false,"CreatedAt":"2017-08-02T06:18:35","Actor":"halter73","Number":"1053","RawContent":null,"Title":"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly","State":"closed","Body":"Given the launchSettings.json and Program.cs below, it seems that the ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly when launching both the \"IIS Express\" or \"WebApplication1\" profiles from VS 2017 26730.0.d15rel and dotnet sdk 2.0.0-preview3-006889.\r\n\r\n\r\n#### Expected output for \"IIS Express\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"IIS Express\" profile launched from VS (App Insights is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration'\r\n```\r\n\r\n#### Expected output for \"WebApplication1\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched from VS (HostingStartup1 is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched using \"dotnet run\" (Behaves as expected)\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1'\r\n```\r\n\r\n#### launchSettings.json\r\n```json\r\n{\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:61008/\",\r\n      \"sslPort\": 0\r\n    }\r\n  },\r\n  \"profiles\": {\r\n    \"IIS Express\": {\r\n      \"commandName\": \"IISExpress\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      }\r\n    },\r\n    \"WebApplication1\": {\r\n      \"commandName\": \"Project\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      },\r\n      \"applicationUrl\": \"http://localhost:61010/\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Program.cs\r\n```C#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing System;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args)\r\n        {\r\n            Console.WriteLine(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES: '{0}'\", Environment.GetEnvironmentVariable(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\"));\r\n\r\n            return WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1053","RelatedDescription":"Closed issue \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly\" (#1053)"},{"Id":"245422589","IsPullRequest":false,"CreatedAt":"2017-07-28T17:44:59","Actor":"varora1406","Number":"1052","RawContent":null,"Title":"Add-Migration command not working.","State":"closed","Body":"IDE : visual studio 15.3 preview 5.0\r\n.net core 2.0\r\nProject : .Net core web application (Angular template) including (Angular v4)\r\n\r\nSteps to reproduce:\r\n* Create a new project and all required nuget packages.\r\n![image](https://user-images.githubusercontent.com/24986539/28577409-559354a8-7174-11e7-9dfb-26cc7efc1228.png)\r\n\r\n* Try to use Add-Migration command. (Don't worry, context classes and rest have been done)\r\n- Result : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\n![image](https://user-images.githubusercontent.com/24986539/28577463-81e914c0-7174-11e7-97eb-5cd2a5fb3e28.png)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1052","RelatedDescription":"Closed issue \"Add-Migration command not working.\" (#1052)"},{"Id":"241453336","IsPullRequest":false,"CreatedAt":"2017-07-08T14:19:58","Actor":"RandyBuchholz","Number":"1051","RawContent":null,"Title":"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"","State":"open","Body":"There was a compatibility error with Microsoft.Composition. This is being addressed https://github.com/dotnet/corefx/issues/18452.\r\n\r\nCodeGeneration.Design is still referencing the old version and gives:\r\nPackage 'Microsoft.Composition 1.0.27' was restored using '.NETFramework,Version=v4.6.1' instead the project target framework...\r\n\r\nThe correct version is 1.0.31.\r\n\r\n![image](https://user-images.githubusercontent.com/13967891/27986052-85abdeee-63be-11e7-9b53-ec7a6199d628.png)\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1051","RelatedDescription":"Open issue \"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"\" (#1051)"},{"Id":"238392758","IsPullRequest":false,"CreatedAt":"2017-07-04T19:13:11","Actor":"miloush","Number":"1048","RawContent":null,"Title":"Adding application manifest ","State":"closed","Body":"The project properties designer asks me to add manifest to the project first before it can be selected:\r\n![untitled](https://user-images.githubusercontent.com/10546952/27518138-8a52e322-59d0-11e7-99b8-78a31d72e1a3.png)\r\n\r\nHowever, there does not seem to be a manifest template in the Add New Item list for ASP.NET Core projects.\r\n\r\nEither add the manifest template, or let the properties designer generate it, or change the \"default settings\" to declare newer OS support.","Url":"https://github.com/aspnet/Tooling/issues/1048","RelatedDescription":"Closed issue \"Adding application manifest \" (#1048)"},{"Id":"239635705","IsPullRequest":true,"CreatedAt":"2017-06-29T23:09:22","Actor":"anangaur","Number":"1050","RawContent":null,"Title":"Update known-issues-vs2017-preview.md","State":"open","Body":"Removed \"No workaround...\" as there is a workaround","Url":"https://github.com/aspnet/Tooling/pull/1050","RelatedDescription":"Open PR \"Update known-issues-vs2017-preview.md\" (#1050)"},{"Id":"239016783","IsPullRequest":true,"CreatedAt":"2017-06-28T20:04:41","Actor":"balachir","Number":"1049","RawContent":null,"Title":"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1049","RelatedDescription":"Closed or merged PR \"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2\" (#1049)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"353145143","IsPullRequest":false,"CreatedAt":"2018-08-22T22:11:39","Actor":"pranavkm","Number":"315","RawContent":null,"Title":"3.0: Deprecating MvcPrecompilation tool ","State":"open","Body":"In ASP.NET Core 1.1, we introduced the `Microsoft.AspNetCore.Mvc.Razor.ViewCompilation` (MVC precompilation tool) package that added support for publish time compilation of Razor files (.cshtml files). Starting in ASP.NET Core 2.1, we introduced the [Razor SDK](https://docs.microsoft.com/en-us/aspnet/core/razor-pages/sdk?view=aspnetcore-2.1) that expanded on the features of the precompilation tool by adding support for build and publish time of Razor files. The SDK allows for verifying the correctness of cshtml files at build time while also improving on startup time for applications. The Razor SDK is on by default and no gesture is required to start using it.\r\n\r\nIn 3.0, we plan to remove the earlier MVC precompilation tool. Earlier versions of the package will continue receiving important bug and security fixes as part of our patch release. \r\n\r\nFor users of ASP.NET Core 2.1 or later, we recommend migrating to the Razor SDK if you haven't already. If you're currently using the precompilation tool and are unable to migrate to the Razor SDK due to bugs or missing features, please file an issue at https://github.com/aspnet/Razor/issues.\r\n\r\nPlease use https://github.com/aspnet/Mvc/issues/8313 for discussions.","Url":"https://github.com/aspnet/Announcements/issues/315","RelatedDescription":"Open issue \"3.0: Deprecating MvcPrecompilation tool \" (#315)"},{"Id":"349340221","IsPullRequest":false,"CreatedAt":"2018-08-10T00:56:39","Actor":"natemcmaster","Number":"314","RawContent":null,"Title":"3.0: deprecating Microsoft.AspNetCore.All","State":"open","Body":"Earlier this year, we announced the Microsoft.AspNetCore.App metapackage (see https://github.com/aspnet/Announcements/issues/287). That announcement said:\r\n\r\n> The existing Microsoft.AspNetCore.All meta-package will continue to be made available throughout the 2.x lifecycle, but **we recommend customers move to the new Microsoft.AspNetCore.App meta-package** and then add individual references to any of the removed packages if their app requires it.\r\n\r\nSee [our documentation for details](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/metapackage?view=aspnetcore-2.1#migrating-from-microsoftaspnetcoreall-to-microsoftaspnetcoreapp) on how to migrate from Microsoft.AspNetCore.All to .App.\r\n\r\nWe have begun working on ASP.NET Core 3.0, and as a part of that, we will stop producing the Microsoft.AspNetCore.All metapackage and the matching Microsoft.AspNetCore.All shared framework in the 3.0 nightly builds.\r\n\r\nThis package will still be available in ASP.NET Core 2.2 and will continue to receive servicing updates in ASP.NET Core 2.1.\r\n\r\nPlease use https://github.com/aspnet/Home/issues/3418 for questions or comments.\r\n","Url":"https://github.com/aspnet/Announcements/issues/314","RelatedDescription":"Open issue \"3.0: deprecating Microsoft.AspNetCore.All\" (#314)"},{"Id":"346800428","IsPullRequest":false,"CreatedAt":"2018-08-01T23:00:38","Actor":"pranavkm","Number":"313","RawContent":null,"Title":"CorsMiddleware must be explicitly configured to specify all allowed headers","State":"open","Body":"In versions of ASP.NET Core 2.1.0 and earlier, the CorsMiddleware always allowed certain headers in the `Access-Control-Request-Headers` to be sent regardless of the values configured in `CorsPolicy.Headers`. This list of headers includes:\r\n\r\n* `Accept`\r\n* `Accept-Language`\r\n* `Content-Language`\r\n* `Origin`\r\n\r\nFor instance, consider an application configured as follows:\r\n\r\n```C#\r\napp.UseCors(policy => policy.WithHeaders(\"Cache-Control\"));\r\n```\r\n\r\nIn 2.1 and earlier, the CORS middleware would respond successfully to a preflight request with the following request header:\r\n\r\n`Access-Control-Request-Headers: Cache-Control, Content-Language`\r\n\r\nFor 2.2.0, the CORS middleware would no longer treat this as a policy match. The server must explicitly configure policy to allow the `Content-Language` header:\r\n\r\n```C#\r\napp.UseCors(policy => policy.WithHeaders(\"Cache-Control\", \"Content-Language\"));\r\n```\r\n\r\nFor more information on CORS, please refer to [the documentation](https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1).","Url":"https://github.com/aspnet/Announcements/issues/313","RelatedDescription":"Open issue \"CorsMiddleware must be explicitly configured to specify all allowed headers\" (#313)"},{"Id":"345927303","IsPullRequest":false,"CreatedAt":"2018-07-30T20:44:14","Actor":"danroth27","Number":"312","RawContent":null,"Title":"Razor compilation APIs exposing Roslyn types being obsoleted in 2.2.0 and removed in 3.0.0","State":"open","Body":"As part of the 2.1.0 release, ASP.NET Core added support for build time compilation of cshtml files (Razor Views & Razor Pages). This feature is on by default and allows build time verification of the correctness of Razor files, and also faster startup performance. Additionally, MVC watches for changes to cshtml files and seamlessly updates build-time compiled views with runtime compiled views. This allows editing cshtml files and then refreshing the browser to see the changes.\r\n\r\nMVC uses the app's compilation context, details about the references and settings that were used to compile the source code (.cs) in the app, to compile views at runtime. In addition to the compilation context, MVC exposes options such as [RazorViewEngineOptions.CompilationCallback](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.razorviewengineoptions.compilationcallback?view=aspnetcore-2.1) and [AdditionalCompilationReferences](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.razorviewengineoptions.additionalcompilationreferences?view=aspnetcore-2.1) that allow configuring compilation specifically for runtime. \r\n\r\nRuntime specific customizations are unavailable at build time and consequently the two outputs could be different.\r\n\r\nTo address this inconsistency, we plan on removing APIs in MVC that change or modify runtime compilation. For 2.2.0, we're marking these APIs obsolete with the intent to remove them in 3.0.0. This is the list of affected APIs:\r\n\r\n* Properties on `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions`\r\n    * `AdditionalCompilationReferences`\r\n    * `CompilationCallback`\r\n\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeature`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorReferenceManager`\r\n\r\nNo changes are required to your application if it does not use these APIs.\r\n\r\nApps using these APIs to add assembly references to the compilation context for runtime compilation should instead use [`ApplicationPartManager.AddApplicationPart`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.mvccoremvccorebuilderextensions.addapplicationpart) to add application parts for each assembly reference, or switch to a built-time compilation model (see [Create reusable UI using the Razor Class Library project](https://docs.microsoft.com/aspnet/core/razor-pages/ui-class)).\r\n\r\nOther scenarios blocked by the removal of these APIs and not covered by alternative MVC features should raised in the linked discussion issue.\r\n\r\nFor discussion, use https://github.com/aspnet/Mvc/issues/8177","Url":"https://github.com/aspnet/Announcements/issues/312","RelatedDescription":"Open issue \"Razor compilation APIs exposing Roslyn types being obsoleted in 2.2.0 and removed in 3.0.0\" (#312)"},{"Id":"339929062","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:26","Actor":"blowdart","Number":"311","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0 and 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles such requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2708\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application is behind a forwarding proxy such is Internet Information Server, Azure Application Gateway or nginx you will not be affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Server.Kestrel.Core with a vulnerable version listed below and not hosted behind a forwarding proxy.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 2.0.4 <br /> 2.1.2\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8 <br /> 2.1.0, 2.1.1  | 2.0.9 <br /> 2.1.2\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1 | 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Server.Kestrel.Core` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET 2.0 & 2.1 not targeting the meta-packages\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects.\r\n\r\nThe `project.assets.json`files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.All` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.9\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) .\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Server.Kestrel.Core/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Server.Kestrel.Core`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.34 />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.1 (July 10, 2018): Added .App meta-package details.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/311","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\" (#311)"},{"Id":"339928979","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:13","Actor":"blowdart","Number":"310","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass in ASP.NET Core when the number of incorrect login attempts is not validated. An attacker who successfully exploited this vulnerability could try an infinite number of authentication attempts.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core validates the number of incorrect login attempts.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Identity/issues/1870\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's implementation of multi-factor authentication you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Identity with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Identity | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5 <br /> 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5 <br /> 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 1.0.6 <br /> 1.1.6 <br /> 2.0.4 <br /> 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Identity` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET Core 1.0, 1.1 or 2.0 not targeting the metapackage.\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Identity` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Identity` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"Microsoft.AspNetCore.Identity\" : \"1.0.5\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `Microsoft.AspNetCore.Identity`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `Microsoft.AspNetCore.Identity` version 1.0.5.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Identity` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Identity \": \"1.0.6\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Identity/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Identity`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Identity` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Identity/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Identity`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Identity` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Identity` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Identity\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Martin Knafve](https://www.linkedin.com/in/martin-knafve-99187a2/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8171)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/310","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\" (#310)"},{"Id":"336797507","IsPullRequest":false,"CreatedAt":"2018-06-28T22:10:48","Actor":"natemcmaster","Number":"309","RawContent":null,"Title":"For contributors: branch name changes in ASP.NET Core repos","State":"open","Body":"Over the coming weeks, we are planning on making the following changes to most projects in https://github.com/aspnet that are used to build ASP.NET Core.\r\n\r\n* We will create a branch named \"release/2.2\". Work on this branch will be part of [ASP.NET Core 2.2](https://github.com/aspnet/Announcements/issues/307)\r\n* We will rename the \"dev\" branch to \"master\". This is part of aligning aspnet repos with the branch naming used by other Microsoft teams.\r\n* We will change the default branch to \"master\" on GitHub.\r\n* Update the product branding on \"master\" to 3.0. Work on this branch will eventually become part of [ASP.NET Core 3.0](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/)\r\n\r\nTo help us prevent too much drift between release/2.2 and master, we will enable some automation to merge all changes from release/2.2 into master (3.0).\r\n\r\n## FAQ\r\nThis change may affect the way you help contribute to ASP.NET Core. As a result of this change and dicussion within our team, we've anticipated at least two questions you may have.\r\n\r\n#### Which branch should I use for my work?\r\n<img src=\"https://user-images.githubusercontent.com/2696087/42063035-b5fc9e42-7ae4-11e8-9916-a708fcc8e0e6.png\" width=\"500\" />\r\n\r\n#### I opened my PR to the wrong branch. What should I do?\r\n \r\nYou can edit a PR’s target branch.\r\n\r\n<img width=\"700\" alt=\"one\" src=\"https://user-images.githubusercontent.com/2696087/42063074-eb3060a8-7ae4-11e8-8ec2-d569f8e07f78.png\">\r\n<img width=\"700\" alt=\"two\" src=\"https://user-images.githubusercontent.com/2696087/42063083-f8a9564a-7ae4-11e8-91f0-f57e039085f8.png\">\r\n\r\n\r\n## Questions? Comments?\r\n\r\nThis issue is locked to reduce noise on this repo. Please use https://github.com/aspnet/Home/issues/3278 for questions and comments.\r\n\r\nThanks,\r\nNate","Url":"https://github.com/aspnet/Announcements/issues/309","RelatedDescription":"Open issue \"For contributors: branch name changes in ASP.NET Core repos\" (#309)"},{"Id":"335579239","IsPullRequest":false,"CreatedAt":"2018-06-25T21:44:22","Actor":"divega","Number":"308","RawContent":null,"Title":"EF Core 2.2 Roadmap","State":"open","Body":"## EF Core 2.2 is a small release\r\n\r\nUnlike EF Core 2.1, the 2.2 release will include a small number of new features. We are concentrating most of our efforts to add new functionality on the 3.0 release. Still, you can expect 2.2 to include lots of bugs fixes, community contributions and small improvements.\r\n\r\nYou can access the list of issues currently assigned to the 2.2 milestone using [this query](https://github.com/aspnet/EntityFrameworkCore/issues?q=is%3Aopen+is%3Aissue+milestone%3A2.2.0+sort%3Areactions-%2B1-desc) on our issue tracking system.  \r\n\r\n## Schedule\r\nThe schedule of EF Core 2.2 will align with the schedule of .NET Core and ASP.NET Core 2.2. See [the ASP.NET Core 2.2 Roadmap announcement](https://github.com/aspnet/Announcements/issues/307).\r\n\r\nOur current plan is to have three previews before we ship RTM near the end of 2018:\r\n\r\n- August – Preview 1\r\n- September - Preview 2\r\n- October - Preview 3\r\n- Before end-of-year – RTM\r\n\r\n As usual, this post reflects our current plan, but things may change as we make progress. \r\n\r\n## New features\r\n\r\n### Reverse engineering of database views into query types\r\n\r\nIn EF Core 2.1 we added query types, which allow mapping .NET objects to views and tables without keys. In 2.2, we plan to leverage this new capability to automatically map existing database views to query types. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/1679.\r\n\r\n###  Support for collections of owned entities\r\n\r\nIn EF Core 2.0 we added the concept of owned entity types, which allows modeling ownership relationship that are common between entities that are part of the same document in document-oriented databases or the same aggregate if you use Domain-Driven Design concepts in your model.\r\n\r\nUntil now, we only support reference navigation properties to owned entities. In EF Core 2.2, we plan to enhance this functionality to map collection navigation properties to owned entities. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/8172.\r\n\r\n## Other work\r\n\r\nThere are some additional work items that are not strictly EF Core 2.2 features, but we still track as part of the 2.2 milestone because we are doing the work in the same timeframe:\r\n\r\n### Cosmos DB provider\r\n\r\nA lot of our efforts are going into productizing an EF Core provider for the SQL API in Cosmos DB.\r\nWe have already created a prototype, which we have shown in demos such as in this [this EF Core 2.1 talk](https://www.youtube.com/watch?v=k55kDH_ixrQ) we did at the Microsoft Build conference.\r\n\r\nDue to competing priorities, releasing a preview of this provider has taken more than what we originally planned, but we are working on it now, and the current plan is to release a stable version by the end of this calendar year.\r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/12086. \r\n\r\n### Preview of spatial support for SQL Server\r\n\r\nWe are also focusing on adding spatial support as an extension to the SQL Server provider for EF Core.\r\nNote that the PostgreSQL provider (Npgsql) already added support in EF Core 2.1. Beside implementing this functionality for SQL Server, we are working closely with the developers of Npgsql to try to achieve a consistent and hopefully improved experience across providers.\r\n\r\nNote that we aren't committing to having a final version of the spatial support for the end of the current calendar year. But we are actively working on this now, and as we make progress, we should be able to provide a more precise estimate.   \r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/1100.\r\n\r\n### Improve test coverage for LINQ and reduce query regressions in future releases\r\n\r\nIn the last few releases, we have seen that when we commit improvements to our LINQ implementation, we often break queries that were previously working. The main challenge is that LINQ defines a huge space of possible queries to test, and it is very complex to measure what level of test coverage we have, even for a specific query operator. In the 2.2 timeframe, we will be investing on improving test coverage for this huge space. We also plan to experiment with new approaches to add appropriate coverage, and to reduce the likelihood of introducing regressions in future releases.\r\n\r\nYou can track our progress on this at https://github.com/aspnet/EntityFrameworkCore/issues/12046. \r\n\r\nFor discussion on this roadmap, please use https://github.com/aspnet/EntityFrameworkCore/issues/12465. ","Url":"https://github.com/aspnet/Announcements/issues/308","RelatedDescription":"Open issue \"EF Core 2.2 Roadmap\" (#308)"},{"Id":"335571873","IsPullRequest":false,"CreatedAt":"2018-06-25T21:19:36","Actor":"glennc","Number":"307","RawContent":null,"Title":"ASP.NET Core 2.2 Roadmap","State":"open","Body":"We have grouped the ASP.NET Core 2.2 release into a few themes:\r\n\r\n- APIs & Services\r\n- Server improvements\r\n- SignalR\r\n\r\n## Rough Schedule\r\nWe are currently planning to have 3 previews before RTM:\r\n - August – Preview 1\r\n - September - Preview 2\r\n - October - Preview 3\r\n - Before End-of-year – RTM\r\n\r\nAs with our previous roadmap posts this is what we intend right now, but it's subject to change as we continue development.\r\n\r\n## APIs and Services\r\n\r\nThe 'north star' for this version is to generate better metadata about your app and use that data to make your dev experience better and more productive. This is the main focus for 2.2.\r\n\r\n### API Controller conventions\r\nIn 2.1 we added controller specific conventions that make Web API development more convenient with the [ApiController attribute](https://docs.microsoft.com/en-us/aspnet/core/web-api/index?view=aspnetcore-2.1#annotate-class-with-apicontrollerattribute). In 2.2 we want to expand on this concept to provide metadata for API Explorer and provide a better end-to-end API documentation experience.\r\n\r\nWe want to make it possible for all MVC Core applications to have a good Swagger/OpenAPI definition by default. By following common patterns, your actions will produce rich metadata without falling into 'attribute soup' where you list every possible status code that every action in your app could return. We will include a default set of conventions that match what ASP.NET Core scaffolding generations. It will also be possible to write and share your own conventions to reflect your desired contracts. \r\n\r\nWe will include a set of analyzers that will help you find cases where code that doesn't match the API Explorer metadata, and a code-fix that provides options to explicitly specify the response type metadata, create a new convention with a different pattern, or just let you write code to satisfy the convention.\r\n\r\nAs a concrete example, you could write a convention that says \"every action method that starts with 'Create' will return an HTTP 201\". If you wrote the following code, then you would receive a warning.\r\n\r\n```csharp\r\n[HttpPost(\"/orders\")]\r\npublic ActionResult<Order> CreateOrder(OrderData orderData)\r\n{\r\n    ....\r\n    return Ok(new Order() {...});\r\n}\r\n```\r\n\r\nThis code doesn't match your Swagger/OpenAPI metadata (from the convention) - which says that this action returns a 201. Once you see this, you could `ctrl + .` to add the attributes for what we do know about this method, opting out of conventions, or you could change the code.\r\n\r\nThe analyzer will also be able to 'check your work' if you are being explicit about status codes and results using the existing attributes - it does not require you to use the conventions. Details for how this will all work can be discussed here: https://github.com/aspnet/Mvc/issues/7802\r\n\r\nLet's look at a more fleshed-out out example. The following code snippet is what is required to generate a reasonable Open API document for an action method that will get an item by ID or return a 404:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    [ProducesResponseType((int)HttpStatusCode.NotFound)]\r\n    [ProducesResponseType(typeof(CatalogItem),(int)HttpStatusCode.OK)]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\nIn 2.2 with the default conventions the following code should generate the same Open API document that the above code sample does, and this shipped analyzers will give you hints when you do something that doesn't match so you know to go and add attributes or change the conventions:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n### OpenAPI generation\r\nWith the conventions described above it will be possible for code that uses the API Explorer to generate Open API documents to be better by default, since the code you write will either follow the conventions or have attributes allowing generators to create better documents.\r\n\r\n### Dispatcher\r\nIn 2.2 we will introduce a new routing system that will expand the set of scenarios where routing is useful – tentatively called Dispatcher. \r\n\r\nThe current routing system was designed to support MVC’s historical scenarios without much thought to how routing and the composable middleware pipeline will work together. The Dispatcher is designed to run the URL matching step very early in the pipeline so that middleware can see the Endpoint that was selected as well as metadata that is associated with that endpoint. Like existing routing, the dispatcher will branch and call the actual endpoint at the end of the pipeline.\r\n\r\nA concrete example of how this helps us is with CORS. Today there is both a CORS middleware AND a CORS feature of MVC (https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1). Because routing information is deeply integrated with MVC we can't apply CORS policies that only apply to specific controllers until after we know what controller has been selected. However, if you also want CORS policies to apply to other parts of your pipeline then you need the middleware. This has been a source of confusion for many and we can simplify it if all of the middleware pipeline can have as much information about routing as MVC does today.\r\n\r\nWe’re also using this opportunity to make improvements to the performance of routing and dispatching for MVC and other scenarios.\r\n\r\n### HTTP API REPL tooling\r\nToday there are no tools built into Visual Studio or the dotnet CLI to help you execute HTTP verbs against your API. We have a great language, debugger, and framework but they are somewhat limited when it's difficult to send a POST to my app to see what happens. In 2.2 we want to build a CLI experience for exploring HTTP APIs to imcrease your API inner loop productivity. The CLI builds on all the features we've talked about above as some of its advanced features, like listing all routes in your app, are enabled by consuming the metadata we have about your app via Open API documents. That means the CLI should be useful for executing any HTTP verb, but really shines when you feed it more data like Open API docs. We intend to start by shipping this as a standalone global tool while we explore its feature set and potential.\r\n\r\nYou can see a demo and description of this in Scott Hunter and Scott Hanselman's BUILD talk here: https://youtu.be/KAIJ3ezQb3c?t=18m\r\n\r\n### API client generation (C# & TypeScript)\r\nOnce you have an API with rich metadata and done exploring and testing it, then you need to go and write some client code to call and make use of your API. We are going to build an experience for generating this code based on the same data and documentation described above. We envision a few pieces for this story, one part is a dotnet tool that can generate code from an Open API document, the other is MSBuild SDK work to allow a `ServiceReference` to another project in a solution. That reference will cause build time client code generation to happen via the tool that can generate code. We expect this to work in a similar way to the EF Core tooling experience, where your application is built and most of your startup code executed but instead of running it we use the data we have about your code to generate a client.\r\n\r\n### Authorization Server\r\nOne of the largest gaps we’ve had has been around authorization for applications beyond a simple forms based login. We plan to fill that gap with a simple to use OpenID Connect based authorization server, which will allow your ASP.NET application to act as an authentication point for your projects, be they web site to API, SPA to API, native application to an API or, for distributed applications API to API. As we are concentrating on first party applications we can make the code you need to plumb in trivial, getting as close to zero configuration as you can,  we’re not aiming to replace the excellent third-party solutions out there which enable richer scenarios like third-party applications or which provide a flexibility in configuration and authentication flow.\r\n\r\n## Server Improvements\r\n\r\n### Health Checks\r\nThis feature is a way to trivially setup an endpoint in your application that can be used to check the health of your application, potentially taking into account things like memory consumption or database availability as well as just \"can I accept a HTTP request\".\r\n\r\n### HTTP/2 in Kestrel & HttpClient\r\nThe title says it all in this case. HTTP/2 support for all. We started this work some time ago, and have had the protocol mostly implemented for a while but not compiled into the product since it wasn't ready. This version we will finish that work and implement the missing features.\r\n\r\n### In-proc ANCM\r\nRunning ASP.NET Core applications in-process in IIS, giving a significant performance boost.\r\n\r\n## SignalR\r\n\r\n### Add Java & C++ clients\r\nAllow customers using Java or C++ to connect to SignalR servers, and the [Azure SignalR Service](https://azure.microsoft.com/en-us/blog/azure-signalr-service-a-fully-managed-service-to-add-real-time-functionality/).\r\n\r\n## Other\r\nAs with all releases there is a large tail of bug fixes, performance improvements, small features, and community PRs that we will also work on. You can see the full list of work by browsing the 2.2 milestones on the various [repositories](https://github.com/aspnet/).\r\n\r\nFor discussion on the roadmap in general, use https://github.com/aspnet/Home/issues/3265","Url":"https://github.com/aspnet/Announcements/issues/307","RelatedDescription":"Open issue \"ASP.NET Core 2.2 Roadmap\" (#307)"},{"Id":"333804954","IsPullRequest":false,"CreatedAt":"2018-06-19T19:21:13","Actor":"anurse","Number":"306","RawContent":null,"Title":"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR Client from UWP applications where the minimum version is set to \"Windows 10, version 1803\". However, these fixes also require some additional dependencies.\r\n\r\n**NOTE**: UWP Applcations with a minimum version set **below** \"Windows 10, version 1803\" (for example, if the minimum version is set to \"Fall Creators Update\") are **not** affected by this issue and **do not require** these steps.\r\n\r\nIn order to use the SignalR Client in UWP applications where the minimum version is set to \"Windows 10, version 1803\" you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/2406","Url":"https://github.com/aspnet/Announcements/issues/306","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803\" (#306)"},{"Id":"333802959","IsPullRequest":false,"CreatedAt":"2018-06-19T19:15:05","Actor":"anurse","Number":"305","RawContent":null,"Title":"SignalR Client 2.1.1 in Xamarin","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR **Client** from Xamarin. However, these fixes also require an updated build of Xamarin.iOS and Xamarin.Android, as well as some additional dependencies.\r\n\r\nIn order to use the SignalR Client in Xamarin applications you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Upgrade Xamarin to the appropriate version:\r\n    * Xamarin.Android `8.4.0.1`\r\n    * Xamarin.iOS `11.14.0.4`\r\n    * These will be included in:\r\n      * Visual Studio 15.8 **Preview 3** (not released at the time of publishing, but coming soon)\r\n      * Visual Studio for Mac 7.6 **Preview 3** (not released at the time of publishing, but coming soon)\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/1886","Url":"https://github.com/aspnet/Announcements/issues/305","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in Xamarin\" (#305)"},{"Id":"329851587","IsPullRequest":false,"CreatedAt":"2018-06-06T13:30:30","Actor":"ToLearnMoe","Number":"304","RawContent":null,"Title":"怎么找工作啊","State":"closed","Body":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Closed issue \"怎么找工作啊\" (#304)"},{"Id":"329603099","IsPullRequest":false,"CreatedAt":"2018-06-05T20:11:55","Actor":"AngelosP","Number":"303","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"closed","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\r\n\r\nFor discussion, use https://github.com/aspnet/Tooling/issues/1075","Url":"https://github.com/aspnet/Announcements/issues/303","RelatedDescription":"Closed issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#303)"},{"Id":"327435771","IsPullRequest":false,"CreatedAt":"2018-05-29T18:26:40","Actor":"shirhatti","Number":"302","RawContent":null,"Title":"IIS in-process hosting moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving IIS in-process hosting out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will ship IIS in-process hosting as part of the ASP.NET Core 2.2 release.\r\n\r\n### Why?\r\n\r\nIIS in-process hosting  is a brand new server implementation and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/IISIntegration/issues/878","Url":"https://github.com/aspnet/Announcements/issues/302","RelatedDescription":"Open issue \"IIS in-process hosting moved out of ASP.NET Core 2.1\" (#302)"},{"Id":"322891671","IsPullRequest":false,"CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Number":"301","RawContent":null,"Title":"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available","State":"open","Body":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Open issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301)"},{"Id":"321270218","IsPullRequest":false,"CreatedAt":"2018-05-08T17:07:04","Actor":"blowdart","Number":"300","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2553\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_","Url":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300)"},{"Id":"320441265","IsPullRequest":false,"CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Number":"299","RawContent":null,"Title":"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/WebHooks/issues/296","Url":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Open issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299)"},{"Id":"309862672","IsPullRequest":false,"CreatedAt":"2018-03-29T18:44:48","Actor":"glennc","Number":"298","RawContent":null,"Title":"Migrating from aspnetcore docker repos to dotnet","State":"open","Body":"Starting with .NET Core 2.1-preview2, we intend to migrate from using the microsoft/aspnetcore-build and microsoft/aspnetcore Docker repos to the microsoft/dotnet Docker repo.  We will continue to ship patches and security fixes for the existing aspnetcore images but any new images for 2.1 and higher will be pushed to microsoft/dotnet.\r\n\r\nDockerfiles using `microsoft/aspnetcore:<version>` should change to `microsoft/dotnet:<version>-aspnetcore-runtime`.\r\n\r\nDockerfiles using `microsoft/aspnetcore-build` that do not require Node should just change to `microsoft/dotnet:<version>-sdk`.\r\n\r\nDockerfiles using Node from the `microsoft/aspnetcore-build` image will either need to install Node into their own image or use mult-stage builds as described in the Dockerfile examples at the end of this announcement.\r\n\r\nThe `ASPNETCORE_URLS` env var that allows ASP.NET Core apps to accept traffic from outside the container will be set in all the `dotnet` images, which was a common early stumbling block for people getting started with ASP.NET Core and Docker. PR is [here](https://github.com/dotnet/dotnet-docker/pull/450)\r\n\r\n### Why the merge?\r\n\r\nFor some time we have been seeing people search for and find the `microsoft/dotnet` images and never realise that there are aspnetcore ones. This could be problematic in the past as the dotnet images were not optimised for ASP.NET Core, making things a little harder or slower. But with changes in the way ASP.NET Core works in 2.1 it was going to be much more impactful, in that ASP.NET Core applications were not likely to run on the base dotnet image. Given that we also thought it made more sense to have a single repository for all images, as ASP.NET is just part of .NET, we are taking this opportunity to remove the potential source of confusion and wasted time for our customers.\r\n\r\n### Why no Node?\r\nThere are two main reasons for this:\r\n\r\n  1. Multi-stage build now makes it easier to pull in the Node image for purely build concerns.\r\n  2. The ASP.NET Core templates no longer have a hard dependency on Node.\r\n\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n\r\n### Dockerfile examples\r\n\r\nIf you need Node then you will need to add it in your own Dockerfile, like this:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n#setup node\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\n# copy everything else and build\r\nCOPY . ./\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n#setup node, this is only needed if you use Node both at runtime and build time. Some people may only need the build part.\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\nCOPY --from=build-env /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nIf you only need Node at build then you may also be able to take advantage of multi-stage build like the following:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\nFROM node as clientBuild\r\n#Do npm restore and other Node stuff.\r\n\r\n#Merge the contents of your .NET build env and your clientBuild and publish.\r\nFROM build-env as publish\r\n# copy everything else and build\r\nCOPY --from=clientBuild . .\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n\r\nCOPY --from=publish /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n","Url":"https://github.com/aspnet/Announcements/issues/298","RelatedDescription":"Open issue \"Migrating from aspnetcore docker repos to dotnet\" (#298)"},{"Id":"305936138","IsPullRequest":false,"CreatedAt":"2018-03-16T14:09:54","Actor":"mnmr","Number":"297","RawContent":null,"Title":"Model binding accesses read-only properties in post-back","State":"closed","Body":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355.","Url":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297)"},{"Id":"305310538","IsPullRequest":false,"CreatedAt":"2018-03-14T20:08:36","Actor":"halter73","Number":"296","RawContent":null,"Title":"Managed sockets will replace libuv as Kestrel's default transport","State":"open","Body":"Starting in ASP.NET Core 2.1.0, managed sockets will be replacing libuv as Kestrel's default transport.\r\n\r\nThis change should only break applications that bind to non-TCP endpoints or explicitly call `IWebHostBuilder.UseLibuv()` and reference the libuv transport transitively through the Microsoft.AspNetCore.App and/or Microsoft.AspNetCore.Server.Kestrel NuGet packages.\r\n\r\nTo fix the break simply add a reference to Microsoft.AspNetCore.All and/or Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.\r\n\r\nWhile switching to the managed socket transport should be seamless<sup>1</sup>, if you want to continue using the libuv transport in 2.1.0 you will need to explicitly call `UseLibuv()` and reference the libuv transport either directly or through the \"All\" metapackage.\r\n\r\n<sup>1</sup> Unless you are trying to bind to a Unix domain socket or use systemd socket activation. As of 2.1, only the libuv transport supports binding to these kinds of endpoints.\r\n\r\n---\r\n\r\n*Please use aspnet/KestrelHttpServer#2360 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/296","RelatedDescription":"Open issue \"Managed sockets will replace libuv as Kestrel's default transport\" (#296)"},{"Id":"304854672","IsPullRequest":false,"CreatedAt":"2018-03-13T17:07:23","Actor":"blowdart","Number":"295","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\r\n\r\n## Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core versions 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where an elevation of privilege vulnerability exists when a ASP.NET Core web application fails to validate web requests correctly.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Home/issues/2954\r\n\r\n### Mitigation factors\r\n\r\nSites are not vulnerable to this elevation of privilege when:\r\n\r\n* The site is hosted behind a proxy, such as Internet Information Services (IIS), NGINX, or Apache, where:\r\n\r\n  * The proxy validates the host header, and\r\n  * The proxy is configured to listen on fully qualified domain names or\r\n  * The proxy is configured with a wildcard subdomain where the root domain is fully controlled by the site owner.\r\n\r\nFor example, if IIS is configured to respond to requests for `contoso.com` or `*.contoso.com` hosts, the application is protected.\r\n\r\nIf IIS is configured to respond to any request from any host, the application is vulnerable.\r\n\r\nKestrel does not have the capability to validate host headers and is vulnerable if not placed behind a proxy that performs the host header validation.\r\n\r\nApps hosted in Azure Web Apps are not susceptible to this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core hosted application which is directly exposed to the internet, or hosted behind a proxy which does not validate or restict host headers to known good values.\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.HttpOverrides | 2.0.0, 2.0.1 |  2.0.2 and later\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1 |  2.0.2 and later\r\n\r\n*No patches are available for ASP.NET Core 1.0.x or ASP.NET Core 1.1.x. Microsoft requires that you place your 1.x ASP.NET Core application behind a proxy.\r\nYou must address the configuration of your proxy to protect your application. If you're not running ASP.NET Core 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0.\r\nand add the host validating middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/.*\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected?\r\n\r\nReview the server and proxy configuration [instructions](#configuration) below to see if your system is configured correctly, and adjust the configuration if necessary.\r\n\r\n### How do I fix the issue?\r\n\r\nYou must address the [configuration](#configuration) of your server or proxy to protect your application to limit requests to known hosts.\r\n\r\nIf you're not running Kestrel 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0 and follow the 2.0 instructions below.\r\n\r\nASP.NET Core 2.0.x applications must [update your code](#app-update) to fully protect your application.\r\n\r\n#### <a name=\"configuration\"></a> Server and Proxy configuration\r\n\r\nYou must examine your externally facing server or proxy configuration and ensure it requires host headers with fully qualified domain names, or known sub-domains if you are using sub-domain wild cards.\r\n\r\n##### ASP.NET Core applications behind [IIS](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/)\r\n\r\nTo configure IIS to only respond to know hosts:\r\n\r\n* Open IIS Manager.\r\n* Expand the **Sites** node for the machine you want to configure.\r\n* Select the site by clicking on the site.\r\n* In the **Actions** list on the right-hand side of IIS Manager, click **Bindings**.\r\n* Edit any bindings that do not have a host name to specify one. Do not use a `*` wildcard unless it's against a domain under your control. For example, `*.contoso.com` is safe, `*.com` is not.\r\n\r\n##### ASP.NET Core applications running publicly on [Kestrel](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel)\r\n\r\nKestrel does not have the capability to validate host headers. It must either be placed behind a proxy that performs the host header validation or the validation must be performed within the application by adding  host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/. You must also [update your dependencies](#app-update) to fully protect your application.\r\n\r\n##### ASP.NET Core applications running on [HTTP.SYS](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/httpsys)\r\n\r\nTo configure URL prefixes and ports, you can use the `UseUrls` extension method, the `urls` command-line argument, the ASPNETCORE_URLS environment variable, or the `UrlPrefixes` property on [HttpSysOptions](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions). The following code example uses `UrlPrefixes`.\r\n\r\n```c#\r\npublic static IWebHost BuildWebHost(string[] args) =>\r\n    WebHost.CreateDefaultBuilder(args)\r\n        .UseStartup<Startup>()\r\n        .UseHttpSys(options =>\r\n        {\r\n            // The following options are set to default values.\r\n            options.Authentication.Schemes = AuthenticationSchemes.None;\r\n            options.Authentication.AllowAnonymous = true;\r\n            options.MaxConnections = null;\r\n            options.MaxRequestBodySize = 30000000;\r\n            options.UrlPrefixes.Add(\"http://localhost:5000\");\r\n        })\r\n        .Build();\r\n```\r\n\r\n##### ASP.NET Core applications behind [NGINX](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx)\r\n\r\nTo configure NGINX as a reverse proxy to forward requests to your ASP.NET Core app, replace the contents */etc/nginx/sites-available/default* with the following:\r\n\r\n```NGINX\r\nserver {\r\n    listen        80;\r\n    server_name   example.com *.example.com;\r\n    location / {\r\n        proxy_pass         http://localhost:5000;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header   Upgrade $http_upgrade;\r\n        proxy_set_header   Connection keep-alive;\r\n        proxy_set_header   Host $host;\r\n        proxy_cache_bypass $http_upgrade;\r\n    }\r\n}\r\n```\r\n\r\nNote that with NGINX, when there is no match for `server_name`, NGINX will pick the default server. If no default server has been defined, the first server in the conf file is the default server. Best practice is to add a specific default server which returns a status code of 444 in the conf file. An example default server configuration would be as follows:\r\n\r\n```NGINX\r\nserver {\r\n    listen   80 default_server;\r\n    # listen [::]:80 default_server deferred;\r\n    return   444;\r\n}\r\n```\r\n\r\nWith the preceding configuration file and default server, NGINX accepts public traffic on port 80 with host header `example.com` or `*.example.com`. Requests not matching these hosts won't get forwarded to Kestrel. NGINX forwards the matching requests to Kestrel at `http://localhost:5000`. See [How nginx processes a request](https://nginx.org/docs/http/request_processing.html) for more information.\r\n\r\nOnce the NGINX configuration is established, run `sudo nginx -t` to verify the syntax of the configuration files. If the configuration file test is successful, force NGINX to pick up the changes by running `sudo nginx -s reload`.\r\n\r\n##### ASP.NET Core applications behind [Apache](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache)\r\n\r\nConfiguration files for Apache are located within the `/etc/httpd/conf.d/` directory. Any file with the `*.conf*` extension:\r\n\r\n* Is processed in alphabetical order, and\r\n* The module configuration files in `/etc/httpd/conf.modules.d/` are processed. The module configuration files in `/etc/httpd/conf.modules.d/` contain any configuration files necessary to load modules.\r\n\r\n\r\n```\r\n<VirtualHost *:80>\r\n    ProxyPreserveHost On\r\n    ProxyPass / http://127.0.0.1:5000/\r\n    ProxyPassReverse / http://127.0.0.1:5000/\r\n    ServerName www.example.com\r\n    ServerAlias *.example.com\r\n</VirtualHost>\r\n```\r\n\r\nThe `VirtualHost` block can appear multiple times, in one or more files on a server. In the preceding configuration file, Apache accepts public traffic on port 80. The domain `www.example.com` is being served, and the `*.example.com` alias resolves to the same website. See [Name-based virtual host support](https://httpd.apache.org/docs/current/vhosts/name-based.html) for more information. Requests are proxied at the root to port 5000 of the server at 127.0.0.1. For bi-directional communication, `ProxyPass` and `ProxyPassReverse` are required.\r\n\r\nSave the file and test the configuration. If everything passes, the response is `Syntax [OK]`.\r\n\r\n```bash\r\nsudo service httpd configtest\r\n```\r\n\r\nRestart Apache:\r\n\r\n```bash\r\nsudo systemctl restart httpd\r\nsudo systemctl enable httpd\r\n```\r\n\r\n\r\n#### <a name=\"app-update\"></a> ASP.NET Core 2.0 application code updates\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.6 or later.\r\n* Updating will pull in the fixed packages listed above.\r\n\r\nIf you're targeting .NET Framework, update the packages listed above to their safe version or later.\r\n\r\nIf your application is using Kestrel without a proxy or the HttpOverrides functionality (UseForwardedHeaders with ForwardedHost) you must also add the host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/tree/release/2.0/samples/HostFilteringSample/.\r\n\r\n---\r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. You must follow the update instructions below to address both types of dependency.\r\n\r\n### Direct dependencies\r\n\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on `Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file.\r\n\r\n### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Core\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.5\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the vulnerable metapackage, as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.5.\r\n\r\nTo update the version to the secure package, change the version number to a secure package version. In this example, update `Microsoft.AspNetCore.All` to 2.0.6 or later. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.6\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Framework\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has a reference to a single package, as seen by the `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a direct dependency on one of the vulnerable packages from the table above, `Microsoft.AspNetCore.HttpOverrides` version 2.0.1.\r\n\r\nTo update to the secure package, change the version number to the updated package version. In the example, this would be updating `Microsoft.AspNetCore.HttpOverrides` to 2.0.2 and later. Save the *csproj* file. The updated and secure *csproj* look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependency version.\r\n\r\n##### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to a compatible version. \r\n\r\nFor example if your project refers directly to `Microsoft.AspNetCore.Mvc.Cors` with a version number of `2.0.0`, when you update your `Microsoft.AspNetCore.Mvc` package to 2.0.1, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc 2.0.1 expected Microsoft.AspNetCore.Mvc.Cors >= 2.0.1 but received 2.0.0`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your *project.json* in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n###### Reviewing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review the *project.assets.json* file.\r\n\r\n###### Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names above and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example, the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n###### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Visual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for each of the vulnerable packages, using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the vulnerable versions table above.\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your *project.assets.json* file includes references to any of the vulnerable packages shown above, then you need to fix the transitive dependencies.\r\n\r\n###### Overriding transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages this means:\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned, you must add a direct dependency to the updated version by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referring the fixed version.\r\nFor example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.HttpOverrides` version 2.0.0 you would add a reference to the fixed version, that is, 2.0.2 or later.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverride\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n###### Rebuilding your application\r\n\r\nRebuild your application. Test and deploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Mikhail Shcherbakov](https://www.linkedin.com/in/mikhailshcherbakov/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0787)\r\n\r\n### Revisions\r\n\r\nV1.1 (Mar 15, 2018): NGINX configuration instructions updated, thanks to @buglloc\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-03-15_","Url":"https://github.com/aspnet/Announcements/issues/295","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\" (#295)"},{"Id":"304853568","IsPullRequest":false,"CreatedAt":"2018-03-13T17:04:23","Actor":"blowdart","Number":"294","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted behind Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/IISIntegration/issues/658\r\n\r\n### Mitigation Factors\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it is hosted behind an IIS server running AspNetCoreModule (ANCM) prior to 7.1.1990.0.\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nIf the file version is less than 7.1.1990.0 you are affected.\r\n\r\n### How do I fix the issue? \r\nInstall the latest version of the ASP.NET Core Hosting Bundle \r\n(You need only install a single version, i.e. installing Version 2.0 will protect Version 1.0/1.1 .NET Core applications and vice versa. Choose the one that corresponds to the highest runtime version on your server).\r\n\r\n* [Hosting Bundle for ASP.NET Core 1.0/1.1](https://go.microsoft.com/fwlink/?linkid=869677)\r\n* [Hosting Bundle for ASP.NET Core 2.0](https://go.microsoft.com/fwlink/?linkid=869674)\r\n\r\nThen restart IIS by running \r\n\r\n```\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nAndrei Gorlov\r\n\r\n### External Links\r\n\r\n[CVE-2018-0808](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0808)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_","Url":"https://github.com/aspnet/Announcements/issues/294","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\" (#294)"},{"Id":"303604146","IsPullRequest":false,"CreatedAt":"2018-03-08T19:36:01","Actor":"natemcmaster","Number":"293","RawContent":null,"Title":"Moving official daily builds to the dotnet-core MyGet feed ","State":"open","Body":"As part of ongoing infrastructural changes, we will be moving official daily of ASP.NET Core to the dotnet-core myget feed. This transition will happen over the next few weeks.\r\n\r\n**Old feed:** https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json\r\n**New feed:** https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\r\n\r\nWe recommend updating to use the dotnet-core feed to continue getting the latest daily builds of ASP.NET Core.\r\n\r\nWe are making this change to make it easier for you to pull daily builds that align with the .NET Core CLI and .NET Core runtime. Some of our existing MyGet feeds will continue to exist, but will not be used for official daily builds. Instead, those feeds will only be used for builds of experimental branches of aspnetcore.\r\n\r\nOther useful links:\r\nGallery: https://dotnet.myget.org/gallery/dotnet-core\r\nNuGet v2 source: https://dotnet.myget.org/F/dotnet-core/api/v2\r\nNPM feed: https://dotnet.myget.org/F/dotnet-core/npm/\r\n\r\nPlease use https://github.com/aspnet/Home/issues/2937 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/293","RelatedDescription":"Open issue \"Moving official daily builds to the dotnet-core MyGet feed \" (#293)"},{"Id":"302846756","IsPullRequest":false,"CreatedAt":"2018-03-06T20:07:15","Actor":"natemcmaster","Number":"292","RawContent":null,"Title":"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image","State":"open","Body":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349","Url":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Open issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292)"},{"Id":"301939059","IsPullRequest":false,"CreatedAt":"2018-03-02T23:33:38","Actor":"blowdart","Number":"291","RawContent":null,"Title":"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.","State":"open","Body":"This week saw an announcement of vulnerabilities in  SAML parsing libraries by [DUO Labs](https://duo.com/blog/duo-finds-saml-vulnerabilities-affecting-multiple-implementations). Whilst no Microsoft implementations were listed we've seen a number of customer questions about this, especially given the recent WS-Fed support added to ASP.NET Core. \r\n\r\nASP.NET and ASP.NET Core rely on libraries from the Windows Identity team. Their investigation shows [their libraries are not vulnerable](https://cloudblogs.microsoft.com/enterprisemobility/2018/03/02/latest-saml-vulnerability-not-present-in-azure-ad-and-adfs/) to this parsing vulnerability, thus any ASP.NET or ASP.NET Core application which uses the default Microsoft SAML libraries or authentication handlers are safe from this exploit.\r\n","Url":"https://github.com/aspnet/Announcements/issues/291","RelatedDescription":"Open issue \"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.\" (#291)"},{"Id":"300752371","IsPullRequest":false,"CreatedAt":"2018-02-27T18:58:59","Actor":"natemcmaster","Number":"290","RawContent":null,"Title":"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300","State":"open","Body":"Starting in .NET Core CLI 2.1.300-preview2, the following tools were added as bundled, top-level commands. These tools previously shipped as NuGet packages.\r\n\r\n - Microsoft.DotNet.Watcher.Tools (aka dotnet-watch)\r\n - Microsoft.EntityFrameworkCore.Tools.DotNet (aka dotnet-ef)\r\n - Microsoft.Extensions.SecretManager.Tools (aka dotnet-user-secrets)\r\n - Microsoft.Extensions.Caching.SqlConfig.Tools (aka dotnet-sql-cache)\r\n\r\nCommands like `dotnet watch`, `dotnet ef`, and `dotnet user-secrets` can be executed on any project without needing to install the command via \"dotnet restore\" or \"dotnet install tool\". The commands are available by default in all projects.\r\n\r\n### Upgrading from stable releases of .NET Core CLI (e.g. 2.1.5)\r\n\r\nUsing these tools as a DotNetCliToolReference will no longer work. If your .csproj file has the following lines, they can be removed.\r\n```xml\r\n<ItemGroup>\r\n   <DotNetCliToolReference Include=\"Microsoft.DotNet.Watcher.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.Caching.SqlConfig.Tools\" Version=\"(all versions)\" />\r\n</ItemGroup>\r\n```\r\n\r\n### Upgrading from .NET Core CLI 2.1.300-preview1\r\nFor early-adopters who tried the 2.1.300-preview1 release, you will no longer need to run `dotnet install tool -g` to acquire the following tools:\r\n - dotnet-watch\r\n - dotnet-user-secrets\r\n - dotnet-dev-certs\r\n - dotnet-sql-cache\r\n - dotnet-ef\r\n\r\nIf you had installed these tools in 2.1.300-preview1, you can uninstall them manually by deleting corresponding files from `%USERPROFILE%\\.dotnet\\tools\\` (Windows) or `$HOME/.dotnet/tools` (macOS/Linux).\r\n\r\n**For discussion use https://github.com/aspnet/DotNetTools/issues/399**","Url":"https://github.com/aspnet/Announcements/issues/290","RelatedDescription":"Open issue \"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300\" (#290)"},{"Id":"295436695","IsPullRequest":false,"CreatedAt":"2018-02-08T09:18:21","Actor":"SteveSandersonMS","Number":"289","RawContent":null,"Title":"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)","State":"open","Body":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available.\r\n\r\nDiscussion for this issue is at https://github.com/aspnet/JavaScriptServices/issues/1522","Url":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Open issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289)"},{"Id":"294037619","IsPullRequest":false,"CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Number":"288","RawContent":null,"Title":"ASP.NET Core 2.1 high-level planning","State":"open","Body":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/6604)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846","Url":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Open issue \"ASP.NET Core 2.1 high-level planning\" (#288)"},{"Id":"292632569","IsPullRequest":false,"CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Number":"287","RawContent":null,"Title":"Introduction of new meta-package \"Microsoft.AspNetCore.App\"","State":"open","Body":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually.\r\n\r\nDiscussion for this issue at https://github.com/aspnet/MetaPackages/issues/255","Url":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Open issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287)"},{"Id":"287579430","IsPullRequest":false,"CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Number":"286","RawContent":null,"Title":"Remove project file elements added for WebApiCompatShim in 2.0","State":"open","Body":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229.","Url":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Open issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286)"}],"ResultType":"GitHubIssue"},"Announcements":{"Issues":[{"Id":"353145143","IsPullRequest":false,"CreatedAt":"2018-08-22T22:11:39","Actor":"pranavkm","Number":"315","RawContent":null,"Title":"3.0: Deprecating MvcPrecompilation tool ","State":"open","Body":"In ASP.NET Core 1.1, we introduced the `Microsoft.AspNetCore.Mvc.Razor.ViewCompilation` (MVC precompilation tool) package that added support for publish time compilation of Razor files (.cshtml files). Starting in ASP.NET Core 2.1, we introduced the [Razor SDK](https://docs.microsoft.com/en-us/aspnet/core/razor-pages/sdk?view=aspnetcore-2.1) that expanded on the features of the precompilation tool by adding support for build and publish time of Razor files. The SDK allows for verifying the correctness of cshtml files at build time while also improving on startup time for applications. The Razor SDK is on by default and no gesture is required to start using it.\r\n\r\nIn 3.0, we plan to remove the earlier MVC precompilation tool. Earlier versions of the package will continue receiving important bug and security fixes as part of our patch release. \r\n\r\nFor users of ASP.NET Core 2.1 or later, we recommend migrating to the Razor SDK if you haven't already. If you're currently using the precompilation tool and are unable to migrate to the Razor SDK due to bugs or missing features, please file an issue at https://github.com/aspnet/Razor/issues.\r\n\r\nPlease use https://github.com/aspnet/Mvc/issues/8313 for discussions.","Url":"https://github.com/aspnet/Announcements/issues/315","RelatedDescription":"Open issue \"3.0: Deprecating MvcPrecompilation tool \" (#315)"},{"Id":"349340221","IsPullRequest":false,"CreatedAt":"2018-08-10T00:56:39","Actor":"natemcmaster","Number":"314","RawContent":null,"Title":"3.0: deprecating Microsoft.AspNetCore.All","State":"open","Body":"Earlier this year, we announced the Microsoft.AspNetCore.App metapackage (see https://github.com/aspnet/Announcements/issues/287). That announcement said:\r\n\r\n> The existing Microsoft.AspNetCore.All meta-package will continue to be made available throughout the 2.x lifecycle, but **we recommend customers move to the new Microsoft.AspNetCore.App meta-package** and then add individual references to any of the removed packages if their app requires it.\r\n\r\nSee [our documentation for details](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/metapackage?view=aspnetcore-2.1#migrating-from-microsoftaspnetcoreall-to-microsoftaspnetcoreapp) on how to migrate from Microsoft.AspNetCore.All to .App.\r\n\r\nWe have begun working on ASP.NET Core 3.0, and as a part of that, we will stop producing the Microsoft.AspNetCore.All metapackage and the matching Microsoft.AspNetCore.All shared framework in the 3.0 nightly builds.\r\n\r\nThis package will still be available in ASP.NET Core 2.2 and will continue to receive servicing updates in ASP.NET Core 2.1.\r\n\r\nPlease use https://github.com/aspnet/Home/issues/3418 for questions or comments.\r\n","Url":"https://github.com/aspnet/Announcements/issues/314","RelatedDescription":"Open issue \"3.0: deprecating Microsoft.AspNetCore.All\" (#314)"},{"Id":"346800428","IsPullRequest":false,"CreatedAt":"2018-08-01T23:00:38","Actor":"pranavkm","Number":"313","RawContent":null,"Title":"CorsMiddleware must be explicitly configured to specify all allowed headers","State":"open","Body":"In versions of ASP.NET Core 2.1.0 and earlier, the CorsMiddleware always allowed certain headers in the `Access-Control-Request-Headers` to be sent regardless of the values configured in `CorsPolicy.Headers`. This list of headers includes:\r\n\r\n* `Accept`\r\n* `Accept-Language`\r\n* `Content-Language`\r\n* `Origin`\r\n\r\nFor instance, consider an application configured as follows:\r\n\r\n```C#\r\napp.UseCors(policy => policy.WithHeaders(\"Cache-Control\"));\r\n```\r\n\r\nIn 2.1 and earlier, the CORS middleware would respond successfully to a preflight request with the following request header:\r\n\r\n`Access-Control-Request-Headers: Cache-Control, Content-Language`\r\n\r\nFor 2.2.0, the CORS middleware would no longer treat this as a policy match. The server must explicitly configure policy to allow the `Content-Language` header:\r\n\r\n```C#\r\napp.UseCors(policy => policy.WithHeaders(\"Cache-Control\", \"Content-Language\"));\r\n```\r\n\r\nFor more information on CORS, please refer to [the documentation](https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1).","Url":"https://github.com/aspnet/Announcements/issues/313","RelatedDescription":"Open issue \"CorsMiddleware must be explicitly configured to specify all allowed headers\" (#313)"},{"Id":"345927303","IsPullRequest":false,"CreatedAt":"2018-07-30T20:44:14","Actor":"danroth27","Number":"312","RawContent":null,"Title":"Razor compilation APIs exposing Roslyn types being obsoleted in 2.2.0 and removed in 3.0.0","State":"open","Body":"As part of the 2.1.0 release, ASP.NET Core added support for build time compilation of cshtml files (Razor Views & Razor Pages). This feature is on by default and allows build time verification of the correctness of Razor files, and also faster startup performance. Additionally, MVC watches for changes to cshtml files and seamlessly updates build-time compiled views with runtime compiled views. This allows editing cshtml files and then refreshing the browser to see the changes.\r\n\r\nMVC uses the app's compilation context, details about the references and settings that were used to compile the source code (.cs) in the app, to compile views at runtime. In addition to the compilation context, MVC exposes options such as [RazorViewEngineOptions.CompilationCallback](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.razorviewengineoptions.compilationcallback?view=aspnetcore-2.1) and [AdditionalCompilationReferences](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.razorviewengineoptions.additionalcompilationreferences?view=aspnetcore-2.1) that allow configuring compilation specifically for runtime. \r\n\r\nRuntime specific customizations are unavailable at build time and consequently the two outputs could be different.\r\n\r\nTo address this inconsistency, we plan on removing APIs in MVC that change or modify runtime compilation. For 2.2.0, we're marking these APIs obsolete with the intent to remove them in 3.0.0. This is the list of affected APIs:\r\n\r\n* Properties on `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions`\r\n    * `AdditionalCompilationReferences`\r\n    * `CompilationCallback`\r\n\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeature`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorReferenceManager`\r\n\r\nNo changes are required to your application if it does not use these APIs.\r\n\r\nApps using these APIs to add assembly references to the compilation context for runtime compilation should instead use [`ApplicationPartManager.AddApplicationPart`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.mvccoremvccorebuilderextensions.addapplicationpart) to add application parts for each assembly reference, or switch to a built-time compilation model (see [Create reusable UI using the Razor Class Library project](https://docs.microsoft.com/aspnet/core/razor-pages/ui-class)).\r\n\r\nOther scenarios blocked by the removal of these APIs and not covered by alternative MVC features should raised in the linked discussion issue.\r\n\r\nFor discussion, use https://github.com/aspnet/Mvc/issues/8177","Url":"https://github.com/aspnet/Announcements/issues/312","RelatedDescription":"Open issue \"Razor compilation APIs exposing Roslyn types being obsoleted in 2.2.0 and removed in 3.0.0\" (#312)"},{"Id":"339929062","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:26","Actor":"blowdart","Number":"311","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0 and 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles such requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2708\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application is behind a forwarding proxy such is Internet Information Server, Azure Application Gateway or nginx you will not be affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Server.Kestrel.Core with a vulnerable version listed below and not hosted behind a forwarding proxy.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 2.0.4 <br /> 2.1.2\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8 <br /> 2.1.0, 2.1.1  | 2.0.9 <br /> 2.1.2\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1 | 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Server.Kestrel.Core` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET 2.0 & 2.1 not targeting the meta-packages\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects.\r\n\r\nThe `project.assets.json`files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.All` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.9\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) .\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Server.Kestrel.Core/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Server.Kestrel.Core`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.34 />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.1 (July 10, 2018): Added .App meta-package details.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/311","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\" (#311)"},{"Id":"339928979","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:13","Actor":"blowdart","Number":"310","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass in ASP.NET Core when the number of incorrect login attempts is not validated. An attacker who successfully exploited this vulnerability could try an infinite number of authentication attempts.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core validates the number of incorrect login attempts.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Identity/issues/1870\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's implementation of multi-factor authentication you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Identity with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Identity | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5 <br /> 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5 <br /> 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 1.0.6 <br /> 1.1.6 <br /> 2.0.4 <br /> 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Identity` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET Core 1.0, 1.1 or 2.0 not targeting the metapackage.\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Identity` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Identity` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"Microsoft.AspNetCore.Identity\" : \"1.0.5\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `Microsoft.AspNetCore.Identity`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `Microsoft.AspNetCore.Identity` version 1.0.5.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Identity` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Identity \": \"1.0.6\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Identity/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Identity`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Identity` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Identity/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Identity`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Identity` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Identity` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Identity\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Martin Knafve](https://www.linkedin.com/in/martin-knafve-99187a2/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8171)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/310","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\" (#310)"},{"Id":"336797507","IsPullRequest":false,"CreatedAt":"2018-06-28T22:10:48","Actor":"natemcmaster","Number":"309","RawContent":null,"Title":"For contributors: branch name changes in ASP.NET Core repos","State":"open","Body":"Over the coming weeks, we are planning on making the following changes to most projects in https://github.com/aspnet that are used to build ASP.NET Core.\r\n\r\n* We will create a branch named \"release/2.2\". Work on this branch will be part of [ASP.NET Core 2.2](https://github.com/aspnet/Announcements/issues/307)\r\n* We will rename the \"dev\" branch to \"master\". This is part of aligning aspnet repos with the branch naming used by other Microsoft teams.\r\n* We will change the default branch to \"master\" on GitHub.\r\n* Update the product branding on \"master\" to 3.0. Work on this branch will eventually become part of [ASP.NET Core 3.0](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/)\r\n\r\nTo help us prevent too much drift between release/2.2 and master, we will enable some automation to merge all changes from release/2.2 into master (3.0).\r\n\r\n## FAQ\r\nThis change may affect the way you help contribute to ASP.NET Core. As a result of this change and dicussion within our team, we've anticipated at least two questions you may have.\r\n\r\n#### Which branch should I use for my work?\r\n<img src=\"https://user-images.githubusercontent.com/2696087/42063035-b5fc9e42-7ae4-11e8-9916-a708fcc8e0e6.png\" width=\"500\" />\r\n\r\n#### I opened my PR to the wrong branch. What should I do?\r\n \r\nYou can edit a PR’s target branch.\r\n\r\n<img width=\"700\" alt=\"one\" src=\"https://user-images.githubusercontent.com/2696087/42063074-eb3060a8-7ae4-11e8-8ec2-d569f8e07f78.png\">\r\n<img width=\"700\" alt=\"two\" src=\"https://user-images.githubusercontent.com/2696087/42063083-f8a9564a-7ae4-11e8-91f0-f57e039085f8.png\">\r\n\r\n\r\n## Questions? Comments?\r\n\r\nThis issue is locked to reduce noise on this repo. Please use https://github.com/aspnet/Home/issues/3278 for questions and comments.\r\n\r\nThanks,\r\nNate","Url":"https://github.com/aspnet/Announcements/issues/309","RelatedDescription":"Open issue \"For contributors: branch name changes in ASP.NET Core repos\" (#309)"},{"Id":"335579239","IsPullRequest":false,"CreatedAt":"2018-06-25T21:44:22","Actor":"divega","Number":"308","RawContent":null,"Title":"EF Core 2.2 Roadmap","State":"open","Body":"## EF Core 2.2 is a small release\r\n\r\nUnlike EF Core 2.1, the 2.2 release will include a small number of new features. We are concentrating most of our efforts to add new functionality on the 3.0 release. Still, you can expect 2.2 to include lots of bugs fixes, community contributions and small improvements.\r\n\r\nYou can access the list of issues currently assigned to the 2.2 milestone using [this query](https://github.com/aspnet/EntityFrameworkCore/issues?q=is%3Aopen+is%3Aissue+milestone%3A2.2.0+sort%3Areactions-%2B1-desc) on our issue tracking system.  \r\n\r\n## Schedule\r\nThe schedule of EF Core 2.2 will align with the schedule of .NET Core and ASP.NET Core 2.2. See [the ASP.NET Core 2.2 Roadmap announcement](https://github.com/aspnet/Announcements/issues/307).\r\n\r\nOur current plan is to have three previews before we ship RTM near the end of 2018:\r\n\r\n- August – Preview 1\r\n- September - Preview 2\r\n- October - Preview 3\r\n- Before end-of-year – RTM\r\n\r\n As usual, this post reflects our current plan, but things may change as we make progress. \r\n\r\n## New features\r\n\r\n### Reverse engineering of database views into query types\r\n\r\nIn EF Core 2.1 we added query types, which allow mapping .NET objects to views and tables without keys. In 2.2, we plan to leverage this new capability to automatically map existing database views to query types. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/1679.\r\n\r\n###  Support for collections of owned entities\r\n\r\nIn EF Core 2.0 we added the concept of owned entity types, which allows modeling ownership relationship that are common between entities that are part of the same document in document-oriented databases or the same aggregate if you use Domain-Driven Design concepts in your model.\r\n\r\nUntil now, we only support reference navigation properties to owned entities. In EF Core 2.2, we plan to enhance this functionality to map collection navigation properties to owned entities. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/8172.\r\n\r\n## Other work\r\n\r\nThere are some additional work items that are not strictly EF Core 2.2 features, but we still track as part of the 2.2 milestone because we are doing the work in the same timeframe:\r\n\r\n### Cosmos DB provider\r\n\r\nA lot of our efforts are going into productizing an EF Core provider for the SQL API in Cosmos DB.\r\nWe have already created a prototype, which we have shown in demos such as in this [this EF Core 2.1 talk](https://www.youtube.com/watch?v=k55kDH_ixrQ) we did at the Microsoft Build conference.\r\n\r\nDue to competing priorities, releasing a preview of this provider has taken more than what we originally planned, but we are working on it now, and the current plan is to release a stable version by the end of this calendar year.\r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/12086. \r\n\r\n### Preview of spatial support for SQL Server\r\n\r\nWe are also focusing on adding spatial support as an extension to the SQL Server provider for EF Core.\r\nNote that the PostgreSQL provider (Npgsql) already added support in EF Core 2.1. Beside implementing this functionality for SQL Server, we are working closely with the developers of Npgsql to try to achieve a consistent and hopefully improved experience across providers.\r\n\r\nNote that we aren't committing to having a final version of the spatial support for the end of the current calendar year. But we are actively working on this now, and as we make progress, we should be able to provide a more precise estimate.   \r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/1100.\r\n\r\n### Improve test coverage for LINQ and reduce query regressions in future releases\r\n\r\nIn the last few releases, we have seen that when we commit improvements to our LINQ implementation, we often break queries that were previously working. The main challenge is that LINQ defines a huge space of possible queries to test, and it is very complex to measure what level of test coverage we have, even for a specific query operator. In the 2.2 timeframe, we will be investing on improving test coverage for this huge space. We also plan to experiment with new approaches to add appropriate coverage, and to reduce the likelihood of introducing regressions in future releases.\r\n\r\nYou can track our progress on this at https://github.com/aspnet/EntityFrameworkCore/issues/12046. \r\n\r\nFor discussion on this roadmap, please use https://github.com/aspnet/EntityFrameworkCore/issues/12465. ","Url":"https://github.com/aspnet/Announcements/issues/308","RelatedDescription":"Open issue \"EF Core 2.2 Roadmap\" (#308)"},{"Id":"335571873","IsPullRequest":false,"CreatedAt":"2018-06-25T21:19:36","Actor":"glennc","Number":"307","RawContent":null,"Title":"ASP.NET Core 2.2 Roadmap","State":"open","Body":"We have grouped the ASP.NET Core 2.2 release into a few themes:\r\n\r\n- APIs & Services\r\n- Server improvements\r\n- SignalR\r\n\r\n## Rough Schedule\r\nWe are currently planning to have 3 previews before RTM:\r\n - August – Preview 1\r\n - September - Preview 2\r\n - October - Preview 3\r\n - Before End-of-year – RTM\r\n\r\nAs with our previous roadmap posts this is what we intend right now, but it's subject to change as we continue development.\r\n\r\n## APIs and Services\r\n\r\nThe 'north star' for this version is to generate better metadata about your app and use that data to make your dev experience better and more productive. This is the main focus for 2.2.\r\n\r\n### API Controller conventions\r\nIn 2.1 we added controller specific conventions that make Web API development more convenient with the [ApiController attribute](https://docs.microsoft.com/en-us/aspnet/core/web-api/index?view=aspnetcore-2.1#annotate-class-with-apicontrollerattribute). In 2.2 we want to expand on this concept to provide metadata for API Explorer and provide a better end-to-end API documentation experience.\r\n\r\nWe want to make it possible for all MVC Core applications to have a good Swagger/OpenAPI definition by default. By following common patterns, your actions will produce rich metadata without falling into 'attribute soup' where you list every possible status code that every action in your app could return. We will include a default set of conventions that match what ASP.NET Core scaffolding generations. It will also be possible to write and share your own conventions to reflect your desired contracts. \r\n\r\nWe will include a set of analyzers that will help you find cases where code that doesn't match the API Explorer metadata, and a code-fix that provides options to explicitly specify the response type metadata, create a new convention with a different pattern, or just let you write code to satisfy the convention.\r\n\r\nAs a concrete example, you could write a convention that says \"every action method that starts with 'Create' will return an HTTP 201\". If you wrote the following code, then you would receive a warning.\r\n\r\n```csharp\r\n[HttpPost(\"/orders\")]\r\npublic ActionResult<Order> CreateOrder(OrderData orderData)\r\n{\r\n    ....\r\n    return Ok(new Order() {...});\r\n}\r\n```\r\n\r\nThis code doesn't match your Swagger/OpenAPI metadata (from the convention) - which says that this action returns a 201. Once you see this, you could `ctrl + .` to add the attributes for what we do know about this method, opting out of conventions, or you could change the code.\r\n\r\nThe analyzer will also be able to 'check your work' if you are being explicit about status codes and results using the existing attributes - it does not require you to use the conventions. Details for how this will all work can be discussed here: https://github.com/aspnet/Mvc/issues/7802\r\n\r\nLet's look at a more fleshed-out out example. The following code snippet is what is required to generate a reasonable Open API document for an action method that will get an item by ID or return a 404:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    [ProducesResponseType((int)HttpStatusCode.NotFound)]\r\n    [ProducesResponseType(typeof(CatalogItem),(int)HttpStatusCode.OK)]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\nIn 2.2 with the default conventions the following code should generate the same Open API document that the above code sample does, and this shipped analyzers will give you hints when you do something that doesn't match so you know to go and add attributes or change the conventions:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n### OpenAPI generation\r\nWith the conventions described above it will be possible for code that uses the API Explorer to generate Open API documents to be better by default, since the code you write will either follow the conventions or have attributes allowing generators to create better documents.\r\n\r\n### Dispatcher\r\nIn 2.2 we will introduce a new routing system that will expand the set of scenarios where routing is useful – tentatively called Dispatcher. \r\n\r\nThe current routing system was designed to support MVC’s historical scenarios without much thought to how routing and the composable middleware pipeline will work together. The Dispatcher is designed to run the URL matching step very early in the pipeline so that middleware can see the Endpoint that was selected as well as metadata that is associated with that endpoint. Like existing routing, the dispatcher will branch and call the actual endpoint at the end of the pipeline.\r\n\r\nA concrete example of how this helps us is with CORS. Today there is both a CORS middleware AND a CORS feature of MVC (https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1). Because routing information is deeply integrated with MVC we can't apply CORS policies that only apply to specific controllers until after we know what controller has been selected. However, if you also want CORS policies to apply to other parts of your pipeline then you need the middleware. This has been a source of confusion for many and we can simplify it if all of the middleware pipeline can have as much information about routing as MVC does today.\r\n\r\nWe’re also using this opportunity to make improvements to the performance of routing and dispatching for MVC and other scenarios.\r\n\r\n### HTTP API REPL tooling\r\nToday there are no tools built into Visual Studio or the dotnet CLI to help you execute HTTP verbs against your API. We have a great language, debugger, and framework but they are somewhat limited when it's difficult to send a POST to my app to see what happens. In 2.2 we want to build a CLI experience for exploring HTTP APIs to imcrease your API inner loop productivity. The CLI builds on all the features we've talked about above as some of its advanced features, like listing all routes in your app, are enabled by consuming the metadata we have about your app via Open API documents. That means the CLI should be useful for executing any HTTP verb, but really shines when you feed it more data like Open API docs. We intend to start by shipping this as a standalone global tool while we explore its feature set and potential.\r\n\r\nYou can see a demo and description of this in Scott Hunter and Scott Hanselman's BUILD talk here: https://youtu.be/KAIJ3ezQb3c?t=18m\r\n\r\n### API client generation (C# & TypeScript)\r\nOnce you have an API with rich metadata and done exploring and testing it, then you need to go and write some client code to call and make use of your API. We are going to build an experience for generating this code based on the same data and documentation described above. We envision a few pieces for this story, one part is a dotnet tool that can generate code from an Open API document, the other is MSBuild SDK work to allow a `ServiceReference` to another project in a solution. That reference will cause build time client code generation to happen via the tool that can generate code. We expect this to work in a similar way to the EF Core tooling experience, where your application is built and most of your startup code executed but instead of running it we use the data we have about your code to generate a client.\r\n\r\n### Authorization Server\r\nOne of the largest gaps we’ve had has been around authorization for applications beyond a simple forms based login. We plan to fill that gap with a simple to use OpenID Connect based authorization server, which will allow your ASP.NET application to act as an authentication point for your projects, be they web site to API, SPA to API, native application to an API or, for distributed applications API to API. As we are concentrating on first party applications we can make the code you need to plumb in trivial, getting as close to zero configuration as you can,  we’re not aiming to replace the excellent third-party solutions out there which enable richer scenarios like third-party applications or which provide a flexibility in configuration and authentication flow.\r\n\r\n## Server Improvements\r\n\r\n### Health Checks\r\nThis feature is a way to trivially setup an endpoint in your application that can be used to check the health of your application, potentially taking into account things like memory consumption or database availability as well as just \"can I accept a HTTP request\".\r\n\r\n### HTTP/2 in Kestrel & HttpClient\r\nThe title says it all in this case. HTTP/2 support for all. We started this work some time ago, and have had the protocol mostly implemented for a while but not compiled into the product since it wasn't ready. This version we will finish that work and implement the missing features.\r\n\r\n### In-proc ANCM\r\nRunning ASP.NET Core applications in-process in IIS, giving a significant performance boost.\r\n\r\n## SignalR\r\n\r\n### Add Java & C++ clients\r\nAllow customers using Java or C++ to connect to SignalR servers, and the [Azure SignalR Service](https://azure.microsoft.com/en-us/blog/azure-signalr-service-a-fully-managed-service-to-add-real-time-functionality/).\r\n\r\n## Other\r\nAs with all releases there is a large tail of bug fixes, performance improvements, small features, and community PRs that we will also work on. You can see the full list of work by browsing the 2.2 milestones on the various [repositories](https://github.com/aspnet/).\r\n\r\nFor discussion on the roadmap in general, use https://github.com/aspnet/Home/issues/3265","Url":"https://github.com/aspnet/Announcements/issues/307","RelatedDescription":"Open issue \"ASP.NET Core 2.2 Roadmap\" (#307)"},{"Id":"333804954","IsPullRequest":false,"CreatedAt":"2018-06-19T19:21:13","Actor":"anurse","Number":"306","RawContent":null,"Title":"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR Client from UWP applications where the minimum version is set to \"Windows 10, version 1803\". However, these fixes also require some additional dependencies.\r\n\r\n**NOTE**: UWP Applcations with a minimum version set **below** \"Windows 10, version 1803\" (for example, if the minimum version is set to \"Fall Creators Update\") are **not** affected by this issue and **do not require** these steps.\r\n\r\nIn order to use the SignalR Client in UWP applications where the minimum version is set to \"Windows 10, version 1803\" you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/2406","Url":"https://github.com/aspnet/Announcements/issues/306","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803\" (#306)"},{"Id":"333802959","IsPullRequest":false,"CreatedAt":"2018-06-19T19:15:05","Actor":"anurse","Number":"305","RawContent":null,"Title":"SignalR Client 2.1.1 in Xamarin","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR **Client** from Xamarin. However, these fixes also require an updated build of Xamarin.iOS and Xamarin.Android, as well as some additional dependencies.\r\n\r\nIn order to use the SignalR Client in Xamarin applications you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Upgrade Xamarin to the appropriate version:\r\n    * Xamarin.Android `8.4.0.1`\r\n    * Xamarin.iOS `11.14.0.4`\r\n    * These will be included in:\r\n      * Visual Studio 15.8 **Preview 3** (not released at the time of publishing, but coming soon)\r\n      * Visual Studio for Mac 7.6 **Preview 3** (not released at the time of publishing, but coming soon)\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/1886","Url":"https://github.com/aspnet/Announcements/issues/305","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in Xamarin\" (#305)"},{"Id":"329851587","IsPullRequest":false,"CreatedAt":"2018-06-06T13:30:30","Actor":"ToLearnMoe","Number":"304","RawContent":null,"Title":"怎么找工作啊","State":"closed","Body":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Closed issue \"怎么找工作啊\" (#304)"},{"Id":"329603099","IsPullRequest":false,"CreatedAt":"2018-06-05T20:11:55","Actor":"AngelosP","Number":"303","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"closed","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\r\n\r\nFor discussion, use https://github.com/aspnet/Tooling/issues/1075","Url":"https://github.com/aspnet/Announcements/issues/303","RelatedDescription":"Closed issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#303)"},{"Id":"327435771","IsPullRequest":false,"CreatedAt":"2018-05-29T18:26:40","Actor":"shirhatti","Number":"302","RawContent":null,"Title":"IIS in-process hosting moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving IIS in-process hosting out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will ship IIS in-process hosting as part of the ASP.NET Core 2.2 release.\r\n\r\n### Why?\r\n\r\nIIS in-process hosting  is a brand new server implementation and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/IISIntegration/issues/878","Url":"https://github.com/aspnet/Announcements/issues/302","RelatedDescription":"Open issue \"IIS in-process hosting moved out of ASP.NET Core 2.1\" (#302)"},{"Id":"322891671","IsPullRequest":false,"CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Number":"301","RawContent":null,"Title":"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available","State":"open","Body":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Open issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301)"},{"Id":"321270218","IsPullRequest":false,"CreatedAt":"2018-05-08T17:07:04","Actor":"blowdart","Number":"300","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2553\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_","Url":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300)"},{"Id":"320441265","IsPullRequest":false,"CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Number":"299","RawContent":null,"Title":"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/WebHooks/issues/296","Url":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Open issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299)"},{"Id":"309862672","IsPullRequest":false,"CreatedAt":"2018-03-29T18:44:48","Actor":"glennc","Number":"298","RawContent":null,"Title":"Migrating from aspnetcore docker repos to dotnet","State":"open","Body":"Starting with .NET Core 2.1-preview2, we intend to migrate from using the microsoft/aspnetcore-build and microsoft/aspnetcore Docker repos to the microsoft/dotnet Docker repo.  We will continue to ship patches and security fixes for the existing aspnetcore images but any new images for 2.1 and higher will be pushed to microsoft/dotnet.\r\n\r\nDockerfiles using `microsoft/aspnetcore:<version>` should change to `microsoft/dotnet:<version>-aspnetcore-runtime`.\r\n\r\nDockerfiles using `microsoft/aspnetcore-build` that do not require Node should just change to `microsoft/dotnet:<version>-sdk`.\r\n\r\nDockerfiles using Node from the `microsoft/aspnetcore-build` image will either need to install Node into their own image or use mult-stage builds as described in the Dockerfile examples at the end of this announcement.\r\n\r\nThe `ASPNETCORE_URLS` env var that allows ASP.NET Core apps to accept traffic from outside the container will be set in all the `dotnet` images, which was a common early stumbling block for people getting started with ASP.NET Core and Docker. PR is [here](https://github.com/dotnet/dotnet-docker/pull/450)\r\n\r\n### Why the merge?\r\n\r\nFor some time we have been seeing people search for and find the `microsoft/dotnet` images and never realise that there are aspnetcore ones. This could be problematic in the past as the dotnet images were not optimised for ASP.NET Core, making things a little harder or slower. But with changes in the way ASP.NET Core works in 2.1 it was going to be much more impactful, in that ASP.NET Core applications were not likely to run on the base dotnet image. Given that we also thought it made more sense to have a single repository for all images, as ASP.NET is just part of .NET, we are taking this opportunity to remove the potential source of confusion and wasted time for our customers.\r\n\r\n### Why no Node?\r\nThere are two main reasons for this:\r\n\r\n  1. Multi-stage build now makes it easier to pull in the Node image for purely build concerns.\r\n  2. The ASP.NET Core templates no longer have a hard dependency on Node.\r\n\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n\r\n### Dockerfile examples\r\n\r\nIf you need Node then you will need to add it in your own Dockerfile, like this:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n#setup node\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\n# copy everything else and build\r\nCOPY . ./\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n#setup node, this is only needed if you use Node both at runtime and build time. Some people may only need the build part.\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\nCOPY --from=build-env /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nIf you only need Node at build then you may also be able to take advantage of multi-stage build like the following:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\nFROM node as clientBuild\r\n#Do npm restore and other Node stuff.\r\n\r\n#Merge the contents of your .NET build env and your clientBuild and publish.\r\nFROM build-env as publish\r\n# copy everything else and build\r\nCOPY --from=clientBuild . .\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n\r\nCOPY --from=publish /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n","Url":"https://github.com/aspnet/Announcements/issues/298","RelatedDescription":"Open issue \"Migrating from aspnetcore docker repos to dotnet\" (#298)"},{"Id":"305936138","IsPullRequest":false,"CreatedAt":"2018-03-16T14:09:54","Actor":"mnmr","Number":"297","RawContent":null,"Title":"Model binding accesses read-only properties in post-back","State":"closed","Body":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355.","Url":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297)"},{"Id":"305310538","IsPullRequest":false,"CreatedAt":"2018-03-14T20:08:36","Actor":"halter73","Number":"296","RawContent":null,"Title":"Managed sockets will replace libuv as Kestrel's default transport","State":"open","Body":"Starting in ASP.NET Core 2.1.0, managed sockets will be replacing libuv as Kestrel's default transport.\r\n\r\nThis change should only break applications that bind to non-TCP endpoints or explicitly call `IWebHostBuilder.UseLibuv()` and reference the libuv transport transitively through the Microsoft.AspNetCore.App and/or Microsoft.AspNetCore.Server.Kestrel NuGet packages.\r\n\r\nTo fix the break simply add a reference to Microsoft.AspNetCore.All and/or Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.\r\n\r\nWhile switching to the managed socket transport should be seamless<sup>1</sup>, if you want to continue using the libuv transport in 2.1.0 you will need to explicitly call `UseLibuv()` and reference the libuv transport either directly or through the \"All\" metapackage.\r\n\r\n<sup>1</sup> Unless you are trying to bind to a Unix domain socket or use systemd socket activation. As of 2.1, only the libuv transport supports binding to these kinds of endpoints.\r\n\r\n---\r\n\r\n*Please use aspnet/KestrelHttpServer#2360 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/296","RelatedDescription":"Open issue \"Managed sockets will replace libuv as Kestrel's default transport\" (#296)"},{"Id":"304854672","IsPullRequest":false,"CreatedAt":"2018-03-13T17:07:23","Actor":"blowdart","Number":"295","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\r\n\r\n## Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core versions 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where an elevation of privilege vulnerability exists when a ASP.NET Core web application fails to validate web requests correctly.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Home/issues/2954\r\n\r\n### Mitigation factors\r\n\r\nSites are not vulnerable to this elevation of privilege when:\r\n\r\n* The site is hosted behind a proxy, such as Internet Information Services (IIS), NGINX, or Apache, where:\r\n\r\n  * The proxy validates the host header, and\r\n  * The proxy is configured to listen on fully qualified domain names or\r\n  * The proxy is configured with a wildcard subdomain where the root domain is fully controlled by the site owner.\r\n\r\nFor example, if IIS is configured to respond to requests for `contoso.com` or `*.contoso.com` hosts, the application is protected.\r\n\r\nIf IIS is configured to respond to any request from any host, the application is vulnerable.\r\n\r\nKestrel does not have the capability to validate host headers and is vulnerable if not placed behind a proxy that performs the host header validation.\r\n\r\nApps hosted in Azure Web Apps are not susceptible to this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core hosted application which is directly exposed to the internet, or hosted behind a proxy which does not validate or restict host headers to known good values.\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.HttpOverrides | 2.0.0, 2.0.1 |  2.0.2 and later\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1 |  2.0.2 and later\r\n\r\n*No patches are available for ASP.NET Core 1.0.x or ASP.NET Core 1.1.x. Microsoft requires that you place your 1.x ASP.NET Core application behind a proxy.\r\nYou must address the configuration of your proxy to protect your application. If you're not running ASP.NET Core 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0.\r\nand add the host validating middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/.*\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected?\r\n\r\nReview the server and proxy configuration [instructions](#configuration) below to see if your system is configured correctly, and adjust the configuration if necessary.\r\n\r\n### How do I fix the issue?\r\n\r\nYou must address the [configuration](#configuration) of your server or proxy to protect your application to limit requests to known hosts.\r\n\r\nIf you're not running Kestrel 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0 and follow the 2.0 instructions below.\r\n\r\nASP.NET Core 2.0.x applications must [update your code](#app-update) to fully protect your application.\r\n\r\n#### <a name=\"configuration\"></a> Server and Proxy configuration\r\n\r\nYou must examine your externally facing server or proxy configuration and ensure it requires host headers with fully qualified domain names, or known sub-domains if you are using sub-domain wild cards.\r\n\r\n##### ASP.NET Core applications behind [IIS](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/)\r\n\r\nTo configure IIS to only respond to know hosts:\r\n\r\n* Open IIS Manager.\r\n* Expand the **Sites** node for the machine you want to configure.\r\n* Select the site by clicking on the site.\r\n* In the **Actions** list on the right-hand side of IIS Manager, click **Bindings**.\r\n* Edit any bindings that do not have a host name to specify one. Do not use a `*` wildcard unless it's against a domain under your control. For example, `*.contoso.com` is safe, `*.com` is not.\r\n\r\n##### ASP.NET Core applications running publicly on [Kestrel](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel)\r\n\r\nKestrel does not have the capability to validate host headers. It must either be placed behind a proxy that performs the host header validation or the validation must be performed within the application by adding  host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/. You must also [update your dependencies](#app-update) to fully protect your application.\r\n\r\n##### ASP.NET Core applications running on [HTTP.SYS](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/httpsys)\r\n\r\nTo configure URL prefixes and ports, you can use the `UseUrls` extension method, the `urls` command-line argument, the ASPNETCORE_URLS environment variable, or the `UrlPrefixes` property on [HttpSysOptions](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions). The following code example uses `UrlPrefixes`.\r\n\r\n```c#\r\npublic static IWebHost BuildWebHost(string[] args) =>\r\n    WebHost.CreateDefaultBuilder(args)\r\n        .UseStartup<Startup>()\r\n        .UseHttpSys(options =>\r\n        {\r\n            // The following options are set to default values.\r\n            options.Authentication.Schemes = AuthenticationSchemes.None;\r\n            options.Authentication.AllowAnonymous = true;\r\n            options.MaxConnections = null;\r\n            options.MaxRequestBodySize = 30000000;\r\n            options.UrlPrefixes.Add(\"http://localhost:5000\");\r\n        })\r\n        .Build();\r\n```\r\n\r\n##### ASP.NET Core applications behind [NGINX](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx)\r\n\r\nTo configure NGINX as a reverse proxy to forward requests to your ASP.NET Core app, replace the contents */etc/nginx/sites-available/default* with the following:\r\n\r\n```NGINX\r\nserver {\r\n    listen        80;\r\n    server_name   example.com *.example.com;\r\n    location / {\r\n        proxy_pass         http://localhost:5000;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header   Upgrade $http_upgrade;\r\n        proxy_set_header   Connection keep-alive;\r\n        proxy_set_header   Host $host;\r\n        proxy_cache_bypass $http_upgrade;\r\n    }\r\n}\r\n```\r\n\r\nNote that with NGINX, when there is no match for `server_name`, NGINX will pick the default server. If no default server has been defined, the first server in the conf file is the default server. Best practice is to add a specific default server which returns a status code of 444 in the conf file. An example default server configuration would be as follows:\r\n\r\n```NGINX\r\nserver {\r\n    listen   80 default_server;\r\n    # listen [::]:80 default_server deferred;\r\n    return   444;\r\n}\r\n```\r\n\r\nWith the preceding configuration file and default server, NGINX accepts public traffic on port 80 with host header `example.com` or `*.example.com`. Requests not matching these hosts won't get forwarded to Kestrel. NGINX forwards the matching requests to Kestrel at `http://localhost:5000`. See [How nginx processes a request](https://nginx.org/docs/http/request_processing.html) for more information.\r\n\r\nOnce the NGINX configuration is established, run `sudo nginx -t` to verify the syntax of the configuration files. If the configuration file test is successful, force NGINX to pick up the changes by running `sudo nginx -s reload`.\r\n\r\n##### ASP.NET Core applications behind [Apache](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache)\r\n\r\nConfiguration files for Apache are located within the `/etc/httpd/conf.d/` directory. Any file with the `*.conf*` extension:\r\n\r\n* Is processed in alphabetical order, and\r\n* The module configuration files in `/etc/httpd/conf.modules.d/` are processed. The module configuration files in `/etc/httpd/conf.modules.d/` contain any configuration files necessary to load modules.\r\n\r\n\r\n```\r\n<VirtualHost *:80>\r\n    ProxyPreserveHost On\r\n    ProxyPass / http://127.0.0.1:5000/\r\n    ProxyPassReverse / http://127.0.0.1:5000/\r\n    ServerName www.example.com\r\n    ServerAlias *.example.com\r\n</VirtualHost>\r\n```\r\n\r\nThe `VirtualHost` block can appear multiple times, in one or more files on a server. In the preceding configuration file, Apache accepts public traffic on port 80. The domain `www.example.com` is being served, and the `*.example.com` alias resolves to the same website. See [Name-based virtual host support](https://httpd.apache.org/docs/current/vhosts/name-based.html) for more information. Requests are proxied at the root to port 5000 of the server at 127.0.0.1. For bi-directional communication, `ProxyPass` and `ProxyPassReverse` are required.\r\n\r\nSave the file and test the configuration. If everything passes, the response is `Syntax [OK]`.\r\n\r\n```bash\r\nsudo service httpd configtest\r\n```\r\n\r\nRestart Apache:\r\n\r\n```bash\r\nsudo systemctl restart httpd\r\nsudo systemctl enable httpd\r\n```\r\n\r\n\r\n#### <a name=\"app-update\"></a> ASP.NET Core 2.0 application code updates\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.6 or later.\r\n* Updating will pull in the fixed packages listed above.\r\n\r\nIf you're targeting .NET Framework, update the packages listed above to their safe version or later.\r\n\r\nIf your application is using Kestrel without a proxy or the HttpOverrides functionality (UseForwardedHeaders with ForwardedHost) you must also add the host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/tree/release/2.0/samples/HostFilteringSample/.\r\n\r\n---\r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. You must follow the update instructions below to address both types of dependency.\r\n\r\n### Direct dependencies\r\n\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on `Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file.\r\n\r\n### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Core\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.5\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the vulnerable metapackage, as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.5.\r\n\r\nTo update the version to the secure package, change the version number to a secure package version. In this example, update `Microsoft.AspNetCore.All` to 2.0.6 or later. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.6\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Framework\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has a reference to a single package, as seen by the `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a direct dependency on one of the vulnerable packages from the table above, `Microsoft.AspNetCore.HttpOverrides` version 2.0.1.\r\n\r\nTo update to the secure package, change the version number to the updated package version. In the example, this would be updating `Microsoft.AspNetCore.HttpOverrides` to 2.0.2 and later. Save the *csproj* file. The updated and secure *csproj* look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependency version.\r\n\r\n##### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to a compatible version. \r\n\r\nFor example if your project refers directly to `Microsoft.AspNetCore.Mvc.Cors` with a version number of `2.0.0`, when you update your `Microsoft.AspNetCore.Mvc` package to 2.0.1, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc 2.0.1 expected Microsoft.AspNetCore.Mvc.Cors >= 2.0.1 but received 2.0.0`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your *project.json* in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n###### Reviewing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review the *project.assets.json* file.\r\n\r\n###### Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names above and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example, the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n###### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Visual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for each of the vulnerable packages, using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the vulnerable versions table above.\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your *project.assets.json* file includes references to any of the vulnerable packages shown above, then you need to fix the transitive dependencies.\r\n\r\n###### Overriding transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages this means:\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned, you must add a direct dependency to the updated version by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referring the fixed version.\r\nFor example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.HttpOverrides` version 2.0.0 you would add a reference to the fixed version, that is, 2.0.2 or later.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverride\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n###### Rebuilding your application\r\n\r\nRebuild your application. Test and deploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Mikhail Shcherbakov](https://www.linkedin.com/in/mikhailshcherbakov/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0787)\r\n\r\n### Revisions\r\n\r\nV1.1 (Mar 15, 2018): NGINX configuration instructions updated, thanks to @buglloc\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-03-15_","Url":"https://github.com/aspnet/Announcements/issues/295","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\" (#295)"},{"Id":"304853568","IsPullRequest":false,"CreatedAt":"2018-03-13T17:04:23","Actor":"blowdart","Number":"294","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted behind Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/IISIntegration/issues/658\r\n\r\n### Mitigation Factors\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it is hosted behind an IIS server running AspNetCoreModule (ANCM) prior to 7.1.1990.0.\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nIf the file version is less than 7.1.1990.0 you are affected.\r\n\r\n### How do I fix the issue? \r\nInstall the latest version of the ASP.NET Core Hosting Bundle \r\n(You need only install a single version, i.e. installing Version 2.0 will protect Version 1.0/1.1 .NET Core applications and vice versa. Choose the one that corresponds to the highest runtime version on your server).\r\n\r\n* [Hosting Bundle for ASP.NET Core 1.0/1.1](https://go.microsoft.com/fwlink/?linkid=869677)\r\n* [Hosting Bundle for ASP.NET Core 2.0](https://go.microsoft.com/fwlink/?linkid=869674)\r\n\r\nThen restart IIS by running \r\n\r\n```\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nAndrei Gorlov\r\n\r\n### External Links\r\n\r\n[CVE-2018-0808](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0808)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_","Url":"https://github.com/aspnet/Announcements/issues/294","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\" (#294)"},{"Id":"303604146","IsPullRequest":false,"CreatedAt":"2018-03-08T19:36:01","Actor":"natemcmaster","Number":"293","RawContent":null,"Title":"Moving official daily builds to the dotnet-core MyGet feed ","State":"open","Body":"As part of ongoing infrastructural changes, we will be moving official daily of ASP.NET Core to the dotnet-core myget feed. This transition will happen over the next few weeks.\r\n\r\n**Old feed:** https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json\r\n**New feed:** https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\r\n\r\nWe recommend updating to use the dotnet-core feed to continue getting the latest daily builds of ASP.NET Core.\r\n\r\nWe are making this change to make it easier for you to pull daily builds that align with the .NET Core CLI and .NET Core runtime. Some of our existing MyGet feeds will continue to exist, but will not be used for official daily builds. Instead, those feeds will only be used for builds of experimental branches of aspnetcore.\r\n\r\nOther useful links:\r\nGallery: https://dotnet.myget.org/gallery/dotnet-core\r\nNuGet v2 source: https://dotnet.myget.org/F/dotnet-core/api/v2\r\nNPM feed: https://dotnet.myget.org/F/dotnet-core/npm/\r\n\r\nPlease use https://github.com/aspnet/Home/issues/2937 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/293","RelatedDescription":"Open issue \"Moving official daily builds to the dotnet-core MyGet feed \" (#293)"},{"Id":"302846756","IsPullRequest":false,"CreatedAt":"2018-03-06T20:07:15","Actor":"natemcmaster","Number":"292","RawContent":null,"Title":"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image","State":"open","Body":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349","Url":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Open issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292)"},{"Id":"301939059","IsPullRequest":false,"CreatedAt":"2018-03-02T23:33:38","Actor":"blowdart","Number":"291","RawContent":null,"Title":"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.","State":"open","Body":"This week saw an announcement of vulnerabilities in  SAML parsing libraries by [DUO Labs](https://duo.com/blog/duo-finds-saml-vulnerabilities-affecting-multiple-implementations). Whilst no Microsoft implementations were listed we've seen a number of customer questions about this, especially given the recent WS-Fed support added to ASP.NET Core. \r\n\r\nASP.NET and ASP.NET Core rely on libraries from the Windows Identity team. Their investigation shows [their libraries are not vulnerable](https://cloudblogs.microsoft.com/enterprisemobility/2018/03/02/latest-saml-vulnerability-not-present-in-azure-ad-and-adfs/) to this parsing vulnerability, thus any ASP.NET or ASP.NET Core application which uses the default Microsoft SAML libraries or authentication handlers are safe from this exploit.\r\n","Url":"https://github.com/aspnet/Announcements/issues/291","RelatedDescription":"Open issue \"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.\" (#291)"},{"Id":"300752371","IsPullRequest":false,"CreatedAt":"2018-02-27T18:58:59","Actor":"natemcmaster","Number":"290","RawContent":null,"Title":"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300","State":"open","Body":"Starting in .NET Core CLI 2.1.300-preview2, the following tools were added as bundled, top-level commands. These tools previously shipped as NuGet packages.\r\n\r\n - Microsoft.DotNet.Watcher.Tools (aka dotnet-watch)\r\n - Microsoft.EntityFrameworkCore.Tools.DotNet (aka dotnet-ef)\r\n - Microsoft.Extensions.SecretManager.Tools (aka dotnet-user-secrets)\r\n - Microsoft.Extensions.Caching.SqlConfig.Tools (aka dotnet-sql-cache)\r\n\r\nCommands like `dotnet watch`, `dotnet ef`, and `dotnet user-secrets` can be executed on any project without needing to install the command via \"dotnet restore\" or \"dotnet install tool\". The commands are available by default in all projects.\r\n\r\n### Upgrading from stable releases of .NET Core CLI (e.g. 2.1.5)\r\n\r\nUsing these tools as a DotNetCliToolReference will no longer work. If your .csproj file has the following lines, they can be removed.\r\n```xml\r\n<ItemGroup>\r\n   <DotNetCliToolReference Include=\"Microsoft.DotNet.Watcher.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.Caching.SqlConfig.Tools\" Version=\"(all versions)\" />\r\n</ItemGroup>\r\n```\r\n\r\n### Upgrading from .NET Core CLI 2.1.300-preview1\r\nFor early-adopters who tried the 2.1.300-preview1 release, you will no longer need to run `dotnet install tool -g` to acquire the following tools:\r\n - dotnet-watch\r\n - dotnet-user-secrets\r\n - dotnet-dev-certs\r\n - dotnet-sql-cache\r\n - dotnet-ef\r\n\r\nIf you had installed these tools in 2.1.300-preview1, you can uninstall them manually by deleting corresponding files from `%USERPROFILE%\\.dotnet\\tools\\` (Windows) or `$HOME/.dotnet/tools` (macOS/Linux).\r\n\r\n**For discussion use https://github.com/aspnet/DotNetTools/issues/399**","Url":"https://github.com/aspnet/Announcements/issues/290","RelatedDescription":"Open issue \"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300\" (#290)"},{"Id":"295436695","IsPullRequest":false,"CreatedAt":"2018-02-08T09:18:21","Actor":"SteveSandersonMS","Number":"289","RawContent":null,"Title":"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)","State":"open","Body":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available.\r\n\r\nDiscussion for this issue is at https://github.com/aspnet/JavaScriptServices/issues/1522","Url":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Open issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289)"},{"Id":"294037619","IsPullRequest":false,"CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Number":"288","RawContent":null,"Title":"ASP.NET Core 2.1 high-level planning","State":"open","Body":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/6604)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846","Url":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Open issue \"ASP.NET Core 2.1 high-level planning\" (#288)"},{"Id":"292632569","IsPullRequest":false,"CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Number":"287","RawContent":null,"Title":"Introduction of new meta-package \"Microsoft.AspNetCore.App\"","State":"open","Body":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually.\r\n\r\nDiscussion for this issue at https://github.com/aspnet/MetaPackages/issues/255","Url":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Open issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287)"},{"Id":"287579430","IsPullRequest":false,"CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Number":"286","RawContent":null,"Title":"Remove project file elements added for WebApiCompatShim in 2.0","State":"open","Body":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229.","Url":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Open issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1034573477620006913","CreatedAt":"2018-08-28T22:48:33+00:00","UserScreenname":"aspnet","Text":"We're live on https://t.co/4Ioo9jNSN2! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1034222603685179392","CreatedAt":"2018-08-27T23:34:18+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup - Tuesday at 3:45 PM Pacific / 10 UTC\n\nBenchmarks and Performan… https://t.co/0SJ32oq3iG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":9,"RawContent":null},{"Id":"1033133567704875008","CreatedAt":"2018-08-24T23:26:51+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core 2.2.0-preview1: HTTP/2 in Kestrel\nhttps://t.co/II7wNqYPgG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":103,"FavoriteCount":56,"RawContent":null},{"Id":"1032696620142419968","CreatedAt":"2018-08-23T18:30:35+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core 2.20-preview1: Open API Analyzers &amp; Conventions\nhttps://t.co/17azOu2fw6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":32,"RawContent":null},{"Id":"1032668796392095745","CreatedAt":"2018-08-23T16:40:01+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core 2.2.0-preview1: Healthchecks\nhttps://t.co/sgOqbrv2pW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":24,"RawContent":null},{"Id":"1032328487825096705","CreatedAt":"2018-08-22T18:07:45+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core 2.2.0-preview1 now available\nhttps://t.co/IOqvW1biUh","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":191,"FavoriteCount":139,"RawContent":null},{"Id":"1031951244510691328","CreatedAt":"2018-08-21T17:08:44+00:00","UserScreenname":"aspnet","Text":"Starting now! Join us at https://t.co/4Ioo9jNSN2 https://t.co/VOVl63Ju0r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":12,"RawContent":null},{"Id":"1031945377597939714","CreatedAt":"2018-08-21T16:45:25+00:00","UserScreenname":"aspnet","Text":"Starting soon! https://t.co/VOVl63Ju0r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1031661576607023105","CreatedAt":"2018-08-20T21:57:41+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup - Tuesday at 10 AM Pacific / 18 GMT\n\nhttps://t.co/eFOzgs22K8 Co… https://t.co/197VNX3jBa","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":44,"FavoriteCount":31,"RawContent":null},{"Id":"1026931265377730562","CreatedAt":"2018-08-07T20:41:07+00:00","UserScreenname":"aspnet","Text":"ICYMI live, here's this week's @aspnet Community Standup with THE WHOLE MVC TEAM! https://t.co/x7PM6Dvm91","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":8,"RawContent":null},{"Id":"1026880588324593664","CreatedAt":"2018-08-07T17:19:45+00:00","UserScreenname":"aspnet","Text":"If you're waiting for the standup to start, refresh https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null},{"Id":"1024410637982547968","CreatedAt":"2018-07-31T21:45:03+00:00","UserScreenname":"aspnet","Text":"Don't miss today's #ASPNET Community Standup at 3:45 Pacific / 22:45 UTC\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/PS5c7tfQh8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":7,"RawContent":null},{"Id":"1022251478616952832","CreatedAt":"2018-07-25T22:45:19+00:00","UserScreenname":"aspnet","Text":"Blazor 0.5.0 experimental release now available:\nhttps://t.co/M9ebowK4zB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":220,"FavoriteCount":121,"RawContent":null},{"Id":"1019628403316740096","CreatedAt":"2018-07-18T17:02:09+00:00","UserScreenname":"aspnet","Text":"Open source and open standards in the age of cloud AI by @timoreilly on stage now at #OSCON","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"1019621755286106114","CreatedAt":"2018-07-18T16:35:44+00:00","UserScreenname":"aspnet","Text":"Helping us understand Diversity and representation in #AI bias and development at #OSCON is @NikkyMill @GIRLSTEMSTARS #oscon2018","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"1019618189506957312","CreatedAt":"2018-07-18T16:21:34+00:00","UserScreenname":"aspnet","Text":"Open source means working together to achieve a common goal. Ying Xiong of @Huawei #oscon","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2018-09-06T05:30:20.9299948Z","RunDurationInMilliseconds":14442}