{"Data":{"Blog":{"FeedItems":[{"Title":"Update on .NET Standard adoption","PublishedOn":"2019-08-07T18:01:39+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"It&#8217;s about two years ago that I announced .NET Standard 2.0. Since then we&#8217;ve been working hard to increase the set of .NET Standard-based libraries for .NET. This includes many of the BCL...","Href":"https://devblogs.microsoft.com/dotnet/update-on-net-standard-adoption/","RawContent":null},{"Title":"Calling all .NET desktop and mobile developers!","PublishedOn":"2019-08-07T15:00:29+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"We would love to hear about your experience with building client applications in .NET. Your feedback will greatly help us to improve the .NET tooling and ensure our roadmap focuses on your needs....","Href":"https://devblogs.microsoft.com/dotnet/calling-all-net-desktop-and-mobile-developers/","RawContent":null},{"Title":"Try out Nullable Reference Types","PublishedOn":"2019-08-06T20:29:02+00:00","CommentsCount":49,"FacebookCount":0,"Summary":"Try out Nullable Reference Types\nWith the release of .NET Core 3.0 Preview 7, C# 8.0 is considered &#34;feature complete&#34;. That means that the biggest feature of them all, Nullable Reference...","Href":"https://devblogs.microsoft.com/dotnet/try-out-nullable-reference-types/","RawContent":null},{"Title":"Improving .NET Core installation in Visual Studio and on Windows","PublishedOn":"2019-08-06T02:07:24+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Visual Studio 2019 version 16.3 and .NET Core 3.0 Preview 7 improve the installation experience of .NET Core on Windows. The goal is to reduce the number of .NET Core versions that might be on a...","Href":"https://devblogs.microsoft.com/dotnet/improving-net-core-installation-in-visual-studio-and-on-windows/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 7 and Entity Framework 6.3 Preview 7","PublishedOn":"2019-07-23T17:06:53+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are making new previews of EF Core 3.0 and EF 6.3 available on nuget.org.\n.NET Core 3.0 Preview 7 and ASP.NET Core 3.0 Preview 7 were also made available today.\nWe encourage you to install...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-7-and-entity-framework-6-3-preview-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 7","PublishedOn":"2019-07-23T17:00:54+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 7. We&#8217;ve transitioned from creating new features to polishing the release. Expect a singular focus on quality for the remaining preview...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-7/","RawContent":null},{"Title":"Announcing ML.NET 1.2 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-07-17T19:25:46+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We are excited to announce ML.NET 1.2 and updates to Model Builder and the CLI. ML.NET is an open-source and cross-platform machine learning framework for .NET developers. ML.NET also includes Model...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-2-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Write Better Code Faster with Roslyn Analyzers","PublishedOn":"2019-07-10T16:40:11+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Roslyn, the .NET compiler platform, helps you catch bugs even before you run your code. One example is Roslyn’s spellcheck analyzer that is built into Visual Studio. Let’s say you are creating a...","Href":"https://devblogs.microsoft.com/dotnet/write-better-code-faster-with-roslyn-analyzers/","RawContent":null},{"Title":".NET Core July 2019 Updates – 2.1.12 and 2.2.6","PublishedOn":"2019-07-09T17:50:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-july-2019/","RawContent":null},{"Title":".NET Framework July 2019 Security and Quality Rollup","PublishedOn":"2019-07-09T17:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1006 – WCF/WIF SAML Token Authentication Bypass...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2019-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"},{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10047192673","Type":"IssuesEvent","CreatedAt":"2019-07-19T16:54:03","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Opened issue \".NET Core master branches have switched to \"5.0\"\" (#118) at dotnet/announcements","RelatedBody":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available."},{"Id":"9971220766","Type":"IssuesEvent","CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Opened issue \"System.Text.Json usability study results\" (#117) at dotnet/announcements","RelatedBody":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10185562536","Type":"PullRequestEvent","CreatedAt":"2019-08-10T04:34:11","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26111","RelatedDescription":"Opened pull request \"[WIP] POH\" (#26111) at dotnet/coreclr","RelatedBody":"to build/test stuff. not ready yet"},{"Id":"10185439385","Type":"IssuesEvent","CreatedAt":"2019-08-10T03:11:10","Actor":"capra314cabra","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26110","RelatedDescription":"Opened issue \"WSL Ubuntu 18: System.Environment.GetFolder returns null\" (#26110) at dotnet/coreclr","RelatedBody":"I ran `System.Environment.GetFolder()` by each values on WSL and got the result followings:\r\n\r\n|Enum Value|Return|\r\n|---|---|\r\n|Desktop||\r\n|Programs||\r\n|MyDocuments|/home/capra|\r\n|MyDocuments|/home/capra|\r\n|Favorites||\r\n|Startup||\r\n|Recent||\r\n|SendTo||\r\n|StartMenu||\r\n|MyMusic||\r\n|MyVideos||\r\n|DesktopDirectory||\r\n|MyComputer||\r\n|NetworkShortcuts||\r\n|Fonts||\r\n|Templates||\r\n|CommonStartMenu||\r\n|CommonPrograms||\r\n|CommonStartup||\r\n|CommonDesktopDirectory||\r\n|ApplicationData||\r\n|PrinterShortcuts||\r\n|LocalApplicationData||\r\n|InternetCache||\r\n|Cookies||\r\n|History||\r\n|CommonApplicationData|/usr/share|\r\n|Windows||\r\n|System||\r\n|ProgramFiles||\r\n|MyPictures||\r\n|UserProfile|/home/capra|\r\n|SystemX86||\r\n|ProgramFilesX86||\r\n|CommonProgramFiles||\r\n|CommonProgramFilesX86||\r\n|CommonTemplates||\r\n|CommonDocuments||\r\n|CommonAdminTools||\r\n|AdminTools||\r\n|CommonMusic||\r\n|CommonPictures||\r\n|CommonVideos||\r\n|Resources||\r\n|LocalizedResources||\r\n|CommonOemLinks||\r\n|CDBurning||\r\n\r\nThis results contained `null` values more than I had expected.\r\nSo can I know whether it was working right or not?\r\nThank you for your help.\r\n\r\nEnvironment: .NET SDK 3.0.100-preview7-012821"},{"Id":"10185255693","Type":"PullRequestEvent","CreatedAt":"2019-08-10T01:19:00","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26109","RelatedDescription":"Opened pull request \"Cleanup YML and and create readme.md\" (#26109) at dotnet/coreclr","RelatedBody":"Removes the `azure-pipelines.yml` that is no longer used.\r\nExtracts useful comments form `azure-pipelines.yml` and puts them in a new `./eng/readme.md`.\r\nAdds `Build` prefix to the name of product build jobs - dropped in https://github.com/dotnet/coreclr/pull/26020.\r\n\r\n/cc @sbomer @echesakov "},{"Id":"10185206508","Type":"PullRequestEvent","CreatedAt":"2019-08-10T00:51:35","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26020","RelatedDescription":"Merged pull request \"Add support for servicing (post-build.yml)\" (#26020) at dotnet/coreclr","RelatedBody":"Blocked by https://github.com/dotnet/arcade/pull/3572\r\n\r\ncc @JohnTortugo @mmitche \r\n\r\n@dotnet/coreclr-infra "},{"Id":"10185015900","Type":"PullRequestEvent","CreatedAt":"2019-08-09T23:30:03","Actor":"sbomer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26108","RelatedDescription":"Opened pull request \"[WIP] Remove buildtools\" (#26108) at dotnet/coreclr","RelatedBody":""},{"Id":"10184699761","Type":"PullRequestEvent","CreatedAt":"2019-08-09T21:57:36","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26107","RelatedDescription":"Opened pull request \"ARM32 out of proc unwind support\" (#26107) at dotnet/coreclr","RelatedBody":"Removed the old dwarf unwind info decoding and use libunwind for both dwarf and arm exidx."},{"Id":"10184632581","Type":"PullRequestEvent","CreatedAt":"2019-08-09T21:41:43","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26106","RelatedDescription":"Opened pull request \"Test NULL as EnC Stacking Allocator\" (#26106) at dotnet/coreclr","RelatedBody":"This reproduces old behavior. It is still a source of possible AVs in the runtime. "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10185613065","Type":"PullRequestEvent","CreatedAt":"2019-08-10T05:09:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12197","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12197) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.21\r\n- **Date Produced**: 8/10/2019 5:09 AM\r\n- **Commit**: 0fba68164c2297bf1f5e44fa3345c576c618e853\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-21\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n"},{"Id":"10185586787","Type":"PullRequestEvent","CreatedAt":"2019-08-10T04:52:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12196","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12196) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190809.9\r\n- **Date Produced**: 8/10/2019 4:51 AM\r\n- **Commit**: 09db3ebbae7f7500f534e744d9893c396458766a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19409.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"10185523111","Type":"PullRequestEvent","CreatedAt":"2019-08-10T04:06:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12185","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#12185) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190808.3\r\n- **Date Produced**: 8/9/2019 12:39 AM\r\n- **Commit**: b23fd25e1070aa8075b66f9d208835fa67af3dbb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 5.0.100-alpha1.19408.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n"},{"Id":"10185514057","Type":"PullRequestEvent","CreatedAt":"2019-08-10T04:00:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12190","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12190) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190809.4\r\n- **Date Produced**: 8/9/2019 7:39 PM\r\n- **Commit**: dda84bc7fcc35ec0e086e8faa3f62641672376a8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19409.4\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"10185503030","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:53:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12195","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12195) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.18\r\n- **Date Produced**: 8/10/2019 3:17 AM\r\n- **Commit**: 0630ade3ccba2b3935b0519cda8ed13558500143\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-18\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10183877665","Type":"IssuesEvent","CreatedAt":"2019-08-09T19:16:04","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1403","RelatedDescription":"Closed issue \"What version of .NET Standard should be bundled in 5.0 SDK builds?\" (#1403) at dotnet/standard","RelatedBody":"Currently, we bundle netstandard 2.1 in SDK 3.0. I see dotnet/standard `master` is producing netstandard 2.2.\r\n\r\nShould Core-Setup bundle up 2.2 and have that used in the SDK (https://github.com/dotnet/core-setup/issues/7567)? Or should the SDK continue to bundle netstandard 2.1? Should more than one version be bundled?\r\n\r\nThe question of whether we need more .NET Standard releases in a 5.0 world seems very relevant. (I don't know any newer info than https://devblogs.microsoft.com/dotnet/introducing-net-5/.)\r\n\r\n@wtgodbe @nguerrera "},{"Id":"10182698518","Type":"IssuesEvent","CreatedAt":"2019-08-09T15:56:20","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1421","RelatedDescription":"Opened issue \"When building 2.2 packages, put assets in netstandard2.2 TFM\" (#1421) at dotnet/standard","RelatedBody":"Helps resolve https://github.com/dotnet/core-setup/issues/7567 in the best way.\r\n\r\nCurrently the `NETStandard.Library` 2.2 packages has assets in `build/netstandard2.1/ref/`. (Similar in the transport package.) Core-Setup carries this along when producing `NETStandard.Library.Ref`."},{"Id":"10181602773","Type":"PullRequestEvent","CreatedAt":"2019-08-09T13:29:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1420","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/corefx\" (#1420) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190808.12\r\n- **Date Produced**: 8/8/2019 8:13 PM\r\n- **Commit**: cc92e719bc3564bc4ea913eb770cd5315a6c3bc1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview9.19408.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview9.19408.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview9.19408.12\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n"},{"Id":"10181599605","Type":"PullRequestEvent","CreatedAt":"2019-08-09T13:28:37","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1419","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1419) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190809.1\r\n- **Date Produced**: 8/9/2019 10:13 AM\r\n- **Commit**: e122f306410b1045ab2f4cb7e533ece8556bee56\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19409.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19409.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19409.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10181530860","Type":"PullRequestEvent","CreatedAt":"2019-08-09T13:18:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1420","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/corefx\" (#1420) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190808.12\r\n- **Date Produced**: 8/8/2019 8:13 PM\r\n- **Commit**: cc92e719bc3564bc4ea913eb770cd5315a6c3bc1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview9.19408.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview9.19408.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview9.19408.12\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n"},{"Id":"10181528062","Type":"PullRequestEvent","CreatedAt":"2019-08-09T13:18:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1419","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1419) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190809.1\r\n- **Date Produced**: 8/9/2019 10:13 AM\r\n- **Commit**: e122f306410b1045ab2f4cb7e533ece8556bee56\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19409.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19409.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19409.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10181108568","Type":"PullRequestEvent","CreatedAt":"2019-08-09T12:14:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1418","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1418) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10181048255","Type":"PullRequestEvent","CreatedAt":"2019-08-09T12:04:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1418","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1418) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10177921509","Type":"IssuesEvent","CreatedAt":"2019-08-09T01:10:45","Actor":"reflectronic","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1417","RelatedDescription":"Opened issue \"Add System.Text.Rune\" (#1417) at dotnet/standard","RelatedBody":"It is probably a little too late, but please consider slipping in [`System.Text.Rune`](https://docs.microsoft.com/en-us/dotnet/api/system.text.rune) and related types (like [`StringRuneEnumerator`](https://docs.microsoft.com/en-us/dotnet/api/system.text.stringruneenumerator)/[`SpanRuneEnumerator`](https://docs.microsoft.com/en-us/dotnet/api/system.text.spanruneenumerator)) for .NET Standard 2.1 or 2.2"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10185339441","Type":"PullRequestEvent","CreatedAt":"2019-08-10T02:09:03","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37895","RelatedDescription":"Opened pull request \"Update package heuristic to include other invalid directories.\" (#37895) at dotnet/roslyn","RelatedBody":"For https://github.com/dotnet/roslyn/issues/37246\r\nNow looks like\r\n<img width=\"868\" alt=\"install_package\" src=\"https://user-images.githubusercontent.com/5749229/62816126-8b574c80-bad7-11e9-9961-735ddef8cbef.PNG\">\r\n\r\nCouldn't find any tests for this feature, let me know if there are some I'm missing."},{"Id":"10185275318","Type":"PullRequestEvent","CreatedAt":"2019-08-10T01:30:17","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37887","RelatedDescription":"Merged pull request \"Merge release/dev16.3-preview1 to release/dev16.3-preview2\" (#37887) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview2.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview2\ngit reset --hard upstream/release/dev16.3-preview2\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10185266596","Type":"PullRequestEvent","CreatedAt":"2019-08-10T01:25:21","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37893","RelatedDescription":"Closed pull request \"Comparable helper to compare by components\" (#37893) at dotnet/roslyn","RelatedBody":"A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on."},{"Id":"10185265998","Type":"PullRequestEvent","CreatedAt":"2019-08-10T01:25:05","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37894","RelatedDescription":"Opened pull request \"Comparable helper to compare by components\" (#37894) at dotnet/roslyn","RelatedBody":"A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on."},{"Id":"10185254018","Type":"PullRequestEvent","CreatedAt":"2019-08-10T01:17:55","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37893","RelatedDescription":"Opened pull request \"Comparable helper to compare by components\" (#37893) at dotnet/roslyn","RelatedBody":"A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on."},{"Id":"10185252302","Type":"PullRequestEvent","CreatedAt":"2019-08-10T01:16:52","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37892","RelatedDescription":"Opened pull request \"Fix use explicit type and nullable-annotated array syntax generation\" (#37892) at dotnet/roslyn","RelatedBody":"Fixes #37877."},{"Id":"10185197475","Type":"IssuesEvent","CreatedAt":"2019-08-10T00:46:42","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37891","RelatedDescription":"Opened issue \"ChangeNamespaceService doesn't fix references in the form of member access\" (#37891) at dotnet/roslyn","RelatedBody":"For example, when using refactoring to change namespace `NS1` to `NS2` in the code sample below, the reference `NS1.MyEnum.A` will not be changed to `NS2.MyEnum.A`\r\n\r\n```cs\r\nnamespace NS\r\n{\r\n    public MyEnum\r\n    {\r\n        A,\r\n        B,\r\n        C,\r\n    }\r\n}\r\n\r\n...\r\n\r\nvar x = NS.MyEnum.A;\r\n```"},{"Id":"10185188506","Type":"IssuesEvent","CreatedAt":"2019-08-10T00:41:57","Actor":"gremlm","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37890","RelatedDescription":"Opened issue \"Code metrics calculation from command line can't resolve msbuild location correctly!\" (#37890) at dotnet/roslyn","RelatedBody":"For calculating code metrics I have included Microsoft.CodeAnalysis.Metrics 2.9.4 nuget package to my csproj project.\r\nBefore executing msbuild from the command line, I have called  \"nuget.exe restore\", and it correctly found MSBuild and restore package:\r\n\"MSBuild auto-detection: using msbuild version '16.200.19.32702' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\bin'.\r\nRestoring NuGet package Microsoft.CodeAnalysis.Metrics.2.9.4. ...\"\r\n\r\nThen, from command line I am calling msbuild with /t:Metrics option:\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\bin\\MSBuild.exe\" /p:Configuration=Debug /t:Metrics My.sln \"\r\n\r\nwhich ended with following error:\r\n\"Unhandled Exception: System.ArgumentException: Directory \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\TestAgent\\MSBuild\\Current\\Bin\" does not exist\r\n  Parameter name: msbuildPath\r\n     at Microsoft.Build.Locator.MSBuildLocator.RegisterMSBuildPath(String msbuildPath)\r\n     at Microsoft.Build.Locator.MSBuildLocator.RegisterDefaults()\r\n     at Metrics.Program.<RunAsync>d__1.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\"\r\n\r\nIt looks like  Metrics.exe looking for msbuild in wrong location, but nugget.exe in correct one?\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10185411144","Type":"IssuesEvent","CreatedAt":"2019-08-10T02:54:10","Actor":"christianrondeau","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7680","RelatedDescription":"Opened issue \"Support for dotnet core 3 preview 7 TaskAsyncEnumerableExtensions\" (#7680) at dotnet/corert","RelatedBody":"Compiling code that uses `TaskAsyncEnumerableExtensions` using dotnet 3.0.100-preview7-012821 compiles with this warning:\r\n\r\n```\r\nEXEC : warning : Method `[myproject]MyProject.MyAssembly.MyClass+<ExecuteAsync>d__2.MoveNext()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Threading.Tasks.TaskAsyncEnumerableExtensions, System.Threading.Tasks, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a [C:\\myproject\\MyProject.Assembly\\MyProject.Assembly.csproj]\r\n```\r\n\r\nHere is the relevant parts of my `.csproj`:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <AssemblyName>myproject</AssemblyName>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <!-- I tried with and without these -->\r\n    <IlcInvariantGlobalization>true</IlcInvariantGlobalization>\r\n    <RootAllApplicationAssemblies>false</RootAllApplicationAssemblies>\r\n    <IlcGenerateStackTraceData>false</IlcGenerateStackTraceData>\r\n    <IlcDisableReflection>true</IlcDisableReflection>\r\n    <IlcOptimizationPreference>Size</IlcOptimizationPreference>\r\n  </PropertyGroup>\r\n\r\n  <!-- ... project references and microsoft configuration extensions -->\r\n\r\n</Project>\r\n```\r\n\r\nI tried adding this, hoping that it would find the missing type (if I got the first error right):\r\n\r\n```\r\n  <ItemGroup>\r\n    <IlcReference Include=\"$(NuGetPackageFolders)\\microsoft.netcore.app\\2.2.0\\ref\\netcoreapp2.2\\netstandard.dll\" />\r\n    <IlcReference Include=\"$(NuGetPackageFolders)\\microsoft.netcore.app\\2.2.0\\ref\\netcoreapp2.2\\System.Threading.Tasks.Extensions.dll\" />\r\n  </ItemGroup>\r\n```\r\n\r\nBut I now receive this error, which I have to admit, I do not understand:\r\n\r\n```\r\nInternal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1, netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseFieldSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaField.InitializeFieldType()\r\n     at Internal.TypeSystem.MetadataFieldLayoutAlgorithm.ComputeInstanceLayout(DefType defType, InstanceLayoutKind layoutKind)\r\n     at Internal.TypeSystem.DefType.ComputeInstanceLayout(InstanceLayoutKind layoutKind)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.CheckCanGenerateEEType(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateNecessaryTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.DependencyAnalysis.GenericMethodsHashtableNode.GetGenericMethodsHashtableDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.MethodGenericDictionaryNode.ComputeNonRelocationBasedDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.ILScanner.ILCompiler.IILScanner.Scan()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nIf it helps I can create a repro project, just let me know!"},{"Id":"10185201077","Type":"IssuesEvent","CreatedAt":"2019-08-10T00:48:40","Actor":"genifycom","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7679","RelatedDescription":"Opened issue \"Does not work with System.Data.SqlClient\" (#7679) at dotnet/corert","RelatedBody":"A CoreRT built console app that uses System.Data.SqlClient does not make a connection to the database.\r\n\r\nIt reports Unable to load sni.dll"},{"Id":"10181880954","Type":"PullRequestEvent","CreatedAt":"2019-08-09T14:05:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7678","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7678) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10181002806","Type":"PullRequestEvent","CreatedAt":"2019-08-09T11:56:56","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7678","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7678) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10178222307","Type":"PullRequestEvent","CreatedAt":"2019-08-09T02:40:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7677","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7677) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @JeffreyZhao"},{"Id":"10177527261","Type":"PullRequestEvent","CreatedAt":"2019-08-08T23:15:05","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7677","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7677) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10177235160","Type":"PullRequestEvent","CreatedAt":"2019-08-08T22:06:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7676","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7676) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik"},{"Id":"10174791372","Type":"PullRequestEvent","CreatedAt":"2019-08-08T15:46:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7675","RelatedDescription":"Merged pull request \"Cleanup ProjectN ifdefs\" (#7675) at dotnet/corert","RelatedBody":""},{"Id":"10174159740","Type":"PullRequestEvent","CreatedAt":"2019-08-08T14:32:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7675","RelatedDescription":"Opened pull request \"Cleanup ProjectN ifdefs\" (#7675) at dotnet/corert","RelatedBody":""},{"Id":"10171813086","Type":"PullRequestEvent","CreatedAt":"2019-08-08T09:14:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7674","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7674) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang @stephentoub"},{"Id":"10170223639","Type":"PullRequestEvent","CreatedAt":"2019-08-08T04:16:51","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7674","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7674) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10164608801","Type":"PullRequestEvent","CreatedAt":"2019-08-07T12:07:26","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7673","RelatedDescription":"Merged pull request \"Pass stack trace policy\" (#7673) at dotnet/corert","RelatedBody":"Found this change among a bunch of untracked files when I was cleaning up some CPAOT instrumentation I was doing.\r\n\r\nThis was supposed to go in with #7665."},{"Id":"10163832151","Type":"PullRequestEvent","CreatedAt":"2019-08-07T10:09:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7673","RelatedDescription":"Opened pull request \"Pass stack trace policy\" (#7673) at dotnet/corert","RelatedBody":"Found this change among a bunch of untracked files when I was cleaning up some CPAOT instrumentation I was doing.\r\n\r\nThis was supposed to go in with #7665."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10185442795","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:13:11","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3421","RelatedDescription":null,"RelatedBody":"Follows #3399.\r\n\r\nThe `CheckForDuplicateItemsContinueOnError` property was used by WPF projects.\r\n\r\nhttps://github.com/dotnet/wpf/pull/1235 makes WPF use `ContinueOnError` instead, so this temporary property can be removed once things propagate.\r\n\r\nMarked as WIP as merging should be [delayed a few days](https://github.com/dotnet/sdk/pull/3399#discussion_r302977781)."},{"Id":"10185442667","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:13:08","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3421","RelatedDescription":"Closed pull request \"Remove CheckForDuplicateItemsContinueOnError property\" (#3421) at dotnet/sdk","RelatedBody":"Follows #3399.\r\n\r\nThe `CheckForDuplicateItemsContinueOnError` property was used by WPF projects.\r\n\r\nhttps://github.com/dotnet/wpf/pull/1235 makes WPF use `ContinueOnError` instead, so this temporary property can be removed once things propagate.\r\n\r\nMarked as WIP as merging should be [delayed a few days](https://github.com/dotnet/sdk/pull/3399#discussion_r302977781)."},{"Id":"10185432831","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:07:05","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3503","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/core-setup\" (#3503) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 9:01 PM\r\n- **Commit**: 43aa62ee848ad9fbb118700fa17627eb5504e530\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19407.9\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10185432298","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:06:46","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3502","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#3502) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10185431011","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:05:58","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3482","RelatedDescription":"Closed pull request \"Merge release/3.0.1xx to master\" (#3482) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10185424518","Type":"PullRequestEvent","CreatedAt":"2019-08-10T03:01:59","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3520","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to master\" (#3520) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"479226864","IsPullRequest":true,"CreatedAt":"2019-08-10T04:34:10","Actor":"VSadov","Number":"26111","RawContent":null,"Title":"[WIP] POH","State":"open","Body":"to build/test stuff. not ready yet","Url":"https://github.com/dotnet/coreclr/pull/26111","RelatedDescription":"Open PR \"[WIP] POH\" (#26111)"},{"Id":"479221551","IsPullRequest":false,"CreatedAt":"2019-08-10T03:11:09","Actor":"capra314cabra","Number":"26110","RawContent":null,"Title":"WSL Ubuntu 18: System.Environment.GetFolder returns null","State":"open","Body":"I ran `System.Environment.GetFolder()` by each values on WSL and got the result followings:\r\n\r\n|Enum Value|Return|\r\n|---|---|\r\n|Desktop||\r\n|Programs||\r\n|MyDocuments|/home/capra|\r\n|MyDocuments|/home/capra|\r\n|Favorites||\r\n|Startup||\r\n|Recent||\r\n|SendTo||\r\n|StartMenu||\r\n|MyMusic||\r\n|MyVideos||\r\n|DesktopDirectory||\r\n|MyComputer||\r\n|NetworkShortcuts||\r\n|Fonts||\r\n|Templates||\r\n|CommonStartMenu||\r\n|CommonPrograms||\r\n|CommonStartup||\r\n|CommonDesktopDirectory||\r\n|ApplicationData||\r\n|PrinterShortcuts||\r\n|LocalApplicationData||\r\n|InternetCache||\r\n|Cookies||\r\n|History||\r\n|CommonApplicationData|/usr/share|\r\n|Windows||\r\n|System||\r\n|ProgramFiles||\r\n|MyPictures||\r\n|UserProfile|/home/capra|\r\n|SystemX86||\r\n|ProgramFilesX86||\r\n|CommonProgramFiles||\r\n|CommonProgramFilesX86||\r\n|CommonTemplates||\r\n|CommonDocuments||\r\n|CommonAdminTools||\r\n|AdminTools||\r\n|CommonMusic||\r\n|CommonPictures||\r\n|CommonVideos||\r\n|Resources||\r\n|LocalizedResources||\r\n|CommonOemLinks||\r\n|CDBurning||\r\n\r\nThis results contained `null` values more than I had expected.\r\nSo can I know whether it was working right or not?\r\nThank you for your help.\r\n\r\nEnvironment: .NET SDK 3.0.100-preview7-012821","Url":"https://github.com/dotnet/coreclr/issues/26110","RelatedDescription":"Open issue \"WSL Ubuntu 18: System.Environment.GetFolder returns null\" (#26110)"},{"Id":"479213506","IsPullRequest":true,"CreatedAt":"2019-08-10T01:18:58","Actor":"AaronRobinsonMSFT","Number":"26109","RawContent":null,"Title":"Cleanup YML and and create readme.md","State":"open","Body":"Removes the `azure-pipelines.yml` that is no longer used.\r\nExtracts useful comments form `azure-pipelines.yml` and puts them in a new `./eng/readme.md`.\r\nAdds `Build` prefix to the name of product build jobs - dropped in https://github.com/dotnet/coreclr/pull/26020.\r\n\r\n/cc @sbomer @echesakov ","Url":"https://github.com/dotnet/coreclr/pull/26109","RelatedDescription":"Open PR \"Cleanup YML and and create readme.md\" (#26109)"},{"Id":"479200488","IsPullRequest":true,"CreatedAt":"2019-08-09T23:30:02","Actor":"sbomer","Number":"26108","RawContent":null,"Title":"[WIP] Remove buildtools","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26108","RelatedDescription":"Open PR \"[WIP] Remove buildtools\" (#26108)"},{"Id":"479181474","IsPullRequest":true,"CreatedAt":"2019-08-09T21:57:35","Actor":"mikem8361","Number":"26107","RawContent":null,"Title":"ARM32 out of proc unwind support","State":"open","Body":"Removed the old dwarf unwind info decoding and use libunwind for both dwarf and arm exidx.","Url":"https://github.com/dotnet/coreclr/pull/26107","RelatedDescription":"Open PR \"ARM32 out of proc unwind support\" (#26107)"},{"Id":"479177428","IsPullRequest":true,"CreatedAt":"2019-08-09T21:41:43","Actor":"hoyosjs","Number":"26106","RawContent":null,"Title":"Test NULL as EnC Stacking Allocator","State":"open","Body":"This reproduces old behavior. It is still a source of possible AVs in the runtime. ","Url":"https://github.com/dotnet/coreclr/pull/26106","RelatedDescription":"Open PR \"Test NULL as EnC Stacking Allocator\" (#26106)"},{"Id":"479161220","IsPullRequest":false,"CreatedAt":"2019-08-09T20:48:12","Actor":"jakobbotsch","Number":"26105","RawContent":null,"Title":"[arm32/linux] Assert failure: dwSrcIndex > dwLastSrcIndex in ABI stress","State":"open","Body":"pinvoke stress on arm32 fails with an assert failure:\r\n\r\n```\r\nAssert failure(PID 46 [0x0000002e], Thread: 46 [0x002e]): dwSrcIndex > dwLastSrcIndex\r\n    File: /__w/2/s/src/vm/arm/stubs.cpp Line: 1558\r\n    Image: /root/helix/work/correlation/corerun\r\n\r\n/root/helix/work/workitem/JIT/Stress/ABI/pinvokes_do/pinvokes_do.sh: line 271:    46 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/JIT/Stress/Reports/JIT.Stress/ABI/pinvokes_do/pinvokes_do.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun pinvokes_do.exe '--pinvokes' '--num-calls' '1000' '--no-ctrlc-summary'\r\nStressing pinvokes\r\nOSVersion: Unix 4.4.38.0\r\nOSArchitecture: Arm\r\nProcessArchitecture: Arm\r\nSelecting armhf ABI.\r\n50 callers done\r\n100 callers done\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/JIT/Stress/ABI/pinvokes_do/pinvokes_do.sh\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26105","RelatedDescription":"Open issue \"[arm32/linux] Assert failure: dwSrcIndex > dwLastSrcIndex in ABI stress\" (#26105)"},{"Id":"479142322","IsPullRequest":true,"CreatedAt":"2019-08-09T19:52:30","Actor":"stephentoub","Number":"26104","RawContent":null,"Title":"More CoreLib code cleanup","State":"open","Body":"In between-meetings cleanup guided by various analyzers (and mostly fixed via auto-fixers).","Url":"https://github.com/dotnet/coreclr/pull/26104","RelatedDescription":"Open PR \"More CoreLib code cleanup\" (#26104)"},{"Id":"479138595","IsPullRequest":false,"CreatedAt":"2019-08-09T19:41:38","Actor":"stephentoub","Number":"26103","RawContent":null,"Title":"GregorianCalendarHelper.GetLeapMonth always returns 0?","State":"open","Body":"https://github.com/dotnet/coreclr/blob/c9150c99d4c5c565ca6958bcf9434e7a4b7868a0/src/System.Private.CoreLib/shared/System/Globalization/GregorianCalendarHelper.cs#L593-L597\r\n\r\nAt best this is wasting CPU.\r\nAt worst it's giving the wrong answer to its callers.\r\n\r\ncc: @tarekgh ","Url":"https://github.com/dotnet/coreclr/issues/26103","RelatedDescription":"Open issue \"GregorianCalendarHelper.GetLeapMonth always returns 0?\" (#26103)"},{"Id":"478968902","IsPullRequest":true,"CreatedAt":"2019-08-09T17:41:15","Actor":"dotnet-maestro[bot]","Number":"26099","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9d917c39-9eee-4aa5-f8e9-08d6910be5f1)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:9d917c39-9eee-4aa5-f8e9-08d6910be5f1)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26099","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#26099)"},{"Id":"478996594","IsPullRequest":true,"CreatedAt":"2019-08-09T17:40:57","Actor":"stephentoub","Number":"26100","RawContent":null,"Title":"Enable FxCop and StyleCop analyzers","State":"closed","Body":"Fixes https://github.com/dotnet/coreclr/issues/26059\r\ncc: @safern","Url":"https://github.com/dotnet/coreclr/pull/26100","RelatedDescription":"Closed or merged PR \"Enable FxCop and StyleCop analyzers\" (#26100)"},{"Id":"478593845","IsPullRequest":true,"CreatedAt":"2019-08-09T17:24:07","Actor":"mikem8361","Number":"26082","RawContent":null,"Title":"ARM32 out of proc unwind support","State":"closed","Body":"Removed the old dwarf unwind info decoding and use libunwind for both dwarf and arm exidx.\r\n\r\nSimplifies the out of proc unwind code by using the libunwind coreclr has directly to find and decode the unwind info.","Url":"https://github.com/dotnet/coreclr/pull/26082","RelatedDescription":"Closed or merged PR \"ARM32 out of proc unwind support\" (#26082)"},{"Id":"478960207","IsPullRequest":true,"CreatedAt":"2019-08-09T17:09:17","Actor":"dotnet-maestro[bot]","Number":"26096","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26096","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#26096)"},{"Id":"478966869","IsPullRequest":true,"CreatedAt":"2019-08-09T17:08:38","Actor":"dotnet-maestro[bot]","Number":"26098","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190808.17\r\n- **Date Produced**: 8/9/2019 8:05 AM\r\n- **Commit**: 04c667df9524e5546984e8ea62f89bf44f914808\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19408.17\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26098","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#26098)"},{"Id":"479065287","IsPullRequest":false,"CreatedAt":"2019-08-09T16:16:35","Actor":"carlossanlop","Number":"26102","RawContent":null,"Title":"Unicode escape in the middle of a define causes compile error CS1024","State":"open","Body":"We had an internal report of this scenario. We would like to know if this is an unsupported scenario of if there is a bug in the encoding logic that should recognize this character.\r\n\r\n```cs\r\n#de\\u0066ine endf\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        #if endf\r\n            Console.WriteLine(\"Worked!\");\r\n        #endif\r\n    }\r\n}\r\n```\r\n\r\nThe command that was originally used to repro this issue was:\r\n\r\n> `csc.exe /out:Program.exe /t:exe /define:amd64 Program.cs`\r\n\r\nBut we were also able to reproduce this build error with a .NET Core 3.0 project and building directly with Visual Studio. The error we get in VS is:\r\n\r\n> `CS1024: Preprocessor directive expected`\r\n\r\n@jaredpar mentioned he tried different code pages: 1200, 1201, 65000, etc., but they all produce the same error.","Url":"https://github.com/dotnet/coreclr/issues/26102","RelatedDescription":"Open issue \"Unicode escape in the middle of a define causes compile error CS1024\" (#26102)"},{"Id":"479060440","IsPullRequest":false,"CreatedAt":"2019-08-09T16:04:43","Actor":"jashook","Number":"26101","RawContent":null,"Title":"[x86] ABI issues found with Jit/Stress/ABI/*","State":"open","Body":"```\r\nAssert failure(PID 904 [0x00000388], Thread: 1584 [0x0630]): Assertion failed '!\"Unexpected node in impNormStructVal()\"' in 'ILStubClass:IL_STUB_PInvoke(struct,double,struct,struct,struct,double,struct,struct,int,double,int,struct,double,struct,short,struct,struct,struct,double):int' (IL size 210)\r\n\r\n    File: f:\\workspace.9\\_work\\1\\s\\src\\jit\\importer.cpp Line: 1772\r\n    Image: C:\\dotnetbuild\\work\\0ea89f38-d444-41ae-95ab-90bd1ab45f4b\\Payload\\CoreRun.exe\r\n```\r\n\r\n```\r\nAssert failure(PID 3236 [0x00000ca4], Thread: 3536 [0x0dd0]): Assertion failed 'thisPtr->TypeGet() == TYP_I_IMPL || thisPtr->TypeGet() == TYP_BYREF' in 'DynamicClass:ABIStress_PInvoker0(ubyte,struct,float,short,int,struct,struct):ref' (IL size 1555)\r\n\r\n    File: f:\\workspace.9\\_work\\1\\s\\src\\jit\\importer.cpp Line: 6639\r\n    Image: C:\\dotnetbuild\\work\\0ea89f38-d444-41ae-95ab-90bd1ab45f4b\\Payload\\CoreRun.exe\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26101","RelatedDescription":"Open issue \"[x86] ABI issues found with Jit/Stress/ABI/*\" (#26101)"},{"Id":"478963333","IsPullRequest":true,"CreatedAt":"2019-08-09T12:32:54","Actor":"dotnet-maestro[bot]","Number":"26097","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190809.1\r\n- **Date Produced**: 8/9/2019 10:13 AM\r\n- **Commit**: e122f306410b1045ab2f4cb7e533ece8556bee56\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19409.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19409.1\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26097","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#26097)"},{"Id":"478685493","IsPullRequest":true,"CreatedAt":"2019-08-09T11:54:55","Actor":"stephentoub","Number":"26086","RawContent":null,"Title":"Update Corelib to be clean for same analyzers as corefx","State":"closed","Body":"I locally updated System.Private.CoreLib.csproj to use the same analyzers/rules as corefx currently does and got Corelib clean against those rules.  I've not included the .csproj updates, as I'm going to wait for that until the .ruleset from corefx properly mirrors over.  Then I'll submit another PR that enables it and fixes any straggling issues that have arrived in the interim.\r\n\r\nAlmost all fixes were done via auto-fix tooling.  The primary exceptions were those where I used pragmas to suppress.\r\n\r\ncc: @safern, @ViktorHofer, @jkotas","Url":"https://github.com/dotnet/coreclr/pull/26086","RelatedDescription":"Closed or merged PR \"Update Corelib to be clean for same analyzers as corefx\" (#26086)"},{"Id":"478809068","IsPullRequest":false,"CreatedAt":"2019-08-09T05:52:14","Actor":"nalywa","Number":"26095","RawContent":null,"Title":"Concurrent GC fails to run concurrently","State":"open","Body":"I'm seeing an occasional issue on netcore 2.2 where a concurrent Gen2 GC seems to not run on the background GC thread, instead running on the thread that triggered the collection.\r\n\r\nThis was observed on my Windows 10 development running an app in Release configuration on the 64-bit .NET Core 2.2 runtime with the default GC profile (workstation, concurrent GC enabled, interactive latency mode), and I was able to grab a perfview sample of the occurence:\r\n\r\n![blockingConcurrentGC](https://user-images.githubusercontent.com/18094778/62756598-649d0580-ba46-11e9-8b6e-1f723d44fedc.png)\r\n\r\nLooking through the GC source, I think there may be an issue introduced in [this commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c). Before the change, `bgc_thread` would be set at the time of thread creation, and would be guaranteed to be set by the time it's checked in `void gc_heap::garbage_collect (int n)`. After the change, `bgc_thread` is now set within the new thread at the start of it's execution, which seems like it would introduce a race condition where that field may not be set in time for concurrent GC to continue.","Url":"https://github.com/dotnet/coreclr/issues/26095","RelatedDescription":"Open issue \"Concurrent GC fails to run concurrently\" (#26095)"},{"Id":"478768133","IsPullRequest":true,"CreatedAt":"2019-08-09T02:39:40","Actor":"JeffreyZhao","Number":"26094","RawContent":null,"Title":"Dictionary optimization after deserialization","State":"open","Body":"The optimization in `Dictionary<,>` around `_comparer` will be\r\nnullified if it's created via deserialization.\r\n\r\nIf `_comparer` is `null`, the comparer will be serialized using\r\n`EqualityComparer<T>.Default`, so when it's being deserialized,\r\nit should be assigned back to `null` to run into the faster branch\r\nwhen lookup.\r\n\r\nFix dotnet/corefx#40150","Url":"https://github.com/dotnet/coreclr/pull/26094","RelatedDescription":"Open PR \"Dictionary optimization after deserialization\" (#26094)"},{"Id":"478726191","IsPullRequest":true,"CreatedAt":"2019-08-09T00:47:34","Actor":"Dotnet-GitSync-Bot","Number":"26091","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/26091","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#26091)"},{"Id":"478738312","IsPullRequest":false,"CreatedAt":"2019-08-09T00:07:06","Actor":"ahsonkhan","Number":"26093","RawContent":null,"Title":"Idiomatic implementation of operator== (and equality) should generate better codegen","State":"open","Body":"Let's say I have a class with a single field. It would be great if the JIT could take the naiive/idiomatic C# implementation of Equals/==/!= operators that handle nulls correctly and produce better codegen to avoid using \"tricks\" and workarounds.\r\n\r\n```C#\r\npublic class Foo\r\n{\r\n    int _field;\r\n\r\n    public Foo(int field)\r\n    {\r\n        _field = field;\r\n    }\r\n\r\n    public override bool Equals(object obj)\r\n        => obj is Foo otherVersion && Equals(otherVersion);\r\n\r\n    public bool Equals(Foo other)\r\n    {\r\n        if (other == null)\r\n        {\r\n            return false;\r\n        }\r\n        return _field == other._field;\r\n    }\r\n\r\n    public override int GetHashCode() => _field;\r\n\r\n    // This is what I want to be able to write (or something similar).\r\n    public static bool operator ==(Foo left, Foo right)\r\n        => left?._field == right?._field;\r\n    \r\n    // This produces much better codegen but requires contortions\r\n    public static bool operator ==(Foo left, Foo right)\r\n    {\r\n        // Test \"right\" first to allow branch elimination when inlined for null checks (== null) \r\n        // so it can become a simple test \r\n        if (right is null)\r\n        {\r\n            // return true/false not the test result https://github.com/dotnet/coreclr/issues/914 \r\n            return (left is null) ? true : false;\r\n        }\r\n\r\n        return right.Equals(left);\r\n    }\r\n\r\n    public static bool operator !=(Foo left, Foo right)\r\n        => !(left == right);\r\n}\r\n```\r\n\r\n[sharplab.io](https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEBDAzgWwB8ABAJgEYBYAKGIGYACMhgYQYG8aHunHiUGAWQAUASg5ceAXxozqNek1IMAYhAg1O1HgwCWAOwwMA+gDNdMADYATANw1J3RWojCDR81eujHE7Tp4zCxsGAF4GTxt7f245X0UIADcYKChdaxgGYHVLBgBRAEcAV2xLXGEIYAArGDAjSqqfGIDQgD4GBr1cVXUOjAALFIA1FNxdCH0GADIp/OLS8ogB4dHx/VFo+MZsiFzCkrLhFz7BqCadLQCeXVMGCuWoMPD9IstLc6u/T4DiAHYIhYwaLfOTfP4mSLWJ4nFIAOiCXmB0gczQSyVS6Uy7gYAHEYBgABJ4fosCAZMRhdoIqIorZMchILI5DoABxS2Aw0CeR16lhgpgwaB6EAYaQA5v0MB8rm0GHyBQB+eGQ6HiyVK6l2Xx04gMpm7VnszmPADUPJF8sFwtFuglUt8l0+AHonQwACowXBGABEaow3oiuigXoYnIYpUsEAA7lkoNh9GB+gwrLp8AYOWsGFHBpMDJYDDAoaYuS83gxE7UANbdYShZ6vd4MXw6F0MXAi3RGMDxrK1CD4TLYNupll80OeozN663YR+roMUvvKfcR3fbit8EYKBFGBO0yAhdLUODcch2C4V5GSUYFm4EAusWd/pFYCwyD4J3WJb6fFOyCwMBLCgJ1dFwC9PSdABOcgBGXH5/mES150XcQFVDbdMhAAEyiBOC4maHRwT9WF9gWRD+SlJFYhRQi+D1HZcggNk42NBgAEJQnNOUKKFY4/WlFp2jY8iBVVW1JQ2WQgA)\r\n\r\n```text\r\n// BEFORE:\r\nFoo.op_Equality(Foo, Foo)\r\n    L0000: test rcx, rcx\r\n    L0003: jnz L000c\r\n    L0005: xor eax, eax\r\n    L0007: xor r8d, r8d\r\n    L000a: jmp L0015\r\n    L000c: mov r8d, [rcx+0x8]\r\n    L0010: mov eax, 0x1\r\n    L0015: test rdx, rdx\r\n    L0018: jnz L0024\r\n    L001a: xor edx, edx\r\n    L001c: movzx ecx, dl\r\n    L001f: xor r9d, r9d\r\n    L0022: jmp L002d\r\n    L0024: mov r9d, [rdx+0x8]\r\n    L0028: mov ecx, 0x1\r\n    L002d: cmp r8d, r9d\r\n    L0030: setz dl\r\n    L0033: movzx edx, dl\r\n    L0036: movzx eax, al\r\n    L0039: movzx ecx, cl\r\n    L003c: cmp eax, ecx\r\n    L003e: setz al\r\n    L0041: movzx eax, al\r\n    L0044: and eax, edx\r\n    L0046: ret\r\n\r\n// AFTER:\r\nFoo.op_Equality(Foo, Foo)\r\n    L0000: test rdx, rdx\r\n    L0003: jnz L0013\r\n    L0005: test rcx, rcx\r\n    L0008: jz L000d\r\n    L000a: xor eax, eax\r\n    L000c: ret\r\n    L000d: mov eax, 0x1\r\n    L0012: ret\r\n    L0013: mov [rsp+0x8], rcx\r\n    L0018: mov rcx, rdx\r\n    L001b: mov rdx, [rsp+0x8]\r\n    L0020: mov rax, 0x7ffe6fd40530\r\n    L002a: jmp rax\r\n```\r\n\r\nGot highlighted here: https://github.com/dotnet/corefx/pull/40107#discussion_r311846967\r\n\r\nWe end up doing this in a few places (from @benaadams here https://github.com/dotnet/coreclr/pull/21765). For example:\r\nhttps://github.com/dotnet/coreclr/blob/4e960d72ad19086a9615229b24b50dbd9ccb143c/src/System.Private.CoreLib/shared/System/Globalization/SortVersion.cs#L65-L78\r\nhttps://github.com/dotnet/coreclr/blob/4e960d72ad19086a9615229b24b50dbd9ccb143c/src/System.Private.CoreLib/shared/System/Reflection/Assembly.cs#L157-L175\r\n\r\ncc @AndyAyersMS, @benaadams, @kasiabulat ","Url":"https://github.com/dotnet/coreclr/issues/26093","RelatedDescription":"Open issue \"Idiomatic implementation of operator== (and equality) should generate better codegen\" (#26093)"},{"Id":"478736096","IsPullRequest":true,"CreatedAt":"2019-08-08T23:56:36","Actor":"sandreenko","Number":"26092","RawContent":null,"Title":"Separate statements from GenTree, part 2","State":"open","Body":"Contributes to #25899.\r\n\r\nAll comparing are with the baseline without #25898 (because it added separated IL_OFFSET nodes to make this change simpler) and for x64 Release without PGO:\r\n\r\nasm-diffs -c/-f crossge/pmi: no diffs\r\n\r\nPIN System.Private.Corelib (10 runs): 0.08% improvement 🤣 \r\n\r\nJitMemStats: 1.7% improvement:\r\n\r\n|            | base                                | diff                                |\r\n|------------|-------------------------------------|-------------------------------------|\r\n| alloc size | 2204212637 (avg   71981 per method) | 2167454293 (avg   70780 per method) |\r\n| ASTNode    | 431130000,  19.56%                  | 392179968,  18.09%                  |\r\n| BasicBlock | 93342880,   4.23%                   | 95534568,   4.41%                   |\r\n\r\nBasicBlock increase can be eliminated (if we put `bbTreeList` and `bbStmtList` in the same union, but it is not easy, because `bbTreeList` lives in `BasicBlock` base class: `LIR::Range`), but can be done in theory.\r\n\r\nStatement struct could be smaller if we eliminate `bool compilerAdded;` that is used only in `optimizer`, but that is left for the future PRs.\r\n\r\n\r\n**Changes:**\r\n\r\nf0824b4b92: Add unreached for GT_STMT in TryGetUse, GenTreeUseEdgeIterator, GetChild.\r\n\r\nfca76286fd: Do not call gtDispTree for statements.\r\n\r\nCall it for gtStmtExpr instead. We can rename/change it later, probably add a debug int for statement number.\r\n\r\nca192abca9: Separate bbTreeList and bbStmtList.\r\n\r\nbbTreeList is used for LIR, bbStmtList for the previous phases.\r\nThey can't be both set at the same time.\r\n\r\n54eab27dc6: Fix rationalize.\r\n\r\nBecause now bbStmtList and bbTreeList, GT_STMT and GT_IL_OFFSET are separated\r\nwe can simplify logic when switch to LIR.\r\n\r\ndb660dd654: Create gtDispStmtList.\r\n\r\nTo make it obvious that we expect statements.\r\n\r\n7637e94b9b: Fix another forgotten case of tree instead of stmt.\r\n\r\n78dadce8de: Separate Stmt and Tree.\r\n\r\nDo not inherit GenTreeStmt from GenTree.\r\n\r\naf38991d0b: Update GetIndirSize to handle no user case.\r\n\r\nThis doesn't change behavior for the Stmt case because a user that was GT_STMT was not able to be GT_ASG at the same time.\r\n\r\n0023837ba4: BasicBlock::Contains uses LIR::Range iterator and can't be used for non-LIR case.\r\n\r\ne949ca56ea: Delete leftovers.\r\n\r\ndcfa2b3854: Response review, part 1.\r\n\r\ne5ea03598b: Response review, part 2.","Url":"https://github.com/dotnet/coreclr/pull/26092","RelatedDescription":"Open PR \"Separate statements from GenTree, part 2\" (#26092)"},{"Id":"478722259","IsPullRequest":true,"CreatedAt":"2019-08-08T22:55:51","Actor":"jakobbotsch","Number":"26090","RawContent":null,"Title":"Add ABI stress tests","State":"open","Body":"This adds stress tests that dynamically generate methods with different\r\nsignatures and tests calls to them. It tests both tailcalls to them and\r\npinvokes to them (caller -> pinvoke -> reverse pinvoke -> callee).\r\n\r\nThis adds 2 tests: one for pinvokes (testing caller -> pinvoke -> reverse pinvoke -> callee) and one for tailcalls. Each of these run different debug/optimizations modes, so in total this is 8 tests. I have aimed for these to take roughly 10 seconds each (x64 checked on an Ubuntu VM), so this adds around 80 secs of CPU time to the pri0 tests. I am curious if anyone has thoughts on whether this is an acceptable amount of time for these tests or whether the total number of calls should be decreased. Right now each test is testing 1000 calls.\r\n\r\ncc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/26090","RelatedDescription":"Open PR \"Add ABI stress tests\" (#26090)"},{"Id":"478713744","IsPullRequest":true,"CreatedAt":"2019-08-08T22:23:10","Actor":"sywhang","Number":"26089","RawContent":null,"Title":"[3.0 port] Fix a potential division by 0 in post GC counter computation","State":"open","Body":"Backport #26085 to 3.0. \r\n\r\nIssue: https://github.com/dotnet/coreclr/issues/25917\r\n\r\nCode Reviewer: Maoni Stephens \r\n\r\nDescription:\r\nThis code path is used for computing % time in GC to be reported via performance counter when needed. _timeInGCBase is computed by subtracting the timestamp received via QueryPerformanceCounter at last GC that happened from the current timestamp. Since QueryPerformanceCounter is a high-res timestamp I did not think that the subtraction of the two timestamps could ever be 0, but we have a customer reporting that in #25917. While I still wasn't able to repro the issue, I confirmed that it was this division by zero exception that happened.\r\n\r\nCustomer Impact:\r\nWhile it is very hard to repro this issue, when it does happen it is deadly (it can deadlock the process if another GC kicks in during the exception processing) and is difficult to diagnose (managed debugger can't be attached). It is also in a code path that can be called even when a customer does not listen to the % time in GC counter.\r\n\r\nRegression?\r\nThis is a regression introduced in 3.0 Preview 6.\r\n\r\nRisk:\r\nLow\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26089","RelatedDescription":"Open PR \"[3.0 port] Fix a potential division by 0 in post GC counter computation\" (#26089)"},{"Id":"478712333","IsPullRequest":false,"CreatedAt":"2019-08-08T22:18:30","Actor":"johnsimons","Number":"26088","RawContent":null,"Title":"It would be nice if COMPlus_DbgMiniDumpName supported pipe syntax, same as Linux","State":"open","Body":"In Linux core dumps can be piped to another program, see section \"Piping core dumps to a program\" in http://man7.org/linux/man-pages/man5/core.5.html.\r\n\r\nMaybe I am holding this wrong but in net core to analyse one of this dumps on a different machine I need the original files (symbols), so when I use `createdump` I always `tar` the whole application folder including the dump file.\r\n\r\nSo with that in mind, it would be really nice for `COMPlus_DbgMiniDumpName` to support pipe same as Linux.","Url":"https://github.com/dotnet/coreclr/issues/26088","RelatedDescription":"Open issue \"It would be nice if COMPlus_DbgMiniDumpName supported pipe syntax, same as Linux\" (#26088)"},{"Id":"478629147","IsPullRequest":true,"CreatedAt":"2019-08-08T22:14:57","Actor":"sywhang","Number":"26085","RawContent":null,"Title":"Fix a potential division by 0 in post GC counter computation","State":"closed","Body":"Fix #25917. \r\n\r\nThis code path is used for computing % in time GC to be reported via performance counter when needed. `_timeInGCBase` is computed by subtracting the timestamp received via `QueryPerformanceCounter` at last GC that happened from the current timestamp. Since `QueryPerformanceCounter` is a high-res timestamp I did not think that the subtraction of the two timestamps could ever be 0, but we have a customer reporting that in #25917. While I still wasn't able to repro the issue, I confirmed that it was this division by zero exception that happened. ","Url":"https://github.com/dotnet/coreclr/pull/26085","RelatedDescription":"Closed or merged PR \"Fix a potential division by 0 in post GC counter computation\" (#26085)"},{"Id":"478708271","IsPullRequest":true,"CreatedAt":"2019-08-08T22:05:21","Actor":"CarolEidt","Number":"26087","RawContent":null,"Title":"[WIP] Support Write-Thru of EH variables in LSRA","State":"open","Body":"Mark EH variables (those that are live in or out of exception regions) only as lvLiveInOutOfHndlr, not necessarily lvDoNotEnregister\r\nDuring register allocation, mark these as write-thru, and mark all defs as write-thru, ensuring that the stack value is always valid.\r\nMark those defs with GTF_SPILLED (this the \"reload\" flag and is not currently used for pure defs) to indicate that it should be kept in the register.\r\nMark blocks that enter EH regions as having no predecessor, and set the location of all live-in vars to be on the stack.\r\nChange genFnPrologCalleeRegArgs to store EH vars also to the stack if they have a register assignment.","Url":"https://github.com/dotnet/coreclr/pull/26087","RelatedDescription":"Open PR \"[WIP] Support Write-Thru of EH variables in LSRA\" (#26087)"},{"Id":"478609600","IsPullRequest":true,"CreatedAt":"2019-08-08T20:56:34","Actor":"Dotnet-GitSync-Bot","Number":"26083","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/26083","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#26083)"},{"Id":"478619093","IsPullRequest":false,"CreatedAt":"2019-08-08T18:17:26","Actor":"danmosemsft","Number":"26084","RawContent":null,"Title":"dotnet quit unexpectedly on mac","State":"open","Body":"from @vineetpatidar  and @hannahmneal\r\n```\r\nI have run my existing web app which run successfully on windows machine\r\nBut when i run on mac machine quit unexpectedly\r\n\r\nHere is error log\r\n\r\nProcess:               dotnet [1887]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        vsdbg-ui [1886]\r\nResponsible:           dotnet [1887]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-08-08 13:52:10.759 +0530\r\nOS Version:            Mac OS X 10.14.4 (18E226)\r\nReport Version:        12\r\nBridge OS Version:     3.0 (14Y677)\r\nAnonymous UUID:        B3B8E5C5-DDFC-551B-2C33-C890D4026E88\r\n\r\n\r\nTime Awake Since Boot: 5000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff5b7872c6 __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83cbf1 pthread_kill + 284\r\n2   libsystem_c.dylib             \t0x00007fff5b6f16a6 abort + 127\r\n3   libcoreclr.dylib              \t0x0000000104fff58e PROCAbort + 14\r\n4   libcoreclr.dylib              \t0x0000000104ffe172 PROCEndProcess(void*, unsigned int, int) + 226\r\n5   libcoreclr.dylib              \t0x00000001052b9ea1 UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 721\r\n6   libcoreclr.dylib              \t0x00000001052ba034 DispatchManagedException(PAL_SEHException&, bool) + 292\r\n7   libcoreclr.dylib              \t0x00000001052274a0 IL_Throw(Object*) + 688\r\n8   ???                           \t0x0000000113ada42f 0 + 4625114159\r\n9   ???                           \t0x00000001151a3771 0 + 4649006961\r\n10  ???                           \t0x0000000114017ee3 0 + 4630609635\r\n11  ???                           \t0x0000000114010634 0 + 4630578740\r\n12  ???                           \t0x00000001140104b2 0 + 4630578354\r\n13  libcoreclr.dylib              \t0x00000001052c6221 CallDescrWorkerInternal + 124\r\n14  libcoreclr.dylib              \t0x00000001051bd45d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n15  libcoreclr.dylib              \t0x00000001050940da RunMain(MethodDesc*, short, int*, PtrArray**) + 682\r\n16  libcoreclr.dylib              \t0x000000010509434f Assembly::ExecuteMainMethod(PtrArray**, int) + 223\r\n17  libcoreclr.dylib              \t0x00000001050ce994 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n18  libcoreclr.dylib              \t0x0000000105008276 coreclr_execute_assembly + 230\r\n19  libhostpolicy.dylib           \t0x0000000104eeaba8 0x104e70000 + 502696\r\n20  libhostpolicy.dylib           \t0x0000000104edab66 0x104e70000 + 437094\r\n21  libhostpolicy.dylib           \t0x0000000104edc8a0 0x104e70000 + 444576\r\n22  libhostfxr.dylib              \t0x0000000104e0b8a3 0x104d81000 + 567459\r\n23  libhostfxr.dylib              \t0x0000000104e2b5ee 0x104d81000 + 697838\r\n24  libhostfxr.dylib              \t0x0000000104e2e1c2 0x104d81000 + 709058\r\n25  libhostfxr.dylib              \t0x0000000104e2c678 0x104d81000 + 702072\r\n26  libhostfxr.dylib              \t0x0000000104e0c919 0x104d81000 + 571673\r\n27  dotnet                        \t0x0000000104d51052 0x104d44000 + 53330\r\n28  dotnet                        \t0x0000000104d51645 0x104d44000 + 54853\r\n29  libdyld.dylib                 \t0x00007fff5b64c3d5 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78122a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5b78176c mach_msg + 60\r\n2   libcoreclr.dylib              \t0x0000000105004788 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x00000001050036de SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n6   libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78936e poll + 10\r\n1   libcoreclr.dylib              \t0x0000000104ff6b2e CorUnix::CPalSynchronizationManager::ThreadPrepareForShutdown() + 30\r\n2   libcoreclr.dylib              \t0x0000000104ff89af CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 1119\r\n3   libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n6   libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b782ef2 read + 10\r\n1   libcoreclr.dylib              \t0x0000000105071b24 TwoWayPipe::Read(void*, unsigned int) + 36\r\n2   libcoreclr.dylib              \t0x0000000105069ec8 DbgTransportSession::TransportWorker() + 3016\r\n3   libcoreclr.dylib              \t0x0000000105067cf9 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n7   libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x00000001050661c8 DebuggerRCThread::MainLoop() + 264\r\n6   libcoreclr.dylib              \t0x000000010506605b DebuggerRCThread::ThreadProc() + 251\r\n7   libcoreclr.dylib              \t0x0000000105065d44 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n8   libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n9   libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n10  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffaaee WaitForSingleObject + 62\r\n6   libcoreclr.dylib              \t0x000000010506759f HelperCanary::ThreadProc() + 31\r\n7   libcoreclr.dylib              \t0x0000000105067548 HelperCanary::ThreadProc(void*) + 56\r\n8   libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n9   libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n10  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc73 SVR::gc_heap::gc_thread_function() + 147\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x0000000104ffb3c6 WaitForSingleObjectEx + 70\r\n6   libcoreclr.dylib              \t0x000000010529e600 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x00000001052ccc51 SVR::gc_heap::gc_thread_function() + 113\r\n8   libcoreclr.dylib              \t0x00000001052ccbd8 SVR::gc_heap::gc_thread_stub(void*) + 168\r\n9   libcoreclr.dylib              \t0x00000001052b1f2e GCThreadStub(void*) + 30\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 14:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78486a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff5b83d56e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x0000000104ff67b2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x0000000104ff63d8 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 424\r\n4   libcoreclr.dylib              \t0x0000000104ffb251 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int) + 1873\r\n5   libcoreclr.dylib              \t0x00000001051fde2e FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n6   libcoreclr.dylib              \t0x00000001051fdf23 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n7   libcoreclr.dylib              \t0x000000010517fe20 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n8   libcoreclr.dylib              \t0x0000000105180469 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n9   libcoreclr.dylib              \t0x00000001051fe2fc FinalizerThread::FinalizerThreadStart(void*) + 188\r\n10  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78122a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5b78176c mach_msg + 60\r\n2   libclrjit.dylib               \t0x00000001107ae288 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x00000001107ad1de SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n6   libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff5b78122a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff5b78176c mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2f1d713e __CFRunLoopServiceMachPort + 328\r\n3   com.apple.CoreFoundation      \t0x00007fff2f1d66ac __CFRunLoopRun + 1612\r\n4   com.apple.CoreFoundation      \t0x00007fff2f1d5e0e CFRunLoopRunSpecific + 455\r\n5   com.apple.CoreFoundation      \t0x00007fff2f1d5c22 CFRunLoopRun + 40\r\n6   ???                           \t0x00000001140257c3 0 + 4630665155\r\n7   ???                           \t0x000000011450c2fe 0 + 4635804414\r\n8   ???                           \t0x00000001146d4fc3 0 + 4637675459\r\n9   libcoreclr.dylib              \t0x00000001052c6221 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x00000001051bd45d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n11  libcoreclr.dylib              \t0x00000001051d1131 ThreadNative::KickOffThread_Worker(void*) + 513\r\n12  libcoreclr.dylib              \t0x000000010517fe20 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 384\r\n13  libcoreclr.dylib              \t0x00000001051803d3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x00000001051d12e1 ThreadNative::KickOffThread(void*) + 209\r\n15  libcoreclr.dylib              \t0x0000000105000fe8 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff5b83a2eb _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff5b83d249 _pthread_start + 66\r\n18  libsystem_pthread.dylib       \t0x00007fff5b83940d thread_start + 13\r\n\r\nThread 17:\r\n0   libsystem_pthread.dylib       \t0x00007fff5b8393f0 start_wqthread + 0\r\n\r\nThread 18:\r\n0   libsystem_pthread.dylib       \t0x00007fff5b8393f0 start_wqthread + 0\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x0000000110c755c0  rcx: 0x00007ffeeaeb0b18  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffeeaeb0b50  rsp: 0x00007ffeeaeb0b18\r\n   r8: 0x000000000000b5cd   r9: 0xffffffff00000000  r10: 0x0000000000000000  r11: 0x0000000000000206\r\n  r12: 0x0000000000000307  r13: 0x0000000000000000  r14: 0x0000000000000006  r15: 0x000000000000002d\r\n  rip: 0x00007fff5b7872c6  rfl: 0x0000000000000206  cr2: 0x00007fff8e648188\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000148\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x104d44000 -        0x104d66ff7 +dotnet (0) <79DB91A2-CB78-3010-92E8-15BECFE147EC> /usr/local/share/dotnet/dotnet\r\n       0x104d81000 -        0x104e67fff +libhostfxr.dylib (0) <C5E483F6-2DE2-3CC2-969F-A9E5D181EED9> /usr/local/share/dotnet/host/fxr/2.2.6/libhostfxr.dylib\r\n       0x104e70000 -        0x104f3dff7 +libhostpolicy.dylib (0) <13D2E782-D354-376F-98F8-631B7FB9B480> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.5/libhostpolicy.dylib\r\n       0x104fb8000 -        0x1054c6fff +libcoreclr.dylib (0) <C5EE5C58-1103-39BB-B9F5-27231CB15248> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.5/libcoreclr.dylib\r\n       0x1105f1000 -        0x1107f5ff7 +libclrjit.dylib (0) <D4A3B2E2-F4B2-3BC3-AACA-65A295625370> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.5/libclrjit.dylib\r\n       0x1108d3000 -        0x1108defff +System.Globalization.Native.dylib (0) <05367205-8F42-3DFC-AF25-4B8EC330726A> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.5/System.Globalization.Native.dylib\r\n       0x1108e5000 -        0x1108edff3 +System.Native.dylib (0) <5070E162-F7C0-3969-A218-F43A2A21AF8B> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.5/System.Native.dylib\r\n       0x110bd3000 -        0x110c3d6ef  dyld (655.1.1) <F217F7F8-A795-3109-B77F-B1E2277F3E3B> /usr/lib/dyld\r\n       0x606d3c000 -        0x606d41ffb +System.Security.Cryptography.Native.Apple.dylib (0) <05923982-D055-379B-A1D7-EF9A42B077FA> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.5/System.Security.Cryptography.Native.Apple.dylib\r\n    0x7fff2b60e000 -     0x7fff2b60efff  com.apple.Accelerate (1.11 - Accelerate 1.11) <762942CB-CFC9-3A0C-9645-A56523A06426> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff2b626000 -     0x7fff2bcbffef  com.apple.vImage (8.1 - ???) <F9C4B95C-7BE9-30A4-98D4-FD9996EE5E81> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff2bcc0000 -     0x7fff2bf39ff3  libBLAS.dylib (1243.200.4) <F2B8340C-4147-3EE4-9BDF-1C259F9CB76E> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff2bf3a000 -     0x7fff2bfacffb  libBNNS.dylib (38.250.1) <95A91B57-17B8-389F-B324-3AD42BBEA3E6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff2bfad000 -     0x7fff2c356ff3  libLAPACK.dylib (1243.200.4) <92175DF4-863A-3780-909A-A3E5C410F2E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff2c357000 -     0x7fff2c36cfeb  libLinearAlgebra.dylib (1243.200.4) <BD6B8E28-C982-3002-868C-C96A18175030> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff2c36d000 -     0x7fff2c372ff3  libQuadrature.dylib (3.200.2) <354D7970-0570-32E0-ABAE-222DAAF1F7A9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff2c373000 -     0x7fff2c3efff3  libSparse.dylib (79.200.5) <DCC01AE4-FC16-3C7B-9010-999411448164> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff2c3f0000 -     0x7fff2c403fe3  libSparseBLAS.dylib (1243.200.4) <95B6FFFD-CDD5-3ABB-B862-6A86720DCD77> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff2c404000 -     0x7fff2c5ebff7  libvDSP.dylib (671.250.4) <7B110627-A9C1-3FB7-A077-0C7741BA25D8> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff2c5ec000 -     0x7fff2c69fff7  libvMisc.dylib (671.250.4) <41FB4684-9DC8-3C19-8E2D-3BB7E6F74AAA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff2c6a0000 -     0x7fff2c6a0fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <74288115-EF61-30B6-843F-0593B31D4929> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff2d649000 -     0x7fff2d649fff  com.apple.ApplicationServices (50.1 - 50.1) <E57E6BAC-3CA7-3EFB-9A6B-ACF662E07FAC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff2d64a000 -     0x7fff2d6b5fff  com.apple.ApplicationServices.ATS (377 - 453.11.2.2) <5B30E86D-B3AB-3346-A19F-F2CABF342465> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff2d74e000 -     0x7fff2d865fff  libFontParser.dylib (228.6.2.3) <BBB2EECE-7C24-3D43-A902-EB473A70EDED> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff2d866000 -     0x7fff2d8a8fff  libFontRegistry.dylib (228.12.2.3) <DEA7AE34-2FA6-336E-BF00-00CA2BDC7584> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff2d999000 -     0x7fff2d99dff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <6EDD928D-BC75-385E-AB04-3CB63EAEBF96> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2da38000 -     0x7fff2da8aff7  com.apple.HIServices (1.22 - 627.15) <1B4C3D08-1DBA-365B-9362-C6708D8844AA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff2da8b000 -     0x7fff2da9afff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <76B698A9-18B9-3089-9570-4FC3F754D56D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2da9b000 -     0x7fff2dae4ff7  com.apple.print.framework.PrintCore (14.2 - 503.8) <885645E0-D760-35EC-B506-7FC2763390DF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2dae5000 -     0x7fff2db1eff7  com.apple.QD (3.12 - 407.2) <A414332F-72EC-393B-B2BC-7285268A19BD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2db1f000 -     0x7fff2db2bfff  com.apple.speech.synthesis.framework (8.1.2 - 8.1.2) <1F910DC7-410A-391B-A03D-17605E50B688> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2db2c000 -     0x7fff2dda3ff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <1C76AD80-1106-312E-B2C0-126A8D62F192> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2e0fd000 -     0x7fff2e49efff  com.apple.CFNetwork (978.0.7 - 978.0.7) <EFB91439-6953-3CD4-8A14-3E7DC90DDF7E> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff2e9c2000 -     0x7fff2ea8eff7  com.apple.ColorSync (4.13.0 - 3340.7) <3ABFA780-F46A-3F0A-8504-005ADDA0662E> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff2ec1a000 -     0x7fff2eca0fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <7D8A5C9A-3F58-38C2-A1DC-20765150C742> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff2ed2f000 -     0x7fff2f0b3fe3  com.apple.CoreData (120 - 866.5) <7A8DBE88-C7D4-39B4-87E6-508DA68BDAA8> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff2f0b4000 -     0x7fff2f19bff7  com.apple.CoreDisplay (101.3 - 108.11) <373AC375-0178-3721-8FFB-248D96E6AB05> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff2f19c000 -     0x7fff2f5dffff  com.apple.CoreFoundation (6.9 - 1570.16) <F3DFF269-6705-35AD-9F01-66D77DD1B518> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff2f5e1000 -     0x7fff2fc70fe7  com.apple.CoreGraphics (2.0 - 1251.12) <58D98B52-5BEF-3345-B8DD-AAE476234FC1> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff2fc72000 -     0x7fff2ff92fff  com.apple.CoreImage (14.2.0 - 720.0.130) <D09743D4-3B21-367D-8C4A-3DB0F1C1E36D> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff303ed000 -     0x7fff303edfff  com.apple.CoreServices (944.3 - 944.3) <364A9C3B-6841-3E34-A02A-8227FB5C9030> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff303ee000 -     0x7fff3046aff7  com.apple.AE (773 - 773) <3E32B3FF-0A2E-39F6-BBE0-F2E9607AB83A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff3046b000 -     0x7fff30742fff  com.apple.CoreServices.CarbonCore (1178.32 - 1178.32) <B5B61DE0-93F8-3A9F-8AA6-ACAAD04B3547> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff30743000 -     0x7fff3078bff7  com.apple.DictionaryServices (1.2 - 284.16.3) <3EE59BD1-FCDD-3DE2-A7D6-6C503564E1AC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff3078c000 -     0x7fff30794ffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <727151AB-D38F-39B8-B7B3-F0039DBD45D0> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff30795000 -     0x7fff30947fff  com.apple.LaunchServices (944.3 - 944.3) <7BB5AEC5-A509-3188-9884-619E0DF8EED6> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff30948000 -     0x7fff309e6ff7  com.apple.Metadata (10.7.0 - 1191.56) <8DD9AC75-7D3E-3607-BEA0-556E98C30765> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff309e7000 -     0x7fff30a31ff7  com.apple.CoreServices.OSServices (944.3 - 944.3) <B631283D-9B71-3BF0-B0E7-65F8D444179F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff30a32000 -     0x7fff30a99ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <FB1A5F99-FB2F-3533-9658-EB0C82BA2705> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff30a9a000 -     0x7fff30abbff3  com.apple.coreservices.SharedFileList (71.28 - 71.28) <B8B5D959-4236-369D-847D-E696A8293420> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff30dc6000 -     0x7fff30f28ff3  com.apple.CoreText (352.0 - 584.26.2.7) <C7E919A8-5840-39C9-A9E7-0E686F486109> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff30f29000 -     0x7fff30f66ff3  com.apple.CoreVideo (1.8 - 0.0) <0376A7EC-8C71-3F26-9599-4CA7AB7924EA> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff3124c000 -     0x7fff31251ffb  com.apple.DiskArbitration (2.7 - 2.7) <F30DF62A-0BE9-371D-8D86-96554FF45811> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff31410000 -     0x7fff317bdff3  com.apple.Foundation (6.9 - 1570.16) <84055403-9921-3EFC-B593-8F0600EBEE80> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff3182c000 -     0x7fff3185bffb  com.apple.GSS (4.0 - 2.0) <F5E9FADD-D2DF-3A27-A08B-C74C9F7DB98D> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff31ac5000 -     0x7fff31b54fff  com.apple.framework.IOKit (2.0.2 - 1483.250.15) <1170EC49-1912-3657-9C71-991653959191> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff31b56000 -     0x7fff31b65ff3  com.apple.IOSurface (255.4.2 - 255.4.2) <9025E034-7D75-36E3-B71B-96E91FAE109B> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff31bb9000 -     0x7fff31d44fef  com.apple.ImageIO.framework (3.3.0 - 1824.6) <81BA6C12-123A-3FD8-9E88-0698100471A6> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff31d45000 -     0x7fff31d49ffb  libGIF.dylib (1824.6) <4B7B283B-84C8-38D1-BED4-B507C3EF6E7E> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff31d4a000 -     0x7fff31e26fef  libJP2.dylib (1824.6) <E2161CB0-E1B7-351D-9FF3-4CF68A538976> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff31e27000 -     0x7fff31e4cfeb  libJPEG.dylib (1824.6) <0968BAF1-5E5A-3AA0-A971-3B3FFC4A4B66> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff3210f000 -     0x7fff32135feb  libPng.dylib (1824.6) <661821A6-4BF5-31C6-AFDB-7874A446756C> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff32136000 -     0x7fff32138ffb  libRadiance.dylib (1824.6) <0154D539-DF89-3F75-A8F1-92EF147422AF> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff32139000 -     0x7fff32186fe7  libTIFF.dylib (1824.6) <D608EAA9-4159-347E-A449-0A8CAB85DC02> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff332fc000 -     0x7fff33315fff  com.apple.Kerberos (3.0 - 1) <39F3F99E-036E-3406-80D9-8A845D820D4D> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff33d29000 -     0x7fff33db8ff7  com.apple.Metal (161.7.1 - 161.7.1) <18BEB663-0D31-3255-9710-50BC5C3D2A0F> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff33dd4000 -     0x7fff33df3ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <BE0FF8B9-2DBA-3276-A293-C8B0F62BFFC4> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff33df4000 -     0x7fff33e70fe7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <7E94924C-1648-3AE2-A32E-FC0AFCA433C6> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff33e71000 -     0x7fff33e98fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <E878F04A-43F8-3AA4-B9D8-0401F5F98653> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff33e99000 -     0x7fff33fc4ff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <4866922C-9732-3FCE-9419-402E5DD22639> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff33fc5000 -     0x7fff33fdffff  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <80CB3AF2-4401-3B3C-8941-7DEB648DD001> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff33fe0000 -     0x7fff33fe1ff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <A589BBEA-93C6-325C-A695-6E7371B8477C> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff34dd8000 -     0x7fff34de4ff7  com.apple.NetFS (6.0 - 4.0) <7278E8E5-1583-3964-91DA-FB2127DFD63A> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff37882000 -     0x7fff378d9ff7  com.apple.opencl (2.15.3 - 2.15.3) <F558A6A7-3B33-320E-83C0-CF16220A150F> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff378da000 -     0x7fff378f5ff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <386A02AB-0BFA-3847-A56A-2E0EEC5E5D33> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff378f6000 -     0x7fff37901ffb  com.apple.OpenDirectory (10.14 - 207.200.4) <0BD19D17-7F00-3D56-8734-2EE52992B118> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff38251000 -     0x7fff38253fff  libCVMSPluginSupport.dylib (17.5.4) <36EB7FAE-4E66-36BF-9B39-623B19486B3B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff38254000 -     0x7fff38259ff3  libCoreFSCache.dylib (166.2) <1AD45004-2625-3351-8087-77878B95348F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff3825a000 -     0x7fff3825efff  libCoreVMClient.dylib (166.2) <E7FBDAEF-BC56-3662-8D59-71FF88D95F8C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff3825f000 -     0x7fff38267ff7  libGFXShared.dylib (17.5.4) <E3B4FD28-FF4B-3174-AEB3-9EA12EF88100> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff38268000 -     0x7fff38273fff  libGL.dylib (17.5.4) <F6D39828-B5D0-3F8D-8DE0-3683A17042E2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff38274000 -     0x7fff382aefe7  libGLImage.dylib (17.5.4) <7EE3273C-41C2-387F-A4B7-793EFAA67769> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff38422000 -     0x7fff38460fff  libGLU.dylib (17.5.4) <B56C2FEC-CB14-3B61-ADEB-FD4A92931F16> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff38dfd000 -     0x7fff38e0cffb  com.apple.opengl (17.5.4 - 17.5.4) <34FA5E8C-0FAF-3708-836B-E8ACB67EF4F4> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff39c0d000 -     0x7fff39e62fff  com.apple.QuartzCore (1.11 - 697.24.4.2) <BB1034F0-B791-3AF1-B166-6532B2AB54FE> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff3a696000 -     0x7fff3a994ff7  com.apple.security (7.0 - 58286.251.4) <2084C515-AD64-3A48-BE3E-811CAA5A0E41> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff3a995000 -     0x7fff3aa21fff  com.apple.securityfoundation (6.0 - 55185.251.1) <4A36D3BA-02B5-3C52-8B49-08EC290E1924> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff3aa53000 -     0x7fff3aa57ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <139D85D7-C356-36FA-B8F4-696FD37FD1EA> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff3adef000 -     0x7fff3ae5cfff  com.apple.SystemConfiguration (1.17 - 1.17) <90F4626B-F9F6-377C-AA62-B8C23E857244> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff3e271000 -     0x7fff3e316fe7  com.apple.APFS (1.0 - 1) <BA5A03A1-09AF-3859-AA38-BD24C4225E23> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff3ed16000 -     0x7fff3ed17ff7  com.apple.AggregateDictionary (1.0 - 1) <49B5FD7F-A50C-3D67-BFAB-1C25E60F685A> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff3f615000 -     0x7fff3f624fc7  com.apple.AppleFSCompression (96.200.3 - 1.0) <5D6A617C-999A-3D51-8350-109D55E9428A> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff3f76a000 -     0x7fff3f7b3ff3  com.apple.AppleJPEG (1.0 - 1) <EED8C42F-AF5B-355F-BC86-66A6458513C7> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff3fa07000 -     0x7fff3fa29fff  com.apple.applesauce (1.0 - ???) <48562D0B-1A1D-3D62-8BC2-61C55D0DCECE> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff3fb88000 -     0x7fff3fb9cffb  com.apple.AssertionServices (1.0 - 1) <F64A3177-294E-320C-A0E1-25C4322B98E9> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff403c6000 -     0x7fff403cefff  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <7F48D9BD-17A8-3A76-8828-EC49245735EE> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff40465000 -     0x7fff404d2fff  com.apple.BaseBoard (360.27 - 360.27) <215A242E-BD57-3A4B-BCA4-FCC9D674CE7B> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff42137000 -     0x7fff42140ffb  com.apple.CommonAuth (4.0 - 2.0) <55CEF8E6-A659-3D68-BEE0-1236F36E494C> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff42e16000 -     0x7fff42e27ff7  com.apple.CoreEmoji (1.0 - 69.19.9) <90ACD3F0-1542-3094-A1F6-FF2F508A8561> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff433d0000 -     0x7fff43436ff7  com.apple.CoreNLP (1.0 - 130.15.22) <5191A681-5DF3-359A-B401-C29109EA420A> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff441a1000 -     0x7fff441a5fff  com.apple.DSExternalDisplay (3.1 - 380) <6AC4F805-7AAF-31D3-B614-C78B61907EE3> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff4539b000 -     0x7fff457b6fff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <D642D5E1-C7C5-3EBF-9D0A-397BDE2A5723> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff4a70b000 -     0x7fff4a710fff  com.apple.GPUWrangler (3.30.14 - 3.30.14) <5D15F5B8-9D7B-356D-A224-A86CF809BFBF> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff4b515000 -     0x7fff4b524fff  com.apple.GraphVisualizer (1.0 - 5) <C261C18C-C66F-39BA-A640-727434ADBEB7> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff4b671000 -     0x7fff4b6e5ffb  com.apple.Heimdal (4.0 - 2.0) <05B753FE-8F65-3764-8E18-F31902064BA1> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff4c9cf000 -     0x7fff4c9d6ffb  com.apple.IOAccelerator (404.8 - 404.8) <FB11472D-74D7-31D4-8DF6-9A668BB08D4F> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff4c9da000 -     0x7fff4c9f2fff  com.apple.IOPresentment (1.0 - 42.6) <B3365E07-6FC3-3AAA-884D-D6EE7ACDAE16> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff4d086000 -     0x7fff4d161ff7  com.apple.LanguageModeling (1.0 - 159.15.15) <229A8E92-CCB6-3BC7-BCD3-B2309FA744B3> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff4d162000 -     0x7fff4d19eff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <30D3EEF3-31E5-3DE8-8158-40627C358AF6> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff4d1a5000 -     0x7fff4d1aafff  com.apple.LinguisticData (1.0 - 238.24.1) <E155D8DF-8AC1-34B2-B143-BBD3408C8D19> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff4de99000 -     0x7fff4dec1ff7  com.apple.spotlight.metadata.utilities (1.0 - 1191.56) <550876F2-D905-3D65-8FA6-3366D857437B> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff4dec2000 -     0x7fff4df4cfff  com.apple.gpusw.MetalTools (1.0 - 1) <09394594-A80D-3D8B-99E8-E71693909FA1> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff4e197000 -     0x7fff4e1c1ffb  com.apple.MultitouchSupport.framework (2440.7 - 2440.7) <FAE48832-BB56-35C9-B433-F0D03EF50FCD> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff4e3fd000 -     0x7fff4e407fff  com.apple.NetAuth (6.2 - 6.2) <216DF366-7A3E-39E7-896C-7CDFD2A9BD3D> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff4ec68000 -     0x7fff4ecb9ff3  com.apple.OTSVG (1.0 - ???) <AF7D1285-08EE-3EEB-B8B7-6C358768473D> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff54642000 -     0x7fff548ebfff  com.apple.SkyLight (1.600.0 - 340.9) <A962D996-6561-3993-B470-EFD6EE4BFA9C> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff55d5c000 -     0x7fff55d68ffb  com.apple.TCC (1.0 - 1) <95D4B7DF-78F3-3948-AA63-6425AF2C00CD> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff57c39000 -     0x7fff57c3bffb  com.apple.loginsupport (1.0 - 1) <F9C63D6B-5191-3D95-B5C7-B998FA148AA6> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff57f02000 -     0x7fff57f36fff  libCRFSuite.dylib (41.15.4) <43D02A64-2A7B-3825-8097-A6747AF914EE> /usr/lib/libCRFSuite.dylib\r\n    0x7fff57f39000 -     0x7fff57f43ff7  libChineseTokenizer.dylib (28.15.3) <BE41A678-907E-3031-B2BA-ECDB81282499> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff57fd1000 -     0x7fff57fd2ffb  libDiagnosticMessagesClient.dylib (107) <B5675E8C-2F34-3E0A-B7E8-6F2373589038> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff58009000 -     0x7fff58260ffb  libFosl_dynamic.dylib (18.3.2) <C46C13F6-2799-39A0-BB32-126C2259194A> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff582b1000 -     0x7fff582cffff  libMobileGestalt.dylib (645.250.13) <6B4E26AD-D712-360B-904C-877C24D89393> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff582d0000 -     0x7fff582d0fff  libOpenScriptingUtil.dylib (179.1) <5C6CFA80-CBCD-35EB-A69C-72C3B2E8FF50> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff58410000 -     0x7fff58411ffb  libSystem.B.dylib (1252.250.1) <72841192-B0C9-36A0-8E55-ED651EADEF08> /usr/lib/libSystem.B.dylib\r\n    0x7fff5848d000 -     0x7fff5848efff  libThaiTokenizer.dylib (2.15.1) <3D80A800-D49A-305E-9DF0-E6FB11D4FD65> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff584a0000 -     0x7fff584b6ffb  libapple_nghttp2.dylib (1.24.1) <96F6DF29-D31C-3097-9C3E-63B1D62D756C> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff584b7000 -     0x7fff584e0ffb  libarchive.2.dylib (54.250.1) <D6370CDB-920D-37A3-A9C0-6C1FC95F2F99> /usr/lib/libarchive.2.dylib\r\n    0x7fff58564000 -     0x7fff58564ff3  libauto.dylib (187) <4E260A46-13BB-3A8F-A037-D89748837B2A> /usr/lib/libauto.dylib\r\n    0x7fff58634000 -     0x7fff58644ffb  libbsm.0.dylib (39.200.18) <CF0C09D6-FCED-3B48-A617-768A0B5B9DEB> /usr/lib/libbsm.0.dylib\r\n    0x7fff58645000 -     0x7fff58652fff  libbz2.1.0.dylib (38.200.3) <62019AC3-20C9-3DDC-9C83-189C1F258073> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff58653000 -     0x7fff586a6ff7  libc++.1.dylib (400.9.4) <446DAE5E-4E97-3E4B-B2A3-AC0A74C0E453> /usr/lib/libc++.1.dylib\r\n    0x7fff586a7000 -     0x7fff586bcff7  libc++abi.dylib (400.17) <A2D1FDAD-E10F-3E53-958F-CB6BC8485767> /usr/lib/libc++abi.dylib\r\n    0x7fff586bd000 -     0x7fff586bdff3  libcharset.1.dylib (51.200.6) <0D3A5F4C-8800-33E3-AFE5-307E8BEE462C> /usr/lib/libcharset.1.dylib\r\n    0x7fff586be000 -     0x7fff586ceffb  libcmph.dylib (6.15.1) <740A788E-FD92-36F3-B678-E7D510B1E2A1> /usr/lib/libcmph.dylib\r\n    0x7fff586cf000 -     0x7fff586e7ffb  libcompression.dylib (52.250.2) <9E125D43-CE4E-34F8-ACBA-C0835E5F8062> /usr/lib/libcompression.dylib\r\n    0x7fff5895c000 -     0x7fff58972fff  libcoretls.dylib (155.220.1) <FF7EA01E-9A26-36F9-A6FF-9665B501B536> /usr/lib/libcoretls.dylib\r\n    0x7fff58973000 -     0x7fff58974ff3  libcoretls_cfhelpers.dylib (155.220.1) <51572EB9-D154-348B-9934-3CA9444FAE5E> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff58fe6000 -     0x7fff5903cff7  libcups.2.dylib (462.10) <83EF6851-07F6-35B4-AA80-690EF026C706> /usr/lib/libcups.2.dylib\r\n    0x7fff59170000 -     0x7fff59170fff  libenergytrace.dylib (17.200.1) <F0A35E72-B772-359B-81AC-0C94B8A621CA> /usr/lib/libenergytrace.dylib\r\n    0x7fff591a2000 -     0x7fff591a7ff7  libgermantok.dylib (17.15.2) <A78E0BF5-0038-35C7-A8E7-05AEDF86D6D5> /usr/lib/libgermantok.dylib\r\n    0x7fff591a8000 -     0x7fff591adff7  libheimdal-asn1.dylib (520.250.1) <DE1C4650-FDFE-3A31-98AD-597B57C947E5> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff591d8000 -     0x7fff592c8fff  libiconv.2.dylib (51.200.6) <E767B418-3531-3BB0-B58D-9ECB203407B7> /usr/lib/libiconv.2.dylib\r\n    0x7fff592c9000 -     0x7fff59529ff3  libicucore.A.dylib (62123.0.1) <3936C798-1978-3C6C-9050-3BBD57CDA53E> /usr/lib/libicucore.A.dylib\r\n    0x7fff59576000 -     0x7fff59577fff  liblangid.dylib (128.15.1) <1ED2EB78-3891-3DBA-8CB7-BA1A100CFC8F> /usr/lib/liblangid.dylib\r\n    0x7fff59578000 -     0x7fff59590ff3  liblzma.5.dylib (10.200.3) <E6CA9433-904B-3804-82FF-B328E2047368> /usr/lib/liblzma.5.dylib\r\n    0x7fff595a8000 -     0x7fff5964cff7  libmecab.1.0.0.dylib (779.24.1) <0C57BF6E-A713-3AE8-8AD3-80F65D4CCC15> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff5964d000 -     0x7fff59851fff  libmecabra.dylib (779.24.1) <A658B79D-4071-3EC1-9344-ADA438E43FB4> /usr/lib/libmecabra.dylib\r\n    0x7fff59a29000 -     0x7fff59d7aff7  libnetwork.dylib (1229.250.15) <D8F52B1D-1AD9-3D33-8D59-2D631A3CBFEC> /usr/lib/libnetwork.dylib\r\n    0x7fff59e0a000 -     0x7fff5a58ffdf  libobjc.A.dylib (756.2) <4F86FC7C-496B-3E68-8A74-1EA2BA22FBCC> /usr/lib/libobjc.A.dylib\r\n    0x7fff5a5a1000 -     0x7fff5a5a5ffb  libpam.2.dylib (22.200.1) <3AEB13DB-8DE2-3FD9-97D5-D9DB206E0693> /usr/lib/libpam.2.dylib\r\n    0x7fff5a5a8000 -     0x7fff5a5ddfff  libpcap.A.dylib (79.250.1) <FA490ABF-6C15-336A-818F-0C14A8C090DB> /usr/lib/libpcap.A.dylib\r\n    0x7fff5a6f6000 -     0x7fff5a70effb  libresolv.9.dylib (65.200.2) <DB6CA331-BB44-306D-8528-023EADE54BF7> /usr/lib/libresolv.9.dylib\r\n    0x7fff5a761000 -     0x7fff5a93efe7  libsqlite3.dylib (274.22) <378D7B48-4661-3BA6-AC55-0B3A64F8C7E3> /usr/lib/libsqlite3.dylib\r\n    0x7fff5abbe000 -     0x7fff5abc1ff7  libutil.dylib (51.200.4) <336F9184-A739-3770-ACFA-4659DFEEACC4> /usr/lib/libutil.dylib\r\n    0x7fff5abc2000 -     0x7fff5abcffff  libxar.1.dylib (417.1) <D7AC80EE-D974-33E6-ACA7-87B398ACEDD7> /usr/lib/libxar.1.dylib\r\n    0x7fff5abd4000 -     0x7fff5acb6ff3  libxml2.2.dylib (32.8) <064C2F49-C054-38F9-A6B2-032C4AC9738B> /usr/lib/libxml2.2.dylib\r\n    0x7fff5acb7000 -     0x7fff5acdfff3  libxslt.1.dylib (16.1) <FB93A727-731D-313F-AF6B-4518FE830FFB> /usr/lib/libxslt.1.dylib\r\n    0x7fff5ace0000 -     0x7fff5acf2ff7  libz.1.dylib (70.200.4) <FDF169F3-F992-3E8E-B3F7-D4134FEBAE41> /usr/lib/libz.1.dylib\r\n    0x7fff5b4cf000 -     0x7fff5b4d3ff3  libcache.dylib (81) <9A8C27B0-49C9-337F-8BE2-37171ED2D8EE> /usr/lib/system/libcache.dylib\r\n    0x7fff5b4d4000 -     0x7fff5b4deff3  libcommonCrypto.dylib (60118.250.2) <17C4F395-9FF0-331F-8167-5E85AA3588E9> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff5b4df000 -     0x7fff5b4e6ff7  libcompiler_rt.dylib (63.4) <8CB2B2B6-2C55-3733-9842-0E037AE3F46A> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff5b4e7000 -     0x7fff5b4f0ff7  libcopyfile.dylib (146.250.1) <24905E41-9E2F-3DD1-A255-5A17F9FCDAD7> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff5b4f1000 -     0x7fff5b575fc7  libcorecrypto.dylib (602.250.23) <3A6CBD41-AFFE-3E06-B1EC-3E95BC79BAC5> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff5b5fc000 -     0x7fff5b635ff7  libdispatch.dylib (1008.250.7) <50235FCE-B399-3319-90DC-88F530D4FC5C> /usr/lib/system/libdispatch.dylib\r\n    0x7fff5b636000 -     0x7fff5b662ff7  libdyld.dylib (655.1.1) <54C6B494-4A3D-3EEC-B083-636A76AAD649> /usr/lib/system/libdyld.dylib\r\n    0x7fff5b663000 -     0x7fff5b663ffb  libkeymgr.dylib (30) <BEA04E04-FCF1-3A70-810F-08D0FF54CA36> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff5b664000 -     0x7fff5b670ff3  libkxld.dylib (4903.251.3) <649F5829-6AA8-32EE-9A33-B1244378C319> /usr/lib/system/libkxld.dylib\r\n    0x7fff5b671000 -     0x7fff5b671ff7  liblaunch.dylib (1336.251.2) <30E6424E-4640-3DBA-9B64-D5F725263C6E> /usr/lib/system/liblaunch.dylib\r\n    0x7fff5b672000 -     0x7fff5b677fff  libmacho.dylib (927.0.2) <D8515A20-ED7B-3B13-9ADA-4BD7E19E38C4> /usr/lib/system/libmacho.dylib\r\n    0x7fff5b678000 -     0x7fff5b67affb  libquarantine.dylib (86.220.1) <8A9BF971-DB7D-311A-B131-6C5025E82F8F> /usr/lib/system/libquarantine.dylib\r\n    0x7fff5b67b000 -     0x7fff5b67cff7  libremovefile.dylib (45.200.2) <950036B7-B91E-3B5D-853C-8C551E5B6A32> /usr/lib/system/libremovefile.dylib\r\n    0x7fff5b67d000 -     0x7fff5b694ff3  libsystem_asl.dylib (356.200.4) <16F632AD-FADA-3DE9-85E8-EBC7D619A1DA> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff5b695000 -     0x7fff5b695ff7  libsystem_blocks.dylib (73) <0CD6861B-EC5F-3345-9C24-B21EEB85E44F> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff5b696000 -     0x7fff5b71dfff  libsystem_c.dylib (1272.250.1) <F3AA9047-EEDD-3D80-8CC1-023FB312EC8B> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff5b71e000 -     0x7fff5b721ffb  libsystem_configuration.dylib (963.250.1) <02C7A973-014A-31D7-B7D2-247D384CB0D2> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff5b722000 -     0x7fff5b725ff7  libsystem_coreservices.dylib (66) <4CF1C89B-FA6C-3DF3-B1F8-79F549849534> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff5b726000 -     0x7fff5b72cfff  libsystem_darwin.dylib (1272.250.1) <6983A268-20F4-3F98-A3F5-D63848933B02> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff5b72d000 -     0x7fff5b733ff7  libsystem_dnssd.dylib (878.250.4) <9FC5724C-DD03-3E14-A6E1-2DD009D79E0A> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff5b734000 -     0x7fff5b77fffb  libsystem_info.dylib (517.200.9) <F617D3CF-5A4A-36D0-8CBB-4A7C7CDB67AF> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff5b780000 -     0x7fff5b7a8ff7  libsystem_kernel.dylib (4903.251.3) <84EF0290-6CB5-36E5-A273-692A7E437B36> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff5b7a9000 -     0x7fff5b7f4ff7  libsystem_m.dylib (3158.200.7) <33105665-CCC3-36D5-82C9-9B21730CB3DF> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff5b7f5000 -     0x7fff5b819fff  libsystem_malloc.dylib (166.251.2) <90DA09E3-1276-3FCF-8F5F-C9AA61AB9B6D> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff5b81a000 -     0x7fff5b824ff7  libsystem_networkextension.dylib (767.250.2) <4575D797-B793-3D18-9E93-8696CF0B133B> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff5b825000 -     0x7fff5b82cfff  libsystem_notify.dylib (172.200.21) <679E9132-1A46-326E-9A11-D3FF9C86041C> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff5b82d000 -     0x7fff5b836fef  libsystem_platform.dylib (177.250.1) <3CC59141-5365-3848-94C3-D65E6FCA1E74> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff5b837000 -     0x7fff5b841ff7  libsystem_pthread.dylib (330.250.2) <4344198A-A1A3-3C52-97B4-F168D56E9789> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff5b842000 -     0x7fff5b845ff7  libsystem_sandbox.dylib (851.250.12) <66E91015-F62A-3365-BB81-AA88707E8F12> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff5b846000 -     0x7fff5b848ff3  libsystem_secinit.dylib (30.220.1) <F054DCB0-68CE-35E7-8B8C-D648C42124EC> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff5b849000 -     0x7fff5b850ff3  libsystem_symptoms.dylib (820.257.1) <C8517F35-E9DA-3649-B07D-2B38349C6730> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff5b851000 -     0x7fff5b866fff  libsystem_trace.dylib (906.250.5) <AE77ACC7-488F-3AE1-BB0C-1ACFC7E1CE77> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff5b868000 -     0x7fff5b86dffb  libunwind.dylib (35.4) <8F0BC197-B97C-3DDC-92B0-6A7D3CB72FD8> /usr/lib/system/libunwind.dylib\r\n    0x7fff5b86e000 -     0x7fff5b89dff7  libxpc.dylib (1336.251.2) <49138829-09C8-355C-B558-97E070B84EC5> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 2\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 2705\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=344.1M resident=0K(0%) swapped_out_or_unallocated=344.1M(100%)\r\nWritable regions: Total=172.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=172.8M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nDispatch continuations            16.0M        1 \r\nKernel Alloc Once                    8K        1 \r\nMALLOC                            82.4M       25 \r\nMALLOC guard page                   16K        4 \r\nMALLOC_LARGE (reserved)           19.9M        2         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.1M       19 \r\nStack                             17.1M       19 \r\nVM_ALLOCATE                       19.9G     1040 \r\nVM_ALLOCATE (reserved)              64K        1         reserved VM address space (unallocated)\r\n__DATA                            16.3M      195 \r\n__FONT_DATA                          4K        1 \r\n__LINKEDIT                       223.5M       10 \r\n__TEXT                           120.7M      197 \r\n__UNICODE                          564K        1 \r\nmapped file                       55.2M      186 \r\nshared memory                        8K        2 \r\n===========                     =======  ======= \r\nTOTAL                             20.5G     1704 \r\nTOTAL, minus reserved VM space    20.5G     1704 \r\n\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26084","RelatedDescription":"Open issue \"dotnet quit unexpectedly on mac\" (#26084)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"479228992","IsPullRequest":true,"CreatedAt":"2019-08-10T05:09:53","Actor":"dotnet-maestro[bot]","Number":"12197","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.21\r\n- **Date Produced**: 8/10/2019 5:09 AM\r\n- **Commit**: 0fba68164c2297bf1f5e44fa3345c576c618e853\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-21\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-21\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12197","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12197)"},{"Id":"479227870","IsPullRequest":true,"CreatedAt":"2019-08-10T04:52:05","Actor":"dotnet-maestro[bot]","Number":"12196","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190809.9\r\n- **Date Produced**: 8/10/2019 4:51 AM\r\n- **Commit**: 09db3ebbae7f7500f534e744d9893c396458766a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19409.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12196","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12196)"},{"Id":"478953403","IsPullRequest":true,"CreatedAt":"2019-08-10T04:06:20","Actor":"dotnet-maestro[bot]","Number":"12185","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190808.3\r\n- **Date Produced**: 8/9/2019 12:39 AM\r\n- **Commit**: b23fd25e1070aa8075b66f9d208835fa67af3dbb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 5.0.100-alpha1.19408.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12185","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#12185)"},{"Id":"479138221","IsPullRequest":true,"CreatedAt":"2019-08-10T04:00:23","Actor":"dotnet-maestro[bot]","Number":"12190","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190809.4\r\n- **Date Produced**: 8/9/2019 7:39 PM\r\n- **Commit**: dda84bc7fcc35ec0e086e8faa3f62641672376a8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19409.4\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12190","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12190)"},{"Id":"479222056","IsPullRequest":true,"CreatedAt":"2019-08-10T03:53:21","Actor":"dotnet-maestro[bot]","Number":"12195","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.18\r\n- **Date Produced**: 8/10/2019 3:17 AM\r\n- **Commit**: 0630ade3ccba2b3935b0519cda8ed13558500143\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-18\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-18\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12195","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12195)"},{"Id":"479215968","IsPullRequest":true,"CreatedAt":"2019-08-10T02:28:31","Actor":"dotnet-maestro[bot]","Number":"12194","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.16\r\n- **Date Produced**: 8/10/2019 1:52 AM\r\n- **Commit**: 743398ceb34df0f572cda6afee826cda6727d44a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-16\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-16\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-16\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-16\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-16\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12194","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12194)"},{"Id":"479208733","IsPullRequest":true,"CreatedAt":"2019-08-10T01:05:46","Actor":"dotnet-maestro[bot]","Number":"12193","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.14\r\n- **Date Produced**: 8/10/2019 12:29 AM\r\n- **Commit**: ff2850b0d7f8042cb0d49dad7a6a4f2d9dd0bcb5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-14\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-14\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-14\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12193","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12193)"},{"Id":"479197871","IsPullRequest":true,"CreatedAt":"2019-08-09T23:50:46","Actor":"dotnet-maestro[bot]","Number":"12192","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.12\r\n- **Date Produced**: 8/9/2019 11:14 PM\r\n- **Commit**: 02b3616767a30c7f8d0621ad8810efd2a5a218f9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-12\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-12\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-12\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-12\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-12\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12192","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12192)"},{"Id":"478633545","IsPullRequest":true,"CreatedAt":"2019-08-09T22:34:54","Actor":"dotnet-maestro[bot]","Number":"12178","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190809.10\r\n- **Date Produced**: 8/9/2019 10:01 PM\r\n- **Commit**: 190c7a64ec39aa9180823390786ac27054950489\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19409-10\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19409-10\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19409-10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19409-10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19409-10\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12178","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12178)"},{"Id":"479148510","IsPullRequest":true,"CreatedAt":"2019-08-09T20:51:11","Actor":"dotnet-maestro[bot]","Number":"12191","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190809.7\r\n- **Date Produced**: 8/9/2019 8:10 PM\r\n- **Commit**: 6983f1e7c969868e71aa9bb9fbc0fd7f7fa14262\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19409.7\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12191","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12191)"},{"Id":"479089028","IsPullRequest":true,"CreatedAt":"2019-08-09T17:51:53","Actor":"dotnet-maestro[bot]","Number":"12189","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190809.4\r\n- **Date Produced**: 8/9/2019 5:21 PM\r\n- **Commit**: e1508ab7871172ddd9c1fc8aa72afcb29e36978e\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19409.4\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12189","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12189)"},{"Id":"479076560","IsPullRequest":true,"CreatedAt":"2019-08-09T17:22:24","Actor":"dotnet-maestro[bot]","Number":"12188","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190809.1\r\n- **Date Produced**: 8/9/2019 4:46 PM\r\n- **Commit**: 5c71742e4a90587ac06bf17eadf1791ea9b3cb1d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19409.1\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12188","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12188)"},{"Id":"478807395","IsPullRequest":false,"CreatedAt":"2019-08-09T16:58:22","Actor":"UncleSamSwiss","Number":"12182","RawContent":null,"Title":"Dotnet XUnit test hangs when running on a solution in 3.0 preview 7","State":"closed","Body":"Moved from https://github.com/microsoft/vstest/issues/2107\r\n\r\n## Description\r\nAfter upgrading our Docker containers from preview 4 to preview 7 (`mcr.microsoft.com/dotnet/core/sdk:3.0-buster`) all our XUnit tests are hanging.\r\n\r\nCommand (in the solution directory):\r\n```\r\ndotnet test --logger \"trx;LogFileName=Results.trx\" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Include=\"[Backend.*]*\"\r\n```\r\nOutput:\r\n```\r\nTest run for /tmp/build/c0907c7d/repo/src/backend/Api.Tests/bin/Debug/netcoreapp3.0/Backend.Api.Tests.dll(.NETCoreApp,Version=v3.0)\r\nTest run for /tmp/build/c0907c7d/repo/src/backend/Ctrl.Tests/bin/Debug/netcoreapp3.0/Backend.Ctrl.Tests.dll(.NETCoreApp,Version=v3.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.1.1\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nMicrosoft (R) Test Execution Command Line Tool Version 16.1.1\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nStarting test execution, please wait...\r\nr\nTest Run Successful.\r\nTotal tests: 13\r\n     Passed: 13\r\n Total time: 2.0733 Seconds\r\n```\r\n\r\nAfter this comes nothing.\r\n\r\nI've seen the same (or similar) issue reported here for .NET Core 2.x \r\n- https://github.com/dotnet/cli/issues/11421\r\n- https://github.com/microsoft/vstest/issues/2025\r\n\r\nIt seems to be fixed for 2.1.701 & 2.2.301 (according to https://github.com/dotnet/core/issues/2775#issuecomment-510191569)\r\nShould this be fixed with preview 7 or do we have to wait for preview 8?\r\n\r\nCurrently we can't use preview 7 for solution wide unit tests!\r\n\r\n## Environment\r\n`mcr.microsoft.com/dotnet/core/sdk:3.0-buster` as of July 30 (preview 7)\r\n","Url":"https://github.com/dotnet/cli/issues/12182","RelatedDescription":"Closed issue \"Dotnet XUnit test hangs when running on a solution in 3.0 preview 7\" (#12182)"},{"Id":"478964405","IsPullRequest":false,"CreatedAt":"2019-08-09T16:51:58","Actor":"DerAlbertCom","Number":"12187","RawContent":null,"Title":"dotnet test swallows unit tests","State":"closed","Body":"dotnet swallows silently xunit tests (maybe also test from other test frameworks) when there is a problem on the test discovery. I filed the same under: https://github.com/xunit/visualstudio.xunit/issues/164\r\n\r\n## Steps to reproduce\r\nCheckout the repository https://github.com/DerAlbertCom/MisbehavingUnittestRunners run dotnet test. More details why the problem occurs is also there.\r\n\r\n## Expected  behavior\r\n\r\nAt least the exception within the test discovery shows up. It would be better if it is possible to give more detail on exact type or test method.\r\n\r\n## Actual behavior\r\n\r\n![Wrong behavior](https://github.com/DerAlbertCom/MisbehavingUnittestRunners/raw/master/dotnet-test-2-2.PNG)\r\nIn the sample repository are 6 Unit Test, 2 of them get swallowed without any hint because of an exception within the test discoery on one test.\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):                                                                              Version:   2.2.301\r\n Commit:    70d6be0814\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.301\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.108 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]    \r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12187","RelatedDescription":"Closed issue \"dotnet test swallows unit tests\" (#12187)"},{"Id":"478593444","IsPullRequest":true,"CreatedAt":"2019-08-09T16:50:06","Actor":"livarcocc","Number":"12176","RawContent":null,"Title":"Add yaml stages","State":"closed","Body":"#### Description\r\n\r\nThis is a planned change to onboard to yaml stages.\r\n\r\n#### Customer Impact\r\n\r\nInfra-structure change.\r\n\r\n#### Regression?\r\n\r\nNo.\r\n\r\n#### Risk\r\n\r\nLow","Url":"https://github.com/dotnet/cli/pull/12176","RelatedDescription":"Closed or merged PR \"Add yaml stages\" (#12176)"},{"Id":"478956434","IsPullRequest":true,"CreatedAt":"2019-08-09T12:45:26","Actor":"dotnet-maestro[bot]","Number":"12186","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190808.1\r\n- **Date Produced**: 8/8/2019 1:08 PM\r\n- **Commit**: f47d72fecfc89c4ccab0a2fec63dfad9b0287bb8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19408.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12186)"},{"Id":"478953203","IsPullRequest":true,"CreatedAt":"2019-08-09T12:36:58","Actor":"dotnet-maestro[bot]","Number":"12184","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12184","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12184)"},{"Id":"478808424","IsPullRequest":true,"CreatedAt":"2019-08-09T06:25:15","Actor":"dotnet-maestro[bot]","Number":"12183","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190808.9\r\n- **Date Produced**: 8/9/2019 5:49 AM\r\n- **Commit**: e4b4476b37d2122f4a4f9d5a539dc465ceb3f63d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19408.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12183","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12183)"},{"Id":"478768248","IsPullRequest":true,"CreatedAt":"2019-08-09T03:15:36","Actor":"dotnet-maestro[bot]","Number":"12181","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190808.8\r\n- **Date Produced**: 8/9/2019 2:39 AM\r\n- **Commit**: a00bafd70fb8e71c193461da6156d4bf09398a93\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19408.8\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12181","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12181)"},{"Id":"478624902","IsPullRequest":true,"CreatedAt":"2019-08-09T02:56:00","Actor":"dotnet-maestro[bot]","Number":"12177","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190808.4\r\n- **Date Produced**: 8/9/2019 2:20 AM\r\n- **Commit**: 0f99f4d1cb3268962598ebdacabf80f31aa0cd59\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19408.4\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12177","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12177)"},{"Id":"478747226","IsPullRequest":true,"CreatedAt":"2019-08-09T01:28:27","Actor":"dotnet-maestro[bot]","Number":"12180","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190808.6\r\n- **Date Produced**: 8/9/2019 12:52 AM\r\n- **Commit**: 5adeaddfe659b121a1f3bb920367d09b349b9752\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19408.6\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12180","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12180)"},{"Id":"478705403","IsPullRequest":true,"CreatedAt":"2019-08-08T22:31:32","Actor":"dotnet-maestro[bot]","Number":"12179","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190808.5\r\n- **Date Produced**: 8/8/2019 9:55 PM\r\n- **Commit**: d6d4bb27726b59c50df865a190bfc711be823a81\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19408.5\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12179","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12179)"},{"Id":"478499061","IsPullRequest":false,"CreatedAt":"2019-08-08T18:00:05","Actor":"Zanadar","Number":"12173","RawContent":null,"Title":"Please publish 2.1.801+dependencies","State":"closed","Body":"## Steps to reproduce\r\nHey folks. Like like this release is missing. Any chance you could publish a `2.1.801+dependencies` release? Thanks!\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12173","RelatedDescription":"Closed issue \"Please publish 2.1.801+dependencies\" (#12173)"},{"Id":"478567336","IsPullRequest":true,"CreatedAt":"2019-08-08T16:50:59","Actor":"dotnet-maestro[bot]","Number":"12174","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190808.02\r\n- **Date Produced**: 8/8/2019 4:15 PM\r\n- **Commit**: 505da59e8b9e6005d5b5f8dfae2c3bf739bfbd83\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19408-02\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19408-02\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview9-19408-02\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview9-19408-02\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview9-19408-02\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12174","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12174)"},{"Id":"478580547","IsPullRequest":false,"CreatedAt":"2019-08-08T16:44:18","Actor":"jeffkl","Number":"12175","RawContent":null,"Title":"dotnet-install should be able to get version from repository's global.json","State":"open","Body":"Many users lock down their version of .NET Core via `global.json`.  They also have scripts that prepare for build which installs the corresponding .NET Core.  However, the version has to be defined in two places or every script must get the version from `global.json` and pass it to the `dotnet-install` script.\r\n\r\nI'd like to add a feature to `dotnet-install.ps1` to allow users to pass in a path to a `global.json` which will be read and that exact version will be installed.  I'm not sure how to parse JSON in bash but I can try to update `dotnet-install.sh` as well.","Url":"https://github.com/dotnet/cli/issues/12175","RelatedDescription":"Open issue \"dotnet-install should be able to get version from repository's global.json\" (#12175)"},{"Id":"478471015","IsPullRequest":true,"CreatedAt":"2019-08-08T14:07:29","Actor":"dotnet-maestro[bot]","Number":"12172","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190808.1\r\n- **Date Produced**: 8/8/2019 1:26 PM\r\n- **Commit**: 3bd838f9d42c9b3caa8ba2a2d26bb68f48d27b58\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19408.1\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12172","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12172)"},{"Id":"478429822","IsPullRequest":true,"CreatedAt":"2019-08-08T12:54:18","Actor":"dotnet-maestro[bot]","Number":"12171","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12171","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12171)"},{"Id":"478429721","IsPullRequest":true,"CreatedAt":"2019-08-08T12:37:06","Actor":"dotnet-maestro[bot]","Number":"12170","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12170","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12170)"},{"Id":"478309111","IsPullRequest":false,"CreatedAt":"2019-08-08T07:54:37","Actor":"jwfx","Number":"12169","RawContent":null,"Title":"Publishing a solution and publishing a project yields different results","State":"open","Body":"## Steps to reproduce\r\nUsing this project here: https://github.com/jwfx/TestApp\r\n\r\nPublish the solution:\r\n`D:\\downloads\\TestApp-master>dotnet publish -o d:\\publishcsproj -c Release -r linux-x64 --self-contained true`\r\n\r\nPublish the TestApp project:\r\n`D:\\downloads\\TestApp-master\\TestApp>dotnet publish -o d:\\publishcsproj -c Release -r linux-x64 --self-contained true`\r\n\r\n\r\n## Expected  behavior\r\nBoth publish folders should contain 100% identical output.\r\n\r\n\r\n## Actual behavior\r\n**Using SDK 2.2.401** (pinned via global.json in the sample above)\r\n\r\nWhen publishing the solution a `.deps.json` file is created for all projects referenced in the solution. In this case a `ClassLibrary1.deps.json` is copied to the publish folder.\r\n\r\nThe `ClassLibrary1.deps.json` is not created when publishing from the `TestApp` project folder.\r\n\r\n**Using SDK 3.0.100-preview7-012821**\r\n\r\nSame issue with `.deps.json` from above and additionally the `ClassLibrary1.dll` has different processor targets depending on where is being published from:\r\n\r\n![image](https://user-images.githubusercontent.com/39484381/62684849-d3844b00-b9c1-11e9-9833-a3fcf9d801fd.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n````\r\nD:\\downloads\\TestApp-master>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n````\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12169","RelatedDescription":"Open issue \"Publishing a solution and publishing a project yields different results\" (#12169)"},{"Id":"478195177","IsPullRequest":false,"CreatedAt":"2019-08-08T00:28:15","Actor":"ivanbasov","Number":"12168","RawContent":null,"Title":"Provide a map file generation to use for remove unused references functionality","State":"open","Body":"This task is a part of https://github.com/dotnet/roslyn/issues/6763\r\n\r\nThe build team will generate a file with a map of assemblies, packages which can be checked for usage/non-usage. MS Build will generated the file. If other environments are used, they have to provide this file on their own.","Url":"https://github.com/dotnet/cli/issues/12168","RelatedDescription":"Open issue \"Provide a map file generation to use for remove unused references functionality\" (#12168)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"477522586","IsPullRequest":false,"CreatedAt":"2019-08-09T19:16:03","Actor":"dagood","Number":"1403","RawContent":null,"Title":"What version of .NET Standard should be bundled in 5.0 SDK builds?","State":"closed","Body":"Currently, we bundle netstandard 2.1 in SDK 3.0. I see dotnet/standard `master` is producing netstandard 2.2.\r\n\r\nShould Core-Setup bundle up 2.2 and have that used in the SDK (https://github.com/dotnet/core-setup/issues/7567)? Or should the SDK continue to bundle netstandard 2.1? Should more than one version be bundled?\r\n\r\nThe question of whether we need more .NET Standard releases in a 5.0 world seems very relevant. (I don't know any newer info than https://devblogs.microsoft.com/dotnet/introducing-net-5/.)\r\n\r\n@wtgodbe @nguerrera ","Url":"https://github.com/dotnet/standard/issues/1403","RelatedDescription":"Closed issue \"What version of .NET Standard should be bundled in 5.0 SDK builds?\" (#1403)"},{"Id":"479056963","IsPullRequest":false,"CreatedAt":"2019-08-09T15:56:20","Actor":"dagood","Number":"1421","RawContent":null,"Title":"When building 2.2 packages, put assets in netstandard2.2 TFM","State":"open","Body":"Helps resolve https://github.com/dotnet/core-setup/issues/7567 in the best way.\r\n\r\nCurrently the `NETStandard.Library` 2.2 packages has assets in `build/netstandard2.1/ref/`. (Similar in the transport package.) Core-Setup carries this along when producing `NETStandard.Library.Ref`.","Url":"https://github.com/dotnet/standard/issues/1421","RelatedDescription":"Open issue \"When building 2.2 packages, put assets in netstandard2.2 TFM\" (#1421)"},{"Id":"478982965","IsPullRequest":true,"CreatedAt":"2019-08-09T13:29:02","Actor":"dotnet-maestro[bot]","Number":"1420","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190808.12\r\n- **Date Produced**: 8/8/2019 8:13 PM\r\n- **Commit**: cc92e719bc3564bc4ea913eb770cd5315a6c3bc1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview9.19408.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview9.19408.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview9.19408.12\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1420","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1420)"},{"Id":"478982798","IsPullRequest":true,"CreatedAt":"2019-08-09T13:28:37","Actor":"dotnet-maestro[bot]","Number":"1419","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190809.1\r\n- **Date Produced**: 8/9/2019 10:13 AM\r\n- **Commit**: e122f306410b1045ab2f4cb7e533ece8556bee56\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19409.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19409.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19409.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1419","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1419)"},{"Id":"478952413","IsPullRequest":true,"CreatedAt":"2019-08-09T12:14:53","Actor":"dotnet-maestro[bot]","Number":"1418","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1418","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1418)"},{"Id":"478750569","IsPullRequest":false,"CreatedAt":"2019-08-09T01:10:44","Actor":"reflectronic","Number":"1417","RawContent":null,"Title":"Add System.Text.Rune","State":"open","Body":"It is probably a little too late, but please consider slipping in [`System.Text.Rune`](https://docs.microsoft.com/en-us/dotnet/api/system.text.rune) and related types (like [`StringRuneEnumerator`](https://docs.microsoft.com/en-us/dotnet/api/system.text.stringruneenumerator)/[`SpanRuneEnumerator`](https://docs.microsoft.com/en-us/dotnet/api/system.text.spanruneenumerator)) for .NET Standard 2.1 or 2.2","Url":"https://github.com/dotnet/standard/issues/1417","RelatedDescription":"Open issue \"Add System.Text.Rune\" (#1417)"},{"Id":"478243724","IsPullRequest":false,"CreatedAt":"2019-08-08T22:42:36","Actor":"chrisaut","Number":"1408","RawContent":null,"Title":"Include IHttpClientFactory?","State":"closed","Body":"Microsoft [recommends](https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests) using IHttpClientFactory instead of either create a new HttpClient for each use ([potential socket starvation](https://aspnetmonsters.com/2016/08/2016-08-27-httpclientwrong/) even if disposing correctly), or reusing same client yourself ([DNS updat issues](https://github.com/dotnet/corefx/issues/11224)).\r\n\r\nThis is available [since .net core 2.1](https://apisof.net/catalog/System.Net.Http.IHttpClientFactory) but not in any net standard version.\r\n\r\nCould/should this be included in 2.1? Some libraries may want to take it on as a constructor arg","Url":"https://github.com/dotnet/standard/issues/1408","RelatedDescription":"Closed issue \"Include IHttpClientFactory?\" (#1408)"},{"Id":"478470024","IsPullRequest":true,"CreatedAt":"2019-08-08T13:40:25","Actor":"dotnet-maestro[bot]","Number":"1416","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190807.14\r\n- **Date Produced**: 8/7/2019 11:36 PM\r\n- **Commit**: 87bac62cecc33b1dfd0b77e27778cd1f9d456f70\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview9.19407.14\r\n  - **System.Reflection.Emit** -> 4.6.0-preview9.19407.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview9.19407.14\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1416","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1416)"},{"Id":"478469804","IsPullRequest":true,"CreatedAt":"2019-08-08T13:40:02","Actor":"dotnet-maestro[bot]","Number":"1415","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190807.20\r\n- **Date Produced**: 8/8/2019 12:45 AM\r\n- **Commit**: bf8945497724dbe7c69ce8aaf4a24ac4fffc1a72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19407.20\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19407.20\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19407.20\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1415","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1415)"},{"Id":"478468989","IsPullRequest":true,"CreatedAt":"2019-08-08T13:38:34","Actor":"dotnet-maestro[bot]","Number":"1414","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190807.14\r\n- **Date Produced**: 8/7/2019 11:36 PM\r\n- **Commit**: 87bac62cecc33b1dfd0b77e27778cd1f9d456f70\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview9.19407.14\r\n  - **System.Reflection.Emit** -> 4.6.0-preview9.19407.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview9.19407.14\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1414","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1414)"},{"Id":"478468767","IsPullRequest":true,"CreatedAt":"2019-08-08T13:38:09","Actor":"dotnet-maestro[bot]","Number":"1413","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190807.20\r\n- **Date Produced**: 8/8/2019 12:45 AM\r\n- **Commit**: bf8945497724dbe7c69ce8aaf4a24ac4fffc1a72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19407.20\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19407.20\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19407.20\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1413","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1413)"},{"Id":"478466393","IsPullRequest":true,"CreatedAt":"2019-08-08T13:18:32","Actor":"dotnet-maestro[bot]","Number":"1412","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1412","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1412)"},{"Id":"478465404","IsPullRequest":true,"CreatedAt":"2019-08-08T13:16:44","Actor":"dotnet-maestro[bot]","Number":"1411","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1411","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1411)"},{"Id":"478428950","IsPullRequest":true,"CreatedAt":"2019-08-08T12:15:13","Actor":"dotnet-maestro[bot]","Number":"1410","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1410","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1410)"},{"Id":"478428835","IsPullRequest":true,"CreatedAt":"2019-08-08T12:14:58","Actor":"dotnet-maestro[bot]","Number":"1409","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1409","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1409)"},{"Id":"477917127","IsPullRequest":true,"CreatedAt":"2019-08-07T13:20:32","Actor":"dotnet-maestro[bot]","Number":"1407","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190807.1\r\n- **Date Produced**: 8/7/2019 9:33 AM\r\n- **Commit**: de38804d52f6b65f0f290b81383f01e6943a6d8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19407.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19407.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19407.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1407","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1407)"},{"Id":"477915499","IsPullRequest":true,"CreatedAt":"2019-08-07T13:12:22","Actor":"dotnet-maestro[bot]","Number":"1406","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190807.1\r\n- **Date Produced**: 8/7/2019 9:33 AM\r\n- **Commit**: de38804d52f6b65f0f290b81383f01e6943a6d8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19407.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19407.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19407.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1406","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1406)"},{"Id":"477887123","IsPullRequest":true,"CreatedAt":"2019-08-07T12:15:02","Actor":"dotnet-maestro[bot]","Number":"1405","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190806.7\r\n- **Date Produced**: 8/7/2019 12:08 AM\r\n- **Commit**: c155e609f88491128e1a66d09f413062f3344d4b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19406.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1405","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1405)"},{"Id":"477886937","IsPullRequest":true,"CreatedAt":"2019-08-07T12:14:39","Actor":"dotnet-maestro[bot]","Number":"1404","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190806.7\r\n- **Date Produced**: 8/7/2019 12:08 AM\r\n- **Commit**: c155e609f88491128e1a66d09f413062f3344d4b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19406.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1404","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1404)"},{"Id":"477364336","IsPullRequest":true,"CreatedAt":"2019-08-06T17:48:46","Actor":"dotnet-maestro[bot]","Number":"1401","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190805.13\r\n- **Date Produced**: 8/6/2019 1:51 AM\r\n- **Commit**: c707378f2a8ae1da5ebc5d02bbe2e0a3fd26a6a0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19405.13\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19405.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19405.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1401","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1401)"},{"Id":"477364832","IsPullRequest":true,"CreatedAt":"2019-08-06T13:07:00","Actor":"dotnet-maestro[bot]","Number":"1402","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190805.13\r\n- **Date Produced**: 8/6/2019 1:51 AM\r\n- **Commit**: c707378f2a8ae1da5ebc5d02bbe2e0a3fd26a6a0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19405.13\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19405.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19405.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1402","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1402)"},{"Id":"477340949","IsPullRequest":true,"CreatedAt":"2019-08-06T12:15:23","Actor":"dotnet-maestro[bot]","Number":"1400","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1400","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1400)"},{"Id":"477340687","IsPullRequest":true,"CreatedAt":"2019-08-06T12:14:45","Actor":"dotnet-maestro[bot]","Number":"1399","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1399","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1399)"},{"Id":"476843973","IsPullRequest":true,"CreatedAt":"2019-08-05T13:05:59","Actor":"dotnet-maestro[bot]","Number":"1398","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1398","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1398)"},{"Id":"476843431","IsPullRequest":true,"CreatedAt":"2019-08-05T13:04:49","Actor":"dotnet-maestro[bot]","Number":"1397","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1397","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1397)"},{"Id":"476821836","IsPullRequest":true,"CreatedAt":"2019-08-05T12:15:23","Actor":"dotnet-maestro[bot]","Number":"1396","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1396","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1396)"},{"Id":"476821605","IsPullRequest":true,"CreatedAt":"2019-08-05T12:14:47","Actor":"dotnet-maestro[bot]","Number":"1395","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1395","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1395)"},{"Id":"476550793","IsPullRequest":true,"CreatedAt":"2019-08-04T13:07:29","Actor":"dotnet-maestro[bot]","Number":"1394","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 9:19 AM\r\n- **Commit**: 4408bcb04b4e3a6174d9ec9660fadc71185af712\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1394","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1394)"},{"Id":"476550563","IsPullRequest":true,"CreatedAt":"2019-08-04T13:05:09","Actor":"dotnet-maestro[bot]","Number":"1393","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 9:19 AM\r\n- **Commit**: 4408bcb04b4e3a6174d9ec9660fadc71185af712\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1393","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1393)"},{"Id":"476545674","IsPullRequest":true,"CreatedAt":"2019-08-04T12:15:06","Actor":"dotnet-maestro[bot]","Number":"1392","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1392","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1392)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"479215486","IsPullRequest":false,"CreatedAt":"2019-08-10T01:45:55","Actor":"JamesNK","Number":"40207","RawContent":null,"Title":"HTTP2: Server doesn't completely read request - The CancellationTokenSource has been disposed.","State":"open","Body":"I have created a repro for an error that showed up on the CI build.\r\n\r\nRepro:\r\n1. `git clone https://github.com/JamesNK/grpc-dotnet.git`\r\n2. `git checkout jamesnk/unimplemented-parallel`\r\n3. `dotnet test test\\FunctionalTests --filter Name~DuplexStream_SendToUnimplementedMethodAfterResponseReceived_MoveNextThrowsError > test.log` (writing to a file because it outputs a lot of logging!)\r\n\r\nLogic in the test is something like:\r\n1. Client makes a duplex streaming call to the server. The server will immediately finish the call without reading the request body\r\n2. Client waits for response headers (this is where the HttpClient error eventually happens)\r\n3. Client closes request stream (SerializeToStreamAsync completes)\r\n4. Client attempts to read from the response stream\r\n5. Go to 1.\r\n\r\nI don't know if 3 & 4 are important. They just happen to be part of the test.\r\n\r\nWhen one thread is executing this **sometimes** errors.\r\n\r\nWhen multiple threads share one HttpClient it consistently throws this error:\r\n\r\n```\r\nSystem.Net.Http.HttpRequestException: An error occurred while sending the request.\r\n ---> System.IO.IOException: The request was aborted.\r\n ---> System.ObjectDisposedException: The CancellationTokenSource has been disposed.\r\n   at System.Threading.CancellationTokenSource.ThrowObjectDisposedException()\r\n   at System.Threading.CancellationTokenSource.Cancel()\r\n   at System.Net.Http.Http2Connection.Http2Stream.OnReset(Exception resetException, Nullable`1 resetStreamErrorCode, Boolean canRetry)\r\n   at System.Net.Http.Http2Connection.ProcessRstStreamFrame(FrameHeader frameHeader)\r\n   at System.Net.Http.Http2Connection.ProcessIncomingFramesAsync()\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.Http2Connection.Http2Stream.CheckResponseBodyState()\r\n   at System.Net.Http.Http2Connection.Http2Stream.TryEnsureHeaders()\r\n   at System.Net.Http.Http2Connection.Http2Stream.ReadResponseHeadersAsync(CancellationToken cancellationToken)\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.SendAsync(HttpClient client, HttpRequestMessage request) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 565\r\n   at Grpc.Net.Client.Internal.GrpcCall`2.GetResponseHeadersAsync() in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\GrpcCall.cs:line 266\r\n   at Grpc.Tests.Shared.TaskExtensions.TimeoutAfter[T](Task`1 task, TimeSpan timeout, String filePath, Int32 lineNumber) in C:\\Development\\Source\\grpc-dotnet\\test\\Shared\\TaskExtensions.cs:line 59\r\n   at Grpc.AspNetCore.FunctionalTests.Client.StreamingTests.<>c__DisplayClass3_0.<<DuplexStream_SendToUnimplementedMethodAfterResponseReceived_MoveNextThrowsError>b__1>d.MoveNext() in C:\\Development\\Source\\grpc-dotnet\\test\\FunctionalTests\\Client\\StreamingTests.cs:line 197\r\n```\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview9-013753\r\n Commit:    3a441e719f\r\n```\r\n\r\n// @geoffkizer ","Url":"https://github.com/dotnet/corefx/issues/40207","RelatedDescription":"Open issue \"HTTP2: Server doesn't completely read request - The CancellationTokenSource has been disposed.\" (#40207)"},{"Id":"479214545","IsPullRequest":true,"CreatedAt":"2019-08-10T01:32:40","Actor":"kasiabulat","Number":"40206","RawContent":null,"Title":"JsonObject implementation and tests","State":"open","Body":"I added `JsonObject` implementation and tests.\r\n\r\naddresses: #39922 \r\ncc: @joperezr @bartonjs @ericstj @ahsonkhan @terrajobst @JamesNK @stephentoub","Url":"https://github.com/dotnet/corefx/pull/40206","RelatedDescription":"Open PR \"JsonObject implementation and tests\" (#40206)"},{"Id":"479203317","IsPullRequest":true,"CreatedAt":"2019-08-09T23:49:03","Actor":"safern","Number":"40205","RawContent":null,"Title":"[release/3.0] Move corefx to stages, use arcade's package artifacts convention","State":"open","Body":"Same as: https://github.com/dotnet/corefx/pull/40198 but with a full arcade update.\r\n\r\nDemo build: https://dev.azure.com/dnceng/internal/_build/results?buildId=303622\r\n\r\nPort #40126 to 3.0\r\n\r\nDescription\r\nChanges our build templates to use azure devops stages and include Arcade publish system with signing and nuget validation. Also, changes the directory structure on how we bin place packages in the artifacts dir to follow arcade's convention based on Shipping and NonShipping.\r\n\r\nCustomer Impact\r\nNone.\r\n\r\nRegression?\r\nNo.\r\n\r\nRisk\r\nLow.\r\n\r\nEasier to review by hiding white spaces.\r\n\r\nAlso I added a full arcade update to bring in the necessary yaml and script files for this to work.\r\n\r\ncc: @danmosemsft","Url":"https://github.com/dotnet/corefx/pull/40205","RelatedDescription":"Open PR \"[release/3.0] Move corefx to stages, use arcade's package artifacts convention\" (#40205)"},{"Id":"479201920","IsPullRequest":false,"CreatedAt":"2019-08-09T23:39:17","Actor":"alexkeh","Number":"40204","RawContent":null,"Title":"TLS 1.2 - Zero length fragment error occurs in .NET Core when spec allows it","State":"open","Body":"My team is implementing .NET Core dead connection detection for the Oracle DB. After some idle time, we send a zero length fragment of application data from the server. .NET returns an error via the Oracle data provider.\r\n\r\nAccording to the TLS 1.2 specification (RFC 5246) \"Zero-length fragments of Application data MAY be sent as they are potentially useful as a traffic analysis countermeasure.\" See [Section 6.2.1](https://tools.ietf.org/html/rfc5246#section-6.2.1) of the spec. See below for the call stack.\r\n\r\nWe request .NET Core interpret these message types as TLS zero length fragments instead of requiring the message have a signature. The TLS implementation should just ignore the fragment.\r\n\r\nAbbreviated stack:\r\nOracle.ManagedDataAccess.Client.OracleException (0x80004005): ORA-12570: Network\r\n Session: Unexpected packet read error ---> OracleInternal.Network.NetworkException (0x80004005): ORA-12570: Network Session: Unexpected packet read error --->\r\nSystem.IO.IOException: The decryption operation failed, see inner exception. ---> System.ComponentModel.Win32Exception: The supplied message is incomplete. The signature was not verified\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslStreamInternal.ReadAsyncInternal[TReadAdapter](TReadAdapter adapter, Memory`1 buffer)\r\n   at System.Net.Security.SslStreamInternal.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Net.Security.SslStream.Read(Byte[] buffer, Int32 offset, Int32 count)","Url":"https://github.com/dotnet/corefx/issues/40204","RelatedDescription":"Open issue \"TLS 1.2 - Zero length fragment error occurs in .NET Core when spec allows it\" (#40204)"},{"Id":"479201840","IsPullRequest":true,"CreatedAt":"2019-08-09T23:39:05","Actor":"safern","Number":"40203","RawContent":null,"Title":"Revert \"[release/3.0] Move corefx to stages, use arcade's package artifacts convention\"","State":"closed","Body":"Reverts dotnet/corefx#40198\r\n\r\nReverting as it broke the official build:\r\n\r\n\r\n> Stage validate depends on unknown stage build.\r\nStage Publish depends on stage validate which creates a cycle in the dependency graph.\r\nStage PublishValidation depends on stage Publish which creates a cycle in the dependency graph.\r\nStage PVR_Publish depends on stage validate which creates a cycle in the dependency graph.\r\nStage PVR_PublishValidation depends on stage PVR_Publish which creates a cycle in the dependency graph.\r\nStage PubRel_Publish depends on stage validate which creates a cycle in the dependency graph.\r\nStage PubRel_PublishValidation depends on stage PubRel_Publish which creates a cycle in the dependency graph.\r\nStage IS_Publish depends on stage validate which creates a cycle in the dependency graph.\r\nStage IS_PublishValidation depends on stage IS_Publish which creates a cycle in the dependency graph.\r\n\r\ncc: @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/40203","RelatedDescription":"Closed or merged PR \"Revert \"[release/3.0] Move corefx to stages, use arcade's package artifacts convention\"\" (#40203)"},{"Id":"479182275","IsPullRequest":true,"CreatedAt":"2019-08-09T23:33:13","Actor":"safern","Number":"40198","RawContent":null,"Title":"[release/3.0] Move corefx to stages, use arcade's package artifacts convention","State":"closed","Body":"Port #40126 to 3.0\r\n\r\nDescription\r\nChanges our build templates to use azure devops stages and include Arcade publish system with signing and nuget validation. Also, changes the directory structure on how we bin place packages in the artifacts dir to follow arcade's convention based on `Shipping` and `NonShipping`.\r\n\r\nCustomer Impact\r\nNone.\r\n\r\nRegression?\r\nNo.\r\n\r\nRisk\r\nLow.\r\n\r\n**Easier to review by hiding white spaces**.\r\n\r\ncc: @danmosemsft","Url":"https://github.com/dotnet/corefx/pull/40198","RelatedDescription":"Closed or merged PR \"[release/3.0] Move corefx to stages, use arcade's package artifacts convention\" (#40198)"},{"Id":"479197051","IsPullRequest":true,"CreatedAt":"2019-08-09T23:11:06","Actor":"wfurt","Number":"40202","RawContent":null,"Title":"detect libinotify on FreeBSD","State":"open","Body":"this is follow-up on discussion in #39680\r\nThis change allows to detect if libinotify is present and if so use it. I did not run tests (yet) but this sets HAVE_INOTIFY appropriately and links with library:\r\n```\r\n[furt@FreeBSD-11 ~/git/wfurt-corefx]$ ldd artifacts/bin/native/FreeBSD-x64-Debug/System.Native.so\r\nartifacts/bin/native/FreeBSD-x64-Debug/System.Native.so:\r\n\tlibthr.so.3 => /lib/libthr.so.3 (0x801000000)\r\n\tlibinotify.so.0 => /usr/local/lib/libinotify.so.0 (0x801228000)\r\n\tlibc.so.7 => /lib/libc.so.7 (0x800825000)\r\n```\r\n\r\nI also verify that detection still works and HAVE_INOTIFY is set. \r\n\r\ncc: @rootwyrm @joperator","Url":"https://github.com/dotnet/corefx/pull/40202","RelatedDescription":"Open PR \"detect libinotify on FreeBSD\" (#40202)"},{"Id":"479195310","IsPullRequest":false,"CreatedAt":"2019-08-09T23:01:28","Actor":"tarekgh","Number":"40201","RawContent":null,"Title":"Possible overflow in Partitioner.Create(int fromInclusive, int toExclusive)?","State":"open","Body":"This issue raised in [stackoverflow](https://stackoverflow.com/questions/57232452/is-this-a-bug-in-partitioner-createint-frominclusive-int-toexclusive)\r\n\r\n```C#\r\nvar partitioner = Partitioner.Create(-1, Int32.MaxValue);\r\nvar partitions = partitioner.GetPartitions(1);\r\nforeach (var partition in partitions)\r\n{\r\n    while (partition.MoveNext())\r\n    {\r\n        var range = partition.Current;\r\n        Console.WriteLine($\"Range: {range.Item1,11} => {range.Item2,11}\");\r\n    }\r\n}\r\n```\r\n\r\noutput \r\n\r\n```\r\nRange:          -1 =>  -178956971\r\nRange:  -178956971 =>  -357913941\r\nRange:  -357913941 =>  -536870911\r\nRange:  -536870911 =>  -715827881\r\nRange:  -715827881 =>  -894784851\r\nRange:  -894784851 => -1073741821\r\nRange: -1073741821 => -1252698791\r\nRange: -1252698791 => -1431655761\r\nRange: -1431655761 => -1610612731\r\nRange: -1610612731 => -1789569701\r\nRange: -1789569701 => -1968526671\r\nRange: -1968526671 => -2147483641\r\nRange: -2147483641 =>  2147483647\r\n```\r\n\r\nSo looping throw these ranges with for (int i = range.Item1; i < range.Item2; i++) will result in zero loops for all but the last range, which will loop effectively the full range of the Int32 type.\r\nIt seems that an integer overflow occurs on the subtraction toExclusive - fromInclusive.\r\n","Url":"https://github.com/dotnet/corefx/issues/40201","RelatedDescription":"Open issue \"Possible overflow in Partitioner.Create(int fromInclusive, int toExclusive)?\" (#40201)"},{"Id":"479187566","IsPullRequest":true,"CreatedAt":"2019-08-09T22:23:40","Actor":"safern","Number":"40200","RawContent":null,"Title":"Fix JSON Writer docs for data writter as Base64-encoded text","State":"open","Body":"Per discussion in: https://github.com/dotnet/corefx/pull/39092#discussion_r307081911\r\n\r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/40200","RelatedDescription":"Open PR \"Fix JSON Writer docs for data writter as Base64-encoded text\" (#40200)"},{"Id":"479183613","IsPullRequest":true,"CreatedAt":"2019-08-09T22:06:24","Actor":"ericstj","Number":"40199","RawContent":null,"Title":"Don't restore files to later overwrite them during the build","State":"open","Body":"NETStandard2.1 includes more facades which we still build in corefx.\r\n\r\nMake sure we don't copy these then later overwrite them during the ref build.\r\n\r\nbinplacePackages was restoring runtime files even on NETCoreApp:\r\nwe should never do this.  We have to be careful to only test assemblies\r\nwe build in the repo for netcoreapp.  The only test target which needs\r\nthese is NETFX.\r\n\r\nSource-build was hitting this and it was causing tests to fail because running\r\nbuild -test after a build was rerunning the copy step in netstandard.depproj \r\nand the copy was overwriting the ref/netstandard/S.CM.C.dll which was \r\nhardlinked to the ref/netcoreapp version, and thus breaking the real reference\r\nassembly we build by replacing it with the facade.","Url":"https://github.com/dotnet/corefx/pull/40199","RelatedDescription":"Open PR \"Don't restore files to later overwrite them during the build\" (#40199)"},{"Id":"479172940","IsPullRequest":true,"CreatedAt":"2019-08-09T21:25:54","Actor":"WinCPP","Number":"40197","RawContent":null,"Title":"Corefx #40133 Use TryFormatDouble TryFormatFloat","State":"open","Body":"Fixes #40133 \r\n\r\n@ahsonkhan Please review.","Url":"https://github.com/dotnet/corefx/pull/40197","RelatedDescription":"Open PR \"Corefx #40133 Use TryFormatDouble TryFormatFloat\" (#40197)"},{"Id":"478952208","IsPullRequest":true,"CreatedAt":"2019-08-09T21:17:51","Actor":"dotnet-maestro[bot]","Number":"40179","RawContent":null,"Title":"[master] Update dependencies from 4 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19408.13\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19408.13\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19408.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190808.17\r\n- **Date Produced**: 8/9/2019 8:05 AM\r\n- **Commit**: 04c667df9524e5546984e8ea62f89bf44f914808\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19408.17\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19408.17\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19408.17\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190809.1\r\n- **Date Produced**: 8/9/2019 10:13 AM\r\n- **Commit**: e122f306410b1045ab2f4cb7e533ece8556bee56\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19409.1\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19409.1\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190808.2\r\n- **Date Produced**: 8/8/2019 1:53 PM\r\n- **Commit**: 93c806197ecc6e648f5e94eecaedc2e6f15fc616\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19408.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40179","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from 4 repositories\" (#40179)"},{"Id":"479151863","IsPullRequest":false,"CreatedAt":"2019-08-09T20:20:47","Actor":"safern","Number":"40196","RawContent":null,"Title":"Enable symbol validation in our official builds.","State":"open","Body":"Currently blocked on: https://github.com/dotnet/arcade/issues/2871\r\n\r\ncc: @ericstj @ViktorHofer @markwilkie @danmosemsft ","Url":"https://github.com/dotnet/corefx/issues/40196","RelatedDescription":"Open issue \"Enable symbol validation in our official builds.\" (#40196)"},{"Id":"479151461","IsPullRequest":false,"CreatedAt":"2019-08-09T20:19:34","Actor":"safern","Number":"40195","RawContent":null,"Title":"Enable SourceLink validation into official builds","State":"open","Body":"This is currently blocked on: https://github.com/dotnet/arcade/issues/3603\r\n\r\nWe should just turn it on whenever this is fixed in arcade.\r\n\r\ncc: @ViktorHofer @ericstj @danmosemsft @markwilkie ","Url":"https://github.com/dotnet/corefx/issues/40195","RelatedDescription":"Open issue \"Enable SourceLink validation into official builds\" (#40195)"},{"Id":"479150849","IsPullRequest":false,"CreatedAt":"2019-08-09T20:17:44","Actor":"eiriktsarpalis","Number":"40194","RawContent":null,"Title":"HTTP/2: Rare data corruption when stress testing against Kestrel","State":"open","Body":"I've discovered a data corruption issue when running the HttpStress suite over long stretches of time. The occurrences are very rare (I've recorded 8 instances in stress runs adding to over 60M requests).\r\n\r\nThe issue occurs in requests where the server echoes back random data sent by the client, either headers or content. The final response always differs from expected by a single character: in most cases it's been corrupted to a different value but I've also recorded a couple of instances where it's missing altogether (as such the content length differs from the expected).\r\n\r\n## Examples\r\n\r\nFor example, one operation was expecting\r\n```\r\n\"Bo4JwKXM5KukFjgxQ7E8AV52yeoddJr7XHtKwxu9mVUpl8VbswO3XX9fi2LHWtjlTnCxqM0TD5Lf1FGq9Clguna07DbucdcsliMyvXlVwvqRBUeSlU7J82qfDBpck5qZSTtJtIubQFjzx8pdZ898VJkjrgkjh8kr5GziaKZSZVssIri5MC3cwi49iARCXBtHVsug872EZgY0QsQzyfNV58vNCqzQtMuObaMPx1xEAp2F93jqjREsnOCMxXUI8bLCl9OpV02wi8KG5fD878gR72bDO0SPXe6ZTpT0ftLjPIAf4vHIJLBzuu5jYBQVYcP31lmFCDSDnx\"\r\n```\r\nbut got\r\n```\r\n\"Bo4JwKXM5KukFjgxQ7E8AV(2yeoddJr7XHtKwxu9mVUpl8VbswO3XX9fi2LHWtjlTnCxqM0TD5Lf1FGq9Clguna07DbucdcsliMyvXlVwvqRBUeSlU7J82qfDBpck5qZSTtJtIubQFjzx8pdZ898VJkjrgkjh8kr5GziaKZSZVssIri5MC3cwi49iARCXBtHVsug872EZgY0QsQzyfNV58vNCqzQtMuObaMPx1xEAp2F93jqjREsnOCMxXUI8bLCl9OpV02wi8KG5fD878gR72bDO0SPXe6ZTpT0ftLjPIAf4vHIJLBzuu5jYBQVYcP31lmFCDSDnx\"\r\n```\r\nThe strings are identical with the exception of character in position 22, where the returned value was `(` instead of `5`.\r\n\r\nThe issue overwhelmingly impacted the `POST Duplex Slow` operation, which echoes content flushing characters one by one. _However_ today I recorded a single failure impacting the `GET Headers` operation, which echoes randomized headers:\r\n```\r\nUnexpected values for header Header-51. Expected\r\n\"%2c%3d%7e%25%10%10PuF%07%3cXO)%3cz%16%40fQ5%0dD(%22\", \"%5b%3aQx\", \"%185%1f%1d%3e%17\", \"rRV+\" \r\nbut got \r\n\"%2c%3d%7e%25%10%10PuF%07%3cXO)%3cz%16%40fQ5%0dD(%22\", \"%5b%3aQx\", \"%185%1f%1d%3e%|7\", \"rRV+\"\r\n```\r\nIn this case the second-to-last character in the third value has been corrupted. If caused by the same bug, this suggests that it might not be triggered because of DATA frame granularity.\r\n\r\nHere's a list of all corrupted characters if somebody can deduce a pattern:\r\n\r\n|Index|Expected|Actual|\r\n|----|-----|-----|\r\n|22| `5`  | `(` |\r\n| 231|`j`   | `b`|\r\n| 0|`3`  | `l` |\r\n| 243|`o`  | `i` |\r\n| 408|`q`  | `U+263c` |\r\n| 70 | `H` | missing |\r\n| 327 | `6` | missing |\r\n| N/A (header value)|`1` | `\\|` |\r\n\r\n## More details\r\n\r\n* Stress suite was run with default parameters, but with 50% cancellation rates (`-cancelrate 0.5`).\r\n* Only reproduced when targeting Kestrel, so far no occurences when using http.sys.\r\n\r\n- [ ] Need to verify if corruption happens at request or response.\r\n\r\ncc @geoffkizer ","Url":"https://github.com/dotnet/corefx/issues/40194","RelatedDescription":"Open issue \"HTTP/2: Rare data corruption when stress testing against Kestrel\" (#40194)"},{"Id":"479143551","IsPullRequest":false,"CreatedAt":"2019-08-09T19:56:20","Actor":"SteveL-MSFT","Number":"40193","RawContent":null,"Title":"Regression: UseShellExecute on non-Windows hangs parent process","State":"open","Body":"This is a regression in .NET Core 3.0 from .NET Core 2.1 and only repros on Linux and macOS.\r\n\r\n```powershell\r\ninvoke-item .\r\n```\r\n\r\nWith PSCore6.2 based on .NET Core 2.1, this will open the OS File Explorer and you can still type commands in PowerShell.\r\nWith PS7 based on .NET Core 3.0 (Preview.6 or Preview.7 using nightly build of PS7), this will open the OS File Explorer, but PowerShell is no longer responding to input\r\n","Url":"https://github.com/dotnet/corefx/issues/40193","RelatedDescription":"Open issue \"Regression: UseShellExecute on non-Windows hangs parent process\" (#40193)"},{"Id":"479134641","IsPullRequest":false,"CreatedAt":"2019-08-09T19:29:30","Actor":"scottbrady91","Number":"40192","RawContent":null,"Title":"Consider exposing crv values for ECDSA keys","State":"open","Body":"When handling ECDSA keys, it can be useful to know the corresponding crv value defined in [rfc7518](https://tools.ietf.org/html/rfc7518#section-6.2.1.1).\r\n\r\nCurrently, only the oidc and friendly name are exposed.\r\n\r\nThere are some mappings in IdentityModel's `ECDsaAdapter`, but these methods are private.","Url":"https://github.com/dotnet/corefx/issues/40192","RelatedDescription":"Open issue \"Consider exposing crv values for ECDSA keys\" (#40192)"},{"Id":"479093524","IsPullRequest":true,"CreatedAt":"2019-08-09T19:01:44","Actor":"stephentoub","Number":"40191","RawContent":null,"Title":"[release/3.0] pal_console: add missing mutex_unlock (#40160)","State":"closed","Body":"Port #40160 to release/3.0.\r\nFixes https://github.com/dotnet/corefx/issues/40137\r\ncc: @danmosemsft, @tmds\r\n\r\n## Description\r\n\r\nProcesses on Unix end up sharing a terminal.  We have a heuristic which assumes that if a parent process is interacting with the terminal, any child processes it launches won't.  As such, when we do Process.Start on Unix, we check if the parent process is currently doing a read (e.g. Console.ReadLine()), and if it is, we avoid doing some configuration of the terminal as part of launching the child.  That check is performed under a lock, and we neglect to release that lock when we find it's doing a read.\r\n\r\n## Customer Impact\r\n\r\nCertain patterns would simply hang forever, trying to take a lock that will never be released.\r\n\r\n## Regression?\r\n\r\nYes, introduced in 3.0 as part of https://github.com/dotnet/corefx/pull/35621.\r\n\r\n## Risk\r\n\r\nMinimal.  It's obvious from a scoped code review that the previous code was wrong.","Url":"https://github.com/dotnet/corefx/pull/40191","RelatedDescription":"Closed or merged PR \"[release/3.0] pal_console: add missing mutex_unlock (#40160)\" (#40191)"},{"Id":"479077058","IsPullRequest":true,"CreatedAt":"2019-08-09T18:24:19","Actor":"buyaa-n","Number":"40190","RawContent":null,"Title":"[release/3.0] Test fix non breaking space","State":"closed","Body":"#### Description\r\nUsing Globalization `a.m.` string instead of hard coded one\t\r\nFixes ##40032\r\nPort of #40033\r\n#### Customer Impact\r\nNo\r\n#### Regression?\r\nNo\r\n#### Risk\r\nNo","Url":"https://github.com/dotnet/corefx/pull/40190","RelatedDescription":"Closed or merged PR \"[release/3.0] Test fix non breaking space\" (#40190)"},{"Id":"478956978","IsPullRequest":true,"CreatedAt":"2019-08-09T17:48:55","Actor":"geoffkizer","Number":"40180","RawContent":null,"Title":"[release/3.0] HTTP2: Ensure we don't try to send RST_STREAM or EndStream while holding the stream lock","State":"closed","Body":"Fixes #40115 \r\n\r\n**Description**\r\n\r\nSending a frame -- specifically, calling SendRstStreamAsync or SendEndStreamAsync -- can fail, which causes active streams to be aborted. Avoid doing this under the stream lock, to prevent lock reentrancy issues.\r\n\r\n**Impact** \r\n\r\nFixes test asserts. Avoids any potential issues caused by accidental lock reentrancy here.\r\n\r\n**Regression**\r\n\r\nNo\r\n\r\n**Risk**\r\n\r\nLow\r\n\r\n@danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/40180","RelatedDescription":"Closed or merged PR \"[release/3.0] HTTP2: Ensure we don't try to send RST_STREAM or EndStream while holding the stream lock\" (#40180)"},{"Id":"478976709","IsPullRequest":true,"CreatedAt":"2019-08-09T17:45:59","Actor":"dotnet-maestro[bot]","Number":"40183","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190803.2\r\n- **Date Produced**: 8/4/2019 12:37 AM\r\n- **Commit**: 69649624d71a4d7ebcae2ce5420508e5fe5ba7f2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19403.2\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19403.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19403.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40183","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#40183)"},{"Id":"479049277","IsPullRequest":true,"CreatedAt":"2019-08-09T16:29:23","Actor":"dotnet-maestro[bot]","Number":"40189","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190809.2\r\n- **Date Produced**: 8/9/2019 3:35 PM\r\n- **Commit**: eeec95164a0b39ad3f98dfe04012675f30807cb1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview9.19409.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview9.19409.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview9.19409.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40189","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#40189)"},{"Id":"479037635","IsPullRequest":false,"CreatedAt":"2019-08-09T15:12:51","Actor":"Gnbrkm41","Number":"40188","RawContent":null,"Title":"Proposal: Adding TryFormat to IFormattable as a default interface method","State":"open","Body":"Related: https://github.com/dotnet/corefx/issues/30114 (Discussion about introducing a new interface that has TryFormat)\r\n\r\n# Rationale\r\n`TryFormat` is as a less-allocating alternative of `ToString`, which helps us reduce heap allocations by providing reusable buffers instead of creating a new immutable string every time by calling `ToString`. However, since it isn't part of any interface/classes, there is no way that people can use it in APIs without hard-coding the type which are known to have `TryFormat`.\r\n\r\nNow that we have Default Interface Methods added to C# 8 (and having it supported in .NET Standard 2.1+ / .NET Core 3.0+), I think it would be great if we can add `TryFormat` to `IFormattable` interface as a default interface method, that falls back to the implementation of `ToString` if not implemented. The allocation caused by fallback if not implemented wouldn't likely be an issue, since there would be no alternatives but to call `ToString`, which would allocate the same amount of memory.\r\n\r\n# Proposed API\r\n```cs\r\nnamespace System\r\n{\r\n    public interface IFormattable\r\n    {\r\n        string ToString(string? format, IFormatProvider? formatProvider);\r\n+       bool TryFormat(Span<char> destination, out int charsWritten, ReadOnlySpan<char> format, IFormatProvider? provider);\r\n    }\r\n}\r\n```\r\nThere is no implementations given in this proposal; However it would be very trivial, calling `ToString` then attempting to copy the contents of the returned string into the provided `Span`.\r\n\r\n## Questions\r\nWould it be worth making `format` and `provider` parameters optional for occasions when you just want it to return whatever is the default, given that there isn't a parameter-less `TryFormat` unlike `object.ToString`?","Url":"https://github.com/dotnet/corefx/issues/40188","RelatedDescription":"Open issue \"Proposal: Adding TryFormat to IFormattable as a default interface method\" (#40188)"},{"Id":"479031498","IsPullRequest":false,"CreatedAt":"2019-08-09T14:59:50","Actor":"Vake93","Number":"40187","RawContent":null,"Title":"Question: Runtime type checking for method parameters.","State":"open","Body":"I have being experimenting with the ILGenerator and I found that if I pass an object of a different type than what is in the method signature the runtime doesn't throw any exceptions and still pass the object of the incorrect type into the method.\r\n\r\nMy question is: isn't there any runtime type checking to see if parameters passed to a method matches what's defined by the method signature? \r\n\r\nI've attached the minimal code to test this behavior as well.\r\n\r\n[Program.zip](https://github.com/dotnet/corefx/files/3487004/Program.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/40187","RelatedDescription":"Open issue \"Question: Runtime type checking for method parameters.\" (#40187)"},{"Id":"479018012","IsPullRequest":false,"CreatedAt":"2019-08-09T14:59:44","Actor":"jiatao99","Number":"40185","RawContent":null,"Title":"Make ISpanFormattable interface public","State":"closed","Body":"Why ISpanFormattable is marked as internal? I would like to write generics function against this interface.\r\n\r\nFor example:\r\n\r\nFormat<T>(T data) where T : ISpanFormattable\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/40185","RelatedDescription":"Closed issue \"Make ISpanFormattable interface public\" (#40185)"},{"Id":"479022914","IsPullRequest":false,"CreatedAt":"2019-08-09T14:42:04","Actor":"kasiabulat","Number":"40186","RawContent":null,"Title":"Add aggressive method inlining attribute to equals on JsonNumber, JsonString and JsonBoolean ","State":"open","Body":"Check if the `JsonNumber` (`JsonString` and `JsonBoolean`) implementation of == operator:\r\n\r\n```csharp\r\npublic static bool operator ==(JsonNumber left, JsonNumber right)\r\n{\r\n    // Test \"right\" first to allow branch elimination when inlined for null checks (== null)\r\n    // so it can become a simple test\r\n    if (right is null)\r\n    {\r\n        // return true/false not the test result https://github.com/dotnet/coreclr/issues/914\r\n        return (left is null) ? true : false;\r\n    }\r\n\r\n    return right.Equals(left);\r\n}\r\n```\r\n\r\nremains simple or gets more complex and if requires the ` [MethodImpl(MethodImplOptions.AggressiveInlining)] ` attribute and how adding it will affect performance.\r\n\r\n_Originally posted by @ahsonkhan in https://github.com/dotnet/corefx/pull/40107#discussion_r312291954","Url":"https://github.com/dotnet/corefx/issues/40186","RelatedDescription":"Open issue \"Add aggressive method inlining attribute to equals on JsonNumber, JsonString and JsonBoolean \" (#40186)"},{"Id":"479001469","IsPullRequest":true,"CreatedAt":"2019-08-09T13:58:13","Actor":"adamsitnik","Number":"40184","RawContent":null,"Title":"Improve CryptoConfig.CreateFromName performance (from 10% to x20)","State":"open","Body":"I was working on making it easier for CoreFX team members to use ASP.NET Perf Lab to run performance tests under high load.\r\n\r\nThen I saw #39600 which was a perfect candidate for sample for the docs: we had some nasty locks that were making the perf bad. So I created sample docs based on this example: https://github.com/aspnet/Benchmarks/pull/1284 \r\n\r\nAfter taking a brief look at the existing code, I could not resist rewriting it and make it even faster than @VladimirKhvostov did in #39600 \r\n\r\n\r\nASP.NET Perf lab test result (described in https://github.com/aspnet/Benchmarks/pull/1284):\r\n\r\nBefore:\r\n\r\n```log\r\nRequestsPerSecond:           43,330\r\nMax CPU (%):                 95\r\nWorkingSet (MB):             166\r\nAvg. Latency (ms):           5.91\r\n```\r\n\r\n<img width=\"960\" alt=\"flamegraph_filtered\" src=\"https://user-images.githubusercontent.com/6011991/62784141-16c3e400-babe-11e9-8a91-6ee02a6ef550.png\">\r\n\r\nAfter:\r\n\r\n```log\r\nRequestsPerSecond:           120,801\r\nMax CPU (%):                 90\r\nWorkingSet (MB):             166\r\nAvg. Latency (ms):           2.27\r\n```\r\n\r\n<img width=\"963\" alt=\"flamegraph_filtered_after\" src=\"https://user-images.githubusercontent.com/6011991/62784153-1a576b00-babe-11e9-82f7-13a55e9d70aa.png\">\r\n\r\n\r\nSome [microbenchmark](https://github.com/dotnet/performance/blob/master/src/benchmarks/micro/corefx/System.Security.Cryptography/Perf.CryptoConfig.cs) results:\r\n\r\n|         Method |     Toolchain |      name |       Mean | Ratio | Allocated Memory/Op |\r\n|--------------- |-------------- |---------- |-----------:|------:|--------------------:|\r\n| CreateFromName |         net48 |       RSA |   765.4 ns |  1.00 |               802 B |\r\n| CreateFromName | netcoreapp3.0 |       RSA | 3,681.8 ns |  4.81 |               688 B |\r\n| CreateFromName |       this PR |       RSA |   278.1 ns |  0.36 |               192 B |\r\n|                |               |           |            |       |                     |\r\n| CreateFromName |         net48 |    SHA512 |   605.7 ns |  1.00 |              1316 B |\r\n| CreateFromName | netcoreapp3.0 |    SHA512 |   770.7 ns |  1.27 |               424 B |\r\n| CreateFromName |       this PR |    SHA512 |   545.3 ns |  0.90 |               128 B |\r\n|                |               |           |            |       |                     |\r\n| CreateFromName |         net48 | X509Chain | 4,188.9 ns |  1.00 |               682 B |\r\n| CreateFromName | netcoreapp3.0 | X509Chain | 3,269.7 ns |  0.78 |               464 B |\r\n| CreateFromName |       this PR | X509Chain |   228.1 ns |  0.05 |                88 B |\r\n\r\n@danmosemsft this was one of the cases where Full .NET Framework was faster than Core. I made sure that Core is faster now.\r\n\r\nThe key changes:\r\n\r\n* remove the locks, use ConcurrentDictionary instead\r\n* `Type.GetType(string name)` is very expensive. Every type is now loaded once and then saved to the dictionary. This was the biggest improvement\r\n* one dictionary for name to name mapping, one for name to type mapping (previously there was one for string to object)\r\n* Fast path for creating config without providing any extra arguments","Url":"https://github.com/dotnet/corefx/pull/40184","RelatedDescription":"Open PR \"Improve CryptoConfig.CreateFromName performance (from 10% to x20)\" (#40184)"},{"Id":"478949207","IsPullRequest":true,"CreatedAt":"2019-08-09T13:29:06","Actor":"Dotnet-GitSync-Bot","Number":"40178","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/40178","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#40178)"},{"Id":"478971146","IsPullRequest":false,"CreatedAt":"2019-08-09T12:51:25","Actor":"qmfrederik","Number":"40182","RawContent":null,"Title":"API Proposal: Update Encoder, EncoderParameterValueType to match GDI+","State":"open","Body":"GDI+ has new values for:\r\n\r\n- `Encoder`: `EncoderColorSpace`, `EncoderImageItems` and `EncoderSaveAsCMYK`\r\n- `EncoderParameterValueType`: `EncoderParameterValueTypePointer`\r\n\r\nThe proposal is to update the `Encoder` type and `EncoderParameterValueType` to expose these new values:\r\n\r\n```diff\r\nnamespace System.Drawing\r\n{\r\n    public sealed partial class Encoder\r\n    {\r\n        public static readonly System.Drawing.Imaging.Encoder ChrominanceTable;\r\n        public static readonly System.Drawing.Imaging.Encoder ColorDepth;\r\n        public static readonly System.Drawing.Imaging.Encoder Compression;\r\n        public static readonly System.Drawing.Imaging.Encoder LuminanceTable;\r\n        public static readonly System.Drawing.Imaging.Encoder Quality;\r\n        public static readonly System.Drawing.Imaging.Encoder RenderMethod;\r\n        public static readonly System.Drawing.Imaging.Encoder SaveFlag;\r\n        public static readonly System.Drawing.Imaging.Encoder ScanMethod;\r\n        public static readonly System.Drawing.Imaging.Encoder Transformation;\r\n        public static readonly System.Drawing.Imaging.Encoder Version;\r\n+       public static readonly System.Drawing.Imaging.Encoder ColorSpace;\r\n+       public static readonly System.Drawing.Imaging.Encoder ImageItems;\r\n+       public static readonly System.Drawing.Imaging.Encoder SaveAsCmyk;\r\n        public Encoder(System.Guid guid) { }\r\n        public System.Guid Guid { get { throw null; } }\r\n    }\r\n\r\n    public enum EncoderParameterValueType\r\n    {\r\n        ValueTypeByte = 1,\r\n        ValueTypeAscii = 2,\r\n        ValueTypeShort = 3,\r\n        ValueTypeLong = 4,\r\n        ValueTypeRational = 5,\r\n        ValueTypeLongRange = 6,\r\n        ValueTypeUndefined = 7,\r\n        ValueTypeRationalRange = 8,\r\n+       ValueTypePointer = 9,\r\n    }\r\n}\r\n```\r\n\r\nSee https://docs.microsoft.com/en-us/windows/win32/gdiplus/-gdiplus-constant-image-encoder-constants, https://docs.microsoft.com/en-us/windows/win32/api/gdiplusenums/ne-gdiplusenums-encoderparametervaluetype","Url":"https://github.com/dotnet/corefx/issues/40182","RelatedDescription":"Open issue \"API Proposal: Update Encoder, EncoderParameterValueType to match GDI+\" (#40182)"},{"Id":"478967301","IsPullRequest":true,"CreatedAt":"2019-08-09T12:42:24","Actor":"qmfrederik","Number":"40181","RawContent":null,"Title":"Consolidate the Image class, fix bugs","State":"open","Body":"This PR digs a bit deeper into the `System.Drawing.Image` class:\r\n\r\n1. Fixes a bug where `GetEncoderParameterList` was broken on .NET Core (worked on .NET Framework) because of a bug in `EncoderParameters.ConvertFromMemory`. Fixes dotnet/docs#5607, dotnet/corefx#33188\r\n2. **Pending API Review** - Fixes a bug where `GetEncoderParameterList` was broken for the JPEG encoder, which now returns (an empty list of) parameters of type `EncoderParameterValueTypePointer`. This was broken in .NET Framework, too (see [e.g. this StackOverflow report](https://stackoverflow.com/questions/3152506/unexpected-bitmap-region-is-already-locked-exception-with-getencoderparameterl))\r\n3. Shares code across Windows & Unix. The implementations for `IsAlphaPixelFormat` and `GetPixelFormatSize` were different; I kept the Windows implementation and added unit tests based on the Unix implementation.\r\n\r\nAs a result of 2, I also updated `Encoder` [doc](https://docs.microsoft.com/en-us/windows/win32/gdiplus/-gdiplus-constant-image-encoder-constants) and `EncoderParameterValueType` [doc](https://docs.microsoft.com/en-us/windows/win32/api/gdiplusenums/ne-gdiplusenums-encoderparametervaluetype) with values which have been added in newer versions of GDI+.","Url":"https://github.com/dotnet/corefx/pull/40181","RelatedDescription":"Open PR \"Consolidate the Image class, fix bugs\" (#40181)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"479217145","IsPullRequest":true,"CreatedAt":"2019-08-10T02:09:02","Actor":"dibarbet","Number":"37895","RawContent":null,"Title":"Update package heuristic to include other invalid directories.","State":"open","Body":"For https://github.com/dotnet/roslyn/issues/37246\r\nNow looks like\r\n<img width=\"868\" alt=\"install_package\" src=\"https://user-images.githubusercontent.com/5749229/62816126-8b574c80-bad7-11e9-9961-735ddef8cbef.PNG\">\r\n\r\nCouldn't find any tests for this feature, let me know if there are some I'm missing.","Url":"https://github.com/dotnet/roslyn/pull/37895","RelatedDescription":"Open PR \"Update package heuristic to include other invalid directories.\" (#37895)"},{"Id":"479204983","IsPullRequest":true,"CreatedAt":"2019-08-10T01:30:17","Actor":"dotnet-bot","Number":"37887","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview2","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview2.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview2\ngit reset --hard upstream/release/dev16.3-preview2\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37887","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview2\" (#37887)"},{"Id":"479213419","IsPullRequest":true,"CreatedAt":"2019-08-10T01:25:21","Actor":"ivanbasov","Number":"37893","RawContent":null,"Title":"Comparable helper to compare by components","State":"closed","Body":"A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on.","Url":"https://github.com/dotnet/roslyn/pull/37893","RelatedDescription":"Closed or merged PR \"Comparable helper to compare by components\" (#37893)"},{"Id":"479213986","IsPullRequest":true,"CreatedAt":"2019-08-10T01:25:04","Actor":"ivanbasov","Number":"37894","RawContent":null,"Title":"Comparable helper to compare by components","State":"open","Body":"A helper to compare objects by a series of components. If the first component are different, return the comparison. Otherwise, proceed with the second component and so on.","Url":"https://github.com/dotnet/roslyn/pull/37894","RelatedDescription":"Open PR \"Comparable helper to compare by components\" (#37894)"},{"Id":"479213351","IsPullRequest":true,"CreatedAt":"2019-08-10T01:16:51","Actor":"jasonmalinowski","Number":"37892","RawContent":null,"Title":"Fix use explicit type and nullable-annotated array syntax generation","State":"open","Body":"Fixes #37877.","Url":"https://github.com/dotnet/roslyn/pull/37892","RelatedDescription":"Open PR \"Fix use explicit type and nullable-annotated array syntax generation\" (#37892)"},{"Id":"479210516","IsPullRequest":false,"CreatedAt":"2019-08-10T00:46:42","Actor":"genlu","Number":"37891","RawContent":null,"Title":"ChangeNamespaceService doesn't fix references in the form of member access","State":"open","Body":"For example, when using refactoring to change namespace `NS1` to `NS2` in the code sample below, the reference `NS1.MyEnum.A` will not be changed to `NS2.MyEnum.A`\r\n\r\n```cs\r\nnamespace NS\r\n{\r\n    public MyEnum\r\n    {\r\n        A,\r\n        B,\r\n        C,\r\n    }\r\n}\r\n\r\n...\r\n\r\nvar x = NS.MyEnum.A;\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37891","RelatedDescription":"Open issue \"ChangeNamespaceService doesn't fix references in the form of member access\" (#37891)"},{"Id":"479210002","IsPullRequest":false,"CreatedAt":"2019-08-10T00:41:57","Actor":"gremlm","Number":"37890","RawContent":null,"Title":"Code metrics calculation from command line can't resolve msbuild location correctly!","State":"open","Body":"For calculating code metrics I have included Microsoft.CodeAnalysis.Metrics 2.9.4 nuget package to my csproj project.\r\nBefore executing msbuild from the command line, I have called  \"nuget.exe restore\", and it correctly found MSBuild and restore package:\r\n\"MSBuild auto-detection: using msbuild version '16.200.19.32702' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\bin'.\r\nRestoring NuGet package Microsoft.CodeAnalysis.Metrics.2.9.4. ...\"\r\n\r\nThen, from command line I am calling msbuild with /t:Metrics option:\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\bin\\MSBuild.exe\" /p:Configuration=Debug /t:Metrics My.sln \"\r\n\r\nwhich ended with following error:\r\n\"Unhandled Exception: System.ArgumentException: Directory \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\TestAgent\\MSBuild\\Current\\Bin\" does not exist\r\n  Parameter name: msbuildPath\r\n     at Microsoft.Build.Locator.MSBuildLocator.RegisterMSBuildPath(String msbuildPath)\r\n     at Microsoft.Build.Locator.MSBuildLocator.RegisterDefaults()\r\n     at Metrics.Program.<RunAsync>d__1.MoveNext()\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\"\r\n\r\nIt looks like  Metrics.exe looking for msbuild in wrong location, but nugget.exe in correct one?\r\n","Url":"https://github.com/dotnet/roslyn/issues/37890","RelatedDescription":"Open issue \"Code metrics calculation from command line can't resolve msbuild location correctly!\" (#37890)"},{"Id":"479205112","IsPullRequest":true,"CreatedAt":"2019-08-10T00:01:32","Actor":"dotnet-bot","Number":"37889","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to release/dev16.3-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into release/dev16.3-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-release/dev16.3-preview2-vs-deps\ngit reset --hard upstream/release/dev16.3-preview2-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-release/dev16.3-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37889","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1-vs-deps to release/dev16.3-preview2-vs-deps\" (#37889)"},{"Id":"479205094","IsPullRequest":true,"CreatedAt":"2019-08-10T00:01:24","Actor":"dotnet-bot","Number":"37888","RawContent":null,"Title":"Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37888","RelatedDescription":"Open PR \"Merge release/dev16.2-vs-deps to release/dev16.3-preview1-vs-deps\" (#37888)"},{"Id":"479204958","IsPullRequest":true,"CreatedAt":"2019-08-10T00:00:31","Actor":"dotnet-bot","Number":"37886","RawContent":null,"Title":"Merge release/dev16.2 to release/dev16.3-preview1","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-to-release/dev16.3-preview1\ngit reset --hard upstream/release/dev16.3-preview1\ngit merge upstream/release/dev16.2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-to-release/dev16.3-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37886","RelatedDescription":"Open PR \"Merge release/dev16.2 to release/dev16.3-preview1\" (#37886)"},{"Id":"479200899","IsPullRequest":true,"CreatedAt":"2019-08-09T23:32:31","Actor":"jasonmalinowski","Number":"37885","RawContent":null,"Title":"Fix and unskip nullable-reference-type related project upgrade test","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/30027","Url":"https://github.com/dotnet/roslyn/pull/37885","RelatedDescription":"Open PR \"Fix and unskip nullable-reference-type related project upgrade test\" (#37885)"},{"Id":"479200808","IsPullRequest":true,"CreatedAt":"2019-08-09T23:31:59","Actor":"petrroll","Number":"37884","RawContent":null,"Title":"Move some ComputeRefactoringsAsync to common helpers 6/n","State":"open","Body":"Work for #35525","Url":"https://github.com/dotnet/roslyn/pull/37884","RelatedDescription":"Open PR \"Move some ComputeRefactoringsAsync to common helpers 6/n\" (#37884)"},{"Id":"479191452","IsPullRequest":true,"CreatedAt":"2019-08-09T22:41:46","Actor":"jasonmalinowski","Number":"37883","RawContent":null,"Title":"Unskip test that was skipped during nullable prototype work","State":"open","Body":"It passes now; I'm guessing something was doing bad analysis at one point and saying something was nullable when it wasn't.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/30035","Url":"https://github.com/dotnet/roslyn/pull/37883","RelatedDescription":"Open PR \"Unskip test that was skipped during nullable prototype work\" (#37883)"},{"Id":"479183096","IsPullRequest":false,"CreatedAt":"2019-08-09T22:04:10","Actor":"jaredpar","Number":"37882","RawContent":null,"Title":"Replace NugetPackageRoot with explicit package paths","State":"open","Body":"Our infrastructure uses the following pattern to locate the paths of NuPkg files that we use:\r\n\r\n``` xml\r\n<Content Include=\"$(NuGetPackageRoot)\\microsoft.diasymreader.native\\$(MicrosoftDiaSymReaderNativeVersion)\\runtimes\\win\\native\\Microsoft.DiaSymReader.Native.x86.dll\">\r\n```\r\n\r\nThe issue here is that `$(NugetPackageRoot)` is not an official solution. It's a convention that we've built up in our repository. The convention does follow established patterns for finding the packages but it's not inherently supported by the NuGet or MSBuild team. \r\n\r\nThere is now a supported way to get the path for a given package. The nuget.g.props file now generates a variable that contains the path of the NuPkg file for a given `PackageReference`:\r\n\r\n``` xml\r\n<Content Include=\"$(PkgMicrosoft_DiaSymReader_Native)\\runtimes\\win\\native\\Microsoft.DiaSymReader.Native.x86.dll\">\r\n``` \r\n\r\nRelated Items:\r\n- https://github.com/NuGet/docs.microsoft.com-nuget/issues/1355\r\n- https://github.com/NuGet/NuGet.Client/pull/2271\r\n","Url":"https://github.com/dotnet/roslyn/issues/37882","RelatedDescription":"Open issue \"Replace NugetPackageRoot with explicit package paths\" (#37882)"},{"Id":"479178094","IsPullRequest":true,"CreatedAt":"2019-08-09T21:44:16","Actor":"jasonmalinowski","Number":"37881","RawContent":null,"Title":"Add nullable API annotations to Project/ProjectInfo and friends","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/37881","RelatedDescription":"Open PR \"Add nullable API annotations to Project/ProjectInfo and friends\" (#37881)"},{"Id":"479154201","IsPullRequest":false,"CreatedAt":"2019-08-09T20:28:08","Actor":"jasonmalinowski","Number":"37880","RawContent":null,"Title":"ProjectInfo.WithCompilationOptions and WithParseOptions doesn't correctly handle null values","State":"open","Body":"If you pass in null, the value will be ignored; the internal With method needs to be switched to using an `Optional<T>`.","Url":"https://github.com/dotnet/roslyn/issues/37880","RelatedDescription":"Open issue \"ProjectInfo.WithCompilationOptions and WithParseOptions doesn't correctly handle null values\" (#37880)"},{"Id":"479115939","IsPullRequest":false,"CreatedAt":"2019-08-09T18:36:13","Actor":"jasonmalinowski","Number":"37879","RawContent":null,"Title":"#nullable enable produces IMethodSymbols with no containing type, crashes IDE","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new console application.\r\n2. Add this code inside of Program. (I have tried to reduce this to a smaller repro but have been unsuccessful):\r\n```\r\npublic void A<T>(T t) where T:class\r\n{\r\n    var c = new F<T>[] { }.Select(v => new { Value = v.Item }).ToArray();\r\n}\r\n\r\nprivate class F<T>\r\n{\r\n    public F(T oldItem) => Item = oldItem;\r\n    public T Item { get; }\r\n}\r\n```\r\n3. Remove the `using System.Linq` at the top of the file. The \"Select\" should get a red squiggle.\r\n4. Mouse over the Select method, observe no quick info.\r\n5. Add a `#nullable enable` to the top of the file. Observe the Select now turns brown because it's binding to a method. (Which method? Who knows!)\r\n6. Mouse over the Select again.\r\n\r\n**Expected Behavior**: we don't get quick info\r\n**Actual Behavior**: it crashes, because this bound to a method symbol that has no ContainingType which our code doesn't expect.\r\n","Url":"https://github.com/dotnet/roslyn/issues/37879","RelatedDescription":"Open issue \"#nullable enable produces IMethodSymbols with no containing type, crashes IDE\" (#37879)"},{"Id":"479110672","IsPullRequest":true,"CreatedAt":"2019-08-09T18:21:39","Actor":"jaredpar","Number":"37878","RawContent":null,"Title":"Move to new ilasm version","State":"open","Body":"The latest version of ilasm produced by coreclr is now a fully\r\nindependent executable; it no longer depends on having a full runtime\r\nlaid down next to it.\r\n\r\nThis means we can vastly simplify how it is deployde in our\r\ninfrastructure. The package can now be included and have ilasm manually\r\ncopied out. This is similar to the approach that we take for our\r\ndiasymreader native dependencies.\r\n\r\ncloses #37582\r\nrelated #25930, #25144","Url":"https://github.com/dotnet/roslyn/pull/37878","RelatedDescription":"Open PR \"Move to new ilasm version\" (#37878)"},{"Id":"479102664","IsPullRequest":false,"CreatedAt":"2019-08-09T17:59:05","Actor":"stephentoub","Number":"37877","RawContent":null,"Title":"IDE0008 doesn't account for nullable","State":"open","Body":"**Version Used**: \r\n3.3.0-beta2-19401-05+8ed56b826700926009731ca4d3de0a4e4e652969\r\n\r\n**Steps to Reproduce**:\r\nCopy/paste this into new console app:\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    private static int[]? s_data;\r\n\r\n    static void Main()\r\n    {\r\n        var data = s_data;\r\n    }\r\n}\r\n```\r\nthen run the IDE0008 refactoring on the `var`.\r\n\r\n**Expected Behavior**:\r\nProduces:\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    private static int[]? s_data;\r\n\r\n    static void Main()\r\n    {\r\n        int[]? data = s_data;\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\nProduces:\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    private static int[]? s_data;\r\n\r\n    static void Main()\r\n    {\r\n        int[] data = s_data;\r\n    }\r\n}\r\n```\r\nresulting in the warning:\r\n```\r\nwarning CS8600: Converting null literal or possible null value to non-nullable type.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37877","RelatedDescription":"Open issue \"IDE0008 doesn't account for nullable\" (#37877)"},{"Id":"479098820","IsPullRequest":false,"CreatedAt":"2019-08-09T17:48:18","Actor":"mavasani","Number":"37876","RawContent":null,"Title":"Cannot configure severity with editorconfig for analyzer diagnostics with Location.None","State":"open","Body":"**Version Used**: Latest 16.3 dogfood preview build\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open attached [ClassLibrary28.zip](https://github.com/dotnet/roslyn/files/3487424/ClassLibrary28.zip), which is a simple C# netstandard class library project with a ruleset with following contents to configure couple of CA diagnostics to errors:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RuleSet Name=\"MyRules\" Description=\"MyRules\" ToolsVersion=\"10.0\">\r\n  <Rules AnalyzerId=\"Microsoft.CodeQuality.Analyzers\" RuleNamespace=\"Microsoft.CodeQuality.Analyzers\">\r\n    <Rule Id=\"CA1014\" Action=\"Error\" /> <!-- Mark assemblies with CLSCompliant -->\r\n    <Rule Id=\"CA1040\" Action=\"Error\" /> <!-- Avoid empty interfaces -->\r\n  </Rules>\r\n</RuleSet>\r\n```\r\n2. Build project and verify 2 errors as expected:\r\n![image](https://user-images.githubusercontent.com/10605811/62797810-7657ca80-ba91-11e9-9d61-9f0b56b594b8.png)\r\n3. Now delete the ruleset from the project and replace it with the below equivalent editorconfig file (note can also use `[*.cs]` for the section header):\r\n```\r\n[*.*]\r\n\r\n# CA1014: Mark assemblies with CLSCompliant\r\ndotnet_diagnostic.CA1014.severity = error\r\n\r\n# CA1040: Avoid empty interfaces \r\ndotnet_diagnostic.CA1040.severity = error\r\n```\r\n4. Rebuild project\r\n\r\n**Expected Behavior**:\r\n2 errors similar to behavior when ruleset was used\r\n\r\n**Actual Behavior**:\r\nOnly one error for CA1040\r\n![image](https://user-images.githubusercontent.com/10605811/62798128-5e347b00-ba92-11e9-8c05-07139c534d5e.png)\r\n\r\nCA1014 being a project level diagnostic with `Location.None` doesn't seem to be configurable from editorconfig file. This issue applies to all project level analyzer diagnostics, CA1014 is not special.","Url":"https://github.com/dotnet/roslyn/issues/37876","RelatedDescription":"Open issue \"Cannot configure severity with editorconfig for analyzer diagnostics with Location.None\" (#37876)"},{"Id":"479074843","IsPullRequest":false,"CreatedAt":"2019-08-09T16:42:07","Actor":"stephentoub","Number":"37875","RawContent":null,"Title":"IDE0019 \"use pattern matching\" introduces nullable warnings","State":"open","Body":"**Version Used**: \r\n3.3.0-beta2-19401-05+8ed56b826700926009731ca4d3de0a4e4e652969\r\n\r\n**Steps to Reproduce**:\r\nCopy/paste into a new project:\r\n```C#\r\n#nullable enable\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static void Foo(object o1, object o2)\r\n    {\r\n        string? s = o1 as string;\r\n        if (s == null)\r\n        {\r\n            s = o2 as string;\r\n        }\r\n        Console.WriteLine(s);\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings introduced, or no refactoring offered.\r\n\r\n**Actual Behavior**:\r\nOffers IDE0019, which refactors this into:\r\n```C#\r\n#nullable enable\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static void Foo(object o1, object o2)\r\n    {\r\n        if (!(o1 is string s))\r\n        {\r\n            s = o2 as string;\r\n        }\r\n        Console.WriteLine(s);\r\n    }\r\n}\r\n```\r\nwhich issues a warning:\r\n```\r\nwarning CS8600: Converting null literal or possible null value to non-nullable type.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37875","RelatedDescription":"Open issue \"IDE0019 \"use pattern matching\" introduces nullable warnings\" (#37875)"},{"Id":"479071141","IsPullRequest":false,"CreatedAt":"2019-08-09T16:31:54","Actor":"KirillOsenkov","Number":"37874","RawContent":null,"Title":"Need to be able to disable smart semicolon positioning","State":"open","Body":"**Version Used**: \r\n16.1.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new C# console app\r\n2. Inside a method body, type `Console.WriteLine()` (without a semicolon)\r\n3. Place the caret inside `()` and type `;`\r\n\r\n**Expected Behavior**:\r\nShould insert the caret where typed\r\n\r\n**Actual Behavior**:\r\nInserts the caret after `()`\r\n\r\nReported by @jfrijters\r\n\r\nAs far as I can tell this must be a relatively new feature - one needs to be able to turn it off","Url":"https://github.com/dotnet/roslyn/issues/37874","RelatedDescription":"Open issue \"Need to be able to disable smart semicolon positioning\" (#37874)"},{"Id":"479069817","IsPullRequest":false,"CreatedAt":"2019-08-09T16:28:23","Actor":"stephentoub","Number":"37873","RawContent":null,"Title":"IDE0066 removes comments","State":"open","Body":"**Version Used**: \r\n3.3.0-beta2-19401-05+8ed56b826700926009731ca4d3de0a4e4e652969\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        switch (input)\r\n        {\r\n            case 1:\r\n                // this little piggy went to market\r\n                return 42;\r\n            case 2:\r\n                // this little piggy stayed home\r\n                return 50;\r\n            case 3:\r\n                // this little piggy had roast beef\r\n                return 79;\r\n            default:\r\n                // this little piggy had none\r\n                return 80;\r\n        }\r\n    }\r\n}\r\n```\r\nRun the IDE0066 refactor on the switch.\r\n\r\n**Expected Behavior**:\r\nGenerates something like:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        return input switch\r\n        {\r\n            1 => 42, // this little piggy went to market\r\n            2 => 50, // this little piggy stayed home\r\n            3 => 79, // this little piggy had roast beef\r\n            _ => 80, // this little piggy had none\r\n        };\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\nGenerates:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        return input switch\r\n        {\r\n            1 => 42,\r\n            2 => 50,\r\n            3 => 79,\r\n            _ => 80,\r\n        };\r\n    }\r\n}\r\n```\r\nor doesn't offer the refactoring.  As it now stands, I can't trust the refactoring as it's losing information.","Url":"https://github.com/dotnet/roslyn/issues/37873","RelatedDescription":"Open issue \"IDE0066 removes comments\" (#37873)"},{"Id":"479060826","IsPullRequest":false,"CreatedAt":"2019-08-09T16:05:32","Actor":"stephentoub","Number":"37872","RawContent":null,"Title":"IDE0066 fails in the face of ifdefs","State":"open","Body":"**Version Used**: \r\n3.3.0-beta2-19401-05+8ed56b826700926009731ca4d3de0a4e4e652969\r\n\r\n**Steps to Reproduce**:\r\nCopy/paste this into a new console project:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        switch (input)\r\n        {\r\n            case 1:\r\n                return 42;\r\n            case 2:\r\n#if PLATFORM_UNIX\r\n                return 50;\r\n#else\r\n                return 51;\r\n#endif\r\n            case 3:\r\n                return 79;\r\n            default:\r\n                return 80;\r\n        }\r\n    }\r\n}\r\n```\r\nThen execute the IDE0066 refactoring on the `switch`.\r\n\r\n**Expected Behavior**:\r\nIt generates code like:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        return input switch\r\n        {\r\n            1 => 42,\r\n#if PLATFORM_UNIX\r\n            2 => 50,\r\n#else\r\n            2 => 51,\r\n#endif\r\n            3 => 79,\r\n            _ => 80,\r\n        };\r\n    }\r\n}\r\n```\r\nor at the very least code that compiles:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        return input switch\r\n        {\r\n            1 => 42,\r\n            2 => 51,\r\n            3 => 79,\r\n            _ => 80,\r\n        };\r\n    }\r\n}\r\n```\r\nor worst case simply doesn't offer the refactoring when there's any ambiguity due to ifdefs.\r\n\r\n**Actual Behavior**:\r\nIt generates code that doesn't compile:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main() { }\r\n\r\n    static int GetValue(int input)\r\n    {\r\n        return input switch\r\n        {\r\n            1 => 42,\r\n            2 => 51,\r\n#endif\r\n            3 => 79,\r\n            _ => 80,\r\n        };\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37872","RelatedDescription":"Open issue \"IDE0066 fails in the face of ifdefs\" (#37872)"},{"Id":"479024058","IsPullRequest":false,"CreatedAt":"2019-08-09T14:44:30","Actor":"NextTurn","Number":"37871","RawContent":null,"Title":"IDE0059 on ref parameter reassignment","State":"open","Body":"**Version Used**: Visual Studio 2019 version 16.3 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\nvoid Method(ref int param)\r\n{\r\n    {\r\n        param = ref Unsafe.Add(ref param, 1); // IDE0059\r\n        param = default;\r\n    }\r\n\r\n    {\r\n        param = ref Unsafe.Add(ref param, 1); // No warning\r\n        param = ref Unsafe.Add(ref param, 1); // IDE0059\r\n        param = default;\r\n    }\r\n\r\n    {\r\n        param = ref Unsafe.Add(ref param, 1); // No warning\r\n        param = ref Unsafe.Add(ref param, 1); // No warning\r\n    }\r\n\r\n    ref int local = ref param;\r\n\r\n    {\r\n        local = ref Unsafe.Add(ref param, 1); // No warning\r\n        local = default;\r\n    }\r\n\r\n    {\r\n        local = ref Unsafe.Add(ref param, 1); // No warning\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nIDE0059 is not reported for the reassignment.\r\n\r\n**Actual Behavior**:\r\n\r\nIDE0059 is reported for the reassignment.","Url":"https://github.com/dotnet/roslyn/issues/37871","RelatedDescription":"Open issue \"IDE0059 on ref parameter reassignment\" (#37871)"},{"Id":"479023046","IsPullRequest":false,"CreatedAt":"2019-08-09T14:42:21","Actor":"igor-tkachev","Number":"37870","RawContent":null,"Title":"Support NotNullIfNotNull on operator","State":"open","Body":"**16.2.1**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nclass Program\r\n{\r\n\tclass A { }\r\n\tclass B\r\n\t{\r\n\t\t[return: NotNullIfNotNull(\"b\")]\r\n\t\tpublic static implicit operator A?(B? b) => b == null ? null : new A();\r\n\t}\r\n\r\n\tstatic void Main(string[] args)\r\n\t{\r\n\t\tB b = new B();\r\n\t\tA a = b;\r\n\t}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThis code should not generate any warnings.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nwarning CS8600: Converting null literal or possible null value to non-nullable type.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37870","RelatedDescription":"Open issue \"Support NotNullIfNotNull on operator\" (#37870)"},{"Id":"479001679","IsPullRequest":false,"CreatedAt":"2019-08-09T13:58:36","Actor":"olmobrutall","Number":"37869","RawContent":null,"Title":"Nullability changes in C# 8 since VS 16.2 not working with 'dotnet build'?","State":"open","Body":"**Version Used**: \r\nVisual Studio 16.2.0/16.2.1 (same behaviour)\r\n```\r\nC:\\Users\\olmo.delcorralcano>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.401\r\n Commit:    729b316c13\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n**Steps to Reproduce**:\r\n1. Clone https://github.com/signumsoftware/southwind/commits/master\r\n2. Run\r\n `dotnet build Southwind.sln /p:Configuration=Release /p:Platform=x64 /p:VisualStudioVersion=15.0 /m` \r\nor\r\n`dotnet build Southwind.sln /p:Configuration=Release /p:Platform=x64 /p:VisualStudioVersion=16.2 /m` (same behaviour)\r\n\r\n**Expected Behavior**:\r\nCompiles without errors, like VS does\r\n\r\n**Actual Behavior**:\r\nMany errors like not understanding the new `notnull` constraint, indicating dotnet build / MSBuild is not aweare of the new version of the C# compiler. \r\n```\r\nConsoleSwitch.cs(9,19): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nConsoleSwitch.cs(296,45): error CS0315: The type 'int' cannot be used as type parameter 'K' in the generic type or method 'ConsoleSwitch<K, V>'. There is no boxing conversion from 'int' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nConsoleSwitch.cs(296,80): error CS0315: The type 'int' cannot be used as type parameter 'K' in the generic type or method 'ConsoleSwitch<K, V>'. There is no boxing conversion from 'int' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(10,18): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(49,23): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\RegexExtensions.cs(47,23): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\RegexExtensions.cs(48,23): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(144,76): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(144,111): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(284,41): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(298,41): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(303,56): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(309,41): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(314,48): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(319,48): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(326,48): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(331,48): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(467,41): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(531,41): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(290,101): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(296,116): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(302,131): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(308,146): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(314,161): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(322,102): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(328,117): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(334,132): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\ImmutableStack.cs(54,92): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(340,147): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\ImmutableStack.cs(59,119): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nPolymorphic.cs(346,162): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\EnumerableExtensions.cs(971,23): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(10,19): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\DictionaryExtensions.cs(58,23): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\DictionaryExtensions.cs(101,120): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\DictionaryExtensions.cs(108,94): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\DictionaryExtensions.cs(115,132): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(612,23): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedEdgedGraph.cs(611,73): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedEdgedGraph<T, E>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\DictionaryExtensions.cs(474,91): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nExtensions\\DictionaryExtensions.cs(481,117): error CS0246: The type or namespace name 'notnull' could not be found (are you missing a using directive or an assembly reference?) [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(137,68): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(137,95): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(249,33): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(263,33): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(268,33): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(268,65): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(280,48): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(286,33): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(291,40): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(296,40): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(303,40): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(308,40): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(435,33): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\nDataStructures\\DirectedGraph.cs(498,33): error CS0314: The type 'T' cannot be used as type parameter 'T' in the generic type or method 'DirectedGraph<T>'. There is no boxing conversion or type parameter conversion from 'T' to 'notnull'. [C:\\Code\\Southwind\\Framework\\Signum.Utilities\\Signum.Utilities.csproj]\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37869","RelatedDescription":"Open issue \"Nullability changes in C# 8 since VS 16.2 not working with 'dotnet build'?\" (#37869)"},{"Id":"478985139","IsPullRequest":false,"CreatedAt":"2019-08-09T13:23:45","Actor":"yyjdelete","Number":"37868","RawContent":null,"Title":"NullReferenceException in NullableWalker.TakeIncrementalSnapshot when input some invalid code","State":"open","Body":"**Version Used**: \r\na2ee43795f9e87be1206f816db663e22b2d35993(release/dev16.3-preview2-vs-deps)\r\nalso for bf0d756fbb8d9e1dc8ace822fdfdb47a1fb0e45a(master-vs-deps).\r\n\r\nTested with VS2019(16.3p1), downgrade SystemThreadingTasksExtensions to 4.5.2 to run.\r\nAnd that doesn't happen in the bundle version of 16.3p1.\r\nMaybe related to #35850\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Type the below code(has 2 similar version, both is invalid, just used for test)\r\n```cs\r\npublic void Test1()\r\n{\r\n    if (unknown is string b = )\r\n    {\r\n        Console.WriteLine(b);\r\n    }\r\n}\r\n\r\npublic void Test2(bool a)\r\n{\r\n    if (a is bool (b = a))\r\n    {\r\n        Console.WriteLine(b);\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n<details>\r\n<summary>StackTrace</summary>\r\n\r\n```csharp\r\n\r\nNullReferenceException\r\n//throw(currentState is null)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder.TakeIncrementalSnapshot(BoundNode node, LocalState currentState)\r\n//hit assert here(IsConditionalState is true)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.TakeIncrementalSnapshot(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalue(BoundExpression node, Boolean isKnownToBeAnLvalue)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalueWithState(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitOptionalImplicitConversion(BoundExpression expr, TypeWithAnnotations targetTypeOpt, Boolean useLegacyWarnings, Boolean trackMembers, AssignmentKind assignmentKind)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitAssignmentOperator(BoundAssignmentOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitWithStackGuard(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalue(BoundExpression node, Boolean isKnownToBeAnLvalue)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalueWithState(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitConversion(BoundConversion node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundConversion.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitWithStackGuard(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitCondition(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitIfStatement(BoundIfStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundIfStatement.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitWithStackGuard(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitStatement(BoundStatement statement)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitStatement(BoundStatement statement)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitStatements(ImmutableArray`1 statements)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitWithStackGuard(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitStatement(BoundStatement statement)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitStatement(BoundStatement statement)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitStatements(ImmutableArray`1 statements)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitWithStackGuard(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Scan(Boolean& badRegion)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Scan(Boolean& badRegion)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1.Analyze(Boolean& badRegion, Optional`1 initialState)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(NullableWalker walker, Symbol symbol, DiagnosticBag diagnostics, VariableState initialState, Builder snapshotBuilderOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(CSharpCompilation compilation, Symbol symbol, BoundNode node, Binder binder, Conversions conversions, DiagnosticBag diagnostics, Boolean useMethodSignatureParameterTypes, MethodSymbol methodSignatureOpt, VariableState initialState, Builder analyzedNullabilityMapOpt, Builder updatedMethodSymbolMapOpt, Builder snapshotBuilderOpt, ArrayBuilder`1 returnTypesOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.AnalyzeAndRewrite(CSharpCompilation compilation, Symbol symbol, BoundNode node, Binder binder, DiagnosticBag diagnostics, Boolean createSnapshots, SnapshotManager& snapshotManager)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodBodySemanticModel.RewriteNullableBoundNodesWithSnapshots(BoundNode boundRoot, Binder binder, DiagnosticBag diagnostics, Boolean createSnapshots, SnapshotManager& snapshotManager)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.<EnsureNullabilityAnalysisPerformedIfNecessary>g__bindAndRewrite|127_1(<>c__DisplayClass127_0& )\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.<EnsureNullabilityAnalysisPerformedIfNecessary>g__ensureSpeculativeNodeBound|127_0(<>c__DisplayClass127_0& )\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.EnsureNullabilityAnalysisPerformedIfNecessary()\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetBoundNodes(CSharpSyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetLowerBoundNode(CSharpSyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetBoundNodes(CSharpSyntaxNode node, CSharpSyntaxNode& bindableNode, BoundNode& lowestBoundNode, BoundNode& highestBoundNode, BoundNode& boundParent)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetSymbolInfoWorker(CSharpSyntaxNode node, SymbolInfoOptions options, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfo(ExpressionSyntax expression, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(SemanticModel semanticModel, ExpressionSyntax expression, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Classification.Classifiers.NameSyntaxClassifier.ClassifyTypeSyntax(NameSyntax name, SemanticModel semanticModel, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Classification.Classifiers.NameSyntaxClassifier.AddClassifications(Workspace workspace, SyntaxNode syntax, SemanticModel semanticModel, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ClassifyNode(SyntaxNode syntax)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ClassifyNodeOrToken(SyntaxNodeOrToken nodeOrToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ProcessNodes()\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.Classify(Workspace workspace, SemanticModel semanticModel, TextSpan textSpan, ArrayBuilder`1 list, Func`2 getNodeClassifiers, Func`2 getTokenClassifiers, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.AddSemanticClassifications(SemanticModel semanticModel, TextSpan textSpan, Workspace workspace, Func`2 getNodeClassifiers, Func`2 getTokenClassifiers, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.<AddSemanticClassificationsAsync>d__5.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.AddSemanticClassificationsAsync(Document document, TextSpan textSpan, Func`2 getNodeClassifiers, Func`2 getTokenClassifiers, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractClassificationService.<AddSemanticClassificationsAsync>d__2.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractClassificationService.AddSemanticClassificationsAsync(Document document, TextSpan textSpan, List`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationUtilities.<ClassifySpansAsync>d__2.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationUtilities.ClassifySpansAsync(TaggerContext`1 context, DocumentSnapshotSpan spanToTag, IClassificationService classificationService, ClassificationTypeMap typeMap)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationUtilities.<TryClassifyContainingMemberSpan>d__1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationUtilities.TryClassifyContainingMemberSpan(TaggerContext`1 context, DocumentSnapshotSpan spanToTag, IClassificationService classificationService, ClassificationTypeMap typeMap)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationUtilities.<ProduceTagsAsync>d__0.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationUtilities.ProduceTagsAsync(TaggerContext`1 context, DocumentSnapshotSpan spanToTag, IClassificationService classificationService, ClassificationTypeMap typeMap)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Classification.SemanticClassificationViewTaggerProvider.ProduceTagsAsync(TaggerContext`1 context)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1.TagSource.ProduceTagsAsync(TaggerContext`1 context)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1.TagSource.<RecomputeTagsAsync>d__70.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1.TagSource.RecomputeTagsAsync(Object oldState, Nullable`1 caretPosition, Nullable`1 textChangeRange, ImmutableArray`1 spansToTag, ImmutableDictionary`2 oldTagTrees, Boolean initialTags, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1.TagSource.<>c__DisplayClass63_1.<RecomputeTagsForeground>b__0(CancellationToken ct)\r\n   at Microsoft.CodeAnalysis.Editor.Shared.Threading.AsynchronousSerialWorkQueue.<>c__DisplayClass12_0.<EnqueueBackgroundTask>b__0(Task _)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromTask`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.Tasks.Task.ExecutionContextCallback(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)\r\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n```\r\n\r\n</details>\r\n\r\n**Expected Behavior**:\r\nThe ide should not crash. Any other thing should be ok since it's not an vaild code, nor some state during typing normal code.\r\n\r\n**Actual Behavior**:\r\nSee an assert, and then the whole ide crashes and exit.","Url":"https://github.com/dotnet/roslyn/issues/37868","RelatedDescription":"Open issue \"NullReferenceException in NullableWalker.TakeIncrementalSnapshot when input some invalid code\" (#37868)"},{"Id":"478951444","IsPullRequest":true,"CreatedAt":"2019-08-09T12:02:30","Actor":"dotnet-bot","Number":"37867","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37867","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#37867)"},{"Id":"478951380","IsPullRequest":true,"CreatedAt":"2019-08-09T12:02:22","Actor":"dotnet-bot","Number":"37866","RawContent":null,"Title":"Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps\ngit reset --hard upstream/release/dev16.3-preview2-vs-deps\ngit merge upstream/release/dev16.3-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37866","RelatedDescription":"Open PR \"Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps\" (#37866)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"479220411","IsPullRequest":false,"CreatedAt":"2019-08-10T02:54:09","Actor":"christianrondeau","Number":"7680","RawContent":null,"Title":"Support for dotnet core 3 preview 7 TaskAsyncEnumerableExtensions","State":"open","Body":"Compiling code that uses `TaskAsyncEnumerableExtensions` using dotnet 3.0.100-preview7-012821 compiles with this warning:\r\n\r\n```\r\nEXEC : warning : Method `[myproject]MyProject.MyAssembly.MyClass+<ExecuteAsync>d__2.MoveNext()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Threading.Tasks.TaskAsyncEnumerableExtensions, System.Threading.Tasks, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a [C:\\myproject\\MyProject.Assembly\\MyProject.Assembly.csproj]\r\n```\r\n\r\nHere is the relevant parts of my `.csproj`:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <AssemblyName>myproject</AssemblyName>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <!-- I tried with and without these -->\r\n    <IlcInvariantGlobalization>true</IlcInvariantGlobalization>\r\n    <RootAllApplicationAssemblies>false</RootAllApplicationAssemblies>\r\n    <IlcGenerateStackTraceData>false</IlcGenerateStackTraceData>\r\n    <IlcDisableReflection>true</IlcDisableReflection>\r\n    <IlcOptimizationPreference>Size</IlcOptimizationPreference>\r\n  </PropertyGroup>\r\n\r\n  <!-- ... project references and microsoft configuration extensions -->\r\n\r\n</Project>\r\n```\r\n\r\nI tried adding this, hoping that it would find the missing type (if I got the first error right):\r\n\r\n```\r\n  <ItemGroup>\r\n    <IlcReference Include=\"$(NuGetPackageFolders)\\microsoft.netcore.app\\2.2.0\\ref\\netcoreapp2.2\\netstandard.dll\" />\r\n    <IlcReference Include=\"$(NuGetPackageFolders)\\microsoft.netcore.app\\2.2.0\\ref\\netcoreapp2.2\\System.Threading.Tasks.Extensions.dll\" />\r\n  </ItemGroup>\r\n```\r\n\r\nBut I now receive this error, which I have to admit, I do not understand:\r\n\r\n```\r\nInternal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1, netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseFieldSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaField.InitializeFieldType()\r\n     at Internal.TypeSystem.MetadataFieldLayoutAlgorithm.ComputeInstanceLayout(DefType defType, InstanceLayoutKind layoutKind)\r\n     at Internal.TypeSystem.DefType.ComputeInstanceLayout(InstanceLayoutKind layoutKind)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.CheckCanGenerateEEType(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateNecessaryTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.DependencyAnalysis.GenericMethodsHashtableNode.GetGenericMethodsHashtableDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.MethodGenericDictionaryNode.ComputeNonRelocationBasedDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.ILScanner.ILCompiler.IILScanner.Scan()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nIf it helps I can create a repro project, just let me know!","Url":"https://github.com/dotnet/corert/issues/7680","RelatedDescription":"Open issue \"Support for dotnet core 3 preview 7 TaskAsyncEnumerableExtensions\" (#7680)"},{"Id":"479210729","IsPullRequest":false,"CreatedAt":"2019-08-10T00:48:40","Actor":"genifycom","Number":"7679","RawContent":null,"Title":"Does not work with System.Data.SqlClient","State":"open","Body":"A CoreRT built console app that uses System.Data.SqlClient does not make a connection to the database.\r\n\r\nIt reports Unable to load sni.dll","Url":"https://github.com/dotnet/corert/issues/7679","RelatedDescription":"Open issue \"Does not work with System.Data.SqlClient\" (#7679)"},{"Id":"478949334","IsPullRequest":true,"CreatedAt":"2019-08-09T14:05:52","Actor":"Dotnet-GitSync-Bot","Number":"7678","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7678","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7678)"},{"Id":"478726910","IsPullRequest":true,"CreatedAt":"2019-08-09T02:40:40","Actor":"Dotnet-GitSync-Bot","Number":"7677","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @JeffreyZhao","Url":"https://github.com/dotnet/corert/pull/7677","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7677)"},{"Id":"478556619","IsPullRequest":true,"CreatedAt":"2019-08-08T22:06:30","Actor":"Dotnet-GitSync-Bot","Number":"7676","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corert/pull/7676","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7676)"},{"Id":"478509567","IsPullRequest":true,"CreatedAt":"2019-08-08T15:46:55","Actor":"jkotas","Number":"7675","RawContent":null,"Title":"Cleanup ProjectN ifdefs","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7675","RelatedDescription":"Closed or merged PR \"Cleanup ProjectN ifdefs\" (#7675)"},{"Id":"478241731","IsPullRequest":true,"CreatedAt":"2019-08-08T09:14:51","Actor":"Dotnet-GitSync-Bot","Number":"7674","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang @stephentoub","Url":"https://github.com/dotnet/corert/pull/7674","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7674)"},{"Id":"477833566","IsPullRequest":true,"CreatedAt":"2019-08-07T12:07:25","Actor":"MichalStrehovsky","Number":"7673","RawContent":null,"Title":"Pass stack trace policy","State":"closed","Body":"Found this change among a bunch of untracked files when I was cleaning up some CPAOT instrumentation I was doing.\r\n\r\nThis was supposed to go in with #7665.","Url":"https://github.com/dotnet/corert/pull/7673","RelatedDescription":"Closed or merged PR \"Pass stack trace policy\" (#7673)"},{"Id":"477520366","IsPullRequest":true,"CreatedAt":"2019-08-07T07:33:48","Actor":"Dotnet-GitSync-Bot","Number":"7671","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @lambdageek","Url":"https://github.com/dotnet/corert/pull/7671","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7671)"},{"Id":"477666470","IsPullRequest":false,"CreatedAt":"2019-08-07T01:49:36","Actor":"mjsabby","Number":"7672","RawContent":null,"Title":"Add Span/ROSpan to Test.CoreLib","State":"open","Body":"I think add Span and ROS to Test.CoreLib makes it considerably more useful. I'm not sure what the threshold for Test.CoreLib is. Is it the absolute minimum? Or is it the absolute minimum + extremely extremely important stuff.\r\n\r\nFor example, I don't believe `object.ToString()` needs to be in Test.CoreLib but I can understand if this starts to get into a slippery slope.","Url":"https://github.com/dotnet/corert/issues/7672","RelatedDescription":"Open issue \"Add Span/ROSpan to Test.CoreLib\" (#7672)"},{"Id":"477280907","IsPullRequest":true,"CreatedAt":"2019-08-06T12:50:02","Actor":"MichalStrehovsky","Number":"7670","RawContent":null,"Title":"Fix a couple R2R issues I hit","State":"closed","Body":"* I don't know how, but I missed the PInvoke ReadyToRun helpers exist in CoreCLR\r\n* Add a couple more CORINFO_HELP helpers that don't have R2R mapping\r\n* Cannot get FieldInfo for a field with an indeterminate offset.","Url":"https://github.com/dotnet/corert/pull/7670","RelatedDescription":"Closed or merged PR \"Fix a couple R2R issues I hit\" (#7670)"},{"Id":"476914604","IsPullRequest":true,"CreatedAt":"2019-08-06T02:41:03","Actor":"Dotnet-GitSync-Bot","Number":"7669","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7669","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7669)"},{"Id":"476583874","IsPullRequest":true,"CreatedAt":"2019-08-05T08:11:44","Actor":"MichalStrehovsky","Number":"7665","RawContent":null,"Title":"Fix stack traces when reflection is disabled","State":"closed","Body":"This enables stack trace metadata when `IlcDisableReflection == true` and `IlcGenerateStackTraceData == true`. Enabling stack trace metadata had no effect before this change.\r\n\r\nThis also has a side effect of always generating the metadata blob. This is necessary because `ModuleList` tends to ignore modules that don't have the embedded metadata blob (https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/System.Private.TypeLoader/src/Internal/Runtime/TypeLoader/ModuleList.cs#L713-L720). Emitting an empty blob fixes the bug where delegate interop didn't work with reflection disabled.","Url":"https://github.com/dotnet/corert/pull/7665","RelatedDescription":"Closed or merged PR \"Fix stack traces when reflection is disabled\" (#7665)"},{"Id":"474043889","IsPullRequest":true,"CreatedAt":"2019-08-05T07:41:06","Actor":"MichalStrehovsky","Number":"7659","RawContent":null,"Title":"Prevent computing bad layout","State":"closed","Body":"Value type fields that contain GC pointers need to start at pointer boundaries.\r\n\r\nCoreCLR does this check a bit differently (it technically allows unaligned fields, provided the GC pointer inside the valuetype ends up being aligned with respect to the beginning of the type, but in reality, I don't think it's possible to end up in such situation - the layout of the field type itself would end up being invalid).\r\n\r\nFixes one of the CPAOT failures.","Url":"https://github.com/dotnet/corert/pull/7659","RelatedDescription":"Closed or merged PR \"Prevent computing bad layout\" (#7659)"},{"Id":"476665808","IsPullRequest":true,"CreatedAt":"2019-08-05T05:39:28","Actor":"jkotas","Number":"7668","RawContent":null,"Title":"Add link to CoreRT Future issue","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7668","RelatedDescription":"Closed or merged PR \"Add link to CoreRT Future issue\" (#7668)"},{"Id":"476583894","IsPullRequest":true,"CreatedAt":"2019-08-04T19:18:34","Actor":"MichalStrehovsky","Number":"7666","RawContent":null,"Title":"Add a note about `strip` program","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7666","RelatedDescription":"Closed or merged PR \"Add a note about `strip` program\" (#7666)"},{"Id":"476583904","IsPullRequest":true,"CreatedAt":"2019-08-04T19:07:53","Actor":"MichalStrehovsky","Number":"7667","RawContent":null,"Title":"Add a doc on debugging CoreRT programs","State":"open","Body":"A couple useful tips.","Url":"https://github.com/dotnet/corert/pull/7667","RelatedDescription":"Open PR \"Add a doc on debugging CoreRT programs\" (#7667)"},{"Id":"476442652","IsPullRequest":false,"CreatedAt":"2019-08-03T13:05:03","Actor":"shaggygi","Number":"7664","RawContent":null,"Title":"[Question] Clean up milestones","State":"closed","Body":"Not a biggie, but could older milestones be closed?  See [September](https://github.com/dotnet/corert/milestone/15) and [October](https://github.com/dotnet/corert/milestone/14).","Url":"https://github.com/dotnet/corert/issues/7664","RelatedDescription":"Closed issue \"[Question] Clean up milestones\" (#7664)"},{"Id":"476147096","IsPullRequest":true,"CreatedAt":"2019-08-02T13:36:07","Actor":"Dotnet-GitSync-Bot","Number":"7663","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7663","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7663)"},{"Id":"475993675","IsPullRequest":true,"CreatedAt":"2019-08-02T12:03:22","Actor":"Dotnet-GitSync-Bot","Number":"7662","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @josalem","Url":"https://github.com/dotnet/corert/pull/7662","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7662)"},{"Id":"475915591","IsPullRequest":true,"CreatedAt":"2019-08-02T04:42:37","Actor":"Dotnet-GitSync-Bot","Number":"7661","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @ts2do @sywhang","Url":"https://github.com/dotnet/corert/pull/7661","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7661)"},{"Id":"475661957","IsPullRequest":false,"CreatedAt":"2019-08-01T13:06:06","Actor":"kvittokonito","Number":"7660","RawContent":null,"Title":"Inconsistent usage of rd.xml on referenced projects","State":"closed","Body":"When AOT compiling projects with dependent referenced projects via CoreRT, the rd.xml of the referenced child dependent projects is read used but that feature seems to be inconsistent at best.\r\nSupported directives are properly parsed and used but unsupported directives that would error on the root project such as \"<Namespace />\" do not throw an error and instead are ignored without warning.\r\n\r\nFor example, the following directive will produce an unsupported error when it is included in the rd.xml of the root project:\r\n`<Namespace Name=\"System.Collections.Generic\" Dynamic=\"Required All\" />`\r\n\r\nHowever, this directive will simply be silently ignored if it is included in the rd.xml of a project referenced via \"<ProjectReference />\" on the csproj of the root project.","Url":"https://github.com/dotnet/corert/issues/7660","RelatedDescription":"Closed issue \"Inconsistent usage of rd.xml on referenced projects\" (#7660)"},{"Id":"473658285","IsPullRequest":true,"CreatedAt":"2019-07-29T06:41:45","Actor":"MichalStrehovsky","Number":"7657","RawContent":null,"Title":"Split interop manager to usage- and analysis-based","State":"closed","Body":"This puts interop manager on the same plan as metadata manager. The reason we need two managers is inlining: to determine what structs/delegates need marshaling data, we look at what methods got compiled. This works great as long as there's no inlining of these methods. If we inline a method used as such marker, we lose track of what needs interop data.\r\n\r\nWith this split, we can collect usage information during the IL scanning phase, and for codegen phase, we can reuse the information from the scanner.\r\n\r\nCommit 4c1058a removes a bunch of workarounds that we had in place because of this.\r\n\r\nThe commits mostly make sense (might help reviewing this big change), although I'm planning to squash them anyway. The `Don't make so much marshalling data` commit undoes something I did wrong in the `Track interop dependencies in the dependency graph` commit.\r\n\r\nFixes #6063.","Url":"https://github.com/dotnet/corert/pull/7657","RelatedDescription":"Closed or merged PR \"Split interop manager to usage- and analysis-based\" (#7657)"},{"Id":"473677246","IsPullRequest":true,"CreatedAt":"2019-07-27T21:00:42","Actor":"Suchiman","Number":"7658","RawContent":null,"Title":"Add support for embedding and processing embedded stacktrace line infos","State":"open","Body":"As discussed @MichalStrehovsky \r\n**TODO**:\r\n- configurability\r\n- compression\r\n- disabling reflection fallback\r\n\r\nUncompressed numbers for sizes:\r\nFor a debug Hello World application (which includes debug information for corelib).\r\n\r\n| Section | bytes | count |\r\n| --- | --- | --- |\r\n| rvaTokenMap | 127.788 | 10.648 |\r\n| sequencePoints | 1.012.608 | 111.737 |\r\n| stringHeap | 70.160 | 767 |","Url":"https://github.com/dotnet/corert/pull/7658","RelatedDescription":"Open PR \"Add support for embedding and processing embedded stacktrace line infos\" (#7658)"},{"Id":"473484940","IsPullRequest":true,"CreatedAt":"2019-07-27T09:46:44","Actor":"MichalStrehovsky","Number":"7656","RawContent":null,"Title":"Use a single ReadyToRunHelper enum","State":"closed","Body":"When I was troubleshooting the double/float helpers issue, it was really hairy because we have two copies or ReadyToRunHelper. We only need one.\r\n\r\nWhen Jan initially added the ILCompiler version in #129, it already came with `Keep in sync with https://github.com/dotnet/coreclr/blob/master/src/inc/readytorun.h`. We then added a couple helpers that don't exist in CoreCLR R2R because it was convenient, but we do want these numbers to match.\r\n\r\nI extracted the AOT specific ones to the end of the file, realizing that the ReadyToRun mode is trying to handle things it shouldn't. I deleted those.","Url":"https://github.com/dotnet/corert/pull/7656","RelatedDescription":"Closed or merged PR \"Use a single ReadyToRunHelper enum\" (#7656)"},{"Id":"473380499","IsPullRequest":true,"CreatedAt":"2019-07-26T19:08:27","Actor":"MichalStrehovsky","Number":"7653","RawContent":null,"Title":"Delete dead code in ILCompiler.ReadyToRun","State":"closed","Body":"Not sure how much of this is earmarked for the future (I left a couple that I found obvious), and how much is just leftovers from old designs that we should delete.","Url":"https://github.com/dotnet/corert/pull/7653","RelatedDescription":"Closed or merged PR \"Delete dead code in ILCompiler.ReadyToRun\" (#7653)"},{"Id":"473452930","IsPullRequest":true,"CreatedAt":"2019-07-26T19:07:42","Actor":"Dotnet-GitSync-Bot","Number":"7654","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7654","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7654)"},{"Id":"473357025","IsPullRequest":true,"CreatedAt":"2019-07-26T19:07:33","Actor":"MichalStrehovsky","Number":"7652","RawContent":null,"Title":"Add R2R implementation of getMethodSync","State":"closed","Body":"The R2R implementation is to just throw.\r\n\r\nThis doesn't throw in crossgen, but it takes an NGen-specific code path and _then_ throws when we deal with `CORINFO_HELP_MON_ENTER_STATIC`/`CORINFO_HELP_MON_EXIT_STATIC` (that the result of `getMethodSync` is the parameter for).","Url":"https://github.com/dotnet/corert/pull/7652","RelatedDescription":"Closed or merged PR \"Add R2R implementation of getMethodSync\" (#7652)"},{"Id":"473477763","IsPullRequest":true,"CreatedAt":"2019-07-26T18:15:15","Actor":"trylek","Number":"7655","RawContent":null,"Title":"One more fix for SuperILC OOM","State":"open","Body":"In my previous change I fixed OOM's caused by copying too long\r\nexecution log files but I forgot to apply the same fix to compilation\r\nlogs. This additional delta does just that.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7655","RelatedDescription":"Open PR \"One more fix for SuperILC OOM\" (#7655)"},{"Id":"473264674","IsPullRequest":true,"CreatedAt":"2019-07-26T11:03:46","Actor":"trylek","Number":"7651","RawContent":null,"Title":"Fork RyuJit and ReadyToRun version of getGSCookie","State":"closed","Body":"In CPAOT, we need a CoreCLR-compatible version of the GS cookie\r\nusing the appropriate R2R helper, not some hardcoded constant\r\npresumably used by the full AOT CoreRT runtime.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7651","RelatedDescription":"Closed or merged PR \"Fork RyuJit and ReadyToRun version of getGSCookie\" (#7651)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"476449692","IsPullRequest":true,"CreatedAt":"2019-08-10T03:07:04","Actor":"dotnet-maestro[bot]","Number":"3503","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 9:01 PM\r\n- **Commit**: 43aa62ee848ad9fbb118700fa17627eb5504e530\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19407.9\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3503","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3503)"},{"Id":"476445375","IsPullRequest":true,"CreatedAt":"2019-08-10T03:06:43","Actor":"dotnet-maestro[bot]","Number":"3502","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3502","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3502)"},{"Id":"479220939","IsPullRequest":true,"CreatedAt":"2019-08-10T03:01:59","Actor":"nguerrera","Number":"3520","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3520","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#3520)"},{"Id":"476972296","IsPullRequest":true,"CreatedAt":"2019-08-09T18:56:02","Actor":"jkoritzinsky","Number":"3506","RawContent":null,"Title":"Emit progid information into the CLSIDMap.","State":"closed","Body":"This is the SDK-side of the work for https://github.com/dotnet/core-setup/pull/7551. These PRs allow users to activate .NET classes via COM using ProgIDs instead of CLSIDs for languages or platforms that do not support using CLSIDs.\r\n\r\nAdditionally, fixes a bug that would cause loading nested classes via COM to fail to find the type.\r\n\r\nContributes to dotnet/coreclr#25966\r\n\r\nThis PR doesn't need to wait for dotnet/core-setup#7551 to go in since the changes are backward compatible with previous versions of the COM host that don't have ProgID support.\r\n\r\ncc: @nguerrera \r\n\r\n================================\r\n\r\n#### Description\r\nAdd support for generating .cslidmaps with ProgIDs for com registration. See dotnet/core-setup#7573 for the host work. This PR also fixes a bug that breaks loading nested types via COM.\r\n\r\n#### Customer Impact\r\nWithout this support consumption of COM classes in languages that don't have `GUID` support is impossible.\r\n\r\nAdditionally, without the fix for nested types, it is impossible to activate a nested type via COM on .NET Core.\r\n\r\nFixes: dotnet/coreclr#25966\r\nRelated: https://github.com/dotnet/coreclr/issues/25946\r\n\r\n#### Regression?\r\nCOM support is new in 3.0 so this is not a regression from a previous .NET Core release, but is a regression in COM support from .NET Framework using the `RegAsm` tool.\r\n\r\n#### Risk\r\nMinimal. Unused information in the clsidmap such as ProgId information is ignored in previous previews of .NET Core.","Url":"https://github.com/dotnet/sdk/pull/3506","RelatedDescription":"Closed or merged PR \"Emit progid information into the CLSIDMap.\" (#3506)"},{"Id":"476418956","IsPullRequest":true,"CreatedAt":"2019-08-09T16:10:29","Actor":"nguerrera","Number":"3501","RawContent":null,"Title":"Removed outdated, commented out code","State":"closed","Body":"Fixing small things that distracted me while doing https://github.com/dotnet/core-sdk/pull/3741\r\n\r\nSubmitting for P9 consideration as I'd prefer not to stay confused by this for the lifetime of 3.0","Url":"https://github.com/dotnet/sdk/pull/3501","RelatedDescription":"Closed or merged PR \"Removed outdated, commented out code\" (#3501)"},{"Id":"477679461","IsPullRequest":true,"CreatedAt":"2019-08-09T15:58:58","Actor":"nguerrera","Number":"3513","RawContent":null,"Title":"React to removal of types in Microsoft.VisualBasic.Core.dll","State":"closed","Body":"#### Description\r\nTypes are being removed from Microsoft.VisualBasic.Core.dll in https://github.com/dotnet/corefx/pull/39972 to allow them to be put in a higher layer in a future release.\r\n\r\nDisable generation of `My.*` code by default, as `My.*` cannot compile without those types.\r\n\r\n#### Customer Impact\r\nAll VB projects would fail to build without the corefx change, but not this change.  (There would be a workaround of disabling `My.* yourself, but we can't have File -> New Project -> VB fail.\r\n\r\n\r\n#### Regression?\r\nNo. This was expected fallout of removing those types.\r\n\r\n#### Risk\r\nMinimal. Tested all 11 VB .NET Core projects with this + a private drop of  https://github.com/dotnet/corefx/pull/39972 \r\n\r\n---\r\n\r\nDue to layering issues, several types that are necessary for VB My.* support are being removed from 3.0:\r\n\r\nhttps://github.com/dotnet/corefx/pull/39972\r\n\r\nFurthermore, this would cause all .NET Core 3.0 projects to fail to build without this change, which sets MyType=Empty by default to prevent the My.* code spit that would depend on these types from happening by default.\r\n\r\nNote that .NET Core 2.x is not impacted because it still uses VBRuntime=Embed, which also suppresses `My.*`. It also prevents other VB constructs from working that still work .NET Core 3.0 without these types. The test has been adapted to test some of those constructs for 3.0 instead of testing for `My.*` working.\r\n\r\nAlso fix related issue that could cause a bug or misconfigured project to result in the .NET Framework VB compiler trying to reference the .NET Framework Microsoft.VisualBasic.dll in the runtime directory instead of the resolved Microsoft.VisualBasic.dll.","Url":"https://github.com/dotnet/sdk/pull/3513","RelatedDescription":"Closed or merged PR \"React to removal of types in Microsoft.VisualBasic.Core.dll\" (#3513)"},{"Id":"478985601","IsPullRequest":true,"CreatedAt":"2019-08-09T13:24:47","Actor":"dotnet-maestro[bot]","Number":"3519","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190808.09\r\n- **Date Produced**: 8/8/2019 10:26 PM\r\n- **Commit**: f732e657e177174cdebcf81d9112b7f06e819685\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19408-09\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3519","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3519)"},{"Id":"478141934","IsPullRequest":true,"CreatedAt":"2019-08-09T00:33:03","Actor":"peterhuene","Number":"3516","RawContent":null,"Title":"Separate supported target framework into app/standard lists.","State":"closed","Body":"#### Description\r\n\r\nThis commit makes the `SupportedTargetFramework` items be composed of\r\n`NETCoreApp` and `NETStandard` versions so that other SDKs, such as\r\nWindowsDesktop, can selectively remove unsupported target frameworks from these\r\nlists.\r\n\r\nFixes #3438.\r\n\t\t\r\n#### Customer Impact\r\n\r\nWithout this change, the Windows Desktop SDK cannot easily filter out unsupported target frameworks.\r\n\t\t\r\n#### Regression?\r\n\r\nNo.\r\n\t\t\r\n#### Risk\r\n\r\nLow","Url":"https://github.com/dotnet/sdk/pull/3516","RelatedDescription":"Closed or merged PR \"Separate supported target framework into app/standard lists.\" (#3516)"},{"Id":"478473456","IsPullRequest":true,"CreatedAt":"2019-08-08T17:18:21","Actor":"dotnet-maestro[bot]","Number":"3518","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190807.10\r\n- **Date Produced**: 8/7/2019 9:45 PM\r\n- **Commit**: 88e391bb71d5659c28fdb23434752cab6878cc06\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19407-10\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3518","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3518)"},{"Id":"478472398","IsPullRequest":true,"CreatedAt":"2019-08-08T17:18:08","Actor":"dotnet-maestro[bot]","Number":"3517","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190807.10\r\n- **Date Produced**: 8/7/2019 9:45 PM\r\n- **Commit**: 88e391bb71d5659c28fdb23434752cab6878cc06\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview9-19407-10\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3517","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3517)"},{"Id":"477070233","IsPullRequest":false,"CreatedAt":"2019-08-07T22:33:41","Actor":"wli3","Number":"3508","RawContent":null,"Title":"Warning from RAR with hint path has extra new line","State":"closed","Body":"Given a hint path has extra new line. On full msbuild it will have warning:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2106,5): warning MSB3246: Resolved file has a bad image, no metada\r\nta, or is otherwise inaccessible. Illegal characters in path. [C:\\work\\temp\\notNETFrameworkLibrary2\\NETFrameworkLibrary.csproj]\r\n```\r\n\r\n- [x] Check if 16.2 has the same warning, the message might be different\r\n- [ ] core does not have that error, why?\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Library</OutputType>\r\n    <RestoreAdditionalProjectSources>$(RestoreAdditionalProjectSources);https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json</RestoreAdditionalProjectSources>\r\n    <TargetFramework>net472</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NETFramework.ReferenceAssemblies\" Version=\"1.0.0-preview.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System.Net.Http\">\r\n      <HintPath>\r\n      C:\\work\\sdk3\\artifacts\\tmp\\Debug\\SimpleNamesWi---6143883E\\NETFrameworkLibrary\\bin\\Debug\\net462\\NETFrameworkLibrary.dll\r\n      </HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n</Project>\r\n```","Url":"https://github.com/dotnet/sdk/issues/3508","RelatedDescription":"Closed issue \"Warning from RAR with hint path has extra new line\" (#3508)"},{"Id":"477919088","IsPullRequest":true,"CreatedAt":"2019-08-07T13:09:15","Actor":"dotnet-maestro[bot]","Number":"3515","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190808.17\r\n- **Date Produced**: 8/9/2019 8:05 AM\r\n- **Commit**: 04c667df9524e5546984e8ea62f89bf44f914808\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19408.17\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3515","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#3515)"},{"Id":"477887362","IsPullRequest":true,"CreatedAt":"2019-08-07T12:05:27","Actor":"dotnet-maestro[bot]","Number":"3514","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3514","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3514)"},{"Id":"477620210","IsPullRequest":false,"CreatedAt":"2019-08-06T22:22:05","Actor":"vatsan-madhavan","Number":"3512","RawContent":null,"Title":"Theme assemblies cannot be referenced from XAML in latest SDK","State":"open","Body":"@vatsan-madhavan commented on [Tue Aug 06 2019](https://github.com/dotnet/wpf/issues/1552)\r\n\r\nThis is related to #765, which primarily deals with the inability to reference theme assemblies for consumption in C#/VB etc. code. \r\n\r\nIn recent preview8 builds, XAML like this no longer builds because the WPF theme assembles are no longer referenced by default by `Microsoft.WindowsDesktop`.\r\n\r\n```XAML\r\n... xmlns:theme=\"clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero\"\r\n\r\n<theme:SystemDropShadowChrome>\r\n       <HeaderedContentControl Padding=\"10\" Foreground=\"#CCFFFFFF\">\r\n              <HeaderedContentControl.Header>\r\n\r\n```\r\n\r\nGiven there is no way to reference these directly at build-time,  the theme assemblies are not complete unusable. \r\n\r\nThis change was made by https://github.com/dotnet/core-setup/issues/7218, which was done in due to a miscommunication between the WPF and the SDK teams. We are working together to undo this change for .NET Core 3.0. \r\n\r\nAlso related: https://github.com/dotnet/sdk/issues/3265\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3512","RelatedDescription":"Open issue \"Theme assemblies cannot be referenced from XAML in latest SDK\" (#3512)"},{"Id":"476666506","IsPullRequest":true,"CreatedAt":"2019-08-06T20:08:09","Actor":"wli3","Number":"3505","RawContent":null,"Title":"Need apphost in build but do not pack it","State":"closed","Body":"fix https://github.com/dotnet/sdk/issues/3023\r\n\r\n### Description\r\n\r\nApphost generation is disabled for dotnet tools to prevent the apphost from being packaged in the package. When debugging a WPF or Winforms project that has PackAsTool set to true, there is no exe generated with appropriate Windows PE bits set, because we disabled it as described above. Instead of disabling apphost generation when PackAsTool=true, SDK should generate it during build, but prevent it from being packaged in the nupkg.\r\n\r\n### Customer Impact\r\n\r\nWhen debugging an WPF or Winforms dotnet tool project (PackAsTool=true) in VS, the user would see the command line instead of the GUI. The app's GUI is not rendered and you get only a blank command prompt.\r\n\r\n### Regression?\r\n\r\nYes. This regressed from .NET Core SDK 3.0.100-preview3 due to https://github.com/dotnet/sdk/commit/3487007c6bf8316ce3c871aadbe75498ab2da7c4\r\n\r\n### Risk\r\n\r\nLow risk.\r\n\r\n### Test changes in this PR\r\n\r\nAdded new unit test coverage to ensure `RunCommand`(which VS debug calls) uses the apphost exe instead of the dll.","Url":"https://github.com/dotnet/sdk/pull/3505","RelatedDescription":"Closed or merged PR \"Need apphost in build but do not pack it\" (#3505)"},{"Id":"477085186","IsPullRequest":true,"CreatedAt":"2019-08-06T18:23:39","Actor":"peterhuene","Number":"3511","RawContent":null,"Title":"Fix publishing of applications that specify a full path to the profile.","State":"closed","Body":"#### Description\r\n\r\nWhen an application is published in Visual Studio, the full path to the publish\r\nprofile is passed as the `WebPublishProfileFile` global property.\r\n\r\nBecause the .NET Core SDK now imports the publish profile, this caused every\r\nproject referenced to also import the publish profile during restore. This may\r\nhave unintentional consequences of restoring `netstandard` projects as\r\n`netcoreapp` if a `netcoreapp` TFM is set in the publish profile, for example.\r\n\r\nHowever, during build/publish, the Web SDK is removing `WebPublishProfileFile`\r\nfrom the global properties for project references.  This causes an error due to\r\na potential mismatch between the TFM restored and the TFM being\r\nbuilt/published for dependent projects.\r\n\r\nFixes aspnet/websdk#604.\r\n\t\t\r\n#### Customer Impact\r\n\r\nCustomers will not be able to publish their .NET Core web applications that have references on projects that have a different TFM (e.g. `netstandard` libraries) from Visual Studio.\r\n\t\t\r\n#### Regression?\r\n\r\nYes.\r\n\t\t\r\n#### Risk\r\n\r\nRisk is low.\r\n\r\nThe fix is to import the publish profile only when the full path isn't set or\r\nif the project being built is the one being published (i.e. the project to\r\noverride project extensions for).","Url":"https://github.com/dotnet/sdk/pull/3511","RelatedDescription":"Closed or merged PR \"Fix publishing of applications that specify a full path to the profile.\" (#3511)"},{"Id":"476393427","IsPullRequest":true,"CreatedAt":"2019-08-06T18:23:24","Actor":"peterhuene","Number":"3500","RawContent":null,"Title":"Retry apphost creation. ","State":"closed","Body":"#### Description\r\n\r\nThis PR implements a parameterized retry count for creating the apphost.\r\n\r\nLike the `Copy` task from MSBuild, the `CreateAppHost` task now takes a\r\nparameter to specify the number of retries and the delay between retries (in\r\nmilliseconds) to perform if the creation fails.\r\n\r\nThis should help alleviate build failures when external processes are locking\r\nthe intermediate apphost during a build (especially on Windows).\r\n\r\nFixes [AB#950462](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/950462).\r\nFixes dotnet/cli#11650.\r\n\t\t\r\n#### Customer Impact\r\n\r\nSome users are running into an issue where an external application has the intermediate apphost exclusively locked.  This change helps mitigate the issue by retrying the apphost modification a configurable number of times.\r\n\t\t\r\n#### Regression?\r\n\r\nNo.\r\n\t\t\r\n#### Risk\r\n\r\nLow.\r\n","Url":"https://github.com/dotnet/sdk/pull/3500","RelatedDescription":"Closed or merged PR \"Retry apphost creation. \" (#3500)"},{"Id":"476146474","IsPullRequest":true,"CreatedAt":"2019-08-06T17:37:03","Actor":"dotnet-maestro[bot]","Number":"3498","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3498","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3498)"},{"Id":"477060930","IsPullRequest":true,"CreatedAt":"2019-08-06T03:58:51","Actor":"dotnet-maestro[bot]","Number":"3507","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190805.07\r\n- **Date Produced**: 8/5/2019 9:13 PM\r\n- **Commit**: d01b2fb7bc6bd4911e157fbd51353059a3ba1a6c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28405-07\r\n\r\n[marker]: <> (End:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3507","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#3507)"},{"Id":"477071789","IsPullRequest":true,"CreatedAt":"2019-08-05T23:44:49","Actor":"wli3","Number":"3509","RawContent":null,"Title":"Change the assertion to not to catch the RAR warning","State":"closed","Body":"It is intent to catch the warning from Conflict Resolution.\r\n\r\nContinue investigation on why RAR start to have such warning in https://github.com/dotnet/sdk/issues/3508\r\n\r\n### Description\r\n\r\n The test is blocking any SDK PR. `It_tolerates_newline_in_hint_path` is intended to prevent regression of \"crash in conflict resolution when hintpath has new line\". However, due to a msbuild change, the RAR warning also has the same partial text the test asserts on.\r\n\r\n### Customer Impact\r\n\r\nno\r\n\r\n### Regression?\r\n\r\nno\r\n\r\n### Risk\r\n\r\nLow risk.\r\n\r\n### Test changes in this PR\r\n\r\nN/A","Url":"https://github.com/dotnet/sdk/pull/3509","RelatedDescription":"Closed or merged PR \"Change the assertion to not to catch the RAR warning\" (#3509)"},{"Id":"477073127","IsPullRequest":false,"CreatedAt":"2019-08-05T21:48:06","Actor":"fadimounir","Number":"3510","RawContent":null,"Title":"Double writes on publish, causes R2R task failure","State":"open","Body":"I don't know if this is related to #3257, but I was able to repro this issue again using the latest Preview9 bits (8e9948a3b768811ca5b3a666ff06207a16be69ec, 3.0.100-preview9-013692).\r\n\r\nHere's the repro:\r\n1) clone https://github.com/aspnet/Benchmarks (commit hash for repro: 3ddf6558ec4d3636dc8fec4f0c142834ffa38bf5)\r\n2) dotnet publish  -f netcoreapp3.0 -r win-x64 -v n src\\BenchmarksServer  /bl\r\n\r\nThere are 3 files double-written:\r\n- Dia2Lib.dll\r\n- TraceReloggerLib.dll\r\n- OSExtensions.dll.\r\n\r\nI'll attach the binlog.\r\n\r\nAlso, this causes the R2R task to fail with errors like this one, if you add /p:PublishReadyToRun=true to the publish command:\r\n```console\r\ne:\\dotnet_preview9\\sdk\\3.0.100-preview9-013692\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(308,28): error MSB4094: \"C:\\Users\\fadim\\.nuget\\packages\\microsoft.diagnostics.tracing.traceevent\\2.0.44\\lib\\netstandard1.6\\OSExtensions.dll;C:\\Users\\fadim\\.nuget\\packages\\microsoft.diagnostics.tracing.traceevent\\2.0.44\\lib\\netstandard2.0\\OSExtensions.dll\" is an invalid value for the \"CompilationEntry\" parameter of the \"RunReadyToRunCompiler\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [D:\\GIT\\Benchmarks\\src\\BenchmarksServer\\BenchmarksServer.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3510","RelatedDescription":"Open issue \"Double writes on publish, causes R2R task failure\" (#3510)"},{"Id":"476589815","IsPullRequest":false,"CreatedAt":"2019-08-04T20:17:24","Actor":"nguerrera","Number":"3504","RawContent":null,"Title":"Defensively set DisableSdkPath=true for non .NET framework VB projects","State":"open","Body":"Generally, this is benign, because we pass VBRuntime which will override the SDK path, but if there is a bug or other misconfiguration, the compiler will try to locate the SDK Path using the current runtime. This causes it to try to use Microsoft.VisualBasic.dll from the .NET framework while building against core, and leads to confounding errors such as \r\n\r\n```\r\nvbc error BC30560: 'User' is ambiguous in the namespace 'Microsoft.VisualBasic.ApplicationServices'. [C:\\Users\\nicholg\\Source\\repos\\WpfControlLibrary2\\WpfControlLibrary2\\WpfControlLibrary2.vbproj]\r\n```\r\n\r\nWithout the fix for https://github.com/dotnet/sdk/issues/3450, you get errors like above with `msbuild` instead of the \"Could not find library Microsoft.VisualBasic.dll\" that was reported for `dotnet bulild`.\r\n\r\nWe should make a defensive change to set DisableSdkPath=true so that the symptom for any failure to find the correct vb runtime is consistently cannot find Microsoft.VisualBasic.dll regardless of which compiler (.NET Core or desktop) is used.\r\n\r\nThis is not a blocking issue, though, as it changes the error symptoms only when the product has other bugs or the project has been misconfigured.\r\n\r\nRelated to https://dev.azure.com/devdiv/DevDiv/_workitems/edit/960757","Url":"https://github.com/dotnet/sdk/issues/3504","RelatedDescription":"Open issue \"Defensively set DisableSdkPath=true for non .NET framework VB projects\" (#3504)"},{"Id":"475397200","IsPullRequest":false,"CreatedAt":"2019-08-03T21:53:55","Actor":"sebastienros","Number":"3496","RawContent":null,"Title":"ResolveAssemblyReference returns 3.0 assemblies when 5.0 is requested","State":"closed","Body":"I have a project where I try to use the latest 5.0 branded aspnet core. I use a `FrameworkReference` update to do so. The machine has the latest sdk (5.0.x) and the latest aspnet core shared runtimes 3.0.x and 5.0.x.\r\n\r\nAt compilation I get this:\r\n\r\n```\r\nStartup.cs(188,21): error CS1705: Assembly 'Microsoft.AspNetCore.Mvc.NewtonsoftJson' with identity 'Microsoft.AspNetCore.Mvc.NewtonsoftJson, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.AspNetCore.Mvc.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.AspNetCore.Mvc.Core' with identity 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' [/tmp/BenchmarksServer/43sztvs0.trd/benchmarks/src/Benchmarks/Benchmarks.csproj]\r\nProgram.cs(117,21): error CS1705: Assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv' with identity 'Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.AspNetCore.Hosting.Abstractions, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.AspNetCore.Hosting.Abstractions' with identity 'Microsoft.AspNetCore.Hosting.Abstractions, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' [/tmp/BenchmarksServer/43sztvs0.trd/benchmarks/src/Benchmarks/Benchmarks.csproj]\r\n```\r\n\r\nThe .binlog shows that `ResolveAssemblyReference` is returning these conflicting assemblies where it should instead pick them from the 5.0.x folder.\r\n\r\n[msbuild.binlog.zip](https://github.com/dotnet/sdk/files/3454241/msbuild.binlog.zip)\r\n\r\nRename the file by removing the .zip extension, don't extract it (GH limitation)\r\n","Url":"https://github.com/dotnet/sdk/issues/3496","RelatedDescription":"Closed issue \"ResolveAssemblyReference returns 3.0 assemblies when 5.0 is requested\" (#3496)"},{"Id":"476341414","IsPullRequest":false,"CreatedAt":"2019-08-02T20:20:33","Actor":"nguerrera","Number":"3499","RawContent":null,"Title":"Redundant PackageName and NuGetPackageId metadata","State":"open","Body":"There's a mix of checking PackageName and NuGetPackageId in the targets and now we seem to be setting both all the time in ResolvePackageAssets.\r\n\r\nI actually trimmed down the metadata in 2.1 to stop doing this, but it crept back in c7549ffe\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3499","RelatedDescription":"Open issue \"Redundant PackageName and NuGetPackageId metadata\" (#3499)"},{"Id":"475644278","IsPullRequest":true,"CreatedAt":"2019-08-01T14:11:23","Actor":"dotnet-maestro[bot]","Number":"3497","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190731.19\r\n- **Date Produced**: 8/1/2019 12:27 AM\r\n- **Commit**: 48787606d809963cc800151cbfbefe0a74ae74b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19381.19\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3497","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3497)"},{"Id":"475349038","IsPullRequest":true,"CreatedAt":"2019-08-01T03:37:28","Actor":"nugetlurker","Number":"3494","RawContent":null,"Title":"Insert NuGet Build 5.3.0-preview.2.6136 into sdk","State":"closed","Body":"Insert NuGet Build 5.3.0-preview.2.6136 into sdk release/3.0.100-preview8 branch","Url":"https://github.com/dotnet/sdk/pull/3494","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.3.0-preview.2.6136 into sdk\" (#3494)"},{"Id":"475361769","IsPullRequest":false,"CreatedAt":"2019-07-31T21:17:43","Actor":"nguerrera","Number":"3495","RawContent":null,"Title":"Inclusion of runtime graph for all TFMs causes existing .NET Framework projects to turn x86","State":"open","Body":"So, it seems that giving the runtime graph to nuget for all TFMs is actually a pretty severe breaking change for .NET Framework in some cases.\r\n\r\nRoslyn builds with preview 8 (maybe 7, not sure when the rid graph change landed) will switch the .NET Framework csc.exe, vbc.exe, VBCSCompiler.exe to x86 from Any CPU.\r\n\r\nThis happens because they have a ref to Microsoft.DiasymReader.Native which has runtimes/win-x86 assets. The design for .NET Framework is that when we find RID-specific assets AND there is no explicit AnyCPU and no explicit RID, then we take the win7-x86 assets and use PlatformTarget=x86. \r\n\r\n(I regret this design, but that is the design since 1.0 SDK. It was done so that .NET Framework ASP.NET Core projects could consume libuv without setting a RID or PlatformTarget. Project.json just picked the RID of the current machine, which was worse as you get different apps on different machines. We tried to make it an error and say you had to pick a PlatformTarget or RID on .NET Framework exes, but there was a ton of complaints about it and we landed on the design described above by compromise.)\r\n\r\nThe thing is that we use win7-x86, but without a RID graph, we/NuGet don't know that win-x86 assets are applicable to win7-x86. Now that we have the RID graph always, we discover these win-x86 assets for the first time and the (regrettable) design actually kicks in.\r\n\r\nMy suggestion to avoid a breaking change here is to not pass the RID graph by default for TFMs that are not .NET Core 3.0+ or .NET Standard 2.1+. We can put it behind an opt-in for other TFMs.\r\n\r\nSeparately, roslyn should explicitly set Any CPU defensively so that they are not sensitive to which SDK is used to build them.\r\n\r\ncc @jaredpar @dsplaisted ","Url":"https://github.com/dotnet/sdk/issues/3495","RelatedDescription":"Open issue \"Inclusion of runtime graph for all TFMs causes existing .NET Framework projects to turn x86\" (#3495)"},{"Id":"475103999","IsPullRequest":true,"CreatedAt":"2019-07-31T15:57:53","Actor":"dotnet-maestro[bot]","Number":"3493","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190730.3\r\n- **Date Produced**: 7/30/2019 6:57 PM\r\n- **Commit**: def377f94747dac91482aad67b33a1c011ffc770\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19380.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3493","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3493)"},{"Id":"474677142","IsPullRequest":true,"CreatedAt":"2019-07-30T23:33:44","Actor":"dotnet-maestro[bot]","Number":"3491","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190730.08\r\n- **Date Produced**: 7/30/2019 7:48 PM\r\n- **Commit**: c855ac718789051d5d67282c88decca445de7711\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28380-08\r\n\r\n[marker]: <> (End:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3491","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#3491)"},{"Id":"474858582","IsPullRequest":false,"CreatedAt":"2019-07-30T18:57:29","Actor":"davidmatson","Number":"3492","RawContent":null,"Title":"When using new-style csproj with .NET Framework, the default TargetPlatform is x86 rather than AnyCPU","State":"open","Body":"**Visual Studio Version**:\r\n2019 (16.2.0)\r\n\r\n**Summary**:\r\nWhen using the new-style (CPS?) csproj but targeting .NET Framework, the default TargetPlatform is differe than either .NET Core or old-style .NET Framework csprojs (x86 rather than AnyCPU).\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. File -> New -> Project -> .NET Core exe\r\n\r\n2. Unload the csproj and replace the target framework line with: ```<TargetFramework>net472</TargetFramework>```\r\n\r\n3. Releoad the project and check its properties\r\n\r\n**Expected Behavior**:\r\nTarget platform in AnyCPU.\r\n\r\n**Actual Behavior**:\r\nTarget platform is x86.\r\n\r\n**User Impact**:\r\nConfusing behavior when restoring NuGet packages, and inconsistency with all other C# project variants.","Url":"https://github.com/dotnet/sdk/issues/3492","RelatedDescription":"Open issue \"When using new-style csproj with .NET Framework, the default TargetPlatform is x86 rather than AnyCPU\" (#3492)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1159573396646051841","CreatedAt":"2019-08-08T21:13:36+00:00","UserScreenname":"dotnet","Text":"If you haven't, check out @NuGetTrends. https://t.co/yU8HL11oYR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":5,"RawContent":null},{"Id":"1159548113922605056","CreatedAt":"2019-08-08T19:33:08+00:00","UserScreenname":"dotnet","Text":"Machine Learning with ML .NET in The 25th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD ’19), A… https://t.co/n8DQEf64lK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":5,"RawContent":null},{"Id":"1158903079120470016","CreatedAt":"2019-08-07T00:50:00+00:00","UserScreenname":"dotnet","Text":"Try out Nullable Reference Types\n\nhttps://t.co/slv9yaObMI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":120,"FavoriteCount":74,"RawContent":null},{"Id":"1158800246995992576","CreatedAt":"2019-08-06T18:01:23+00:00","UserScreenname":"dotnet","Text":"Improving .NET Core installation in Visual Studio and on Windows https://t.co/xLzfvAyAXw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2019-08-10T05:30:36.70804Z","RunDurationInMilliseconds":15080}