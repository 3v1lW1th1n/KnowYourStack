{"Data":{"GitHub":{"Issues":[{"Id":"456582617","IsPullRequest":true,"CreatedAt":"2019-06-15T22:45:29","Actor":"vatsan-madhavan","Number":"979","RawContent":null,"Title":"WIP: Incorporate Intellisense XML into ref-assembly nuget packages","State":"open","Body":"Fixes #747 \r\n\r\nSee `intellisense.md` for architecture notes. \r\n\r\nIntellisense XML's are produced in `dotnet/dotnet-api-docs` repo. They are currently **not** published to a Nuget package or another easily consumable artifact. Thus, the process of ingestion of these XML files is a manual one at this time. \r\n\r\n1. From the OPS build site at https://ops.microsoft.com/#/sites/Docs/docsets/dotnet-api-docs?tabName=builds, we obtain the latest build artifacts\r\n    - Filter by `Build Type = Intellisense`\r\n    - Download latest package (it's a `zip` file)\r\n2. Extract the zip contents and retain only the contents of `_intellisense\\netcore-3.0` subfolder\r\n   - Copy these contents over to a new folder hierarchy that looks like this: \r\n  \r\n    ```\r\n    DOTNET-API-DOCS_NETCOREAPP3.0-0.0.0.1-WIN32-X86\r\n    \\---_intellisense\r\n        \\---netcore-3.0\r\n    ```\r\n3. Compress the contents into a new zip file (typically named `dotnet-api-docs_netcoreapp3.0-0.0.0.1-win32-x86.zip`) and upload it to a blob store using Azure Storage Explorer to `netcorenativeassets` under this path: \r\n    - `resource-packages -> external -> windows -> dotnet-api-docs_netcoreapp3.0` \r\n4. During build, consume this blob, unzip and incorporate into ref-assembly nuget pakcages produced out of WPF. \r\n\r\n### Q&A \r\n\r\n**Q**.  What happens when an intellisense XML is not found? \r\n**A**. Nothing. We will silently ignore the problem and the build will succeed. \r\n\r\n**Q.**  Are there missing files today? \r\n**Y.** Yes, WindowsBase and PresentationBuildTasks intellisense files are missing. See https://github.com/dotnet/dotnet-api-docs/issues/2602\r\n\r\n**Q.**. How is the zip file update? How often is it update? \r\n**A.** Manually. As often as needed - typically once per major milestone or preview release. \r\n\r\nNotes:\r\n\r\n- This PR needs to build a new version of `Microsoft.DotNet.Arcade.Wpf` packge, and flow into to `dotnet-wpf-int`, to build a complete set of ref-assembly packages containing intellisense information. \r\n- There are small unrelated commits in this PR to workaround ongoing problems with the build in dotnet/wpf. We will remove them before merging (or perhaps retain them if those changes are cherry-picked into the repo separately). \r\n","Url":"https://github.com/dotnet/wpf/pull/979","RelatedDescription":"Open PR \"WIP: Incorporate Intellisense XML into ref-assembly nuget packages\" (#979)"},{"Id":"456574731","IsPullRequest":true,"CreatedAt":"2019-06-15T20:50:09","Actor":"mjjames","Number":"978","RawContent":null,"Title":"corrected line breaks within the file dialog resource strings.","State":"open","Body":"Fixes #977 \r\n\r\nI noticed in all of the other resource strings only \\n is used not \\r\\n. Updated all of the file dialog resources to use \\n instead of the \\r\\n.","Url":"https://github.com/dotnet/wpf/pull/978","RelatedDescription":"Open PR \"corrected line breaks within the file dialog resource strings.\" (#978)"},{"Id":"456573240","IsPullRequest":false,"CreatedAt":"2019-06-15T20:29:36","Actor":"mjjames","Number":"977","RawContent":null,"Title":"File Dialog messages that contain \\r\\n render the \\r\\n as text","State":"open","Body":"* .NET Core Version: 3.0.0-preview6-27804-01\r\n* Windows version: Windows 10 Build 18917.rs_prerelease.190607-1942 and Windows 7 sp1\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n **Problem description:**\r\nWhen you use an Open File Dialog and provide an invalid file OR if you use a Save File Dialog and try to overwrite an existing file the messagebox renders the \\r\\n as text instead of  a line break.\r\n\r\nThis happens if you use the Microsoft.Win32 base implementations or the System.Windows.Forms varients\r\n\r\n **Actual behavior:** \r\n![image](https://user-images.githubusercontent.com/514455/59556046-22aa9280-8fb4-11e9-8656-53ceb7edb051.png)\r\n \r\n **Expected behavior:**\r\n![image](https://user-images.githubusercontent.com/514455/59556078-9f3d7100-8fb4-11e9-83bc-27e8d45027db.png)\r\n\r\n\r\n **Minimal repro:**\r\n```\r\nvar saveDialog = new Microsoft.Win32.SaveFileDialog\r\n{\r\n\tOverwritePrompt = true\r\n};\r\nvar success = saveDialog.ShowDialog();\r\nvar saveDialogForms = new System.Windows.Forms.SaveFileDialog\r\n{\r\n\tOverwritePrompt = true\r\n};\r\nvar successForms = saveDialog.ShowDialog();\r\n```","Url":"https://github.com/dotnet/wpf/issues/977","RelatedDescription":"Open issue \"File Dialog messages that contain \\r\\n render the \\r\\n as text\" (#977)"},{"Id":"456571735","IsPullRequest":false,"CreatedAt":"2019-06-15T20:10:12","Actor":"markzielinski","Number":"976","RawContent":null,"Title":"Is DPI broken in 3.0.100-preview6-012264?","State":"open","Body":"I just updated from 3.0.100-preview5-011568 to 3.0.100-preview6-012264 and it looks like there were some changes made to DPI.\r\n\r\nI checked the release notes and didn't see any changes documented for DPI, however after updating to Preview 6 my WPF application now looks huge.    If I switch back to Preview 5, it works as expected.\r\n\r\nMy display resolution is 2560 x 1440 with the scale set to the recommended 125%.","Url":"https://github.com/dotnet/wpf/issues/976","RelatedDescription":"Open issue \"Is DPI broken in 3.0.100-preview6-012264?\" (#976)"},{"Id":"456561893","IsPullRequest":true,"CreatedAt":"2019-06-15T18:04:04","Actor":"vatsan-madhavan","Number":"975","RawContent":null,"Title":"Change _TestHelixAgentPool from 19H1 to RS5","State":"open","Body":"Changing `_TestHelixAgentPool` from 19H1 to RS5 seems to bring down execution time in Helix to approx 15 mins. \r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=226613&view=logs \r\n\r\nLooks like the 19H1 pool may have been the reason our builds have been suffering from chronic timeouts, much like the ServerRS5 pool prior to that. ","Url":"https://github.com/dotnet/wpf/pull/975","RelatedDescription":"Open PR \"Change _TestHelixAgentPool from 19H1 to RS5\" (#975)"},{"Id":"456533997","IsPullRequest":true,"CreatedAt":"2019-06-15T13:40:22","Actor":"dotnet-maestro[bot]","Number":"972","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e27f4734-4755-4c9b-6655-08d6b00a94b3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190614.05\r\n- **Date Produced**: 6/15/2019 4:46 AM\r\n- **Commit**: ff7bf431e5aa5091fbae6a43f6cfb0a9f44b5d80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27814-05\r\n\r\n[marker]: <> (End:e27f4734-4755-4c9b-6655-08d6b00a94b3)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/972","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#972)"},{"Id":"456534074","IsPullRequest":true,"CreatedAt":"2019-06-15T13:36:15","Actor":"dotnet-maestro[bot]","Number":"973","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190614.2\r\n- **Date Produced**: 6/14/2019 5:06 PM\r\n- **Commit**: 71ad33c75df7354a51b7dd854d0b34eebbceb23e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19314.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/973","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#973)"},{"Id":"456531374","IsPullRequest":true,"CreatedAt":"2019-06-15T13:06:45","Actor":"dotnet-maestro[bot]","Number":"971","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190614.27\r\n- **Date Produced**: 6/15/2019 1:53 AM\r\n- **Commit**: 372249cafc24384ae3488aab4e815e54c2ff3938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19314.27\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/971","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#971)"},{"Id":"456535291","IsPullRequest":true,"CreatedAt":"2019-06-15T12:57:48","Actor":"dotnet-maestro[bot]","Number":"974","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5a60b451-e3fe-4910-c0e5-08d6df169eee)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190614.4\r\n- **Date Produced**: 6/14/2019 2:31 PM\r\n- **Commit**: 9f8cf38682aaf90cde3b1342db9565bc73b3901c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19314.4\r\n\r\n[marker]: <> (End:5a60b451-e3fe-4910-c0e5-08d6df169eee)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/974","RelatedDescription":"Open PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#974)"},{"Id":"456504606","IsPullRequest":false,"CreatedAt":"2019-06-15T06:10:49","Actor":"forestbat","Number":"970","RawContent":null,"Title":"WPF Dlls'footprint should be reduced","State":"open","Body":"[https://github.com/dotnet/coreclr/issues/25153](https://github.com/dotnet/coreclr/issues/25153)\r\n\r\nEdit: Fixing up Url","Url":"https://github.com/dotnet/wpf/issues/970","RelatedDescription":"Open issue \"WPF Dlls'footprint should be reduced\" (#970)"},{"Id":"456471302","IsPullRequest":true,"CreatedAt":"2019-06-14T23:21:42","Actor":"ojhad","Number":"969","RawContent":null,"Title":"Remove System.Security.Permission.dll dependence for internal permissions types","State":"open","Body":"- Removed dependence on System.Security.Permission.dll for internal types that extend from System.Security.Permission.dll types\r\n- Deleted UserInitiatedRoutedEventPermissionAttribute completely","Url":"https://github.com/dotnet/wpf/pull/969","RelatedDescription":"Open PR \"Remove System.Security.Permission.dll dependence for internal permissions types\" (#969)"},{"Id":"456392512","IsPullRequest":false,"CreatedAt":"2019-06-14T19:04:56","Actor":"grubioe","Number":"968","RawContent":null,"Title":"ComboBox drop down opens in PerMonitor awareness when hosted in System aware UI","State":"open","Body":"Copied from VSO ID:803149\r\n\r\nApplication Name:  Mathcad Prime\r\n\r\nOS: Windows 10 RS4\r\n\r\nCPU: X64\r\n\r\n.NET Build Number: 4.8.03707\r\n\r\nMin Repro Project:\r\nSee VSO ID\r\n\r\nRepro Steps:\r\n\r\nHave .NET 4.7.2+, and 100% primary, 200% secondary\r\nLaunch repro proj exe on primary\r\nMove it to secondary\r\nClick “Launch Dialog”\r\nClick ComboBox in dialog (Or tab to it and hit Alt+DownArrow if using keyboard)\r\n \r\n\r\nExpected:\r\n\r\n    Popup is aligned correctly, and system scaled\r\n\r\n \r\n\r\nActual:\r\n\r\n    Popup is misaligned and PMA scaled\r\n\r\n![image](https://user-images.githubusercontent.com/49078227/59532056-7cb83480-8e9c-11e9-95b5-7409898928e3.png)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/968","RelatedDescription":"Open issue \"ComboBox drop down opens in PerMonitor awareness when hosted in System aware UI\" (#968)"},{"Id":"456374647","IsPullRequest":true,"CreatedAt":"2019-06-14T18:56:41","Actor":"vatsan-madhavan","Number":"963","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/963","RelatedDescription":"Closed or merged PR \"test pr\" (#963)"},{"Id":"456389248","IsPullRequest":false,"CreatedAt":"2019-06-14T18:56:22","Actor":"grubioe","Number":"967","RawContent":null,"Title":"[PMA] Dragging a window outside the title bar causes the mouse position to shift when changing DPIs","State":"open","Body":"Copied from VSO ID: 780675\r\n\r\nMin Repro Proj:\r\n[WpfWeirdDrag.zip](https://github.com/dotnet/wpf/files/3291838/WpfWeirdDrag.zip)\r\n \r\nThis bug is found during PMA testing.  To setup PMA review the VSO ID\r\n\r\nRepro:\r\n\r\nOpen Update Dialog in main window.\r\nLeft click on the spinning circle, and drag to a secondary window.\r\n \r\n\r\nExpected: After dragging the UI to the secondary Window, the mouse pointer is in the same location.\r\n\r\nActual: After dragging the UI to the secondary Window, the mouse pointer is repositioned to a different location.\r\n\r\nNote: The dialog's title bar doesn't have this issue.  Other VS UI appears to have similar issue.\r\n![image](https://user-images.githubusercontent.com/49078227/59531635-4cbc6180-8e9b-11e9-8a10-9a4e1662a58a.png)\r\n\r\n \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/967","RelatedDescription":"Open issue \"[PMA] Dragging a window outside the title bar causes the mouse position to shift when changing DPIs\" (#967)"},{"Id":"456387179","IsPullRequest":false,"CreatedAt":"2019-06-14T18:50:42","Actor":"grubioe","Number":"966","RawContent":null,"Title":"Feature ASK: Implement IList on PageContentCollection and DocumentReferenceCollection","State":"open","Body":"Copied from VSO: 776611\r\n\r\nThis comes from user feedback:\r\nhttps://developercommunity.visualstudio.com/content/problem/418015/fixeddocument-pagecontent-bug.html\r\n![image](https://user-images.githubusercontent.com/49078227/59531228-41b50180-8e9a-11e9-9cc3-6c9c1d813b71.png)\r\n\r\n\r\nREPRO:\r\nIn a WPF project in Visual Studio, construct a file like in the following screenshot:\r\n\r\nRESULT:\r\nThe content of FixedDocument is always shown as an error.\r\n\r\nEXPECT:\r\nNo error squiggles or error messages","Url":"https://github.com/dotnet/wpf/issues/966","RelatedDescription":"Open issue \"Feature ASK: Implement IList on PageContentCollection and DocumentReferenceCollection\" (#966)"},{"Id":"456384099","IsPullRequest":false,"CreatedAt":"2019-06-14T18:42:36","Actor":"grubioe","Number":"964","RawContent":null,"Title":"[Perf] Family Show 1.1 Build scenario regressed by 24% compared to Dev 15.9","State":"open","Body":"Copied from VSO: 774775\r\n\r\nAffected Branch: d16.0\r\n\r\nSteps to reproduce:\r\n\r\nFamily Show integration test\r\n\r\nhttp://devdivperf/TestTrend.aspx#CID=2810317&SID=65356&SH=1&MD=100&LabID=694,696,695&BID=211979&HE=1703&SE=74&LM=652&OS=128&SKU=&TA=4&DOSV=0&DOSO=0&DOSG=0&DOSC=1&DOSGL=1&SO=237\r\n\r\n![image](https://user-images.githubusercontent.com/49078227/59530829-678dd680-8e99-11e9-9da9-9398210ece99.png)\r\n\r\n\r\nThere is a similar regression in CreateWPF_CSharp_VS rebuild scenario (new blank WPF project).\r\n\r\nLooking at the MSBuild Diagnostics logs shows that the following build steps regressed significantly:\r\n\r\nFamily Show clean build in D16.0stg\r\n1>     4310 ms  CoreCompile                                2 calls\r\n1>     4356 ms  GenerateTemporaryTargetAssembly            1 calls\r\nFamily Show clean build in D15.9rtwsvc:\r\n2>      109 ms  CoreResGen                                 1 calls\r\n2>      375 ms  GenerateTemporaryTargetAssembly            1 calls\r\n2>      500 ms  CoreCompile                                2 calls\r\n2>      531 ms  MarkupCompilePass2                         1 calls\r\n2>      734 ms  MarkupCompilePass1                         1 calls\r\n\r\nRebuild clean WPF project in D16.0stg:\r\n1>     4310 ms  CoreCompile                                2 calls\r\n1>     4356 ms  GenerateTemporaryTargetAssembly            1 calls\r\nRebuild clean WPF project in D15.9rtwsvc:\r\n1>     3725 ms  CoreCompile                                2 calls\r\n1>     3787 ms  GenerateTemporaryTargetAssembly            1 calls\r\n\r\nThe FamilyShow project is in the VS.TestAssets.Xaml NuGet package, see VSO for details\r\n","Url":"https://github.com/dotnet/wpf/issues/964","RelatedDescription":"Open issue \"[Perf] Family Show 1.1 Build scenario regressed by 24% compared to Dev 15.9\" (#964)"},{"Id":"456371692","IsPullRequest":true,"CreatedAt":"2019-06-14T18:12:25","Actor":"vatsan-madhavan","Number":"962","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/962","RelatedDescription":"Closed or merged PR \"test pr\" (#962)"},{"Id":"456369887","IsPullRequest":true,"CreatedAt":"2019-06-14T18:08:29","Actor":"vatsan-madhavan","Number":"961","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/961","RelatedDescription":"Closed or merged PR \"test pr\" (#961)"},{"Id":"456362041","IsPullRequest":true,"CreatedAt":"2019-06-14T17:43:46","Actor":"vatsan-madhavan","Number":"960","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/960","RelatedDescription":"Closed or merged PR \"test pr\" (#960)"},{"Id":"456361432","IsPullRequest":true,"CreatedAt":"2019-06-14T17:41:57","Actor":"vatsan-madhavan","Number":"959","RawContent":null,"Title":"test pr","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/pull/959","RelatedDescription":"Closed or merged PR \"test pr\" (#959)"},{"Id":"456329478","IsPullRequest":true,"CreatedAt":"2019-06-14T17:26:37","Actor":"vatsan-madhavan","Number":"958","RawContent":null,"Title":"Change _TestHelixAgentPool from Windows.10.Amd64.Client19H1.Open to Windows.10.Amd64.Client19H1","State":"closed","Body":"Change _TestHelixAgentPool from Windows.10.Amd64.Client19H1.Open to Windows.10.Amd64.Client19H1 when building internally. \r\n\r\nFixes #952 and an ongoing build-break.","Url":"https://github.com/dotnet/wpf/pull/958","RelatedDescription":"Closed or merged PR \"Change _TestHelixAgentPool from Windows.10.Amd64.Client19H1.Open to Windows.10.Amd64.Client19H1\" (#958)"},{"Id":"456005214","IsPullRequest":true,"CreatedAt":"2019-06-14T15:54:21","Actor":"vatsan-madhavan","Number":"953","RawContent":null,"Title":"Fix for #952 dotnet/wpf builds failing intermittently due to timeouts ","State":"closed","Body":"Fixes #952 \r\n\r\nWPF builds fail intermittently due to timeouts when Run Developer Regression Tests on Helix Machine stage fails to start within its timeout period (60 mins).\r\n\r\nExample of a failed build: https://dev.azure.com/dnceng/internal/_build/results?buildId=224164\r\n\r\n=\r\n\r\n_TestHelixAgentPool in eng\\pipeline.yml is currently set to Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.ServerRS5.Open\r\n\r\nIt should be changed to Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.Client19H1.Open.\r\n\r\nIn short, stop running tests on ServerRS5. It's a \"server core\" machine machine, and seems to have problems running tests right now. Change it to Client19H1.","Url":"https://github.com/dotnet/wpf/pull/953","RelatedDescription":"Closed or merged PR \"Fix for #952 dotnet/wpf builds failing intermittently due to timeouts \" (#953)"},{"Id":"456003379","IsPullRequest":false,"CreatedAt":"2019-06-14T15:54:21","Actor":"vatsan-madhavan","Number":"952","RawContent":null,"Title":"WPF Builds fail intermittently due to timeouts","State":"closed","Body":"WPF builds fail intermittently due to timeouts when _Run Developer Regression Tests on Helix Machine_ stage fails to start within its timeout period (60 mins). \r\n\r\nExample of a failed build: https://dev.azure.com/dnceng/internal/_build/results?buildId=224164 \r\n\r\n= \r\n\r\n`_TestHelixAgentPool` in `eng\\pipeline.yml` is currently set to `Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.ServerRS5.Open` \r\n\r\nIt should be changed to `Windows.10.Amd64.Open%3bWindows.7.Amd64.Open%3bWindows.10.Amd64.Client19H1.Open`. \r\n\r\nIn short, stop running tests on _ServerRS5_. It's a \"server core\" machine machine, and seems to have problems running tests right now. Change it to _Client19H1_. ","Url":"https://github.com/dotnet/wpf/issues/952","RelatedDescription":"Closed issue \"WPF Builds fail intermittently due to timeouts\" (#952)"},{"Id":"456238414","IsPullRequest":true,"CreatedAt":"2019-06-14T13:54:01","Actor":"dotnet-maestro[bot]","Number":"957","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5a60b451-e3fe-4910-c0e5-08d6df169eee)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190613.4\r\n- **Date Produced**: 6/13/2019 1:35 PM\r\n- **Commit**: 95e20dfc1b2acd503e8308962a8fd905a8f16e1a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19313.4\r\n\r\n[marker]: <> (End:5a60b451-e3fe-4910-c0e5-08d6df169eee)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/957","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#957)"},{"Id":"456229422","IsPullRequest":true,"CreatedAt":"2019-06-14T13:13:58","Actor":"dotnet-maestro[bot]","Number":"956","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190613.1\r\n- **Date Produced**: 6/14/2019 2:31 AM\r\n- **Commit**: 23e72e7957ec6b24943ab82a78bfee5b6531a55b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19313.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/956","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#956)"},{"Id":"456228966","IsPullRequest":true,"CreatedAt":"2019-06-14T13:07:56","Actor":"dotnet-maestro[bot]","Number":"955","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e27f4734-4755-4c9b-6655-08d6b00a94b3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190613.08\r\n- **Date Produced**: 6/13/2019 9:26 PM\r\n- **Commit**: 2a663574a47d8ac25b9b959e5a9f9fa67fc97ecc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27813-08\r\n\r\n[marker]: <> (End:e27f4734-4755-4c9b-6655-08d6b00a94b3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19313.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19313.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/955","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#955)"},{"Id":"456213844","IsPullRequest":true,"CreatedAt":"2019-06-14T12:52:29","Actor":"dotnet-maestro[bot]","Number":"954","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190613.18\r\n- **Date Produced**: 6/13/2019 11:28 PM\r\n- **Commit**: 8952b877fa6bca387cd4321b33dcdf6778e31240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19313.18\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/954","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#954)"},{"Id":"455975842","IsPullRequest":true,"CreatedAt":"2019-06-13T22:14:55","Actor":"miguep","Number":"951","RawContent":null,"Title":"Fixing the list of uncommon assemblies used by AssemblyHelper","State":"open","Body":"AssemblyHelper keeps track of uncommon assemblies and loads the appropriate extension assembly (e.g. PresentationFramework-SystemData), only when it determines that the assembly has already been loaded by the application (to prevent said assembly from being loaded by WPF all the time). The types used by the extension assemblies have moved to different assemblies, so we need to update the list of uncommon assemblies.\r\n\r\nfixes #756 ","Url":"https://github.com/dotnet/wpf/pull/951","RelatedDescription":"Open PR \"Fixing the list of uncommon assemblies used by AssemblyHelper\" (#951)"},{"Id":"455973133","IsPullRequest":false,"CreatedAt":"2019-06-13T22:05:47","Actor":"bergmeister","Number":"950","RawContent":null,"Title":"New feature: Add property to JumpTask to allow for elevated jump list entry","State":"open","Body":"Background: PowerShell Core has a lot of custom code [here](https://github.com/PowerShell/PowerShell/tree/master/src/Microsoft.PowerShell.ConsoleHost/WindowsTaskbarJumpList) that makes COM calls to the Windows API for creating a jumplist entry to run PowerShell as an Administrator. However, in both .Net Core 2.1 and .Net Core 3.0-preview5, it has been observed that the CLR fails sporadically with a fatal error: https://github.com/PowerShell/PowerShell/issues/9295\r\n\r\nWPF has APIs for creating a taskbar jump list but not for launching the application as elevated. PowerShell would therefore like to rather use WPF to minimize the amount of (possibly buggy code).\r\n\r\nProposal:\r\n\r\nWe add a boolean property to `JumpTask` (I don't mind about its name, what about `RequestElevation`?) so that when when `JumpList.Apply()` gets called the application will be elevated. The default will be to start unelevated.\r\nThe implementation will be quite simple, all we need to do is to use `SLDF_RUNAS_USER` enum on [SHELL_LINK_DATA_FLAGS](https://docs.microsoft.com/en-us/windows/desktop/api/shlobj_core/ne-shlobj_core-shell_link_data_flags). We will be calling [IShellLinkDataList::GetFlag](https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nf-shobjidl_core-ishelllinkdatalist-getflags)`, adding the enum value using XOR and then call [IShellLinkDataList::SetFlags](https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nf-shobjidl_core-ishelllinkdatalist-setflags) on the `shellLink`  object of type `IShellLinkW` in JumpList.\r\n\r\nAre you OK with this proposal that includes no breaking change?\r\nI would first code this from a theoretical perspective, open a draft PR and from then on I would be grateful for some assistance for being able to test it and will have to do some homework to get familiar with this repo (I have never committed to .Net Core before although I use it a lot)\r\n\r\nIn terms of the usage, do you expect the process that is calling those APIs to be in STA mode or does it not matter? WPF is STA by default AFAIK but PowerShell Core is a console app and currently still in MTA mode due to .Net Core not offering STA yet in 2.1. There is a check for STA in WPF [https://github.com/dotnet/wpf/blob/ae1790531c3b993b56eba8b1f0dd395a3ed7de75/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Shell/JumpList.cs#L564](https://github.com/dotnet/wpf/blob/ae1790531c3b993b56eba8b1f0dd395a3ed7de75/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Shell/JumpList.cs#L564) but I am not sure if this is due to WPF or the COM calls being made","Url":"https://github.com/dotnet/wpf/issues/950","RelatedDescription":"Open issue \"New feature: Add property to JumpTask to allow for elevated jump list entry\" (#950)"},{"Id":"456384577","IsPullRequest":false,"CreatedAt":"2019-06-12T18:58:00","Actor":"vitidev","Number":"965","RawContent":null,"Title":"WPF TextBox XamlParseException when culture is not \"en-US\" (.NET Core 3.0.0 Preview 6)","State":"open","Body":"# WPF TextBox XamlParseException when culture is \"ru-RU\" (.NET Core 3.0.0 Preview 6)\r\n\r\nEmpty netcore wpf project and window with textbox\r\n\r\n```c#\r\n    public MainWindow()\r\n    {\r\n         InitializeComponent(); // System.Windows.Markup.XamlParseException\r\n    }\r\n```\r\n\r\n```xml\r\n    <Window\r\n        x:Class=\"WpfApp1.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:local=\"clr-namespace:WpfApp1\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        Title=\"MainWindow\"\r\n        Width=\"800\"\r\n        Height=\"450\"\r\n        mc:Ignorable=\"d\">\r\n        <TextBox />\r\n    </Window>\r\n```\r\n\r\nException details (localized (ru))\r\n```\r\n    System.Windows.Markup.XamlParseException\r\n      HResult=0x80131501\r\n      Message=\"Вызов конструктора для типа \"System.Windows.Controls.TextBox\", удовлетворяющего указанным ограничениям привязки, привел к выдаче исключения.\": номер строки \"13\" и позиция в строке \"10\".\r\n      Source=PresentationFramework\r\n      StackTrace:\r\n       at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n       at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n       at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n       at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n       at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\r\n       at WpfApp1.MainWindow.InitializeComponent() in F:\\dev\\test\\WpfApp1\\WpfApp1\\MainWindow.xaml:line 1\r\n\r\n    Inner Exception 1:\r\n    ArgumentException: Requested value 'УДАЛИТЬ' was not found.\r\n```\r\n\r\nbut it works with en-US culture\r\n\r\n```c#\r\n    public MainWindow()\r\n    {\r\n        Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"en-us\");\r\n        InitializeComponent();\r\n    }\r\n```\r\n\r\nps: .NET Core 3.0.0 Preview 5 - everything works well\r\n","Url":"https://github.com/dotnet/wpf/issues/965","RelatedDescription":"Open issue \"WPF TextBox XamlParseException when culture is not \"en-US\" (.NET Core 3.0.0 Preview 6)\" (#965)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-16T05:30:49.2692572Z","RunDurationInMilliseconds":850}