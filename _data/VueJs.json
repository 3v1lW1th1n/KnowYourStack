{"Data":{"Vue-Issues":{"Issues":[{"Id":"326710246","IsPullRequest":false,"CreatedAt":"2018-05-26T04:56:07","Actor":"edivaldoms","Number":"8251","RawContent":null,"Title":"Suggestion for template / render support DOM Document Object","State":"open","Body":"### What problem does this feature solve?\r\nThe rendering could support DOM Document Object.\r\nThis could eliminate the HTML inside the code.\r\nSimilar to ExtJs.\r\nAccording to the following example:\r\n\r\n### What does the proposed API look like?\r\n`templateDom: {\r\n  el: el1,\r\n  title: title1,\r\n  children: {\r\n    title: title2\r\n  },\r\n  onfocus: () =>{...} // or listeners:{ focus: () => {}}\r\n}`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8251","RelatedDescription":"Open issue \"Suggestion for template / render support DOM Document Object\" (#8251)"},{"Id":"326694976","IsPullRequest":true,"CreatedAt":"2018-05-26T00:25:06","Actor":"mpbarlow","Number":"8250","RawContent":null,"Title":"fix(#7913): Prevent erroneous warning when using <slot> inside slot-scope","State":"open","Body":"Because slotNodes inside a slot-scope context are already set to \\_rendered = true after initial\r\nrender, the warning for duplicate slot presence always fires when a slot-scope prop change triggers\r\na re-render. With this change, the compiler tracks whether any slot-scoped elements have been\r\nencountered yet at the point the slot is compiled. If so, the direct ancestors of the slot are checked\r\nfor slot-scope presence, and if one is found, the warning is supressed.\r\n\r\nThis is admittedly not a perfect solution, as within a slot-scope context the warning now does not fire even when there _are_ duplicate slots, but I couldn't find a good way to get around that.\r\n\r\nfix #7913\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8250","RelatedDescription":"Open PR \"fix(#7913): Prevent erroneous warning when using <slot> inside slot-scope\" (#8250)"},{"Id":"326395996","IsPullRequest":false,"CreatedAt":"2018-05-25T12:32:17","Actor":"shawnheide","Number":"8247","RawContent":null,"Title":"Vue SSR hydration error when <noscript> has a nested <img>","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/shawnheide/vue-hackernews-2.0](https://github.com/shawnheide/vue-hackernews-2.0)\r\n\r\n### Steps to reproduce\r\nI forked vue-hackernews-2.0 and added two `<noscript>` elements in [App.vue](https://github.com/shawnheide/vue-hackernews-2.0/blob/master/src/App.vue). One `<noscript>` just has text inside it and the other has a nested `<img>`. If you 'npm install' and 'npm run dev' with javascript enabled, you will see an error occurs in the browser console during hydration for the `<noscript>` element with the nested `<img>`. The `<noscript>` with text doesn't throw an error.\r\n\r\n### What is expected?\r\nThe hydration process makes an exception for children of `<noscript>` elements, assuming nothing can be done about the server-side rendering of children of `<noscript>` tags (since it appears to be a common browser issue).\r\n\r\n### What is actually happening?\r\nThe hydration bails early because the server-side `<noscript>` renders its children as a string and the client-side renders the children as an HTML element.\r\n\r\n---\r\nThe error occurs in the `assertNodeMatch` function in [vue.runtime](https://github.com/vuejs/vue/blob/19552a82a636910f4595937141557305ab5d434e/dist/vue.runtime.esm.js#L6088) since `node.tagName` is undefined due to the fact that it is a string. \r\n\r\nAlso, there is no issue when you disable javascript. The text and the image render just fine. Any thoughts or ideas on this are much appreciated. Thanks for your time. \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8247","RelatedDescription":"Closed issue \"Vue SSR hydration error when <noscript> has a nested <img>\" (#8247)"},{"Id":"326466991","IsPullRequest":false,"CreatedAt":"2018-05-25T11:58:36","Actor":"fjc0k","Number":"8249","RawContent":null,"Title":"Allow a component to register its own subComponents","State":"closed","Body":"### What problem does this feature solve?\r\nWhen developing a component library, you will encounter the need to register subComponents. For example, the component `List` needs to register subComponents such as `ListItem` and `ListItemBrief`. In Vue, it is often necessary to register the full `List` component:\r\n\r\n```js\r\nimport { List, ListItem, ListItemBrief } from './components'\r\n\r\nVue.component(List.name, List)\r\nVue.component(ListItem.name, ListItem)\r\nVue.component(ListItemBrief.name, ListItemBrief)\r\n\r\n// List: <List />\r\n// ListItem: <ListItem />\r\n// ListItemBrief: <ListItemBrief />\r\n```\r\n\r\nIn React, just:\r\n\r\n```js\r\nimport { List } from './components'\r\n\r\n// List: <List />\r\n// ListItem: <List.Item />\r\n// ListItemBrief: <List.Item.Brief />\r\n```\r\n\r\nIt seems that Vue's approach is a bit more complicated, so I think it is possible to consider supporting components to register their subComponents.\r\n\r\n### What does the proposed API look like?\r\n```js\r\n// List.vue\r\nimport ListItem from './ListItem.vue'\r\n\r\nexport default {\r\n  name: 'List',\r\n  subComponents: {\r\n    Item: ListItem\r\n  }\r\n}\r\n```\r\n\r\n```js\r\n// ListItem.vue\r\nimport ListItemBrief from './ListItemBrief.vue'\r\n\r\nexport default {\r\n  name: 'ListItem',\r\n  subComponents: {\r\n    Brief: ListItemBrief\r\n  }\r\n}\r\n```\r\n\r\n```js\r\n// main.js\r\nimport { List } from './components'\r\n\r\nVue.component(List.name, List)\r\n\r\n// or, App.vue\r\nimport { List } from './components'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    [List.name]: List\r\n  }\r\n}\r\n```\r\n\r\nThis will register `${List.name}`, `${List.name}Item`, `${List.name}ItemBrief` once.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8249","RelatedDescription":"Closed issue \"Allow a component to register its own subComponents\" (#8249)"},{"Id":"326424637","IsPullRequest":true,"CreatedAt":"2018-05-25T09:38:29","Actor":"acccco","Number":"8248","RawContent":null,"Title":"Master","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8248","RelatedDescription":"Closed or merged PR \"Master\" (#8248)"},{"Id":"326387942","IsPullRequest":false,"CreatedAt":"2018-05-25T06:04:43","Actor":"shawnheide","Number":"8245","RawContent":null,"Title":"Issue submission form - preview should open links in a new tab","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vue](https://new-issue.vuejs.org/?repo=vuejs/vue)\r\n\r\n### Steps to reproduce\r\nFill out the form on this page (https://new-issue.vuejs.org/?repo=vuejs/vue). Click on the Preview button. Click on the link inside the preview window. \r\n\r\n### What is expected?\r\nThe link opens in a new tab. \r\n\r\n### What is actually happening?\r\nThe link opens in the current tab without submitting the issue. Going \"back\" in the browser results in an empty form. \r\n\r\n---\r\nSadly, I discovered this the hard way after trying to submit my first issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8245","RelatedDescription":"Closed issue \"Issue submission form - preview should open links in a new tab\" (#8245)"},{"Id":"326388832","IsPullRequest":false,"CreatedAt":"2018-05-25T06:02:38","Actor":"shawnheide","Number":"8246","RawContent":null,"Title":"Issue submission form - changing issue type deletes content","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/?repo=vuejs/vue](https://new-issue.vuejs.org/?repo=vuejs/vue)\r\n\r\n### Steps to reproduce\r\nFill out the form on this page (https://new-issue.vuejs.org/?repo=vuejs/vue). Change the type from a Bug Report to a Feature Request. \r\n\r\n### What is expected?\r\nThe content in the fields persists. \r\n\r\n### What is actually happening?\r\nThe content in the fields is deleted. \r\n\r\n---\r\nThis is another small issue, but it really should be more user friendly since you are directing new users here to take the time to submit issues.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8246","RelatedDescription":"Closed issue \"Issue submission form - changing issue type deletes content\" (#8246)"},{"Id":"325957239","IsPullRequest":false,"CreatedAt":"2018-05-24T15:57:10","Actor":"luohanwen","Number":"8243","RawContent":null,"Title":":style bug animation-duration属性在需要添加webkit前缀环境中被渲染成了-webkit-animation","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/haven/k1uptbpw/](https://jsfiddle.net/haven/k1uptbpw/)\r\n\r\n### Steps to reproduce\r\n运行在 animation-duration属性需要添加webkit前缀的环境（手机或浏览器），本人是在mumu模拟器（android4.4）中试的\r\n\r\n### What is expected?\r\n渲染结果为 -webkit-animation-duration:4s\r\n\r\n### What is actually happening?\r\n渲染结果为 -webkit-animation:4s\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8243","RelatedDescription":"Closed issue \":style bug animation-duration属性在需要添加webkit前缀环境中被渲染成了-webkit-animation\" (#8243)"},{"Id":"325564051","IsPullRequest":false,"CreatedAt":"2018-05-24T15:55:26","Actor":"yozman","Number":"8232","RawContent":null,"Title":"can't define `is` prop to functional component","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/yozman/pen/JvVygy](https://codepen.io/yozman/pen/JvVygy)\r\n\r\n### Steps to reproduce\r\nchange `value` prop to `is` in component `Fragment`\r\n\r\n### What is expected?\r\n`is` works well like `value`\r\n\r\n### What is actually happening?\r\n```sh\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n```\r\n\r\n---\r\nwhy `is` is not work? what's the key point?\r\nor could u plz add feature for `{{ }}` can render `Vnode` & `Vnodes` ?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8232","RelatedDescription":"Closed issue \"can't define `is` prop to functional component\" (#8232)"},{"Id":"326074827","IsPullRequest":false,"CreatedAt":"2018-05-24T11:33:58","Actor":"robertjk","Number":"8244","RawContent":null,"Title":"Add note on `.sync` camelCasing in documentation","State":"closed","Body":"### What problem does this feature solve?\r\nThe problem is that the documentation on [Custom Events: Event Names](https://vuejs.org/v2/guide/components-custom-events.html#Event-Names) states:\r\n\r\n> we recommend you always use kebab-case for event names.\r\n\r\nWith `.sync` modifier you must emit event `update:propertyName` with propertyName camelCased. With kebab-case it won't work. So it's not **always**: more like always unless you emit event for `.sync`.\r\n\r\n### What does the proposed API look like?\r\nYou should add a note about that in [Custom Events: Event Names](https://vuejs.org/v2/guide/components-custom-events.html#Event-Names).\r\n\r\nAlso in the documentation [Custom Events: `.sync` modifier](https://vuejs.org/v2/guide/components-custom-events.html#sync-Modifier) I would change the example to use a property with multiple word name (now it's a single word `title`, which doesn't help with this problem) and/or add a note about this event name incosistency with previous recommendation on the same page (\"always use kebab case\").\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8244","RelatedDescription":"Closed issue \"Add note on `.sync` camelCasing in documentation\" (#8244)"},{"Id":"325945531","IsPullRequest":false,"CreatedAt":"2018-05-24T08:24:21","Actor":"DengRiGuang","Number":"8242","RawContent":null,"Title":"当我把服务器中的图片资源替换掉的时候，拿到服务器返回的地址后替换当前图片时，图片有时不刷新","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[http://192.168.0.160/#/test?orderid=152697762544104&type=update](http://192.168.0.160/#/test?orderid=152697762544104&type=update)\r\n\r\n### Steps to reproduce\r\n在手机浏览器中点击上传图片按钮后，第一张图片有时能刷新出来，有时刷新不出来，这个网页是要在微信网页中展示的(这里我写死了第一张替换，只看第一张效果)\r\n\r\n### What is expected?\r\n图片能够在替换掉地址后刷新出来而不是刷新页面才展示\r\n\r\n### What is actually happening?\r\n图片刷新不出来\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8242","RelatedDescription":"Closed issue \"当我把服务器中的图片资源替换掉的时候，拿到服务器返回的地址后替换当前图片时，图片有时不刷新\" (#8242)"},{"Id":"325918670","IsPullRequest":false,"CreatedAt":"2018-05-24T00:09:38","Actor":"nemtsov","Number":"8241","RawContent":null,"Title":"VueSSRServerPlugin produces a slow-to-parse JSON for large projects","State":"open","Body":"### What problem does this feature solve?\r\nMakes for a better development experience with vue SSR.\r\n\r\nI was looking into why it takes 500ms to render an single-component page from the server in our fairly large application and found an interesting issue. Webpack creates ~40 bundles for us. Altogether, these weigh ~20MB. The way  `VueSSRServerPlugin` plugin works, as you know, is it combines all of these files into a single `vue-ssr-server-bundle.json` file. Reading that file in node is fast (5ms on average) for us, but after reading it we need to `JSON.parse` it before providing to `createBundleRenderer` and _that_ takes ~400ms.\r\n\r\nInitially I was thinking of using webpack's `splitChunks`, to reduce the file-size (our router dynamically imports top-level pages, so each chunk could benefit from not having to bring in common component) but `VueSSRServerPlugin` does not support that (and throws the \"Server-side bundle should have one single entry file\" error).\r\n\r\n### What does the proposed API look like?\r\nI'm not exactly sure what to do here at this point as I just noticed this issue. I'm concerned that as the app grows, the json parse time will increase adding seconds to the load-time in development.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8241","RelatedDescription":"Open issue \"VueSSRServerPlugin produces a slow-to-parse JSON for large projects\" (#8241)"},{"Id":"325868813","IsPullRequest":true,"CreatedAt":"2018-05-23T20:51:45","Actor":"eddyerburgh","Number":"8240","RawContent":null,"Title":"Add async option","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\n\r\nCloses #8200\r\n\r\nWe can use this in Vue Test Utils to run tests synchronously without editing Vue internals\r\n","Url":"https://github.com/vuejs/vue/pull/8240","RelatedDescription":"Open PR \"Add async option\" (#8240)"},{"Id":"325666730","IsPullRequest":false,"CreatedAt":"2018-05-23T20:50:07","Actor":"AndreasCag","Number":"8237","RawContent":null,"Title":"Vue doesn't call watcher when you change prop in beforeDestroy","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/86s8qufj/](https://jsfiddle.net/86s8qufj/)\r\n\r\n### Steps to reproduce\r\n1. Open reproduction link\r\n2. Open console\r\n3. Click to button \"Toggle TestComponent\". \r\nThis create TestComponent for you.\r\n4. Try to change something in input. You can see 'In testInfo watcher'  in console, which means testInfo watcher have called.\r\n5. Click to button \"Toggle TestComponent\" again. \r\nThis destroy TestComponent. \r\nIn beforeDestroy hook I change 'testInfo' property. \r\nBut you can see only 'In beforeDestroy' in console instead of 'In beforeDestroy' and 'In testInfo watcher'.\r\n\r\n### What is expected?\r\nI expect that watcher for 'testInfo' property will be called when I change it in beforeDestory hook.\r\n\r\n### What is actually happening?\r\nI change 'testInfo' property in beforeDestroy hook, but watcher doesn't called.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8237","RelatedDescription":"Closed issue \"Vue doesn't call watcher when you change prop in beforeDestroy\" (#8237)"},{"Id":"325718376","IsPullRequest":false,"CreatedAt":"2018-05-23T20:44:17","Actor":"Kilgaloon","Number":"8239","RawContent":null,"Title":"Reordering elements in array","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6smnvy7n/](https://jsfiddle.net/6smnvy7n/)\r\n\r\n### Steps to reproduce\r\nWhen fiddle is started console log will show proper order of elements in array.\r\nClicking on button will change places of those two elements and console log new array.\r\nItems don't move on view, they stay same despite array elements changed places\r\n\r\n### What is expected?\r\nElements need to change places in view\r\n\r\n### What is actually happening?\r\nElements stay on same place in view\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8239","RelatedDescription":"Closed issue \"Reordering elements in array\" (#8239)"},{"Id":"325659615","IsPullRequest":false,"CreatedAt":"2018-05-23T20:42:45","Actor":"ridaamirini","Number":"8236","RawContent":null,"Title":"v-model <select> default/wrong option get selected on ajax/option render","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/m5vxyl321j](https://codesandbox.io/s/m5vxyl321j)\r\n\r\n### Steps to reproduce\r\nSee example. ( TestSelect.vue )\r\n\r\n### What is expected?\r\nThe select should render, and the option with the same value as the v-model should be selected.\r\n\r\n### What is actually happening?\r\nThe first option in the select is active.\r\n\r\n---\r\nMy workaround:  https://codesandbox.io/s/ym9ro4qnw9\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8236","RelatedDescription":"Closed issue \"v-model <select> default/wrong option get selected on ajax/option render\" (#8236)"},{"Id":"325614415","IsPullRequest":false,"CreatedAt":"2018-05-23T12:45:13","Actor":"luohanwen","Number":"8234","RawContent":null,"Title":"vue :style bug","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/haven-luo/pen/gzyexM](https://codepen.io/haven-luo/pen/gzyexM)\r\n\r\n### Steps to reproduce\r\nlook the codepen html\r\n\r\n### What is expected?\r\n<ul :style=\"{'animationDuration':'1s'}\">\r\n渲染结果\r\n<ul style=\"-webkit-animation-duration:1s\">\r\n\r\n### What is actually happening?\r\n<ul :style=\"{'animationDuration':'1s'}\">\r\n渲染结果\r\n<ul style=\"-webkit-animation:1s\">\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8234","RelatedDescription":"Closed issue \"vue :style bug\" (#8234)"},{"Id":"325625625","IsPullRequest":false,"CreatedAt":"2018-05-23T12:44:53","Actor":"yangdan8","Number":"8235","RawContent":null,"Title":"v-text中绑定的多个连续空格无法正常显示","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rl37koz6wo](https://codesandbox.io/s/rl37koz6wo)\r\n\r\n### Steps to reproduce\r\nIndented.vue页面中的属性文本内容有多个空格\r\n\r\n### What is expected?\r\n连续的空格显示多个\r\n\r\n### What is actually happening?\r\n连续的只显示了一个\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8235","RelatedDescription":"Closed issue \"v-text中绑定的多个连续空格无法正常显示\" (#8235)"},{"Id":"325675456","IsPullRequest":false,"CreatedAt":"2018-05-23T12:06:55","Actor":"benjamingr","Number":"8238","RawContent":null,"Title":"👋 Vue reactivity engine and MobX 🖖","State":"closed","Body":"Hey,\r\n\r\nVue is cool, over at React land MobX ( https://github.com/mobxjs/mobx/ ) takes a similar approach by defining getters/setters. \r\n\r\nThe architectural nature of Vue apps is much closer to React+MobX than the typical React architecture and MobX is used and trusted by some [big companies](https://github.com/mobxjs/mobx/issues/681)\r\n\r\nI am not aware of any knowledge sharing or idea sharing between the projects. I think it would be really cool if we explore possibilities to collaborate.\r\n\r\nSome areas of collaboration which could be cool:\r\n - Standardized benchmarks.\r\n - Optimization tips and what things that worked out and didn't.\r\n - Good user experience for things like circular references.\r\n - What code can be shared between libraries or extracted.\r\n - Discuss the transition to from getters/setters to proxies.\r\n - Discuss what's hard from the language PoV to provide feedback to TC39.\r\n\r\nI am explicitly not suggesting anything concrete. Just to get the discussion started. I got the idea after I started participating in SinonJS and someone from Jest reached out to us in order to use a shared code component.\r\n\r\nWhat do you think?\r\n\r\n(And I want to point out that \"no\" is also a perfectly acceptable response here)\r\n\r\n----\r\n\r\nFull disclosure - I am a part of the MobX team - MobX is written and is the brainchild of @mweststrate - I am also probably quite terrible at Vue itself :D\r\n\r\nIt's possible Michel reached out in the past (or vice versa) and the discussion simply isn't public.","Url":"https://github.com/vuejs/vue/issues/8238","RelatedDescription":"Closed issue \"👋 Vue reactivity engine and MobX 🖖\" (#8238)"},{"Id":"325609922","IsPullRequest":true,"CreatedAt":"2018-05-23T08:54:28","Actor":"yongningfu","Number":"8233","RawContent":null,"Title":"fix(compiler): remove the extra space of v-for alias","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n**It is not a bug, but it will be more friendly to code output.** In terms of semantics, alias is a variable. It should remove spaces.\r\n**before**\r\n\r\n![image](https://user-images.githubusercontent.com/9846613/40413746-36a18a6a-5ea9-11e8-88ef-05356815b630.png)\r\n\r\n\r\n**after**\r\n\r\n![image](https://user-images.githubusercontent.com/9846613/40414017-d3602366-5ea9-11e8-922c-a0dea194c28f.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8233","RelatedDescription":"Open PR \"fix(compiler): remove the extra space of v-for alias\" (#8233)"},{"Id":"325423873","IsPullRequest":false,"CreatedAt":"2018-05-22T19:33:01","Actor":"choyg","Number":"8231","RawContent":null,"Title":"v-model on mobile not updating until a space is pressed","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yyx990803/xkkbfL3L/?utm_source=website&utm_medium=embed&utm_campaign=xkkbfL3L](https://jsfiddle.net/yyx990803/xkkbfL3L/?utm_source=website&utm_medium=embed&utm_campaign=xkkbfL3L)\r\n\r\n### Steps to reproduce\r\nhttps://www.youtube.com/watch?v=y8CASLitwdw\r\n\r\n1. Type into input/textarea with Android (don't have iOS to test with)\r\n\r\n### What is expected?\r\nInput data should be updated per keypress\r\n\r\n### What is actually happening?\r\nInput data is only updated after a space is pressed\r\n\r\n---\r\nReproduced on Android 7.1 Chrome 66 and Android  4.4.2 Firefox 60\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8231","RelatedDescription":"Closed issue \"v-model on mobile not updating until a space is pressed\" (#8231)"},{"Id":"325320846","IsPullRequest":false,"CreatedAt":"2018-05-22T18:26:07","Actor":"windyflying","Number":"8228","RawContent":null,"Title":"Error in render: \"ReferenceError: \"sp\" undefined\"","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/windyflying/pen/JvzvRb](https://codepen.io/windyflying/pen/JvzvRb)\r\n\r\n### Steps to reproduce\r\n1.用Chrome或Firefox或Edge打开重现链接，查看结果，代码按预期工作。\r\n2.用IE11打开重现链接，代码不能按预期运行。检查浏览器控制台，有运行时错误，如标题。\r\n\r\n### What is expected?\r\n没有运行时错误\r\n\r\n### What is actually happening?\r\n出现运行时错误\r\n\r\n---\r\n编译后的模板函数在IE11、 IE10和工作正常的浏览器的不一致。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8228","RelatedDescription":"Closed issue \"Error in render: \"ReferenceError: \"sp\" undefined\"\" (#8228)"},{"Id":"325287081","IsPullRequest":false,"CreatedAt":"2018-05-22T18:01:09","Actor":"tornography","Number":"8227","RawContent":null,"Title":"css modules get overridden by global styles","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/9lw567vr9y](https://codesandbox.io/s/9lw567vr9y)\r\n\r\n### Steps to reproduce\r\nNote: Sandbox is behaving diffeerently from actual code!\r\n\r\n1. @import '~bootstrap/scss/bootstrap.scss'; // in App.vue\r\n2. add `class=\"list-group-item\"` and `:class=\"$style.listGroupItem\"`\r\n3. set `<style modlue>`\r\n4. define \".listGroupItem\" and set `display: flex;`\r\n\r\n### What is expected?\r\nIt's expected that `display: flex` is overriding `display: block` from bootstrap styling.\r\n\r\n### What is actually happening?\r\nThe global bootstrap styling is loaded after css module, so due to the same css specificity, order of loading wins.\r\nAnd so bootstrap is overriding css modules.\r\n\r\n---\r\nBahavior is ok if I switch to `<style scoped lang=\"scss\">`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8227","RelatedDescription":"Closed issue \"css modules get overridden by global styles\" (#8227)"},{"Id":"325274844","IsPullRequest":false,"CreatedAt":"2018-05-22T17:52:44","Actor":"gtarsia","Number":"8226","RawContent":null,"Title":"console.warn when Vue is already defined on window","State":"closed","Body":"### What problem does this feature solve?\r\nI went from referencing vue from unpkg from an html `<script>` to using webpack.  \r\nI forgot to remove those `<script>`, so I went a bit crazy because Vue.set wasn't doing anything.  \r\n\r\nI think this warning would really help with that problem for people making that mistake when migrating to webpack.\r\n\r\n### What does the proposed API look like?\r\nI don't think the API would change.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8226","RelatedDescription":"Closed issue \"console.warn when Vue is already defined on window\" (#8226)"},{"Id":"325392268","IsPullRequest":false,"CreatedAt":"2018-05-22T17:45:02","Actor":"miljan-aleksic","Number":"8230","RawContent":null,"Title":"v-model support with functional components","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/0mj5l70xwn](https://codesandbox.io/s/0mj5l70xwn)\r\n\r\n### Steps to reproduce\r\nSet two inputs with v-model, one directly and another using a functional component as wrapper.\r\n\r\n### What is expected?\r\nThe same binding behaviour on both inputs.\r\n\r\n### What is actually happening?\r\nOnly the standard input works, the functional component input doesn't get bind the value but it does get binded an input event with an unexpected behaviout. \r\n\r\n---\r\nThe reason I would wrap an input into a functional component is to customize it look, while expecting vue to still apply all the v-model workarounds around it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8230","RelatedDescription":"Closed issue \"v-model support with functional components\" (#8230)"},{"Id":"325387041","IsPullRequest":true,"CreatedAt":"2018-05-22T17:12:41","Actor":"KaelWD","Number":"8229","RawContent":null,"Title":"fix(types): add refInFor to VNodeData","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nSee #4035 and #8225\r\n`refInFor` is also mentioned in https://github.com/vuejs/babel-plugin-transform-vue-jsx#difference-from-react-jsx and can be seen in the generated code on https://vuejs.org/v2/guide/render-function.html#Template-Compilation\r\n","Url":"https://github.com/vuejs/vue/pull/8229","RelatedDescription":"Open PR \"fix(types): add refInFor to VNodeData\" (#8229)"},{"Id":"325256117","IsPullRequest":false,"CreatedAt":"2018-05-22T14:00:50","Actor":"adalberth","Number":"8225","RawContent":null,"Title":"Vue refs works differently in template vs render function","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/Stupid/pen/WJmgjm?editors=1010](https://codepen.io/Stupid/pen/WJmgjm?editors=1010)\r\n\r\n### Steps to reproduce\r\nCreate ref within template and in render function, template returns array, render function returns latest item in loop.\r\n\r\n### What is expected?\r\nrender functions should return an array of the \"refs\" (https://vuejs.org/v2/guide/render-function.html#v-if-and-v-for) \r\n\r\n### What is actually happening?\r\nOf course it makes sense that the render function returns the last ref as JS should. But in vue shouldn't it return an array as the template do?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8225","RelatedDescription":"Closed issue \"Vue refs works differently in template vs render function\" (#8225)"},{"Id":"325233231","IsPullRequest":false,"CreatedAt":"2018-05-22T10:29:16","Actor":"windyflying","Number":"8224","RawContent":null,"Title":"Error in render: \"ReferenceError: \"sp\" undefined\"","State":"closed","Body":"## Vue.js version\r\n2.5.16\r\n\r\n## Reproduction Link\r\n[codepen](https://codepen.io/windyflying/pen/JvzvRb)\r\n\r\n## Steps to reproduce\r\nPlease open the link in IE11 and inspect the console panel\r\n\r\n## What is Expected?\r\n![expected](https://user-images.githubusercontent.com/13942593/40357065-9bcca5ee-5ded-11e8-8043-df9341f15480.png)\r\n\r\n## What is actually happening?\r\n![real](https://user-images.githubusercontent.com/13942593/40356053-9ce8120e-5dea-11e8-9392-24d2ef49069f.png)\r\n\r\n## More information\r\nIt works well in latest Chrome and Firefox and Edge\r\nthe generated code snippets:\r\nnormal:\r\n![chorme](https://user-images.githubusercontent.com/13942593/40356663-51139e1e-5dec-11e8-9f35-d8ec40f579c0.png)\r\nwrong:\r\n![vue-parser-ie](https://user-images.githubusercontent.com/13942593/40356693-710a9254-5dec-11e8-86e3-fbb75f8772cb.png)\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/8224","RelatedDescription":"Closed issue \"Error in render: \"ReferenceError: \"sp\" undefined\"\" (#8224)"},{"Id":"325186492","IsPullRequest":false,"CreatedAt":"2018-05-22T09:49:22","Actor":"zisuzon","Number":"8222","RawContent":null,"Title":".trim modifier for every v-model and value in input like fields of form","State":"closed","Body":"### What problem does this feature solve?\r\nOur team was working on a project using NUXT and It is in production now. One thing we missed is to trim the input value. We know there is a modifier '.trim' which works with v-model. But in our app we used 'v-model' and in some special cases 'value' attribute of input tag. \r\n\r\n\r\n### What does the proposed API look like?\r\nThere are so many input fields in various pages and we thought it would be cool if there is an option by which all v-model will automatically trim the input value by-default instead of adding .trim in everywhere manually.\r\n\r\nAlso a modifier to trim the value attribute.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8222","RelatedDescription":"Closed issue \".trim modifier for every v-model and value in input like fields of form\" (#8222)"},{"Id":"325198487","IsPullRequest":false,"CreatedAt":"2018-05-22T09:13:58","Actor":"zhangchunlin","Number":"8223","RawContent":null,"Title":"render() a component with a v-bind property will disappear","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/u27d2kh8/3/](https://jsfiddle.net/u27d2kh8/3/)\r\n\r\n### Steps to reproduce\r\nin https://jsfiddle.net/u27d2kh8/4/ we cannot see the age column\r\nBut in https://jsfiddle.net/u27d2kh8/1/ we can see it, the difference is that:\r\n\r\nin 4: template: '<span :test={{myt1}}> age is: {{myage}}</span>'\r\nin 1: template: '<span>age is: {{myage}}</span>'\r\n\r\n### What is expected?\r\nCan show the v-bind property.\r\n\r\n### What is actually happening?\r\nThe span disappear after add a v-bind property\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8223","RelatedDescription":"Closed issue \"render() a component with a v-bind property will disappear\" (#8223)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"326651642","IsPullRequest":false,"CreatedAt":"2018-05-26T17:08:40","Actor":"nchudleigh","Number":"2222","RawContent":null,"Title":"Search on documentation does not show results or direct to results on enter press","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/](https://router.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nType something into the search box on https://router.vuejs.org/\r\n\r\n### What is expected?\r\nI am assuming it is intended to have the same behaviour as the core documentation https://vuejs.org/v2/guide/ \r\n\r\n### What is actually happening?\r\nNo results popdown is displayed\r\n\r\n---\r\nRan into this bug when trying to search for something in the documentation.  I checked the issues list on  https://github.com/vuejs/vue-router/issues and did not see anything related to the search on the documentation\r\n\r\nNoticed this bug in the console, could be related (though I doubt that)\r\nhttps://imgur.com/a/kybpG3j\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2222","RelatedDescription":"Closed issue \"Search on documentation does not show results or direct to results on enter press\" (#2222)"},{"Id":"326566824","IsPullRequest":true,"CreatedAt":"2018-05-26T07:34:34","Actor":"mrv1k","Number":"2221","RawContent":null,"Title":"docs: fix external links from md to html","State":"closed","Body":"The issue was introduced in 266b2368660be685cb7f614c0d225b8d7186a55f\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2221","RelatedDescription":"Closed or merged PR \"docs: fix external links from md to html\" (#2221)"},{"Id":"324745355","IsPullRequest":true,"CreatedAt":"2018-05-25T15:07:00","Actor":"petkunandrew","Number":"2204","RawContent":null,"Title":"fix grammar getting-started.md (ru)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2204","RelatedDescription":"Closed or merged PR \"fix grammar getting-started.md (ru)\" (#2204)"},{"Id":"326555623","IsPullRequest":false,"CreatedAt":"2018-05-25T15:06:11","Actor":"brunokunace","Number":"2220","RawContent":null,"Title":"[Docs] Changed to Vuepress?","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/](https://router.vuejs.org/)\r\n\r\n### Steps to reproduce\r\ncheck on mobile or any small screen and click to hamburger menu\r\n\r\n### What is expected?\r\nOpen menu and results of search bar\r\n\r\n### What is actually happening?\r\nlink of menu dont work (dont make anything). Same as search input\r\n\r\n---\r\nVuePress is awesome, please fix it!!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2220","RelatedDescription":"Closed issue \"[Docs] Changed to Vuepress?\" (#2220)"},{"Id":"326550180","IsPullRequest":true,"CreatedAt":"2018-05-25T14:37:34","Actor":"Alex-Sokolov","Number":"2219","RawContent":null,"Title":"[Ready to merge] Russian translation moved to VuePress","State":"open","Body":"Ready to merge!","Url":"https://github.com/vuejs/vue-router/pull/2219","RelatedDescription":"Open PR \"[Ready to merge] Russian translation moved to VuePress\" (#2219)"},{"Id":"326396930","IsPullRequest":true,"CreatedAt":"2018-05-25T12:42:07","Actor":"jumpalottahigh","Number":"2217","RawContent":null,"Title":"Fix a broken link that throws a 404","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2217","RelatedDescription":"Closed or merged PR \"Fix a broken link that throws a 404\" (#2217)"},{"Id":"326203789","IsPullRequest":false,"CreatedAt":"2018-05-25T12:41:35","Actor":"tristancalderbank","Number":"2213","RawContent":null,"Title":"[Docs] Broken link on Vue Router homepage","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/](https://router.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nClick the link that says \"Get started\". This link is pointing to https://router.vuejs.org/essentials/getting-started.html, but page does not exist.\r\n\r\n### What is expected?\r\nShould instead be a link to https://router.vuejs.org/guide/\r\n\r\n### What is actually happening?\r\n404 Not Found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2213","RelatedDescription":"Closed issue \"[Docs] Broken link on Vue Router homepage\" (#2213)"},{"Id":"326442857","IsPullRequest":true,"CreatedAt":"2018-05-25T12:34:19","Actor":"Alex-Sokolov","Number":"2218","RawContent":null,"Title":"[Docs] Update fallback-option in API","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2218","RelatedDescription":"Closed or merged PR \"[Docs] Update fallback-option in API\" (#2218)"},{"Id":"326312503","IsPullRequest":false,"CreatedAt":"2018-05-25T12:04:24","Actor":"NathanHolsombeck","Number":"2216","RawContent":null,"Title":"Decoding a url with &amp; fails","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/oa2muvbo/2/](https://jsfiddle.net/oa2muvbo/2/)\r\n\r\n### Steps to reproduce\r\nThis is not reproducible with jsfiddle... I can't really pass query params and it doesn't reproduce when hardcoded as a vuew-router link.\r\nThe url http://site.com?a=b&amp;c=d is not properly decoded using the vue router. This only reproduces when coming from outside the application, links from inside the SPA don't have this issue.\r\n\r\nThe bug is here: vue-router/src/util/query.js Line 46\r\nThe url should be decoded before splitting it by '&'.\r\n\r\n\r\n### What is expected?\r\nThe url http://site.com?a=b&amp;c=d should be processed by the vue router and the query params extracted. For instance:\r\na=b\r\nc=d\r\n\r\n### What is actually happening?\r\nResult is:\r\na=b\r\namp;c=d\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2216","RelatedDescription":"Closed issue \"Decoding a url with &amp; fails\" (#2216)"},{"Id":"326304735","IsPullRequest":false,"CreatedAt":"2018-05-24T21:38:22","Actor":"NathanHolsombeck","Number":"2215","RawContent":null,"Title":"Decoding url with &amp; fails","State":"closed","Body":"The url `http://site.com?a=b&amp;c=d` is not properly decoded using the vue router. \r\n\r\nThe bug is here: https://github.com/vuejs/vue-router/blob/9bd8f3c73b5035248ceca80ca4073e6bfa22b05d/src/util/query.js#L46\r\n\r\nThe url should be decoded before splitting it by '&'.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2215","RelatedDescription":"Closed issue \"Decoding url with &amp; fails\" (#2215)"},{"Id":"326259085","IsPullRequest":false,"CreatedAt":"2018-05-24T19:28:05","Actor":"breadadams","Number":"2214","RawContent":null,"Title":"[Docs]: All links to docs from google search results return 404","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nhttp://lmgtfy.com/?q=vue-router+how+to+safeguard\r\n\r\n### Steps to reproduce\r\nVisit a link directly to the `router.vuejs.org` docs via Google search results.\r\n\r\n**Or**, visit the link that the result is actually linking to directly 😅 https://router.vuejs.org/en/advanced/navigation-guards.html\r\n\r\n### What is expected?\r\nShould load the docs page like usual, ie. https://router.vuejs.org/guide/advanced/navigation-guards.html\r\n\r\n### What is actually happening?\r\nBeing taken to `https://router.vuejs.org/guide/advanced/*/` and seeing a 404\r\n\r\n![image](https://user-images.githubusercontent.com/5795227/40509087-55113eb4-5f99-11e8-83b1-99edf0c66452.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2214","RelatedDescription":"Open issue \"[Docs]: All links to docs from google search results return 404\" (#2214)"},{"Id":"325564978","IsPullRequest":true,"CreatedAt":"2018-05-24T13:21:36","Actor":"Jinjiang","Number":"2208","RawContent":null,"Title":"[docs] using VuePress","State":"closed","Body":"Only preserved English and Chinese versions. Other languages are moved to `docs-gitbook` folder temporarily. If any language is good to use vuepress too, it can be done with the folder.\r\n\r\nAdditionally, this PR has:\r\n\r\n* used yarn\r\n* removed gitbook deps & scripts\r\n* adjusted heading levels\r\n* used the repo's README in docs\r\n* fixed some format details in Chinese docs\r\n\r\nThanks.","Url":"https://github.com/vuejs/vue-router/pull/2208","RelatedDescription":"Closed or merged PR \"[docs] using VuePress\" (#2208)"},{"Id":"326025600","IsPullRequest":true,"CreatedAt":"2018-05-24T09:01:43","Actor":"mik-laj","Number":"2212","RawContent":null,"Title":"Update year in copyright","State":"closed","Body":"Hello,\r\n\r\nA bad year is entered in the copyright note.\r\n\r\nRegards,","Url":"https://github.com/vuejs/vue-router/pull/2212","RelatedDescription":"Closed or merged PR \"Update year in copyright\" (#2212)"},{"Id":"325856600","IsPullRequest":false,"CreatedAt":"2018-05-23T20:39:57","Actor":"davincif","Number":"2211","RawContent":null,"Title":"Error: Can't resolve 'vue-router'","State":"closed","Body":"### Version\r\n\"vue\": \"^2.5.11\",\r\n\"vue-route\": \"^1.5.1\"\r\n\r\n### Reproduction link\r\nhttps://pastebin.com/5nk5U3Fd\r\n\r\n### Steps to reproduce\r\nnpm install vue-route --save\r\nadd the line:\r\n    import VueRouter from 'vue-router';\r\nto the main.js file\r\nnpm run dev\r\n\r\n### What is expected?\r\nrun\r\n\r\n### What is actually happening?\r\ncrashing\r\n\r\n---\r\nerror msg:\r\n\r\nFailed to compile.\r\n\r\n./src/main.js\r\nModule not found: Error: Can't resolve 'vue-router' in '/home/davincif/Documents/projects/pessoal/davincif.com/src'\r\n @ ./src/main.js 2:0-35\r\n @ multi (webpack)-dev-server/client?http://localhost:8080 webpack/hot/dev-server ./src/main.js\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2211","RelatedDescription":"Closed issue \"Error: Can't resolve 'vue-router'\" (#2211)"},{"Id":"325703252","IsPullRequest":false,"CreatedAt":"2018-05-23T13:35:55","Actor":"danieltutu","Number":"2210","RawContent":null,"Title":"passing props to component","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/91vLms06/](https://jsfiddle.net/91vLms06/)\r\n\r\n### Steps to reproduce\r\n```\r\nconst CreateComponent = Vue.component('create', {\r\n\tprops: ['user'],\r\n  /*\r\n  props: {\r\n  \tuser: {\r\n    \ttype: Object,\r\n      required: true\r\n    }\r\n  },\r\n  */\r\n  template: '<div>User data: {{user}}</div>'\r\n});\r\n\r\nconst router = new VueRouter({\r\n  routes: [\r\n    { path: '/create', name: 'create', component: CreateComponent},\r\n  ]\r\n});\r\n\r\nconst app = new Vue({\r\n\tel: '#app',\r\n  router: router,\r\n  created: function () {\r\n    const self = this;\r\n\t\t// ajax request returning the user\r\n    const userData = {'name': 'username'}\r\n    self.$router.push({name:'create', props: { user: userData }});\r\n  }\r\n});\r\n\r\n<div id=\"app\">\r\n  <router-view></router-view>\r\n</div>\r\n\r\n```\r\n\r\n### What is expected?\r\nI should see the user data in JSON format.\r\n\r\n### What is actually happening?\r\nThe `user` property is undefined or null.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2210","RelatedDescription":"Closed issue \"passing props to component\" (#2210)"},{"Id":"325698871","IsPullRequest":false,"CreatedAt":"2018-05-23T13:12:06","Actor":"danieltutu","Number":"2209","RawContent":null,"Title":"passing props to component","State":"closed","Body":"```\r\nconst CreateComponent = Vue.component('create', {\r\n  props: ['user'],\r\n  template: '<div>{{user}}</div>\r\n});\r\n\r\nconst router = new VueRouter({\r\n  routes: [\r\n    { path: '/create', name: 'create', component: CreateComponent},\r\n  ]\r\n});\r\n\r\nconst app = new Vue({\r\n    el: '#app',\r\n  created: function () {\r\n    const self = this;\r\n\r\n    $http.all([\r\n      self.accountService.getUserDataByAuth0Id(auth0UserId),\r\n      ...\r\n    ]).then(success, error);\r\n\r\n    function success(response) {\r\n      const userData = response[0].data.data[0];\r\n      self.$router.push({name:'create', props: { user: userData }});\r\n    }\r\n  },\r\n});\r\n```\r\n\r\nI am trying to pass the props to a component but it doesn't work. In documentation it's said that if you specify the `props` as an object, it will be assigned to the properties of the component. What am I doing wrong?\r\nI have the user on the response, nothing is displayed when the code is executed.","Url":"https://github.com/vuejs/vue-router/issues/2209","RelatedDescription":"Closed issue \"passing props to component\" (#2209)"},{"Id":"325349491","IsPullRequest":false,"CreatedAt":"2018-05-22T18:06:59","Actor":"polyphonic13","Number":"2207","RawContent":null,"Title":"Router Link Context Menu","State":"closed","Body":"### What problem does this feature solve?\r\n# Background\r\n\r\nCurrently, there is a lack of right-click context menu for Router Links. This would be a great addition to vue-router, router link elements.\r\n\r\nThe following points are cited from the vue-router documents: \r\n>It works the same way in both HTML5 history mode and hash mode, so if you ever decide to switch mode, or when the router falls back to hash mode in IE9, nothing needs to be changed.\r\n\r\n>In HTML5 history mode, router-link will intercept the click event so that the browser doesn't try to reload the page.\r\n\r\n>When you are using the base option in HTML5 history mode, you don't need to include it in to prop's URLs.\r\n\r\nHowever, there are cases where the user may wish to open a router-link in a new window, in order to maximize productivity. For example, our team is currently rebuilding an internal campaign management system. There are several sections to this, which can be viewed simultaneously by our end users. The users prefer the option to open multiple tabs, in order to see sets of data side-by-side. \r\n\r\nAt present, there is no context menu associated with view router links--right-clicks open the standard browser context menu. This prevents offering the user the *option* to navigate to a link in a new tab. \r\n\r\n# Proposal\r\n\r\nAdd an optional context menu feature to router-link elements. The feature would include the following: \r\n- mimic browser's native right-click context menu for anchor tags\r\n- open a router-link using the `target=_blank` method, when option selected by user from context menu\r\n- open router-links in same tab by default\r\n- optional: only include the context menu if a property is set to true within the code (TBD) \r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n`<router-link to=\"/my-route\" has-context-menu=\"true\"></router-link>`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2207","RelatedDescription":"Closed issue \"Router Link Context Menu\" (#2207)"},{"Id":"325283002","IsPullRequest":false,"CreatedAt":"2018-05-22T13:00:18","Actor":"victor192","Number":"2206","RawContent":null,"Title":"$router.push encodes special characters","State":"closed","Body":"If I write the following code `$router.push({query: {q: 'sort(desc)'}})` then in the browser url the following string is displayed: `?q=sort%28desc%29`. Is it possible to make the `push` method not encode special characters?","Url":"https://github.com/vuejs/vue-router/issues/2206","RelatedDescription":"Closed issue \"$router.push encodes special characters\" (#2206)"},{"Id":"325124916","IsPullRequest":false,"CreatedAt":"2018-05-22T06:41:49","Actor":"SecMao","Number":"2205","RawContent":null,"Title":"Nginx cases the same content in router page reloading","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8e1ghfme/2/](https://jsfiddle.net/8e1ghfme/2/)\r\n\r\n### Steps to reproduce\r\nI have a project in which pages are split to left/middle/right parts. The left and right parts in different routers display different Component. But the middle part keeps unchanged. When I played in my own project, switch the routers, everything goes well. Then I published the project to Production Environment, where we use nginx to redirect request. The problem occurs. When I change route 1 to route 2, the middle part reload too. \r\n\r\nmy router config:\r\nnew Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {\r\n      path:  '/index',\r\n      components: {\r\n        Left: Left,\r\n        Middle: Middle,\r\n        Right: Right\r\n      }\r\n    },\r\n    {\r\n      path: '/working',\r\n      components: {\r\n        Left: workingLeft,\r\n        Middle: Middle,\r\n        Right: workingRight\r\n      }\r\n    },\r\n    {\r\n      path: '/powermode',\r\n      components: {\r\n        Left: workingLeft,\r\n        Middle: Middle,\r\n        Right: powerRight\r\n      }\r\n    }\r\n  ]\r\n})\r\n\r\n### What is expected?\r\nsame component in different routers do not reload\r\n\r\n### What is actually happening?\r\nsame component in different routers do reload\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2205","RelatedDescription":"Closed issue \"Nginx cases the same content in router page reloading\" (#2205)"},{"Id":"324600172","IsPullRequest":true,"CreatedAt":"2018-05-19T04:31:56","Actor":"emanuelmutschlechner","Number":"2203","RawContent":null,"Title":"Add feature external routes","State":"open","Body":"This commit adds support for external routes in `routes` of the router.\r\n\r\nFeature request:\r\n#1280\r\n\r\nLive demo:\r\nhttps://7496x53w10.codesandbox.io/\r\n\r\nInteractive example:\r\nhttps://codesandbox.io/s/7496x53w10","Url":"https://github.com/vuejs/vue-router/pull/2203","RelatedDescription":"Open PR \"Add feature external routes\" (#2203)"},{"Id":"324352138","IsPullRequest":false,"CreatedAt":"2018-05-18T12:01:49","Actor":"korewayume","Number":"2202","RawContent":null,"Title":"Sometimes the feat `Lazy Loading Routes`  has odd build problem.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/korewayume/abc](https://github.com/korewayume/abc)\r\n\r\n### Steps to reproduce\r\n\r\nrun command : `npm run serve`\r\n\r\ncommit init is generate by @vue/cli 3.0.0-beta.10\r\n\r\ncommit success write two `.vue` files:  `src/views/a/index.vue` and `src/views/b/index.vue`, they only have one line different. And `src/views/a/index.vue` is not referenced by `vue-router`.\r\n\r\ncommit error toggle the line `import router from '@/router';` comment status, and now they are same.\r\n\r\nThe later commit show some odd behavior about `Lazy Loading Routes`,  even throught the `asComponent` func never used.\r\n\r\n### What is expected?\r\n`Lazy Loading Routes`  work well\r\n\r\n### What is actually happening?\r\n`Lazy Loading Routes` makes odd\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2202","RelatedDescription":"Closed issue \"Sometimes the feat `Lazy Loading Routes`  has odd build problem.\" (#2202)"},{"Id":"323740543","IsPullRequest":false,"CreatedAt":"2018-05-16T19:04:34","Actor":"aligajani","Number":"2201","RawContent":null,"Title":"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n### Steps to reproduce\r\n**Login Route**\r\n\r\n```\r\n {\r\n        path: '/login',\r\n        name: 'login',\r\n        component: Login,\r\n        meta: { auth: false }\r\n    },\r\n```\r\n\r\n\r\n**404**\r\n\r\n```\r\n{\r\n        path: '/404',\r\n        name: 'error-404',\r\n        component: Error404\r\n    },\r\n```\r\n\r\n**Home**\r\n\r\n```\r\n{\r\n        path: '/',\r\n        name: 'default',\r\n        component: Home,\r\n        meta: { auth: true }\r\n    }\r\n```\r\n\r\n### What is expected?\r\nVisiting login route while authenticated should redirect to home\r\n\r\n### What is actually happening?\r\nVisiting login router while authenticated redirects to 404 route\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2201","RelatedDescription":"Closed issue \"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?\" (#2201)"},{"Id":"323733732","IsPullRequest":false,"CreatedAt":"2018-05-16T18:22:30","Actor":"aligajani","Number":"2200","RawContent":null,"Title":"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?","State":"closed","Body":"**Login Route**\r\n\r\n```\r\n {\r\n        path: '/login',\r\n        name: 'login',\r\n        component: Login,\r\n        meta: { auth: false }\r\n    },\r\n```\r\n\r\n\r\n**404**\r\n\r\n```\r\n{\r\n        path: '/404',\r\n        name: 'error-404',\r\n        component: Error404\r\n    },\r\n```\r\n\r\n**Home**\r\n\r\n```\r\n{\r\n        path: '/',\r\n        name: 'default',\r\n        component: Home,\r\n        meta: { auth: true }\r\n    }\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2200","RelatedDescription":"Closed issue \"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?\" (#2200)"},{"Id":"323050961","IsPullRequest":false,"CreatedAt":"2018-05-15T17:18:32","Actor":"eunjae-lee","Number":"2199","RawContent":null,"Title":"A link to named router is not working with root path of nested routes.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/63b7utzm/19/](https://jsfiddle.net/63b7utzm/19/)\r\n\r\n### Steps to reproduce\r\nFrom the link above, click `/user`.\r\n\r\n### What is expected?\r\nIt's supposed to render `UserHome` component.\r\n\r\n### What is actually happening?\r\nbut it's just rendering `User` component.\r\n\r\n---\r\nIf you try with https://jsfiddle.net/kx7spvh3/1/ , it will work fine.\r\nThe only difference is, this one has links with actual path instead of route names.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2199","RelatedDescription":"Closed issue \"A link to named router is not working with root path of nested routes.\" (#2199)"},{"Id":"323041543","IsPullRequest":false,"CreatedAt":"2018-05-15T02:09:01","Actor":"tanzhiyu","Number":"2198","RawContent":null,"Title":"vue-router滚动行为还支持吗","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2198","RelatedDescription":"Closed issue \"vue-router滚动行为还支持吗\" (#2198)"},{"Id":"323034619","IsPullRequest":false,"CreatedAt":"2018-05-15T01:25:22","Actor":"f2009","Number":"2197","RawContent":null,"Title":"Android8.0版本路由问题","State":"closed","Body":"点击路由跳转链接的时候，第一次点击无反应需要再点一次。之前判断是组件加载慢，但长时间组件都加载不出来就不太合理了。尝试再点一次立刻就加载出来了。或者我连点2次也能很快加载出来。\r\n经测试该现象也只有在Android8.0手机会重现。","Url":"https://github.com/vuejs/vue-router/issues/2197","RelatedDescription":"Closed issue \"Android8.0版本路由问题\" (#2197)"},{"Id":"322599149","IsPullRequest":false,"CreatedAt":"2018-05-14T15:10:38","Actor":"djvonavi","Number":"2194","RawContent":null,"Title":"wrong work history push state","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8](http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8)\r\n\r\n### Steps to reproduce\r\nclick to  Объявления and see browser adreess\r\n\r\n### What is expected?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8//ads\r\n\r\n### What is actually happening?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8/ads\r\n\r\n---\r\nI'm using a vue-router, and history is fashion. I have references such as `/user/578f9322f833fde7b4f479f8//ads, the link itself is spelled correctly, and the request to the server goes along the correct path, but in the address bar the link changes to /user/578f9322f833fde7b4f479f8/ads, that is, without 1 slash, and naturally the page refreshes an incident.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2194","RelatedDescription":"Closed issue \"wrong work history push state\" (#2194)"},{"Id":"322768061","IsPullRequest":false,"CreatedAt":"2018-05-14T10:59:52","Actor":"machao1990","Number":"2196","RawContent":null,"Title":"there are some problems with vue-router in a iframe in ie10","State":"open","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mage1990/pcoucsx6/2/](https://jsfiddle.net/mage1990/pcoucsx6/2/)\r\n\r\n### Steps to reproduce\r\nopen the link above in ie10,not the ie10 in ie11's or edge's  f12\r\nclick the detail button in the list component\r\nclick the back button in the detail component\r\nclick the detail button again button again\r\nThe page turns white\r\n\r\n### What is expected?\r\nThe page can be displayed normally.\r\n\r\n### What is actually happening?\r\nThe page turns white\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2196","RelatedDescription":"Open issue \"there are some problems with vue-router in a iframe in ie10\" (#2196)"},{"Id":"322731684","IsPullRequest":false,"CreatedAt":"2018-05-14T09:10:46","Actor":"raxxarr","Number":"2195","RawContent":null,"Title":"replaceState needs third argument","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/raxxarr/router-demo.git](https://github.com/raxxarr/router-demo.git)\r\n\r\n### Steps to reproduce\r\n- in latest Safari(OS X or iOS)\r\n- add base element: `<base href=\"/app/\">`\r\n- set router mode: history\r\n1. open page 1 via url: localhost:8080/app/p1\r\n2. navigate to /app/p2 by clicking button\r\n3. click history back button on browser\r\n\r\n\r\n### What is expected?\r\njump back to /app/p1\r\n\r\n### What is actually happening?\r\njump to /app/\r\n\r\n---\r\nThis issue is caused by using replaceState without giving a third argument when trying to fix a Firefox scroll issue (https://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js#L9)； This works fine on most browsers except for Safari.\r\nAccording to whatwg spec，if the 3rd argument is not given，browser should set current url into history，but Safari set the base url.\r\nHere is Webkit source code: https://trac.webkit.org/browser/webkit/branches/safari-605.2.8.1-branch/Source/WebCore/page/History.cpp#L157\r\nHere is Blink source code: https://chromium.googlesource.com/chromium/blink/ /master/Source/core/frame/History.cpp#153\r\nAs is seen, what Safari do is not what we expect when we omit the 3rd argument.\r\n\r\nAlthough this is not really a vue-router bug, we can add a third argument(current path) to avoid something weird happen.\r\n\r\nps: this bug is confirmed by Webkit https://bugs.webkit.org/show_bug.cgi?id=182678\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2195","RelatedDescription":"Open issue \"replaceState needs third argument\" (#2195)"},{"Id":"322493811","IsPullRequest":true,"CreatedAt":"2018-05-12T08:30:04","Actor":"emanuelmutschlechner","Number":"2193","RawContent":null,"Title":"feat(link): add 'exact-path' matching option","State":"open","Body":"Improves unfinished pull request #2070 and closes issue #2040","Url":"https://github.com/vuejs/vue-router/pull/2193","RelatedDescription":"Open PR \"feat(link): add 'exact-path' matching option\" (#2193)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"326783393","IsPullRequest":false,"CreatedAt":"2018-05-27T03:07:56","Actor":"zach5078","Number":"1286","RawContent":null,"Title":"The find function didn't check the first item in a array","State":"closed","Body":"https://github.com/vuejs/vuex/blob/b536fbd898ebbd452154d94aabb35c2747d8e2f3/src/util.js#L9\r\n\r\nexample:\r\nconsole.log(find([3, 1, 1, 2], (v) => v > 2))    // undefined\r\n\r\ncorrect version:\r\n```\r\nfunction find (list, f) {\r\n  const { length } = list\r\n  let index = 0\r\n  let value\r\n  while (index < length) {\r\n    value = list[index++]\r\n    if (f(value, index, list)) {\r\n      return value\r\n    }\r\n  }\r\n}\r\n```","Url":"https://github.com/vuejs/vuex/issues/1286","RelatedDescription":"Closed issue \"The find function didn't check the first item in a array\" (#1286)"},{"Id":"326457567","IsPullRequest":true,"CreatedAt":"2018-05-25T09:56:24","Actor":"Alex-Sokolov","Number":"1285","RawContent":null,"Title":"Removed line-break in installation.md","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1285","RelatedDescription":"Open PR \"Removed line-break in installation.md\" (#1285)"},{"Id":"326396741","IsPullRequest":true,"CreatedAt":"2018-05-25T06:52:08","Actor":"ulivz","Number":"1284","RawContent":null,"Title":"docs: fix broken image link at README","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1284","RelatedDescription":"Closed or merged PR \"docs: fix broken image link at README\" (#1284)"},{"Id":"326262342","IsPullRequest":false,"CreatedAt":"2018-05-24T19:38:05","Actor":"atomjar","Number":"1283","RawContent":null,"Title":"404 Error on Getting Started page","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/guide/intro.html](https://vuex.vuejs.org/guide/intro.html)\r\n\r\n### Steps to reproduce\r\nTry to access: https://vuex.vuejs.org/guide/intro.html\r\n\r\n\r\n\r\n### What is expected?\r\nShould show Getting Started page of Vuex Docs.\r\n\r\n### What is actually happening?\r\nThere is a 404 error when visiting the URL: https://vuex.vuejs.org/guide/intro.html\r\n\r\nIt appears that when converted to VuePress, the Getting Started page was moved to: https://vuex.vuejs.org/guide/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1283","RelatedDescription":"Open issue \"404 Error on Getting Started page\" (#1283)"},{"Id":"325538883","IsPullRequest":true,"CreatedAt":"2018-05-24T13:49:13","Actor":"Jinjiang","Number":"1282","RawContent":null,"Title":"Update _redirects for zh-cn","State":"closed","Body":"`/zh-cn/* /zh/:splat`","Url":"https://github.com/vuejs/vuex/pull/1282","RelatedDescription":"Closed or merged PR \"Update _redirects for zh-cn\" (#1282)"},{"Id":"325423929","IsPullRequest":false,"CreatedAt":"2018-05-22T19:03:15","Actor":"vog","Number":"1281","RawContent":null,"Title":"Syntactic sugar for commiting mutations","State":"open","Body":"### What problem does this feature solve?\r\nCommitting mutations has a very strange syntax, which really stands out negatively, compared to the otherwise very elegant APIs found in the Vue/Vuex ecosystem:\r\n\r\n    this.$store.commit('someMutation', args...)\r\n\r\nThe docs mention that this is to emphasize that a commit is not a direct call to the mutation. I don't think this line of reasoning holds in the Vue/Vuex world. In almost all other aspects of Vue/Vuex, the API looks straight forward (e.g. just getting and setting properties), but under the hood a lot of additional logic runs (dependency tracking, etc.). So there is really no need to make committing mutations more cumbersome than they need to be.\r\n\r\nIn addition to making the code harder to read, this leads to additional rules about argument passing.\r\n\r\nMoreover, it is very hard to spot typos in the mutation name early on, as the mutation name is just a string - let alone checking that the call to `commit()` received the correct arguments according to the mutation function. These types of errors should be easy to spot at compile time, but with the current syntax, these are all pushed into runtime.\r\n\r\nFinally, this cumbersome syntax might be (correctly) perceived as boilerplate, especially to beginners. Hence, replacing the commit syntax with a more straight forward syntax might improve the adoption of Vuex.\r\n\r\n### What does the proposed API look like?\r\nInstead of:\r\n\r\n    this.$store.commit('someMutation', args...)\r\n\r\none should be allowed to write:\r\n\r\n    this.$store.someMutation(args...)\r\n\r\nMoreover, it would be great if looking at `this.$store` in the developer console all available mutation methods are shown. That is, the methods should be real properties of this.$store, collected once at program start.\r\n\r\nUnder the hood, of course, these methods might all call some central commit() function.\r\n\r\nAlternative syntax: The above syntax might introduce some name collisions. For example, someone might name one of their mutations \"state\", for whatever reason, making \"this.$store.state\" ambiguous. For the sake of simplicity, these names should just be forbidden as mutation names. But if this is not an option for whatever reason, an intermediate object might do the trick as well. This would be less beautiful, but still better than what we have today:\r\n\r\n    this.$store.commit.someMutation(args...)\r\n\r\nor shorter:\r\n\r\n    this.$store.c.someMutation(args...)\r\n\r\nAs an additional proposal, the old `this.$store.commit()` syntax should be marked deprecated.  And removed in future Vuex versions. This generic call is not needed. Any generic commit call might as well be formulated as `this.$store[mutationName](args...)`, which is still easy to understand and even shorter than `this.$store.commit(mutationName, args...)`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1281","RelatedDescription":"Open issue \"Syntactic sugar for commiting mutations\" (#1281)"},{"Id":"325248154","IsPullRequest":true,"CreatedAt":"2018-05-22T11:22:13","Actor":"ioslh","Number":"1280","RawContent":null,"Title":"Update mutations.md","State":"closed","Body":"mutations 使用 commit 触发；\r\nactions 使用 dispatch 触发。","Url":"https://github.com/vuejs/vuex/pull/1280","RelatedDescription":"Closed or merged PR \"Update mutations.md\" (#1280)"},{"Id":"325171763","IsPullRequest":true,"CreatedAt":"2018-05-22T07:29:58","Actor":"Alex-Sokolov","Number":"1279","RawContent":null,"Title":"[Ready to merge] Russian translation moved to VuePress","State":"open","Body":"Ready to merge!\r\n\r\nP.S.: Maybe delete `docs/core-concepts.md`? Seems like it not used anywhere in VuePress","Url":"https://github.com/vuejs/vuex/pull/1279","RelatedDescription":"Open PR \"[Ready to merge] Russian translation moved to VuePress\" (#1279)"},{"Id":"325136423","IsPullRequest":true,"CreatedAt":"2018-05-22T05:06:12","Actor":"nicedchy","Number":"1278","RawContent":null,"Title":"[docs]: add vuepress lang-ja directory","State":"closed","Body":"I moved from gitbook to vuepress for lang-ja directory.","Url":"https://github.com/vuejs/vuex/pull/1278","RelatedDescription":"Closed or merged PR \"[docs]: add vuepress lang-ja directory\" (#1278)"},{"Id":"324728427","IsPullRequest":false,"CreatedAt":"2018-05-22T02:14:10","Actor":"Jinjiang","Number":"1275","RawContent":null,"Title":"[docs] incompatible with vuepress","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Jinjiang/vuex/tree/vuepress](https://github.com/Jinjiang/vuex/tree/vuepress)\r\n\r\n### Steps to reproduce\r\nnpm run docs\r\n\r\n### What is expected?\r\nJust try vuepress to dev/build docs\r\n\r\npreview: https://5b01b3bb3672df726f83886e--objective-stonebraker-ca8353.netlify.com\r\n\r\n### What is actually happening?\r\nThere always be some errors, until I changed some dev deps:\r\n\r\n1. remove `rollup-plugin-buble`\r\n2. remove (or upgrade v3 -> v4) `webpack`\r\n\r\nby https://github.com/Jinjiang/vuex/commit/b74690d08cb43bff4eaa2031553e004922d802e2\r\n\r\nBut if I changed them, it failed with other npm scripts.\r\n\r\n---\r\nvuepress error branch:\r\n[https://github.com/Jinjiang/vuex/tree/test](https://github.com/Jinjiang/vuex/tree/test)\r\n\r\nvuepress error message:\r\n\r\n```bash\r\n> vuepress dev docs\r\n\r\nExtracting site metadata...TypeError: Cannot destructure property `createHash` of 'undefined' or 'null'.\r\n    at Object.<anonymous> (/Users/xxxxxxxx/vuex/node_modules/mini-css-extract-plugin/dist/index.js:26:44)\r\n    at Module._compile (module.js:641:30)\r\n    at Object.Module._extensions..js (module.js:652:10)\r\n    at Module.load (module.js:560:32)\r\n    at tryModuleLoad (module.js:503:12)\r\n    at Function.Module._load (module.js:495:3)\r\n    at Module.require (module.js:585:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.<anonymous> (/Users/xxxxxxxx/vuex/node_modules/mini-css-extract-plugin/dist/cjs.js:3:18)\r\n    at Module._compile (module.js:641:30)\r\n    at Object.Module._extensions..js (module.js:652:10)\r\n    at Module.load (module.js:560:32)\r\n    at tryModuleLoad (module.js:503:12)\r\n    at Function.Module._load (module.js:495:3)\r\n    at Module.require (module.js:585:17)\r\n    at require (internal/module.js:11:18)\r\n```\r\n\r\nI guess this should be considered as a bug of vuepress or we can do something in Vuex repo to walk around.\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1275","RelatedDescription":"Closed issue \"[docs] incompatible with vuepress\" (#1275)"},{"Id":"325024071","IsPullRequest":true,"CreatedAt":"2018-05-21T22:33:11","Actor":"Jinjiang","Number":"1277","RawContent":null,"Title":"[docs] using vuepress","State":"closed","Body":"I only preserved English and Chinese versions. Other languages are moved to `docs-gitbook` folder temporarily. If any language is good to use vuepress too, it can be done with the folder.\r\n\r\nPreview: https://5b03148e3672df542683886f--objective-stonebraker-ca8353.netlify.com\r\n\r\nAdditionally, this PR has:\r\n* fixed e2e test error\r\n* upgraded webpack to v4\r\n* upgraded vue-loader to v15\r\n* upgraded rollup-plugin-buble to v0.19\r\n\r\nRef: #1275 \r\n\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1277","RelatedDescription":"Closed or merged PR \"[docs] using vuepress\" (#1277)"},{"Id":"324804247","IsPullRequest":true,"CreatedAt":"2018-05-21T10:36:03","Actor":"suexcxine","Number":"1276","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1276","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1276)"},{"Id":"322147340","IsPullRequest":false,"CreatedAt":"2018-05-18T16:12:40","Actor":"smithyj","Number":"1262","RawContent":null,"Title":"Can you add hooks before and after mutation actions ?","State":"closed","Body":"### What problem does this feature solve?\r\ncome true global loading plugins\r\n\r\n### What does the proposed API look like?\r\nfor example:\r\nstore.subscribeBeforeAction()\r\nstore.subscribeAfterAction()\r\nstore.subscribeBeforeMutation()\r\nstore.subscribeAfterMutation()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1262","RelatedDescription":"Closed issue \"Can you add hooks before and after mutation actions ?\" (#1262)"},{"Id":"324461349","IsPullRequest":false,"CreatedAt":"2018-05-18T15:44:54","Actor":"ciddan","Number":"1274","RawContent":null,"Title":"The TypeScript definition files incorrectly specifies the map* functions as named exports.","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/ciddan/vuex-ts-issue](https://github.com/ciddan/vuex-ts-issue)\r\n\r\n### Steps to reproduce\r\nReproduction of an issue with the TypeScript type definitions in Vuex.\r\n\r\n1. Clone the provided repository.\r\n2. run npm install\r\n3. run npm start\r\n4. Open browser and go to http://localhost:8080.\r\n5. Open dev tools and look at the console output.\r\n\r\n\r\n### What is expected?\r\nThat the first log output: ```mapActions from: import { mapActions } undefined``` isn't undefined.\r\n\r\n### What is actually happening?\r\nmapActions is undefined.\r\n\r\n---\r\nPlease read the README in the linked repository for full information on the issue.\r\n\r\nWe ran into this issue while working on TypeScript decorators that required the use of the various map functions.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1274","RelatedDescription":"Open issue \"The TypeScript definition files incorrectly specifies the map* functions as named exports.\" (#1274)"},{"Id":"324435156","IsPullRequest":false,"CreatedAt":"2018-05-18T14:33:07","Actor":"ciddan","Number":"1273","RawContent":null,"Title":"The TypeScript definition files incorrectly specifies the map* functions as named exports","State":"closed","Body":"This is incorrect:\r\nhttps://github.com/vuejs/vuex/blob/4d573e9960f8cca33fdf9051521a203b03b18ae5/types/index.d.ts#L6\r\n\r\nLooking at vuex.js and vuex.common.js all of these functions are exported in the default export, not as named exports. This breaks our TypeScript/SystemJS project - since the TypeScript type of the default export only contains Store and install. Importing the map functions as named exports, i.e:\r\n``` typescript\r\nimport { mapActions } from \"vuex\";\r\n```\r\ndoesn't work either - since they're undefined at run time (SystemJS handles default and named exports differently). \r\n\r\nWith \"system\" as the module format defined in tsconfig.json usage of a a named export is compiled to:\r\n``` javascript\r\nvuex_1.mapActions\r\n```\r\nWhereas usage of a default export is compiled to:\r\n``` javascript\r\nvuex_1.default.Store\r\n```\r\n\r\nThe map functions should be exported together with Store and install here:\r\nhttps://github.com/vuejs/vuex/blob/4d573e9960f8cca33fdf9051521a203b03b18ae5/types/index.d.ts#L129-L132\r\n\r\nFor reference, this is the export from vuex.js:\r\nhttps://github.com/vuejs/vuex/blob/4d573e9960f8cca33fdf9051521a203b03b18ae5/dist/vuex.js#L925-L936","Url":"https://github.com/vuejs/vuex/issues/1273","RelatedDescription":"Closed issue \"The TypeScript definition files incorrectly specifies the map* functions as named exports\" (#1273)"},{"Id":"324245654","IsPullRequest":true,"CreatedAt":"2018-05-18T04:33:01","Actor":"thoughtkun","Number":"1271","RawContent":null,"Title":"Update mutations.md","State":"closed","Body":"there is no payload **amount**","Url":"https://github.com/vuejs/vuex/pull/1271","RelatedDescription":"Closed or merged PR \"Update mutations.md\" (#1271)"},{"Id":"324257404","IsPullRequest":false,"CreatedAt":"2018-05-18T04:29:31","Actor":"falstack","Number":"1272","RawContent":null,"Title":"TypeError: Cannot read property '${anyKey}' of undefined","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/m99jmqsa/2/](https://jsfiddle.net/m99jmqsa/2/)\r\n\r\n### Steps to reproduce\r\n```\r\n1：open：https://jsfiddle.net/m99jmqsa/2/\r\n2：open chrome console\r\n3：look error\r\n4：rewrite [html] \"<!-- <div>{{myData2}}</div> --> \" to \"<div>{{myData2}}</div>\"\r\n5：run，look error\r\n```\r\n\r\n### What is expected?\r\nnoError, can render success\r\n\r\n### What is actually happening?\r\nrender error\r\n\r\n---\r\nwhen i get a object，it may very deep，{ a: 1, b: { c: 2, d: { e: 3 } } }...\r\n\r\nhow can i set init state?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1272","RelatedDescription":"Closed issue \"TypeError: Cannot read property '${anyKey}' of undefined\" (#1272)"},{"Id":"323908118","IsPullRequest":true,"CreatedAt":"2018-05-17T23:45:25","Actor":"cho0o0","Number":"1269","RawContent":null,"Title":"add an example of subscribeAction in plugins.md","State":"closed","Body":"I think an example of `subscribeAction` is missing in the document for elaborating the usage of it.","Url":"https://github.com/vuejs/vuex/pull/1269","RelatedDescription":"Closed or merged PR \"add an example of subscribeAction in plugins.md\" (#1269)"},{"Id":"323915993","IsPullRequest":false,"CreatedAt":"2018-05-17T08:13:46","Actor":"teamonn","Number":"1270","RawContent":null,"Title":"><script>alert(666)</script>","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1270","RelatedDescription":"Closed issue \"><script>alert(666)</script>\" (#1270)"},{"Id":"323257307","IsPullRequest":false,"CreatedAt":"2018-05-15T15:00:15","Actor":"matthewmorgan","Number":"1268","RawContent":null,"Title":"Programmatically create getters and setters for defined store properties","State":"open","Body":"### What problem does this feature solve?\r\nTedious boilerplate is currently required to create a store property with vanilla getters and setters.  EG\r\n\r\n```javascript\r\nconst createStore = () => new Vuex.Store({\r\n  state: {\r\n    version: null,\r\n  },\r\n  getters: {\r\n    version(state){\r\n        return state.version;\r\n    }\r\n  },\r\n  setters: {\r\n    setVersion(state, version){\r\n      state.version = version;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI don't currently understand the life cycle or structure of the store well enough to programmatically add getters and setters.  Naively, I tried implementing a module to automatically generate a `getters` object to inject into the store something like this:\r\n\r\n```javascript\r\nexport default (state) => {\r\n  let result = Object.keys(state)\r\n    .reduce((getters, key) => {\r\n      const getterMethodName = `${key.charAt(0)}${[...key].slice(1,).join('')}`;\r\n      getters[getterMethodName] = function(state){ return state[key]};\r\n      return getters;\r\n    }, {});\r\n};\r\n```\r\n\r\nThis didn't work, and I'm not sure how to proceed, but it seems like providing vanilla getters and setters that are a function of the property name, but could be overridden with an explicit implementation would make Vuex development friendlier and faster.\r\n\r\nThis idea could be extended to actions and mutations.\r\n\r\nPlease feel free to point out problems with this idea or my understanding of the store, or even better, that someone has already implemented it and where!\r\n\r\n### What does the proposed API look like?\r\nNo visible changes to the current store creation API would be required.  Any store key defined in the `state` object on store creation would generate getters and setters on store creation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1268","RelatedDescription":"Open issue \"Programmatically create getters and setters for defined store properties\" (#1268)"},{"Id":"322621739","IsPullRequest":false,"CreatedAt":"2018-05-13T19:47:16","Actor":"ChristianStornowski","Number":"1267","RawContent":null,"Title":"Adjust vuex types for using state values and modules in one store","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/14njpn10p3](https://codesandbox.io/s/14njpn10p3)\r\n\r\n### Steps to reproduce\r\n1. Create a project like https://codesandbox.io/s/14njpn10p3\r\n2. npm run test:types\r\n\r\n\r\n### What is expected?\r\nno type errors.\r\n\r\n### What is actually happening?\r\nsrc/test.ts(46,41): error TS2345: Argument of type '{ state: { value: number; }; modules: { a: Module<AModule, RootState>; }; }' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1267","RelatedDescription":"Open issue \"Adjust vuex types for using state values and modules in one store\" (#1267)"},{"Id":"322501191","IsPullRequest":false,"CreatedAt":"2018-05-12T10:40:18","Actor":"zjafei","Number":"1266","RawContent":null,"Title":"希望有一个可以获取vuxe中action是否进行中状态的插件","State":"open","Body":"### What problem does this feature solve?\r\naction基本是处理异步业务的。loading的状态是很重要的。\r\n我现在的做法是在每个action中都设置一个isLoading的state\r\n但是我希望 每个action在开始时候在全局的isLoading的action的map里面注册一下loading的状态，\r\n在走完最后一个next后再注销一下。\r\n我通过查询这个action的map就可以知道对应的action的状态\r\n而不用去手动注册好多的isLoading的state \r\n\r\n\r\n### What does the proposed API look like?\r\n`vue.use(vuxeLoading);\r\n\r\nconst {someActionLoadingState} = vue.vuxeLoading;\r\n\r\nconsole.log(someActionLoadingState) // true or false`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1266","RelatedDescription":"Open issue \"希望有一个可以获取vuxe中action是否进行中状态的插件\" (#1266)"},{"Id":"322434498","IsPullRequest":false,"CreatedAt":"2018-05-11T21:06:03","Actor":"rv-akim","Number":"1265","RawContent":null,"Title":"add a `mapDataFromGetters` helper ","State":"open","Body":"### What problem does this feature solve?\r\nThis would allow developers to hydrate component state in the `data` property  from the store, without having to do it in mounted.\r\n\r\nThe problem right now with `mapGetters` and `mapState` is that they are defined in computed after data gets evaluated.\r\n\r\nI want to get away from:\r\n\r\n```\r\ndata() {\r\n  return {\r\n    firstName: this.$store.getters.firstName,\r\n    lastName: this.$store.getters.lastName,\r\n  }\r\n}\r\n```\r\n\r\nSetting these values in mounted and using computed values on mount seems to be a lot of boiler plate when I simply want to hydrate data using store values in `data` of a component.\r\n\r\n### What does the proposed API look like?\r\nThe above example would translate roughly to this:\r\n```\r\nfunction mapGettersToData(gettersObj, context) {\r\n  const mappedGetters = {};\r\n  Object.keys(gettersObj).forEach((key, i) => {\r\n     mappedGetters[key] = context.$store.getters[Object.values(gettersObj)[i]];\r\n  });\r\n  return mappedGetters;\r\n}\r\n```\r\n```\r\ndata() {\r\n  return {\r\n    ...mapGettersToData({\r\n      propName: 'path/to/getter',\r\n    }, this),\r\n  };\r\n}\r\n```\r\n\r\nOr extend mapGetters/mapState to work in data property of a component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE --> ","Url":"https://github.com/vuejs/vuex/issues/1265","RelatedDescription":"Open issue \"add a `mapDataFromGetters` helper \" (#1265)"},{"Id":"322428565","IsPullRequest":true,"CreatedAt":"2018-05-11T20:43:49","Actor":"DanielRuf","Number":"1264","RawContent":null,"Title":"chore: migrate to CircleCI 2 and add Node.js 10","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1264","RelatedDescription":"Open PR \"chore: migrate to CircleCI 2 and add Node.js 10\" (#1264)"},{"Id":"322275360","IsPullRequest":false,"CreatedAt":"2018-05-11T12:15:11","Actor":"teamonn","Number":"1263","RawContent":null,"Title":"null 值一刷新变成了 Object {__ob__: Observer}","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n我一个数据放在vuex，直接进入页面是null（初始值）。但是我再在当前这个页面刷新，这个值就成了Object {__ob__: Observer}。\r\n\r\n我序列化这个值是{}，有木有小伙伴也遇到这种奇怪的bug？","Url":"https://github.com/vuejs/vuex/issues/1263","RelatedDescription":"Closed issue \"null 值一刷新变成了 Object {__ob__: Observer}\" (#1263)"},{"Id":"321864784","IsPullRequest":false,"CreatedAt":"2018-05-10T09:18:51","Actor":"GopherJ","Number":"1261","RawContent":null,"Title":"Why can I change my store directly by a getter?","State":"open","Body":"### What problem does this feature solve?\r\n```javascript\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\nthen I can change by store directly by using `this.GET_QUERY`, so that every time I need to use `cloneDeep` to avoid that my store would be changed.\r\n\r\nCan getter be read-only like using `Object.defineProperty`:\r\n```javascript\r\nObject.defineProperty(store.getters, 'GET_QUERY', {\r\n   enumerable: true,\r\n   get() {\r\n       return store.state.query;\r\n   }\r\n})\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\n`this.GET_QUERY.a = {}` won't be successful.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1261","RelatedDescription":"Open issue \"Why can I change my store directly by a getter?\" (#1261)"},{"Id":"321863505","IsPullRequest":false,"CreatedAt":"2018-05-10T09:14:31","Actor":"GopherJ","Number":"1260","RawContent":null,"Title":"Why can I change my store directly by a getter?","State":"closed","Body":"```javascript\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\nthen I can change by store directly by using `this.GET_QUERY`, so that every time I need to use `cloneDeep` to avoid that my store would be changed.\r\n\r\nCan getter be read-only like using `Object.defineProperty`:\r\n```javascript\r\nObject.defineProperty(store.getters, 'GET_QUERY', {\r\n   enumerable: true,\r\n   get() {\r\n       return store.state.query;\r\n   }\r\n})\r\n```","Url":"https://github.com/vuejs/vuex/issues/1260","RelatedDescription":"Closed issue \"Why can I change my store directly by a getter?\" (#1260)"},{"Id":"320843685","IsPullRequest":false,"CreatedAt":"2018-05-07T15:26:56","Actor":"hjJunior","Number":"1259","RawContent":null,"Title":"vuex unknown action type","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nI tried to reproduce here, but my code is a little different, I'm using by npm\r\n[https://jsfiddle.net/sgwe6qde/4/](https://jsfiddle.net/sgwe6qde/4/)\r\n\r\n### Steps to reproduce\r\nCall to action from store module\r\n\r\n### What is expected?\r\nI expected the function to be executed\r\n\r\n### What is actually happening?\r\nI'm getting the error saying 'unknown action type: matriculas/fetchMatriculaTab'\r\n\r\n---\r\nI tried to search about it on web, and I solve to put namespaced: true, but I keep got this error,\r\nI also have tried to use mapAction in another way\r\n`...Vuex.mapActions('matriculas', ['fetchMatriculaTab'])`\r\nSo at this way, I get error saying  'module namespaec not found'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1259","RelatedDescription":"Closed issue \"vuex unknown action type\" (#1259)"},{"Id":"320524785","IsPullRequest":false,"CreatedAt":"2018-05-05T17:00:36","Actor":"jmcooper","Number":"1258","RawContent":null,"Title":"Add ability to access namespaced getters with dot notation","State":"open","Body":"### What problem does this feature solve?\r\nWhen working with a namespaced module (e.g. a users module), you can access items on the user module's state like this: \r\n`this.$store.state.users.user`\r\n\r\nHowever, you can't access getters in the same way.  This will return an error:\r\n`this.$store.getters.users.newUsers`\r\n\r\nBecause `getters.users` is undefined. Instead you have to access it with bracket notation: `this.$store.getters['users/newUsers']`\r\n\r\nThis is true even though, without modules, I can access getters with dot notation:\r\n`this.$store.getters.newUsers`\r\n\r\nIs there a reason why this isn't possible with getters? It would be nice if we could access namespaced getters in the same way we can with namespaced state.  This current behavior seems inconsistent.\r\n\r\n### What does the proposed API look like?\r\nGiven a `users` namespaced module, add the ability to access getters with: `this.$store.getters.users.newUsers`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1258","RelatedDescription":"Open issue \"Add ability to access namespaced getters with dot notation\" (#1258)"},{"Id":"319553989","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:58","Actor":"acan13","Number":"1257","RawContent":null,"Title":"registerModule option to preserve state while initializing attributes added since previous initialization","State":"open","Body":"### What problem does this feature solve?\r\nContext: Currently if you use registerModule with {preserveState: false} it will reinitialize the entire module state and overwrite all the values. If you use {preserveState: true} it will not do anything to the current values.\r\n\r\n\r\nProblem: What if you wish to preserve the values, but you have added attributes since the last time the module was initialized? If you use {preserveState: true} it will not add the new attribute (possible breaking things) while if you use {preserveState: false} it will overwrite all of the state already there. \r\n\r\n\r\nFeature request: Could there be a happy medium where vuex will only initialize attributes that aren't already present?\r\n\r\n\r\nUse case: We are using vue persisted state to persist UI settings stored in vuex. Because we reuse these settings in a few different apps, we store the module definitions in a shared folder and then import them into our different apps using registerModule. If we use {preserveState: false} then the settings in place are overwritten while if we use {preserveState: true} the new settings we add don't get added to the store.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nThe current behavior makes sense to me, so I would propose leaving it and adding another option. I have no idea what to call it, but something like:\r\n```javascript\r\nVue.registerModule('mymodule', myModule, {preserveState: true, updateAttributes: true});\r\n```\r\n\r\nI'm new to this, but I would be willing to look into how to implement it if people think it would be a good idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1257","RelatedDescription":"Open issue \"registerModule option to preserve state while initializing attributes added since previous initialization\" (#1257)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-27T05:30:35.9664955Z","RunDurationInMilliseconds":3898}