{"Data":{"GitHub":{"Issues":[{"Id":"533750579","IsPullRequest":true,"CreatedAt":"2019-12-06T05:13:16","Actor":"frank-dong-ms","Number":"4526","RawContent":null,"Title":"add more log for SsaForecast test and fix a early dispose issue","State":"open","Body":"1. add more log for SsaForecast test \r\n2. fix a early dispose issue in can_reload_model test\r\n3. make TimeSeries test class inherent from BaseTestBaseline for logging\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4526","RelatedDescription":"Open PR \"add more log for SsaForecast test and fix a early dispose issue\" (#4526)"},{"Id":"533616068","IsPullRequest":false,"CreatedAt":"2019-12-05T21:43:49","Actor":"natke","Number":"4525","RawContent":null,"Title":"Image links broken","State":"open","Body":"There are two broken image links on this page. One for each metric description.\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: c1784ca5-56a4-75ea-ae35-ad29872348cf\n* Version Independent ID: 2084e039-fcb3-61b4-08ae-29f509b8cb30\n* Content: [RankingMetrics Class (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.rankingmetrics?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML.Data/RankingMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/RankingMetrics.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4525","RelatedDescription":"Open issue \"Image links broken\" (#4525)"},{"Id":"528450600","IsPullRequest":true,"CreatedAt":"2019-12-05T20:08:06","Actor":"frank-dong-ms","Number":"4503","RawContent":null,"Title":"improve test stability","State":"closed","Body":"1. add datatime when start/finish tests\r\n2. add timeout for thread waiting to prevent infinite wait\r\n3. fix cancel token cancel twice issue\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4503","RelatedDescription":"Closed or merged PR \"improve test stability\" (#4503)"},{"Id":"533513959","IsPullRequest":false,"CreatedAt":"2019-12-05T18:15:31","Actor":"huy302","Number":"4524","RawContent":null,"Title":"Model fit in Parallel.For is slower than For","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10 64\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI'm trying to tune hyperparamater and see if I can implement grid search myself. In order to do that, I would like to fit the model in multiple threads by using Parallel.For\r\n\r\n- **What happened?**\r\nHowever, I realized that fitting the model multiple times using Parallel.For takes much longer than a single threaded for loop. In a for loop. my CPU utilization is at around 30% all the time, while using Parallel.For, it spikes to 100% at first, then drops down to 6% for quite some time, then jumps back to 30% and finishes. Am I not supposed to fit in parallel? If that is the case then what is the best way to do grid search?\r\n\r\n### Source code / logs\r\n\r\nSingle threaded for - takes 20 seconds\r\n\r\n```\r\nfor (var i = 0; i < 100; i++) {\r\n    var pipeline = CreatePipeline();\r\n    pipeline.Fit(dataView);\r\n}\r\n```\r\n\r\nParallel.For - takes 56 seconds\r\n\r\n```\r\nParallel.For(0, 100, i => {\r\n    var pipeline = CreatePipeline();\r\n    pipeline.Fit(dataView);\r\n});\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4524","RelatedDescription":"Open issue \"Model fit in Parallel.For is slower than For\" (#4524)"},{"Id":"533292844","IsPullRequest":true,"CreatedAt":"2019-12-05T11:28:53","Actor":"yaeldekel","Number":"4523","RawContent":null,"Title":"Add aka.ms aliases for files downloaded from Azure blobs","State":"open","Body":"Fixes #4445 .","Url":"https://github.com/dotnet/machinelearning/pull/4523","RelatedDescription":"Open PR \"Add aka.ms aliases for files downloaded from Azure blobs\" (#4523)"},{"Id":"533098218","IsPullRequest":true,"CreatedAt":"2019-12-05T03:19:59","Actor":"codemzs","Number":"4522","RawContent":null,"Title":"Image classification performance improvements and store cache bottleneck files in binary format.","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4522","RelatedDescription":"Open PR \"Image classification performance improvements and store cache bottleneck files in binary format.\" (#4522)"},{"Id":"529531672","IsPullRequest":true,"CreatedAt":"2019-12-04T21:13:44","Actor":"harishsk","Number":"4507","RawContent":null,"Title":"Fixed onnx export support for WordBagEstimator","State":"closed","Body":"Fixed a bug in ngram transform and added test for WordBagEstimator","Url":"https://github.com/dotnet/machinelearning/pull/4507","RelatedDescription":"Closed or merged PR \"Fixed onnx export support for WordBagEstimator\" (#4507)"},{"Id":"532850454","IsPullRequest":true,"CreatedAt":"2019-12-04T18:11:31","Actor":"michaelgsharp","Number":"4521","RawContent":null,"Title":"DateTimeTransformer featurizer","State":"open","Body":"This change adds in the DateTimeTransformer into the new Featurizers project. It is the first of a series of PR's that will go in. The DateTimeTransformer is implemented in native code, so this is mostly just a wrapper around that with the appropriate entrypoints for NimbusML as well. Since all the new estimator/transformers follow the same patterns, once this one is reviewed and checked in I will create the other PR's.","Url":"https://github.com/dotnet/machinelearning/pull/4521","RelatedDescription":"Open PR \"DateTimeTransformer featurizer\" (#4521)"},{"Id":"532659728","IsPullRequest":false,"CreatedAt":"2019-12-04T12:42:09","Actor":"yamachu","Number":"4520","RawContent":null,"Title":"[DNN Training] Cannot execute retrain DNN model(Tensorflow model) manually since ML.NET 1.4.0-stable","State":"open","Body":"ref: https://github.com/dotnet/machinelearning/issues/4307\r\n\r\nWe cannot call `RetrainDnnModel` method publicly and manually because  of this commit ( https://github.com/dotnet/machinelearning/pull/4362 ).\r\n\r\nI think that regression tasks by TensorflowRetrain (RetrainDnnModel ) only can predict multiple-values.\r\nSo I think that Access-Modifiers of `RetrainDnnModel` should be public if no way for predicting multiple-values.","Url":"https://github.com/dotnet/machinelearning/issues/4520","RelatedDescription":"Open issue \"[DNN Training] Cannot execute retrain DNN model(Tensorflow model) manually since ML.NET 1.4.0-stable\" (#4520)"},{"Id":"532419251","IsPullRequest":false,"CreatedAt":"2019-12-04T03:08:51","Actor":"thezaza101","Number":"4519","RawContent":null,"Title":"OneHotHashEncoding / OneHotEncoding transformer output","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10 \r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.0.100, ML.NET 1.4.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nInspected output of OneHotHashEncoding / OneHotEncoding\r\n\r\n- **What happened?**\r\nExpected vector different representations for different categories, however they were the same.\r\n\r\nIf the first category is `[1, 0, 0, 0]` then the second category should be different (i.e. `[0, 1, 0, 0]`). however it appears to be the same when inspecting it.\r\n\r\nInspected `IDataView` using `data.Preview(numRows)`.\r\n\r\n### Source code / logs\r\n\r\nCode:\r\n```csharp\r\nusing System;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nnamespace cat\r\n{\r\n    class CatInput\r\n    {\r\n        [LoadColumn(0),ColumnName(\"input\")]\r\n        public string cat;\r\n    }\r\n    class Program\r\n    {\r\n        static MLContext _mlContext = new MLContext();\r\n        static IDataView _data;\r\n        static void Main(string[] args)\r\n        {\r\n            _data = _mlContext.Data.LoadFromTextFile<CatInput>(path: \"cat\", hasHeader: false, separatorChar: ',');\r\n            IEstimator<ITransformer> _pipeline = _mlContext.Transforms.Categorical.OneHotHashEncoding(\r\n                inputColumnName: \"input\",\r\n                outputColumnName: \"output\");\r\n            \r\n            var model = _pipeline.Fit(_data);\r\n            IDataView tData = model.Transform(_data);\r\n            var previewObject = tData.Preview(10);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ninput data:\r\n```\r\n                input                 |\r\n---------------------------------------\r\n                 red                  |\r\n                 red                  |\r\n                 red                  |\r\n                 blue                 |\r\n                purple                |\r\n                yellow                |\r\n                 red                  |\r\n                 blue                 |\r\n                 blue                 |\r\n                purple                |\r\n```\r\nScreenshots of inspection and where the values should be different.\r\nRow 0 (\"red\"):\r\n![PreviewRow0](https://user-images.githubusercontent.com/27200279/70109206-45824d80-169f-11ea-9bb2-af28522283fd.png)\r\nRow 3 (\"blue\"):\r\n![PreviewRow1](https://user-images.githubusercontent.com/27200279/70109207-45824d80-169f-11ea-911d-535808367adc.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4519","RelatedDescription":"Open issue \"OneHotHashEncoding / OneHotEncoding transformer output\" (#4519)"},{"Id":"532336889","IsPullRequest":false,"CreatedAt":"2019-12-03T23:28:19","Actor":"mstfbl","Number":"4518","RawContent":null,"Title":"System.ArgumentOutOfRangeException in NimbusML's NGramFeaturizer2.py caused by CustomStopWordsRemover/Feature_extraction.text.stopwords in ML.NET","State":"open","Body":"As addressed in this [issue ](https://github.com/microsoft/NimbusML/issues/365) in the NimbusML repo, there is a bug with the ML.NET bindings of CustomStopWordsRemover, which is StopWordsRemovingTransformer.cs. \r\n\r\nThe specific error message is: \r\nRuntimeError: Error: *** System.ArgumentOutOfRangeException: 'dataFile is empty\r\nThe full error log can be found [here](https://dev.azure.com/aifx/public/_build/results?buildId=2089&view=logs&j=d0e8f4b8-2f67-5548-290c-4d6f15a1cbca&t=e5950cbb-cc45-5e54-16a6-7bfce2ad073d&l=8236).","Url":"https://github.com/dotnet/machinelearning/issues/4518","RelatedDescription":"Open issue \"System.ArgumentOutOfRangeException in NimbusML's NGramFeaturizer2.py caused by CustomStopWordsRemover/Feature_extraction.text.stopwords in ML.NET\" (#4518)"},{"Id":"531914671","IsPullRequest":false,"CreatedAt":"2019-12-03T11:22:39","Actor":"yaeldekel","Number":"4517","RawContent":null,"Title":"PFI doesn't work with uncalibrated binary classifiers","State":"open","Body":"Some binary classification estimators automatically return a calibrated model (for example, FastTree and LogisticRegression), but some don't - for example, FastForest. When trying to pass such a model to PFI, there is an exception thrown saying that the probability column was not found.\r\n```\r\nvar ml = new MLContext();\r\nvar ff = ml.BinaryClassification.Trainers.FastForest();\r\nvar data = ml.Data.LoadFromTextFile(@\"breast-cancer.txt\",\r\n                new[] { new TextLoader.Column(\"Label\", DataKind.Boolean, 0),\r\n                            new TextLoader.Column(\"Features\", DataKind.Single, 1, 9) });\r\nvar model = ff.Fit(data);\r\nvar pfi = ml.BinaryClassification.PermutationFeatureImportance(model, data);\r\n```\r\n\r\nThere are actually two issues here: The first is what I described above, and the second is that there is no workaround for this problem. I tried adding a calibrator manually:\r\n\r\n```\r\nvar ff = ml.BinaryClassification.Trainers.FastForest();\r\nvar ffmodel = ff.Fit(data);\r\nvar calibrator = ml.BinaryClassification.Calibrators.Platt();\r\nvar calibratormodel = calibrator.Fit(ffmodel.Transform(data));\r\nvar pfi = ml.BinaryClassification.PermutationFeatureImportance(calibratormodel, ffmodel.Transform(data));\r\n```\r\nThe reason I could not train these two models as a pipeline is because the resulting model is of type `TransformerChain` so I cannot pass it to PFI. However, this code doesn't work either, because even though `calibratormodel` is indeed an `ISingleFeaturePredictionTransformer`, the features column of `calibratormodel`, is the score column of the output of `ffmodel`, so PFI doesn't do the right thing. As far as I can tell, there is no way to pass a model where the calibrator was trained separately to PFI. It might be worth opening a separate issue for this, not sure.","Url":"https://github.com/dotnet/machinelearning/issues/4517","RelatedDescription":"Open issue \"PFI doesn't work with uncalibrated binary classifiers\" (#4517)"},{"Id":"531693256","IsPullRequest":false,"CreatedAt":"2019-12-03T03:36:49","Actor":"JakeRadMSFT","Number":"4516","RawContent":null,"Title":"GPU Training doesn't work with AutoML on Surface Book 2","State":"open","Body":"- **What did you do?**\r\nTried to train with GPU on a Surface Book 2\r\n- **What happened?**\r\nStalls after 3rd cross val ... I think\r\n- **What did you expect?**\r\n10 Cross Vals and best model.\r\n\r\n### Source code / logs\r\n\r\n[weather-small-train-logs-cpu.txt](https://github.com/dotnet/machinelearning/files/3914431/weather-small-train-logs-cpu.txt)\r\n[weather-small-train-logs-gpu.txt](https://github.com/dotnet/machinelearning/files/3914432/weather-small-train-logs-gpu.txt)\r\n[weather-small.zip](https://github.com/dotnet/machinelearning/files/3914434/weather-small.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4516","RelatedDescription":"Open issue \"GPU Training doesn't work with AutoML on Surface Book 2\" (#4516)"},{"Id":"531641247","IsPullRequest":true,"CreatedAt":"2019-12-03T01:07:13","Actor":"Lynx1820","Number":"4515","RawContent":null,"Title":"Adds PriorTrainer Onnx conversion","State":"open","Body":"\r\n1. Adding Onnx support for PriorTrainer \r\n       To follow the onnx construction pattern of other binary classifiers, this trainer uses the probability to predict labels, instead of score\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4515","RelatedDescription":"Open PR \"Adds PriorTrainer Onnx conversion\" (#4515)"},{"Id":"530706490","IsPullRequest":false,"CreatedAt":"2019-12-02T17:55:11","Actor":"hahsm","Number":"4513","RawContent":null,"Title":"Multiclass classification - Prediction Output ","State":"closed","Body":"Hi,\r\n\r\nThe following code helps to get the predicted label with score. Is there any way that I can get additional details (columns) of each prediction based on score. What are the columns that I could include as output in a multiclass prediction (other than Label and Score). Can I include additional columns from DataSet in my output?\r\n\r\n`\r\nprivate static Dictionary<string, float> GetScoresWithLabelsSorted(DataViewSchema schema, string name, float[] scores)\r\n        {\r\n            Dictionary<string, float> result = new Dictionary<string, float>();\r\n\r\n            var column = schema.GetColumnOrNull(name);\r\n\r\n            var slotNames = new VBuffer<ReadOnlyMemory<char>>();\r\n            column.Value.GetSlotNames(ref slotNames);\r\n            var x = slotNames.GetIndices();\r\n\r\n            var num = 0;\r\n            foreach (var denseValue in slotNames.DenseValues())\r\n            {\r\n                result.Add(denseValue.ToString(), scores[num++]);\r\n            }\r\n\r\n            return result.OrderByDescending(c => c.Value).ToDictionary(i => i.Key, i => i.Value);\r\n        }`","Url":"https://github.com/dotnet/machinelearning/issues/4513","RelatedDescription":"Closed issue \"Multiclass classification - Prediction Output \" (#4513)"},{"Id":"531013626","IsPullRequest":true,"CreatedAt":"2019-12-02T09:53:51","Actor":"yaeldekel","Number":"4514","RawContent":null,"Title":"Learning with counts (Dracula) transformer","State":"open","Body":"Fixes #4016.","Url":"https://github.com/dotnet/machinelearning/pull/4514","RelatedDescription":"Open PR \"Learning with counts (Dracula) transformer\" (#4514)"},{"Id":"530439237","IsPullRequest":false,"CreatedAt":"2019-11-30T20:03:46","Actor":"CBrauer","Number":"4511","RawContent":null,"Title":"Build problem","State":"closed","Body":"HI,\r\nPlease help me with an install problem.  Here is my install script output:\r\n\r\n```\r\nPS H:\\ML.NET\\machinelearning-master> ./build.cmd\r\nTools are already initialized.\r\nRunning: H:\\ML.NET\\machinelearning-master\\Tools\\dotnetcli\\dotnet msbuild /nologo /verbosity:minimal /clp:Summary /maxcpucount /l:BinClashLogger,Tools\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log /p:Configuration=Debug  /flp:v=normal  /flp2:warningsonly;logfile=msbuild.wrn  /flp3:errorsonly;logfile=msbuild.err  build.proj\r\n  fatal: Not a git repository (or any of the parent directories): .git\r\n  Restoring all projects...\r\n  Restore completed in 90.2 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.\r\n  Restore completed in 6.32 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.\r\n  Restore completed in 5.13 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DataView\\Microsoft.ML.DataView.csproj.\r\n  Restore completed in 127.06 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.Extensions.ML\\Microsoft.Extensions.ML.csproj.\r\n  Restore completed in 127.57 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.AutoML\\Microsoft.ML.AutoML.csproj.\r\n  Restore completed in 127.65 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.\r\n  Restore completed in 127.75 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.Samples\\Microsoft.ML.Samples.csproj.\r\n  Restore completed in 127.59 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.AutoML.Samples\\Microsoft.ML.AutoML.Samples.csproj.\r\n  Restore completed in 127.87 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.Samples.GPU\\Microsoft.ML.Samples.GPU.csproj.\r\n  Restore completed in 135.73 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.CodeGenerator\\Microsoft.ML.CodeGenerator.csproj.\r\n  Restore completed in 16.42 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.\r\n  Restore completed in 20.53 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet18\\Microsoft.ML.DnnImageFeaturizer.ResNet18.csproj.\r\n  Restore completed in 20.46 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.\r\n  Restore completed in 24.78 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet50\\Microsoft.ML.DnnImageFeaturizer.ResNet50.csproj.\r\n  Restore completed in 25.59 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.AlexNet\\Microsoft.ML.DnnImageFeaturizer.AlexNet.csproj.\r\n  Restore completed in 34.91 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet101\\Microsoft.ML.DnnImageFeaturizer.ResNet101.csproj.\r\n  Restore completed in 40.05 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.EntryPoints\\Microsoft.ML.EntryPoints.csproj.\r\n  Restore completed in 40.93 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.\r\n  Restore completed in 42.72 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnAnalyzer\\Microsoft.ML.DnnAnalyzer\\Microsoft.ML.DnnAnalyzer.csproj.\r\n  Restore completed in 12.1 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.\r\n  Restore completed in 9.56 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.\r\n  Restore completed in 26.51 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Experimental\\Microsoft.ML.Experimental.csproj.\r\n  Restore completed in 21.27 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.\r\n  Restore completed in 16.34 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Mkl.Components\\Microsoft.ML.Mkl.Components.csproj.\r\n  Restore completed in 16.61 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.LightGbm\\Microsoft.ML.LightGbm.csproj.\r\n  Restore completed in 11.04 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.OnnxConverter\\Microsoft.ML.OnnxConverter.csproj.\r\n  Restore completed in 21.94 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.OnnxTransformer\\Microsoft.ML.OnnxTransformer.csproj.\r\n  Restore completed in 16.24 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.\r\n  Restore completed in 12.7 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Recommender\\Microsoft.ML.Recommender.csproj.\r\n  Restore completed in 20.06 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.SamplesUtils\\Microsoft.ML.SamplesUtils.csproj.\r\n  Restore completed in 15.85 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.\r\n  Restore completed in 23.91 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.\r\n  Restore completed in 18.12 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.StandardTrainers\\Microsoft.ML.StandardTrainers.csproj.\r\n  Restore completed in 30.13 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.\r\n  Restore completed in 23.27 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.\r\n  Restore completed in 17.56 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.\r\n  Restore completed in 36.79 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Vision\\Microsoft.ML.Vision.csproj.\r\n  Restore completed in 86.71 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.TimeSeries\\Microsoft.ML.TimeSeries.csproj.\r\n  Restore completed in 77.17 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.Extensions.ML.Tests\\Microsoft.Extensions.ML.Tests.csproj.\r\n  Restore completed in 58.66 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.AutoML.Tests\\Microsoft.ML.AutoML.Tests.csproj.\r\n  Restore completed in 35.71 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.\r\n  Restore completed in 46.71 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Benchmarks.Tests\\Microsoft.ML.Benchmarks.Tests.csproj.\r\n  Restore completed in 29.64 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.\r\n  Restore completed in 14.44 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.\r\n  Restore completed in 62.28 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.\r\n  Restore completed in 81.34 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CpuMath.PerformanceTests\\Microsoft.ML.CpuMath.PerformanceTests.csproj.\r\n  Restore completed in 22.24 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CodeGenerator.Tests\\Microsoft.ML.CodeGenerator.Tests.csproj.\r\n  Restore completed in 14.73 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.OnnxTransformerTest\\Microsoft.ML.OnnxTransformerTest.csproj.\r\n  Restore completed in 21.84 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CpuMath.UnitTests\\Microsoft.ML.CpuMath.UnitTests.csproj.\r\n  Restore completed in 21.58 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Functional.Tests\\Microsoft.ML.Functional.Tests.csproj.\r\n  Restore completed in 36.2 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.NugetPackageVersionUpdater\\Microsoft.ML.NugetPackageVersionUpdater.csproj.\r\n  Restore completed in 16.37 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.\r\n  Restore completed in 22.45 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.\r\n  Restore completed in 23.95 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.\r\n  Restore completed in 35.88 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TimeSeries.Tests\\Microsoft.ML.TimeSeries.Tests.csproj.\r\n  Restore completed in 14.08 ms for H:\\ML.NET\\machinelearning-master\\tools-local\\Microsoft.ML.InternalCodeAnalyzer\\Microsoft.ML.InternalCodeAnalyzer.csproj.\r\n  Restore completed in 10.07 ms for H:\\ML.NET\\machinelearning-master\\test\\RemoteExecutorConsoleApp\\RemoteExecutorConsoleApp.csproj.\r\n  Restore completed in 29.37 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TestFrameworkCommon\\Microsoft.ML.TestFrameworkCommon.csproj.\r\n  Restore completed in 83.45 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.\r\n  Restore completed in 20.63 ms for H:\\ML.NET\\machinelearning-master\\tools-local\\Microsoft.ML.StableApi\\Microsoft.ML.StableApi.csproj.\r\n  Building redist components...\r\n  Building native components...\r\n  H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.4.0-pre.6.0\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.4.0-pre.6.0\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: 'x86_x64'\r\n  Commencing native build of dotnet/machinelearning\r\n\r\n  Calling \"H:\\ML.NET\\machinelearning-master\\src\\Native\\\\gen-buildsys-win.bat\" \"H:\\ML.NET\\machinelearning-master\\src\\Native\\\" \"16 2019\" x64\r\n  CMake Warning (dev) in CMakeLists.txt:\r\n    No project() command is present.  The top-level CMakeLists.txt file must\r\n    contain a literal, direct call to the project() command.  Add a line of\r\n    code such as\r\n\r\n      project(ProjectName)\r\n\r\n    near the top of the file, but after cmake_minimum_required().\r\n\r\n    CMake is pretending there is a \"project(Project)\" command on the first\r\n    line.\r\n  This warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\n  -- The C compiler identification is MSVC 19.24.28314.0\r\n  -- The CXX compiler identification is MSVC 19.24.28314.0\r\n  -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe\r\n  -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works\r\n  -- Detecting C compiler ABI info\r\n  -- Detecting C compiler ABI info - done\r\n  -- Detecting C compile features\r\n  -- Detecting C compile features - done\r\n  -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe\r\n  -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works\r\n  -- Detecting CXX compiler ABI info\r\n  -- Detecting CXX compiler ABI info - done\r\n  -- Detecting CXX compile features\r\n  -- Detecting CXX compile features - done\r\n  CMAKE_C_FLAGS_DEBUG is /MDd /Zi /Ob0 /Od /RTC1\r\n  In a future version, if the CMake that ships with VS2019 no longer contains the /ZI flag, delete this message block and the two lines below.\r\n  -- Found OpenMP_C: -openmp (found version \"2.0\")\r\n  -- Found OpenMP_CXX: -openmp (found version \"2.0\")\r\n  -- Found OpenMP: TRUE (found version \"2.0\")\r\n  -- Configuring done\r\n  CMake Error at MatrixFactorizationNative/CMakeLists.txt:28 (add_library):\r\n    Cannot find source file:\r\n\r\n      libmf/mf.cpp\r\n\r\n    Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm\r\n    .hpp .hxx .in .txx\r\n\r\n\r\n  CMake Error at MatrixFactorizationNative/CMakeLists.txt:28 (add_library):\r\n    No SOURCES given to target: MatrixFactorizationNative\r\n\r\n\r\n  CMake Generate step failed.  Build files cannot be regenerated correctly.\r\n  Failed to generate native component build project!\r\nH:\\ML.NET\\machinelearning-master\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd\" Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nH:\\ML.NET\\machinelearning-master\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd\" Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:56.68\r\nCommand execution failed with exit code 1.\r\nPS H:\\ML.NET\\machinelearning-master>\r\n```\r\n\r\nAny suggestions will be greatly apprecated.\r\n\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4511","RelatedDescription":"Closed issue \"Build problem\" (#4511)"},{"Id":"529580561","IsPullRequest":false,"CreatedAt":"2019-11-30T18:43:01","Actor":"vsfeedback","Number":"4508","RawContent":null,"Title":"AI - Machine Learning - Fuzzy Logic - Genetic Algos","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/795363/ai-machine-learning-fuzzy-logic-genetic-algos.html)._\n\n---\n<p>Hello, I am looking for AI libraries while I can not find them through .Net</p><p>Would you add new libraries for using or I have to switch <strong><em>Matlab Software</em></strong>?</p> <p>Please replay clear answer to know what I should do? Because AI is most needed tool these days...</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/28/2019, 01:29 AM: \n\nThank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.\n#### Touraj Ostovari on 10/29/2019, 08:02 AM: \n\n<p>is there any new update??</p>\n","Url":"https://github.com/dotnet/machinelearning/issues/4508","RelatedDescription":"Closed issue \"AI - Machine Learning - Fuzzy Logic - Genetic Algos\" (#4508)"},{"Id":"529052670","IsPullRequest":false,"CreatedAt":"2019-11-30T18:33:19","Actor":"luisquintanilla","Number":"4504","RawContent":null,"Title":"[Image Classification] Low Accuracy on EuroSAT Dataset","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n- **ML.NET Version**: 1.4.0\r\n- **Model Builder Version**: 16.0.1911.1103\r\n\r\n### Issue\r\n\r\nThe [EuroSAT paper](https://www.researchgate.net/publication/319463676_EuroSAT_A_Novel_Dataset_and_Deep_Learning_Benchmark_for_Land_Use_and_Land_Cover_Classification), a geo-referenced aerial/satellite image dataset of 27,000 images categorized into 10 different classes is said to achieve 98.57% classification accuracy using CNNs. More specifically, using ResNet50, it achieves 96.37% accuracy using a 90/10 train/test split. Using ML.NET Image Classification API as well as Model Builder achieves 99%+ accuracy while training. However, when evaluating the model, both with and without cross validation, accuracy drops between 61-69% using only the CPU and 59% using the GPU. See performance comparisons in table below.\r\n\r\n| Method | Number of Images | Cross-Validation | Training Accuracy | Evaluation Accuracy | \r\n| --- | --- | --- | --- | --- |\r\n| API (CPU) | 20000 (18000 Train, 2000 Test) | No | 0.9946118 | 0.698\r\n| Model Builder (CPU) | 27000 | Yes | 0.9954983 | 0.6168\r\n| Model Builder (GPU) | 27000 | Yes | N/A | 0.5949\r\n\r\n### Source code / logs\r\n\r\nThe source code is at the following repo: https://github.com/luisquintanilla/EuroSATTrainSample\r\n\r\n[Dataset download link](http://madm.dfki.de/files/sentinel/EuroSAT.zip)\r\n\r\nOutput logs:\r\n\r\n[ImageClassificationTrainResultsModelBuilder.txt](https://github.com/dotnet/machinelearning/files/3894631/ImageClassificationTrainResultsModelBuilder.txt)\r\n[ImageClassificationTrainResultsAPI.txt](https://github.com/dotnet/machinelearning/files/3894632/ImageClassificationTrainResultsAPI.txt)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4504","RelatedDescription":"Closed issue \"[Image Classification] Low Accuracy on EuroSAT Dataset\" (#4504)"},{"Id":"530490802","IsPullRequest":true,"CreatedAt":"2019-11-29T21:27:07","Actor":"r0ss88","Number":"4512","RawContent":null,"Title":"Fixes #4505 Remove reliance on getting product version for model.zip/version.txt from FileVersionInfo and replace with using assembly custom attributes","State":"open","Body":"Refer to original issue for further details of the reasons for this change.\r\n\r\nI have used AssemblyInformationalVersionAttribute to match the same behaviour as was introduced with the change to reliance of FileVersionInfo.GetVersionInfo. There is already a test covering -ModelFiles.DetermineNugetVersionFromModel in Microsoft.ML.FunctionalTests.","Url":"https://github.com/dotnet/machinelearning/pull/4512","RelatedDescription":"Open PR \"Fixes #4505 Remove reliance on getting product version for model.zip/version.txt from FileVersionInfo and replace with using assembly custom attributes\" (#4512)"},{"Id":"529522768","IsPullRequest":false,"CreatedAt":"2019-11-28T08:31:45","Actor":"jsgonsette","Number":"4506","RawContent":null,"Title":"\"Op type not registered 'FusedBatchNormV3'\" exception when trying to use a TensorFlow 2.0 model","State":"closed","Body":"### System information\r\n\r\nSDK .NET Core (reflétant tous les global.json) :\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nEnvironnement d'exécution :\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nAnaconda Navigator 1.9.7 with TensorFlow 2.0.0\r\n\r\nVisual Studio 2019 Community Edition, version  16.3.10\r\nwith \r\n* Microsoft ML v1.4.0\r\n* TensorFlow.NET v0.12.0\r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTaking inspiration from this [ML.Net project](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ImageClassification_TensorFlow), \r\nI trained a neural network with Tensorflow 2.0, saved it to disk (with python function `tf.saved_model.save`) and then tried to load it and use it in a custom .Net project in C#.\r\n\r\n- **What happened?**\r\nI expected my C# program to be able to load a picture, to push it through the Tensorflow model and to get an output vector corresponding to classification results.\r\n\r\nEverything is fine when I load my model with function *LoadTensorFlowModel*. Calling *GetInputSchema* or *GetModelSchema* on the model returns coherent information.\r\n\r\nFitting my pipeline with *Fit* also works fine. However, as soon as I try to push a picture in the pipeline, I get an exception `Op type not registered 'FusedBatchNormV3` (see below).\r\n\r\n- **What did you expect?**\r\nI didn't expect to get this strange exception during inference.\r\nObviously this exception seems to happen inside the TensorFlow library called by ML.NET. I have no idea if the bug is on the TensorFlow side, or on the ML.NET side, or if missed something.\r\n\r\nBelow you can find minimal code to reproduce the problem.\r\n\r\n### Exception\r\n2019-11-27 16:17:24.783604: I tensorflow/cc/saved_model/reader.cc:31] Reading SavedModel from: D:\\training\\model\\\r\n2019-11-27 16:17:24.820727: I tensorflow/cc/saved_model/reader.cc:54] Reading meta graph with tags { serve }\r\n2019-11-27 16:17:25.045189: I tensorflow/cc/saved_model/loader.cc:182] Restoring SavedModel bundle.\r\n2019-11-27 16:17:25.954912: I tensorflow/cc/saved_model/loader.cc:132] Running initialization op on SavedModel bundle.\r\n2019-11-27 16:17:26.205591: I tensorflow/cc/saved_model/loader.cc:285] SavedModel load for tags { serve }; Status: success. Took 1421948 microseconds.\r\n2019-11-27 16:17:33.391938: W tensorflow/core/kernels/partitioned_function_ops.cc:197] Grappler optimization failed. Error: Op type not registered 'FusedBatchNormV3' in binary running on AUTISTE. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.\r\n2019-11-27 16:17:33.409723: W tensorflow/core/framework/op_kernel.cc:1401] OP_REQUIRES failed at partitioned_function_ops.cc:118 : Not found: Op type not registered 'FusedBatchNormV3' in binary running on AUTISTE. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.\r\nOp type not registered 'FusedBatchNormV3' in binary running on AUTISTE. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.\r\n\t [[{{node StatefulPartitionedCall}}]]\r\n\t [[{{node StatefulPartitionedCall}}]]\r\nException levée : 'System.InvalidOperationException' dans Microsoft.ML.Data.dll\r\nUne exception non gérée du type 'System.InvalidOperationException' s'est produite dans Microsoft.ML.Data.dll\r\n\r\n\r\n### Source code - TensorFlow side\r\n\r\n`import os`\r\n`import tensorflow as tf`\r\n`from tensorflow.keras.layers import Dense, GlobalAveragePooling2D`\r\n`from tensorflow.keras.models import Model`\r\n\r\n`base_model = tf.keras.applications.ResNet50 (include_top=False, weights='imagenet', input_shape=(224, 224, 3))`\r\n`x = base_model.output`\r\n`x = GlobalAveragePooling2D (name=\"top_avgpool2d\")(x)`\r\n`x = Dense (512, activation='relu', name=\"top_mlp\")(x)`\r\n`predictions = Dense (2, activation='softmax', name=\"top_gender\")(x)`\r\n`model = Model (inputs=base_model.input, outputs=predictions)`\r\n\r\n`tf.saved_model.save (model, 'D:\\\\training\\\\model\\\\')`\r\n\r\n### Source code - Visual Studio side\r\nSee attached file\r\n[VS Code.txt](https://github.com/dotnet/machinelearning/files/3898390/VS.Code.txt)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4506","RelatedDescription":"Closed issue \"\"Op type not registered 'FusedBatchNormV3'\" exception when trying to use a TensorFlow 2.0 model\" (#4506)"},{"Id":"529626089","IsPullRequest":true,"CreatedAt":"2019-11-28T00:09:53","Actor":"frank-dong-ms","Number":"4510","RawContent":null,"Title":"add fail retry for failed tests","State":"open","Body":"Add MLNETFactAttribute and replace default Fact Attribute:\r\n1. every test case will retry for 3 times at max by default if the test fails\r\n2. log flaky tests to a sql db to better estimate which tests are fail often\r\n3. add default timeout for every tests\r\n4. refine logging\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4510","RelatedDescription":"Open PR \"add fail retry for failed tests\" (#4510)"},{"Id":"529622803","IsPullRequest":true,"CreatedAt":"2019-11-27T23:55:38","Actor":"ashbhandare","Number":"4509","RawContent":null,"Title":"Correct inferring tensor shape for Tensorflow Transform","State":"open","Body":"Fixes #4364 partially.\r\nThe above issue brought into attention that there was a wrong assumption while inferring input tensor shape in TensorflowTransform. It was assumed that for a input node of a graph with unknown dimensions, all the dimensions would be the same, even though that is not true in most cases. For example, the most common tensor shape format for dealing with Image- based models is (batch_size, height, width, channels).\r\nThis change replaces this wrong check with more comprehensive method of inferring the input tensor shape.\r\nMore tests might need to be added for code coverage.  \r\n","Url":"https://github.com/dotnet/machinelearning/pull/4509","RelatedDescription":"Open PR \"Correct inferring tensor shape for Tensorflow Transform\" (#4509)"},{"Id":"529460918","IsPullRequest":false,"CreatedAt":"2019-11-27T16:41:22","Actor":"r0ss88","Number":"4505","RawContent":null,"Title":"Version.txt should use file version from assembly custom attributes not FileVersionInfo","State":"open","Body":"The changes made in issue https://github.com/dotnet/machinelearning/issues/3132 have introduced a bug due to relying on a physical location for the assembly. If the Microsoft.ML.Core assembly is loaded from memory the assembly.location will be empty. Using **FileVersionInfo.GetVersionInfo** relies on a physical path - so an argument exception is thrown inside System.IO.Path since the supplied path is empty.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/37ed3361f330ed439c9bd477abcfe5a27e06c0a1/src/Microsoft.ML.Core/Data/Repository.cs#L308-L311\r\n\r\nInstead of using FileVersionInfo.GetVersionInfo the assembly custom attributes should be used, for example:\r\n`var productVersion = assembly.CustomAttributes.FirstOrDefault(a => a.AttributeType == typeof(AssemblyFileVersionAttribute)).ConstructorArguments.First();`\r\n\r\nThis will return the same product string version as the FileVersionInfo.GetVersionInfo does.","Url":"https://github.com/dotnet/machinelearning/issues/4505","RelatedDescription":"Open issue \"Version.txt should use file version from assembly custom attributes not FileVersionInfo\" (#4505)"},{"Id":"527485845","IsPullRequest":true,"CreatedAt":"2019-11-25T22:14:48","Actor":"antoniovs1029","Number":"4500","RawContent":null,"Title":"Reenabling MacOS tests that had an issue with libgdiplus","State":"closed","Body":"### Edited First Post:\r\nPR #4492 disabled some tests that threw a `System.DllNotFoundException : Unable to load DLL 'libgdiplus'`, when trying to run them on our MacOS CI Pipeline.\r\n\r\nAs explained below in this thread, the problem was on homebrew's side, and this PR was meant to give a provitional solution for the problem. Nonetheless, this problem has just been fixed on homebrew's side, so now this PR simply reenables those tests.\r\n\r\n-----------------------------\r\n\r\n### Original First Post:\r\nSolves the problem with MacOS Pipeline where certain tests threw a\r\n`System.DllNotFoundException : Unable to load DLL 'libgdiplus': The specified module could not be found`\r\n\r\nThe issue was caused somewhere in homebrew's installation, and one way to solve this issue is to actually make homebrew to build the libgdiplus library after downloading it (instead of downloading a prebuilt version from [https://homebrew.bintray.com/bottles/mono-libgdiplus-6.0.4.high_sierra.bottle.tar.gz](https://homebrew.bintray.com/bottles/mono-libgdiplus-6.0.4.high_sierra.bottle.tar.gz) which is where it gets libgdiplus if homebrew doesn't build it). For some reason that's still unknown to me, this prebuilt version isn't working as expected, and the above exception is thrown.","Url":"https://github.com/dotnet/machinelearning/pull/4500","RelatedDescription":"Closed or merged PR \"Reenabling MacOS tests that had an issue with libgdiplus\" (#4500)"},{"Id":"527600602","IsPullRequest":false,"CreatedAt":"2019-11-25T18:37:33","Actor":"KSemenenko","Number":"4501","RawContent":null,"Title":"Visual Designer tools for neural networks","State":"closed","Body":"It would be great if in VS it will be possible to create neural networks in a visual editor.","Url":"https://github.com/dotnet/machinelearning/issues/4501","RelatedDescription":"Closed issue \"Visual Designer tools for neural networks\" (#4501)"},{"Id":"528071386","IsPullRequest":false,"CreatedAt":"2019-11-25T18:36:46","Actor":"hahsm","Number":"4502","RawContent":null,"Title":"Best algorithm to use (ML.Net 1.4.0)","State":"closed","Body":"Hi,\r\nI have a dataset in the following format,\r\n\r\nItem (feature) |  Model (feature) |  Brand (feature) | ItemId (PredictedLabel)\r\nIphone X         | X MAX                |  Apple               | 1\r\nSamsung 10S | 10S                      | Samsung          | 2\r\nSamsung Note 9 | 9                      | Samsung          | 3\r\nLikewise.. \r\n\r\nBased on the Item, Model and Size given as test data, I wanted to predict the ItemId. How is this possible, and what algorithm should I use to achieve this. I tried using Multiclass classification, and since Label column contains unique sequential values, each is considered as a separate class, and even with few data, it takes a very long time to train, with 0% accuracy. I am using ML.Net 1.4.0. Would appreciate if a sample code is shared.\r\n\r\nThank you.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4502","RelatedDescription":"Closed issue \"Best algorithm to use (ML.Net 1.4.0)\" (#4502)"},{"Id":"527384658","IsPullRequest":false,"CreatedAt":"2019-11-22T21:02:59","Actor":"mayoatte","Number":"4499","RawContent":null,"Title":"Out of Memory Exception In Model Builder","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 3.0 \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nTried to use a Model Builder (AutoML) with a 1 GB csv file. \r\n\r\n- **What happened?**\r\n\r\nOut of Memory Exception\r\n\r\n![image](https://user-images.githubusercontent.com/29760620/69455746-e840e080-0d1d-11ea-9932-4ea1ef8a1780.png)\r\n\r\n\r\n- **What did you expect?**\r\n\r\nThe file would get loaded. It looks like the Model Builder is trying to use  a StringBuilder here. That's naturally going to fall down after a certain size of csv. Stream?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4499","RelatedDescription":"Closed issue \"Out of Memory Exception In Model Builder\" (#4499)"},{"Id":"527364014","IsPullRequest":true,"CreatedAt":"2019-11-22T19:03:16","Actor":"LittleLittleCloud","Number":"4498","RawContent":null,"Title":"CodeGen For AzureAttach","State":"open","Body":"Transformer added:\r\n\r\nExtractPixel\r\nNormalizeMapping\r\nResizeImage\r\nApplyOnnxModel\r\nLabelMapping\r\n\r\nNotify that those are transformers that not exist in AutoML\r\n\r\nMake some refactor a bit in `AzureAttachCodeGenerator` so that it can expand to support Azure Attach smoothly plus more test friendly.\r\n\r\nThese are two E2E test for Azure CodeGen, \r\n[AzureCodeGeneratorTest](https://github.com/LittleLittleCloud/machinelearning/blob/da65aefadd40ea8cd35581a9fb44d1f3bc895096/test/Microsoft.ML.CodeGenerator.Tests/ApprovalTests/ConsoleCodeGeneratorTests.cs#L228)\r\n[AzureImageCodeGeneratorTest](https://github.com/LittleLittleCloud/machinelearning/blob/da65aefadd40ea8cd35581a9fb44d1f3bc895096/test/Microsoft.ML.CodeGenerator.Tests/ApprovalTests/ConsoleCodeGeneratorTests.cs#L193)\r\n\r\n\r\nSee [UCI_Adult](https://github.com/LittleLittleCloud/UCI_Adult) for classification case\r\n\r\nSee [AzureImage](https://github.com/LittleLittleCloud/AzureImage) For Image Classification case","Url":"https://github.com/dotnet/machinelearning/pull/4498","RelatedDescription":"Open PR \"CodeGen For AzureAttach\" (#4498)"},{"Id":"527343723","IsPullRequest":true,"CreatedAt":"2019-11-22T19:01:17","Actor":"LittleLittleCloud","Number":"4497","RawContent":null,"Title":"wip - CodeGen for Azure Attach Image","State":"closed","Body":"Transformer added:\r\n- ExtractPixel\r\n- NormalizeMapping\r\n- ResizeImage\r\n- ApplyOnnxModel\r\n\r\nNotify that those are transformers that not exist in AutoML","Url":"https://github.com/dotnet/machinelearning/pull/4497","RelatedDescription":"Closed or merged PR \"wip - CodeGen for Azure Attach Image\" (#4497)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-06T05:30:43.2415771Z","RunDurationInMilliseconds":1095}