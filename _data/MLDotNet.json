{"Data":{"GitHub":{"Issues":[{"Id":"536090016","IsPullRequest":true,"CreatedAt":"2019-12-11T01:37:25","Actor":"harshithapv","Number":"4564","RawContent":null,"Title":"Adding Cyclic LR scheduling for Image Classification API ","State":"open","Body":"This PR implements Cyclic Learning rate scheduler. The following paper has more information.\r\nhttps://arxiv.org/abs/1506.01186\r\n\r\nAlso added unit test and integration test for the same.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4564","RelatedDescription":"Open PR \"Adding Cyclic LR scheduling for Image Classification API \" (#4564)"},{"Id":"536088250","IsPullRequest":true,"CreatedAt":"2019-12-11T01:30:49","Actor":"frank-dong-ms","Number":"4563","RawContent":null,"Title":"add document for method ChnageModelThreshold","State":"open","Body":"Fixes issue #4527 , add documentation for public method ChnageModelThreshold.\r\n\r\nThis method is introduced in #2969\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4563","RelatedDescription":"Open PR \"add document for method ChnageModelThreshold\" (#4563)"},{"Id":"536053200","IsPullRequest":true,"CreatedAt":"2019-12-10T23:28:55","Actor":"harishsk","Number":"4562","RawContent":null,"Title":"Added onnx export support for SlotsDroppingTransformer","State":"open","Body":"This work required the use of ConstantOfShape operator from onnx which has an attribute of type Tensor. Most operators have attributes that are of primitive types (int, float, etc). ML.NET Onnx converter coded didnt have support to add attributes of tensor types. \r\nTherefore this PR includes the support for adding tensor type attributes along with the necessary code and tests for SlotsDroppingTransformer. ","Url":"https://github.com/dotnet/machinelearning/pull/4562","RelatedDescription":"Open PR \"Added onnx export support for SlotsDroppingTransformer\" (#4562)"},{"Id":"535921255","IsPullRequest":true,"CreatedAt":"2019-12-10T22:04:45","Actor":"sharwell","Number":"4561","RawContent":null,"Title":"Add IterationDataAttribute","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4561","RelatedDescription":"Closed or merged PR \"Add IterationDataAttribute\" (#4561)"},{"Id":"535892862","IsPullRequest":true,"CreatedAt":"2019-12-10T17:59:21","Actor":"sharwell","Number":"4560","RawContent":null,"Title":"Add netcoreapp3.0 output for SsaForecast test","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4560","RelatedDescription":"Open PR \"Add netcoreapp3.0 output for SsaForecast test\" (#4560)"},{"Id":"534332024","IsPullRequest":true,"CreatedAt":"2019-12-10T04:43:14","Actor":"sharwell","Number":"4539","RawContent":null,"Title":"Create SafeBoosterHandle and SafeDataSetHandle","State":"closed","Body":"These safe handles were created based on the crash data in https://dev.azure.com/dnceng/public/_build/results?buildId=449745&view=logs.","Url":"https://github.com/dotnet/machinelearning/pull/4539","RelatedDescription":"Closed or merged PR \"Create SafeBoosterHandle and SafeDataSetHandle\" (#4539)"},{"Id":"534432183","IsPullRequest":false,"CreatedAt":"2019-12-10T01:15:04","Actor":"CBrauer","Number":"4542","RawContent":null,"Title":"Format error in GetFormattedConfusionTable\"","State":"closed","Body":"Hey,\r\n\r\nI'm trying to print a confusion matrix on a binary classification model using:\r\n\r\n`Console.WriteLine(\"Confusion Matrix:\\n{0}\", metrics.ConfusionMatrix.GetFormattedConfusionTable());\r\n`\r\n\r\nI get:\r\n\r\n![image](https://user-images.githubusercontent.com/1317234/70378656-e3f8f380-18d7-11ea-8e96-e96fea095059.png)\r\n\r\nShouldn’t there be a comma here instead of a space?\r\n\r\nCharles","Url":"https://github.com/dotnet/machinelearning/issues/4542","RelatedDescription":"Closed issue \"Format error in GetFormattedConfusionTable\"\" (#4542)"},{"Id":"534800323","IsPullRequest":false,"CreatedAt":"2019-12-10T00:53:47","Actor":"rauhs","Number":"4553","RawContent":null,"Title":"Expose EvaluateWithPRCurve in BinaryClassificationCatalog","State":"closed","Body":"Version: 1.4.0\r\n\r\nThis was once available: 122c31952829338e9cfa91ca72246af6e572a618\r\n\r\nBut now there is no way to access `EvaluateWithPRCurve`.","Url":"https://github.com/dotnet/machinelearning/issues/4553","RelatedDescription":"Closed issue \"Expose EvaluateWithPRCurve in BinaryClassificationCatalog\" (#4553)"},{"Id":"534813076","IsPullRequest":false,"CreatedAt":"2019-12-10T00:52:32","Actor":"rauhs","Number":"4554","RawContent":null,"Title":"BinaryClassification.Evaluate completely ignores the predicted labels","State":"closed","Body":"Version: 1.4.0\r\n\r\nI'm training a Binary LightGBM classifier and want to change the threshold of the model. This will change my predictions accordingly. Though, `BinaryClassification.Evaluate` will always return me the same precision/recall.\r\n\r\n```C#\r\n        var newModel = ctx.BinaryClassification.ChangeModelThreshold(model, -100_000);\r\n        var dataView = newModel.Transform(dv);\r\n        var labels = dataView.GetColumn<bool>(\"PredictedLabel\").ToArray();\r\n\r\n        var numTrue = labels.Count(x => x == true); // All are true.\r\n        var numFalse = labels.Count(x => x == false); // 0\r\n\r\n        testPerformance = ctx.BinaryClassification.Evaluate(dataView);\r\n```\r\n\r\nWith the above threshold the labels are all `true`. ","Url":"https://github.com/dotnet/machinelearning/issues/4554","RelatedDescription":"Closed issue \"BinaryClassification.Evaluate completely ignores the predicted labels\" (#4554)"},{"Id":"535423004","IsPullRequest":false,"CreatedAt":"2019-12-10T00:48:01","Actor":"jigarhshah17","Number":"4559","RawContent":null,"Title":"How to use and pass runtime created class in .Model.CreatePredictionEngine(Of TRow, TDst)(loadedModel)","State":"closed","Body":"i have created class and its field with assign value at run time and want to pass it in (of TRow)\r\nModel.CreatePredictionEngine(Of TRow, TDst)(loadedModel)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4559","RelatedDescription":"Closed issue \"How to use and pass runtime created class in .Model.CreatePredictionEngine(Of TRow, TDst)(loadedModel)\" (#4559)"},{"Id":"535419919","IsPullRequest":false,"CreatedAt":"2019-12-10T00:35:50","Actor":"mveeris","Number":"4558","RawContent":null,"Title":"ImageClassification training stops","State":"open","Body":"### System information\r\n\r\n- **.NET Version .NET Core 3.0**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTrying to train MulticlassClassification with dataset of 2096 images and 8 classes\r\n- **What happened?**\r\nTraining just stops at one point in the Fit() method. It never exits the method.\r\nNo exeptions as well.\r\nWhen I reduce the number images for example to 1100, then training successfuly ends.\r\nAnd it doesn't seem to make any difference witch images I remove.\r\n\r\n### Source code / logs\r\nThis is the last log in the output window. After that CPU activity remains high for few seconds and \r\nthen drops to 0.\r\n\r\nPhase: Bottleneck Computation, Dataset used: Validation, Image Index: 405\r\nPhase: Bottleneck Computation, Dataset used: Validation, Image Index: 406\r\nPhase: Bottleneck Computation, Dataset used: Validation, Image Index: 407\r\n[Source=RowToRowMapperTransform; Cursor, Kind=Trace] Channel finished. Elapsed 00:00:11.0930351.\r\n[Source=RowToRowMapperTransform; Cursor, Kind=Trace] Channel disposed\r\n[Source=GenerateNumber; Cursor, Kind=Trace] Channel finished. Elapsed 00:00:11.0635798.\r\n[Source=GenerateNumber; Cursor, Kind=Trace] Channel disposed\r\n[Source=RangeFilter; Cursor, Kind=Trace] Channel finished. Elapsed 00:00:11.0637819.\r\n[Source=RangeFilter; Cursor, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel finished. Elapsed 00:00:00.0109063.\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel finished. Elapsed 00:00:00.0332705.\r\n[Source=TextLoader; Binding, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel finished. Elapsed 00:00:00.0050095.\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel finished. Elapsed 00:00:00.0168461.\r\n[Source=TextLoader; Binding, Kind=Trace] Channel disposed\r\n'ImageClassificationNetCore.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0\\System.Runtime.CompilerServices.Unsafe.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'ImageClassificationNetCore.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0\\System.Text.RegularExpressions.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nThe thread 0x11e8 has exited with code 0 (0x0).\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel started\r\n[Source=TextLoader; Cursor, Kind=Trace] Channel started\r\n[Source=Shuffle; Cursor, Kind=Trace] Channel started\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4558","RelatedDescription":"Open issue \"ImageClassification training stops\" (#4558)"},{"Id":"535073567","IsPullRequest":true,"CreatedAt":"2019-12-09T17:22:53","Actor":"sharwell","Number":"4557","RawContent":null,"Title":"Add a test handler for AppDomain.UnhandledException","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4557","RelatedDescription":"Open PR \"Add a test handler for AppDomain.UnhandledException\" (#4557)"},{"Id":"535023372","IsPullRequest":true,"CreatedAt":"2019-12-09T15:56:49","Actor":"sharwell","Number":"4556","RawContent":null,"Title":"SsaForecast iterations experiment","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4556","RelatedDescription":"Open PR \"SsaForecast iterations experiment\" (#4556)"},{"Id":"534314921","IsPullRequest":true,"CreatedAt":"2019-12-09T15:30:42","Actor":"sharwell","Number":"4538","RawContent":null,"Title":"Convert LdaEngine to a SafeHandle","State":"closed","Body":"This pull request follows the test failure observed in https://dev.azure.com/dnceng/public/_build/results?buildId=449759&view=ms.vss-test-web.build-test-results-tab&runId=14347330&resultId=100770&paneView=debug. Converting this object to a SafeHandle has two primary advantages:\r\n\r\n1. The object will not be disposed while there is an ongoing native call\r\n2. Misuse of the object by trying to pass an invalid instance to a native call will throw an exception at the point of the call","Url":"https://github.com/dotnet/machinelearning/pull/4538","RelatedDescription":"Closed or merged PR \"Convert LdaEngine to a SafeHandle\" (#4538)"},{"Id":"535000982","IsPullRequest":false,"CreatedAt":"2019-12-09T15:20:39","Actor":"KiransHub","Number":"4555","RawContent":null,"Title":"AutoML Nuget Package won't train against TSV","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10 64bit\r\n- **.NET Version (eg., dotnet --info)**: \r\ndotnet core 3.0\r\n\r\n### Issue\r\n\r\n- **What did you do?** \r\nInstalled AutoML nuget package. Setup sentiment analysis training. Selected correct labels and features columns. \r\n\r\nWent to train and... \r\n\r\n- **What happened?**\r\n\r\nI got a message almost immediately \"Failed. See more in Output pane\". \r\n\r\nThe output pane for \"Machine Learning\" is completely empty! \r\n\r\n- **What did you expect?**\r\nAt least an error... \r\n\r\nscreenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/4026553/70447947-814e5600-1a97-11ea-8515-6c53bd2c77c7.png)\r\n\r\nHere's the input data pane: \r\n\r\n![image](https://user-images.githubusercontent.com/4026553/70448245-fe79cb00-1a97-11ea-8040-79b9deeccb83.png)\r\n\r\n\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4555","RelatedDescription":"Open issue \"AutoML Nuget Package won't train against TSV\" (#4555)"},{"Id":"534580881","IsPullRequest":true,"CreatedAt":"2019-12-09T06:32:37","Actor":"sharwell","Number":"4549","RawContent":null,"Title":"Add tests for IParameterValue implementations","State":"closed","Body":"This change provides deterministic coverage for the implementation of `LongParameterValue`, `FloatParameterValue`, and `StringParameterValue`.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4549","RelatedDescription":"Closed or merged PR \"Add tests for IParameterValue implementations\" (#4549)"},{"Id":"534598675","IsPullRequest":true,"CreatedAt":"2019-12-09T03:06:42","Actor":"sharwell","Number":"4551","RawContent":null,"Title":"Use std::unique_ptr for samplers_ and likelihood_in_iter_","State":"closed","Body":"Fixes an access violation in native code if `LdaEngine` is deleted before `samplers_` is initialized.","Url":"https://github.com/dotnet/machinelearning/pull/4551","RelatedDescription":"Closed or merged PR \"Use std::unique_ptr for samplers_ and likelihood_in_iter_\" (#4551)"},{"Id":"534605298","IsPullRequest":true,"CreatedAt":"2019-12-08T21:31:56","Actor":"sharwell","Number":"4552","RawContent":null,"Title":"WIP Log exceptions thrown within finalizers","State":"open","Body":"Exceptions thrown from a finalizer will terminate the process.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4552","RelatedDescription":"Open PR \"WIP Log exceptions thrown within finalizers\" (#4552)"},{"Id":"534302884","IsPullRequest":true,"CreatedAt":"2019-12-08T20:54:21","Actor":"sharwell","Number":"4537","RawContent":null,"Title":"Enable VSTestBlame to show details for crashes","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4537","RelatedDescription":"Closed or merged PR \"Enable VSTestBlame to show details for crashes\" (#4537)"},{"Id":"534471315","IsPullRequest":true,"CreatedAt":"2019-12-08T20:50:24","Actor":"sharwell","Number":"4544","RawContent":null,"Title":"WIP Safe pointers","State":"closed","Body":"Locally I converted most owned native objects to `std::unique_ptr` and `std::shared_ptr`. This pull request represents a relatively easy-to-review subset of the changes with minimal overall fan-out in the code.\r\n\r\n* Pass by reference when null is not expected (submitted separately as #4546)\r\n* Use `std::unique_ptr` for objects in `LdaEngine` (submitted separately as #4547)\r\n* Use `std::unique_ptr` for `samplers_` and `likelihood_in_iter_`","Url":"https://github.com/dotnet/machinelearning/pull/4544","RelatedDescription":"Closed or merged PR \"WIP Safe pointers\" (#4544)"},{"Id":"534472994","IsPullRequest":true,"CreatedAt":"2019-12-08T20:45:26","Actor":"sharwell","Number":"4547","RawContent":null,"Title":"Use std::unique_ptr for objects in LdaEngine","State":"closed","Body":"Builds on #4546","Url":"https://github.com/dotnet/machinelearning/pull/4547","RelatedDescription":"Closed or merged PR \"Use std::unique_ptr for objects in LdaEngine\" (#4547)"},{"Id":"534447833","IsPullRequest":true,"CreatedAt":"2019-12-08T19:49:57","Actor":"sharwell","Number":"4543","RawContent":null,"Title":"Update code coverage integration","State":"closed","Body":"* Simplifies coverage integration\r\n* Removes the need to define CODECOV_TOKEN during builds","Url":"https://github.com/dotnet/machinelearning/pull/4543","RelatedDescription":"Closed or merged PR \"Update code coverage integration\" (#4543)"},{"Id":"534582582","IsPullRequest":true,"CreatedAt":"2019-12-08T18:43:18","Actor":"sharwell","Number":"4550","RawContent":null,"Title":"Add tests for ParameterSet equality","State":"open","Body":"📝 Builds on #4549\r\n\r\nThis change stabilizes test coverage in `ParameterSet.Equals` and `ParameterSet.ContainsParamValue`.","Url":"https://github.com/dotnet/machinelearning/pull/4550","RelatedDescription":"Open PR \"Add tests for ParameterSet equality\" (#4550)"},{"Id":"534472100","IsPullRequest":true,"CreatedAt":"2019-12-08T17:42:36","Actor":"sharwell","Number":"4545","RawContent":null,"Title":"Add Xunit.Combinatorial for test projects","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4545","RelatedDescription":"Closed or merged PR \"Add Xunit.Combinatorial for test projects\" (#4545)"},{"Id":"534472376","IsPullRequest":true,"CreatedAt":"2019-12-08T17:42:19","Actor":"sharwell","Number":"4546","RawContent":null,"Title":"Pass by reference when null is not expected","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4546","RelatedDescription":"Closed or merged PR \"Pass by reference when null is not expected\" (#4546)"},{"Id":"534535423","IsPullRequest":true,"CreatedAt":"2019-12-08T12:34:36","Actor":"yaeldekel","Number":"4548","RawContent":null,"Title":"Expression estimator/transformer","State":"open","Body":"Fixes #4015 .","Url":"https://github.com/dotnet/machinelearning/pull/4548","RelatedDescription":"Open PR \"Expression estimator/transformer\" (#4548)"},{"Id":"534294197","IsPullRequest":true,"CreatedAt":"2019-12-08T01:52:54","Actor":"sharwell","Number":"4535","RawContent":null,"Title":"Prevent exceptions from escaping FileSystemWatcher events","State":"closed","Body":"Exceptions in the handler of FileSystemWatcher events will terminate the process. This pull request updates the event handler to use a try/catch block that logs the error instead of crashing the process.\r\n\r\nThis fixes one known cause of test process failures.","Url":"https://github.com/dotnet/machinelearning/pull/4535","RelatedDescription":"Closed or merged PR \"Prevent exceptions from escaping FileSystemWatcher events\" (#4535)"},{"Id":"534340364","IsPullRequest":true,"CreatedAt":"2019-12-07T20:19:39","Actor":"sharwell","Number":"4540","RawContent":null,"Title":"Increase the code coverage run timeout","State":"closed","Body":"Most of the code coverage runs are timing out. Increase the timeout to match the value used for non-code-coverage builds.","Url":"https://github.com/dotnet/machinelearning/pull/4540","RelatedDescription":"Closed or merged PR \"Increase the code coverage run timeout\" (#4540)"},{"Id":"534366723","IsPullRequest":false,"CreatedAt":"2019-12-07T07:17:51","Actor":"willvelida","Number":"4541","RawContent":null,"Title":"InvalidDataException: End of Central Directory record could not be found. Error when loading custom trained model from Azure Blob Storage in ASP.NET Core Web API ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nI have trained a regression model and I have uploaded it to a container in Blob Storage. This is the method that I use to upload the model to blob storage:\r\n\r\n`public async Task TrainAndUploadModelAsync(MLContext mlContext, string dataPath, CloudBlobContainer container)\r\n{\r\nIDataView dataView = mlContext.Data.LoadFromTextFile(dataPath, hasHeader: true, separatorChar: ',');\r\n\r\n        var pipeline = mlContext.Transforms.CopyColumns(\"Label\", \"FareAmount\")\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"VendorIdEncoded\", \"VendorId\"))\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"RateCodeEncoded\", \"RateCode\"))\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding(\"PaymentTypeEncoded\", \"PaymentType\"))\r\n            .Append(mlContext.Transforms.Concatenate(\"Features\", \"VendorIdEncoded\", \"RateCodeEncoded\", \"PassengerCount\", \"TripTime\", \"TripDistance\", \"PaymentTypeEncoded\"))\r\n            .Append(mlContext.Regression.Trainers.FastTree());\r\n\r\n        var model = pipeline.Fit(dataView);\r\n\r\n        using (var stream = new MemoryStream())\r\n        {\r\n            mlContext.Model.Save(model, dataView.Schema, stream);\r\n            stream.Position = 0;\r\n            await _azureStorageHelpers.UploadBlobToStorage(container, \"Model.zip\", stream);\r\n        }\r\n    }`\r\nNow I'm trying to consume that model via a ASP.NET Core Web API like so:\r\n\r\nservices.AddPredictionEnginePool<TaxiTrip, TaxiTripFarePrediction>() .FromUri( modelName: \"TaxiTripFarePredictionModel\", uri: \"https://velidastorage.blob.core.windows.net/mlmodels/model.zip\", period: TimeSpan.FromSeconds(15));\r\n\r\nThen I'm calling a POST Method to make a prediction on the following JSON payload\r\n\r\n{ \"VendorId\": \"VTS\", \"RateCode\": \"1\", \"PassengerCount\": 1, \"TripTime\": 1140, \"TripDistance\": 3.75, \"PaymentType\": \"CRD\", \"FareAmount\": 0 }\r\n\r\nAnd the POST Method:\r\n\r\n`[HttpPost]\r\npublic ActionResult Post([FromBody] TaxiTrip input)\r\n{\r\nif (!ModelState.IsValid)\r\n{\r\nreturn BadRequest();\r\n}\r\n\r\n        TaxiTripFarePrediction prediction = _predictionEnginePool.Predict(modelName: \"TaxiTripFarePredictionModel\", example: input);\r\n\r\n        string predictedFareAmount = prediction.FareAmount.ToString();\r\n\r\n        return Ok(predictedFareAmount);\r\n    }`\r\n\r\n\r\n- **What happened?**\r\n\r\nHowever, when I call the PredictionEnginePool.Predict() method, I get the following error:\r\n\r\nSystem.FormatException: 'Failed to open a zip archive'. Inner Exception InvalidDataException: End of Central Directory record could not be found.\r\n\r\n- **What did you expect?**\r\n\r\nExpected the model to be consumed to make a prediction\r\n\r\nI'm not sure where I am going wrong here. I'm wondering whether or not the model has been uploaded correctly, or whether the Web API is having difficulty downloading the blob.\r\n\r\n\r\n### Source code / logs\r\n\r\nSource code for API and Model Trainer can be found here\r\n\r\nhttps://github.com/willvelida/PricePredictor","Url":"https://github.com/dotnet/machinelearning/issues/4541","RelatedDescription":"Open issue \"InvalidDataException: End of Central Directory record could not be found. Error when loading custom trained model from Azure Blob Storage in ASP.NET Core Web API \" (#4541)"},{"Id":"534297498","IsPullRequest":true,"CreatedAt":"2019-12-06T22:59:12","Actor":"sharwell","Number":"4536","RawContent":null,"Title":"Update Microsoft.Extensions.* to 3.0.1","State":"open","Body":"The 3.0 release includes a fix to cases where `ChangeToken.OnChange` would not unregister callbacks even when disposed.\r\n\r\nSee aspnet/Extensions#558, aspnet/Extensions#869","Url":"https://github.com/dotnet/machinelearning/pull/4536","RelatedDescription":"Open PR \"Update Microsoft.Extensions.* to 3.0.1\" (#4536)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-11T05:30:42.7856607Z","RunDurationInMilliseconds":662}