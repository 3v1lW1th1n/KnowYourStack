{"Data":{"Vue":{"Events":[{"Id":"7369744989","Type":"IssuesEvent","CreatedAt":"2018-03-13T04:43:41","Actor":"semi-xi","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7815","RelatedDescription":"Opened issue \"It's different between  array = [] and array.length = 0\" (#7815) at vuejs/vue","RelatedBody":"### Version\r\n2.2.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/smibanxi/project/editor/AdbvJQ](https://codepen.io/smibanxi/project/editor/AdbvJQ)\r\n\r\n### Steps to reproduce\r\nhave a tab view,\r\nchange tab view \r\nthe second tab is different from the third tab\r\n\r\n### What is expected?\r\nthe second tab  and the third are the same\r\n\r\n### What is actually happening?\r\nthe second tab is different from the third tab\r\n\r\n---\r\nwhen a set `array.length = 0 `, i see the data of this array is empty. but the view is still exist \r\nwhen a set `array.length = [] `, it really disappear\r\n\r\nit is this method of array wrong?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7369723849","Type":"PullRequestEvent","CreatedAt":"2018-03-13T04:34:28","Actor":"jinzhubaofu","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/7814","RelatedDescription":"Opened pull request \"fix: add v-show style in ssr if style is binding to an array\" (#7814) at vuejs/vue","RelatedBody":"web/server/directives/show just add style.display='none', no matter style is object or array; If\r\nstyle is an array, it will lost additional property while tranformed into object by\r\nshared/utils#toObject;\r\n\r\nfix #7813\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"},{"Id":"7369646470","Type":"IssuesEvent","CreatedAt":"2018-03-13T04:02:31","Actor":"jinzhubaofu","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7813","RelatedDescription":"Opened issue \"server side render lost v-show if style to binding to an array\" (#7813) at vuejs/vue","RelatedBody":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://codepen.io/ludafa/pen/Broxxy](https://codepen.io/ludafa/pen/Broxxy)\r\n\r\n### Steps to reproduce\r\n1. npm install vue vue-server-render\r\n2. new a `index.js` with this code:\r\n\r\n  ```js\r\n  const Vue = require('vue')\r\n  const app = new Vue({\r\n    template: `<div :style=\"[{color: a, background: b}]\" v-show=\"c\">test</div>`,\r\n    data() {\r\n      return {\r\n        a: 'red',\r\n        b: 'blue',\r\n        c: false\r\n      };\r\n    }\r\n  })\r\n  const renderer = require('vue-server-renderer').createRenderer()\r\n  renderer.renderToString(app, (err, html) => {\r\n    if (err) throw err\r\n    console.log(html)\r\n  })\r\n  ```\r\n\r\n3. run: node index.js\r\n\r\n### What is expected?\r\n<div data-server-rendered=\"true\" style=\"color:red;background:blue;display:none;\">test</div>\r\n\r\n### What is actually happening?\r\n<div data-server-rendered=\"true\" style=\"color:red;background:blue;\">test</div>\r\n\r\n---\r\nPlease run the CodePen on Node\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7369638305","Type":"IssuesEvent","CreatedAt":"2018-03-13T03:59:23","Actor":"gzzhanghao","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2102","RelatedDescription":"Opened issue \"`beforeRouteLeave` invoked twice when replacing path in target view\" (#2102) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Jason_Daurus/vv79u55j/](https://jsfiddle.net/Jason_Daurus/vv79u55j/)\r\n\r\n### Steps to reproduce\r\nClick at \"link-b\" in the fiddle, you'll have \"A:beforeRouteLeave\" logged twice in browser's console.\r\n\r\n### What is expected?\r\nA:beforeRouteLeave should not be invoked after B:beforeRouteEnter\r\n\r\n### What is actually happening?\r\nit does :-(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7369360326","Type":"PullRequestEvent","CreatedAt":"2018-03-13T02:17:31","Actor":"Jinjiang","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2101","RelatedDescription":"Opened pull request \"[docs][zh-cn] synced #2091\" (#2101) at vuejs/vue-router","RelatedBody":"#2091 change example for apache-config\r\nand a newline between the new content and the code block.\r\n/ping @Justineo \r\nThanks."},{"Id":"7364719485","Type":"IssuesEvent","CreatedAt":"2018-03-12T10:18:47","Actor":"konglinlin","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2100","RelatedDescription":"Opened issue \"uc浏览器上有过度动效bug\" (#2100) at vuejs/vue-router","RelatedBody":"\r\n在UC浏览器上使用动效的时候路由会更改，但是页面视图不会更新（版本：UC V11.9.0.970）"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7369733767","Type":"IssuesEvent","CreatedAt":"2018-03-13T04:38:45","Actor":"Shyam-Chen","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1184","RelatedDescription":"Opened issue \"register a nested module\" (#1184) at vuejs/vuex","RelatedBody":"Replace arrays with dots.\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n});\r\n```\r\n\r\nto\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule('nested.myModule', {\r\n  // ...\r\n});\r\n```"},{"Id":"7369617376","Type":"PullRequestEvent","CreatedAt":"2018-03-13T03:51:20","Actor":"Jinjiang","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1183","RelatedDescription":"Merged pull request \"[docs][zh-cn] translated #1173\" (#1183) at vuejs/vuex","RelatedBody":"#1173 Mention payload in action handler in API\r\n/ping @Justineo \r\nThanks."},{"Id":"7369443151","Type":"PullRequestEvent","CreatedAt":"2018-03-13T02:47:12","Actor":"Jinjiang","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1183","RelatedDescription":"Opened pull request \"[docs][zh-cn] translated #1173\" (#1183) at vuejs/vuex","RelatedBody":"#1173 Mention payload in action handler in API\r\n/ping @Justineo \r\nThanks."}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"304626407","IsPullRequest":false,"CreatedAt":"2018-03-13T04:43:41","Actor":"semi-xi","Number":"7815","RawContent":null,"Title":"It's different between  array = [] and array.length = 0","State":"open","Body":"### Version\r\n2.2.6\r\n\r\n### Reproduction link\r\n[https://codepen.io/smibanxi/project/editor/AdbvJQ](https://codepen.io/smibanxi/project/editor/AdbvJQ)\r\n\r\n### Steps to reproduce\r\nhave a tab view,\r\nchange tab view \r\nthe second tab is different from the third tab\r\n\r\n### What is expected?\r\nthe second tab  and the third are the same\r\n\r\n### What is actually happening?\r\nthe second tab is different from the third tab\r\n\r\n---\r\nwhen a set `array.length = 0 `, i see the data of this array is empty. but the view is still exist \r\nwhen a set `array.length = [] `, it really disappear\r\n\r\nit is this method of array wrong?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7815","RelatedDescription":"Open issue \"It's different between  array = [] and array.length = 0\" (#7815)"},{"Id":"304625167","IsPullRequest":true,"CreatedAt":"2018-03-13T04:34:27","Actor":"jinzhubaofu","Number":"7814","RawContent":null,"Title":"fix: add v-show style in ssr if style is binding to an array","State":"open","Body":"web/server/directives/show just add style.display='none', no matter style is object or array; If\r\nstyle is an array, it will lost additional property while tranformed into object by\r\nshared/utils#toObject;\r\n\r\nfix #7813\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7814","RelatedDescription":"Open PR \"fix: add v-show style in ssr if style is binding to an array\" (#7814)"},{"Id":"304620424","IsPullRequest":false,"CreatedAt":"2018-03-13T04:02:31","Actor":"jinzhubaofu","Number":"7813","RawContent":null,"Title":"[SSR] lost v-show if style is to binding to an array","State":"open","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://codepen.io/ludafa/pen/Broxxy](https://codepen.io/ludafa/pen/Broxxy)\r\n\r\n### Steps to reproduce\r\n1. npm install vue vue-server-render\r\n2. new a `index.js` with this code:\r\n\r\n  ```js\r\n  const Vue = require('vue')\r\n  const app = new Vue({\r\n    template: `<div :style=\"[{color: a, background: b}]\" v-show=\"c\">test</div>`,\r\n    data() {\r\n      return {\r\n        a: 'red',\r\n        b: 'blue',\r\n        c: false\r\n      };\r\n    }\r\n  })\r\n  const renderer = require('vue-server-renderer').createRenderer()\r\n  renderer.renderToString(app, (err, html) => {\r\n    if (err) throw err\r\n    console.log(html)\r\n  })\r\n  ```\r\n\r\n3. run: node index.js\r\n\r\n### What is expected?\r\n```html\r\n<div data-server-rendered=\"true\" style=\"color:red;background:blue;display:none;\">test</div>\r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<div data-server-rendered=\"true\" style=\"color:red;background:blue;\">test</div>\r\n```\r\n\r\n---\r\nPlease run the CodePen on Node\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7813","RelatedDescription":"Open issue \"[SSR] lost v-show if style is to binding to an array\" (#7813)"},{"Id":"304611600","IsPullRequest":false,"CreatedAt":"2018-03-13T03:04:00","Actor":"edward32tnt","Number":"7812","RawContent":null,"Title":"[SSR] 服务端渲染能否增加自定义 TemplateRenderer 或者 提供部分inject的参数？","State":"open","Body":"### What problem does this feature solve?\r\n当我使用 inject: true 的参数渲染 ssr 页面时，我只想对 renderScripts 这部分做自定义修改，其他继续沿用默认templateRenderer的render**。\r\n\r\n如果 我设置了 inject: false，那我必须在 html模板中 添加 各种 {{ render** }} 。\r\n\r\n请问有没有更方便的方法？\r\n\r\n### What does the proposed API look like?\r\n```\r\ncreateBundleRenderer({\r\n  inject:true,\r\n  renderScripts: function() { ... },\r\n})\r\n\r\n```\r\nor \r\n\r\n```\r\ncreateBundleRenderer({\r\n  inject:true,\r\n  templateRenderer: new otherTemplateRenderer(),\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7812","RelatedDescription":"Open issue \"[SSR] 服务端渲染能否增加自定义 TemplateRenderer 或者 提供部分inject的参数？\" (#7812)"},{"Id":"304535310","IsPullRequest":false,"CreatedAt":"2018-03-12T23:36:38","Actor":"yaodingyd","Number":"7810","RawContent":null,"Title":"beforeload placeholder for async component","State":"closed","Body":"### What problem does this feature solve?\r\nMy use case is that parent component needs to properly calculate the number of $children to render after parent is mounted, and some of the $children can be async component, so I need a beforeload component option.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst AsyncComp = () => ({\r\n  // The component to load. Should be a Promise\r\n  component: import('./MyComp.vue'),\r\n  // A component to use while the async component is loading\r\n  loading: LoadingComp,\r\n  // A component to use before loads\r\n  beforeLoading: placeholder\r\n  // A component to use if the load fails\r\n  error: ErrorComp,\r\n  // Delay before showing the loading component. Default: 200ms.\r\n  delay: 200,\r\n  // The error component will be displayed if a timeout is\r\n  // provided and exceeded. Default: Infinity.\r\n  timeout: 3000\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7810","RelatedDescription":"Closed issue \"beforeload placeholder for async component\" (#7810)"},{"Id":"304567876","IsPullRequest":false,"CreatedAt":"2018-03-12T22:46:59","Actor":"linneakw","Number":"7811","RawContent":null,"Title":"v-bind=$attrs overrides the input type attribute in 2.5.14 and above","State":"open","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/linnea/onw3Lfm4/2/](https://jsfiddle.net/linnea/onw3Lfm4/2/)\r\n\r\n### Steps to reproduce\r\nCreate a custom component with an input wrapped in a div and:\r\n\r\n1. inherit attributes \r\n`v-bind=\"$attrs\"`\r\n2. Set the type attribute on the input\r\n`type=\"checkbox\"` \r\n3. Have a v-model on that input.\r\n\r\n### What is expected?\r\nThe inner input still receives type=\"checkbox\"\r\n\r\n### What is actually happening?\r\nNo type attribute is inherited\r\n\r\n---\r\nWe have a custom checkbox component that provides label styling etc, and used to be able to declare the input type as well as inherit attributes from the component. Other attributes that are set on the inner input are passed correctly (ie disabled, :true-value, etc), but not the type attribute, unless you bind it. This was working prior to v2.5.14.\r\n\r\nA temporary fix we've implemented is changing `type=\"checkbox\"` to `:type=\"'checkbox'\"`, or setting v-bind=\"$attrs\" to a computed property that returns an object with Object.assign({ type: 'checkbox'}, this.$attrs);\r\n\r\nRemoving the v-model from the input also fixes it, but we use it to handle multiple checkboxes, bound to the same array\r\n\r\nHere's the same fiddle above, working in 2.5.13\r\nhttps://jsfiddle.net/linnea/onw3Lfm4/4/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7811","RelatedDescription":"Open issue \"v-bind=$attrs overrides the input type attribute in 2.5.14 and above\" (#7811)"},{"Id":"304531780","IsPullRequest":false,"CreatedAt":"2018-03-12T21:34:32","Actor":"rikte88","Number":"7809","RawContent":null,"Title":"arr.slice not always reuses dom with v-for and key","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8s42h4bp/25/](https://jsfiddle.net/8s42h4bp/25/)\r\n\r\n### Steps to reproduce\r\n`<div v-for=\"row in visible\" :key=\"row\">{{row}}</div>`\r\n\r\nCase A (no problem): visible = rows.slice(100, 110) followed by visible = rows.slice(99, 109)\r\n\r\nCase B (problem): visible = rows.slice(100, 110) followed by visible = rows.slice(101, 111)\r\n\r\nThe first reuses DOM elements, while the latter appears to create new ones. This can be seen by inspecting the div boxes in firefox and see them all flashing orange when clicking the \"down\" button, but not the \"up\" button in the minimal reproduction. Why is this so, is it some kind of optimization, or is it a bug?\r\n\r\nI am trying to do this when scrolling a page up/down to only show rows that are in view in a huge table. It is visibly faster to scroll up than down, despite all elements being absolutely positioned. Happens in both Chrome and Firefox.\r\n\r\n### What is expected?\r\nDOM elements are reused in both case A and B.\r\n\r\n### What is actually happening?\r\nDOM elements appear to be recreated in case B, potentially causing unnecessary performance hit and contradicting:\r\nhttps://vuejs.org/v2/guide/list.html#Replacing-an-Array\r\n\r\n---\r\nLoving Vue, keep up the great work!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7809","RelatedDescription":"Closed issue \"arr.slice not always reuses dom with v-for and key\" (#7809)"},{"Id":"304326596","IsPullRequest":false,"CreatedAt":"2018-03-12T15:52:28","Actor":"furai","Number":"7803","RawContent":null,"Title":"Firefox - changing anything on element via $refs table breaks the binding","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n- [https://gist.github.com/furai/a35ac09836adaf3d291ed5364330d1d4](https://gist.github.com/furai/a35ac09836adaf3d291ed5364330d1d4)\r\n- [jsfiddle](https://jsfiddle.net/v0qt2z9y/)\r\n\r\n### Steps to reproduce\r\n1. Create vue.js instance and add data field to it.\r\n2. Create new \"title\" property.\r\n3. In your app create any element and output in it your \"title\".\r\n4. Add ref to your element.\r\n5. Change \"title\" in your app using some method.\r\n6. Change \"title\" via $refs table.\r\n7. Change back \"title\" via your method.\r\n\r\n### What is expected?\r\nYour \"title\" should change back to what was set by your method.\r\n\r\n### What is actually happening?\r\nTitle can't be changed anymore by your method. Vue is losing the binding to the element after it's updated via $refs.\r\n\r\n---\r\nThis happens only on Firefox (I'm using 60.0b2), other browsers (chrome, chromium) are fine.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7803","RelatedDescription":"Closed issue \"Firefox - changing anything on element via $refs table breaks the binding\" (#7803)"},{"Id":"304382916","IsPullRequest":false,"CreatedAt":"2018-03-12T15:40:45","Actor":"t93c","Number":"7806","RawContent":null,"Title":"Keydown Events not Working for Arrow Keys in IE11","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/bzcL72ry/1/](https://jsfiddle.net/bzcL72ry/1/)\r\n\r\n### Steps to reproduce\r\n1) Click on the input field\r\n2) Press the arrow keys\r\n\r\n### What is expected?\r\nThe paragraph below the input field will display the last arrow key pressed (or \"enter\" for the enter key).\r\n\r\n### What is actually happening?\r\nOnly the enter key is recognized and displayed.\r\n\r\n---\r\nProblem occurs in both v2.5.15 (https://jsfiddle.net/bzcL72ry/1/) and v2.5.14 (https://jsfiddle.net/bzcL72ry/2/) when using IE11.\r\n\r\nWorks properly in v2.5.13 (https://jsfiddle.net/bzcL72ry/3/) when using IE11.\r\n\r\nAll versions work in Chrome and Firefox.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7806","RelatedDescription":"Closed issue \"Keydown Events not Working for Arrow Keys in IE11\" (#7806)"},{"Id":"304423509","IsPullRequest":false,"CreatedAt":"2018-03-12T15:40:27","Actor":"andreasvirkus","Number":"7808","RawContent":null,"Title":"Euler's number breaks v-model for numeric inputs","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/andreasvirkus/csxy3vsd/1/](https://jsfiddle.net/andreasvirkus/csxy3vsd/1/)\r\n\r\n### Steps to reproduce\r\nSet up a native input element with type set as number. Type in \"e\" wherever in your numeric value.\r\n\r\n### What is expected?\r\nThe emitted value should include Euler's number (e.g. \"10e2\", \"4e 0\", etc.)\r\n\r\n### What is actually happening?\r\nThe mapped v-model value becomes undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7808","RelatedDescription":"Closed issue \"Euler's number breaks v-model for numeric inputs\" (#7808)"},{"Id":"304369627","IsPullRequest":false,"CreatedAt":"2018-03-12T14:50:39","Actor":"sqal","Number":"7805","RawContent":null,"Title":"Components are duplicated when they share the same data object","State":"closed","Body":"### Version\r\n`>= 2.5.14`\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/smhk3r4h/](https://jsfiddle.net/smhk3r4h/)\r\n\r\nhttps://jsfiddle.net/smhk3r4h/2/ (2.5.13)\r\n\r\n### Steps to reproduce\r\nOpen reproduction link\r\n\r\n### What is expected?\r\nFoo and Bar should be rendered only once with  `text-red` class name\r\n\r\n### What is actually happening?\r\nPassing the same data object to multiple components causes its duplication\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7805","RelatedDescription":"Closed issue \"Components are duplicated when they share the same data object\" (#7805)"},{"Id":"304395107","IsPullRequest":false,"CreatedAt":"2018-03-12T14:37:08","Actor":"Morgitou","Number":"7807","RawContent":null,"Title":"v-for evaluated even if v-if statement is false","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/180948/](https://jsfiddle.net/50wL7mdz/180948/)\r\n\r\n### Steps to reproduce\r\n1) Make a variable in data (e.g. project), that is null (or undefined) because you will get it from your server later on.\r\n2) Make a div with v-if=\"project\" v-for=\"item in project.list\"\r\n3) Get your error even if v-if is evaluated to false...\r\n\r\n### What is expected?\r\nNothing to append\r\n\r\n### What is actually happening?\r\nError: Vue is trying to evaluate an empty variable\r\n\r\n---\r\nThis is quite annoying, I have in this case to add an extra div to wrap the v-for statement. It should not evaluate the v-for if a v-if statement is false in the same html tag.\r\nBy the way, in this exemple, my project data is being  assigned later, after a request to the server.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7807","RelatedDescription":"Closed issue \"v-for evaluated even if v-if statement is false\" (#7807)"},{"Id":"304295443","IsPullRequest":true,"CreatedAt":"2018-03-12T13:34:41","Actor":"jkzing","Number":"7802","RawContent":null,"Title":"fix(ssr): add Fragment in RenderState typing","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7802","RelatedDescription":"Closed or merged PR \"fix(ssr): add Fragment in RenderState typing\" (#7802)"},{"Id":"304261875","IsPullRequest":false,"CreatedAt":"2018-03-12T13:21:28","Actor":"yozman","Number":"7799","RawContent":null,"Title":"vnode not work for functional from v2.5.14","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://codepen.io/yozman/pen/JLdaRZ](https://codepen.io/yozman/pen/JLdaRZ)\r\n\r\n### Steps to reproduce\r\nthe codepen is a demo for v2.5.13,\r\nit's works well,\r\nwhen change to v2.5.14 or v2.5.15,\r\nthere is blank output\r\n\r\n### What is expected?\r\nwork well as v2.5.13\r\n\r\n### What is actually happening?\r\nblank output\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7799","RelatedDescription":"Closed issue \"vnode not work for functional from v2.5.14\" (#7799)"},{"Id":"304333328","IsPullRequest":false,"CreatedAt":"2018-03-12T11:30:32","Actor":"Rolanddoda","Number":"7804","RawContent":null,"Title":"Cannot read property 'components' of undefined\"","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Steps to reproduce\r\n\r\n> I am importing in App.vue a component named Profile.vue.In Profile.vue also i import another component named ChangePassword.vue.Everything it works and worked fine.\r\n\r\nBut now i dont want anymore to import ChangaPassword in Profile.vue component.But when i delete the import,delete the component registration and delete the html tag of ChangePassword component i got a strange error.\r\n\r\n### What is expected?\r\nExpected this change to do not affect something in application and also to dont get error.\r\n\r\n### What is actually happening?\r\nBut i got the follow error.\r\n\r\nError in render: \"TypeError: Cannot read property 'components' of undefined\"\r\n\r\nfound in\r\n\r\n---> <App> at src\\App.vue\r\n       <Root>\r\n\r\nvue.esm.js?efeb:1717 TypeError: Cannot read property 'components' of undefined\r\n    at checkComponents (vue.esm.js?efeb:1315)\r\n    at mergeOptions (vue.esm.js?efeb:1436)\r\n    at mergeOptions (vue.esm.js?efeb:1452)\r\n    at Function.Vue.extend (vue.esm.js?efeb:4733)\r\n    at createComponent (vue.esm.js?efeb:4135)\r\n    at _createElement (vue.esm.js?efeb:4363)\r\n    at createElement (vue.esm.js?efeb:4300)\r\n    at vm._c (vue.esm.js?efeb:4416)\r\n    at Proxy.render (eval at ./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-04c2046b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue (app.js:1923), <anonymous>:50:27)\r\n    at VueComponent.Vue._render (vue.esm.js?efeb:4474)\r\n\r\n---\r\nI think that i miss something but since i delete the import in Profile.vue and delete the components: {} section and also the html tag related to ChangePassword.vue everything should work fine.Idk why it isnt\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7804","RelatedDescription":"Closed issue \"Cannot read property 'components' of undefined\"\" (#7804)"},{"Id":"304273451","IsPullRequest":true,"CreatedAt":"2018-03-12T11:05:03","Actor":"jkzing","Number":"7801","RawContent":null,"Title":"fix(vdom): add default branch to return vnode in create-functional-component, fix #7799","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n#7799","Url":"https://github.com/vuejs/vue/pull/7801","RelatedDescription":"Closed or merged PR \"fix(vdom): add default branch to return vnode in create-functional-component, fix #7799\" (#7801)"},{"Id":"304209627","IsPullRequest":false,"CreatedAt":"2018-03-12T08:19:56","Actor":"tanin47","Number":"7795","RawContent":null,"Title":"Register the same component twice leads to a subtle bug","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/4qvjutqh/2/](https://jsfiddle.net/4qvjutqh/2/)\r\n\r\n### Steps to reproduce\r\nIn the demo, when we click on the button, we can see that the parent element is being replaced with a new element.\r\n\r\nFor some reason, the replacement only occurs when the component's attribute is changed the first time. The second time it changes, the replacement doesn't occur.\r\n\r\n### What is expected?\r\nWe should give out warning when there are redundant component registration.\r\n\r\n### What is actually happening?\r\n\r\nThis leads a subtle bug. Here's what I encountered.\r\n\r\nI have `input-text` which is a wrapper of `<input>`. I accidentally registered `input-text` twice into the same HTML tag (once in the main body, and another in the footer).\r\n\r\nThe subtle bug is that, when I type the first character, the focus is lost. But everything appears normal.\r\n\r\n--------------\r\n\r\nI wonder if we can print a warning on redundant registering of components in the dev mode. Polymer has this type of warning. It would be super helpful.\r\n\r\n(I like Vue.js a lot. Thank you for making such a great framework.)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7795","RelatedDescription":"Closed issue \"Register the same component twice leads to a subtle bug\" (#7795)"},{"Id":"304262698","IsPullRequest":false,"CreatedAt":"2018-03-12T07:16:48","Actor":"Ethan0007","Number":"7800","RawContent":null,"Title":"HotModuleReplacement in .Net 5.6","State":"closed","Body":"Hi All,\r\n\r\nI just want to ask on how can i configure HotModuleReplacement in mvc .Net 5.6?,\r\nBecause I'm trouble in my development  build. Its working on .net core.\r\n\r\nlink: \r\nhttps://github.com/MarkPieszak/aspnetcore-Vue-starter/blob/master/content/Startup.cs\r\n\r\n\r\nplease be guided. Thanks.\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/7800","RelatedDescription":"Closed issue \"HotModuleReplacement in .Net 5.6\" (#7800)"},{"Id":"304251656","IsPullRequest":false,"CreatedAt":"2018-03-12T06:13:19","Actor":"jimmyspace","Number":"7798","RawContent":null,"Title":"vue 服务器渲染和php等传统 服务器渲染有没有性能上的差别","State":"closed","Body":"vue 服务器渲染和php等传统 服务器渲染有没有性能上的差别\r\n@尤","Url":"https://github.com/vuejs/vue/issues/7798","RelatedDescription":"Closed issue \"vue 服务器渲染和php等传统 服务器渲染有没有性能上的差别\" (#7798)"},{"Id":"304227383","IsPullRequest":true,"CreatedAt":"2018-03-12T03:04:35","Actor":"HerringtonDarkholme","Number":"7797","RawContent":null,"Title":"feat(typing): use keyof inference to simplify definition","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes (require new TS compiler)\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nOur typing is very complex. This pull request uses the new feature from TS 2.7 to combine record style and array style prop definition into one. https://github.com/Microsoft/TypeScript/pull/19227 \r\nA simpler type definition should be beneficial to both our users and we maintainers. \r\n\r\nKudos to @sandersn  @DanielRosenwasser !\r\n\r\nNote: this requires TS 2.7+. So it is expected to be included in a minor version update.\r\n\r\n","Url":"https://github.com/vuejs/vue/pull/7797","RelatedDescription":"Open PR \"feat(typing): use keyof inference to simplify definition\" (#7797)"},{"Id":"304219868","IsPullRequest":false,"CreatedAt":"2018-03-12T02:23:51","Actor":"lww555","Number":"7796","RawContent":null,"Title":"vue如何查看每个版本的更新日志","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://www.github.com](https://www.github.com)\r\n\r\n### Steps to reproduce\r\nnull\r\n\r\n### What is expected?\r\nnull\r\n\r\n### What is actually happening?\r\nnull\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7796","RelatedDescription":"Closed issue \"vue如何查看每个版本的更新日志\" (#7796)"},{"Id":"304209326","IsPullRequest":false,"CreatedAt":"2018-03-12T00:22:54","Actor":"tanin47","Number":"7794","RawContent":null,"Title":"Register the same component twice leads to a subtle bug","State":"closed","Body":"Here's the demo: https://jsfiddle.net/4qvjutqh/2/\r\n\r\nWhen we click on the button, we can see that the parent element is being replaced with a new element.\r\n\r\nFor some reason, the replacement only occurs when the component's attribute is changed *the first time*. The second time it changes, the replacement doesn't occur.\r\n\r\nThis leads a subtle bug. Here's what I encountered.\r\n\r\nI have `input-text` which is a wrapper of `<input>`. I accidentally registered `input-text` twice into the same HTML tag (once in the main body, and another in the footer).\r\n\r\nThe subtle bug is that, when I type the first character, the focus is lost. But everything appears normal.\r\n\r\nI wonder if we can print a warning on redundant registering of components in the dev mode. Polymer has this type of warning. It would be super helpful.\r\n\r\n(I like Vue.js a lot. Thank you for making such a great framework.)","Url":"https://github.com/vuejs/vue/issues/7794","RelatedDescription":"Closed issue \"Register the same component twice leads to a subtle bug\" (#7794)"},{"Id":"304171147","IsPullRequest":true,"CreatedAt":"2018-03-11T18:04:32","Actor":"jkzing","Number":"7793","RawContent":null,"Title":"test(vdom): create-element should work properly with vnode reference in :class or :style","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: test\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n#7786","Url":"https://github.com/vuejs/vue/pull/7793","RelatedDescription":"Closed or merged PR \"test(vdom): create-element should work properly with vnode reference in :class or :style\" (#7793)"},{"Id":"304162044","IsPullRequest":false,"CreatedAt":"2018-03-11T15:52:03","Actor":"FranckFreiburger","Number":"7792","RawContent":null,"Title":"unable to use new-line in v-for attribute","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/177321/](https://jsfiddle.net/50wL7mdz/177321/)\r\n\r\n### Steps to reproduce\r\nrun and look at the error in the console\r\n\r\n### What is expected?\r\nnew-line (\\n) support in v-for\r\n\r\n### What is actually happening?\r\n```\r\nvue.js [Vue warn]: Error compiling template:\r\n\r\n<div id=\"app\">\r\n  <p v-for=\"\r\n    i in (2\r\n     2)\r\n  \">{{ message }}</p>\r\n</div>\r\n\r\n- invalid expression: Unexpected token } in\r\n\r\n    (2\r\n\r\n  Raw expression: v-for=\"\r\n    i in (2\r\n     2)\r\n  \"\r\n\r\n```\r\n---\r\nMy real case is much more complex and would need new-line for readability, especially since /* */ comment are accepted.\r\n```\r\n <p v-for=\"\r\n    i in (2 /* foo */\r\n     2)     /* bar */\r\n  \">{{ message }}</p>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7792","RelatedDescription":"Closed issue \"unable to use new-line in v-for attribute\" (#7792)"},{"Id":"304155154","IsPullRequest":false,"CreatedAt":"2018-03-11T14:11:40","Actor":"lkmadushan","Number":"7791","RawContent":null,"Title":"v-model not work properly when use `v-on=\"$listeners\"`","State":"closed","Body":"### Version\r\n2.5.15\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/cckLd9te/950/](https://jsfiddle.net/cckLd9te/950/)\r\n\r\n### Steps to reproduce\r\nwhen you type on the input, view not update with the input value\r\n\r\n### What is expected?\r\nview should display input value properly\r\n\r\n### What is actually happening?\r\ninput value changes to an object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7791","RelatedDescription":"Closed issue \"v-model not work properly when use `v-on=\"$listeners\"`\" (#7791)"},{"Id":"304122402","IsPullRequest":false,"CreatedAt":"2018-03-11T02:24:34","Actor":"algates90","Number":"7790","RawContent":null,"Title":"Radio button not working while using v-for","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha](https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha)\r\n\r\n### Steps to reproduce\r\nSelect first question answer (A1) and move to next question. After choosing the next answer (A4), if you go back to previous question, the chosen radio button is not checked.\r\n\r\n### What is expected?\r\nThe first answered radio button must be  checked by default\r\n\r\n### What is actually happening?\r\nThe first answered radio button is not checked\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7790","RelatedDescription":"Closed issue \"Radio button not working while using v-for\" (#7790)"},{"Id":"304047585","IsPullRequest":false,"CreatedAt":"2018-03-10T19:10:01","Actor":"KaelWD","Number":"7787","RawContent":null,"Title":"SSR - classes are not re-applied on hydration without a ref","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\nNo ref: https://codepen.io/anon/pen/yKyBYZ\r\nWith ref: https://codepen.io/anon/pen/PRwYPO\r\n\r\n### Steps to reproduce\r\nOpen the codepen\r\n\r\n### What is expected?\r\n`.has-padding` should be applied after 2sec\r\n\r\n### What is actually happening?\r\nNothing changes on hydration unless the element has a ref\r\n\r\n---\r\nI opened a similar issue a while ago but for styles - #7063 \r\n\r\nSame thing happens with custom attributes btw, I'd expect this to give a \"mismatched nodes\" error at the very least:\r\n\r\nNo ref: https://codepen.io/anon/pen/qoExmb?editors=1010\r\nWith ref: https://codepen.io/anon/pen/oqgEWL?editors=1010\r\n\r\nText is fine though: https://codepen.io/anon/pen/OvPQQv?editors=1010\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7787","RelatedDescription":"Closed issue \"SSR - classes are not re-applied on hydration without a ref\" (#7787)"},{"Id":"304046150","IsPullRequest":false,"CreatedAt":"2018-03-10T18:40:07","Actor":"Leopoldthecoder","Number":"7786","RawContent":null,"Title":"Maximum call stack size exceeded in v-bind:class using $slots","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mmx38qxw/568/](https://jsfiddle.net/mmx38qxw/568/)\r\n\r\n### Steps to reproduce\r\nRun the fiddle\r\n\r\n### What is expected?\r\nRender without error\r\n\r\n### What is actually happening?\r\nConsole warns that maximum call stack size exceeded\r\n\r\n---\r\nThis demo works fine in prior versions, so it might be a regression in 2.5.14. Another find is that if I don't pass `<span slot=\"append\">` to `<compo>`, there'll be no error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7786","RelatedDescription":"Closed issue \"Maximum call stack size exceeded in v-bind:class using $slots\" (#7786)"},{"Id":"304074803","IsPullRequest":false,"CreatedAt":"2018-03-10T14:42:26","Actor":"enricribas","Number":"7789","RawContent":null,"Title":"textarea with v-model cannot be updated dynamically","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/175796/](https://jsfiddle.net/50wL7mdz/175796/)\r\n\r\n### Steps to reproduce\r\nchange the textarea to enter some text, try to clear it with code.\r\nan input works fine, but textarea does not.\r\nshift click the button, text clears\r\nshift-enter, log fires, text does not clear.\r\n\r\n### What is expected?\r\nit should clear\r\n\r\n### What is actually happening?\r\nit does not clear.\r\n\r\n---\r\nthanks for looking into this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7789","RelatedDescription":"Closed issue \"textarea with v-model cannot be updated dynamically\" (#7789)"},{"Id":"304063152","IsPullRequest":false,"CreatedAt":"2018-03-10T12:28:55","Actor":"konstantinrachev","Number":"7788","RawContent":null,"Title":"Maximum call stack exceeded when using with custom components","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/175425/](https://jsfiddle.net/50wL7mdz/175425/)\r\n\r\n### Steps to reproduce\r\n1. Including vue(v.2.5.14) and element.io styles and library.\r\n2. Opening new form.\r\n3. Opening new form element.\r\n4. Using custom date picker element.\r\n\r\n### What is expected?\r\nIt is expected to render a custom UI component for date picking.\r\n\r\n### What is actually happening?\r\nThe element is not being render as the console is filled with errors.\r\n\r\n[Vue warn]: Error in render: \"RangeError: Maximum call stack size exceeded\", vue.js:597\r\nRangeError: Maximum call stack size exceeded, vue.js:1745\r\n\r\n\r\n\r\n---\r\nThe issue is related to the latest vue.js version as it is working as expected with all up to 2.5.13.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7788","RelatedDescription":"Closed issue \"Maximum call stack exceeded when using with custom components\" (#7788)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"304619946","IsPullRequest":false,"CreatedAt":"2018-03-13T03:59:22","Actor":"gzzhanghao","Number":"2102","RawContent":null,"Title":"`beforeRouteLeave` invoked twice when replacing path in target view","State":"open","Body":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Jason_Daurus/vv79u55j/](https://jsfiddle.net/Jason_Daurus/vv79u55j/)\r\n\r\n### Steps to reproduce\r\nClick at \"link-b\" in the fiddle, you'll have \"A:beforeRouteLeave\" logged twice in browser's console.\r\n\r\n### What is expected?\r\nA:beforeRouteLeave should not be invoked after B:beforeRouteEnter\r\n\r\n### What is actually happening?\r\nit does :-(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2102","RelatedDescription":"Open issue \"`beforeRouteLeave` invoked twice when replacing path in target view\" (#2102)"},{"Id":"304604243","IsPullRequest":true,"CreatedAt":"2018-03-13T02:17:30","Actor":"Jinjiang","Number":"2101","RawContent":null,"Title":"[docs][zh-cn] translated #2091","State":"open","Body":"#2091 change example for apache-config\r\nand a newline between the new content and the code block.\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vue-router/pull/2101","RelatedDescription":"Open PR \"[docs][zh-cn] translated #2091\" (#2101)"},{"Id":"304311951","IsPullRequest":false,"CreatedAt":"2018-03-12T10:18:47","Actor":"konglinlin","Number":"2100","RawContent":null,"Title":"uc浏览器上有过度动效bug","State":"closed","Body":"\r\n在UC浏览器上使用动效的时候路由会更改，但是页面视图不会更新（版本：UC V11.9.0.970）","Url":"https://github.com/vuejs/vue-router/issues/2100","RelatedDescription":"Closed issue \"uc浏览器上有过度动效bug\" (#2100)"},{"Id":"302342743","IsPullRequest":true,"CreatedAt":"2018-03-11T11:44:06","Actor":"doppelreim","Number":"2091","RawContent":null,"Title":"change example for apache-config","State":"closed","Body":"This is a PR for issue #2090\r\n\r\nInstead of using `mod_rewrite`, it may be possible to use `FallbackResource` (see https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource).  \r\nThat would be more concise and would not depend on `mod_rewrite`.\r\n\r\nDisclaimer: I just started with vue and am not an expert with apache :)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2091","RelatedDescription":"Closed or merged PR \"change example for apache-config\" (#2091)"},{"Id":"303915363","IsPullRequest":false,"CreatedAt":"2018-03-09T17:17:06","Actor":"dotnetCarpenter","Number":"2099","RawContent":null,"Title":"Setting pushState title","State":"open","Body":"### What problem does this feature solve?\r\nIs there any objections against a PR that opens up for setting the `pushState()` title argument in [push-state.js](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L50).\r\n\r\nI'm porting an app to use vue-router and the app had this before. I realise that Firefox ignores the title, but other browsers do not. The app is using vue-router to enable deep linking. The app display PDFs with hundreds of pages. I got the back/forward buttons working pretty easily but the resulting list is completely unreadable, since it is just the `document.title` repeated 10-100 times. I would like to add the page number to each entry.\r\n\r\n### What does the proposed API look like?\r\nNot sure... Could be:\r\n```js\r\nthis.$router.push({\r\n  meta: { title: `page ${pageCurrent} - foobar` }\r\n})\r\n```\r\nBut I don't have any preferences other than the one the vue-router team + community prefer. :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2099","RelatedDescription":"Open issue \"Setting pushState title\" (#2099)"},{"Id":"303898094","IsPullRequest":true,"CreatedAt":"2018-03-09T16:26:27","Actor":"bmarkovic","Number":"2098","RawContent":null,"Title":"Add support for 'disabled' attribute to <router-link>, fixes #916","State":"open","Body":"During the discussion on #916 a solution was mentioned, where attribute `disabled` in `<router-link>` would prevent the link from working. This is useful for programmatically disabling router links based on application state. \r\n\r\nCompared to other solutions, both available and proposed, this is by far the cleanest and most idiomatic if you come from a HTML mindset, as it's available on form elements with the same purpose, and some CSS frameworks like Bootstrap promote its use for `<li><a>` navigation elements. \r\n\r\nFurthermore, binding to disabled attribute is a simple, easy to style and implement, and I honestly believe that for these reasons, it is also very idiomatic to Vue.js as well.\r\n\r\nThis pull request implements that proposal.","Url":"https://github.com/vuejs/vue-router/pull/2098","RelatedDescription":"Open PR \"Add support for 'disabled' attribute to <router-link>, fixes #916\" (#2098)"},{"Id":"303819954","IsPullRequest":false,"CreatedAt":"2018-03-09T12:05:18","Actor":"helixcg","Number":"2097","RawContent":null,"Title":".$route.query传参中  数值+'/'+数值 做参数，路由页面值改变","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n    onButtonClick (type) {\r\n      var all= this.$route.query.num+\"/\"+type\r\n     // this.$route.query.num=328   type=15712121212\r\n      this.$router.push({\r\n        path: 'abc',\r\n        name: 'abc',\r\n        query:{num:all}\r\n      });\r\n    },\r\n\r\n路由页面url为   ?num=328%**2F**15712121212\r\n原因是什么呢","Url":"https://github.com/vuejs/vue-router/issues/2097","RelatedDescription":"Closed issue \".$route.query传参中  数值+'/'+数值 做参数，路由页面值改变\" (#2097)"},{"Id":"303777784","IsPullRequest":true,"CreatedAt":"2018-03-09T09:33:47","Actor":"nurdism","Number":"2096","RawContent":null,"Title":"Implements issue #2069","State":"open","Body":"This is a PR for issue #2069\r\nAdds smooth scrolling option to scrollBehavior position.","Url":"https://github.com/vuejs/vue-router/pull/2096","RelatedDescription":"Open PR \"Implements issue #2069\" (#2096)"},{"Id":"303682614","IsPullRequest":false,"CreatedAt":"2018-03-09T00:30:59","Actor":"narusas","Number":"2095","RawContent":null,"Title":"scrollBehaviour should be executed before after hooks when pressing the back button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/narusas/ektba5vj/8/](https://jsfiddle.net/narusas/ektba5vj/8/)\r\n\r\n### Steps to reproduce\r\nOpen https://jsfiddle.net/narusas/ektba5vj/8/ \r\nOpen Dev console\r\nClick '/hello1'\r\nClear console\r\n\r\nScroll some\r\nCheck console \r\n```javascript\r\n\tscroll 4\r\n \tscroll 8\r\n \tscroll 12\r\n```\r\n\r\nClick '/hello2'\r\nCheck console\r\n```javascript\r\n\tComponent1 beforeRouteLeave\r\n\tnext-beforeRouteLeave-Component1\r\n \tglobal router  beforeEach\r\n \t/hello2 route beforeEnter\r\n \tComponent2 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component2\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent2 beforeCreate\r\n\tComponent2 created\r\n\tComponent2 beforeMount\r\n\tComponent2 mounted\r\n\tscrollBehavior\r\n\tscrollBehavior - resolve\r\n\tscroll 0 \r\n ```\r\n\r\nCurrently It's ok\r\n\r\nNow press back-button\r\nCheck console\r\n```javascript\r\n\tComponent2 beforeRouteLeave\r\n\tscroll 12   <---- Why This Timing???? Why leaving component is  scrolled??  \r\n\tnext-beforeRouteLeave-Component2\r\n\tglobal router  beforeEach\r\n\t/hello1 route beforeEnter\r\n\tComponent1 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component1\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent1 beforeCreate\r\n\tComponent1 created\r\n\tComponent1 beforeMount\r\n\tComponent1 mounted\r\n\tscrollBehavior\r\n```\r\n\r\n### What is expected?\r\nWhen press back button, \r\nBefore router leave, no scrolling is executed.\r\n\r\n### What is actually happening?\r\nWhen press back button,\r\nLeave component is  scrolled strange position. \r\nAfter that scrolling, Entering Component is entered.  \r\nIt looks like flickering. \r\n\r\n\r\n\r\n\r\n\r\n---\r\nNow I creating some SPA web site. \r\nWhen user press back/foward button, leaving component is scrolled and after that show entering component. \r\nSO It is flickering!\r\nAlso, I use lazy image loading. So user press back/foward, this not-intented  scrolling will call unnecessary image loading , and progressive loading animation is showed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2095","RelatedDescription":"Open issue \"scrollBehaviour should be executed before after hooks when pressing the back button\" (#2095)"},{"Id":"303340809","IsPullRequest":true,"CreatedAt":"2018-03-08T09:51:10","Actor":"kazupon","Number":"2094","RawContent":null,"Title":"update ja docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @re-fort @potato4d @lmiller1990 @38elements\r\nどなたかレビューしてもらえると助かります！ 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2094","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2094)"},{"Id":"303107765","IsPullRequest":false,"CreatedAt":"2018-03-07T14:58:01","Actor":"maki10","Number":"2093","RawContent":null,"Title":"Vue Router not working properly in Component when url have some deep","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/43q4nsx9/2/](https://jsfiddle.net/43q4nsx9/2/)\r\nGo to second home, and click on an image (but you must have some deep's in URL, in order to see the issue) \r\n\r\n### Steps to reproduce\r\nWhen calling `route-link` form Component, they switch URL bad.\r\nFor example:\r\n- My domain is: `example.com/shop/shop-slug/`\r\n- Root Vue make a path: `example.com/shop/shop-slug#/`\r\n- And Bug occurred on `Product` Component when changing the path. Router link adds me: `example.com/#/product/{{ product.id }}`\r\n\r\nI try `$router.fullPath` and get `#/product/{{ product.id }}`.\r\nTry to match, replace `router-link` nothing work as I expected?\r\n\r\n\r\n### What is expected?\r\nTo match full URL.\r\n\r\n### What is actually happening?\r\nThe router doesn't catch good URL\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2093","RelatedDescription":"Closed issue \"Vue Router not working properly in Component when url have some deep\" (#2093)"},{"Id":"302588196","IsPullRequest":false,"CreatedAt":"2018-03-06T07:12:29","Actor":"cmzz","Number":"2092","RawContent":null,"Title":"路由不能跳转","State":"closed","Body":"![image](https://user-images.githubusercontent.com/6111715/37018782-9b014af4-2150-11e8-8033-f4f7f35c89d7.png)\r\n\r\n代码是 this.$router.push({path: '/'});\r\n\r\n结果无法跳转，控制台无限的输出上面图片的消息，导致浏览器卡死。\r\n\r\n请问这是什么问题呢。","Url":"https://github.com/vuejs/vue-router/issues/2092","RelatedDescription":"Closed issue \"路由不能跳转\" (#2092)"},{"Id":"302006123","IsPullRequest":true,"CreatedAt":"2018-03-05T18:10:27","Actor":"Jinjiang","Number":"2087","RawContent":null,"Title":"[docs][zh-cn] synced udpates and some typos","State":"closed","Body":"Translated #2043 and some handy typos.\r\n/ping @Justineo ","Url":"https://github.com/vuejs/vue-router/pull/2087","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced udpates and some typos\" (#2087)"},{"Id":"302289768","IsPullRequest":false,"CreatedAt":"2018-03-05T14:05:38","Actor":"doppelreim","Number":"2090","RawContent":null,"Title":"Update apache-example for history-mode (documentation)","State":"closed","Body":"### What problem does this feature solve?\r\nFor HTML5 History Mode, there are some example server-configurations in the documentation.\r\n\r\nSee https://github.com/vuejs/vue-router/blob/dev/docs/en/essentials/history-mode.md#apache\r\n\r\nI think the apache-example could be simplified by using https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource instead of `mod_rewrite`?\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\nFallbackResource /index.html\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2090","RelatedDescription":"Closed issue \"Update apache-example for history-mode (documentation)\" (#2090)"},{"Id":"302240531","IsPullRequest":true,"CreatedAt":"2018-03-05T10:58:54","Actor":"Haeresis","Number":"2089","RawContent":null,"Title":"[Doc FR]: update of `rout-object.md` file","State":"closed","Body":"Hi @posva !\r\n\r\nA little translation added from EN doc ;)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2089","RelatedDescription":"Closed or merged PR \"[Doc FR]: update of `rout-object.md` file\" (#2089)"},{"Id":"302191728","IsPullRequest":false,"CreatedAt":"2018-03-05T08:22:28","Actor":"Goblinlordx","Number":"2088","RawContent":null,"Title":"Allow rendering an alternate route without redirect","State":"closed","Body":"### What problem does this feature solve?\r\nGiven a few examples:\r\n\r\nhttps://github.com/someProjectThatDoesntExist\r\nhttps://github.com/goblinlordx/someRepoThatDoesntExist\r\n\r\nWhen these pages render, you can see that even though these are \"Not Found\" the route doesn't change.  This (in my opinion) is fairly important for routing.  Fortunately, this is actually possible for certain cases.  For example:\r\n\r\n```\r\n{\r\n  routes: [\r\n    {path: \"\", component: \"Index\"},\r\n    {path: \"/settings\", component: \"Settings\"},\r\n    {path: \"*\", component: \"NotFound\"},\r\n  ]\r\n}\r\n```\r\n\r\nThe above config will render the \"NotFound\" for routes such as `/doesntexist`.  For routes that are not dynamic, this is trivial to implement.  The problem comes when attempting to accomplish this same behavior when using navigation guards to determine if a path should be displayed to the user or not.  This could be because of failure to load data, or something like authorization.  The current examples do not actually accomplish this and instead actually change the path via redirection.\r\n\r\nCurrently, the navigation guard api only seems to support a few different actions that can be taken in response to a route being called.  These are:\r\n\r\n - Continue to the next route by calling `next()`\r\n - Fail to load the next route by never calling `next()` (probably not something that should be done)\r\n - Fail to load the next route by calling `next(false)`\r\n - Fail to load the next route by calling `next(<Error>)`\r\n - Redirect by pushing path `next({ path/name: \"xxx\")`\r\n - Redirect by replacing path `next({ path/name: \"xxx\", replace: true)`\r\n\r\nNone of these behave in a way similar to the Github example initially mentioned.\r\n\r\n### What does the proposed API look like?\r\nI would propose that when calling `next()` in a navigation guard (or possibly anywhere a `location` can be received) that there be an option that would allow the instance to be replaced without changing the URL.  This could be a property like `changeURL: Boolean (default false)`.  I am honestly not sure what the best name would be but it seems simple enough.  Another option might be something like calling next with something indicating it should behave as if it failed to match a route (not prevent matching another route).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2088","RelatedDescription":"Closed issue \"Allow rendering an alternate route without redirect\" (#2088)"},{"Id":"301702419","IsPullRequest":true,"CreatedAt":"2018-03-02T10:58:53","Actor":"steffans","Number":"2086","RawContent":null,"Title":"Add jsdelivr to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2086","RelatedDescription":"Closed or merged PR \"Add jsdelivr to package.json\" (#2086)"},{"Id":"301281860","IsPullRequest":true,"CreatedAt":"2018-03-01T05:25:05","Actor":"DrSensor","Number":"2085","RawContent":null,"Title":"Support this.$router.options in Typescript","State":"open","Body":"There is a time when a user wants to access metadata that was defined in `router.ts` ([example](https://github.com/DrSensor/F.I.D.E/blob/develop/src/renderer/components/NavigationSidebar.vue#L93)). I notice that in the typedef `options` is missing.\r\n\r\n![screenshot from 2018-03-01 12-16-59](https://user-images.githubusercontent.com/4953069/36828284-6ed0e5d8-1d4b-11e8-9dc6-0a62c005c384.png)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2085","RelatedDescription":"Open PR \"Support this.$router.options in Typescript\" (#2085)"},{"Id":"301272914","IsPullRequest":true,"CreatedAt":"2018-03-01T04:20:01","Actor":"cironunes","Number":"2084","RawContent":null,"Title":"feat: introduce afterResolve navigation hook","State":"open","Body":"Still missing tests, but this gives an idea of what I'm trying to achieve.\r\n\r\nLooking forward to hear from you guys.\r\n\r\nCloses #2079 ","Url":"https://github.com/vuejs/vue-router/pull/2084","RelatedDescription":"Open PR \"feat: introduce afterResolve navigation hook\" (#2084)"},{"Id":"301263579","IsPullRequest":false,"CreatedAt":"2018-03-01T03:15:04","Actor":"TyroneYvesChen","Number":"2083","RawContent":null,"Title":"官网上部分例子应使用``而不是''","State":"closed","Body":"#如：const User = {\r\n  template: '<div>User {{ $route.params.id }}</div>'\r\n}","Url":"https://github.com/vuejs/vue-router/issues/2083","RelatedDescription":"Closed issue \"官网上部分例子应使用``而不是''\" (#2083)"},{"Id":"301257346","IsPullRequest":false,"CreatedAt":"2018-03-01T02:36:18","Actor":"decademoon","Number":"2082","RawContent":null,"Title":"beforeRouteEnter next callback is not called (in this very specific async situation)","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/271/](http://jsfiddle.net/df4Lnuw6/271/)\r\n\r\n### Steps to reproduce\r\n- Have a `<router-view v-if=\"ready\">` in the root component's template with `ready` initially `false`.\r\n- Have a single route for path `/` whose component has a `beforeRouteEnter` hook.\r\n- Perform the following in the root component's `created` hook:\r\n  1. Replace the route with `/?x=1` (this causes the same component to be reused).\r\n  2. After a timeout, set `ready` to `true`.\r\n\r\n### What is expected?\r\nThe callback function passed to `next` in the `beforeRouteEnter` hook should be called.\r\n\r\n### What is actually happening?\r\nThe callback function passed to `next` in the `beforeRouteEnter` is not called.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2082","RelatedDescription":"Open issue \"beforeRouteEnter next callback is not called (in this very specific async situation)\" (#2082)"},{"Id":"301139822","IsPullRequest":true,"CreatedAt":"2018-02-28T18:50:58","Actor":"felipe-developer","Number":"2081","RawContent":null,"Title":"Starting portuguese (pt-br) translation","State":"open","Body":"I started the Portuguese translation (pt-br). I count on the help of those who want to collaborate.","Url":"https://github.com/vuejs/vue-router/pull/2081","RelatedDescription":"Open PR \"Starting portuguese (pt-br) translation\" (#2081)"},{"Id":"300943819","IsPullRequest":false,"CreatedAt":"2018-02-28T09:10:15","Actor":"robertmylne","Number":"2080","RawContent":null,"Title":"Multiple Routers","State":"closed","Body":"Are multiple routers supported.\r\n\r\nFor example in Laravel I have routes:\r\n`/account` and `/dashboard`\r\n\r\nCan I use a different set of Vue routes for each Laravel route? So two independent instances of Vue routers?","Url":"https://github.com/vuejs/vue-router/issues/2080","RelatedDescription":"Closed issue \"Multiple Routers\" (#2080)"},{"Id":"300896544","IsPullRequest":false,"CreatedAt":"2018-02-28T05:28:07","Actor":"cironunes","Number":"2079","RawContent":null,"Title":"afterResolve global navigation hook","State":"open","Body":"### What problem does this feature solve?\r\nAs opposed to `beforeResolve`, `afterResolve` would wait until the navigation is done and trigger the registered callbacks.\r\n\r\nThe main reason for that is to be able to track events in the right moment, with the proper url in place, globally.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nrouterInstance.afterResolve(cb);\r\nfunction cb(from, to, next) {...}\r\n```\r\n\r\nI'd love to submit a PR if that's something you'd like to have.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2079","RelatedDescription":"Open issue \"afterResolve global navigation hook\" (#2079)"},{"Id":"300769125","IsPullRequest":false,"CreatedAt":"2018-02-27T20:00:22","Actor":"cdekok","Number":"2078","RawContent":null,"Title":"Incorrect typehint","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L27](https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L27)\r\n\r\n### Steps to reproduce\r\nThis should be a string not a number\r\n\r\n### What is expected?\r\na string as typehint\r\n\r\n### What is actually happening?\r\na number as typehint\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2078","RelatedDescription":"Closed issue \"Incorrect typehint\" (#2078)"},{"Id":"300643964","IsPullRequest":false,"CreatedAt":"2018-02-27T14:46:40","Actor":"oles","Number":"2077","RawContent":null,"Title":"beforeRouteUpdate is not called on change from multiple named views","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yfj5tmh4/](https://jsfiddle.net/yfj5tmh4/)\r\n\r\n### Steps to reproduce\r\n0. Open console\r\n1. Click on /1, then /2\r\n2. Every beforeRouteUpdate is called\r\n3. Click on /2/qux, then click on /1 \r\n\r\n### What is expected?\r\nEvery beforeRouteUpdate is called, resulting in console messages.\r\n\r\n### What is actually happening?\r\nNo beforeRouteUpdate is called.\r\n\r\n---\r\nEverything works as expected when clicking on /1 if you've clicked on /2 before /2/qux.\r\n\r\nIt could be that I've miss-understood something, but I'm not 100% sure, and couldn't find any related issues - so here we are :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2077","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on change from multiple named views\" (#2077)"},{"Id":"300565322","IsPullRequest":false,"CreatedAt":"2018-02-27T10:06:55","Actor":"CKGrafico","Number":"2076","RawContent":null,"Title":"Specify prop type","State":"closed","Body":"I want to pass a number to a component. My router is like this:\r\n```\r\n{\r\n     path: ':id',\r\n     name: 'schoolPrograms-edit',\r\n     component: () => import('./school-programs-edit/school-programs-edit.component'),\r\n     props: true\r\n}\r\n```\r\n\r\nAnd the component:\r\n\r\n```\r\nexport default class SchoolProgramsEditComponent extends Vue {\r\n    @Prop({type: String})\r\n    id: string;\r\n\r\n    // Vue pass a string\r\n    private get _id(): number {\r\n        return parseInt(this.id, 10);\r\n    }\r\n```\r\n\r\nHow can I specify that id is a number?\r\nThis doesn't work, with routes\r\n```\r\nexport default class SchoolProgramsEditComponent extends Vue {\r\n    @Prop({type: Number})\r\n    id: number;\r\n```\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2076","RelatedDescription":"Closed issue \"Specify prop type\" (#2076)"},{"Id":"300381089","IsPullRequest":false,"CreatedAt":"2018-02-26T20:17:42","Actor":"jesperlandberg","Number":"2075","RawContent":null,"Title":"Make route change wait for store update?","State":"closed","Body":"My question is, when clicking a link, is there any way to make the route change wait for the vuex store to be updated? I'm setting some store variables on link click, but sometimes the route change is a tiny bit to fast.","Url":"https://github.com/vuejs/vue-router/issues/2075","RelatedDescription":"Closed issue \"Make route change wait for store update?\" (#2075)"},{"Id":"300139714","IsPullRequest":false,"CreatedAt":"2018-02-26T11:01:21","Actor":"Overdrivr","Number":"2074","RawContent":null,"Title":"Full support for anchor tags","State":"closed","Body":"### What problem does this feature solve?\r\nAnchor tags cannot be implemented correctly in the current state of things. There are a few techniques to hack a way around, but none of them seem to cover all the following cases:\r\n\r\n- Paths with anchors should always lead to the anchor if reached multiple times (currently, only the first time works, even by refreshing the page)\r\n- Anchor tags urls should be shareable (users should be capable of bookmarking/sharing URLs, in a way that the URL will lead them back directly to the anchor)\r\n\r\nAFAIK, there two solutions currently that partially support those requirements: [vue-router Scroll behavior](https://router.vuejs.org/en/advanced/scroll-behavior.html) that does not support first requirement in a robust manner, and [vue-scrollto](https://github.com/rigor789/vue-scrollto) that does not support second requirement since it's just scrolling without any sense of routing/url.\r\n\r\n### What does the proposed API look like?\r\nThe API is already there, using the hash field\r\n\r\n```\r\n<router-link :to=\"{name: 'SomeVue', hash:'#anchor'}\">Link to anchor</router-link>\r\n\r\n// or\r\n\r\n<a href=\"/somevue#anchor>Link to anchor</a>\r\n```\r\n\r\n```\r\n<div id=\"anchor\">Anchor</div>\r\n```\r\n\r\nWe only need to implement the proper behavior for supporting use cases presented above.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2074","RelatedDescription":"Closed issue \"Full support for anchor tags\" (#2074)"},{"Id":"300092152","IsPullRequest":false,"CreatedAt":"2018-02-26T03:33:44","Actor":"chebysheph","Number":"2073","RawContent":null,"Title":"\"localhost:8080/#/\" changed to \"localhost:8080/?#/\" ?","State":"closed","Body":"### What problem does this feature solve?\r\nFor example, in page \"localhost:8080/#/temp1\" has a input tag, when I modified the input value, and press \"enter\" button, because I did not add \"@keydown.enter\" event on the input tag, so the page url become to \"localhost:8080/?#/login\", but the right result should be \"localhost:8080/#/login\", so  I would like to know how the \"?\" add into the url?And what exactly happened when I press \"enter\" button?\r\n\r\n### What does the proposed API look like?\r\nFor example, in page \"localhost:8080/#/temp1\" has a input tag, when I modified the input value, and press \"enter\" button, because I did not add \"@keydown.enter\" event on the input tag, so the page url become to \"localhost:8080/?#/login\", but the right result should be \"localhost:8080/#/login\", so  I would like to know how the \"?\" add into the url?And what exactly happened when I press \"enter\" button?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2073","RelatedDescription":"Closed issue \"\"localhost:8080/#/\" changed to \"localhost:8080/?#/\" ?\" (#2073)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"304625771","IsPullRequest":false,"CreatedAt":"2018-03-13T04:38:45","Actor":"Shyam-Chen","Number":"1184","RawContent":null,"Title":"register a nested module","State":"closed","Body":"Replace arrays with dots.\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n});\r\n```\r\n\r\nto\r\n\r\n```js\r\n// register a nested module `nested/myModule`\r\nthis.$store.registerModule('nested.myModule', {\r\n  // ...\r\n});\r\n```","Url":"https://github.com/vuejs/vuex/issues/1184","RelatedDescription":"Closed issue \"register a nested module\" (#1184)"},{"Id":"304608830","IsPullRequest":true,"CreatedAt":"2018-03-13T03:51:20","Actor":"Jinjiang","Number":"1183","RawContent":null,"Title":"[docs][zh-cn] translated #1173","State":"closed","Body":"#1173 Mention payload in action handler in API\r\n/ping @Justineo \r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1183","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] translated #1173\" (#1183)"},{"Id":"304302778","IsPullRequest":false,"CreatedAt":"2018-03-12T09:51:42","Actor":"1402310095","Number":"1182","RawContent":null,"Title":"动态注册和卸载module导致页面上所有的组件都销毁重建","State":"closed","Body":"  vuex版本2.4.0，使用store.registerModule和store.unregisterModule会导致页面上都组件销毁重建，可以看到其他组件的destroyed钩子被触发\r\n有没有能够不让组件刷新的办法？","Url":"https://github.com/vuejs/vuex/issues/1182","RelatedDescription":"Closed issue \"动态注册和卸载module导致页面上所有的组件都销毁重建\" (#1182)"},{"Id":"304245734","IsPullRequest":false,"CreatedAt":"2018-03-12T05:32:08","Actor":"eeerrrttty","Number":"1181","RawContent":null,"Title":"Problem with load state","State":"closed","Body":"My load state is really crazy, i have a button that is disabled on loading content from firebase, but my vuex is showing as false.\r\n\r\nButton working as normally, but im not being able to track the changes.\r\n\r\n`import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as firebase from 'firebase'\r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\nVue.use(Vuex)\r\n\r\nexport const store = new Vuex.Store({\r\n  state: {\r\n    loadedPosts: [{\r\n      imageUrl: '',\r\n      id: '',\r\n      description: ''\r\n    }],\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n  },\r\n  plugins: [createPersistedState()],\r\n  mutations: {\r\n    setUser (state, payload) {\r\n      state.user = payload\r\n    },\r\n    createPost (state, payload) {\r\n      state.loadedPosts.push(payload)\r\n    },\r\n    setLoadedPosts (state, payload) {\r\n      state.loadedPosts = payload\r\n    },\r\n    setLoading (state, payload) {\r\n      state.loading = payload\r\n    },\r\n    setError (state, payload) {\r\n      state.error = payload\r\n    },\r\n    clearError (state) {\r\n      state.error = null\r\n    }\r\n  },\r\n  actions: {\r\n    loadPosts ({commit}) {\r\n      firebase.database().ref('posts').orderByKey().limitToLast(5).once('value')\r\n        .then((data) => {\r\n          const posts = []\r\n          const obj = data.val()\r\n          for (let key in obj) {\r\n            posts.push({\r\n              id: key,\r\n              description: obj[key].description,\r\n              imageUrl: obj[key].imageUrl,\r\n              date: obj[key].date,\r\n              creatorId: obj[key].creatorId\r\n            })\r\n          }\r\n          commit('setLoadedPosts', posts)\r\n          commit('setLoading', false)\r\n        })\r\n    },\r\n    createPost ({commit, getters}, payload) {\r\n      const post = {\r\n        description: payload.description,\r\n        date: payload.date.toISOString(),\r\n        creatorId: getters.user.id\r\n      }\r\n      let imageUrl\r\n      let key\r\n      firebase.database().ref('posts').push(post)\r\n        .then((data) => {\r\n          key = data.key\r\n          return key\r\n        })\r\n        .then(key => {\r\n          const filename = payload.image.name\r\n          const ext = filename.slice(filename.lastIndexOf('.'))\r\n          return firebase.storage().ref('posts/' + key + ext).put(payload.image)\r\n        })\r\n        .then(fileData => {\r\n          imageUrl = fileData.metadata.downloadURLs[0]\r\n          return firebase.database().ref('posts').child(key).update({imageUrl: imageUrl})\r\n        })\r\n        .then(() => {\r\n          commit('createPost', {\r\n            ...post,\r\n            imageUrl: imageUrl,\r\n            id: key\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    signUserIn ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    signUserUp ({commit}, payload) {\r\n      commit('clearError')\r\n      commit('setLoading', true)\r\n      firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password)\r\n        .then(\r\n          user => {\r\n            commit('setLoading', false)\r\n            const newUser = {\r\n              id: user.uid\r\n            }\r\n            commit('setUser', newUser)\r\n            firebase.auth().currentUser.sendEmailVerification()\r\n              .then(function () {\r\n                alert('Confirme sua conta. Verifique seu e-mail e caixa de spam!')\r\n              })\r\n              .catch(\r\n                error => {\r\n                  commit('setLoading', false)\r\n                  commit('setError', error)\r\n                  console.log(error)\r\n                }\r\n              )\r\n          }\r\n        )\r\n        .catch(\r\n          error => {\r\n            commit('setLoading', false)\r\n            commit('setError', error)\r\n            console.log(error)\r\n          }\r\n        )\r\n    },\r\n    autoSignIn ({commit}, payload) {\r\n      commit('setUser', {id: payload.uid, email: payload.email, emailVerified: payload.emailVerified})\r\n    },\r\n    logout ({commit}) {\r\n      firebase.auth().signOut()\r\n      commit('setUser', null)\r\n    },\r\n    clearError ({commit}, payload) {\r\n      commit('clearError')\r\n    }\r\n  },\r\n  getters: {\r\n    user (state) {\r\n      return state.user\r\n    },\r\n    loadedPosts (state) {\r\n      return state.loadedPosts\r\n    },\r\n    loadedPost (state) {\r\n      return (postId) => {\r\n        return state.loadedPosts.find((post) => {\r\n          return post.id === postId\r\n        })\r\n      }\r\n    },\r\n    loading (state) {\r\n      return state.loading\r\n    },\r\n    error (state) {\r\n      return state.error\r\n    }\r\n  }\r\n})\r\n`\r\n\r\nload just not getting updated!!!","Url":"https://github.com/vuejs/vuex/issues/1181","RelatedDescription":"Closed issue \"Problem with load state\" (#1181)"},{"Id":"304162962","IsPullRequest":false,"CreatedAt":"2018-03-11T15:34:19","Actor":"parzh","Number":"1180","RawContent":null,"Title":"Add support for ES5 native getters in state","State":"closed","Body":"### What problem does this feature solve?\r\nIt allows on-demand invocations of getters.\r\n\r\nSee example: https://codepen.io/parzh/pen/KowYJQ?editors=1010\r\n\r\nIn the given example Vuex store is used to store collection of newly created accounts. Every account is designed so it has a list of related `transactions` and getter `balance`, that returns sum of all the transactions.  \r\nEven in the case with a few accounts the amount of phantom invocations is off the limits.\r\n\r\n***\r\n\r\nAlthough on-demand invocations are currently possible (sort of) through usage of Vuex getters, nevertheless such solutions require iterations:\r\n- convertion of every single account to Vuex-compatible object;\r\n- some sort of identification, that iteratively finds the target account and returns its balance;\r\n- dynamic creation of a corresponding Vuex store for every single account in a collection (huh?);\r\n\r\nNeither of the solutions above seems reasonable:\r\n- Vuex-compatible object is one with `getBalance()` method, but balance is rather dynamic property;\r\n- iteration, obviously, - number of accounts may be arbitrarily large;\r\n- it is planned that accounts can be easily created and almost as easily deleted;\r\n\r\n### What does the proposed API look like?\r\n*no additional API is expected*\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1180","RelatedDescription":"Closed issue \"Add support for ES5 native getters in state\" (#1180)"},{"Id":"303551825","IsPullRequest":true,"CreatedAt":"2018-03-10T01:15:13","Actor":"kazupon","Number":"1177","RawContent":null,"Title":"update ja docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1177","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1177)"},{"Id":"303523876","IsPullRequest":false,"CreatedAt":"2018-03-09T11:34:22","Actor":"dotnetCarpenter","Number":"1176","RawContent":null,"Title":"Publisher/subscriber pattern in vuex ","State":"closed","Body":"### What problem does this feature solve?\r\n## To notify components in a long running task ##\r\n\r\nWhile porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nstore.subscribe('pages/loaded', (payload, state) => { /* do something useful */ })\r\n```\r\nNote that `mutation` is changed to `payload` because the type is now insignificant (the first argument to subscribe tells us what we're interested in).\r\n\r\nInside a mutation, getter or action:\r\n```js\r\nthis.nofity('event', { a: 'b', c: ['d'] })\r\n```\r\n\r\nFull list of API change:\r\n1. `store.subscribe`\r\n2. `store.nofity`\r\n3. `store.unsubscribe`\r\n4. `store.subscribeOnce`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1176","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex \" (#1176)"},{"Id":"303577490","IsPullRequest":false,"CreatedAt":"2018-03-08T18:16:53","Actor":"bichikim","Number":"1178","RawContent":null,"Title":"Is this safety way?","State":"closed","Body":"### What problem does this feature solve?\r\nUsing a custom property in vuex\r\n\r\n### What does the proposed API look like?\r\n    store.subscribeAction((action, state) => {\r\n      if(!state[sSymbol]){\r\n        state[sSymbol] = myToolForSomething\r\n      }\r\n    })\r\n\r\nin vuex plugin\r\n\r\nIt looks likes working well\r\n\r\nfor example\r\n```\r\nconst actions = {\r\n  a({state}, payload) {\r\n    state[sSymbol](gogogo)\r\n  },\r\n} //working\r\n```\r\n\r\n\r\nWhat do you guys think?\r\nIs it ok to use in production?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1178","RelatedDescription":"Closed issue \"Is this safety way?\" (#1178)"},{"Id":"303578776","IsPullRequest":false,"CreatedAt":"2018-03-08T18:12:43","Actor":"Toltar","Number":"1179","RawContent":null,"Title":"Found text cut off in API Documentation","State":"open","Body":"Wanted to report that in the [api documentation](https://vuex.vuejs.org/en/api.html), there is cut off where it shows the arguments of the capture and dispatch methods. See image below.\r\n\r\n![documentationcutsoff](https://user-images.githubusercontent.com/6003536/37168025-310ca088-22c9-11e8-9347-4956d4916da5.PNG)\r\n","Url":"https://github.com/vuejs/vuex/issues/1179","RelatedDescription":"Open issue \"Found text cut off in API Documentation\" (#1179)"},{"Id":"303518130","IsPullRequest":false,"CreatedAt":"2018-03-08T15:21:43","Actor":"dotnetCarpenter","Number":"1175","RawContent":null,"Title":"Publisher/subscriber pattern in vuex","State":"closed","Body":"While porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.","Url":"https://github.com/vuejs/vuex/issues/1175","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex\" (#1175)"},{"Id":"303303960","IsPullRequest":false,"CreatedAt":"2018-03-08T06:28:40","Actor":"rawbin-","Number":"1174","RawContent":null,"Title":"Error: [vuex] Do not mutate vuex store state outside mutation handlers.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/m391k2vm8p](https://codesandbox.io/s/m391k2vm8p)\r\n\r\n### Steps to reproduce\r\nchange the grid lines\r\n\r\n### What is expected?\r\nshow errors\r\n\r\n### What is actually happening?\r\nno errors\r\n<img width=\"1651\" alt=\"qq20180308-073512 2x\" src=\"https://user-images.githubusercontent.com/8169783/37125015-a0c59d5e-22a5-11e8-99c1-53e85970c4a1.png\">\r\n\r\n---\r\nany good idea to do with the editable grids with vue and vuex?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1174","RelatedDescription":"Closed issue \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\" (#1174)"},{"Id":"303010970","IsPullRequest":true,"CreatedAt":"2018-03-07T13:04:30","Actor":"st-sloth","Number":"1173","RawContent":null,"Title":"docs: Mention payload in action handler in API","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1173","RelatedDescription":"Closed or merged PR \"docs: Mention payload in action handler in API\" (#1173)"},{"Id":"302363093","IsPullRequest":false,"CreatedAt":"2018-03-06T07:54:08","Actor":"rawbin-","Number":"1171","RawContent":null,"Title":"any good idea for us to express editable list using vuex?","State":"closed","Body":"### Version\r\n2.3.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/38n8j41vzq](https://codesandbox.io/s/38n8j41vzq)\r\n\r\n### Steps to reproduce\r\njust open the page\r\n\r\n### What is expected?\r\nany good way to bind form using vuex especially when there are many form item to bind\r\n\r\n### What is actually happening?\r\nfor every form item we do like this \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  }\r\n}\r\n```\r\nin case that we use an module to express an data structure,it turns out \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  },\r\n phone: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.phone\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updatePhone', value)\r\n    }\r\n  }\r\n}\r\n}\r\n```\r\nit's boring to do this on every form item when there is much more to do\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1171","RelatedDescription":"Closed issue \"any good idea for us to express editable list using vuex?\" (#1171)"},{"Id":"302584175","IsPullRequest":false,"CreatedAt":"2018-03-06T06:52:52","Actor":"Vheissu","Number":"1172","RawContent":null,"Title":"Decoupling Vuex from Vue","State":"open","Body":"### What problem does this feature solve?\r\nI do not work with Vue.js as my primary day-to-day library of choice, however, when I have and have used the VueX state management library with it, it was fantastic. As someone who has worked with Redux before, I appreciated just how much more simple VueX was in comparison to the over-engineered and complicated Redux library.\r\n\r\nAs it currently stands, VueX is tightly coupled to Vue. This means VueX cannot be used with any other framework or library. Would it ever be a consideration to make VueX a standalone library and remove the Vue dependency?\r\n\r\nAt the end of the day, VueX allows the user to work with a bunch of data inside of a single object tree. I have not done the investigative work just yet to see how much VueX relies on Vue, but I would love to know if the team are open to making it a standalone state management solution? It's one of the best state management libraries I have ever used.\r\n\r\n### What does the proposed API look like?\r\nThe proposed API would resemble that of the current plugin. In-fact, the only thing I could see being different is that you do not register the plugin using `Vue.use(Vuex)` and just instantiate it directly and assign the result to a variable/constant called `store` or whatever.\r\n\r\nYou would then configure your state management using the same syntax.\r\n\r\n```\r\nimport Vuex from 'vuex'\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    counter: 0\r\n  },\r\n  getters: {\r\n    counter: state => state.counter * 2\r\n  },\r\n  mutations: {\r\n    increment: state => state.counter  \r\n  }\r\n});\r\n\r\n// Usage\r\n\r\nconsole.log(store.getters.counter);\r\nstore.commit('increment');\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1172","RelatedDescription":"Open issue \"Decoupling Vuex from Vue\" (#1172)"},{"Id":"302088037","IsPullRequest":true,"CreatedAt":"2018-03-04T14:01:52","Actor":"blackmiaool","Number":"1170","RawContent":null,"Title":"docs: mention mapState needs injected store","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1170","RelatedDescription":"Open PR \"docs: mention mapState needs injected store\" (#1170)"},{"Id":"301516650","IsPullRequest":true,"CreatedAt":"2018-03-01T18:47:18","Actor":"davestewart","Number":"1169","RawContent":null,"Title":"Made getter property vs method syntax more explicit","State":"open","Body":"I've been using Vuex for about a year, and I never realised you could access store getters as methods.\r\n\r\nThis docs update makes the ability to do this explicit, as well as adding notes on caching.","Url":"https://github.com/vuejs/vuex/pull/1169","RelatedDescription":"Open PR \"Made getter property vs method syntax more explicit\" (#1169)"},{"Id":"301164712","IsPullRequest":false,"CreatedAt":"2018-03-01T08:21:15","Actor":"hrasekj","Number":"1167","RawContent":null,"Title":"If module state is an array his submodules are not reactive","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nvkupd14/16/](https://jsfiddle.net/nvkupd14/16/)\r\n\r\n### Steps to reproduce\r\nCreate an module which have his state as Array. Then create submodule for it.\r\n\r\n### What is expected?\r\nIm expecting that computed properties in modules will react to changes on submodule.\r\n\r\n### What is actually happening?\r\nVue does not map his getters & setters to submodule. So submodules state is changing, but computed properties not.\r\n\r\n---\r\nIt should warn user or something.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1167","RelatedDescription":"Closed issue \"If module state is an array his submodules are not reactive\" (#1167)"},{"Id":"301212285","IsPullRequest":false,"CreatedAt":"2018-02-28T22:42:39","Actor":"DusanMilko","Number":"1168","RawContent":null,"Title":"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'","State":"closed","Body":"All I'm doing is\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nWhen I compile my js with webpack I get \r\n`Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'`","Url":"https://github.com/vuejs/vuex/issues/1168","RelatedDescription":"Closed issue \"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'\" (#1168)"},{"Id":"300565264","IsPullRequest":true,"CreatedAt":"2018-02-27T10:18:55","Actor":"jacksonjoseph","Number":"1166","RawContent":null,"Title":"Update intro.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1166","RelatedDescription":"Closed or merged PR \"Update intro.md\" (#1166)"},{"Id":"300241798","IsPullRequest":false,"CreatedAt":"2018-02-26T14:58:31","Actor":"chetzof","Number":"1165","RawContent":null,"Title":"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/132227/](https://jsfiddle.net/50wL7mdz/132227/)\r\n\r\n### Steps to reproduce\r\nNo steps to reproduce.\r\nJust open the jsfiddle, you will see an alert that is called by the updated() hook. \r\n\r\n### What is expected?\r\nThe alert should not be displayed  because the registration of a new unrelated dynamic module should not trigger anything anywhere that is has no connection to.\r\n\r\n### What is actually happening?\r\nThe component triggers updated() hook when dynamically registering an unrelated module\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1165","RelatedDescription":"Closed issue \"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered\" (#1165)"},{"Id":"300150382","IsPullRequest":true,"CreatedAt":"2018-02-26T09:03:21","Actor":"yanlee26","Number":"1164","RawContent":null,"Title":"it means this?","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1164","RelatedDescription":"Closed or merged PR \"it means this?\" (#1164)"},{"Id":"300128951","IsPullRequest":false,"CreatedAt":"2018-02-26T07:02:08","Actor":"cmingxu","Number":"1163","RawContent":null,"Title":"Is it possible to call some other namespace's  getters from rootGetters?  ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n// some namespaced moduleA\r\n  getters: {\r\n    bootstrapped: ({ rootGetters }) => {\r\n      console.log( rootGetters['moduleB/getterFunc']() )\r\n    }\r\n  }","Url":"https://github.com/vuejs/vuex/issues/1163","RelatedDescription":"Closed issue \"Is it possible to call some other namespace's  getters from rootGetters?  \" (#1163)"},{"Id":"298980413","IsPullRequest":false,"CreatedAt":"2018-02-21T13:59:18","Actor":"joachimboggild","Number":"1162","RawContent":null,"Title":"Hard-to-locate error when providing wrong parameter type to mapState","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/048lw4q59n](https://codesandbox.io/s/048lw4q59n)\r\n\r\n### Steps to reproduce\r\n1) Open code sandbox provided.\r\n2) Look inside console to the error message provided.\r\n\r\nTo fix the problem, include brackets inside the mapState statement on line 97 in the HelloWorld.vue file.\r\n\r\n### What is expected?\r\nIt was expected that an error message would state that the parameter for the mapState function was invalid in 'HelloWorld.vue'.\r\n\r\n### What is actually happening?\r\nThis error message is returned: \r\n\r\n```\r\n[Vue warn]: Failed to resolve async component: function HelloWorld() {\r\n  return _promise2.default.resolve().then(function () {\r\n    return require(\"./components/HelloWorld\");\r\n  });\r\n}\r\nReason: TypeError: Cannot convert undefined or null to object\r\n```\r\n\r\n---\r\nI just thought that this was a difficult error to track, because the error message provided did not point towards the actual error. If it is possible to make the error message more precise, it would be great.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1162","RelatedDescription":"Open issue \"Hard-to-locate error when providing wrong parameter type to mapState\" (#1162)"},{"Id":"298429261","IsPullRequest":false,"CreatedAt":"2018-02-20T14:52:03","Actor":"kwame101","Number":"1161","RawContent":null,"Title":"Mutation handler don't commit -v","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l4k5ko85qm](https://codesandbox.io/s/l4k5ko85qm)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n\r\n\r\n### What is expected?\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe logo and a few text only shows (welcome test)\r\n\r\n---\r\nI'm using mapGetter function to get the name but mutation doesnt commit\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1161","RelatedDescription":"Closed issue \"Mutation handler don't commit -v\" (#1161)"},{"Id":"298428853","IsPullRequest":false,"CreatedAt":"2018-02-19T23:36:22","Actor":"kwame101","Number":"1160","RawContent":null,"Title":"Mutation handler don't commit","State":"closed","Body":"**Version**\r\n3.0.1\r\n\r\n**Reproduction link**\r\nhttps://codesandbox.io/s/l4k5ko85qm\r\n\r\n**Steps to reproduce**\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n**What is expected?**\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n**What is actually happening?**\r\nThe logo and a few text only shows. I'm using mapGetter function to get the name but mutation doesnt commit","Url":"https://github.com/vuejs/vuex/issues/1160","RelatedDescription":"Closed issue \"Mutation handler don't commit\" (#1160)"},{"Id":"297725821","IsPullRequest":false,"CreatedAt":"2018-02-16T11:51:10","Actor":"hungphongbk","Number":"1158","RawContent":null,"Title":"Getters on injected dynamic module get lost","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/104859/](https://jsfiddle.net/50wL7mdz/104859/)\r\n\r\n### Steps to reproduce\r\nGetters from injected dynamic module on reproduction code must returned \"bar ahihi\", but actually I got undefined (the getter didn't exist)\r\n\r\n### What is expected?\r\nGetters from injected dynamic module on reproduction code must returned \"bar ahihi\"\r\n\r\n### What is actually happening?\r\nGot undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1158","RelatedDescription":"Closed issue \"Getters on injected dynamic module get lost\" (#1158)"},{"Id":"297755577","IsPullRequest":false,"CreatedAt":"2018-02-16T11:45:27","Actor":"zokipirlo","Number":"1159","RawContent":null,"Title":"Mutations not commited","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r0p9pnr49p](https://codesandbox.io/s/r0p9pnr49p)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation, data will appear.\r\n\r\n### What is expected?\r\nNumbers from 1-7 below Data title.\r\n\r\n### What is actually happening?\r\nOnly title is visible.\r\n\r\n---\r\nThere is some commented code inside store (`state: items, getter: getItemsForLayoutId`) because that is a code from my real project. This `abc` is just for demonstration that it doesn't work even in a more simple solution.\r\n\r\nIn HelloWorld component is a `cards`computed property, which loads data from store. If it's not there, then it will dispatch an action to retrieve a data (api call is replaced with dummy data).\r\n\r\nI guess I'm doing something wrong, but don't know why.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1159","RelatedDescription":"Closed issue \"Mutations not commited\" (#1159)"},{"Id":"296151016","IsPullRequest":true,"CreatedAt":"2018-02-11T10:11:06","Actor":"sarahdayan","Number":"1157","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1157","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1157)"},{"Id":"296077809","IsPullRequest":true,"CreatedAt":"2018-02-10T18:41:38","Actor":"william-pan","Number":"1156","RawContent":null,"Title":"Remove unnecessary word in Chinese document","State":"closed","Body":"删掉了多余的“能”字","Url":"https://github.com/vuejs/vuex/pull/1156","RelatedDescription":"Closed or merged PR \"Remove unnecessary word in Chinese document\" (#1156)"},{"Id":"295830254","IsPullRequest":true,"CreatedAt":"2018-02-09T10:57:54","Actor":"whthT","Number":"1155","RawContent":null,"Title":"Update index.js","State":"closed","Body":"added a question.","Url":"https://github.com/vuejs/vuex/pull/1155","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1155)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-03-13T05:30:36.5162894Z","RunDurationInMilliseconds":4535}