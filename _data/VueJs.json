{"Data":{"Vue-Issues":{"Issues":[{"Id":"388352857","IsPullRequest":false,"CreatedAt":"2018-12-06T19:03:01","Actor":"Akryum","Number":"9155","RawContent":null,"Title":"Syntax error on template +  v-if + component +  v-for","State":"open","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\n[https://github.com/Akryum/vue-2-5-18-beta-0-syntax-error](https://github.com/Akryum/vue-2-5-18-beta-0-syntax-error)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWrite a template that has a v-if, which contains a component with a v-for:\r\n\r\n```html\r\n<template v-if=\"list.length\">\r\n  <Foo\r\n    v-for=\"(letter, index) of list\"\r\n    :key=\"index\"\r\n  />\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nCompiles fine\r\n\r\n### What is actually happening?\r\n```\r\n error  in ./src/components/TestError.vue?vue&type=template&id=56272718&\r\n\r\nSyntax Error: SyntaxError: Unexpected token (1:157)\r\n\r\n\r\n @ ./src/components/TestError.vue?vue&type=template&id=56272718& 1:0-383 1:0-383\r\n @ ./src/components/TestError.vue\r\n @ ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=script&lang=js&\r\n @ ./src/App.vue?vue&type=script&lang=js&\r\n @ ./src/App.vue\r\n @ ./src/main.js\r\n @ multi ./src/main.js\r\n\r\n\r\n ERROR  Build failed with errors.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9155","RelatedDescription":"Open issue \"Syntax error on template +  v-if + component +  v-for\" (#9155)"},{"Id":"388205582","IsPullRequest":true,"CreatedAt":"2018-12-06T13:05:46","Actor":"KaelWD","Number":"9154","RawContent":null,"Title":"fix(types): broaden VNodeChildren, fix #8498","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\nfixes #8498\r\n\r\nStill not sure about `VNodeComponentOptions.children`, I don't know if that gets normalised or not. ","Url":"https://github.com/vuejs/vue/pull/9154","RelatedDescription":"Open PR \"fix(types): broaden VNodeChildren, fix #8498\" (#9154)"},{"Id":"388189049","IsPullRequest":false,"CreatedAt":"2018-12-06T12:32:05","Actor":"christophfriedrich","Number":"9153","RawContent":null,"Title":"Availability of instance properties in default or validator functions","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/christophfriedrich/gxrs6n0v/3/](https://jsfiddle.net/christophfriedrich/gxrs6n0v/3/)\r\n\r\n### Steps to reproduce\r\n1. Open fiddle\r\n2. Click run\r\n\r\n### What is expected?\r\nIn the default function, I access `this.$parent`, which [is listed as an an instance property](https://vuejs.org/v2/api/#Instance-Properties).\r\n\r\nThe [docs about default and validator functions](https://vuejs.org/v2/guide/components-props.html#Prop-Validation) say:\r\n\r\n> Note that props are validated before a component instance is created, so instance properties (e.g. data, computed, etc) will not be available inside default or validator functions.\r\n\r\nTherefore I expected my fiddle to fail.\r\n\r\n### What is actually happening?\r\nThe fiddle works.\r\n\r\n---\r\n\r\nI highly appreciate that it works, because that solved [my question I posted on StackOverflow](https://stackoverflow.com/questions/53649690/set-vue-props-default-to-parents-options/53649772#53649772).\r\n\r\nHowever, the docs are misleading. The way it's worded I thought that NO instance property would be available to a default function, but obviously at least `$parent` (I didn't test any other) IS available.\r\n\r\nPlease update the \"default and validator function\" doc section accordingly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9153","RelatedDescription":"Closed issue \"Availability of instance properties in default or validator functions\" (#9153)"},{"Id":"388088731","IsPullRequest":false,"CreatedAt":"2018-12-06T07:28:46","Actor":"winstongithub","Number":"9152","RawContent":null,"Title":"missing ) after argument list","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9152","RelatedDescription":"Closed issue \"missing ) after argument list\" (#9152)"},{"Id":"387862041","IsPullRequest":false,"CreatedAt":"2018-12-05T22:34:16","Actor":"jacekkarczmarczyk","Number":"9151","RawContent":null,"Title":"Cannot read property '$vnode' of null in transition-group in render function","State":"closed","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\nhttps://codepen.io/anon/pen/OaeWWY?editors=0012\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen reproduction, look at console error messages\r\n\r\n### What is expected?\r\nNo messages\r\n\r\n### What is actually happening?\r\n```\r\nconsole_runner-ce3034e6bde3912cc25f83cccb7caa2b0f976196f2f2d52303a462c826d54a73.js:1 TypeError: Cannot read property '$vnode' of null\r\n    at enter (vue.js:7749)\r\n    at Array._enter (vue.js:8008)\r\n    at invokeCreateHooks (vue.js:5780)\r\n    at createElm (vue.js:5667)\r\n    at updateChildren (vue.js:5936)\r\n    at patchVnode (vue.js:6030)\r\n    at VueComponent.patch [as __patch__] (vue.js:6191)\r\n    at VueComponent._update (vue.js:8457)\r\n    at VueComponent.updateComponent (vue.js:2886)\r\n    at Watcher.get (vue.js:3254)\r\n```\r\n---\r\nWorking in 2.5.17: https://codepen.io/anon/pen/Krjayz?editors=0012\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9151","RelatedDescription":"Closed issue \"Cannot read property '$vnode' of null in transition-group in render function\" (#9151)"},{"Id":"387861483","IsPullRequest":true,"CreatedAt":"2018-12-05T20:26:58","Actor":"Justineo","Number":"9150","RawContent":null,"Title":"fix #9112: fix keyName checking for space and delete in IE11","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9150","RelatedDescription":"Closed or merged PR \"fix #9112: fix keyName checking for space and delete in IE11\" (#9150)"},{"Id":"387611008","IsPullRequest":false,"CreatedAt":"2018-12-05T15:55:20","Actor":"fe-shinemo","Number":"9145","RawContent":null,"Title":"SSR publich path https://xx generated to https:/xx","State":"closed","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/v2.5.18-beta.0/src/server/template-renderer/index.js](https://github.com/vuejs/vue/blob/v2.5.18-beta.0/src/server/template-renderer/index.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNo need to repro, it's written in the code.\r\n\r\nhttps://github.com/vuejs/vue/blob/e8031b4e68a060d4e559ec62f4350987e06dee9a/src/server/template-renderer/index.js#L233\r\n\r\nhere it's used `path.posix.join` ( #8177 ), thus if publicPath begin with `https://` or `http://`,  one of the double slashes disapper, become `https:/`.\r\n\r\n### What is expected?\r\npublicPath = ''https://cdn.nuxtjs.org/\" generates \"https://cdn.nuxtjs.org/xxx.js\"\r\n\r\n\r\n### What is actually happening?\r\npublicPath = ''https://cdn.nuxtjs.org/\" generates \"https:/cdn.nuxtjs.org/xxx.js\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9145","RelatedDescription":"Closed issue \"SSR publich path https://xx generated to https:/xx\" (#9145)"},{"Id":"387792990","IsPullRequest":false,"CreatedAt":"2018-12-05T15:01:05","Actor":"blalan","Number":"9149","RawContent":null,"Title":"Cannot read property '$vnode' of null'","State":"closed","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/4l9xo6zz9](https://codesandbox.io/s/4l9xo6zz9)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nChange hour in timepicker to a future hour, making the validation fail and error message to appear.\r\n\r\n### What is expected?\r\nFinish being able to select hour/minutes and see error on text-field\r\n\r\n### What is actually happening?\r\nConsole error logged, app because non-responsive until manual refresh.\r\n\r\n---\r\nThis is a regression, works fine in 2.5.17. @kaelwd thinks this has to do with the transition on the error message element. He referenced this commit: https://github.com/vuejs/vue/commit/f43ce3a5d8f73e273f2d03c9d86ea5662cda481a\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9149","RelatedDescription":"Closed issue \"Cannot read property '$vnode' of null'\" (#9149)"},{"Id":"387700976","IsPullRequest":false,"CreatedAt":"2018-12-05T10:55:23","Actor":"bosens-China","Number":"9148","RawContent":null,"Title":"Passing props dynamic values causes subcomponents to fail to update","State":"closed","Body":"I have a sub-component that is used to update graph data. The data itself needs to be retrieved from ajax, but the value passed to the sub-component by prop is often inconsistent with the data. I can solve this problem by using vuex, but this component is universal. I can't use this method here.\r\n\r\nHow to Solve the Dynamic Data Acquisition of Subcomponents\r\n\r\n---\r\n\r\n我有一个子组件他用来更新图表数据，数据本身需要从ajax来获取，但是通过prop的方式传递给子组件数值，经常是与数据不符合的，我采用了vuex这个问题可以得到解决，但是这个组件是通用的，这里我不能使用这个方法。\r\n怎么可以解决子组件动态获取数据","Url":"https://github.com/vuejs/vue/issues/9148","RelatedDescription":"Closed issue \"Passing props dynamic values causes subcomponents to fail to update\" (#9148)"},{"Id":"387699457","IsPullRequest":false,"CreatedAt":"2018-12-05T10:51:25","Actor":"bosens-China","Number":"9147","RawContent":null,"Title":"vue","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9147","RelatedDescription":"Closed issue \"vue\" (#9147)"},{"Id":"387656630","IsPullRequest":true,"CreatedAt":"2018-12-05T09:44:22","Actor":"jindasong","Number":"9146","RawContent":null,"Title":"merge","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9146","RelatedDescription":"Closed or merged PR \"merge\" (#9146)"},{"Id":"387544194","IsPullRequest":false,"CreatedAt":"2018-12-05T02:15:17","Actor":"invisor","Number":"9144","RawContent":null,"Title":"TypeError: Cannot read property 'toLowerCase' of undefined at emptyNodeAt","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/rn58agzj/](https://jsfiddle.net/rn58agzj/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI trying to use async components on my site based on nuxt. But I think bug is in Vue.\r\nI have a component with multiple subcomponents. I try to import this component asynchronously.\r\nThen when a use hard page reloading in a browser (chrome, firefox etc.) there is a chance to this issue appear\r\n\r\n\r\n### What is expected?\r\nThere are no errors expected\r\n\r\n### What is actually happening?\r\nThere is an error: TypeError: Cannot read property 'toLowerCase' of undefined at emptyNodeAt\r\n\r\nThe error is emitting from this function that part of Virtual DOM patching algorithm:\r\n\r\n```\r\nfunction emptyNodeAt (elm) {\r\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\r\n}\r\n```\r\n\r\n---\r\nI can't reproduct code via jsFiddle. There is a lot of code. There are some code examples in screenshots\r\nhttps://www.dropbox.com/sh/ucon2v5u5dmcag4/AAD_h9Q7ASHUJWsi0_dRORJla?dl=0\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9144","RelatedDescription":"Closed issue \"TypeError: Cannot read property 'toLowerCase' of undefined at emptyNodeAt\" (#9144)"},{"Id":"387474584","IsPullRequest":true,"CreatedAt":"2018-12-04T20:52:20","Actor":"zleight1","Number":"9143","RawContent":null,"Title":"fix(parser#9038): Fix for slot \"name\" property using interpolation as well…","State":"open","Body":"… as the \"slot\" property. (vuejs#9038)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9143","RelatedDescription":"Open PR \"fix(parser#9038): Fix for slot \"name\" property using interpolation as well…\" (#9143)"},{"Id":"387268844","IsPullRequest":false,"CreatedAt":"2018-12-04T15:52:30","Actor":"sqal","Number":"9142","RawContent":null,"Title":"Cannot render component within v-for loop inside template tag","State":"closed","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/d4hv3seo/ - 2.5.18-beta.0\r\nhttps://jsfiddle.net/Ly3091vw/ - 2.5.17 no issues\r\n\r\n### Steps to reproduce\r\nOpen 2.5.18 reproduction fiddle and check console log\r\n\r\n### What is expected?\r\nShould render the template.\r\n\r\n### What is actually happening?\r\nDoes not parse the template correctly when iterating over components inside `<template>` tag. If you change it to e.g. div then it's fine and renders the template again.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9142","RelatedDescription":"Closed issue \"Cannot render component within v-for loop inside template tag\" (#9142)"},{"Id":"387209186","IsPullRequest":false,"CreatedAt":"2018-12-04T10:12:10","Actor":"hstaniszewski","Number":"9141","RawContent":null,"Title":"Slots that use the slot-scope attribute are not available in $slots","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/eywraw8t/489777/](http://jsfiddle.net/eywraw8t/489777/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add `slot-scope=\"slot\"` to the slot and `console.log(this.$slots)` in parent component.\r\n\r\n### What is expected?\r\nAll slots should be available in `$slots`.\r\n\r\n### What is actually happening?\r\nSlots that use the `slot-scope` attribute are not available in `$slots`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9141","RelatedDescription":"Closed issue \"Slots that use the slot-scope attribute are not available in $slots\" (#9141)"},{"Id":"387193415","IsPullRequest":false,"CreatedAt":"2018-12-04T09:30:45","Actor":"rwjCxgsy","Number":"9140","RawContent":null,"Title":"ts 版本如何调用子组件方法和属性","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9140","RelatedDescription":"Closed issue \"ts 版本如何调用子组件方法和属性\" (#9140)"},{"Id":"387173827","IsPullRequest":true,"CreatedAt":"2018-12-04T08:37:30","Actor":"imyzf","Number":"9139","RawContent":null,"Title":"fix(weex): support data class type that is string (#9124)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9139","RelatedDescription":"Open PR \"fix(weex): support data class type that is string (#9124)\" (#9139)"},{"Id":"386659494","IsPullRequest":true,"CreatedAt":"2018-12-04T01:31:40","Actor":"KaelWD","Number":"9131","RawContent":null,"Title":"fix(types): correct scopedSlot types","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\nsee #8946\r\n- scoped slots can return a single VNode if `<template>` is not used\r\n- `$scopedSlots` needs to be able to be passed down to children (https://github.com/vuetifyjs/vuetify/blob/8a1b48304b64ff001e9feda3c64a23883448d76b/packages/vuetify/src/components/VTreeview/VTreeviewNode.ts#L262)","Url":"https://github.com/vuejs/vue/pull/9131","RelatedDescription":"Closed or merged PR \"fix(types): correct scopedSlot types\" (#9131)"},{"Id":"387035299","IsPullRequest":false,"CreatedAt":"2018-12-03T22:31:31","Actor":"freddialpad","Number":"9138","RawContent":null,"Title":"can't use `:srcObject.prop` to set prop to null","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ppyq71wrxj](https://codesandbox.io/s/ppyq71wrxj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n(See minimal repro)\r\n\r\n1. have a component with an `HTMLMediaElement` that binds `:srcObject.prop` to some data property (that starts off as `null`):\r\n```\r\n<audio :srcObject.prop=\"stream\">\r\n```\r\n2. set it to some valid `MediaStream`:\r\n```\r\nthis.stream = new MediaStream();\r\n```\r\n3. set it back to `null`:\r\n```\r\nthis.stream = null;\r\n```\r\n\r\n### What is expected?\r\nI expect the audio.srcObject to be null\r\n\r\n### What is actually happening?\r\nit stays as the MediaStream and there's a TypeError in the log.\r\n\r\n---\r\nI noticed that it did actually work in my first attempt to write the repro example: https://jsfiddle.net/4tnkapxo/1/ (probably because the whole thing is inline?)\r\n\r\nIm not sure how helpful this is, but based on the stack trace it's related to this code, found in `updateDOMProps`:\r\n\r\n```\r\n  for (key in oldProps) {\r\n    if (isUndef(props[key])) {\r\n      elm[key] = '';\r\n    }\r\n  }\r\n```\r\n\r\n`isUndef(null)` is evaluating true, and so it's trying to set the prop to `''`, but `srcObject` specifically needs it to be `null` or a `MediaStream`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9138","RelatedDescription":"Open issue \"can't use `:srcObject.prop` to set prop to null\" (#9138)"},{"Id":"386867452","IsPullRequest":true,"CreatedAt":"2018-12-03T20:26:43","Actor":"cybermerlin","Number":"9136","RawContent":null,"Title":"Hotfix/observe(Array) (trouble if use extends Array)","State":"closed","Body":"same PR #9135 ","Url":"https://github.com/vuejs/vue/pull/9136","RelatedDescription":"Closed or merged PR \"Hotfix/observe(Array) (trouble if use extends Array)\" (#9136)"},{"Id":"386965069","IsPullRequest":false,"CreatedAt":"2018-12-03T19:18:16","Actor":"cybermerlin","Number":"9137","RawContent":null,"Title":"npm run build -> failed","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\nSay pls how can I fix that?\r\n![image](https://user-images.githubusercontent.com/1460479/49396084-4f4e3980-f749-11e8-879a-cbd58e8b5f4c.png)\r\n","Url":"https://github.com/vuejs/vue/issues/9137","RelatedDescription":"Closed issue \"npm run build -> failed\" (#9137)"},{"Id":"386864126","IsPullRequest":true,"CreatedAt":"2018-12-03T15:15:57","Actor":"cybermerlin","Number":"9135","RawContent":null,"Title":"fix: Observer> trouble with observe Array (losted special methods)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix           -------->>  **and for 2.5.17 in branch `hotfix_observe_array`**\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9135","RelatedDescription":"Open PR \"fix: Observer> trouble with observe Array (losted special methods)\" (#9135)"},{"Id":"386714720","IsPullRequest":false,"CreatedAt":"2018-12-03T10:49:34","Actor":"suau","Number":"9134","RawContent":null,"Title":"watch with immediate:true is too immediate","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/suaujs/8b9m301c/](https://jsfiddle.net/suaujs/8b9m301c/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick run in the jsfiddle and check the console\r\n\r\n### What is expected?\r\nThe Vuex.Store.watch method returns a unwatch function, which can be called to stop watching.\r\nWith the immediate option, the current value should be called and the unwatch() function should be available in the callback.\r\n\r\n### What is actually happening?\r\nThe issue arises when Vuex.Store.watch is used with the immediate option, which will trigger the callback synchronously within the watch() call.\r\ntherefore it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n---\r\nAccording to https://github.com/vuejs/vuex/issues/1249 vuex uses vue's watch method.\r\n\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9134","RelatedDescription":"Closed issue \"watch with immediate:true is too immediate\" (#9134)"},{"Id":"386682172","IsPullRequest":false,"CreatedAt":"2018-12-03T06:58:19","Actor":"haodaking","Number":"9133","RawContent":null,"Title":"移动端页面引入vue.js后，浏览器后退滚动条回到顶部","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://haodaking.github.io/demos/vue/2.html](https://haodaking.github.io/demos/vue/2.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、移动端浏览器打开[https://haodaking.github.io/demos/vue/2.html](https://haodaking.github.io/demos/vue/2.html)\r\n2、页面滑动到底部点击“跳转”链接\r\n3、点击浏览器后退按钮\r\n\r\n### What is expected?\r\n页面跳转后，浏览器后退，滚动条恢复原来位置。\r\n正常页面：\r\n[https://haodaking.github.io/demos/vue/1.html](https://haodaking.github.io/demos/vue/1.html)\r\n\r\n### What is actually happening?\r\n数据异步渲染，页面跳转后，浏览器后退，滚动条滑到了最顶部。\r\n\r\n---\r\n设备：iPhone XS；\r\n系统：IOS 12.1；\r\n浏览器：Safari；\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9133","RelatedDescription":"Closed issue \"移动端页面引入vue.js后，浏览器后退滚动条回到顶部\" (#9133)"},{"Id":"386665825","IsPullRequest":false,"CreatedAt":"2018-12-03T05:37:27","Actor":"VioletCzy","Number":"9132","RawContent":null,"Title":"一个vue页面中如何包含另一个前端项目的vue页面","State":"closed","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、打开一个vue页面\r\n2、动态包含其他项目的vue页面\r\n\r\n### What is expected?\r\n可以动态的根据路由url包含页面 \r\n\r\n### What is actually happening?\r\n没有效果\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9132","RelatedDescription":"Closed issue \"一个vue页面中如何包含另一个前端项目的vue页面\" (#9132)"},{"Id":"386436243","IsPullRequest":true,"CreatedAt":"2018-12-02T21:01:20","Actor":"ggtmtmgg","Number":"9129","RawContent":null,"Title":"fix #8961 resolve camelCased local directives","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9129","RelatedDescription":"Closed or merged PR \"fix #8961 resolve camelCased local directives\" (#9129)"},{"Id":"386441067","IsPullRequest":false,"CreatedAt":"2018-12-01T09:25:49","Actor":"DioBrandoLong","Number":"9130","RawContent":null,"Title":"Did officials have considered cross-domain issues?","State":"closed","Body":"### What problem does this feature solve?\r\ni have already make cross-domain in my PHP procedure,but  when i using AXIOS to get data it's not working, i can get response,but in my AXIOS  it's get error . Can Vue make network request directly like Android?\r\nif  officials can fix this problem, I'm sure it's will a lot of people using vue.\r\n\r\n### What does the proposed API look like?\r\n\r\n        proxy: {\r\n            '/api': {\r\n                target: 'https://example.com',\r\n                changeOrigin: true,\r\n                ws: true,\r\n                rewrites: {\r\n                    '^/api': ''\r\n                }\r\n            }\r\n        }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9130","RelatedDescription":"Closed issue \"Did officials have considered cross-domain issues?\" (#9130)"},{"Id":"386175834","IsPullRequest":true,"CreatedAt":"2018-11-30T12:53:42","Actor":"clarkdo","Number":"9128","RawContent":null,"Title":"fix(ssr): renderToString cannot render comment","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nFix https://github.com/nuxt/nuxt.js/issues/4458","Url":"https://github.com/vuejs/vue/pull/9128","RelatedDescription":"Open PR \"fix(ssr): renderToString cannot render comment\" (#9128)"},{"Id":"386078773","IsPullRequest":false,"CreatedAt":"2018-11-30T08:52:32","Actor":"bernhardreiter","Number":"9127","RawContent":null,"Title":"White space stripped between <a> and <span> where it shouldn't (in comparison to HTML)","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/6j7kz64znr](https://codesandbox.io/s/6j7kz64znr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen using two tags like <a> and <span> in a template of a single file component, with some white space in between.\r\n\r\nExamples (as in the link)\r\n```html\r\n  <div>\r\n    <br />\r\n    <a href=\"https://vuejs.org/\">Vue.js</a>\r\n\r\n    <span>is nice</span>.\r\n  </div>\r\n```\r\n\r\nresults in `Vue.jsis nice.'\r\n\r\n### What is expected?\r\nExpected is the regular handling of white space in browsers that remove all, but one white space. \r\n\r\n### What is actually happening?\r\nThe last space is removed.\r\n\r\n---\r\nhttps://codepen.io/anon/pen/RqEoOr shows the regular handling of this piece of html in a browser (without other css options set).\r\n\r\nThe problem was noticed when trying to translate text with vue-gettext, where is poses an extra challenge, see https://github.com/Polyconseil/vue-gettext/issues/80\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9127","RelatedDescription":"Closed issue \"White space stripped between <a> and <span> where it shouldn't (in comparison to HTML)\" (#9127)"},{"Id":"386049389","IsPullRequest":true,"CreatedAt":"2018-11-30T06:05:47","Actor":"mynameisliyi","Number":"9126","RawContent":null,"Title":"23","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9126","RelatedDescription":"Closed or merged PR \"23\" (#9126)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"388496060","IsPullRequest":false,"CreatedAt":"2018-12-07T03:55:57","Actor":"xuzpeng","Number":"2522","RawContent":null,"Title":"keep-alive can not cache two routing pages at the same time","State":"closed","Body":"this is router code:\r\nexport default new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/', \r\n      component: Menu,\r\n      children: [\r\n        {path: '', component: Home, meta: {keepAlive: true}},\r\n        {path: 'find', component: Find, meta: {keepAlive: false}},\r\n        {path: 'order', component: Order, meta: {keepAlive: true}},\r\n        {path: 'mine', component: Mine, meta: {keepAlive: false}},\r\n      ]\r\n    },\r\n    {\r\n      path: '/login',\r\n      component: Login,\r\n      meta: {keepAlive: false}\r\n    }\r\n  ]\r\n});\r\n\r\nthis is router-view:\r\n <keep-alive>\r\n      <router-view v-if=\"$route.meta.keepAlive\"></router-view>\r\n    </keep-alive>\r\n    <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\r\n\r\nquestion:\r\nWhen I switch from meta.keepAlive to true to meta.keepAlive to true, the page will make a request, not cached, and false and true before switching will not request, cached。","Url":"https://github.com/vuejs/vue-router/issues/2522","RelatedDescription":"Closed issue \"keep-alive can not cache two routing pages at the same time\" (#2522)"},{"Id":"388471216","IsPullRequest":false,"CreatedAt":"2018-12-07T01:51:19","Actor":"yoonasy","Number":"2521","RawContent":null,"Title":"ClassName problem when navigation activates routing","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net](https://jsfiddle.net)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen navigating with query parameters\r\n\r\n`active-class` will not match\r\n\r\n`/a?id=10` situation\r\n\r\n### What is expected?\r\nThe query parameter should match\r\n\r\n### What is actually happening?\r\n`active-class` No activation\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2521","RelatedDescription":"Closed issue \"ClassName problem when navigation activates routing\" (#2521)"},{"Id":"388134048","IsPullRequest":false,"CreatedAt":"2018-12-06T09:50:41","Actor":"Dmitrij-Polyanin","Number":"2520","RawContent":null,"Title":"router.go() refreshes all page, is it noraml?","State":"closed","Body":"I try to reload (but not full page) current location.\r\n\r\nI use `router.go()` method or  `router.go(0)`, but it refreshes whole page (not as SPA).\r\n\r\nIs it normal?","Url":"https://github.com/vuejs/vue-router/issues/2520","RelatedDescription":"Closed issue \"router.go() refreshes all page, is it noraml?\" (#2520)"},{"Id":"388064251","IsPullRequest":false,"CreatedAt":"2018-12-06T06:05:38","Actor":"NBSeven","Number":"2519","RawContent":null,"Title":"Set different route path and same component ,  the scope is same.","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pk39zjm5lj](https://codesandbox.io/s/pk39zjm5lj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nrouter-view render different route path and use same component ,the data cant be changed after i change the path.Is there any way to fix it.\r\n\r\n### What is expected?\r\nchange scope data after change path .path 'abc' input '123' and pape '' bcd\"  dont change\r\n\r\n### What is actually happening?\r\nchange scope after change path .path 'abc' input '123' and path '' bcd\"  is still '123'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2519","RelatedDescription":"Closed issue \"Set different route path and same component ,  the scope is same.\" (#2519)"},{"Id":"387335486","IsPullRequest":true,"CreatedAt":"2018-12-04T15:17:54","Actor":"rchl","Number":"2518","RawContent":null,"Title":"style(test): add eslint configuration for unit tests","State":"open","Body":"While trying to familiarize myself with code base and tests, got annoyed by my editor highlighting \"errors\" in test files so decided to add config for unit tests.","Url":"https://github.com/vuejs/vue-router/pull/2518","RelatedDescription":"Open PR \"style(test): add eslint configuration for unit tests\" (#2518)"},{"Id":"387197472","IsPullRequest":false,"CreatedAt":"2018-12-04T09:40:46","Actor":"QinFeiFei","Number":"2517","RawContent":null,"Title":"如何根据router的name值，获取其url","State":"closed","Body":"现在有一个需求是iframe的src中，需要填写 this.$router.push({name: 'home'}) 跳转后的 url 地址，请问如何实现。 ","Url":"https://github.com/vuejs/vue-router/issues/2517","RelatedDescription":"Closed issue \"如何根据router的name值，获取其url\" (#2517)"},{"Id":"387110138","IsPullRequest":false,"CreatedAt":"2018-12-04T08:08:38","Actor":"medmin","Number":"2516","RawContent":null,"Title":"beforeRouteEnter next callback cannot return next(false)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/whizjs/netlify-identity-demo-vue/blob/master/src/components/Protected.vue#L21](https://github.com/whizjs/netlify-identity-demo-vue/blob/master/src/components/Protected.vue#L21)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/whizjs/netlify-identity-demo-vue/blob/master/src/components/Protected.vue#L21\r\n\r\nChange the code on Line 21 to \"return next(false);\" or \"return false;\"  the router will proceed even the user is not logged in.\r\n\r\nIt's very easy to reproduce this bug.\r\n\r\n\r\n\r\n### What is expected?\r\nI need the unauthenticated guest to stay in the current page, not redirect to home or any other page. \r\n\r\n### What is actually happening?\r\nChange the code on Line 21 to \"return next(false);\" or \"return false;\"  the router will proceed even the user is not logged in.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2516","RelatedDescription":"Closed issue \"beforeRouteEnter next callback cannot return next(false)\" (#2516)"},{"Id":"386760453","IsPullRequest":false,"CreatedAt":"2018-12-03T13:25:24","Actor":"masquevil","Number":"2515","RawContent":null,"Title":"Inside guards, get to know current navigating is under router.replace or router.push.","State":"closed","Body":"### What problem does this feature solve?\r\nwhen doing `router.replace('url')`, `next('otherUrl')` will cause this navigation become `router.push`.\r\n\r\nwhen doing `router.push('url')`, `next({..., replace: true})` will cause this navigation become `router.replace`.\r\n\r\nwant to know current navigating statue inside guards to solve this problem.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nbeforeEach: (to, from, next, infos) => {\r\n  console.log(info.replace)    // true or false\r\n}\r\n```\r\n\r\nor:\r\n\r\n```javascript\r\nbeforeEach: (to, from, next) => {\r\n  console.log(to.replace)    // true or false\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2515","RelatedDescription":"Closed issue \"Inside guards, get to know current navigating is under router.replace or router.push.\" (#2515)"},{"Id":"386683853","IsPullRequest":false,"CreatedAt":"2018-12-03T07:01:07","Actor":"cpfeng","Number":"2514","RawContent":null,"Title":"vue-router back not work when some async js status is pending","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2514","RelatedDescription":"Closed issue \"vue-router back not work when some async js status is pending\" (#2514)"},{"Id":"386577689","IsPullRequest":false,"CreatedAt":"2018-12-02T16:56:13","Actor":"deepkolos","Number":"2513","RawContent":null,"Title":"router-link doesn't work correctly when rendered within a functional component","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/deepkolos/vue-router-link-bug-demo](https://github.com/deepkolos/vue-router-link-bug-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![router-link-bug.gif](https://upload-images.jianshu.io/upload_images/252050-56ab6f579680300d.gif?imageMogr2/auto-orient/strip)\r\n\r\n### What is expected?\r\nwhen come back router-link's classList is \"f-link default-link\" as it's inital state\r\n\r\n### What is actually happening?\r\nrouter-link's classList become empty\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2513","RelatedDescription":"Open issue \"router-link doesn't work correctly when rendered within a functional component\" (#2513)"},{"Id":"386568823","IsPullRequest":true,"CreatedAt":"2018-12-02T15:15:34","Actor":"miewx","Number":"2512","RawContent":null,"Title":"no need set init data;just use async data","State":"open","Body":"use like this\r\n```\r\nexport default {\r\n    beforeRouteEnter:(from, to, next)->\r\n        li = (await $.get '/api/li.txt').split('\\n').filter(Boolean)\r\n        @data = ->\r\n            {\r\n                n:0\r\n                now:1\r\n                li\r\n                src : [\r\n                    li[0]\r\n                    li[1]\r\n                ]\r\n            }\r\n        next()\r\n\r\n```","Url":"https://github.com/vuejs/vue-router/pull/2512","RelatedDescription":"Open PR \"no need set init data;just use async data\" (#2512)"},{"Id":"385955336","IsPullRequest":false,"CreatedAt":"2018-11-30T13:08:43","Actor":"michaeldjeffrey","Number":"2509","RawContent":null,"Title":"isError only identifies literal errors when extending Error and targeting IE","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/o8v2plnoz](https://codesandbox.io/s/o8v2plnoz)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake a custom error using the class-extends syntax.\r\nThrow error during a route transition.\r\n\r\n### What is expected?\r\nError is caught and sent to Router.onError handler.\r\n\r\n### What is actually happening?\r\nError is being identified as a plain object.\r\n\r\n---\r\nHave a custom error to carry notifications with uncaught errors in an application. \r\nNo notifications were showing up in production where we support IE11. \r\nThe custom error correctly identifies as an instanceof Error, but the util/isError function deems it an object.\r\n\r\nI'm currently using some snippets from https://github.com/onury/custom-error-test to get the Error prototype on my custom error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2509","RelatedDescription":"Closed issue \"isError only identifies literal errors when extending Error and targeting IE\" (#2509)"},{"Id":"386068040","IsPullRequest":false,"CreatedAt":"2018-11-30T12:40:47","Actor":"dmmikkel","Number":"2511","RawContent":null,"Title":"Make it possible to specify depth on RouterView component","State":"closed","Body":"### What problem does this feature solve?\r\nIn order to render children of a route you must nest RouterView components inside each other. In certain projects with advanced layouts this forces the wrong components to be responsible for the layout.\r\n\r\nI propose that RouterView accepts an optional property that overrides the depth. I have already implemented and tested this feature in our project.\r\n\r\nThe benefits of this is\r\n \r\n- Removes the need for nesting RouterViews\r\n- Makes it possible for a single component to be responsible for layout when using child views\r\n- In devtools it is easier to find the router views as they are siblings\r\n- Is 100% optional and does not break any existing code\r\n\r\n### What does the proposed API look like?\r\n    routes: [\r\n      { path: '/', component: Foo,\r\n        children: [\r\n          { path: 'child', component: Bar,\r\n            children: [\r\n              { path: 'another-child', component: Baz }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    <RouterView :depth=\"0\"/>\r\n    <RouterView name=\"some-name\" :depth=\"0\"/>\r\n    <RouterView :depth=\"1\"/>\r\n    <RouterView :depth=\"2\"/>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2511","RelatedDescription":"Closed issue \"Make it possible to specify depth on RouterView component\" (#2511)"},{"Id":"384068541","IsPullRequest":true,"CreatedAt":"2018-11-30T02:18:11","Actor":"parkourben99","Number":"2498","RawContent":null,"Title":"[Docs] Use ternary operator in example","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2498","RelatedDescription":"Closed or merged PR \"[Docs] Use ternary operator in example\" (#2498)"},{"Id":"385992623","IsPullRequest":false,"CreatedAt":"2018-11-30T01:00:05","Actor":"1060352728","Number":"2510","RawContent":null,"Title":"Routing jump after the # appears in front of one?","State":"closed","Body":"i use  'this.$router.push('/main');'  after url     'http://127.0.0.1:8080/?#/main'.   It seems to me that it has a question mark","Url":"https://github.com/vuejs/vue-router/issues/2510","RelatedDescription":"Closed issue \"Routing jump after the # appears in front of one?\" (#2510)"},{"Id":"385847742","IsPullRequest":false,"CreatedAt":"2018-11-29T17:34:18","Actor":"GNSubrahmanyam","Number":"2508","RawContent":null,"Title":"What are the best practices for hiding/disablinga component on some routes?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2508","RelatedDescription":"Closed issue \"What are the best practices for hiding/disablinga component on some routes?\" (#2508)"},{"Id":"385144571","IsPullRequest":false,"CreatedAt":"2018-11-28T07:59:40","Actor":"Youn9er","Number":"2507","RawContent":null,"Title":"TypeError: Cannot read property 'topBar' of undefined","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2507","RelatedDescription":"Closed issue \"TypeError: Cannot read property 'topBar' of undefined\" (#2507)"},{"Id":"384895343","IsPullRequest":true,"CreatedAt":"2018-11-27T17:03:06","Actor":"clarkdo","Number":"2506","RawContent":null,"Title":"fix: expect 0 to be defined","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nTry to fix #2505, delegate `params['pathMatch']` to `params['0']` for `pathToRegexp` package matching.","Url":"https://github.com/vuejs/vue-router/pull/2506","RelatedDescription":"Open PR \"fix: expect 0 to be defined\" (#2506)"},{"Id":"384855230","IsPullRequest":false,"CreatedAt":"2018-11-27T15:39:21","Actor":"manniL","Number":"2505","RawContent":null,"Title":"Catch all route with prefix throw `Expected \"0\" to be defined`","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/lykxn57kr7](https://codesandbox.io/s/lykxn57kr7)\r\n\r\n\r\nPrefix routes are fine when they don't have a prefix but with a `/sth/` it becomes problematic.\r\n\r\nThis causes problems especially for `nuxt-i18n` together with a catch-all-route (as it uses lang prefixes)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Visit the CSB/Website\r\n2. See warning in the console.\r\n\r\nInfo: This did not happen in 3.0.1\r\nRelated: #2496, #2503 \r\n\r\n### What is expected?\r\nNo warning\r\n\r\n### What is actually happening?\r\nWarning\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2505","RelatedDescription":"Open issue \"Catch all route with prefix throw `Expected \"0\" to be defined`\" (#2505)"},{"Id":"384785306","IsPullRequest":false,"CreatedAt":"2018-11-27T13:04:16","Actor":"yigu","Number":"2504","RawContent":null,"Title":"path not change","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2504","RelatedDescription":"Closed issue \"path not change\" (#2504)"},{"Id":"384785011","IsPullRequest":false,"CreatedAt":"2018-11-27T13:03:27","Actor":"rchl","Number":"2503","RawContent":null,"Title":"Unclear structure of params object","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\nhttps://codesandbox.io/s/lykxn57kr7\r\n\r\n### Steps to reproduce\r\nAccess `$route.params[0]` for route with a `*`.\r\n\r\n### What is expected?\r\nThe matched part is returned.\r\n\r\n### What is actually happening?\r\nValue is undefined. The value is at `pathMatch` property instead.\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/pull/1995/files (@posva) has done a change that changes from having `0` property on the `params` object to having `pathMatch`.\r\n\r\nI would argue that this is an API breaking change and should be done in a major version release. I would, but `params` object is not documented very well so it's hard to reason about. (see https://router.vuejs.org/api/#route-object-properties)\r\n\r\nAs the damage is done already, maybe you can use this bug to improve on documentation and state in documentation for `$route.params` where the matched part is exposed for routes that are using `*`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2503","RelatedDescription":"Open issue \"Unclear structure of params object\" (#2503)"},{"Id":"384782221","IsPullRequest":false,"CreatedAt":"2018-11-27T12:56:14","Actor":"yigu","Number":"2502","RawContent":null,"Title":"子页面变了，url的path不变","State":"closed","Body":"网站内容来自 CNAME 另一个域名，可以正常访问及跳转，但是url始终不变。有人知道怎么办吗？","Url":"https://github.com/vuejs/vue-router/issues/2502","RelatedDescription":"Closed issue \"子页面变了，url的path不变\" (#2502)"},{"Id":"384582728","IsPullRequest":true,"CreatedAt":"2018-11-27T04:37:12","Actor":"iamnotblank","Number":"2501","RawContent":null,"Title":"[Docs] Update documentation link address","State":"closed","Body":"gh-page link address is not useful\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2501","RelatedDescription":"Closed or merged PR \"[Docs] Update documentation link address\" (#2501)"},{"Id":"384577667","IsPullRequest":true,"CreatedAt":"2018-11-27T01:28:28","Actor":"iamnotblank","Number":"2500","RawContent":null,"Title":"Update documentation link address in README.md","State":"closed","Body":"Update documentation link address\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2500","RelatedDescription":"Closed or merged PR \"Update documentation link address in README.md\" (#2500)"},{"Id":"384248061","IsPullRequest":true,"CreatedAt":"2018-11-26T09:46:16","Actor":"suprabhasupi","Number":"2499","RawContent":null,"Title":"Adding name mode section in passing props to route component","State":"open","Body":"Fixes (#2493)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2499","RelatedDescription":"Open PR \"Adding name mode section in passing props to route component\" (#2499)"},{"Id":"383889554","IsPullRequest":false,"CreatedAt":"2018-11-25T13:11:54","Actor":"ThomasFerro","Number":"2495","RawContent":null,"Title":"Current route's query unaccessible on the App's created hook when using lazy loaded routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7mmqoqz18j](https://codesandbox.io/s/7mmqoqz18j)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Start a new vue-cli 3 project with vue-router\r\n- In the App.vue component, add this created hook :\r\n\r\n```\r\ncreated() {\r\n  console.log('created', this.$route.query, this.$route.query && this.$route.query.test);\r\n},\r\n```\r\n\r\n- Run the application using the url `http://localhost:8080/#/about?tiers=tezst`\r\n\r\n### What is expected?\r\nThe query should be present in the `this.$route` object.\r\n\r\n### What is actually happening?\r\nIt is not.\r\n\r\n---\r\nSorry but I cannot get vue-router working on the online IDEs.\r\n\r\nI think this is due to the lazy loading because it does works however when calling the home page `http://localhost:8080/#/?tiers=tezst`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2495","RelatedDescription":"Closed issue \"Current route's query unaccessible on the App's created hook when using lazy loaded routes\" (#2495)"},{"Id":"384054108","IsPullRequest":true,"CreatedAt":"2018-11-25T07:03:42","Actor":"beary","Number":"2497","RawContent":null,"Title":"TypeScript: Expose a `Next` type","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nExpose a `Next` type for this usage:\r\n```typescript\r\n// ...\r\nimport { Route, Next } from 'vue-router'\r\n\r\n@Component\r\nexport default class Verify extends Vue {\r\n  // ...\r\n  private beforeRouteEnter(to: Route, from: Route, next: Next) {\r\n    next(vm => {\r\n      vm.$data.username = decodeURIComponent(to.query.username || '')\r\n    })\r\n  }\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/pull/2497","RelatedDescription":"Open PR \"TypeScript: Expose a `Next` type\" (#2497)"},{"Id":"383938703","IsPullRequest":false,"CreatedAt":"2018-11-23T23:52:14","Actor":"Livog","Number":"2496","RawContent":null,"Title":"Catch all routes gives error: Expected \"0\" to be defined","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/y22y9m738v](https://codesandbox.io/s/y22y9m738v)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHello!\r\n\r\nI use nuxt.js with this folder structure.\r\n```\r\n| - pages\r\n|____ _.vue\r\n|__ order\r\n|____ _id.vue\r\n|__coach\r\n|____ _slug.vue\r\n```\r\n\r\nWhich generates:\r\n```\r\nroutes: [{\r\n      path: \"/coach/:slug?\",\r\n      component: _53d49874,\r\n      name: \"coach-slug\"\r\n    }, {\r\n      path: \"/order/:id?\",\r\n      component: _0fe25cac,\r\n      name: \"order-id\"\r\n    }, {\r\n      path: \"/*\",\r\n      component: _4a6e1890,\r\n      name: \"all\"\r\n    }],\r\n```\r\nand it gives me this error:\r\n```\r\n[nuxt] Error while initializing app TypeError: Expected \"0\" to be defined\r\n    at app.js:3259\r\n    at app.js:1391\r\n    at Array.map (<anonymous>)\r\n    at _callee5$ (app.js:1390)\r\n    at tryCatch (commons.app.js:5425)\r\n    at Generator.invoke [as _invoke] (commons.app.js:5659)\r\n    at Generator.prototype.(:3000/anonymous function) [as next] (http://localhost:3000/_nuxt/commons.app.js:5477:21)\r\n    at asyncGeneratorStep (commons.app.js:12)\r\n    at _next (commons.app.js:34)\r\n```\r\n\r\nThis does not happen in vue-router@3.0.1.\r\nRolling back with adding this to the package.json solves it for now (if anyone want a solution.)\r\n```\r\n\"resolutions\": {\r\n    \"vue-router\": \"3.0.1\"\r\n  },\r\n```\r\n\r\nThis error is caused because I have a catch all / fallback route. I have tested in multiple Node versions and Nuxt version.\r\n\r\n### What is expected?\r\nCatch all routes working without error.\r\n\r\n### What is actually happening?\r\nCatch all routes give a error message.\r\n\r\n---\r\nRelated: https://github.com/vuejs/vue-router/issues/724\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2496","RelatedDescription":"Closed issue \"Catch all routes gives error: Expected \"0\" to be defined\" (#2496)"},{"Id":"383720308","IsPullRequest":false,"CreatedAt":"2018-11-23T07:06:21","Actor":"indextg","Number":"2494","RawContent":null,"Title":"this.$router.push(\"path\")","State":"closed","Body":"i use this in two level router，but my one level router router-link-exact-active router-link-active disappeared...why?\r\n","Url":"https://github.com/vuejs/vue-router/issues/2494","RelatedDescription":"Closed issue \"this.$router.push(\"path\")\" (#2494)"},{"Id":"383604769","IsPullRequest":false,"CreatedAt":"2018-11-22T16:36:47","Actor":"tesla3327","Number":"2493","RawContent":null,"Title":"[DOCS] Clearer usage of prop functions with named views","State":"open","Body":"### What problem does this feature solve?\r\nI spent a few hours this morning trying to get prop functions with named views to work.\r\n\r\nAt first I thought that `props` itself was supposed to be a function that returned an object for all named views:\r\n```js\r\nconst routes = [\r\n  {\r\n    path: '/organizations/:id/insights/:widget',\r\n    components: {\r\n      default: SeeMore,\r\n      filter: Filter,\r\n      actionBar: ActionBarBack,\r\n    },\r\n    props: route => ({\r\n      actionBar: {  \r\n        name: route.params.widget,\r\n      },\r\n      filter: {\r\n        hideAutocomplete: true,\r\n      }\r\n    }),\r\n  },\r\n]\r\n```\r\n\r\nAfter reading and stepping through the `vue-router` code, I eventually figured out the correct implementation is:\r\n```js\r\nconst routes = [\r\n  {\r\n    path: '/organizations/:id/insights/:widget',\r\n    components: {\r\n      default: SeeMore,\r\n      filter: Filter,\r\n      actionBar: ActionBarBack,\r\n    },\r\n    props: {\r\n      actionBar: route => ({  \r\n        name: route.params.widget,\r\n      }),\r\n      filter: {\r\n        hideAutocomplete: true,\r\n      }\r\n    },\r\n  },\r\n]\r\n```\r\n\r\nThe docs are not very clear (at least to me) that this is the correct implementation. Not sure if others have had this problem, or if it's just me 🤷‍♂️\r\n\r\n### What does the proposed API look like?\r\nMy suggestion is to add a section to `Passing Props to Route Components` that explains how to use this with `Named Views`, along with an example.\r\n\r\nCould also add a link to this section in the `Named Views` section of the docs.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2493","RelatedDescription":"Open issue \"[DOCS] Clearer usage of prop functions with named views\" (#2493)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"388075586","IsPullRequest":true,"CreatedAt":"2018-12-06T06:34:01","Actor":"Jinjiang","Number":"1465","RawContent":null,"Title":"docs: fixed links to vm.$watch","State":"open","Body":"In [\"API Reference\" > \"Vuex.Store Instance Methods\" > \"watch\"](https://vuex.vuejs.org/api/#watch) section of the `en` docs, there is a link of \"Vue's `vm.$watch` method\" but linked to `watch` options. It should be https://vuejs.org/v2/api/#vm-watch if I don't misunderstand it.\r\n\r\nI also fixed the `zh` docs. And the `ru` docs seems right. but other language docs seems not same to the latest `en` version. So I am not sure whether should be updated too.\r\n\r\nThanks.\r\n","Url":"https://github.com/vuejs/vuex/pull/1465","RelatedDescription":"Open PR \"docs: fixed links to vm.$watch\" (#1465)"},{"Id":"387770827","IsPullRequest":false,"CreatedAt":"2018-12-05T14:02:45","Actor":"alexeigs","Number":"1464","RawContent":null,"Title":"Using typescript, I cannot access imported store in router.ts","State":"closed","Body":"vue-cli 3.0 setup incl. Typescript\r\n\r\nI try to access a getter through the store property from inside my _router.ts_ which doesn't find anything and results in `undefined`. The imported `store` object doesn't work. Using the debugger, the reference to the store object at this point in time is something like `_store_index__WEBPACK_IMPORTED_MODULE_5__` instead (going down the tree, I can find my getters under `_store_index__WEBPACK_IMPORTED_MODULE_5__.default.getters`).\r\n\r\n_store.ts_\r\n```\r\nimport Vue from 'vue'\r\nimport Vuex, { StoreOptions } from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store: StoreOptions<RootState> = {\r\n    state: {\r\n        version: '1.0.0' // a simple property\r\n    },\r\n    modules: {\r\n        authModule\r\n    }\r\n}\r\n\r\nexport default new Vuex.Store<RootState>(store)\r\n\r\nexport interface RootState {\r\n    version: string\r\n}\r\n\r\n```\r\n\r\n_router.ts_\r\n```\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport store from '@/store/index'\r\n\r\nconst router = new Router({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    routes: [{}]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    if (store.getters.authModule.isUserLoggedIn) {\r\n        // continue\r\n    }\r\n}\r\n\r\n```\r\n\r\nAny idea what's wrong and how I could access the getters instead?","Url":"https://github.com/vuejs/vuex/issues/1464","RelatedDescription":"Closed issue \"Using typescript, I cannot access imported store in router.ts\" (#1464)"},{"Id":"382477598","IsPullRequest":false,"CreatedAt":"2018-12-02T06:12:45","Actor":"dinglittle","Number":"1452","RawContent":null,"Title":"mapGetters 辅助函数，将一个 getter 属性另取一个名字","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/zh/guide/getters.html](https://vuex.vuejs.org/zh/guide/getters.html)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nVuex 官方 [链接所示](https://vuex.vuejs.org/zh/guide/getters.html)  mapGetters 辅助函数，将一个 getter 属性另取一个名字 ， 示例代码\r\n\r\n\r\n### What is expected?\r\n\r\n```\r\nmapGetters({\r\n  // 把 `this.doneCount` 映射为 `this.$store.getters.doneTodosCount`\r\n  doneCount: 'doneTodosCount'\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n修正\r\n\r\n```\r\n...mapGetters({\r\n  // 把 `this.doneCount` 映射为 `this.$store.getters.doneTodosCount`\r\n  doneCount: 'doneTodosCount'\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1452","RelatedDescription":"Closed issue \"mapGetters 辅助函数，将一个 getter 属性另取一个名字\" (#1452)"},{"Id":"385345295","IsPullRequest":false,"CreatedAt":"2018-12-02T05:37:58","Actor":"guywithdoubts","Number":"1462","RawContent":null,"Title":"Separate instances of Vuex store clash each other when working across separate Vue instances","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9rLp5t4s/](https://jsfiddle.net/9rLp5t4s/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am currently learning/prototyping vue.js and vuex (using plain js, at the moment). I am trying to accomplish following:\r\n\r\n1)create multiple vue instances having their own vuex stores independent to each other. Right now, I am storing only ajax status/progress in vuex store and improve it gradually.\r\n2)vue instances can come from same vue definition (template, methods etc.), but need to work with different vuex store instances.\r\n3)vuex stores should not know about each other (no clashes) and should only work exclusively with their respective vue instance counter parts.\r\n\r\nI almost achieved the above as shown in fiddle:\r\n\r\nTheoritically, we can just create one class out of app.js and app2.js (identical code). But, just to test/troubleshoot things, I separated them.\r\n\r\nI am able to pull data and everything seems working fine.   If I refresh button in second instance the console log shows perfectly.  If I refresh button in first instance it clashes with the vuex store in second instance\r\n\r\n### What is expected?\r\nthe vue instance should not clash with other vuex stores not related to it\r\n\r\n### What is actually happening?\r\nfirst vue instance clashes with vuex store in second instance\r\n\r\n---\r\nmore information here: https://stackoverflow.com/questions/53522844/separate-instances-of-vuex-store-clash-each-other-when-working-across-separate-v\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1462","RelatedDescription":"Closed issue \"Separate instances of Vuex store clash each other when working across separate Vue instances\" (#1462)"},{"Id":"385338921","IsPullRequest":false,"CreatedAt":"2018-12-02T05:18:39","Actor":"farzadmf","Number":"1461","RawContent":null,"Title":"Actions not recognized when using ActionTree","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/farzadmf/vuex-action-tree-issue](https://github.com/farzadmf/vuex-action-tree-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere's no need to run anything, just open the repo in VSCode, and you will see the error. I've added comments to make it clear\r\n\r\n### What is expected?\r\nWhen I create an `ActionTree<...>`, I should be able to call my individual Actions on it\r\n\r\n### What is actually happening?\r\nWhen I type my actions to be of type `ActionTree<...>`, then when I call my action(s), I see the error of \"no compatible call signatures\"\r\n\r\n---\r\nI've created constants to be used as names for my actions (so that I don't use strings). At first, I though that is what's causing the problem; that's why I created the 'hello()' function to test, and it seems to me the constants are not an issue here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1461","RelatedDescription":"Closed issue \"Actions not recognized when using ActionTree\" (#1461)"},{"Id":"385534522","IsPullRequest":false,"CreatedAt":"2018-11-29T01:57:43","Actor":"leoyli","Number":"1463","RawContent":null,"Title":"silent and ignore any dispatch or commit during time-traveling in the dev mode","State":"open","Body":"### What problem does this feature solve?\r\nIMO, time-traveling (or traversing in the event sourcing record) should have no side-effects.  Often, I found it is annoying when I \"time-traveled\", there is a side-effect being performed due to the component life cycle or routing middleware try to do their \"regular\" task... this resulted in a polluted mutation records... Consider the fact that some component can be delayed rendered by `v-if=state` (so components may be mounted/unmounted during time-traveling), the same may also happen if the one uses `@vue/vuex-router-sync`, this feature is good to have.\r\n\r\n### What does the proposed API look like?\r\nWhen we click \"time travel to the state\" in the dev tool, Vuex internally have a mechanism to silent and ignore any dispatch or commit to be performed (or prevent state to be mutated during time-traveling).  This locking mechanism can be unlocked if we decide to either **revert** or **traverse** to the latest state (they are basically the same).  While I have little clue how we are going to implement this or should we have this, after discussed with my colleagues, I think it would be beneficial to open this discussion.\r\n\r\n** the reason I post this here is due to the fact that the devTool have to touch the vuex core if we want to have this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1463","RelatedDescription":"Open issue \"silent and ignore any dispatch or commit during time-traveling in the dev mode\" (#1463)"},{"Id":"384820659","IsPullRequest":true,"CreatedAt":"2018-11-28T02:21:24","Actor":"jshindo-gladd","Number":"1460","RawContent":null,"Title":"docs(ja): fix translation","State":"closed","Body":"- Fixed description of `fn`'s arguments.\r\n- Tweaked 1st sentence.\r\n\r\nEnglish:\r\n> Reactively watch `fn`'s return value, and call the callback when the value changes. `fn` receives the store's state as the first argument, and getters as the second argument.","Url":"https://github.com/vuejs/vuex/pull/1460","RelatedDescription":"Closed or merged PR \"docs(ja): fix translation\" (#1460)"},{"Id":"384599520","IsPullRequest":false,"CreatedAt":"2018-11-27T03:03:39","Actor":"JaeYeopHan","Number":"1459","RawContent":null,"Title":"Suggestion to Vuex best practice when using nested modules","State":"open","Body":"### What problem does this feature solve?\r\nIMHO, there are several problems with Vuex.\r\n\r\n1. Overuse string when using `mapState`, `mapGetters`, `mapActions`\r\n2. Duplicated namespace in components\r\n\r\nlike this:\r\n_my-component.vue_ (AS-IS version)\r\n\r\n```js\r\nexport default {\r\n  computed: {\r\n    ...mapState(\"todos\", {\r\n      allItems: ({ items }) => items,\r\n    }),\r\n    ...mapGetters(\"todos\", {\r\n      doneItems: \"doneItems\",\r\n      activeItems: \"activeItems\",\r\n    }),\r\n  }\r\n}\r\n```\r\n\r\nIn this code, `\"doneItmes\"` is written by string. It will cause bug easily.\r\nAnd there are duplicated namespace called `\"todos\"`. It will inhibit maintainabillity.\r\n\r\n### What does the proposed API look like?\r\nThe way to introduce it is not to suggest a new API, but to use the existing API properly.\r\nWe can use `createNamespacedHelpers` API with constants in store directory!\r\n\r\n### Example\r\n\r\n_@/store/todos/types.js_\r\n\r\n```js\r\nexport const NAMESPACE = \"todos\";\r\n```\r\n\r\n_@/store/todos/index.js_\r\n\r\n```js\r\nimport { createNamespacedHelpers } from\"vuex\";\r\nimport { NAMESPACE } from \"./types\";\r\n\r\n// Key point !\r\nconst { mapState, mapGetters, mapActions } = createNamespacedHelpers(NAMESPACE);\r\n\r\nexport { mapState, mapGetters, mapActions };\r\n\r\nexport default { /* namespaced, state, getters, mutations, actions */ }\r\n```\r\n\r\n_@/store/todos/getters.js_\r\n\r\n```js\r\n// Key point !\r\nexport const DONE_ITEMS = \"DONE_ITEMS\";\r\nexport const ACTIVE_ITEMS = \"ACTIVE_ITEMS\";\r\n\r\nexport default {\r\n  [DONE_ITEMS]: state => state.items.filter(todo => todo.isDone),\r\n  [ACTIVE_ITEMS]: state => state.items.filter(todo => !todo.isDone)\r\n};\r\n```\r\n\r\nIf we do this, we can use customized binding helpers.\r\n\r\n_my-component.vue_ (TO-BE version)\r\n\r\n```js\r\nimport * as todos from '@/store/todos'; // Key point !\r\nimport * as getters from '@/store/todos/getters'; // Key point !\r\nimport * as actions from '@/store/todos/types'; // Key point !\r\n\r\nexport default {\r\n  computed: {\r\n    ...todos.mapState({\r\n      allItems: ({ items }) => items,\r\n    }),\r\n    ...todos.mapGetters([\r\n      getters.DONE_ITEMS,\r\n      getters.ACTIVE_ITEMS,\r\n    ])\r\n  },\r\n  methods: {\r\n    ...todos.mapActions([\r\n      actions.ADD_ITEM,\r\n    ]),\r\n  }\r\n}\r\n```\r\n\r\nHow about this? If you do not mind this, I would like to post it on the official Vuex document.\r\nYou can see the all example code in [this repository](https://github.com/JaeYeopHan/vuex-best-practice-lab)\r\n\r\nThanks!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1459","RelatedDescription":"Open issue \"Suggestion to Vuex best practice when using nested modules\" (#1459)"},{"Id":"382483849","IsPullRequest":true,"CreatedAt":"2018-11-27T01:30:46","Actor":"Jinjiang","Number":"1453","RawContent":null,"Title":"docs: replaced video preview code to a VideoPreview component","State":"closed","Body":"... for better maintenance and translation.\r\nRef: https://v0.vuepress.vuejs.org/guide/using-vue.html#using-components\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1453","RelatedDescription":"Closed or merged PR \"docs: replaced video preview code to a VideoPreview component\" (#1453)"},{"Id":"383775059","IsPullRequest":true,"CreatedAt":"2018-11-26T03:24:41","Actor":"Flamenco","Number":"1457","RawContent":null,"Title":"Fix typo and update tense","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1457","RelatedDescription":"Closed or merged PR \"Fix typo and update tense\" (#1457)"},{"Id":"382484140","IsPullRequest":true,"CreatedAt":"2018-11-26T03:15:09","Actor":"Jinjiang","Number":"1454","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/f64a89c...4b82bb2\r\n/ping @justineo\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1454","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1454)"},{"Id":"380798629","IsPullRequest":true,"CreatedAt":"2018-11-26T03:04:15","Actor":"pvrsouza","Number":"1449","RawContent":null,"Title":"removing English text from pt-br file","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1449","RelatedDescription":"Closed or merged PR \"removing English text from pt-br file\" (#1449)"},{"Id":"384145966","IsPullRequest":false,"CreatedAt":"2018-11-26T01:51:52","Actor":"mrbuds","Number":"1458","RawContent":null,"Title":"Vuex website: Homepage video doesn't load right with firefox nightly","State":"closed","Body":"When clicking on the video of https://vuex.vuejs.org/ home page with firefox nightly (on windows) the javascript doesn't load like it should.\r\n\r\n![preview](https://i.imgur.com/OCbS5ju.png)\r\n\r\nTested with all addons disabled and after restarting it.\r\n\r\nIt's fine with chrome.","Url":"https://github.com/vuejs/vuex/issues/1458","RelatedDescription":"Closed issue \"Vuex website: Homepage video doesn't load right with firefox nightly\" (#1458)"},{"Id":"382592306","IsPullRequest":true,"CreatedAt":"2018-11-20T10:18:29","Actor":"isnifer","Number":"1456","RawContent":null,"Title":"Return original Action Promise instead of pipe after \"catch\" when registerAction","State":"open","Body":"Hello everyone!\r\n\r\n## Prerequisites\r\nIn my project, I do not use just a promise to do actions.\r\nSimplified version looks like this:\r\n```js\r\nclass CustomPromise {\r\n  constructor({ promise }) {\r\n    this.promise = promise.then(this.handleSuccess, this.handleError)\r\n  }\r\n\r\n  handleSuccess = () => {\r\n    // ...\r\n  }\r\n\r\n  handleError = () => {\r\n    // ...\r\n  }\r\n\r\n  handleCancel = () => {\r\n    // ...\r\n  }\r\n\r\n  then = (success, error) => this.promise.then(success, error)\r\n\r\n  catch = error => this.promise.catch(error)\r\n}\r\n```\r\nWhen I wanted to explicitly work with my action promise I found that I got only PromiseValue instead of my `CustomPromise`.\r\nI had a `vue extenstion` for Chrome (yes, I removed it to test and verify a bug).\r\n\r\n## Finally\r\n[This line](https://github.com/vuejs/vuex/blob/dev/src/store.js#L415) creates a promise chain that not only subscribes to `catch`. This line provides only promise value/error to userland code instead of an original promise.\r\n\r\n## How to fix?\r\nDeveloper tools may be a useful tool, but `Vuex` should not change itself behavior when Devtools are available.\r\nThis `catch` should **ONLY** subscribes to errors (creates a parallel pipe and **DO NOT THROW** an error inside).\r\nA userland code also will catch an error.\r\n","Url":"https://github.com/vuejs/vuex/pull/1456","RelatedDescription":"Open PR \"Return original Action Promise instead of pipe after \"catch\" when registerAction\" (#1456)"},{"Id":"382540617","IsPullRequest":false,"CreatedAt":"2018-11-20T07:53:56","Actor":"eltonchan","Number":"1455","RawContent":null,"Title":"Can I ask a question?","State":"closed","Body":"This is not a Issues, But it has been bothering me.\r\nwhy vuex  don't use mixin data, Choose new Vue ?\r\n","Url":"https://github.com/vuejs/vuex/issues/1455","RelatedDescription":"Closed issue \"Can I ask a question?\" (#1455)"},{"Id":"382201955","IsPullRequest":false,"CreatedAt":"2018-11-19T12:54:39","Actor":"hqzh","Number":"1451","RawContent":null,"Title":"使用mapState 辅助函数绑定表单v-model","State":"open","Body":"### What problem does this feature solve?\r\n看见文档说input表单输入绑定可以, 或者通过表单的change事件commit也可以\r\n```javascript\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.obj.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  }\r\n},\r\n```\r\n\r\n但是使用使用mapState 辅助函数没有看到有暴露set和get,\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  // ...\r\n  computed: mapState({\r\n    message: state => {\r\n       get() {\r\n          \r\n        },\r\n        set(value) {\r\n         \r\n        }\r\n   }\r\n  })\r\n}\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1451","RelatedDescription":"Open issue \"使用mapState 辅助函数绑定表单v-model\" (#1451)"},{"Id":"381739958","IsPullRequest":false,"CreatedAt":"2018-11-16T19:59:44","Actor":"toymachiner62","Number":"1450","RawContent":null,"Title":"Update documentation for $watch with an example","State":"open","Body":"### What problem does this feature solve?\r\nThe documentation for $watch is pretty unclear how to use without an example https://vuex.vuejs.org/api/#watch\r\n\r\nI figured out how to use it from this comment in the forums https://forum.vuejs.org/t/correct-way-to-use-store-watch-in-vuex/1800/6\r\n\r\n### What does the proposed API look like?\r\nThe documentation will have an example similar to https://forum.vuejs.org/t/correct-way-to-use-store-watch-in-vuex/1800/6\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1450","RelatedDescription":"Open issue \"Update documentation for $watch with an example\" (#1450)"},{"Id":"380635432","IsPullRequest":false,"CreatedAt":"2018-11-14T10:36:22","Actor":"Danilo-Araujo-Silva","Number":"1448","RawContent":null,"Title":"Possibility to log all state changes (not only actions or mutations)","State":"open","Body":"### What problem does this feature solve?\r\nWith these [built-in logger plugin](https://vuex.vuejs.org/guide/plugins.html#built-in-logger-plugin) we are able to subscribe to our store and log all state mutations.\r\n\r\nBut, it looks like, for now, we are not able to log all state changes other than mutations or actions. What does it mean? For example, if we are controlling the state of the application drawer (like this [one](https://vuetifyjs.com/en/components/navigation-drawers#example-dark) on the Vuetify project or more specifically some inline editing actions in the data table component) and we would like to connect (even mapping) the store state directly in the component we will not be able to log the mutations there, since there's no mutation action involved.\r\n\r\nMaybe we could use events to try to accomplish that but I'll be far more difficult.\r\n\r\nI think it could be very good for us we have the possibility to log state changes that are not triggered by mutations and actions too.\r\n\r\n### What does the proposed API look like?\r\n```\r\nconst myPlugin = store => {\r\n  // called when the store is initialized\r\n  store.subscribe((state, mutation, action) => {\r\n    // called after every state change and not only on mutations.\r\n    // The mutation comes in the format of `{ type, payload }`.\r\n  })\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1448","RelatedDescription":"Open issue \"Possibility to log all state changes (not only actions or mutations)\" (#1448)"},{"Id":"380547836","IsPullRequest":true,"CreatedAt":"2018-11-14T06:11:01","Actor":"chrisvfritz","Number":"1447","RawContent":null,"Title":"Add 5-minute video to What is Vuex?","State":"closed","Body":"Since a lot of people have a difficult time understanding Vuex at first, we collaborated with the Vue Mastery team on this short video. I think it will provide a much gentler onboarding experience. 🙂","Url":"https://github.com/vuejs/vuex/pull/1447","RelatedDescription":"Closed or merged PR \"Add 5-minute video to What is Vuex?\" (#1447)"},{"Id":"380333486","IsPullRequest":false,"CreatedAt":"2018-11-13T17:15:14","Actor":"lyz1991","Number":"1446","RawContent":null,"Title":"About unregisterModule ","State":"closed","Body":"my version of vuex is 3.0.1 and project is ssr\r\nwhen I call unregisterModule the api in beforeRouteLeave like this:\r\n<img width=\"316\" alt=\"wechatimg14\" src=\"https://user-images.githubusercontent.com/15042461/48430087-739da280-e7a9-11e8-8fee-1e3111ff816e.png\">\r\nIt throw a error like this：\r\n<img width=\"497\" alt=\"wechatimg15\" src=\"https://user-images.githubusercontent.com/15042461/48430384-2bcb4b00-e7aa-11e8-9da3-8ae7f8750f5d.png\">\r\nand I debug find that \r\n<img width=\"544\" alt=\"wechatimg16\" src=\"https://user-images.githubusercontent.com/15042461/48430528-7ea50280-e7aa-11e8-9a03-3180c2d4c42f.png\">\r\nthere path is [], how can I deal with?\r\nAnd if I not use this api  how can I check a module it is installed \r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1446","RelatedDescription":"Closed issue \"About unregisterModule \" (#1446)"},{"Id":"379882149","IsPullRequest":true,"CreatedAt":"2018-11-13T03:05:38","Actor":"Alex-Sokolov","Number":"1445","RawContent":null,"Title":"[RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1445","RelatedDescription":"Closed or merged PR \"[RU] Translation update\" (#1445)"},{"Id":"379720373","IsPullRequest":true,"CreatedAt":"2018-11-13T03:03:50","Actor":"talentedunicorn","Number":"1444","RawContent":null,"Title":"Added copy to clarify context","State":"closed","Body":"Although it is mentioned further down the document; I think this line will make it more clear especially for newcomers of vuex. I see similar questions regarding this like https://stackoverflow.com/questions/45848974/call-an-action-from-within-another-action","Url":"https://github.com/vuejs/vuex/pull/1444","RelatedDescription":"Closed or merged PR \"Added copy to clarify context\" (#1444)"},{"Id":"379393333","IsPullRequest":false,"CreatedAt":"2018-11-10T05:42:26","Actor":"miracle9312","Number":"1443","RawContent":null,"Title":"arrow function style advice","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1443","RelatedDescription":"Closed issue \"arrow function style advice\" (#1443)"},{"Id":"378041385","IsPullRequest":true,"CreatedAt":"2018-11-07T17:04:56","Actor":"dcrall","Number":"1442","RawContent":null,"Title":"Eliminate extra word","State":"closed","Body":"\"You can ~do~ achieve this\" -> \"You can achieve this\"","Url":"https://github.com/vuejs/vuex/pull/1442","RelatedDescription":"Closed or merged PR \"Eliminate extra word\" (#1442)"},{"Id":"377128473","IsPullRequest":true,"CreatedAt":"2018-11-07T09:30:48","Actor":"tuanlc","Number":"1439","RawContent":null,"Title":"Makes the document more stable by removing stage-x for object separate syntax while it can be changed in the future","State":"closed","Body":"The stage of [object spread syntax](https://github.com/sebmarkbage/ecmascript-rest-spread) has been changed to 4","Url":"https://github.com/vuejs/vuex/pull/1439","RelatedDescription":"Closed or merged PR \"Makes the document more stable by removing stage-x for object separate syntax while it can be changed in the future\" (#1439)"},{"Id":"377341115","IsPullRequest":true,"CreatedAt":"2018-11-05T14:20:56","Actor":"d62remi","Number":"1441","RawContent":null,"Title":"[Docs] [FR] Fix typo in config.js","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1441","RelatedDescription":"Closed or merged PR \"[Docs] [FR] Fix typo in config.js\" (#1441)"},{"Id":"377255419","IsPullRequest":false,"CreatedAt":"2018-11-05T05:27:42","Actor":"fxxjdedd","Number":"1440","RawContent":null,"Title":"Provide action's type in store.subscribe","State":"open","Body":"### What problem does this feature solve?\r\nOne mutation might be commited by serveral actions, sometimes, I need the action's type which commited the mutation when writing a vuex plugin. For example:\r\n\r\n**A plugin that can maintain an state to monitor the asynchronous state of each action.**\r\n\r\nWithout the provided action's type,  the only way I can think of is that each action corresponds to a unique mutaion.\r\n\r\nBy the way, I know the subscribeAction method, but it can't help, because I need both mutation's type and action's type.\r\n\r\nthx!\r\n\r\n\r\n\r\n\r\n \r\n\r\n### What does the proposed API look like?\r\n```\r\nstore.subscribe((mutation,  state,  type) => {\r\n  // mutation's type is 'mutation.type'\r\n  // action's type is 'type'\r\n\r\n  // I need these two types both.\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1440","RelatedDescription":"Open issue \"Provide action's type in store.subscribe\" (#1440)"},{"Id":"376875689","IsPullRequest":true,"CreatedAt":"2018-11-02T16:13:37","Actor":"cngu","Number":"1438","RawContent":null,"Title":"Prevent invalidating subscription iterator ","State":"open","Body":"This change shallow copies `_subscribers` before iterating over it, in-case one of the subscription listeners attempts to unsubscribe synchronously and invalidate the iterator.","Url":"https://github.com/vuejs/vuex/pull/1438","RelatedDescription":"Open PR \"Prevent invalidating subscription iterator \" (#1438)"},{"Id":"376706036","IsPullRequest":false,"CreatedAt":"2018-11-02T08:03:16","Actor":"adjenks","Number":"1437","RawContent":null,"Title":"Return values from mutation commits.","State":"open","Body":"### What problem does this feature solve?\r\nOne often wants to get the id of a created object back from the data store. Much like in a database, if you add an object to an array in the store, you want to get it's id so that you can reference it again. When looking up how to do this, I found that you cannot, and I also found that someone else had the exact same inquiry on stackoverflow: https://stackoverflow.com/questions/42404925/return-value-from-vuex-mutation-id-for-newly-created-object#42406872\r\nThe response to the question on stack overflow was to use vuex actions, but I don't think that one should have to use an asynchronous action to achieve a synchronous task.\r\nTo carry on with the database example, one might use postgresql's \"RETURNING\" as an analogy. One can perform an insert statement and then say RETURNING thing_id to get the automatically generated id, or whatever other fields they would like.\r\n\r\n### What does the proposed API look like?\r\n```\r\nlet myReturn = this.$store.commit('ADD_THING\",{\"name\":\"new_thing\"});\r\n// 'ADD_THING' adds a thing to an numerically indexed object and then returns the number.\r\nconsole.log(myReturn); // {\"id\":42,\"datestamp\":1541145883085}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1437","RelatedDescription":"Open issue \"Return values from mutation commits.\" (#1437)"},{"Id":"374737191","IsPullRequest":false,"CreatedAt":"2018-10-28T10:04:56","Actor":"Alendorff","Number":"1436","RawContent":null,"Title":"Getters stop to work in routes under keep-alive after registerModule call","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Alendorff/vue-vuex-getters-bug](https://github.com/Alendorff/vue-vuex-getters-bug)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* You have vuex store with static module\r\n* You need to register a new vuex module on vue-router beforeEnter hook\r\n* Your `router-view` is under `keep-alive`\r\n* Your components related to different routes have getters mapped to static module\r\n* Bug: when you enter route which should register new vuex module, getters from static module become broken.\r\nReactivity doesn't work - components with mapped getters do not receive updates.\r\n\r\n### What is expected?\r\nGetters should work\r\n\r\n### What is actually happening?\r\nGetters reactivity is broken. Components have stale getters values.\r\n\r\n---\r\n```\r\n \"dependencies\": {\r\n    \"vue\": \"2.5.17-beta.0\",\r\n    \"vue-router\": \"^3.0.1\",\r\n    \"vuex\": \"^3.0.1\"\r\n  }\r\n```\r\n\r\nWindows 10, Chrome Version 69.0.3497.100 (Official Build) (64-bit)\r\n\r\nP.S. Not really sure if I should put this issue into the vuex repository, so pls tell me if there are better place for it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1436","RelatedDescription":"Open issue \"Getters stop to work in routes under keep-alive after registerModule call\" (#1436)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-12-07T05:31:03.2401468Z","RunDurationInMilliseconds":3724}