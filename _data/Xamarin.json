{"Data":{"Blog":{"FeedItems":[{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7614109858","Type":"IssuesEvent","CreatedAt":"2018-05-02T00:41:58","Actor":"andre-ss6","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1625","RelatedDescription":"Opened issue \"Support ConstraintLayout in the VS Designer\" (#1625) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new project\r\n2. Change the Main view to use ConstraintLayout\r\n3. Switch to the designer\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nI can use the designer as usual, with drag&drop and etc.\r\n\r\n### Actual Behavior\r\n\r\nOne of those three, depending on Xamarin's mood:\r\n\r\n1. A mock view labeled \"ConstraintLayout\"\r\n2. A red screen\r\n3. A correctly rendered view, but unable to be edited (unable to use drag&drop)\r\n\r\n### Version Information\r\nVisual Studio 2017, Xamarin 8.1, Xamarin.Android.Support.Constraint.Layout 1.1.0 Nuget package"},{"Id":"7614049103","Type":"IssuesEvent","CreatedAt":"2018-05-02T00:17:57","Actor":"lin-zy1229","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1624","RelatedDescription":"Opened issue \"Why different between byte arrays' hashcode in arguments of AddCallbackBuffer(byte[]) and OnPreviewFrame(byte[], Camera)\" (#1624) at xamarin/xamarin-android","RelatedBody":"Xamarin Android Code:\r\n```\r\n...\r\n    _camera.AddCallbackBuffer(p0);\r\n    Log.Debug(\"--debug--\", \"OnTest---\" + p0.GetHashCode() + \"---\");\r\n...\r\npublic void OnPreviewFrame(byte[] data, Camera camera)\r\n{\r\n    Log.Debug(\"--debug--\", \"OnPreviewFrame---\" + data.GetHashCode() + \"---\");\r\n}\r\n```\r\nOutput is:\r\n05-01 09:41:12.378 D/--debug--(13035): OnTest---751746006---\r\n05-01 09:41:12.379 D/--debug--(13035): OnTest---17341743---\r\n05-01 09:41:12.386 D/--debug--(13035): OnTest---152571734---\r\n05-01 09:41:12.404 D/--debug--(13035): OnTest---886975997---\r\n\r\n05-01 09:41:12.484 D/--debug--(13035): OnPreviewFrame---193544372---\r\n05-01 09:41:12.597 D/--debug--(13035): OnPreviewFrame---927948635---\r\n05-01 09:41:12.714 D/--debug--(13035): OnPreviewFrame---588611074---\r\n05-01 09:41:12.835 D/--debug--(13035): OnPreviewFrame---249273513---\r\n\r\nBut, they are same in Android native code.\r\n\r\nHope quick reply."},{"Id":"7613666462","Type":"PullRequestEvent","CreatedAt":"2018-05-01T22:09:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1623","RelatedDescription":"Merged pull request \"[codebehind] fix for FindLayoutsToBind on Windows\" (#1623) at xamarin/xamarin-android","RelatedBody":"Since ab3773cf, `Xamarin.Android-Tests.sln` hasn't been building on\r\nWindows, with the following errors:\r\n\r\n    \"Mono.Android-Tests.csproj\" (default target) (2) ->\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(19,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(23,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(27,4): error CS0103: The name 'my_scroll_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(29,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(33,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(37,4): error CS0103: The name 'csharp_simple_fragment' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(38,4): error CS0103: The name 'csharp_partial_assembly' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(39,4): error CS0103: The name 'csharp_full_assembly' does not exist in the current context\r\n\r\nChanging the build action of `Main.axml` to `AndroidBoundLayout` got\r\n`Mono.Android-Tests.csproj` building again. We shouldn't have to do this\r\nunless `$(AndroidGenerateLayoutBindings)` is set to `False`.\r\n\r\nLooking into it, the `Regex` did not appear to be matching files correctly on Windows:\r\n\r\n    static readonly char DirSeparator = Path.DirectorySeparatorChar == '\\\\' ? '\\\\' : '/';\r\n    static readonly Regex layoutPathRegex = new Regex ($\".*{DirSeparator}+layout(-?\\\\w+)*{DirSeparator}+.*\\\\.a?xml$\", RegexOptions.Compiled | RegexOptions.IgnoreCase);\r\n\r\nThe `Regex` needs to escape the `\\\\`, in order to match paths on Windows."},{"Id":"7613252288","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:32:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1610","RelatedDescription":"Merged pull request \"[tests] Report errors last in `RunApkTests` (Take 2!)\" (#1610) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/2963/testReport/\r\n\r\nA build for PR #1489 ran 1110 tests; it *should* have run over 35,000.\r\nWhere are the missing tests?\r\n\r\nWhat's missing are the `.apk` on-device tests; BCL tests make up\r\n*most* of our expected test count.\r\n\r\nAnalysis of the build log shows that the on-device tests *are*\r\nrunning, with test results being downloaded:\r\n\r\n\t…/android-toolchain/sdk/platform-tools/adb -s emulator-5570  pull \"/data/data/Xamarin.Android.Bcl_Tests/files/.__override__/TestResults.xUnit.xml\" \"…/xamarin-android/tests/../bin/TestDebug/TestResult-Xamarin.Android.Bcl_Tests.xunit.xml\"\r\n\t...\r\n\t/data/data/Xamarin.Android.Bcl_Tests/files/.__override__/TestResults.xUnit.xml: 1 file pulled. 53.5 MB/s (3273412 bytes in 0.058s)\r\n\r\nbut those results don't appear on the `testReport` URL.\r\n\r\nThe problem is that the `RenameApkTestCases` target is never being\r\nexecuted, and the `RenameApkTestCases` is responsible for copying the\r\n`TestResult*` files where Jenkins looks for them:\r\n\r\n\tDone building target \"ReleaseAndroidTarget\" in project \"RunApkTests.targets\" -- FAILED.:\r\n\r\nThe `RenameApkTestCases` target executes *after*\r\n`ReleaseAndroidTarget`, but because `ReleaseAndroidTarget` failed, the\r\n`RenameApkTestCases` target isn't executed.\r\n\r\nMeanwhile, `ReleaseAndroidTarget` reports an error to ensure that\r\nerrors aren't overlooked; see commit 3b893cd4.\r\n\r\nAllow the `RenameApkTestCases` target to execute by adding a new\r\n`ReportComponentFailures` target. The `ReleaseAndroidTarget` will no\r\nlonger report errors, allowing the `RenameApkTestCases` target to\r\nexecute, while if any tests *do* fail, the `ReportComponentFailures`\r\ntarget will generate an appropriate error.\r\n\r\nFurthermore, update all the `<MSBuild/>` invocations within\r\n`RunTests.targets` and add `ContinueOnError=\"ErrorAndContinue\"` to all\r\nof them, to help ensure that we run all the tests we have, even if\r\nprevious tests fail."},{"Id":"7613237022","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:29:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1622","RelatedDescription":"Merged pull request \"[docs] Update the LayoutCodeBehind documentation\" (#1622) at xamarin/xamarin-android","RelatedBody":"Update to contain more examples."},{"Id":"7613220312","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:25:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1619","RelatedDescription":"Merged pull request \"[build] Fix Linux `make package-oss`\" (#1619) at xamarin/xamarin-android","RelatedBody":"The [xamarin-android-linux][0] job has long been broken, and I had\r\nhoped that commit 3b904c20 would allow it to build once more.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/\r\n\r\nCommit 3b904c20 *does* appear to have improved matters; build times\r\nwent from ~1h to ~4h, so it was certainly building more. :-)\r\n\r\nUnfortunately, the build [fails within `make package-oss`][1]:\r\n\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/956/\r\n\r\n\tif [ ! -f xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2/ThirdPartyNotices.txt ] ; then \\\r\n\t\tcp -n  xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2 ; \\\r\n\tfi\r\n\tcp: missing destination file operand after 'xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2'\r\n\tTry 'cp --help' for more information.\r\n\tbuild-tools/scripts/Packaging.mk:27: recipe for target 'xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2.tar.bz2' failed\r\n\tmake: *** [xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2.tar.bz2] Error 1\r\n\r\nThis error doesn't make sense to me; the `cp -n` is in `Packaging.mk`:\r\n\r\n\tcp -n $(firstword $(wildcard bin/*/lib/xamarin.android/ThirdPartyNotices.txt)) $(ZIP_OUTPUT_BASENAME)\r\n\r\nApparently the `$(firstword $(wildcard ...))` construct is returning\r\nthe empty string, which (again) makes no sense to me because\r\n`bin/Debug/xamarin.android/ThirdPartyNotices.txt` *is* created, as per\r\ninvestigation of the Jenkins Workspace while a build is in-progress.\r\n\r\nAlso note that this is only happening on Linux; macOS executes this\r\nJust Fine™.\r\n\r\nIn the absense of actually understanding what's wrong and fixing the\r\nreal problem, instead print out some debug spew if the `cp` operation\r\n*would* fail -- because `$(firstword $(wildcard ...))` returns \"\" --\r\nand fallback to an attempted \"hardcoded\" `cp` operation.\r\n\r\nHopefully this will allow `make package-oss` to finish on Linux,\r\nallowing for a long-missing-and-desired \"non-red build\"."},{"Id":"7613141016","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:07:29","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1621","RelatedDescription":"Closed pull request \"[tests] changes to get test projects building again on Windows/monodroid\" (#1621) at xamarin/xamarin-android","RelatedBody":"Since ab3773cf, `Xamarin.Android-Tests.sln` hasn't been building on\r\nWindows, with the following errors:\r\n\r\n    \"Mono.Android-Tests.csproj\" (default target) (2) ->\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(19,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(23,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(27,4): error CS0103: The name 'my_scroll_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(29,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(33,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(37,4): error CS0103: The name 'csharp_simple_fragment' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(38,4): error CS0103: The name 'csharp_partial_assembly' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(39,4): error CS0103: The name 'csharp_full_assembly' does not exist in the current context\r\n\r\nLooking into it, there were several layout files that were not\r\nspecifying `AndroidBoundLayout` as the build action. Changing the build\r\naction of `Main.axml` got `Mono.Android-Tests.csproj` building again.\r\n\r\nUnfortunately, as I looked into `CodeBehindBuildTests.csproj`, many of\r\nthe situations where @grendello had setup conflicting types did not\r\ncompile. _For now_, it seems our best option is to resolve the conflicts\r\nto get things to compile again. Cases where one layout had `<Button />`\r\nand another had `<TextView />`, I just changed the layouts to use the\r\nsame type. When @grendello gets back, he can investigate and get these\r\ntests back to what they were trying to accomplish for testing.\r\n\r\nI am uncertain on how these projects were building on other platforms,\r\nbut similar build errors have cropped up upstream in `monodroid`:\r\n\r\n    /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/src/Mono.Android/Test/Xamarin.Android.RuntimeTests/MainActivity.cs\r\n        MainActivity.cs(17,36): error CS0117: 'Resource.Layout' does not contain a definition for 'Main'\r\n        MainActivity.cs(19,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        MainActivity.cs(23,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        MainActivity.cs(27,4): error CS0103: The name 'my_scroll_view' does not exist in the current context\r\n        MainActivity.cs(29,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        MainActivity.cs(33,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        MainActivity.cs(37,4): error CS0103: The name 'csharp_simple_fragment' does not exist in the current context\r\n        MainActivity.cs(38,4): error CS0103: The name 'csharp_partial_assembly' does not exist in the current context\r\n        MainActivity.cs(39,4): error CS0103: The name 'csharp_full_assembly' does not exist in the current context\r\n\r\nI'm hoping this PR will fix Windows builds and builds upstream in\r\n`monodroid`."},{"Id":"7613137878","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:06:44","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1623","RelatedDescription":"Opened pull request \"[codebehind] fix for FindLayoutsToBind on Windows\" (#1623) at xamarin/xamarin-android","RelatedBody":"Since ab3773cf, `Xamarin.Android-Tests.sln` hasn't been building on\r\nWindows, with the following errors:\r\n\r\n    \"Mono.Android-Tests.csproj\" (default target) (2) ->\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(19,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(23,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(27,4): error CS0103: The name 'my_scroll_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(29,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(33,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(37,4): error CS0103: The name 'csharp_simple_fragment' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(38,4): error CS0103: The name 'csharp_partial_assembly' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(39,4): error CS0103: The name 'csharp_full_assembly' does not exist in the current context\r\n\r\nChanging the build action of `Main.axml` to `AndroidBoundLayout` got\r\n`Mono.Android-Tests.csproj` building again. We shouldn't have to do this\r\nunless `$(AndroidGenerateLayoutBindings)` is set to `False`.\r\n\r\nLooking into it, the `Regex` did not appear to be matching files correctly on Windows:\r\n\r\n    static readonly char DirSeparator = Path.DirectorySeparatorChar == '\\\\' ? '\\\\' : '/';\r\n    static readonly Regex layoutPathRegex = new Regex ($\".*{DirSeparator}+layout(-?\\\\w+)*{DirSeparator}+.*\\\\.a?xml$\", RegexOptions.Compiled | RegexOptions.IgnoreCase);\r\n\r\nThe `Regex` needs to escape the `\\\\`, in order to match paths on Windows."},{"Id":"7612890250","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:10:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1622","RelatedDescription":"Opened pull request \"[docs] Update the LayoutCodeBehind documentation\" (#1622) at xamarin/xamarin-android","RelatedBody":"Update to contain more examples."},{"Id":"7612734623","Type":"PullRequestEvent","CreatedAt":"2018-05-01T18:37:21","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1621","RelatedDescription":"Opened pull request \"[tests] changes to get test projects building again on Windows/monodroid\" (#1621) at xamarin/xamarin-android","RelatedBody":"Since ab3773cf, `Xamarin.Android-Tests.sln` hasn't been building on\r\nWindows, with the following errors:\r\n\r\n    \"Mono.Android-Tests.csproj\" (default target) (2) ->\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(19,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(23,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(27,4): error CS0103: The name 'my_scroll_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(29,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(33,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(37,4): error CS0103: The name 'csharp_simple_fragment' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(38,4): error CS0103: The name 'csharp_partial_assembly' does not exist in the current context\r\n        Xamarin.Android.RuntimeTests\\MainActivity.cs(39,4): error CS0103: The name 'csharp_full_assembly' does not exist in the current context\r\n\r\nLooking into it, there were several layout files that were not\r\nspecifying `AndroidBoundLayout` as the build action. Changing the build\r\naction of `Main.axml` got `Mono.Android-Tests.csproj` building again.\r\n\r\nUnfortunately, as I looked into `CodeBehindBuildTests.csproj`, many of\r\nthe situations where @grendello had setup conflicting types did not\r\ncompile. _For now_, it seems our best option is to resolve the conflicts\r\nto get things to compile again. Cases where one layout had `<Button />`\r\nand another had `<TextView />`, I just changed the layouts to use the\r\nsame type. When @grendello gets back, he can investigate and get these\r\ntests back to what they were trying to accomplish for testing.\r\n\r\nI am uncertain on how these projects were building on other platforms,\r\nbut similar build errors have cropped up upstream in `monodroid`:\r\n\r\n    /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/src/Mono.Android/Test/Xamarin.Android.RuntimeTests/MainActivity.cs\r\n        MainActivity.cs(17,36): error CS0117: 'Resource.Layout' does not contain a definition for 'Main'\r\n        MainActivity.cs(19,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        MainActivity.cs(23,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        MainActivity.cs(27,4): error CS0103: The name 'my_scroll_view' does not exist in the current context\r\n        MainActivity.cs(29,4): error CS0103: The name 'first_text_view' does not exist in the current context\r\n        MainActivity.cs(33,4): error CS0103: The name 'second_text_view' does not exist in the current context\r\n        MainActivity.cs(37,4): error CS0103: The name 'csharp_simple_fragment' does not exist in the current context\r\n        MainActivity.cs(38,4): error CS0103: The name 'csharp_partial_assembly' does not exist in the current context\r\n        MainActivity.cs(39,4): error CS0103: The name 'csharp_full_assembly' does not exist in the current context\r\n\r\nI'm hoping this PR will fix Windows builds and builds upstream in\r\n`monodroid`."},{"Id":"7612248028","Type":"IssuesEvent","CreatedAt":"2018-05-01T16:51:02","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1620","RelatedDescription":"Opened issue \"ResolveLibraryProjectImports task failed unexpectedly on 15.7\" (#1620) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download the following component - https://components.xamarin.com/view/devexpress-grid\r\n2. Try to build HelloGrid.Android on 15.7\r\n3. Build should fail with the **actual behavior** below\r\n\r\n### Expected Behavior\r\n\r\nBuild should succeed and deploy.\r\n\r\n### Actual Behavior\r\n\r\nProject fails in Xamarin.Android.Common.targets:\r\n\r\n```\r\nThe \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\nSystem.IO.FileNotFoundException: Could not load assembly 'HelloGrid, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\nFile name: 'HelloGrid.dll'\r\n   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(String fullName)\r\n   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract(DirectoryAssemblyResolver res, ICollection`1 jars, ICollection`1 resolvedResourceDirectories, ICollection`1 resolvedAssetDirectories, ICollection`1 resolvedEnvironments)\r\n   at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\t1193\t\r\n```\r\n\r\n### Diagnostic Build Log\r\n\r\nhttps://gist.github.com/JonDouglas/9f580975a0e82b64acdca9818180310f\r\n\r\n### Additional Information\r\n\r\nThis project includes references to old support libraries (v23), if you upgrade to a more recent version such as (v27), it will compile fine and deploy. The behavior is very intermittent but can typically be reproduced on first attempt at building with 15.7. I have tried this on 15.6 and it seems to work fine.\r\n\r\n### Version Information\r\n\r\n```\r\n15.7 Preview 5\r\nXamarin.Android 8.3.0.18 (HEAD/1f8462ef1)\r\n```"},{"Id":"7611617820","Type":"PullRequestEvent","CreatedAt":"2018-05-01T14:37:05","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1619","RelatedDescription":"Opened pull request \"[build] Fix Linux `make package-oss`\" (#1619) at xamarin/xamarin-android","RelatedBody":"The [xamarin-android-linux][0] job has long been broken, and I had\r\nhoped that commit 3b904c20 would allow it to build once more.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/\r\n\r\nCommit 3b904c20 *does* appear to have improved matters; build times\r\nwent from ~1h to ~4h, so it was certainly building more. :-)\r\n\r\nUnfortunately, the build [fails within `make package-oss`][1]:\r\n\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/956/\r\n\r\n\tif [ ! -f xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2/ThirdPartyNotices.txt ] ; then \\\r\n\t\tcp -n  xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2 ; \\\r\n\tfi\r\n\tcp: missing destination file operand after 'xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2'\r\n\tTry 'cp --help' for more information.\r\n\tbuild-tools/scripts/Packaging.mk:27: recipe for target 'xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2.tar.bz2' failed\r\n\tmake: *** [xamarin.android-oss_v8.3.99.151_Linux-x86_64_HEAD_3b904c2.tar.bz2] Error 1\r\n\r\nThis error doesn't make sense to me; the `cp -n` is in `Packaging.mk`:\r\n\r\n\tcp -n $(firstword $(wildcard bin/*/lib/xamarin.android/ThirdPartyNotices.txt)) $(ZIP_OUTPUT_BASENAME)\r\n\r\nApparently the `$(firstword $(wildcard ...))` construct is returning\r\nthe empty string, which (again) makes no sense to me because\r\n`bin/Debug/xamarin.android/ThirdPartyNotices.txt` *is* created, as per\r\ninvestigation of the Jenkins Workspace while a build is in-progress.\r\n\r\nAlso note that this is only happening on Linux; macOS executes this\r\nJust Fine™.\r\n\r\nIn the absense of actually understanding what's wrong and fixing the\r\nreal problem, instead print out some debug spew if the `cp` operation\r\n*would* fail -- because `$(firstword $(wildcard ...))` returns \"\" --\r\nand fallback to an attempted \"hardcoded\" `cp` operation.\r\n\r\nHopefully this will allow `make package-oss` to finish on Linux,\r\nallowing for a long-missing-and-desired \"non-red build\"."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7613523024","Type":"IssuesEvent","CreatedAt":"2018-05-01T21:33:40","Actor":"CheathamPatrick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2578","RelatedDescription":"Opened issue \"Xamarin.Forms for UWP Visual Basic language\" (#2578) at xamarin/Xamarin.Forms","RelatedBody":"I was looking to see if I could ascertain any indication of when Xamarin Forms for Visual Basic in UWP would seem to be ready for release. Thank you for any of your time and efforts. ~ Patrick\r\n"},{"Id":"7613137255","Type":"IssuesEvent","CreatedAt":"2018-05-01T20:06:37","Actor":"ceblanda","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2577","RelatedDescription":"Opened issue \"Hamburger icon not shown when using FormsAppCompatActivity\" (#2577) at xamarin/Xamarin.Forms","RelatedBody":"This was reported in Bugzilla as 54229 and confirmed but not fixed.\r\n\r\nRun the sample app, there is a MasterDetail window with a list in the detail that opens a second window.  Tap on one of the items in the detail window to open the second window.  The hamburger icon is no longer visible; no icon is visible.  Tapping the header doesn't open the flyout menu but swiping from the left does\r\n\r\nIn MainActivity (in Droid) comment out the code from [Activity thought the end of the class, and uncomment the other section of code.  This switches the ancestor from FormsAppCompactActivity to FormsApplicationActivity.  Run the test again and the hamburger icon will be visible on the second window.\r\n\r\nNow change MainActivity back and open AnnouncementView.xaml.cs (in Portable) and change _noBackArrow to false.  Run the test again and the back arrow will be visible on the second window.\r\n\r\nhamburger icon should show on second window\r\n\r\nno icon appears and the title shifts left\r\n\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: none \r\n- IDE: VS2017\r\n- Platform Target Frameworks: \r\n  - Android: 8.1\r\n \r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/1641428/39491217-85ecd586-4d59-11e8-81ee-e1620b8bad04.png)\r\n\r\n\r\n### Reproduction Link\r\n[missingHamburger.zip](https://github.com/xamarin/Xamarin.Forms/files/1965051/missingHamburger.zip)\r\n"},{"Id":"7613093130","Type":"IssuesEvent","CreatedAt":"2018-05-01T19:56:45","Actor":"ceblanda","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2576","RelatedDescription":"Opened issue \"Regression - Android - Exception thrown when page is popped\" (#2576) at xamarin/Xamarin.Forms","RelatedBody":"PopAsync after a PushAsync throws Unhandled Exception:\r\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute. occurred\r\n\r\nRun the attached program.  It will present a list of 'Announcements'.  \r\n1. Tap one of the items to open a second page\r\n2. press the back button to return to the previous page\r\n3. exception is thrown\r\n\r\nPage will pop without exception\r\n\r\nException is thrown\r\n\r\n- Version with issue:  2.5.1.444934\r\n- Last known good version:  2.5.0.122203\r\n- IDE: VS2017\r\n- Platform Target Frameworks: \r\n  - Android: 8.1\r\n- Android Support Library Version: 27.0.2\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[PopException.zip](https://github.com/xamarin/Xamarin.Forms/files/1965013/PopException.zip)\r\n\r\n\r\n"},{"Id":"7612727892","Type":"PullRequestEvent","CreatedAt":"2018-05-01T18:35:54","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2575","RelatedDescription":"Opened pull request \"Use explicit references so VS for Mac doesn't pick up Design files\" (#2575) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWe don't want the files in the Design folder to be added as assembly references when installing the nuget package; to avoid this, we make the list of assembly references explicit.\r\n\r\n### Bugs Fixed ###\r\n\r\n- #2552 \r\n"},{"Id":"7612337009","Type":"IssuesEvent","CreatedAt":"2018-05-01T17:11:07","Actor":"jhumphrey1","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2574","RelatedDescription":"Opened issue \"Code-behind x:Name not linking properly\" (#2574) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCannot access named components from code-behind\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new blank Xamarin Forms project\r\n2. Add 'x:Name=\"myTextLabel\" ' to the default \"Welcome to Xamarin.Forms\" label, and 'x:Name=\"myContentPage\" ' to the default ContentPage\r\n3. Try and reference them in the code-behind\r\n\r\n### Expected Behavior\r\nShould run as expected\r\n### Actual Behavior\r\nmyTextLabel gives 'Not Available' error (shown in image)\r\nmyContentPage gives standard \"myContentPage does not exist in current context\"\r\n![xamarin-error](https://user-images.githubusercontent.com/19778665/39483407-4938c3b6-4d40-11e8-8662-50961d28bf2b.png)\r\n\r\nTrying to run the code with just the myTextLabel referenced works as expected. Trying to run it with myContentPage referenced does not.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: N/A\r\n- IDE: Visual Studio\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.3\r\n  - Android: 8.1\r\n- Android Support Library Version: v27.0.2\r\n- Nuget Packages: Xamarin.Forms v2.5.1.444934\r\n- Affected Devices: Note 8, iPhone X\r\n\r\n### Screenshots\r\nHere is the xaml, all blocked text is the same (Namespace name)\r\n![xamarin-error-2](https://user-images.githubusercontent.com/19778665/39483606-f329aa20-4d40-11e8-8330-b5024a6bc9c6.png)\r\n\r\n"},{"Id":"7611467654","Type":"IssuesEvent","CreatedAt":"2018-05-01T14:02:58","Actor":"RathanakumarSekar","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2573","RelatedDescription":"Opened issue \"Editor components not focus properly inside ListView in Android\" (#2573) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWe have using 3rd party components in application and #rd party Editor component doesn't focus properly, inside the ListView ItemTemplate.\r\n\r\n### Expected Behavior\r\nIt should focus.\r\n\r\n### Actual Behavior\r\nComponents doesn't focus properly inside ListView.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:2.5.1.444934\r\n\r\n- Platform Target Frameworks: \r\n Android\r\n\r\n"},{"Id":"7611411224","Type":"IssuesEvent","CreatedAt":"2018-05-01T13:49:34","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2572","RelatedDescription":"Opened issue \"CSS background-image: none causes the app to crash.\" (#2572) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nbackground-none crashes the app\r\n\r\n\r\n### Steps to Reproduce\r\n```\r\n^ContentPage {\r\n    background-color: black;\r\n    background-image: none;\r\n}\r\n\r\nlabel {\r\n    color: white;\r\n}\r\n```\r\n\r\n### Expected Behavior\r\nShould work just like `BackgroundImage=\"\"` and reset the background image.\r\n\r\n### Actual Behavior\r\nCrashes the app\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0-pre3\r\n\r\n### Screenshots\r\n<img width=\"869\" alt=\"screenshot 2018-05-01 08 46 39\" src=\"https://user-images.githubusercontent.com/41873/39475076-7a2604ee-4d1c-11e8-928c-6036a50e6b5c.png\">\r\n\r\n\r\n### Reproduction Link\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/1963923/Archive.zip)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7614467664","Type":"PullRequestEvent","CreatedAt":"2018-05-02T03:03:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4022","RelatedDescription":"Opened pull request \"[macos][security] Re-enable SSL[Get}Set]AlpnProtocols. Fixes #4001\" (#4022) at xamarin/xamarin-macios","RelatedBody":"This was fixed in macOS 10.13.4\n    \nhttps://github.com/xamarin/xamarin-macios/issues/4001"},{"Id":"7614391264","Type":"PullRequestEvent","CreatedAt":"2018-05-02T02:33:21","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4020","RelatedDescription":"Merged pull request \"[classkit] Update for Xcode 9.4 beta 2\" (#4020) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7613353635","Type":"IssuesEvent","CreatedAt":"2018-05-01T20:54:32","Actor":"wescur88","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4021","RelatedDescription":"Opened issue \" Attempting to JIT compile method '(wrapper managed-to-native)\" (#4021) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a binding that uses Marshal.GetDelegateForFunctionPointer\r\n2. Add [UnmanagedFunctionPointerAttribute (CallingConvention.Cdecl)] attribute to delegate.\r\n3. \r\n\r\n### Expected Behavior\r\nReturn a native delegate\r\n### Actual Behavior\r\nSystem.ExecutionEngineException: Attempting to JIT compile method '(wrapper managed-to-native) MTBeaconPlusBinding.MTPasswordBlock:wrapper_aot_native (object,string)' while running in aot-only mode. See https://developer.xamarin.com/guides/ios/advanced_topics/limitations/ for more information.\r\n### Environment\r\nVisual Studio 2017 Professional\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA413\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA413\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10402.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.6.18072.2\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.6.18072.2\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.6.18072.2\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.6.18072.2\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.6.18072.2\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik ASP.NET AJAX VSExtensions   2017.3.1017.0\r\nProgress® Telerik® UI for ASP.NET AJAX Visual Studio extensions\r\n\r\nTelerik ASP.NET Core VSExtensions   2017.3.1121.0\r\nProgress® Telerik® UI for ASP.NET Core Visual Studio extensions\r\n\r\nTelerik ASP.NET MVC VSExtensions   2017.3.1121.0\r\nProgress® Telerik® UI for ASP.NET MVC Visual Studio extensions\r\n\r\nTelerik WinForms Converter   2017.3.1017.0\r\nProgress® Telerik® UI for WinForms Converter Visual Studio extensions\r\n\r\nTelerik WinForms VSExtensions   2018.1.215.2\r\nProgress® Telerik® UI for WinForms Visual Studio extensions\r\n\r\nTelerik WPF VSExtensions   2018.1.215.2\r\nProgress® Telerik® UI for WPF Visual Studio extensions\r\n\r\nTelerik Xamarin VSExtensions   2018.1.322.3\r\nProgress® Telerik® UI for Xamarin Visual Studio extensions\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7102.2\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.753 (f0f46392f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.96 (a702a9ceb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.9.1.24 (f62de47)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\n[Trampolines.g.zip](https://github.com/xamarin/xamarin-macios/files/1965173/Trampolines.g.zip)\r\n\r\n-->\r\n"},{"Id":"7613314673","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:45:56","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4020","RelatedDescription":"Opened pull request \"[classkit] Update for Xcode 9.4 beta 2\" (#4020) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7613304831","Type":"PullRequestEvent","CreatedAt":"2018-05-01T20:43:53","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4017","RelatedDescription":"Merged pull request \"[Make.config] Bump for Xcode 9.4 beta 2\" (#4017) at xamarin/xamarin-macios","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"991348553938325504","CreatedAt":"2018-05-01T16:08:08+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/hyslYNNw1C","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":7,"RawContent":null},{"Id":"990330065408970753","CreatedAt":"2018-04-28T20:41:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/7ev5YyMYYG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":27,"RawContent":null},{"Id":"989898469933494275","CreatedAt":"2018-04-27T16:06:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/CLM721aiRu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":16,"RawContent":null},{"Id":"989568663995994112","CreatedAt":"2018-04-26T18:15:29+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/j7zEZKejRt https://t.co/uR4Wn80zw2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":36,"RawContent":null},{"Id":"989535349708816384","CreatedAt":"2018-04-26T16:03:06+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/mCkzHchAxL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"989169416758841344","CreatedAt":"2018-04-25T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from @gshackles on the #VSAppCenter bl… https://t.co/eg1dVsOYzK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"988809546146701312","CreatedAt":"2018-04-24T15:59:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/bAWyV5Zt2G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":14,"RawContent":null},{"Id":"988493654808498176","CreatedAt":"2018-04-23T19:03:47+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/qyMCa5TERh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":101,"FavoriteCount":38,"RawContent":null},{"Id":"988444639064666114","CreatedAt":"2018-04-23T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/lnoWKsVf6F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"988180901405364225","CreatedAt":"2018-04-22T22:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/WHbOgNnjfL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":16,"RawContent":null},{"Id":"987830341409832966","CreatedAt":"2018-04-21T23:08:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/VcwvXVvsi6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":53,"RawContent":null},{"Id":"987416244490993664","CreatedAt":"2018-04-20T19:42:32+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":52,"RawContent":null},{"Id":"987362257762967553","CreatedAt":"2018-04-20T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/4JyHATQW2I","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"986658974685679617","CreatedAt":"2018-04-18T17:33:25+00:00","UserScreenname":"xamarinhq","Text":"Automatic iOS app provisioning with #VS2017 15.7 Preview 3: https://t.co/vFjy3uXtie https://t.co/sLhjkaHc9X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":103,"FavoriteCount":55,"RawContent":null},{"Id":"986626430950920192","CreatedAt":"2018-04-18T15:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/piucqHprNe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":51,"RawContent":null},{"Id":"986268805629345792","CreatedAt":"2018-04-17T15:43:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/eK0geeikW6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":22,"RawContent":null},{"Id":"985953326079594496","CreatedAt":"2018-04-16T18:49:25+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":37,"RawContent":null},{"Id":"985907924479479811","CreatedAt":"2018-04-16T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/HMGMdGgDYr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":15,"RawContent":null},{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2018-05-02T05:30:43.9957137Z","RunDurationInMilliseconds":4368}