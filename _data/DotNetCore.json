{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":112,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8600016664","Type":"IssuesEvent","CreatedAt":"2018-11-16T05:28:39","Actor":"KevinRansom","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21046","RelatedDescription":"Opened issue \"Incompatability between desktop and coreclr for Generic Array Enumeration\" (#21046) at dotnet/coreclr","RelatedBody":"Enumerator fails to throw when calling current after MoveNext returns false\r\n\r\nrepro:\r\nThis code throws on the NETFramework and the coreclr doesn't\r\n````\r\nnamespace ConsoleApp23\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var keyValuePairs =\r\n                new KeyValuePair<int, int>[3]\r\n                {\r\n                    new KeyValuePair<int, int>(1,1),\r\n                    new KeyValuePair<int, int>(2,2),\r\n                    new KeyValuePair<int, int>(3,3),\r\n                };\r\n\r\n                IEnumerable<KeyValuePair<int, int>> collection = keyValuePairs;\r\n\r\n            var e = collection.GetEnumerator();\r\n\r\n            var step2 = e.MoveNext();\r\n            var step3 = e.Current;\r\n            Console.WriteLine(\"{0} {1}\", step2, step3);\r\n\r\n            var step4 = e.MoveNext();\r\n            var step5 = e.Current;\r\n            Console.WriteLine(\"{0} {1}\", step4, step5);\r\n\r\n            var step6 = e.MoveNext();\r\n            var step7 = e.Current;\r\n            Console.WriteLine(\"{0} {1}\", step6, step7);\r\n\r\n            var step8 = e.MoveNext();\r\n            var step9 = e.Current;\r\n            Console.WriteLine(\"{0} {1}\", step8, step9);\r\n       }\r\n    }\r\n}\r\n````\r\nProduces this output on NET Framework: (Note the exception is thrown)\r\n````\r\nC:\\Users\\kevinr\\source\\repos\\ConsoleApp23\\ConsoleApp23\\bin\\Debug>net472\\ConsoleApp23.exe\r\nTrue [1, 1]\r\nTrue [2, 2]\r\nTrue [3, 3]\r\n\r\nUnhandled Exception: System.InvalidOperationException: Enumeration already finished.\r\n   at System.SZArrayHelper.SZGenericArrayEnumerator`1.get_Current()\r\n   at ConsoleApp23.Program.Main(String[] args) in C:\\Users\\kevinr\\source\\repos\\ConsoleApp23\\ConsoleApp23\\Program.cs:line 35\r\n\r\nC:\\Users\\kevinr\\source\\repos\\ConsoleApp23\\ConsoleApp23\\bin\\Debug>\r\n````\r\n\r\nand this output on the Coreclr: Note it produces [3,3] when MoveNext returns false\r\n````\r\nTrue [1, 1]\r\nTrue [2, 2]\r\nTrue [3, 3]\r\nFalse [3, 3]\r\n````\r\n"},{"Id":"8599771239","Type":"PullRequestEvent","CreatedAt":"2018-11-16T03:55:58","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21045","RelatedDescription":"Opened pull request \"Update CoreFx to preview.18566.4 (master)\" (#21045) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"8599715138","Type":"PullRequestEvent","CreatedAt":"2018-11-16T03:35:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21035","RelatedDescription":"Merged pull request \"Delete HAS_FLS_SUPPORT and related code\" (#21035) at dotnet/coreclr","RelatedBody":""},{"Id":"8599461849","Type":"PullRequestEvent","CreatedAt":"2018-11-16T02:14:05","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20981","RelatedDescription":"Merged pull request \"Fixed signatures of ref readonly methods in JIT ETW events\" (#20981) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/coreclr/issues/20754\r\n\r\nThe method \r\n```csharp \r\nref readonly long Foo(int i)\r\n```\r\nnow produces the ETW signature `required_modifier int64&  (int32)`\r\n\r\nI don't think I broke any tests with this change, but I also couldn't find any that test these signatures. Are there tests that need to be adapted?\r\n\r\ncc @jkotas"},{"Id":"8599461836","Type":"IssuesEvent","CreatedAt":"2018-11-16T02:14:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20754","RelatedDescription":"Closed issue \"JIT ETW event signatures for ref readonly methods\" (#20754) at dotnet/coreclr","RelatedBody":"The Jit Inlining Events (e.g. \"Method/InliningFailedAnsi\", ID 186) produce a strange signature for ref readonly methods. Consider the following program:\r\n\r\n```csharp\r\nclass Program\r\n{\r\n    private static long a;\r\n    public static ref readonly long Foo(bool b) => ref a;\r\n    public static ref readonly long Foo(int i) => ref a;\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        Foo(true);\r\n        Foo(1);\r\n    }\r\n}\r\n```\r\nWhen this is run, 2 InliningFailed events are emitted, but both have the same InlineeNameSignature: \r\n`required_modifier System.Runtime.InteropServices.InAttribute  (int64&)`. This doesn't seem to follow the pattern of other InlineeNameSignatures I have seen; the return type for ref readonly methods seems to always be \"required_modifier System.Runtime.InteropServices.InAttribute\" and the actual return type is in the parameter list. Because the actual parameter types are missing, it is impossible to distinguish two overloads.\r\n\r\nI would expect something similar to a method with a ref return value, e.g. the method \r\n```csharp\r\npublic static ref long Foo(int i) => ref a;\r\n```\r\nhas an InlineeNameSignature of `int64&  (int32)`\r\n\r\nIs this a bug or by design? Can this be changed so overloads can be distinguished?"},{"Id":"8599417177","Type":"IssuesEvent","CreatedAt":"2018-11-16T02:00:04","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21044","RelatedDescription":"Opened issue \"Regressions\\coreclr\\16355\\boring fails with GCStress=0x8\" (#21044) at dotnet/coreclr","RelatedBody":"Repro steps:\r\nbuild CoreCLR x64 checked\r\nset complus_gcstress=0x8\r\nset core_root=F:\\git\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\r\nF:\\git\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Regressions\\coreclr\\16355\\boring\\boring.cmd \r\n\r\noutput:\r\n```\r\nF:\\git\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Regressions\\coreclr\\16355\\boring>boring.cmd\r\nBEGIN EXECUTION\r\n \"F:\\git\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\" boring.exe\r\n\r\nAssert failure(PID 16228 [0x00003f64], Thread: 37540 [0x92a4]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! GcStackCrawlCallBack + 0x5C2 (0x00007ffd`f387b3d2)\r\nCORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ffd`f333ca32)\r\nCORECLR! Thread::StackWalkFramesEx + 0x180 (0x00007ffd`f333e5bc)\r\nCORECLR! Thread::StackWalkFrames + 0x184 (0x00007ffd`f333e39c)\r\nCORECLR! ScanStackRoots + 0x28D (0x00007ffd`f3a0490d)\r\nCORECLR! GCToEEInterface::GcScanRoots + 0x1DA (0x00007ffd`f3a035f6)\r\nCORECLR! WKS::gc_heap::mark_phase + 0x228 (0x00007ffd`f39b4608)\r\nCORECLR! WKS::gc_heap::gc1 + 0x1EC (0x00007ffd`f39ad144)\r\nCORECLR! WKS::gc_heap::garbage_collect + 0x6DD (0x00007ffd`f39acf05)\r\nCORECLR! WKS::GCHeap::GarbageCollectGeneration + 0x2C0 (0x00007ffd`f39998f4)\r\nCORECLR! WKS::GCHeap::GarbageCollect + 0x106 (0x00007ffd`f39995e6)\r\nCORECLR! WKS::GCHeap::StressHeap + 0x615 (0x00007ffd`f399c265)\r\nCORECLR! VSD_ResolveWorker + 0x7DB (0x00007ffd`f351103b)\r\nCORECLR! ResolveWorkerAsmStub + 0x6D (0x00007ffd`f382938d)\r\n<no module>! <no symbol> + 0x0 (0x00007ffd`93f91fc3)\r\n<no module>! <no symbol> + 0x0 (0x000002c0`b0d9ef80)\r\n<no module>! <no symbol> + 0x0 (0x000002c0`aed6cb50)\r\n<no module>! <no symbol> + 0x0 (0x00000000`0000018d)\r\n<no module>! <no symbol> + 0x0 (0x00000000`000001cd)\r\n-----\r\n.AV on tid=0x92a4 (37540), cxr=000000DED9D7B1C0, exr=000000DED9D7B6B0\r\nFAILED: false\r\n\r\nCORECLR! CHECK::Trigger + 0x2C4 (0x00007ffd`f313d174)\r\nCORECLR! CLRVectoredExceptionHandlerPhase3 + 0x379 (0x00007ffd`f32091fd)\r\nCORECLR! CLRVectoredExceptionHandlerPhase2 + 0x72 (0x00007ffd`f3208c56)\r\nCORECLR! CLRVectoredExceptionHandler + 0x1D9 (0x00007ffd`f3208bc9)\r\nCORECLR! CLRVectoredExceptionHandlerShim + 0x18A (0x00007ffd`f320944a)\r\nNTDLL! RtlInitializeCriticalSectionAndSpinCount + 0x1C6 (0x00007ffe`46a96896)\r\nNTDLL! RtlWalkFrameChain + 0x1119 (0x00007ffe`46a34709)\r\nNTDLL! KiUserExceptionDispatcher + 0x2E (0x00007ffe`46ad231e)\r\nCORECLR! GcStackCrawlCallBack + 0x5C2 (0x00007ffd`f387b3d2)\r\nCORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ffd`f333ca32)\r\n    File: f:\\git\\coreclr\\src\\vm\\excep.cpp Line: 7830\r\n    Image: F:\\git\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8599978631","Type":"PullRequestEvent","CreatedAt":"2018-11-16T05:14:48","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10351","RelatedDescription":"Opened pull request \"Adding NU5105 to the NOWARN list.\" (#10351) at dotnet/cli","RelatedBody":""},{"Id":"8599889678","Type":"PullRequestEvent","CreatedAt":"2018-11-16T04:40:49","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10348","RelatedDescription":"Merged pull request \"Updating branding to 2.2.101\" (#10348) at dotnet/cli","RelatedBody":""},{"Id":"8599889130","Type":"PullRequestEvent","CreatedAt":"2018-11-16T04:40:36","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10347","RelatedDescription":"Merged pull request \"Updating branding to 2.1.501\" (#10347) at dotnet/cli","RelatedBody":""},{"Id":"8599888087","Type":"PullRequestEvent","CreatedAt":"2018-11-16T04:40:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10275","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#10275) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8599439629","Type":"PullRequestEvent","CreatedAt":"2018-11-16T02:07:00","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10350","RelatedDescription":"Merged pull request \"Bump SDK package version to 3.0.100-preview.18565.3.\" (#10350) at dotnet/cli","RelatedBody":"This commit bumps the SDK package version to `3.0.100-preview.18565.3`.\r\n\r\nThis SDK package contains all the 2.2.xx changes for `dotnet/sdk`.\r\n"},{"Id":"8599212330","Type":"PullRequestEvent","CreatedAt":"2018-11-16T00:56:31","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10350","RelatedDescription":"Opened pull request \"Bump SDK package version to 3.0.100-preview.18565.3.\" (#10350) at dotnet/cli","RelatedBody":"This commit bumps the SDK package version to `3.0.100-preview.18565.3`.\r\n\r\nThis SDK package contains all the 2.2.xx changes.\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8595356206","Type":"PullRequestEvent","CreatedAt":"2018-11-15T13:21:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/970","RelatedDescription":"Merged pull request \"Update dependency files\" (#970) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18564.20\r\n\r\n"},{"Id":"8595229560","Type":"PullRequestEvent","CreatedAt":"2018-11-15T13:01:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/970","RelatedDescription":"Opened pull request \"Update dependency files\" (#970) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18564.20\r\n\r\n"},{"Id":"8588084500","Type":"PullRequestEvent","CreatedAt":"2018-11-14T13:12:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/969","RelatedDescription":"Merged pull request \"Update dependency files\" (#969) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18563.21\r\n\r\n"},{"Id":"8588027346","Type":"PullRequestEvent","CreatedAt":"2018-11-14T13:01:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/969","RelatedDescription":"Opened pull request \"Update dependency files\" (#969) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18563.21\r\n\r\n"},{"Id":"8582682814","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:35:50","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/968","RelatedDescription":"Opened issue \"Clarify which facades we need to for .NET Standard 2.1\" (#968) at dotnet/standard","RelatedBody":"With .NET Standard 2.1 we've in-boxed several types that were previously available as an OOB only, such as `Span<T>`. We need to put these in-box so that when people retarget an existing project to .NET Standard 2.1 and reference the OOB, they don't get compilation errors."},{"Id":"8580964101","Type":"PullRequestEvent","CreatedAt":"2018-11-13T13:31:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/967","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181112.25 of https://github.com/dotnet/arcade\" (#967) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18562.25\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18562.25.symbols.nupkg - 2.2.0-beta.18562.25\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18562.25.symbols.nupkg - 2.4.0-beta.18562.25\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18562.25.symbols.nupkg - 1.0.0-beta.18562.25\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18562.25\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18562.25\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18562.25\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18562.25\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18562.25\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Darc - 1.0.0-beta.18562.25\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18562.25\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18562.25\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18562.25\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18562.25\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18562.25\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18562.25\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18562.25\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18562.25\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18562.25"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8599764914","Type":"PullRequestEvent","CreatedAt":"2018-11-16T03:53:38","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33539","RelatedDescription":"Opened pull request \"Update CoreFx to preview.18566.4 (master)\" (#33539) at dotnet/corefx","RelatedBody":""},{"Id":"8599731878","Type":"PullRequestEvent","CreatedAt":"2018-11-16T03:41:31","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33537","RelatedDescription":"Merged pull request \"change ALPN detection from Linux to !OSX on Unix\" (#33537) at dotnet/corefx","RelatedBody":"For now, assume OSX is special and all other Unixes will use OpenSSL. \r\nSystem.Net.Security tests do pass now. \r\n\r\n```\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Net.Security.Tests  Total: 4233, Errors: 0, Failed: 0, Skipped: 5, Time: 16.908s\r\n  /mnt/resource/corefx/src/System.Net.Security/tests/FunctionalTests\r\n```"},{"Id":"8599665256","Type":"PullRequestEvent","CreatedAt":"2018-11-16T03:19:05","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33531","RelatedDescription":"Merged pull request \"Make well-known IPv4 addresses readonly\" (#33531) at dotnet/corefx","RelatedBody":"Fix https://github.com/dotnet/corefx/issues/33373 using the approach suggested in PR https://github.com/dotnet/corefx/pull/33476 \r\n\r\n/cc @alfredmyers @stephentoub "},{"Id":"8599665252","Type":"IssuesEvent","CreatedAt":"2018-11-16T03:19:05","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33373","RelatedDescription":"Closed issue \"IPAddress static fields are readonly, but their values aren't\" (#33373) at dotnet/corefx","RelatedBody":"`IPAddress` static fields for `Any`, `Broadcast`, `Local` and `None` are marked `readonly`\r\n\r\nhttps://github.com/dotnet/corefx/blob/b0b1452eaaa120dc8267ebbe5a93798f77ec5ed1/src/System.Net.Primitives/src/System/Net/IPAddress.cs#L20-L23\r\n\r\nBecause of that, one could take for granted that they would **always** correspond to respectively `0.0.0.0`, `255.255.255.255`, `127.0.0.1` and `255.255.255.255`.\r\n\r\nThe thing is, it is possible to change their values through the obsoleted `IPAddress.Address` property such as in\r\n\r\n```csharp\r\nusing System;\r\nusing System.Net;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        Console.WriteLine(\"Well known IP addresses\");\r\n\r\n        Write(\"Any\", IPAddress.Any);\r\n        Write(\"Broadcast\", IPAddress.Broadcast);\r\n        Write(\"Loopback\", IPAddress.Loopback);\r\n        Write(\"None\", IPAddress.None);\r\n\r\n        Console.WriteLine();\r\n\r\n        IPAddress.Any.Address = uint.MaxValue;\r\n        IPAddress.Broadcast.Address = 0;\r\n        IPAddress.Loopback.Address = IPAddress.Any.Address;\r\n\r\n\r\n        Console.WriteLine(\"Well known IP addresses. Or are they?\");\r\n\r\n        Write(\"Any\", IPAddress.Any);\r\n        Write(\"Broadcast\", IPAddress.Broadcast);\r\n        Write(\"Loopback\", IPAddress.Loopback);\r\n        Write(\"None\", IPAddress.None);\r\n\r\n        Console.ReadKey();\r\n\r\n        void Write(string name, IPAddress address)\r\n        {\r\n            Console.WriteLine($\"{name}\\t{address}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\nWell known IP addresses\r\nAny     0.0.0.0\r\nBroadcast       255.255.255.255\r\nLoopback        127.0.0.1\r\nNone    255.255.255.255\r\n\r\nWell known IP addresses. Or are they?\r\nAny     255.255.255.255\r\nBroadcast       0.0.0.0\r\nLoopback        255.255.255.255\r\nNone    0.0.0.0\r\n```\r\n\r\nAlthough unexpected, it's quite easy to spot what is being done in the sample code above. But given the scope of static members, a troubleshooter may spend a couple of hours before realizing that any piece of code running in the process (or the AppDomain in case of the .NET Framework), including external dependencies (which would have generated warnings during compilation for members or types marked with `[ObsoleteAttribute]`) could have changed the values of those fields.\r\n\r\nThe property has been obsoleted since .NET Framework 1.1 but is still lingering around and has been brought into .NET Core in 2.0 and into the .NET Standard 2.0 as well.\r\n\r\nGiven the pervasive use of these fields inside the .NET Core, it would be prudent to put safeguards in place to minimize the chance that their values are changed.\r\n"},{"Id":"8599551560","Type":"IssuesEvent","CreatedAt":"2018-11-16T02:42:20","Actor":"wjdavis5","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33538","RelatedDescription":"Opened issue \"System.Numerics.Vectors Nuget wont install\" (#33538) at dotnet/corefx","RelatedBody":"VS Enterprise 2017  15.8.9\r\nNET461 Project\r\n\r\n```\r\n\r\n\r\nAttempting to gather dependency information for package 'System.Numerics.Vectors.4.5.0' with respect to project 'Threads\\Synovia.Thread.Sbss.Listener', targeting '.NETFramework,Version=v4.6.1'\r\nGathering dependency information took 64.91 ms\r\nAttempting to resolve dependencies for package 'System.Numerics.Vectors.4.5.0' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'System.Numerics.Vectors.4.5.0'\r\nResolved actions to install package 'System.Numerics.Vectors.4.5.0'\r\nFound package 'System.Numerics.Vectors 4.5.0' in 'C:\\git\\sbss\\Source\\packages'.\r\nPackage 'System.Numerics.Vectors.4.5.0' already exists in folder 'C:\\git\\sbss\\Source\\packages'\r\nInstall failed. Rolling back...\r\nPackage 'System.Numerics.Vectors.4.5.0' does not exist in project 'Synovia.Thread.Sbss.Listener'\r\nExecuting nuget actions took 1.2 sec\r\nFailed to add reference. The package 'System.Numerics.Vectors' tried to add a framework reference to 'System.Numerics' which was not found in the GAC. This is possibly a bug in the package. Please contact the package owners for assistance.\r\n  Reference unavailable.\r\nTime Elapsed: 00:00:01.3931717\r\n========== Finished ==========\r\n```\r\n\r\nIf I manually add the package to the package.config file it restores fine.\r\n\r\n\r\n\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-90252-65774-AA899\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-90252-65774-AA899\r\nMicrosoft Visual C++ 2017\r\n\r\nANTSVsPackage   2.2.0.172\r\nStart ANTS Performance and Memory Profilers from Visual Studio\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.4.1\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.8.05023.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDevart SQL Complete   5.9.66\r\nDevart dbForge SQL Complete for Management Studio and Visual Studio\r\nCopyright (c) 2017 Devart. All rights reserved.\r\nWeb: http://www.devart.com/dbforge/sql/sqlcomplete \r\nSupport: http://www.devart.com/dbforge/sql/sqlcomplete/support.html \r\nOrdering: http://www.devart.com/dbforge/sql/sqlcomplete/ordering.html \r\n\r\nFabric.ApplicationInsights   1.0\r\nAllows user to instrument their Service Fabric projects for Application Insights.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.2.3   Build 182.0.20180912.70621\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.3\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nNode.js Tools   1.4.20907.4 Commit Hash:f048d52e417a8902dea9e42828b7fdab92d4aaaa\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPowerShell Pro Tools for Visual Studio   1.0\r\nA set of tools for developing and debugging PowerShell scripts and modules in Visual Studio.\r\n\r\nProject   1.0\r\nInformation about my package\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nRedgate SQL Prompt   9.4.0.6807\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Analysis Services   15.0.1000.59\r\nMicrosoft SQL Server Analysis Services Designer \r\nVersion 15.0.1000.59\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQL Server Integration Services   \r\nMicrosoft SQL Server Integration Services Designer\r\nVersion 15.0.900.30\r\n\r\nSQL Server Reporting Services   15.0.900.163\r\nMicrosoft SQL Server Reporting Services Designers \r\nVersion 15.0.900.163\r\n\r\nSsmsVsIntegration   1.0\r\nInformation about my package\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.8.20822.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8599862020","Type":"PullRequestEvent","CreatedAt":"2018-11-16T04:30:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31187","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#31187) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8598783871","Type":"PullRequestEvent","CreatedAt":"2018-11-15T22:58:49","Actor":"GrabYourPitchforks","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6583","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6583) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"},{"Id":"8598495623","Type":"PullRequestEvent","CreatedAt":"2018-11-15T21:58:41","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6583","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6583) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8598382806","Type":"PullRequestEvent","CreatedAt":"2018-11-15T21:36:58","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6582","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6582) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @pentp"},{"Id":"8598380708","Type":"PullRequestEvent","CreatedAt":"2018-11-15T21:36:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6581","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6581) at dotnet/corert","RelatedBody":""},{"Id":"8596910433","Type":"PullRequestEvent","CreatedAt":"2018-11-15T17:08:03","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6582","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6582) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8596093074","Type":"PullRequestEvent","CreatedAt":"2018-11-15T15:12:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6581","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#6581) at dotnet/corert","RelatedBody":""},{"Id":"8593636137","Type":"PullRequestEvent","CreatedAt":"2018-11-15T08:15:01","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6572","RelatedDescription":"Merged pull request \"Enable R2R tests in release mode\" (#6572) at dotnet/corert","RelatedBody":"This change enables R2R tests in release mode. It seems to me that\r\npreviously the tests were disabled in release mode because they\r\nwere crashing the CPAOT compiler due to a bug I made months ago -\r\napparently I put the CanInline method in the wrong class so it got\r\nnever exercised. In release mode, when inlining is active, this bug\r\nended up inlining bits of framework into the test app that we\r\ncouldn't express with the available ref tokens.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. I'm still hitting some issues when trying to run the CoreCLR\r\ntests in release mode, I'll address them in a separate change."},{"Id":"8592308780","Type":"IssuesEvent","CreatedAt":"2018-11-15T01:41:25","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6580","RelatedDescription":"Opened issue \"wasm: NativeCallable function is not used\" (#6580) at dotnet/corert","RelatedBody":"I don't know if I'm doing something wrong, or its the wasm compiler.  I have this c#:\r\n```\r\n    private static unsafe void ThreadTest()\r\n    {\r\n        p_thread pThread;\r\n        int arg = 0;\r\n        int join;\r\n        var t = pthread_create((IntPtr)(&pThread), (IntPtr)(0), System.Runtime.InteropServices.AddrofIntrinsics.AddrOf<ThreadStartFunc>(ThreadStart), (IntPtr)(&arg));\r\n        join = pthread_join((IntPtr)(&pThread), (IntPtr)0);\r\n    }\r\n\r\n    [NativeCallable(CallingConvention = CallingConvention.StdCall)]\r\n    private static unsafe void* ThreadStart(void* arg)\r\n    {\r\n...\r\n    }\r\n```\r\nSo I'm trying to get `pthread_create` to callback into `ThreadStart`.  When I run this it complains:\r\n```\r\nInvalid function pointer '6920' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this) HelloWasm.js:6610:27\r\nThis pointer might make sense in another type signature: i: 0  iii: _HelloWasm_Program__ThreadStart  iiii: 0  iiiii: 0  iiiiii: 0  iiiiiii: undefined  iiiiiiii: 0  iiiiiiiiii: undefined  vii: 0  di: undefined  vi: 0  viii: 0  v: 0  viiii: 0  viiiii: 0  viiiiii: 0  viiiiiii: 0 \r\n```\r\nSo you can see that its looking for a method in the function table `ii` whereas the one that its been given, `_HelloWasm_Program__ThreadStart` is in the `iii` table.  Indeed `_HelloWasm_Program__ThreadStart` is the wrong signature, its has the signature for any other method, i.e. the first param is the shadow stack:\r\n```\r\ndefine i8* @HelloWasm_Program__ThreadStart(i8*, i8*) \r\n```\r\nThere is another function emitted which looks like the right one:\r\n```\r\ndefine i8* @ThreadStart(i8*) {\r\nShadowStackSetupBlock:\r\n  %ShadowStackPtr = alloca i8*\r\n  %SavedShadowStack = load i8*, i8** @t_pShadowStackTop\r\n  store i8* %SavedShadowStack, i8** %ShadowStackPtr\r\n  %ShadowStackNull = icmp eq i8* %SavedShadowStack, null\r\n  br i1 %ShadowStackNull, label %allocateShadowStackBlock, label %ManagedCallBlock\r\n\r\nallocateShadowStackBlock:                         ; preds = %ShadowStackSetupBlock\r\n  %NewShadowStack = tail call i8* @malloc(i32 mul (i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32), i32 1000000))\r\n  store i8* %NewShadowStack, i8** %ShadowStackPtr\r\n  br label %ManagedCallBlock\r\n\r\nManagedCallBlock:                                 ; preds = %allocateShadowStackBlock, %ShadowStackSetupBlock\r\n  %ReversePInvokeFrame = alloca { i8*, i8* }\r\n  call void @RhpReversePInvoke2({ i8*, i8* }* %ReversePInvokeFrame)\r\n  %ShadowStack = load i8*, i8** %ShadowStackPtr\r\n  %calleeFrame = getelementptr i8, i8* %ShadowStack, i32 4\r\n  %1 = call i8* @HelloWasm_Program__ThreadStart(i8* %calleeFrame, i8* %0)\r\n  call void @RhpReversePInvokeReturn2({ i8*, i8* }* %ReversePInvokeFrame)\r\n  ret i8* %1\r\n}\r\n```\r\nBut this does not seem to be used anywhere else in the LLVM file.  I'm not sure what the right question is.  What should the parameters to `InitializeReversePInvokeThunk` be for this?  \r\n\r\n\r\n\r\nI have these attributes defined:\r\n```\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    /// <summary>\r\n    /// Any method marked with NativeCallableAttribute can be directly called from\r\n    /// native code. The function token can be loaded to a local variable using LDFTN\r\n    /// and passed as a callback to native method.\r\n    /// </summary>\r\n    [AttributeUsage(AttributeTargets.Method)]\r\n    public sealed class NativeCallableAttribute : Attribute\r\n    {\r\n        public NativeCallableAttribute()\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Optional. If omitted, compiler will choose one for you.\r\n        /// </summary>\r\n        public CallingConvention CallingConvention;\r\n\r\n        /// <summary>\r\n        /// Optional. If omitted, then the method is native callable, but no EAT is emitted.\r\n        /// </summary>\r\n        public string EntryPoint;\r\n    }\r\n\r\n    [AttributeUsage((System.AttributeTargets.Method | System.AttributeTargets.Class))]\r\n    internal class McgIntrinsicsAttribute : Attribute\r\n    {\r\n    }\r\n\r\n    [McgIntrinsics]\r\n    internal static class AddrofIntrinsics\r\n    {\r\n        // This method is implemented elsewhere in the toolchain\r\n        internal static IntPtr AddrOf<T>(T ftn)\r\n        {\r\n            throw new PlatformNotSupportedException();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n"},{"Id":"8591531535","Type":"PullRequestEvent","CreatedAt":"2018-11-14T22:24:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6568","RelatedDescription":"Merged pull request \"Add check to avoid possible InvalidCastException\" (#6568) at dotnet/corert","RelatedBody":"Encountered an `InvalidCastException `in ILVerify when `EcmaModule `is passed instead of an `EcmaAssembly `instance."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8599224307","Type":"IssuesEvent","CreatedAt":"2018-11-16T01:00:09","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2672","RelatedDescription":"Closed issue \"Published Mvc apps with 3.0 sdk don't work\" (#2672) at dotnet/sdk","RelatedBody":"# Steps to reproduce\r\n\r\n1. `git clone https://github.com/ryanbrandenburg/ImplicitSDKDemo`\r\n2. Aquire the 3.0.100-preview-009750 SDK\r\n3. `dotnet run -c Release` the project.\r\n4. Navigate to `https:localhost:5001`.\r\n5. See that it all works.\r\n6. Shut down the project.\r\n7. `dotnet publish -c Release`.\r\n8. `.\\bin\\Release\\netcoreapp3.0\\publish\\SDK.exe`\r\n9. Navigate to `https:localhost:5001`\r\n10. Observe the 404.\r\n\r\n# Expected\r\nRouting should work regardless of publishing status.\r\n\r\n# Actual\r\nRouting is broken on published apps.\r\n\r\n# Extra data\r\nIf you examine the published vs non-published SDK.deps.json files you see that `\"Microsoft.AspNetCore.App\": \"3.0.0-alpha1-10727\",` is missing from the published deps.jsons `targets->.NETCoreApp->SDK->dependencies` along with ~5000 other lines. I would guess that somewhere among that difference is something that's preventing controller discovery.\r\n\r\nCC @livarcocc @mkArtakMSFT @Eilon\r\n"},{"Id":"8598911026","Type":"PullRequestEvent","CreatedAt":"2018-11-15T23:30:09","Actor":"dotnet-automerge-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2598","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#2598) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":73,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2018-11-16T05:30:30.0326554Z","RunDurationInMilliseconds":7812}