{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":226,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"},{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853280272","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:33","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Opened issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853278942","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:20","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Closed issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6948770590","Type":"IssuesEvent","CreatedAt":"2017-12-06T02:11:59","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15389","RelatedDescription":"Opened issue \"[ARM64] Test failures with JitStress=2, JitStressRegs=2\" (#15389) at dotnet/coreclr","RelatedBody":"On Windows, in CI:\r\n```\r\nTests.lst=UInt64IConvertibleToDecimal.cmd_2785, , , Smrt00000001, , # CoreMangLib\\cti\\system\\uint64\\UInt64IConvertibleToDecimal\\UInt64IConvertibleToDecimal.cmd  CATS: Pri1;RT;EXPECTED_PASS\r\nTests.lst=b113239.cmd_8781, , , Smrt00000001, , # JIT\\Regression\\CLR-x86-JIT\\V1-M13-RTM\\b113239\\b113239\\b113239.cmd  CATS: EXPECTED_PASS;Pri1\r\nTests.lst=b02762.cmd_8868, , , Smrt00000001, , # JIT\\Regression\\CLR-x86-JIT\\V1.2-M01\\b02762\\b02762\\b02762.cmd  CATS: NEED_TRIAGE;EXPECTED_PASS;Pri1\r\n```\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_windows_nt_jitstress2_jitstressregs2_tst/3/\r\n\r\nOn repro:\r\n```\r\nBEGIN EXECUTION\r\n \"Z:\\gh\\coreclr2\\bin\\tests\\Windows_NT.arm64.checked\\Tests\\Core_Root\\corerun.exe\" UInt64IConvertibleToDecimal.exe \r\nBeginning test case UInt64IConvertibleToDecimal at 12/5/2017 6:06:20 PM\r\nRandom seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n\r\n[Positive]\r\nBeginning scenario: PosTest1:UInt64 MaxValue to Decimal\r\nBeginning scenario: PosTest2:UInt64 MinValue to Decimal\r\nBeginning scenario: PosTest3:Random UInt64 between minValue and MaxValue to Decimal\r\nERROR!!!-005: the ActualResult is not the ExpectResult\r\n\r\nEnding test case at 12/5/2017 6:06:25 PM\r\nFAIL\r\nExpected: 100\r\nActual: 0\r\nEND EXECUTION - FAILED\r\nFAILED\r\nBEGIN EXECUTION\r\n \"Z:\\gh\\coreclr2\\bin\\tests\\Windows_NT.arm64.checked\\Tests\\Core_Root\\corerun.exe\" b113239.exe \r\nOPD2_VAL: -123456781234567\r\nwopd3L: 2241278343\r\nwtmp12: 64423304691192\r\nwtmp13: 64423304691192\r\nwtmp14: 826217536\r\nwtmp22: 10475404271\r\nwtmp23 (must be 826247535): 9416152128\r\nFAILED\r\nExpected: 100\r\nActual: -1\r\nEND EXECUTION - FAILED\r\nFAILED\r\nBEGIN EXECUTION\r\n \"Z:\\gh\\coreclr2\\bin\\tests\\Windows_NT.arm64.checked\\Tests\\Core_Root\\corerun.exe\" b02762.exe \r\nOPD2_VAL: -123456781234567\r\nwopd3L: 2241278343\r\nwtmp12: 64423304691192\r\nwtmp13: 64423304691192\r\nwtmp14: 826217536\r\nwtmp22: 10475404271\r\nwtmp23 (must be 826247535): 9416152128\r\nwtmp23!=826247535\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nFAILED\r\n```"},{"Id":"6948709611","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:50:25","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15388","RelatedDescription":"Opened pull request \"Don't run ARM/ARM64 tests marked LONG_RUNNING\" (#15388) at dotnet/coreclr","RelatedBody":"These tests can time out when run with the default job timeout.\r\nSo, disable them in normal runs."},{"Id":"6948649259","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:29:57","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15371","RelatedDescription":"Merged pull request \"Update CoreClr to preview1-26005-01 (master)\" (#15371) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6948546033","Type":"PullRequestEvent","CreatedAt":"2017-12-06T00:55:41","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15387","RelatedDescription":"Opened pull request \"Adjust BenchI/BenchF paths to account for recent file moves\" (#15387) at dotnet/coreclr","RelatedBody":""},{"Id":"6948487112","Type":"PullRequestEvent","CreatedAt":"2017-12-06T00:36:14","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15386","RelatedDescription":"Opened pull request \"JIT: fix remorph assert in cast long shift optimization\" (#15386) at dotnet/coreclr","RelatedBody":"In some cases reachable from IL we may simplify the shift amount,\r\nwhich sets the MORPHED flag, and then later remorph, leading to an assert\r\nin DEBUG/CHECK builds.\r\n\r\nFix is to clear the MORPHED flag.\r\n\r\nAdded test case."},{"Id":"6948465175","Type":"PullRequestEvent","CreatedAt":"2017-12-06T00:29:04","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15385","RelatedDescription":"Opened pull request \"Enable arm/armlb/arm64 periodic GCStress=C jobs\" (#15385) at dotnet/coreclr","RelatedBody":"Fix #15384\r\n"},{"Id":"6948451177","Type":"IssuesEvent","CreatedAt":"2017-12-06T00:24:24","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15384","RelatedDescription":"Opened issue \"[ARM32/ARM64] Enable periodic GCStress=C jobs\" (#15384) at dotnet/coreclr","RelatedBody":"The following periodic jobs are currently disabled for arm/armlb/arm64, and should be re-enabled.\r\n```\r\n'gcstress0xc':\r\n'gcstress0xc_zapdisable':\r\n'gcstress0xc_zapdisable_jitstress2':\r\n'gcstress0xc_zapdisable_heapverify1':\r\n'gcstress0xc_jitstress1':\r\n'gcstress0xc_jitstress2':\r\n'gcstress0xc_minopts_heapverify1':\r\n```\r\n"},{"Id":"6948322213","Type":"PullRequestEvent","CreatedAt":"2017-12-05T23:43:55","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15383","RelatedDescription":"Opened pull request \"[WIP][DO NOT MERGE] Dummy change - arm64 testing\" (#15383) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6948550617","Type":"IssuesEvent","CreatedAt":"2017-12-06T00:57:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8087","RelatedDescription":"Closed issue \"dotnet publish with \"--self-contained\" and \"--runtime\" doesn't respect \"--output\" parameter\" (#8087) at dotnet/cli","RelatedBody":"_From @lyze237 on November 20, 2017 10:27_\n\nHello,\r\n\r\nI'm currently trying to publish into the `build/publish` directory but when I run the `dotnet publish` command together with `--self-contained` and `--runtime` it won't respect the `--output` parameter:\r\n\r\n    dotnet.exe publish \"./Solution.sln\" --output \"D:/Sources/Solution/build/publish\" --runtime win-x64 --self-contained\r\n\r\nMicrosoft (R) Build Engine version 15.4.8.50001 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Project-> D:\\Sources\\Solution\\Project\\bin\\Debug\\netcoreapp2.0\\win-x64\\project.dll\r\n  Project -> D:\\Sources\\Solution\\build\\publish\\\r\n\r\nThe directorys content after running the command:\r\n\r\n**D:/Sources/Sources/Project/bin/Debug/netcoreapp2.0/win-x64**\r\n\r\n    hostpolicy.dll  project.deps.json  project.exe  project.runtimeconfig.dev.json\r\n    hostfxr.dll    project.dll        project.pdb  project.runtimeconfig.json\r\n\r\n**D:\\Sources\\Solution\\build\\publish**\r\n\r\nLiterally all dlls of the framework and dependencies but no exe.\r\n\r\nCould somebody help?\n\n_Copied from original issue: dotnet/coreclr#15111_"},{"Id":"6948531320","Type":"IssuesEvent","CreatedAt":"2017-12-06T00:50:46","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8133","RelatedDescription":"Closed issue \"Decide and reflect it in test of folder structure of tools inside nupkg\" (#8133) at dotnet/cli","RelatedBody":"In master's test, it is \r\ntools/TFM/mytool.dll\r\nhowever there should be RID in the path \r\n\r\n\r\n"},{"Id":"6948515908","Type":"IssuesEvent","CreatedAt":"2017-12-06T00:45:38","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8153","RelatedDescription":"Closed issue \"Getting an error when running dotnet publish\" (#8153) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nASP.NET Core using the Angular template\r\nNode version: `9.2.0`\r\nNPM version:  `5.5.1`\r\nLinux Ubuntu 16.04\r\nRunning command `sudo dotnet publish`\r\n\r\n## Expected  behavior\r\n\r\nPublish the application to specified path.\r\n\r\n## Actual behavior\r\n\r\nError **MSB3073**: The command \"node node_modules/webpack/bin/webpack.js --env.prod\" exited with code 2.\r\n\r\nERROR in /home/ubuntu/[solution_name]/[project_name]/$$_gendir/ClientApp/app/components/crypto/crypto.component.ngfactory.ts (22,42): Property 'hash' does not exist on type 'string'.\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n## Other information\r\n\r\nUsing the command `sudo dotnet run` enables the application to run when I manually run npm install **BUT it gives me an error of \"The view 'Index' was not found\"** . The error seems to be when putting the application into production mode."},{"Id":"6948428497","Type":"PullRequestEvent","CreatedAt":"2017-12-06T00:16:52","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8170","RelatedDescription":"Merged pull request \"Adding a 'nuget-build' feed.\" (#8170) at dotnet/cli","RelatedBody":"Adding a 'nuget-build' feed; fixing the feed line-up: 'dotnet-core' and 'AspNetMaster'.\r\n\r\nReference: https://github.com/dotnet/cli/pull/8125\r\n"},{"Id":"6947145615","Type":"IssuesEvent","CreatedAt":"2017-12-05T19:14:41","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8066","RelatedDescription":"Closed issue \"[tools] Write install command parser\" (#8066) at dotnet/cli","RelatedBody":""},{"Id":"6947143876","Type":"PullRequestEvent","CreatedAt":"2017-12-05T19:14:19","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8152","RelatedDescription":"Merged pull request \"Dependency Uptake: CLI - part 2\" (#8152) at dotnet/cli","RelatedBody":"**Dependency Uptake: download and import a package version props file.**\r\n\r\n\r\n_dir.props_ \r\nImport the package version props file only if it exists.\r\n\r\n_Follow-up: run-build.sh_ \r\nThe first pass will need the extra args [same as run-build.ps1].\r\n\r\nPlease note: \r\nA rename of dependency version properties in alignment with sample file at: https://dotnetfeed.blob.core.windows.net/orchestrated/20171129-03/orchestration-metadata/PackageVersions.props to follow - 12/1/2017\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6948639364","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:26:43","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/594","RelatedDescription":"Closed pull request \"Update versions.md\" (#594) at dotnet/standard","RelatedBody":"quick link to .NET Framework system requirements to easily check which OS is supported."},{"Id":"6947749059","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:24:29","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/596","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02304-01 (master)\" (#596) at dotnet/standard","RelatedBody":""},{"Id":"6941976997","Type":"PullRequestEvent","CreatedAt":"2017-12-04T22:00:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/596","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02304-01 (master)\" (#596) at dotnet/standard","RelatedBody":""},{"Id":"6934208277","Type":"IssuesEvent","CreatedAt":"2017-12-02T16:58:57","Actor":"jeremyVignelles","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/595","RelatedDescription":"Opened issue \"Add UnmanagedType.LPUTF8Str marshalling in .net standard\" (#595) at dotnet/standard","RelatedBody":"Hi,\r\nI'm currently writing a .net standard wrapper around libvlc, and I need to marshall strings from/to UTF-8.\r\n\r\nFor that, It would be really helpful to have the `UnmanagedType.LPUTF8Str` enumeration available.\r\n\r\nFrom https://apisof.net/catalog/System.Runtime.InteropServices.UnmanagedType.LPUTF8Str, it looks like everything is there in .net core and .net framework.\r\n\r\nWould it be possible to add that UTF8 support in the upcoming releases of .net standard?"},{"Id":"6932629749","Type":"PullRequestEvent","CreatedAt":"2017-12-01T22:41:14","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/593","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02301-01 (master)\" (#593) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6949217643","Type":"IssuesEvent","CreatedAt":"2017-12-06T05:01:58","Actor":"jodavis","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/22479","RelatedDescription":"Reopened issue \"NullReferenceException from System.Uri\" (#22479) at dotnet/corefx","RelatedBody":"Sometimes `Uri.TryCreate` returns an invalid Uri when given a file path with a trailing slash. The `MinimalUriInfoSet` flag is set, but `m_Info` is null, so most of the methods and properties of the Uri throw `NullReferenceException`. The behavior is not deterministic; for the same input I sometimes get a working Uri.\r\n\r\nI can reproduce this (sometimes) with the following code in a unit test:\r\n\r\n```\r\nUri result;\r\nstring input = @\"C:\\users\\jodavis\\Documents\\Visual Studio 2017\\WebApplication1\\WebApplication1\\\";\r\n\r\nUri.TryCreate(input, UriKind.Absolute, out result);\r\n\r\nAssert.AreEqual(\"file://\", result.GetComponents(UriComponents.SchemeAndServer, UriFormat.SafeUnescaped));\r\n```\r\n\r\nIt doesn't reproduce every time. It seems to happen more frequently when built for Release. It also seems more frequent if I step into the `Uri.TryCreate` method; but if I step in any deeper than that, then it never reproduces."},{"Id":"6949217547","Type":"IssuesEvent","CreatedAt":"2017-12-06T05:01:55","Actor":"jodavis","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/22479","RelatedDescription":"Closed issue \"NullReferenceException from System.Uri\" (#22479) at dotnet/corefx","RelatedBody":"Sometimes `Uri.TryCreate` returns an invalid Uri when given a file path with a trailing slash. The `MinimalUriInfoSet` flag is set, but `m_Info` is null, so most of the methods and properties of the Uri throw `NullReferenceException`. The behavior is not deterministic; for the same input I sometimes get a working Uri.\r\n\r\nI can reproduce this (sometimes) with the following code in a unit test:\r\n\r\n```\r\nUri result;\r\nstring input = @\"C:\\users\\jodavis\\Documents\\Visual Studio 2017\\WebApplication1\\WebApplication1\\\";\r\n\r\nUri.TryCreate(input, UriKind.Absolute, out result);\r\n\r\nAssert.AreEqual(\"file://\", result.GetComponents(UriComponents.SchemeAndServer, UriFormat.SafeUnescaped));\r\n```\r\n\r\nIt doesn't reproduce every time. It seems to happen more frequently when built for Release. It also seems more frequent if I step into the `Uri.TryCreate` method; but if I step in any deeper than that, then it never reproduces."},{"Id":"6949121101","Type":"PullRequestEvent","CreatedAt":"2017-12-06T04:20:09","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/25388","RelatedDescription":"Closed pull request \"Add ref/in/out overloads of methods for Vectors and Matrices\" (#25388) at dotnet/corefx","RelatedBody":"Adding overloads to Vector and Matrix types for better memory and performance characteristics.\r\n\r\nFixes #157\r\n\r\n## Notes\r\n1. ~The EOF newline changes came from merging these old commits into the master branch. I wanted to preserve the commit history, so I didn't try fixing up these newline changes.~  FIXED\r\n2. I wasn't excited about all the `#if FEATURE_REF_OVERLOADS` in the tests. But I didn't see a great way to factor them without the `#if`s.  I felt keeping the tests contained together was a high priority, that way the \"expected\" values were only in a single place.  I'm open to better ideas here."},{"Id":"6949103639","Type":"PullRequestEvent","CreatedAt":"2017-12-06T04:12:32","Actor":"JonHanna","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/25744","RelatedDescription":"Opened pull request \"Remove Microsoft.CSharp's BindBinaryAssignmentFailedNullReference\" (#25744) at dotnet/corefx","RelatedBody":"Uncallable as `arguments[0].Type` can never be null (and would have thrown 4 lines previous if it ever was)."},{"Id":"6948684182","Type":"PullRequestEvent","CreatedAt":"2017-12-06T01:41:36","Actor":"JohnTortugo","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/25743","RelatedDescription":"Closed pull request \"Adding a preprocessor check for which C library the compiler is using.\" (#25743) at dotnet/corefx","RelatedBody":"This is related to this issue: https://github.com/dotnet/core-eng/issues/2204\r\n\r\nThe problem was related to the prototype/implementation of the ioctl function in the MUSL library used by the Alpine OS.\r\n\r\nThe Alpine OS uses a C library implementation called MUSL. This library declares/implements the ioctl function as ioctl(int, int, ...). However, most Linux distros use the Glibc which declares/implements the ioctl function as ioctl(int, unsigned long, ...). Since a parameter was used to tell the compiler to consider as error the conversions from wider types (unsigned long) to smaller ones (int) the compilation was halting.\r\n\r\nA preprocessor check was added to check whether the program is being compiled using the Glibc or not."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6949222919","Type":"PullRequestEvent","CreatedAt":"2017-12-06T05:04:06","Actor":"schovanec","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23610","RelatedDescription":"Opened pull request \"UseNullPropagation codefix doesn't recognize `x is null ? null : x.y` pattern\" (#23610) at dotnet/roslyn","RelatedBody":"Fixes #23043. This should handle both the `x is null` and the `ReferenceEquals(x, null)` scenarios.\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"6949096831","Type":"IssuesEvent","CreatedAt":"2017-12-06T04:09:41","Actor":"kentcb","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23609","RelatedDescription":"Opened issue \"Cannot build on Mac\" (#23609) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n2.6.0-beta1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Consume the 2.6.0-beta1 analyzers from a netstandard library\r\n2. Try to build the library on Mac \r\n\r\n**Expected Behavior**:\r\n\r\nIt builds.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nCSC error CS8032: An instance of analyzer Microsoft.NetCore.Analyzers.Runtime.TestForNaNCorrectlyAnalyzer cannot be created from /Users/vagrant/.nuget/packages/microsoft.netcore.analyzers/2.6.0-beta1/analyzers/dotnet/cs/Microsoft.NetCore.Analyzers.dll : Could not load type of field 'Microsoft.NetCore.Analyzers.Runtime.TestForNaNCorrectlyAnalyzer:_comparisonOperators' (5) due to: Could not resolve type with token 0100008c (from typeref, class/assembly Microsoft.CodeAnalysis.Operations.BinaryOperatorKind, Microsoft.CodeAnalysis, Version=2.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35) assembly:Microsoft.CodeAnalysis, Version=2.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind member:<none>. [/Users/vagrant/git/Src/Utility/Utility.csproj]\r\n```"},{"Id":"6949025858","Type":"IssuesEvent","CreatedAt":"2017-12-06T03:42:15","Actor":"yaakov-h","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23603","RelatedDescription":"Closed issue \"IDE0039 potential false-positive\" (#23603) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2017 Enterprise\r\n15.4\r\n15.5\r\n\r\n**Steps to Reproduce**:\r\n\r\nWrite out the following code in the editor:\r\n\r\n```cs\r\nusing System;\r\n\r\nnamespace ScratchForRoslyn\r\n{\r\n\tpublic class Class1\r\n\t{\r\n\t\tstatic void DoSomething(int i)\r\n\t\t{\r\n\t\t\tFunc<object> func = () => SomeFunction();\r\n\r\n\t\t\tif (i < 0)\r\n\t\t\t{\r\n\t\t\t\tFoo(func);\r\n\t\t\t}\r\n\r\n\t\t\tif (i < 5)\r\n\t\t\t{\r\n\t\t\t\tBar(func);\r\n\t\t\t}\r\n\r\n\t\t\tif (i < 10)\r\n\t\t\t{\r\n\t\t\t\tBaz(func);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic void Foo(Func<object> o) => throw null;\r\n\t\tstatic void Bar(Func<object> o) => throw null;\r\n\t\tstatic void Baz(Func<object> o) => throw null;\r\n\r\n\t\tstatic object SomeFunction() => throw null;\r\n\t}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo warnings, errors, or suggestions.\r\n\r\n**Actual Behavior**:\r\n\r\nIDE0039 suggests to change line 9 to a local function, like so:\r\n\r\n```cs\r\nobject func() => SomeFunction();\r\n```\r\n\r\nThis subtle code change results in three `Func<>` objects being created at runtime, rather than just one.\r\n"},{"Id":"6948782613","Type":"IssuesEvent","CreatedAt":"2017-12-06T02:16:09","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23608","RelatedDescription":"Opened issue \"Hang in PackageInstallerService due to NFW when creating a new Console App (.NET Core)\" (#23608) at dotnet/roslyn","RelatedBody":"VS hung while I was creating a Console App (.NET COre):\r\n\r\nStack:\r\n\r\n```\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.NoPumpSyncContext.Wait(System.IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)\tUnknown\r\n \tmscorlib.dll!System.Threading.SynchronizationContext.InvokeWaitMethodHelper(System.Threading.SynchronizationContext syncContext, System.IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tmscorlib.dll!System.Threading.WaitHandle.InternalWaitOne(System.Runtime.InteropServices.SafeHandle waitableSafeHandle, long millisecondsTimeout, bool hasThreadAffinity, bool exitContext)\tUnknown\r\n \tmscorlib.dll!System.Threading.WaitHandle.WaitOne(int millisecondsTimeout, bool exitContext)\tUnknown\r\n \tmscorlib.dll!System.Threading.WaitHandle.WaitOne()\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.PostWatsonReport(int maxReportsPerSession)\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.SessionChannel.WatsonSessionChannel.PostEvent(Microsoft.VisualStudio.Telemetry.TelemetryEvent telemetryEvent)\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.TelemetrySession.PostEvent(Microsoft.VisualStudio.Telemetry.TelemetryEvent telemetryEvent)\tUnknown\r\n \tMicrosoft.VisualStudio.Telemetry.dll!Microsoft.VisualStudio.Telemetry.TelemetrySessionExtensions.PostFault(Microsoft.VisualStudio.Telemetry.TelemetrySession telemetrySession, string eventName, string description, System.Exception exceptionObject, System.Func<Microsoft.VisualStudio.Telemetry.IFaultUtility, int> gatherEventDetails, Microsoft.VisualStudio.Telemetry.TelemetryEventCorrelation[] correlatedWith)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.CodeAnalysis.ErrorReporting.WatsonReporter.Report(string description, System.Exception exception, System.Func<Microsoft.VisualStudio.Telemetry.IFaultUtility, int> callback)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.CodeAnalysis.ErrorReporting.WatsonReporter.Report(System.Exception exception)\tUnknown\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception exception, System.Action<System.Exception> handler)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.ProjectId projectId)\tUnknown\r\n \t[Native to Managed Transition]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task task)\tUnknown\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask<System.Collections.Generic.List<NuGet.VisualStudio.IVsPackageMetadata>>.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run<System.Collections.Generic.List<NuGet.VisualStudio.IVsPackageMetadata>>(System.Func<System.Threading.Tasks.Task<System.Collections.Generic.List<NuGet.VisualStudio.IVsPackageMetadata>>> asyncMethod, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tNuGet.VisualStudio.Implementation.dll!NuGet.VisualStudio.VsPackageInstallerServices.GetInstalledPackages(EnvDTE.Project project)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.PackageServicesProxy.GetInstalledPackages(EnvDTE.Project project)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.ProjectId projectId)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessBatchedChangesOnForeground(System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.OnWorkspaceChanged.AnonymousMethod__0(System.Threading.Tasks.Task _)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.ContinuationTaskFromTask.InnerInvoke()\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.Execute()\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecutionContextCallback(object obj)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteEntry(bool bPreventDoubleExecution)\tUnknown\r\n \tmscorlib.dll!System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Shared.Utilities.SynchronizationContextTaskScheduler.PostCallback(object obj)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(object state)\tUnknown\r\n \tWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(object obj)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n\r\n```\r\n\r\nUnderlying watson:\r\n\r\n```\r\n   ArgumentException: The operation failed as details for project ConsoleApp125 could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.<GetPackagesPathResolverAsync>d__8.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.<>c__DisplayClass10_0.<<GetInstalledPackages>b__0>d.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\n   at Microsoft.VisualStudio.Threading.JoinableTask`1.CompleteOnCurrentThread()\r\n   at Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1 asyncMethod, JoinableTaskCreationOptions creationOptions)\r\n   at NuGet.VisualStudio.VsPackageInstallerServices.GetInstalledPackages(Project project)\r\n   at Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.PackageServicesProxy.GetInstalledPackages(Project project)\r\n   at Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.ProcessProjectChange(Solution solution, ProjectId projectId)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```"},{"Id":"6948632032","Type":"IssuesEvent","CreatedAt":"2017-12-06T01:24:34","Actor":"mattscheffer","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23607","RelatedDescription":"Opened issue \"FixAll for CA2222 doesn't remove all warnings from error list until the next code analysis\" (#23607) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n15.5 RTW\r\n**Steps to Reproduce**:\r\n1. Clone the ScreenToGif repository from https://github.com/NickeManarin/ScreenToGif\r\n2. Open, restore packages and install this package to the solution: https://dotnet.myget.org/feed/roslyn-analyzers/package/nuget/Microsoft.CodeAnalysis.FxCopAnalyzers\r\n3. Enable full solution analysis and run it.\r\n4. In the error list, navigate to one of the CA2222 entries. \r\n5. Preview changes for the selected fix and apply it to the whole solution.\r\n\r\n**Expected Behavior**:\r\nAll warnings are fixed and they disappear from the error list\r\n**Actual Behavior**:\r\nThe warnings were fixed but only half disappeared from the error list. You can still navigate to the remaining ones where you can see they are fixed but the squiggly line is still present yet disjointed from where it originally was. \r\n![image](https://user-images.githubusercontent.com/10537189/33639617-1506e3f2-d9e1-11e7-8f51-af02a05dd988.png)\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6948415091","Type":"PullRequestEvent","CreatedAt":"2017-12-06T00:12:26","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5071","RelatedDescription":"Merged pull request \"Delete unnecessary whitespace\" (#5071) at dotnet/corert","RelatedBody":""},{"Id":"6948164411","Type":"PullRequestEvent","CreatedAt":"2017-12-05T23:00:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5071","RelatedDescription":"Opened pull request \"Delete unnecessary whitespace\" (#5071) at dotnet/corert","RelatedBody":""},{"Id":"6947801190","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:36:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5070","RelatedDescription":"Merged pull request \"Fix for non-Windows package publishing\" (#5070) at dotnet/corert","RelatedBody":"Fixes an issue which is causing Linux and Mac package builds to break.\r\n\r\nAs we're not creating the same .pdbs on all platforms, building packages on Linux and Mac would break with a \"File Not Found\". The workaround isn't necessary outside of Windows. \r\n@jkotas @MichalStrehovsky "},{"Id":"6946903284","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:23:54","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5070","RelatedDescription":"Opened pull request \"Fix for non-Windows package publishing\" (#5070) at dotnet/corert","RelatedBody":"Fixes an issue which is causing Linux and Mac package builds to break.\r\n\r\nAs we're not creating the same .pdbs on all platforms, building packages on Linux and Mac would break with a \"File Not Found\". The workaround isn't necessary outside of Windows. \r\n@jkotas @MichalStrehovsky "},{"Id":"6943562825","Type":"PullRequestEvent","CreatedAt":"2017-12-05T06:45:40","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4876","RelatedDescription":"Merged pull request \"Build runtime and libraries for WebAssembly\" (#4876) at dotnet/corert","RelatedBody":"Changes to make the runtime and libraries build for WebAssembly. That's enough to make \"build wasm\" succeed (although it doesn't run tests due to test script issues). Most changes are stubbing in ifdefs in architecture-sensitive code such as stack unwinding and call conversion. This also includes stub methods for the assembly stubs (using C++ as an \"assembly\" language since we don't have a WASM assembler). Managed libraries mostly needed to be adjusted to treat WASM like Unix.\r\n\r\nFixes #4505, fixes #4506, fixes #4507"},{"Id":"6943562813","Type":"IssuesEvent","CreatedAt":"2017-12-05T06:45:39","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4505","RelatedDescription":"Closed issue \"Compile Runtime with Emscripten\" (#4505) at dotnet/corert","RelatedBody":"In order to start using any runtime features with WebAssembly, the src/Native/Runtime directory will need to compile with [Emscripten](http://kripken.github.io/emscripten-site/). Hopefully most of the code is architecture and platform independent, but there might be some changes needed. For getting started, it's probably fine to exclude or ifdef out problematic sections. "},{"Id":"6943562821","Type":"IssuesEvent","CreatedAt":"2017-12-05T06:45:39","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4507","RelatedDescription":"Closed issue \"Compile System.Private.CoreLib.Native for WebAssembly\" (#4507) at dotnet/corert","RelatedBody":"Many of the features of System.Private.CoreLib will require compiling Native/System.Private.CoreLib.Native for WebAssembly using [Emscripten](http://kripken.github.io/emscripten-site/). Most of the code appears to just use the C standard library, but some of it may need to be modified or ifdefed out for WebAssembly."},{"Id":"6943562817","Type":"IssuesEvent","CreatedAt":"2017-12-05T06:45:39","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4506","RelatedDescription":"Closed issue \"Compile System.Private.CoreLib for WebAssembly\" (#4506) at dotnet/corert","RelatedBody":"System.Private.CoreLib needs to be built for WebAssembly to allow calling into many of its APIs. WebAssembly probably looks a lot like the Unix build flavor, but will probably need some WASM-specific files as well. \r\n\r\nThis likely involves picking the right files from src/System.Private.CoreLib when there are multiple versions. For example, System/Globalization/CompareInfo has .Unix, .Dummy and .Windows versions. For WASM, we could try either the .Unix or .Dummy versions."},{"Id":"6943509010","Type":"PullRequestEvent","CreatedAt":"2017-12-05T06:27:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5068","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5068) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6943197668","Type":"PullRequestEvent","CreatedAt":"2017-12-05T04:24:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5069","RelatedDescription":"Merged pull request \"Override of IsCollectible for runtime types (always false in corert)\" (#5069) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6948339479","Type":"PullRequestEvent","CreatedAt":"2017-12-05T23:49:02","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1795","RelatedDescription":"Merged pull request \"Merge remote-tracking branch 'dotnet/release/2.0.0' into release/2.1.x \" (#1795) at dotnet/sdk","RelatedBody":""},{"Id":"6948111554","Type":"PullRequestEvent","CreatedAt":"2017-12-05T22:46:31","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1796","RelatedDescription":"Opened pull request \"First draft enabling performance tests...\" (#1796) at dotnet/sdk","RelatedBody":""},{"Id":"6946946230","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:32:56","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1795","RelatedDescription":"Opened pull request \"Merge remote-tracking branch 'dotnet/release/2.0.0' into release/2.1.x \" (#1795) at dotnet/sdk","RelatedBody":""},{"Id":"6943808134","Type":"PullRequestEvent","CreatedAt":"2017-12-05T08:00:42","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1794","RelatedDescription":"Opened pull request \"Merge release/15.5 to master\" (#1794) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/15.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/15.5-to-master-20171205-080040\ngit reset --hard upstream/master\ngit merge upstream/release/15.5\n# Fix merge conflicts\ngit commit\ngit push merges/release/15.5-to-master-20171205-080040 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6943808030","Type":"PullRequestEvent","CreatedAt":"2017-12-05T08:00:40","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1793","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/15.5\" (#1793) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171205-080039\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171205-080039 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6940388335","Type":"IssuesEvent","CreatedAt":"2017-12-04T16:34:07","Actor":"Pilchie","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1787","RelatedDescription":"Closed issue \"FastUpToDate always complains not up to date\" (#1787) at dotnet/sdk","RelatedBody":"`MyProject.runtimeconfig.json` won't change if not modifying the target framework, and `FastUpToDate` says it's an output and wrote earlier than input.\r\nBy the way, the build log uses UTC time. Consider to print local time please."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"935927507911524352","CreatedAt":"2017-11-29T17:44:41+00:00","UserScreenname":"dotnet","Text":"Who doesn’t? Purple. All. The. Things. https://t.co/65KzPWuvbK","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":29,"FavoriteCount":4,"RawContent":null},{"Id":"933058673206730752","CreatedAt":"2017-11-21T19:44:57+00:00","UserScreenname":"dotnet","Text":".NET Core Alpine Image Ready for Testing https://t.co/SsQtOGuAFD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":212,"FavoriteCount":155,"RawContent":null},{"Id":"932677600715071488","CreatedAt":"2017-11-20T18:30:42+00:00","UserScreenname":"dotnet","Text":"Looking to migrate your existing .NET apps to the cloud but need our help? Fill out this survey and let us know: https://t.co/g6xbbWkX93","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null},{"Id":"931580871437635584","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"dotnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/nXoIDLCubn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-12-06T05:30:22.1721528Z","RunDurationInMilliseconds":7734}