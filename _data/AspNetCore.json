{"Data":{"Blog":{"FeedItems":[{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7620247478","Type":"IssuesEvent","CreatedAt":"2018-05-03T01:25:28","Actor":"qazq","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3111","RelatedDescription":"Closed issue \"[Question] Why WebSocket.SendAsync() doesn't send asynchronously\" (#3111) at aspnet/Home","RelatedBody":"```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 14\r\n```\r\n\r\nBut if I add Task.Delay(1)\r\n\r\n```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await Task.Delay(1);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 15\r\n```\r\n\r\nWhy SendAsync() doesn't switch to another thread to send data?"},{"Id":"7614774401","Type":"IssuesEvent","CreatedAt":"2018-05-02T05:13:38","Actor":"qazq","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3111","RelatedDescription":"Opened issue \"[Question] Why WebSocket.SendAsync() doesn't send asynchronously\" (#3111) at aspnet/Home","RelatedBody":"```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 14\r\n```\r\n\r\nBut if I add Task.Delay(1)\r\n\r\n```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await Task.Delay(1);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 15\r\n```\r\n\r\nWhy SendAsync() doesn't switch to another thread to send data?"},{"Id":"7613480120","Type":"IssuesEvent","CreatedAt":"2018-05-01T21:23:37","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3034","RelatedDescription":"Closed issue \"Flaky test: System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory\" (#3034) at aspnet/Home","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=442272&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win10Universe#testNameId1329483692832033125) sometimes with the following error:\r\n\r\n```\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-Keys' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 89\r\n======= Failed test run #2 ==========\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-KeysTemp' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 55\r\n```\r\n\r\nFuture instances of this failure can be tracked [here](http://aspnetci/project.html?projectId=XPlat&buildTypeId=&tab=testDetails&testNameId=1329483692832033125&order=TEST_STATUS_DESC&branch_XPlat=__all_branches__&itemsCount=50)."},{"Id":"7609198841","Type":"IssuesEvent","CreatedAt":"2018-04-30T23:03:44","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3110","RelatedDescription":"Opened issue \"Check for usages of PhysicalFileProvider in all repos for leaks\" (#3110) at aspnet/Home","RelatedBody":"Related to issue: https://github.com/aspnet/Mvc/issues/7696\r\n\r\nRepos where we instantiate the PhysicalFileProvider currently:\r\n- Hosting\r\n- Configuration\r\n\r\n**Repro:**\r\nYou should see the memory increasing rapidly when you run the below app. Un-comment the line which uses the finalizer to see the memory usage being stable.\r\n```c#\r\nusing Microsoft.Extensions.FileProviders;\r\nusing Microsoft.Extensions.Primitives;\r\nusing System;\r\nusing System.Diagnostics;\r\n\r\nnamespace PhysicalFileProviderLeakInvestigation\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Process Id:\" + Process.GetCurrentProcess().Id);\r\n            Console.WriteLine(\"Enter any key to start watching folders...\");\r\n            Console.ReadKey();\r\n\r\n            while (true)\r\n            {\r\n                var fp = new PhysicalFileProvider(@\"c:\\github\\mvc\");\r\n                //var fp = new FinalizingPhysicalFileProvider(new PhysicalFileProvider(@\"c:\\github\\mvc\"));\r\n                fp.Watch(\"*.*\");\r\n            }\r\n        }\r\n    }\r\n\r\n    class FinalizingPhysicalFileProvider : IFileProvider\r\n    {\r\n        private readonly PhysicalFileProvider _physicalFileProvider;\r\n\r\n        public FinalizingPhysicalFileProvider(PhysicalFileProvider physicalFileProvider)\r\n        {\r\n            _physicalFileProvider = physicalFileProvider;\r\n        }\r\n\r\n        public IDirectoryContents GetDirectoryContents(string subpath)\r\n        {\r\n            return _physicalFileProvider.GetDirectoryContents(subpath);\r\n        }\r\n\r\n        public IFileInfo GetFileInfo(string subpath)\r\n        {\r\n            return _physicalFileProvider.GetFileInfo(subpath);\r\n        }\r\n\r\n        public IChangeToken Watch(string filter)\r\n        {\r\n            return _physicalFileProvider.Watch(filter);\r\n        }\r\n\r\n        ~FinalizingPhysicalFileProvider()\r\n        {\r\n            _physicalFileProvider.Dispose();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc @Tratcher "},{"Id":"7609016281","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:09:22","Actor":"ryanbrandenburg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3080","RelatedDescription":"Closed issue \"Create a sample to showcase a EF based locatization\" (#3080) at aspnet/Home","RelatedBody":""}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7620727161","Type":"IssuesEvent","CreatedAt":"2018-05-03T04:55:17","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2135","RelatedDescription":"Closed issue \"C# Client: Don't hop off the event loop for message dispatching\" (#2135) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/pull/1952\r\n\r\nHopping off the event loop for every message is very costly. We should stay on the event loop and document that users should be careful of blocking in their callbacks."},{"Id":"7620726013","Type":"PullRequestEvent","CreatedAt":"2018-05-03T04:54:43","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2194","RelatedDescription":"Merged pull request \"Port C# client perf fix to release (#2189)\" (#2194) at aspnet/SignalR","RelatedBody":""},{"Id":"7620724417","Type":"PullRequestEvent","CreatedAt":"2018-05-03T04:53:57","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2194","RelatedDescription":"Opened pull request \"Port C# client perf fix to release (#2189)\" (#2194) at aspnet/SignalR","RelatedBody":""},{"Id":"7620723857","Type":"PullRequestEvent","CreatedAt":"2018-05-03T04:53:40","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2189","RelatedDescription":"Merged pull request \"Port C# client perf fix to release\" (#2189) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/2135"},{"Id":"7620693681","Type":"IssuesEvent","CreatedAt":"2018-05-03T04:39:04","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/782","RelatedDescription":"Closed issue \"Are large data transfers supported?\" (#782) at aspnet/SignalR","RelatedBody":"In the previous (or current I guess) implementation of SignalR the hub framework was not recommend for doing any sort of large data transfers. Instead you would signal a client/server and then they would call a web api/REST to do anything that was related to large transfers of data.\r\n\r\nI am wondering for this upcoming signalr asp.net core version what large data transfers would look like? Is it still not recommended and we should continue to just signal and call some web api/REST endpoint out of band?\r\n\r\nI did not see any existing Issue related to this topic so hopefully I have not missed an existing answers. thank you"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7619673625","Type":"IssuesEvent","CreatedAt":"2018-05-02T22:07:47","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6187","RelatedDescription":"Closed issue \"New added files for an ASP.NET MVC Core wizard projects (Visual Studio) are created with diferent encodings.\" (#6187) at aspnet/Mvc","RelatedBody":"Default files created from ASP.NET MVC Core  are unicode. However new added files are created in western encoding. This way, characters from a later created view are misencoded by the razor renderer.\r\n\r\nfor instance:\r\n\r\nMyPartial.cshtml: ` á á á  ` (later added file) \r\n\r\nMyView.cshtml:  ` á á á @Html.Partial(\"_MyPartial\") `  ( file created from wizard )\r\n\r\nThe final output is rendered as ` á á á � � � `\r\n"},{"Id":"7619671755","Type":"IssuesEvent","CreatedAt":"2018-05-02T22:07:16","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6193","RelatedDescription":"Closed issue \"ApiControllerActionSelector equivalent in Asp .net MVC core\" (#6193) at aspnet/Mvc","RelatedBody":"hi,\r\nwe are migrating from web api to asp .net mvc core , i had an action selector in web api , in which if anyware in url \"$\" symbol exist we used to invoke a specific method in controller.\r\nthis functionality we achieved in web api using ApiControllerActionSelector below was the code to do same in web api -\r\n\r\n```\r\npublic override HttpActionDescriptor SelectAction(HttpControllerContext controllerContext) {\r\n           string urlDecode = HttpUtility.UrlDecode(\r\n               controllerContext.Request.RequestUri.ToString());\r\n           if (urlDecode != null && urlDecode.Contains(\"$\")) {\r\n               if (controllerContext.Request.Method == HttpMethod.Post) {\r\n                   MethodInfo method = controllerContext.ControllerDescriptor.ControllerType\r\n                       .GetMethod(\r\n                           \"PostCustomOperation\");\r\n                   return\r\n                       new ReflectedHttpActionDescriptor(\r\n                           controllerContext.ControllerDescriptor, method);\r\n               }\r\n               if (controllerContext.Request.Method == HttpMethod.Get) {\r\n                   MethodInfo method = controllerContext.ControllerDescriptor.ControllerType\r\n                       .GetMethod(\r\n                           \"GetCustomOperation\");\r\n                   return\r\n                       new ReflectedHttpActionDescriptor(\r\n                           controllerContext.ControllerDescriptor, method);\r\n               }\r\n           }\r\n           HttpActionDescriptor result = base.SelectAction(controllerContext);\r\n           return result;\r\n       }\r\n```\r\nI am not able to find an equivalent way to do same in Asp .net mvc core , i tried implementing IRouter but in that we have to specify controller as well but that is not known to me.\r\nAny suggestion on how to achieve same or is it not possible to do so in Asp.net MVC core?"},{"Id":"7619667192","Type":"IssuesEvent","CreatedAt":"2018-05-02T22:06:05","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6226","RelatedDescription":"Closed issue \"Could not load file or assembly 'System.Reflection.Metadata, Version=1.4.1.0  (called from Diagnostics 1.1.1)\" (#6226) at aspnet/Mvc","RelatedBody":"Hi,\r\n\r\nI'm using AspNetCore.Mvc 1.1.2.\r\nI tried everything but can't solve this error (when i go to localhost:5000)\r\n```\r\nSystem.IO.FileLoadException: Could not load file or assembly 'System.Reflection.Metadata, Version=1.4.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nFile name: 'System.Reflection.Metadata, Version=1.4.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at Microsoft.Extensions.StackTrace.Sources.PortablePdbReader..ctor()\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = System.Reflection.Metadata, Version=1.4.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/Users/gebruiker/Documents/projects/QDV TRUNK_2/QDV_WebServer/bin/Debug/net452/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : Microsoft.AspNetCore.Diagnostics, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60.\r\n===\r\n```\r\n\r\nThanks"},{"Id":"7619656557","Type":"IssuesEvent","CreatedAt":"2018-05-02T22:03:13","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6278","RelatedDescription":"Closed issue \"Updating from ASP.NET Core 1.1.1 to 1.1.2 requires host upgrade?\" (#6278) at aspnet/Mvc","RelatedBody":"This is more of a question than an issue, but I haven't found an answer anywhere and SO didn't seem the right place for it.\r\n\r\nI remember the talks saying .net core would allow simpler upgrades to the app without requiring server changes because all dependencies are in the app folder.\r\n\r\nIt just happened that I upgraded a very simple website (no dependencies other than the framework) from ASP.NET Core 1.1.1 to 1.1.2 and I wasn't able to make the app run without reinstalling the hosting component to the new version on Windows Server. In fact, every new minor version of ASP.NET Core required an upgrade to the server as far as I can remember.\r\n\r\nSo first, should a patch version require a server component upgrade?\r\nAnd second, are we always going to require a host upgrade to update asp.net core apps or is this a temporary thing?"},{"Id":"7619650295","Type":"IssuesEvent","CreatedAt":"2018-05-02T22:01:42","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6291","RelatedDescription":"Closed issue \"Razor views cannot use typed base class with typed models\" (#6291) at aspnet/Mvc","RelatedBody":"Based on https://github.com/aspnet/Mvc/issues/5397#issuecomment-278992344\r\n\r\nConsider a Razor file with an `@inherits` with a closed generic base type: e.g.  `@inherits Microsoft.AspNetCore.Mvc.Razor.RazorPage<MyModel>`. This fails to compile with \r\n```C#\r\nProperty 'ViewData' is of type 'Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1[[MyModel]]', but this method requires a value of type 'Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1[[System.Object, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.\r\n Parameter name: viewContext\r\n```\r\n\r\nThe issue here is that in the absence of an `@model` keyword, the HtmlHelper is injected with the default model viz `dynamic`:\r\n\r\n```C#\r\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }\r\n```\r\n\r\n"},{"Id":"7619634935","Type":"IssuesEvent","CreatedAt":"2018-05-02T21:58:05","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6668","RelatedDescription":"Closed issue \"`ValidationSummaryTagHelper` should not suppress output\" (#6668) at aspnet/Mvc","RelatedBody":"The `ValidationSummaryTagHelper` should act more like other in-box tag helpers. Specifically, `<div asp-validation-summary=\"ModelOnly\">content</div>` should generate `<div>content</div>` instead of suppressing the `<div>` element and its content.\r\n\r\nFrom https://github.com/aspnet/Mvc/issues/6638#issuecomment-322689648:\r\n> __Omitting a tag I've explicitly asked for is really unhelpful.__\r\n\r\nMVC Core helpers do exactly this in a few cases. For HTML helpers, the behaviour matches earlier releases e.g. MVC 5.2.3 and likely shouldn't change now. For tag helpers, it's more about the common substrate than back-compatibility though MVC Core 1.x has been out for a while now.\r\n\r\nThe behaviour of tag helpers is inconsistent in cases similar to those where HTML helpers would do nothing at all:\r\n- `<div asp-validation-summary=\"ModelOnly\">content</div>` generates nothing (suppresses output) when client-side validation is disabled or the model itself is valid\r\n- Oddly, `<div asp-validation-summary=\"None\">content</div>` generates `<div>content</div>`\r\n- `<label asp-for=\"PropertyWithEmptyDisplayName\">content</label>` generates `<label>content</label>`. (As noted in #6638, generation here should include the `for` attribute.)\r\n- `<span asp-validation-for=\"ValidProperty\">content</span>` generates `<span>content</span>`\r\n\r\n---- \r\n\r\nThis issue should _not_ be broadened to apply to all in-box tag helpers. The `<condition>` and `<environment>` tag helpers must suppress output to work at all. The `<cache>` and `<distributed-cache>` tag helpers call `SuppressOutput()` to remove the elements but element bodies are not suppressed."},{"Id":"7619566698","Type":"IssuesEvent","CreatedAt":"2018-05-02T21:42:01","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6986","RelatedDescription":"Closed issue \"Add vary-by-culture Attribute to Cache Tag Helpers\" (#6986) at aspnet/Mvc","RelatedBody":"I have numerous Views with large sections of markup that do not change unless the user changes their language preferences.  I prefer the CookieRequestCultureProvider to handle language selection, so when I want to cache these Views, I have to use code like below.  This feels quite verbose to me, for what I imagine is a fairly common use case in production apps; namely, caching by request culture.\r\n\r\n```html\r\n<cache vary-by-cookie=\"@CookieRequestCultureProvider.DefaultCookieName\">\r\n    <!-- Other markup... -->\r\n</cache>\r\n```\r\n\r\nIt would be great if the `<cache>` element included some kind of `vary-by-culture` attribute out of the box which, turning the above code into:\r\n\r\n```html\r\n<cache vary-by-culture=\"true\">\r\n    <!-- Other markup... -->\r\n</cache>\r\n```\r\n\r\nNot only is this syntax cleaner, but it would also be `RequestCultureProvider`-agnostic, I think, as the caching mechanism could read the request culture from `HttpContext`'s `IRequestCultureFeature`, which could be set by query string, cookie, database, or whatever.  The only debate is probably whether to use Culture or UI Culture.  I would err on the side of UI Culture, but perhaps the cache key could be some kind of concatenation of both?"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7615325993","Type":"IssuesEvent","CreatedAt":"2018-05-02T08:01:40","Actor":"Externaluse","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1779","RelatedDescription":"Opened issue \"SignInManager: XML Doc wrong description of parameter\" (#1779) at aspnet/Identity","RelatedBody":"Just stumbled across this\r\n\r\n    /// <param name=\"logger\">The logger used to log messages, warnings and errors.</param>\r\n    /// <param name=\"schemes\">The logger used to log messages, warnings and errors.</param>\r\nin\r\nhttps://github.com/aspnet/Identity/blob/15a82284ce52dc8932c49f3246763f3ea05a3568/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L33\r\n\r\nThe description for schemes is wrong."},{"Id":"7613825780","Type":"PullRequestEvent","CreatedAt":"2018-05-01T22:58:45","Actor":"JunTaoLuo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1754","RelatedDescription":"Closed pull request \"Simplify test logging with new framework\" (#1754) at aspnet/Identity","RelatedBody":"Now that we have improved the infrastructure, the tests can be cleaned up."},{"Id":"7612988286","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:33:14","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1778","RelatedDescription":"Merged pull request \"AllowAnonymous for external login providers and confirm email (#1769)\" (#1778) at aspnet/Identity","RelatedBody":"Addresses #1762"},{"Id":"7612987021","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:32:55","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1778","RelatedDescription":"Opened pull request \"AllowAnonymous for external login providers and confirm email (#1769)\" (#1778) at aspnet/Identity","RelatedBody":"Addresses #1762"},{"Id":"7612978569","Type":"IssuesEvent","CreatedAt":"2018-05-01T19:30:59","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1762","RelatedDescription":"Closed issue \"External login provider and confirm email page are not accessible when using global authorize filter\" (#1762) at aspnet/Identity","RelatedBody":"When an external login provider is configured, and a global authorize filter is applied, clicking the button to navigate to the provider (say Twitter sign in) redirects back to the current Login page.\r\n\r\nTo allow anonymous users to log in to an external provider while using a global authorize filter, the user can scaffold the `ExternalLogin.cshtml.cs` page and add the `AllowAnonymous` attribute to the `ExternalLoginModel`.\r\n\r\nPlease note, if this is something we want to allow by default, a corresponding change must also be made in aspnet/Scaffolding repo."},{"Id":"7612977767","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:30:47","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1769","RelatedDescription":"Merged pull request \"AllowAnonymous for external login providers and confirm email\" (#1769) at aspnet/Identity","RelatedBody":"Addresses #1762\r\n\r\nWhile using the global authorization filter, `ConfirmEmail` is not accessible when clicking the verification email link (when logged out). So adding the attribute to it as well.\r\n\r\n"},{"Id":"7612736022","Type":"IssuesEvent","CreatedAt":"2018-05-01T18:37:37","Actor":"smoro88","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1776","RelatedDescription":"Closed issue \"Create UserManager in Static Class\" (#1776) at aspnet/Identity","RelatedBody":"I am trying to get a list of Users back from UserManager but I am having issues understanding how this is accomplished.  \r\n\r\npublic class Util\r\n    {\r\n\t\tprivate readonly UserManager<ApplicationUser> _userManager;\r\n     \r\n\t\tpublic Util(UserManager<ApplicationUser> userManager)\r\n        {\r\n            _userManager = userManager;\r\n        }\r\n        \r\n\t\tpublic  List<ApplicationUser> GetAllUserList()\r\n        {\r\n            var users = _userManager.Users.ToAsyncEnumerable().ToList().Result;\r\n            return users;\r\n        }\r\n\r\n    }\r\n\r\nHowever when I create a instance of the Utility class it wants me to pass in a UserManager context and I thought DI would take care of this.  \r\n\r\nThoughts\r\nSteve"},{"Id":"7608721194","Type":"PullRequestEvent","CreatedAt":"2018-04-30T20:58:55","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1777","RelatedDescription":"Closed pull request \"Added SignInManager interface\" (#1777) at aspnet/Identity","RelatedBody":"It is terrible to mock SignInManager without an interface."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7618164933","Type":"IssuesEvent","CreatedAt":"2018-05-02T16:59:16","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2507","RelatedDescription":"Closed issue \"Flaky Test: ResponseTests.Sending100ContinueDoesNotStartResponse\" (#2507) at aspnet/KestrelHttpServer","RelatedBody":"```\r\nAssert.Contains() Failure\r\nNot found: (filter expression)\r\nIn value:  ConcurrentQueue<LogMessage> [LogMessage { EventId = 3, Exception = null, LogLevel = Debug, Message = \"Hosting starting\" }, LogMessage { EventId = 4, Exception = null, LogLevel = Debug, Message = \"Hosting started\" }, LogMessage { EventId = 0, Exception = null, LogLevel = Debug, Message = \"Loaded hosting startup assembly Libuv.FunctionalTe\"... }, LogMessage { EventId = ConnectionStart, Exception = null, LogLevel = Debug, Message = \"Connection id \\\"0HLD6AI9FD4SE\\\" started.\" }, LogMessage { EventId = 1, Exception = null, LogLevel = Information, Message = \"Request starting HTTP/1.1 POST http:///  \" }, ...]\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<Sending100ContinueDoesNotStartResponse>d__46.MoveNext() in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 1685\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nhttp://aspnetci/viewLog.html?buildId=451859&tab=buildResultsDiv&buildTypeId=Lite_KestrelStressTest"},{"Id":"7618156336","Type":"PullRequestEvent","CreatedAt":"2018-05-02T16:57:38","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2538","RelatedDescription":"Merged pull request \"Fix Sending100ContinueDoesNotStartResponse\" (#2538) at aspnet/KestrelHttpServer","RelatedBody":" #2507 Cherry picked the fix from dev (#2511)"},{"Id":"7618020159","Type":"PullRequestEvent","CreatedAt":"2018-05-02T16:31:42","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2538","RelatedDescription":"Opened pull request \"Fix Sending100ContinueDoesNotStartResponse\" (#2538) at aspnet/KestrelHttpServer","RelatedBody":" #2507 Cherry picked the fix from dev (#2511)"},{"Id":"7617975462","Type":"IssuesEvent","CreatedAt":"2018-05-02T16:23:30","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2517","RelatedDescription":"Closed issue \"Flaky test: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.IgnoreNullHeaderValues\" (#2517) at aspnet/KestrelHttpServer","RelatedBody":"9/10 of the theories for this test fail sporadically.\r\n\r\nThe failures are limited to MacOS & High Sierra.\r\n\r\nThis started on 4/13 and is still failing today on 4/23.\r\n\r\nThere were no test changes then, but there was a product change https://github.com/aspnet/KestrelHttpServer/commit/e30a02cee5ff4919a3be82bf53bab6bb5146e7de that suspicously related.\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException : A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<IgnoreNullHeaderValues>d__3.MoveNext() in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 126\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n"},{"Id":"7617961444","Type":"PullRequestEvent","CreatedAt":"2018-05-02T16:20:54","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2537","RelatedDescription":"Merged pull request \"Remove netcoreapp2.0 test coverage\" (#2537) at aspnet/KestrelHttpServer","RelatedBody":"#2517 A series of tests have been consistently failing on netcoreapp2.0 on Mac due to an HttpClient issue. We're already planning to remove netcoreapp2.0 test coverage for 2.2.0 so I'm preemptively removing it here to get rid of the failures."},{"Id":"7617861456","Type":"PullRequestEvent","CreatedAt":"2018-05-02T16:03:09","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2537","RelatedDescription":"Opened pull request \"Remove netcoreapp2.0 test coverage\" (#2537) at aspnet/KestrelHttpServer","RelatedBody":"#2517 A series of tests have been consistently failing on netcoreapp2.0 on Mac due to an HttpClient issue. We're already planning to remove netcoreapp2.0 test coverage for 2.2.0 so I'm preemptively removing it here to get rid of the failures."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7619905170","Type":"IssuesEvent","CreatedAt":"2018-05-02T23:15:44","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2320","RelatedDescription":"Closed issue \"Flaky test: WritePidFile_WorksAsExpected\" (#2320) at aspnet/Razor","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=458610&buildTypeId=Releases_21Public_HighSierraOsxUniverse) occasionally with the following error:\r\n```\r\nAssert.Equal() Failure\r\nExpected: String[] [\"86330\", \"rzc\", \"/Users/aspnetci/Documents/buildAgent/work/33bdfc1c\"..., \"3db88ac6-de92-4889-b937-0a4f414b3564\"]\r\nActual:   String[] [\"\"]\r\n   at Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected() in /_/test/Microsoft.AspNetCore.Razor.Tools.Test/ServerCommandTest.cs:line 20\r\n```"},{"Id":"7619842707","Type":"PullRequestEvent","CreatedAt":"2018-05-02T22:55:53","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2329","RelatedDescription":"Merged pull request \"Skip flaky test\" (#2329) at aspnet/Razor","RelatedBody":"#2320 \r\n\r\n@ryanbrandenburg FYI"},{"Id":"7619804033","Type":"PullRequestEvent","CreatedAt":"2018-05-02T22:44:06","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2329","RelatedDescription":"Opened pull request \"Skip flaky test\" (#2329) at aspnet/Razor","RelatedBody":"#2320 \r\n\r\n@ryanbrandenburg FYI"},{"Id":"7619705464","Type":"PullRequestEvent","CreatedAt":"2018-05-02T22:16:14","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2328","RelatedDescription":"Opened pull request \"Fixes for the document window state\" (#2328) at aspnet/Razor","RelatedBody":""},{"Id":"7619519591","Type":"IssuesEvent","CreatedAt":"2018-05-02T21:31:07","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2193","RelatedDescription":"Closed issue \"Add a way to flow Razor editor parsing errors to the IDE\" (#2193) at aspnet/Razor","RelatedBody":"Follow up to https://github.com/aspnet/Razor/pull/2192#discussion_r175602613\r\n\r\nThis is useful for cases like when we want to report an error if we can't read a view import. "},{"Id":"7619423880","Type":"IssuesEvent","CreatedAt":"2018-05-02T21:09:58","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2321","RelatedDescription":"Reopened issue \"Referenced RCL project is built even though there are no recent changes to it\" (#2321) at aspnet/Razor","RelatedBody":"Repro:\r\n- Create a RP web application\r\n- Add a RCL project to the solution | reference this RCL project from the RP application\r\n- Build RP application\r\n- Update the RCL project's Page1.cshtml's title to something else\r\n- Build RP application (this is expected)\r\n- Build RP application again (you see that the RCL project is being built again even though there aren't any changes)\r\n\r\n**Build output (in sequence...check the title for more info):**\r\nhttps://gist.github.com/kichalla/6a099b89d4aad043a3971f3b43b4f157\r\nhttps://gist.github.com/kichalla/a9e9a5eb952f7adde54e568ef79b57c1\r\nhttps://gist.github.com/kichalla/d0f4337bad4137934362566cd436888b\r\n\r\n**When I enabled Info level logging, I see the following output:**\r\n```\r\n1>FastUpToDate: Latest write timestamp on input is 5/1/2018 11:18:25 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\Areas\\MyFeature\\Pages\\Page1.cshtml'. (RCL)\r\n1>FastUpToDate: Earliest write timestamp on output is 5/1/2018 11:16:45 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll'. (RCL)\r\n1>FastUpToDate: Output is newer than input, not up to date. (RCL)\r\n1>FastUpToDate: Project is not up to date. (RCL)\r\n1>------ Build started: Project: RCL, Configuration: Debug Any CPU ------\r\n1>You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452\r\n1>RCL -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll\r\n1>RCL -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.Views.dll\r\n2>FastUpToDate: Latest write timestamp on input is 5/1/2018 11:16:45 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll'. (WebApplication28)\r\n2>FastUpToDate: Earliest write timestamp on output is 5/1/2018 11:16:52 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\bin\\Debug\\netcoreapp2.1\\WebApplication28.dll'. (WebApplication28)\r\n2>FastUpToDate: Latest write timestamp on input marker is 5/1/2018 11:18:30 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\obj\\Debug\\netstandard2.0\\RCL.csproj.CopyComplete'. (WebApplication28)\r\n2>FastUpToDate: Write timestamp on output marker is 5/1/2018 11:16:57 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\obj\\Debug\\netcoreapp2.1\\WebApplication28.csproj.CopyComplete'. (WebApplication28)\r\n2>FastUpToDate: Input marker is newer than output marker, not up to date. (WebApplication28)\r\n2>FastUpToDate: Project is not up to date. (WebApplication28)\r\n2>------ Build started: Project: WebApplication28, Configuration: Debug Any CPU ------\r\n2>WebApplication28 -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\bin\\Debug\\netcoreapp2.1\\WebApplication28.dll\r\n2>WebApplication28 -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\bin\\Debug\\netcoreapp2.1\\WebApplication28.Views.dll\r\n========== Build: 2 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r\n\r\n```\r\n\r\nNotice the following block...can it say 'Latest write timestamp' on both these lines? and also it should be input is newer than output?\r\n1>FastUpToDate: **Latest** write timestamp on input is 5/1/2018 11:18:25 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\Areas\\MyFeature\\Pages\\Page1.cshtml'. (RCL)\r\n1>FastUpToDate: **Earliest** write timestamp on output is 5/1/2018 11:16:45 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll'. (RCL)\r\n1>FastUpToDate: **Output is newer than input, not up to date.** (RCL)\r\n1>FastUpToDate: Project is not up to date. (RCL)\r\n\r\ncc @pranavkm "},{"Id":"7619423541","Type":"IssuesEvent","CreatedAt":"2018-05-02T21:09:54","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2321","RelatedDescription":"Closed issue \"Referenced RCL project is built even though there are no recent changes to it\" (#2321) at aspnet/Razor","RelatedBody":"Repro:\r\n- Create a RP web application\r\n- Add a RCL project to the solution | reference this RCL project from the RP application\r\n- Build RP application\r\n- Update the RCL project's Page1.cshtml's title to something else\r\n- Build RP application (this is expected)\r\n- Build RP application again (you see that the RCL project is being built again even though there aren't any changes)\r\n\r\n**Build output (in sequence...check the title for more info):**\r\nhttps://gist.github.com/kichalla/6a099b89d4aad043a3971f3b43b4f157\r\nhttps://gist.github.com/kichalla/a9e9a5eb952f7adde54e568ef79b57c1\r\nhttps://gist.github.com/kichalla/d0f4337bad4137934362566cd436888b\r\n\r\n**When I enabled Info level logging, I see the following output:**\r\n```\r\n1>FastUpToDate: Latest write timestamp on input is 5/1/2018 11:18:25 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\Areas\\MyFeature\\Pages\\Page1.cshtml'. (RCL)\r\n1>FastUpToDate: Earliest write timestamp on output is 5/1/2018 11:16:45 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll'. (RCL)\r\n1>FastUpToDate: Output is newer than input, not up to date. (RCL)\r\n1>FastUpToDate: Project is not up to date. (RCL)\r\n1>------ Build started: Project: RCL, Configuration: Debug Any CPU ------\r\n1>You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452\r\n1>RCL -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll\r\n1>RCL -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.Views.dll\r\n2>FastUpToDate: Latest write timestamp on input is 5/1/2018 11:16:45 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll'. (WebApplication28)\r\n2>FastUpToDate: Earliest write timestamp on output is 5/1/2018 11:16:52 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\bin\\Debug\\netcoreapp2.1\\WebApplication28.dll'. (WebApplication28)\r\n2>FastUpToDate: Latest write timestamp on input marker is 5/1/2018 11:18:30 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\obj\\Debug\\netstandard2.0\\RCL.csproj.CopyComplete'. (WebApplication28)\r\n2>FastUpToDate: Write timestamp on output marker is 5/1/2018 11:16:57 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\obj\\Debug\\netcoreapp2.1\\WebApplication28.csproj.CopyComplete'. (WebApplication28)\r\n2>FastUpToDate: Input marker is newer than output marker, not up to date. (WebApplication28)\r\n2>FastUpToDate: Project is not up to date. (WebApplication28)\r\n2>------ Build started: Project: WebApplication28, Configuration: Debug Any CPU ------\r\n2>WebApplication28 -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\bin\\Debug\\netcoreapp2.1\\WebApplication28.dll\r\n2>WebApplication28 -> C:\\Users\\kichalla\\source\\repos\\WebApplication28\\WebApplication28\\bin\\Debug\\netcoreapp2.1\\WebApplication28.Views.dll\r\n========== Build: 2 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r\n\r\n```\r\n\r\nNotice the following block...can it say 'Latest write timestamp' on both these lines? and also it should be input is newer than output?\r\n1>FastUpToDate: **Latest** write timestamp on input is 5/1/2018 11:18:25 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\Areas\\MyFeature\\Pages\\Page1.cshtml'. (RCL)\r\n1>FastUpToDate: **Earliest** write timestamp on output is 5/1/2018 11:16:45 AM on 'C:\\Users\\kichalla\\source\\repos\\WebApplication28\\RCL\\bin\\Debug\\netstandard2.0\\RCL.dll'. (RCL)\r\n1>FastUpToDate: **Output is newer than input, not up to date.** (RCL)\r\n1>FastUpToDate: Project is not up to date. (RCL)\r\n\r\ncc @pranavkm "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":215,"FavoriteCount":122,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":73,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":250,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":97,"FavoriteCount":55,"RawContent":null}]}},"RunOn":"2018-05-03T05:30:12.4718164Z","RunDurationInMilliseconds":7888}