{"Data":{"GitHub":{"Issues":[{"Id":"561774477","IsPullRequest":true,"CreatedAt":"2020-02-07T17:30:20","Actor":"hughbe","Number":"2824","RawContent":null,"Title":"Add nullability to renderers","State":"open","Body":"## Proposed Changes\r\n- Add nullability to renderers\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2824)","Url":"https://github.com/dotnet/winforms/pull/2824","RelatedDescription":"Open PR \"Add nullability to renderers\" (#2824)"},{"Id":"561763376","IsPullRequest":true,"CreatedAt":"2020-02-07T17:08:53","Actor":"hughbe","Number":"2823","RawContent":null,"Title":"Enable nullability for ScrollableControl and descendents","State":"open","Body":"## Proposed Changes\r\n- Enable nullability for ScrollableControl and descendents\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2823)","Url":"https://github.com/dotnet/winforms/pull/2823","RelatedDescription":"Open PR \"Enable nullability for ScrollableControl and descendents\" (#2823)"},{"Id":"561733908","IsPullRequest":true,"CreatedAt":"2020-02-07T16:14:09","Actor":"hughbe","Number":"2822","RawContent":null,"Title":"Cleanup MonthCalendar code","State":"open","Body":"## Proposed Changes\r\n- Cleanup MonthCalendar code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2822)","Url":"https://github.com/dotnet/winforms/pull/2822","RelatedDescription":"Open PR \"Cleanup MonthCalendar code\" (#2822)"},{"Id":"561704845","IsPullRequest":true,"CreatedAt":"2020-02-07T15:25:28","Actor":"hughbe","Number":"2821","RawContent":null,"Title":"Add missing ProgressBar AccessibleName","State":"open","Body":"## Proposed Changes\r\n- Fix missing name: The Name property of a focusable element must not be null. [Section 508 502.3.1](https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/final-rule/single-file-version#502-interoperability-assistive-technology)\r\n\r\n![image](https://user-images.githubusercontent.com/1275900/74041638-ef42cb00-49bd-11ea-993a-e130c20c152a.png)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2821)","Url":"https://github.com/dotnet/winforms/pull/2821","RelatedDescription":"Open PR \"Add missing ProgressBar AccessibleName\" (#2821)"},{"Id":"561690648","IsPullRequest":true,"CreatedAt":"2020-02-07T15:01:22","Actor":"hughbe","Number":"2820","RawContent":null,"Title":"Fix TrackBar accessibility issue","State":"open","Body":"## Proposed Changes\r\n- Fix TrackBar accessibility issue #2818 \r\n\r\nFix based off code in `NumericUpDown`:\r\n```cs\r\npublic override string Name\r\n{\r\n    get => base.Name ?? SR.DefaultNumericUpDownAccessibleName;\r\n    set => base.Name = value;\r\n}\r\n```\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2820)","Url":"https://github.com/dotnet/winforms/pull/2820","RelatedDescription":"Open PR \"Fix TrackBar accessibility issue\" (#2820)"},{"Id":"561668925","IsPullRequest":true,"CreatedAt":"2020-02-07T14:26:42","Actor":"hughbe","Number":"2819","RawContent":null,"Title":"Fix NullReferenceExceptions in Control.ControlCollection with a null owner","State":"open","Body":"NREs are thrown when adding/using the collection, so just validate this upfront.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2819)","Url":"https://github.com/dotnet/winforms/pull/2819","RelatedDescription":"Open PR \"Fix NullReferenceExceptions in Control.ControlCollection with a null owner\" (#2819)"},{"Id":"561664622","IsPullRequest":false,"CreatedAt":"2020-02-07T14:19:13","Actor":"hughbe","Number":"2818","RawContent":null,"Title":"TrackBar accessible object missing Name property. Should we define a custom one?","State":"open","Body":"The following accessibility issue needs investigation.\r\n\r\n**App:** WindowsFormsApp1\r\n\r\n**Element path:** slider ''\r\n\r\n**Issue Details:** The Name property of a focusable element must not be null. [Section 508 502.3.1](https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/final-rule/single-file-version#502-interoperability-assistive-technology)\r\n\r\n**How To Fix:** Provide a UI Automation Name property that concisely identifies the element.\r\n\r\nThis accessibility issue was found using Accessibility Insights for Windows, a tool that helps debug and find accessibility issues earlier. Get more information and download this tool at https://aka.ms/AccessibilityInsights.","Url":"https://github.com/dotnet/winforms/issues/2818","RelatedDescription":"Open issue \"TrackBar accessible object missing Name property. Should we define a custom one?\" (#2818)"},{"Id":"561662542","IsPullRequest":true,"CreatedAt":"2020-02-07T14:15:40","Actor":"hughbe","Number":"2817","RawContent":null,"Title":"Cleanup TrackBar code","State":"open","Body":"## Proposed Changes\r\n- Cleanup TrackBar code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2817)","Url":"https://github.com/dotnet/winforms/pull/2817","RelatedDescription":"Open PR \"Cleanup TrackBar code\" (#2817)"},{"Id":"561643376","IsPullRequest":true,"CreatedAt":"2020-02-07T13:39:35","Actor":"hughbe","Number":"2816","RawContent":null,"Title":"Cleanup EDITSTREAM","State":"open","Body":"## Proposed Changes\r\n- Cleanup EDITSTREAM\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2816)","Url":"https://github.com/dotnet/winforms/pull/2816","RelatedDescription":"Open PR \"Cleanup EDITSTREAM\" (#2816)"},{"Id":"561624209","IsPullRequest":true,"CreatedAt":"2020-02-07T13:16:57","Actor":"dotnet-maestro[bot]","Number":"2815","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200206.12\r\n- **Date Produced**: 2/7/2020 4:05 AM\r\n- **Commit**: 50f7059d3a7a83ae1919516755b9ca92c67805e8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20106.12\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2815)","Url":"https://github.com/dotnet/winforms/pull/2815","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2815)"},{"Id":"561484339","IsPullRequest":false,"CreatedAt":"2020-02-07T08:10:38","Actor":"Thea-Zhao","Number":"2814","RawContent":null,"Title":" Invoke PrintDialog.ShowDialog() does not show Print dialog successfully","State":"open","Body":"\r\n* .NET Core Version: .NET Core SDK 5.0.100-preview.1.20106.1 + the VSIX Inserted into Dev16 16.5.0 [29803.141.master]\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n Invoke PrintDialog.ShowDialog() does not show Print dialog successfully.\r\n\r\n**More Info:**\r\n1. This is a regression issue, it's not reproducing when targeting .NET Core 3.1.\r\n2. This issue also cannot reproduce with Framework project.\r\n\r\n**Actual behavior:**\r\nNo expected Print dialog shown.\r\n.NET Core 5.0 screenshot:\r\n![PrintDialogIssue5 0](https://user-images.githubusercontent.com/53589182/74011630-291fbd00-493d-11ea-9879-f54897d6b34a.gif)\r\n\r\n\r\n**Expected behavior:**\r\nThe Print dialog should be shown successfully.\r\n.NET Core 3.1 screenshot:\r\n![PrintDialogIssue3 1](https://user-images.githubusercontent.com/53589182/74011467-c3cbcc00-493c-11ea-9b47-81ecb1128738.gif)\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a Winforms Core application.\r\n2. Drag and drop a button to the form.\r\n3. Double click the button1 to generate the button1_click event, then add following code to it:\r\nPrintDialog pdlg = new PrintDialog();\r\npdlg.ShowDialog();\r\n4. Build and run.\r\n5. Click the button1 to see whether the Print dialog is popping up.\r\n[PrintDialogIssue.zip](https://github.com/dotnet/winforms/files/4169604/PrintDialogIssue.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2814","RelatedDescription":"Open issue \" Invoke PrintDialog.ShowDialog() does not show Print dialog successfully\" (#2814)"},{"Id":"558863213","IsPullRequest":true,"CreatedAt":"2020-02-07T01:08:00","Actor":"RussKie","Number":"2798","RawContent":null,"Title":"Remove deprecated API","State":"closed","Body":"As identified in https://github.com/dotnet/winforms/issues/2476#issuecomment-568494860\r\n\r\nRelates to #2091\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Remove the following API because they have been obsolete since .NET 2.0:\r\n\t* `StatusBar`\r\n\t* `StatusBarDrawItemEventArgs`\r\n\t* `StatusBarDrawItemEventHandler`\r\n\t* `StatusBarPanel`\r\n\t* `StatusBarPanelAutoSize`\r\n\t* `StatusBarPanelBorderStyle`\r\n\t* `StatusBarPanelClickEventArgs`\r\n\t* `StatusBarPanelClickEventHandler`\r\n\t* `StatusBarPanelStyle`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Removed controls no longer available to customers and will cause builds to break\r\n- Customers will need to replace the removed controls with available alternatives.\r\n\r\n## Regression? \r\n\r\n- ~Yes~ / No\r\n\r\n## Risk\r\n\r\n- Medium, the controls in questions have been deprecated in .NET 2.0 era, however there is a recorded use of those.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TBD\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2798)","Url":"https://github.com/dotnet/winforms/pull/2798","RelatedDescription":"Closed or merged PR \"Remove deprecated API\" (#2798)"},{"Id":"560998213","IsPullRequest":true,"CreatedAt":"2020-02-06T13:16:56","Actor":"dotnet-maestro[bot]","Number":"2813","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 8:49 PM\r\n- **Commit**: b65df96ccb820fd5f7ea226aeba310485f395130\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20105.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2813)","Url":"https://github.com/dotnet/winforms/pull/2813","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2813)"},{"Id":"560906223","IsPullRequest":false,"CreatedAt":"2020-02-06T10:08:12","Actor":"15092368540","Number":"2812","RawContent":null,"Title":"DataGridView Tip is not normal","State":"open","Body":"Only .NET Core Version,  .NET Framework Version is right.\r\n\r\nDataGridView cell content is not truncated, but still show with content tips","Url":"https://github.com/dotnet/winforms/issues/2812","RelatedDescription":"Open issue \"DataGridView Tip is not normal\" (#2812)"},{"Id":"560828270","IsPullRequest":true,"CreatedAt":"2020-02-06T07:26:58","Actor":"gpetrou","Number":"2811","RawContent":null,"Title":"Add SetWindowRgn to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Add SetWindowRgn to Interop User32.\r\n- Remove unused FindWindow and SetActiveWindow DllImports.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2811)","Url":"https://github.com/dotnet/winforms/pull/2811","RelatedDescription":"Open PR \"Add SetWindowRgn to Interop User32\" (#2811)"},{"Id":"560823398","IsPullRequest":true,"CreatedAt":"2020-02-06T07:14:35","Actor":"gpetrou","Number":"2810","RawContent":null,"Title":"Add CDCS, FDEOR, FDESRV, SIATTRIBFLAGS and SIGDN enums in Interop Shell32","State":"open","Body":"## Proposed changes\r\n\r\n- Add CDCS, FDEOR, FDESRV, SIATTRIBFLAGS and SIGDN enums in Interop Shell32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2810)","Url":"https://github.com/dotnet/winforms/pull/2810","RelatedDescription":"Open PR \"Add CDCS, FDEOR, FDESRV, SIATTRIBFLAGS and SIGDN enums in Interop Shell32\" (#2810)"},{"Id":"559957426","IsPullRequest":true,"CreatedAt":"2020-02-06T06:14:54","Actor":"hughbe","Number":"2807","RawContent":null,"Title":"Cleanup COPYDATASTRUCT","State":"closed","Body":"## Proposed Changes\r\n- Cleanup COPYDATASTRUCT\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2807)","Url":"https://github.com/dotnet/winforms/pull/2807","RelatedDescription":"Closed or merged PR \"Cleanup COPYDATASTRUCT\" (#2807)"},{"Id":"559740891","IsPullRequest":true,"CreatedAt":"2020-02-05T22:42:09","Actor":"hughbe","Number":"2805","RawContent":null,"Title":"Cleanup GetStartupInfo code","State":"closed","Body":"## Proposed Changes\r\n- Cleanup GetStartupInfo code\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2805)","Url":"https://github.com/dotnet/winforms/pull/2805","RelatedDescription":"Closed or merged PR \"Cleanup GetStartupInfo code\" (#2805)"},{"Id":"559393494","IsPullRequest":true,"CreatedAt":"2020-02-05T22:40:04","Actor":"hughbe","Number":"2800","RawContent":null,"Title":"More SendMessage cleanup","State":"closed","Body":"## Proposed Changes\r\n- More SendMessage cleanup\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2800)","Url":"https://github.com/dotnet/winforms/pull/2800","RelatedDescription":"Closed or merged PR \"More SendMessage cleanup\" (#2800)"},{"Id":"560357496","IsPullRequest":true,"CreatedAt":"2020-02-05T13:16:55","Actor":"dotnet-maestro[bot]","Number":"2809","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:17 AM\r\n- **Commit**: 0b404cb7575c8addc5e10f3fac57e79c596db28e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20104.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2809)","Url":"https://github.com/dotnet/winforms/pull/2809","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2809)"},{"Id":"559705080","IsPullRequest":true,"CreatedAt":"2020-02-05T02:01:46","Actor":"dotnet-maestro[bot]","Number":"2804","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200203.5\r\n- **Date Produced**: 2/4/2020 3:04 AM\r\n- **Commit**: 27c8467294a4e64ac6642b4c12ca63495ff126c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20103.5\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2804)","Url":"https://github.com/dotnet/winforms/pull/2804","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2804)"},{"Id":"560023893","IsPullRequest":true,"CreatedAt":"2020-02-04T23:44:15","Actor":"RussKie","Number":"2808","RawContent":null,"Title":"Update to preview branding","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2808)","Url":"https://github.com/dotnet/winforms/pull/2808","RelatedDescription":"Closed or merged PR \"Update to preview branding\" (#2808)"},{"Id":"559804556","IsPullRequest":true,"CreatedAt":"2020-02-04T20:50:40","Actor":"mmitche","Number":"2806","RawContent":null,"Title":"Use Label.N form of prerelease label","State":"closed","Body":"Avoids issues if we have more than 10 previews.\r\n\r\nOriginal change was incorrectly reverted at some point a few months ago.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2806)","Url":"https://github.com/dotnet/winforms/pull/2806","RelatedDescription":"Closed or merged PR \"Use Label.N form of prerelease label\" (#2806)"},{"Id":"559608739","IsPullRequest":false,"CreatedAt":"2020-02-04T10:00:35","Actor":"zhenlinyang","Number":"2803","RawContent":null,"Title":"Setting 'RichTextBox.Location' has no effect when the screen resolution is too low","State":"open","Body":"* .NET Core Version:\r\n3.1\r\n\r\n* Have you experienced this same bug with .NET Framework?:\r\nNo, This bug doesn't exist with .NET Framework.\r\n\r\n**Problem description:**\r\n\r\nSetting 'System.Windows.Forms.Form.RichTextBox.Location'>'screen resolution' has no effect, when the screen resolution is lower than 'System.Windows.Forms.Form.MinimumSize'. 'RichTextBox' is drawn at (0, 0).\r\n\r\n**Expected behavior:**\r\n\r\nDraw in the correct position even if the position is beyond the screen border.\r\n\r\n**Minimal repro:**\r\n\r\n```\r\nthis.SampleRichTextBox.Location = new System.Drawing.Point(940, 50);\r\nthis.MaximumSize = new System.Drawing.Size(6000, 721);\r\nthis.MinimumSize = new System.Drawing.Size(1280, 721);\r\n```\r\nSet screen resolution (800, 600).\r\nBuilding and running application with dotnet core 3.1.\r\n'RichTextBox' is drawn at (0, 0).\r\n\r\nScreenshots or projects are private, but we can communicate by email. ^_^","Url":"https://github.com/dotnet/winforms/issues/2803","RelatedDescription":"Open issue \"Setting 'RichTextBox.Location' has no effect when the screen resolution is too low\" (#2803)"},{"Id":"559579179","IsPullRequest":false,"CreatedAt":"2020-02-04T09:07:42","Actor":"Vino-Wang","Number":"2802","RawContent":null,"Title":"The UIA Name property is missing on the list element in selected PropertyGrid item","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1.200-preview-014883\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe Name property of the focusable element(list) is null.\r\n![Actual](https://user-images.githubusercontent.com/18568603/73729765-9e8a6280-4770-11ea-8375-18b99c20d5a5.jpg)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe list element should have a meaningful name instead of null.\r\n\r\n**Minimal repro:**\r\n1. Create a WinForm 4.8 app with a PropertyGrid whose property items contain a list of strings or run the attached core app. [UIA_Name_missing.zip](https://github.com/dotnet/winforms/files/4152306/UIA_Name_missing.zip)\r\n2. Run the Accessibility Insights for Windows tool to examine the UIA representation of the UI.\r\n3. When keyboard focus is over in the right side of a property item, check the UIA tree.","Url":"https://github.com/dotnet/winforms/issues/2802","RelatedDescription":"Open issue \"The UIA Name property is missing on the list element in selected PropertyGrid item\" (#2802)"},{"Id":"559467188","IsPullRequest":true,"CreatedAt":"2020-02-04T03:34:44","Actor":"RussKie","Number":"2801","RawContent":null,"Title":"fix: `Application.ExecutablePath` returns dll instead of exe","State":"open","Body":"Resolves #1143 following the advice from @swaroop-sridhar in https://github.com/dotnet/runtime/issues/11201#issuecomment-506480041\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n In .NET artifacts are DLLs even for executable projects. With some automagic they get bundled into executables.\r\nHowever `Assembly.GetEntryAssembly()` always returns the dll instead of the exe.\r\n\r\nFollowing the guidance from the Runtime team retrieve the path to the executable via `GetModuleFileNameW` call.\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers can now retrieve a path to the applications executable instead of the application's dll.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Small-medium due to possibly unaccounted use cases\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- I have created several app targeting net472 and netcoreapp5.0 to capture outputs of calling `Application.ExecutablePath` in the following scenarios:\r\n\t- a single project app:\r\n\t```powershell\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    Param(\r\n        [string] $frameworks = 'net472;netcoreapp5.0',\r\n        [string] $targetDirectory = '.\\',\r\n        [Parameter(ValueFromRemainingArguments=$true)][String[]]$properties\r\n    )\r\n\r\n    function Invoke-Tests {\r\n        Param(\r\n            [string] $frameworks,\r\n            [string] $targetDirectory\r\n        )\r\n\r\n        $frameworks.Split(';') | ForEach-Object {\r\n            $framework = $_\r\n            Write-Host \"> Executing test for $framework\"\r\n            $output = [System.IO.Path]::Combine($targetDirectory, \"app1.$framework.log\");\r\n            dotnet.exe run --framework $framework > $output;\r\n        }\r\n    }\r\n\r\n    function Update-Csproj {\r\n        Param(\r\n            [string] $csprojName,\r\n            [string] $frameworks\r\n        )\r\n\r\n        [xml]$csproj = Get-Content $csprojName;\r\n\r\n        # update the project to console from UI\r\n        $csproj.Project.PropertyGroup.OutputType = 'Exe';\r\n        # convert from single to multi-targeting\r\n        $csproj.Project.PropertyGroup.TargetFramework = '';\r\n        $node = $csproj.CreateElement(\"TargetFrameworks\")\r\n        $csproj.Project.PropertyGroup.AppendChild($node) | Out-Null;\r\n        $csproj.Project.PropertyGroup.TargetFrameworks = $frameworks;\r\n\r\n        $csproj.Save(\"$($pwd.Path)\\$csprojName\");\r\n    }\r\n\r\n    function Update-Program {\r\n        [string]$program = Get-Content 'Program.cs' -Raw;\r\n        $program = $program.Replace('Application.Run(new Form1());', 'Console.WriteLine(Application.ExecutablePath);').Replace('Application.SetHighDpiMode(HighDpiMode.SystemAware);', '');\r\n        $program | Out-File -FilePath 'Program.cs' -Encoding utf8 -Force\r\n    }\r\n\r\n    $appFolder = [System.IO.Path]::GetRandomFileName()\r\n    $outputDirectory = [System.IO.Path]::GetFullPath($targetDirectory);\r\n\r\n    try {\r\n        [System.IO.Directory]::CreateDirectory($appFolder) | Out-Null;\r\n        Push-Location $appFolder\r\n        dotnet.exe new winforms -n app\r\n        Set-Location app\r\n\r\n        Update-Csproj -csprojName 'app.csproj' -frameworks $frameworks\r\n        Update-Program\r\n        Invoke-Tests -frameworks $frameworks -targetDirectory  $outputDirectory\r\n    }\r\n    catch {\r\n        Write-Host $_ -ForegroundColor Red\r\n    }\r\n    finally {\r\n        Pop-Location\r\n        [System.IO.Directory]::Delete($appFolder, $true);\r\n    }\r\n\t```\r\n\t- a multi project app where `Application.ExecutablePath` is called from the library project\r\n\t```powershell\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    Param(\r\n        [string] $frameworks = 'net472;netcoreapp5.0',\r\n        [string] $targetDirectory = '.\\',\r\n        [Parameter(ValueFromRemainingArguments=$true)][String[]]$properties\r\n    )\r\n\r\n    function Invoke-Tests {\r\n        Param(\r\n            [string] $frameworks,\r\n            [string] $targetDirectory\r\n        )\r\n\r\n        $frameworks.Split(';') | ForEach-Object {\r\n            $framework = $_\r\n            Write-Host \"> Executing test for $framework\"\r\n            $output = [System.IO.Path]::Combine($targetDirectory, \"apps.$framework.log\");\r\n            dotnet.exe run --framework $framework > $output;\r\n        }\r\n    }\r\n\r\n    function Update-Csproj {\r\n        Param(\r\n            [string] $csprojName,\r\n            [string] $frameworks\r\n        )\r\n\r\n        [xml]$csproj = Get-Content $csprojName;\r\n\r\n        # update the project to console from UI\r\n        if ($csproj.Project.PropertyGroup.OutputType) {\r\n            $csproj.Project.PropertyGroup.OutputType = 'Exe';\r\n        }\r\n        # convert from single to multi-targeting\r\n        $csproj.Project.PropertyGroup.TargetFramework = '';\r\n        $node = $csproj.CreateElement(\"TargetFrameworks\")\r\n        $csproj.Project.PropertyGroup.AppendChild($node) | Out-Null;\r\n        $csproj.Project.PropertyGroup.TargetFrameworks = $frameworks;\r\n\r\n        $csproj.Save(\"$($pwd.Path)\\$csprojName\");\r\n    }\r\n\r\n    function New-TestClass {\r\n        \"namespace lib\r\n        {\r\n            public static class TestClass\r\n            {\r\n                public static string GetApplicationExecutablePath() \r\n                    => System.Windows.Forms.Application.ExecutablePath;\r\n            }\r\n        }\" | Out-File 'TestClass.cs' -Encoding utf8 -Force\r\n\r\n    }\r\n\r\n    function Update-Program {\r\n        [string]$program = Get-Content 'Program.cs' -Raw;\r\n        $program = $program.Replace('Application.Run(new Form1());', \"Console.WriteLine(lib.TestClass.GetApplicationExecutablePath());\").Replace('Application.SetHighDpiMode(HighDpiMode.SystemAware);', '');\r\n        $program | Out-File -FilePath 'Program.cs' -Encoding utf8 -Force\r\n    }\r\n\r\n    $appFolder = [System.IO.Path]::GetRandomFileName()\r\n    $outputDirectory = [System.IO.Path]::GetFullPath($targetDirectory);\r\n\r\n    try {\r\n        [System.IO.Directory]::CreateDirectory($appFolder) | Out-Null;\r\n        Push-Location $appFolder\r\n        dotnet.exe new winforms -n app\r\n        dotnet.exe new winformslib -n lib\r\n        dotnet.exe add app/app.csproj reference lib/lib.csproj\r\n\r\n        Push-Location lib\r\n        New-TestClass\r\n        Update-Csproj -csprojName 'lib.csproj' -frameworks $frameworks\r\n        Pop-Location\r\n\r\n        Set-Location app\r\n        Update-Csproj -csprojName 'app.csproj' -frameworks $frameworks\r\n        Update-Program\r\n        Invoke-Tests -frameworks $frameworks -targetDirectory  $outputDirectory\r\n    }\r\n    catch {\r\n        Write-Host $_ -ForegroundColor Red\r\n    }\r\n    finally {\r\n        Pop-Location\r\n        [System.IO.Directory]::Delete($appFolder, $true);\r\n    }\r\n\t```\r\n- Added the created projects by running the above scripts and run them against privately build binaries to confirm the results of netcoreapp5.0 were the same as the results from net472 app.\r\n\r\n## Test results\r\n* https://github.com/dotnet/winforms/pull/2801#issuecomment-582695948\r\n* https://github.com/dotnet/winforms/pull/2801#issuecomment-582696032\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2801)","Url":"https://github.com/dotnet/winforms/pull/2801","RelatedDescription":"Open PR \"fix: `Application.ExecutablePath` returns dll instead of exe\" (#2801)"},{"Id":"558693475","IsPullRequest":true,"CreatedAt":"2020-02-03T20:18:21","Actor":"dotnet-maestro[bot]","Number":"2796","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200201.2\r\n- **Date Produced**: 2/1/2020 11:43 PM\r\n- **Commit**: 779323758d3e8aa7e4ee3dc2619d57e696078089\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20101.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2796)\r\n","Url":"https://github.com/dotnet/winforms/pull/2796","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2796)"},{"Id":"558910683","IsPullRequest":false,"CreatedAt":"2020-02-03T08:06:25","Actor":"Vino-Wang","Number":"2799","RawContent":null,"Title":"MDI child form with ContainerControl/SplitContainer control activation bug: the control that gets focus is not the one that was previously focused","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1.200-preview-014883\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nIf the form is opened as MDI child and its focused control is located within ContainerControl(e.g. ActiveControl chain is: mdiChildForm > ContainerControl > TextBox). Then when other MDI child is activated, the form's ActiveControl property is resetting to null. And when the form is activated again, the control that gets focus is not the one that was previously focused.\r\n![MDI_activation_bug](https://user-images.githubusercontent.com/18568603/73635679-fd7fa700-469e-11ea-801a-103e26cecedf.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**More info:**\r\nThis issue cannot repro with FlowLayoutPanel, GroupBox, Panel, TabControl, TableLayoutPanel container controls.\r\n\r\n**Expected behavior:**\r\n\r\n- Then when other MDI child is activated, the form's ActiveControl property should not be reset to null. \r\n- And when the form is activated again, the control that gets focus should be the one that was previously focused.\r\n![Expected](https://user-images.githubusercontent.com/18568603/73635689-03758800-469f-11ea-9ccc-e4d1a0b277ea.gif)\r\n\r\n\r\n**Minimal repro:**\r\n1.\tRun the attached project. [WinForms.MdiChildActivationIssue.zip](https://github.com/dotnet/winforms/files/4146789/WinForms.MdiChildActivationIssue.zip)\r\n\r\n2.\tClick the ‘Open MDI Child A’ menu item to show the child form A that contains the container control(have other controls in it. E.g. TextBox, button..).\r\n3.\tThen click the ‘Open MDI Child B’ menu item to show the child form B.\r\n4.\tSwitch the mouse focus between these Form to see whether the Active control is changed incorrectly.\r\n\r\nIn Steps 4:\r\n1.\tFirstly, make sure the mouse focus is on the first TextBox in the Form A.\r\n2.\tSwitch the focus to the Form B.\r\n3.\tThen back to the Form A, make the mouse focus is on the second TextBox/button1/third TextBox/checkbox1 controls which located within SplitContainer control.\r\n4.\tRepeat step 2).\r\n5.\tThen back to the Form A, now you can see the focus is changed to the first control.\r\n \r\n","Url":"https://github.com/dotnet/winforms/issues/2799","RelatedDescription":"Open issue \"MDI child form with ContainerControl/SplitContainer control activation bug: the control that gets focus is not the one that was previously focused\" (#2799)"},{"Id":"558712264","IsPullRequest":false,"CreatedAt":"2020-02-02T15:27:11","Actor":"swythan","Number":"2797","RawContent":null,"Title":"Setting ComboBox.SelectedItem changes order of controls in TableLayoutPanel","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n3.1.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\nIt looks like a regression from 4.7.2 to 4.8. I'm filing a bug there too.\r\n\r\n**Problem description:**\r\nShort version: \r\nIn a specific situation, setting SelectedIndex/SelectedItem on a ComboBox can cause the controls in a TableLayoutPanel to change order (in the Controls collection and also visually).\r\n\r\nLong version:\r\nWe have a form that involves dynamically adding rows to a TableLayoutPanel. Each row contains a mix of ComboBox and TextBox controls. After adding each row of controls, we set the SelectedItem/Index on each ComboBox. One of the ComboBoxes has an SelectedIndexChanged event handler that modifies the SelectedIndex of one of the other ComboBoxes in the same row.\r\n\r\nOn .Net 4.7.2 (and earlier) this works fine. On .Net 4.8 & .Net Core 3.1 two of the controls in the first row of the TableLayoutPanel are swapped. The swap is apparent both in the order of the controls in the Controls property of the TableLayoutPanel, and also visually in the rendering of the form (i.e. they are inthe wrong columns). Note that neither of the swapped columns is involved directly in the above mentioned event handler.\r\n\r\n**Expected behavior:**\r\nChanging the SelectedIndex should not cause the controls to change order.\r\n\r\n**Minimal repro:**\r\nhttps://github.com/swythan/BugRepro.WinFormsComboBox","Url":"https://github.com/dotnet/winforms/issues/2797","RelatedDescription":"Open issue \"Setting ComboBox.SelectedItem changes order of controls in TableLayoutPanel\" (#2797)"},{"Id":"558537669","IsPullRequest":true,"CreatedAt":"2020-02-01T13:16:50","Actor":"dotnet-maestro[bot]","Number":"2795","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200131.7\r\n- **Date Produced**: 1/31/2020 10:34 PM\r\n- **Commit**: bdc8c2f698e8c15195872af1e316b4b8f0eae7e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20081.7\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2795)","Url":"https://github.com/dotnet/winforms/pull/2795","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2795)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-08T05:30:56.4171525Z","RunDurationInMilliseconds":519}