{"Data":{"Blog":{"FeedItems":[{"Title":"Add Languages to Your Xamarin Apps with Multilingual App Toolkit","PublishedOn":"2018-02-08T20:10:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With Xamarin, you can extend your cross-platform apps with support for native speakers, reaching markets that might otherwise be overlooked. However, managing multiple languages and keeping everything...","Href":"https://blog.xamarin.com/add-languages-to-your-apps-with-xamarin-and-multilingual-app-toolkit/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Building Your First Intelligent App with Xamarin and Microsoft Cognitive Services","PublishedOn":"2018-02-07T19:39:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today&#8217;s apps must be “intelligent” to win app users’ loyalty, whether for a consumer app or a business app. With Xamarin.Forms and Microsoft Cognitive Services, you can easily create your first...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-building-first-intelligent-app-xamarin-microsoft-cognitive-services/","RawContent":null},{"Title":"Draw your Next App Idea with Ink to Code","PublishedOn":"2018-02-05T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Imagine that you&#8217;ve just been struck by inspiration for your next great app. You might start by jotting some notes and sketching out screens. If you&#8217;re thinking about reaching for a...","Href":"https://blog.xamarin.com/draw-next-app-idea-ink-code/","RawContent":null},{"Title":"Lose the Cables: Make Deploying to an iOS or tvOS Device Easier","PublishedOn":"2018-02-02T19:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing most developers consistently do during app development is deploy to a testing device. One main drawback during this process is the struggle to find a cable, connect it to a computer, plug it...","Href":"https://blog.xamarin.com/lose-cables-make-deploying-ios-tvos-device-easier/","RawContent":null},{"Title":"Just Push Play: Using Google Play on an Android Emulator","PublishedOn":"2018-02-01T20:22:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The needs of an Android developer using the Android emulator continuously expand. The latest emulator development from Google provides a system image for the Google Play Store, which includes a fully...","Href":"https://blog.xamarin.com/just-push-play-using-google-play-android-emulator/","RawContent":null},{"Title":"Xamarin Developer Events in February","PublishedOn":"2018-01-31T19:26:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you haven&#8217;t started working on your new year&#8217;s resolutions yet, we have the perfect solution: get out there and start building on your mobile app development education by networking...","Href":"https://blog.xamarin.com/xamarin-developer-events-february/","RawContent":null},{"Title":"Webinar Recording | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-30T19:53:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this pre-recorded webinar, Mark Smith, Director of Xamarin University, shows you how to automate your app development pipeline with Visual Studio App Center, walking through how to connect your app...","Href":"https://blog.xamarin.com/webinar-recording-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Android Emulator Quick Boot","PublishedOn":"2018-01-29T19:41:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Emulator version 27.0.2 now includes a feature called Quick Boot, which launches the emulator in just a few seconds. For Quick Boot to work, your AVD must perform a cold boot on its first time...","Href":"https://blog.xamarin.com/android-emulator-quick-boot/","RawContent":null},{"Title":"First Look: Xamarin Android Device Manager Preview","PublishedOn":"2018-01-25T19:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the release of SDK Tools 26, Google replaced the standalone UI for the SDK and Device Manager with a command line interface. In an effort to make Android component management accessible and easy...","Href":"https://blog.xamarin.com/first-look-xamarin-android-device-manager-preview/","RawContent":null},{"Title":"Better Resource Organization in Xamarin.Forms","PublishedOn":"2018-01-23T19:28:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Resource Dictionary is a foundational building block to all Xamarin.Forms mobile development. It&#8217;s the primary vehicle for declaring XAML resources you’ll use throughout your mobile application,...","Href":"https://blog.xamarin.com/better-resource-organization-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7220467184","Type":"PullRequestEvent","CreatedAt":"2018-02-09T02:07:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1285","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/80b3c104\" (#1285) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1138"},{"Id":"7219299753","Type":"IssuesEvent","CreatedAt":"2018-02-08T20:54:46","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1093","RelatedDescription":"Closed issue \"Add the linker analyzer tool to XA\" (#1093) at xamarin/xamarin-android","RelatedBody":"### Expected Behavior\r\n\r\nMake the linkeranalyzer.exe and a helper script available in the XA installation.\r\n\r\n### Actual Behavior\r\n\r\nlinkeranalyzer.exe is not installed.\r\n"},{"Id":"7218891701","Type":"IssuesEvent","CreatedAt":"2018-02-08T19:29:54","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1287","RelatedDescription":"Opened issue \"Unable to discover new string resource (or other xml defined resources) in Intellisense after building\" (#1287) at xamarin/xamarin-android","RelatedBody":"This issue appears to be a regression in d15-6, so I will be adding it to the 15.6 milestone. However, I am not sure if it is related to the managed resource parser changes that have been re-enabled there.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View Android App.\r\n2. Add a new string entry in Resources -> values -> Strings.xml, such as:\r\n```xml\r\n<string name=\"test\">test</string>\r\n```\r\n3. Open MainActivity.cs and confirm that you are unable to see Intellisense for `Resource.String.test`.\r\n4. Select Build -> Build solution\r\n5. Open MainActivity.cs and confirm that you are _still_ unable to see Intellisense for `Resource.String.test`.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nNewly added string and other xml resources can be discovered via Intellisense immediately after completing a build.\r\n\r\n### Actual Behavior\r\nIntellisense does not work for a new string resource after building.\r\n\r\n### Version Information\r\nVS 15.6 Preview 4:\r\nhttps://gist.github.com/pjcollins/b8be35efd9b9eb0fb7e1355e74396fd2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nDiagnostic build output:\r\nhttps://gist.github.com/pjcollins/292e2acf118eaced6de4124aedf15254\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7218782963","Type":"IssuesEvent","CreatedAt":"2018-02-08T19:06:49","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1286","RelatedDescription":"Opened issue \"Resource related intellisense breaks after Rebuilding\" (#1286) at xamarin/xamarin-android","RelatedBody":"Moving report from https://bugzilla.xamarin.com/show_bug.cgi?id=60880 into Issues. It looks like the clean target is still deleting `designtime\\Resource.Designer.cs`.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View Android App\r\n2. Open MainActivity.cs, and notice that both `Resource.Layout.Main` and `Resource.ID.myButton` are available in Intellisense\r\n3. Select Build -> Clean Solution.\r\n4. Resource.* related Intellisense no longer works as expected\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nResource related Intellisense will continue to work after cleaning, building, rebuilding, etc.\r\n\r\n### Actual Behavior\r\nThe following IntelliSense output is displayed, and Resource related Intellisense no longer works.\r\n> [Failure] Could not find file 'c:\\users\\peter\\source\\repos\\App16\\App16\\obj\\Debug\\designtime\\Resource.Designer.cs'.\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/b8be35efd9b9eb0fb7e1355e74396fd2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/ee151a4e90f0d8ac7ec9d28984e52be7#file-gistfile1-txt-L1197-L1205\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7218641907","Type":"PullRequestEvent","CreatedAt":"2018-02-08T18:38:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1285","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/80b3c104\" (#1285) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1138"},{"Id":"7216648545","Type":"IssuesEvent","CreatedAt":"2018-02-08T12:34:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1284","RelatedDescription":"Closed issue \"Duplicate zip entry [classes.jar:META-INF/MANIFEST.MF]\" (#1284) at xamarin/xamarin-android","RelatedBody":"How can i solve this warning?\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nWarning\t\tcan't write resource [META-INF/MANIFEST.MF] (Duplicate zip entry [classes.jar:META-INF/MANIFEST.MF])"},{"Id":"7216630870","Type":"PullRequestEvent","CreatedAt":"2018-02-08T12:30:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1283","RelatedDescription":"Merged pull request \"Updated reference to mono/mono@da1e498\" (#1283) at xamarin/xamarin-android","RelatedBody":"Updated reference to mono/mono@da1e498\r\n\r\nhttps://github.com/mono/mono/compare/38502063cac0b9c258af2c59dce9cd2d0a12b4d1...da1e498884ddc56ac6ca82d3703096dc6370e1b2\r\n\r\nfixes https://github.com/mono/mono/issues/6777"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7220206103","Type":"PullRequestEvent","CreatedAt":"2018-02-09T00:39:49","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1756","RelatedDescription":"Merged pull request \"[Android] Slider should show correct Value even though SeekBar's Progress is slightly off\" (#1756) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#378 fixed an issue but also introduced regression. This fixes both #378 and #1625. When the element itself or its properties are changing from the Core side, SeekBar's tracker isn't being manipulated by the user, so we can ignore native changes being propagated back to Core. Please see instructions in the test.\r\n\r\nNote that this introduces the problem that Core and Native aren't always in sync as there is a small precision difference. However, not adding this fix is more problematic because users see values that they did not expect.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=54887\r\n- fixes #1625\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7220206093","Type":"IssuesEvent","CreatedAt":"2018-02-09T00:39:49","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1625","RelatedDescription":"Closed issue \"[Android] Slider value is not changed for the first position change\" (#1625) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nSlider value is not changed for the first time its position is changed and `ValueChanged` event is not fired either.\r\nI've been able to confirm this issue on Android. This bug is not present on UWP. Untested on iOS.\r\nThis bug has been already reported to Bugzilla [here](https://bugzilla.xamarin.com/show_bug.cgi?id=54887) and the thread points out that it might be linked with commit e0165abbcd1329a3dfd353548f5d75eef0c792de. I decided to report this issue here, because it's an old regression which makes Slider component unusable in practice.\r\n### Steps to Reproduce\r\n\r\n1. Open test solution and run under Android\r\n2. Tap (click) anywhere on the slider\r\n3. You can see that the bound label text did not change\r\n\r\n### Expected Behavior\r\nCorrect value change according to slider position after first tap.\r\n### Actual Behavior\r\nValue does not change after first tap, but slider position does.\r\n### Basic Information\r\nApplies to Android only\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: Unknown\r\n- IDE:\r\n- Platform Target Frameworks:\r\n  - Android: 8.0\r\n- Android Support Library Version: 25.4.0.2\r\n\r\n### Screenshots\r\n\r\n![qemu-system-i386_2018-01-20_13-44-52](https://user-images.githubusercontent.com/7580983/35183526-3621a0a6-fde8-11e7-9f42-dda4dafe61c4.png)\r\n\r\n### Reproduction Link\r\n\r\n[SliderTest.zip](https://github.com/xamarin/Xamarin.Forms/files/1648809/SliderTest.zip)\r\n\r\n"},{"Id":"7220108774","Type":"PullRequestEvent","CreatedAt":"2018-02-09T00:09:45","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1849","RelatedDescription":"Opened pull request \"Remove dead code\" (#1849) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nRemove dead code\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/1539\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7219938924","Type":"IssuesEvent","CreatedAt":"2018-02-08T23:18:37","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1848","RelatedDescription":"Opened issue \"Improve XAMLC Compilation performance\" (#1848) at xamarin/Xamarin.Forms","RelatedBody":"No idea how, stephane can figure that out. The goal is just to profile and improve XAMLC performance."},{"Id":"7219647141","Type":"IssuesEvent","CreatedAt":"2018-02-08T22:08:15","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1847","RelatedDescription":"Closed issue \"LineBreakMode does nothing when label is in grid\" (#1847) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nMigrating this 1 year old bug here - https://bugzilla.xamarin.com/show_bug.cgi?id=52631\r\n\r\nIn a simple grid with two labels, the first label has a long string of text. If you set LineBreakMode to tail truncate on this label, it doesn't truncate. Instead the first label overlaps the second label.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run app\r\n2. Note that the labels are not truncated\r\n\r\n### Expected Behavior\r\nBoth labels are truncated at the end\r\n\r\n### Actual Behavior\r\nLabels are displayed on top of each other\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  yes\r\n  - Android: yes\r\n  - UWP:  not tested\r\n- Android Support Library Version: 25\r\n- Nuget Packages: just forms\r\n- Affected Devices: tested on Nexus 5x running Android 7, and iPhone 5s on simulator running iOS 9.3\r\n\r\n### Screenshots\r\nhttps://imgur.com/k4cz2vv\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/rvpsmjw2qzb0up0/LineModeSample.zip?dl=0\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7220327703","Type":"PullRequestEvent","CreatedAt":"2018-02-09T01:19:27","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3440","RelatedDescription":"Opened pull request \"Revert \"bump maccore to deprecate docs' classic dependency\"\" (#3440) at xamarin/xamarin-macios","RelatedBody":"This reverts commit 95d1968856979e9f367a87dcc1aaecb41ec80c9a.\r\n\r\nUnfortunately with this commit our build fails with\r\n\r\n```\r\n[5:06:58] GEN      XamMac.CFNetwork.xml\r\n[5:06:58] install: ../../../../xamarin-macios/external/macios-binaries/docs/macOS/classic/XamMac.xml: No such file or directory\r\n[5:06:58] install: ../../../../xamarin-macios/external/macios-binaries/docs/macOS/classic/XamMac.CFNetwork.xml: No such file or directory\r\n[5:06:58] make[6]: *** [../../../../xamarin-macios/external/macios-binaries/docs/macOS/classic/XamMac.xml] Error 71\r\n[5:06:58] make[6]: *** Waiting for unfinished jobs....\r\n[5:06:58] make[6]: *** [../../../../xamarin-macios/external/macios-binaries/docs/macOS/classic/XamMac.CFNetwork.xml] Error 71\r\n```"},{"Id":"7219760963","Type":"PullRequestEvent","CreatedAt":"2018-02-08T22:34:17","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3438","RelatedDescription":"Opened pull request \"[security] Add new 'SecKey.GenerateKeyPair' overloads\" (#3438) at xamarin/xamarin-macios","RelatedBody":"The new overloads allow to set `kSecPrivateKeyAttrs` and `kSecPublicKeyAttrs`.\n\nFixes bug #34135: Need some constants exposed in Xamarin.iOS binding\n(https://bugzilla.xamarin.com/show_bug.cgi?id=34135)\n\nThe new APIs were created according to https://developer.apple.com/documentation/security/1395339-seckeygeneratepair?language=objc\n\nAlso add `GenerateKeyPairTest`."},{"Id":"7219492788","Type":"PullRequestEvent","CreatedAt":"2018-02-08T21:35:12","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3437","RelatedDescription":"Opened pull request \"[macos][imagekit] Add a deprecation warning on IKImageBrowserView\" (#3437) at xamarin/xamarin-macios","RelatedBody":"It's a _early_ warning since it mention 10.14"},{"Id":"7219368417","Type":"PullRequestEvent","CreatedAt":"2018-02-08T21:09:04","Actor":"joelmartinez","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3434","RelatedDescription":"Merged pull request \"bump maccore to deprecate docs' classic dependency\" (#3434) at xamarin/xamarin-macios","RelatedBody":"This bumps the `maccore` repository to include the changes from:\r\n\r\n- [PR#616](https://github.com/xamarin/maccore/pull/616)\r\n- [PR#625](https://github.com/xamarin/maccore/pull/625)"},{"Id":"7219214224","Type":"PullRequestEvent","CreatedAt":"2018-02-08T20:36:27","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3436","RelatedDescription":"Opened pull request \"[StoreKit] Update to Xcode 9.3 Beta 2\" (#3436) at xamarin/xamarin-macios","RelatedBody":"Diff file\r\n- https://github.com/xamarin/xamarin-macios/wiki/StoreKit-iOS-xcode9.3-beta2"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"961696657250443269","CreatedAt":"2018-02-08T20:22:05+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/pUb6M2pQLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":17,"RawContent":null},{"Id":"961642559880749056","CreatedAt":"2018-02-08T16:47:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/utcp887bgL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"961326059965870080","CreatedAt":"2018-02-07T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar with @XamarinU on building your first intelligent app with #Xamarin and Micro… https://t.co/lEsIH9mU1Q","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"961281908750635008","CreatedAt":"2018-02-07T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/48PO2bI3Mt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":17,"RawContent":null},{"Id":"960921785641455616","CreatedAt":"2018-02-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/OXIdlOPZyn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"960588991375511552","CreatedAt":"2018-02-05T19:00:37+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/sIDGF4Kcp0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":250,"FavoriteCount":126,"RawContent":null},{"Id":"960557379606794248","CreatedAt":"2018-02-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":13,"RawContent":null},{"Id":"960308752409923584","CreatedAt":"2018-02-05T00:27:02+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/ChPi6XDAGH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":18,"RawContent":null},{"Id":"959520671754850304","CreatedAt":"2018-02-02T20:15:29+00:00","UserScreenname":"xamarinhq","Text":"Make deploying to an iOS or tvOS device easier with Wireless Deployment and our new Unlock Device Alert: https://t.co/DKgtjGzPfo","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":48,"FavoriteCount":22,"RawContent":null},{"Id":"959469971301691392","CreatedAt":"2018-02-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/qc6cGwoxhK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":96,"FavoriteCount":29,"RawContent":null},{"Id":"959164072196526085","CreatedAt":"2018-02-01T20:38:29+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/kmW8uIDW80","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":18,"RawContent":null},{"Id":"959109618067738624","CreatedAt":"2018-02-01T17:02:06+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/xYx6fUVhML","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":10,"RawContent":null},{"Id":"958788443647152136","CreatedAt":"2018-01-31T19:45:53+00:00","UserScreenname":"xamarinhq","Text":"Help ensure a productive 2018 with #Xamarin developer events near you this February: https://t.co/9aPslPGW2O https://t.co/zRGM0lEoZe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null},{"Id":"958747709963415552","CreatedAt":"2018-01-31T17:04:01+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/xLDqS3Z9sI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":21,"RawContent":null},{"Id":"958386328797884416","CreatedAt":"2018-01-30T17:08:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/JOLj1szAol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":16,"RawContent":null},{"Id":"958065243565051904","CreatedAt":"2018-01-29T19:52:08+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/75XbYDGg8m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":225,"FavoriteCount":123,"RawContent":null},{"Id":"958020024941334528","CreatedAt":"2018-01-29T16:52:27+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d https://t.co/QvuhUZfhAd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":27,"RawContent":null},{"Id":"957782606992543745","CreatedAt":"2018-01-29T01:09:02+00:00","UserScreenname":"xamarinhq","Text":"Making iOS 11 even easier with #XamarinForms: https://t.co/nIDGNXGuF1 https://t.co/6qXhuCMSDp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":17,"RawContent":null},{"Id":"957415179091873792","CreatedAt":"2018-01-28T00:49:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to publish to #Azure from #VS4Mac: https://t.co/wnNmElsQrM https://t.co/DdxYLvB9ap","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-02-09T05:30:39.6255308Z","RunDurationInMilliseconds":4646}