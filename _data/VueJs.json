{"Data":{"Vue-Issues":{"Issues":[{"Id":"469555742","IsPullRequest":true,"CreatedAt":"2019-07-18T03:39:15","Actor":"elevatebart","Number":"10286","RawContent":null,"Title":"feat(compiler): comments for if-else conditions","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nIn order to fix these 2 issues, I need to have access to the HTML comments before a `v-else` block\r\n- https://github.com/vue-styleguidist/vue-styleguidist/issues/430\r\n- https://github.com/vue-styleguidist/vue-styleguidist/issues/322\r\n\r\nTo give you an example, here is a format that does not work with the current parser.\r\nSince we cannot have the comments as normal nodes, I thought we could have the missing comment beside the `ifCondition`. \r\n\r\n```html\r\n<div>\r\n  <slot name=\"isTest\" v-if=\"test\"></slot>\r\n  <!-- doesn't come out -->\r\n  <slot name=\"foo\" v-else-if=\"otherTest\"></slot>\r\n  <!-- doesn't come out -->\r\n  <template v-else><slot name=\"bar\"></slot></template>\r\n</div>\r\n```","Url":"https://github.com/vuejs/vue/pull/10286","RelatedDescription":"Open PR \"feat(compiler): comments for if-else conditions\" (#10286)"},{"Id":"469329420","IsPullRequest":false,"CreatedAt":"2019-07-17T16:45:57","Actor":"yasirrose","Number":"10285","RawContent":null,"Title":"IE11, console print: [Vue warn]: Error in nextTick: \"Error: Invalid argument.\" But work well with chrome","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[http://ec2-18-207-188-97.compute-1.amazonaws.com/#/garage](http://ec2-18-207-188-97.compute-1.amazonaws.com/#/garage)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nYou need to open this link in IE, after that move below the slider and click on add to garage button after that go to garage page in header and then click on remove to garage. When you click on remove to garage then console trigger an error.\r\n http://ec2-18-207-188-97.compute-1.amazonaws.com/#/\r\n\r\n### What is expected?\r\nnextTick is working fine on chrome and firefox but not working on IE 11.\r\n\r\n### What is actually happening?\r\nnextTick is not working in IE 11. When DOM is updated it triggered an error in console. Here is the screenshot: http://prntscr.com/ogdz4t\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10285","RelatedDescription":"Closed issue \"IE11, console print: [Vue warn]: Error in nextTick: \"Error: Invalid argument.\" But work well with chrome\" (#10285)"},{"Id":"469103728","IsPullRequest":false,"CreatedAt":"2019-07-17T10:06:39","Actor":"AeonFr","Number":"10284","RawContent":null,"Title":"Consistency in `$refs`: all children of $refs array using same format.","State":"open","Body":"### What problem does this feature solve?\r\nI know this is intended as a feature, but I encountered a lot of issues when trying to access $refs due to all the different formats:\r\n\r\n- If `ref` is inside a `v-for`, the `$refs` element will be an array. This wouldn't be necessary since is trivial to add an unique name to the `ref` inside a loop, [as seen in this example](https://forum.vuejs.org/t/this-refs-theid-returns-an-array/31995/4)\r\n- If `ref` is outside of a `v-for`, it will be a DOM Node.\r\n- Except that when the referenced item is a custom component, then it will be an object and to access the DOM node you would have to read the `$el` property...\r\n\r\nSo basically, if we wanted to select a ref's node, and we wouldn't know if it's a node or a custom component, if it's in a for-loop or not, this would be the code:\r\n\r\n```\r\nconst ref = (this.$refs.test && this.$refs.test[0] && this.$refs.test[0].$el) ? this.$refs.test[0].$el\r\n    : (this.$refs.test && this.$refs.test.$el) ? this.$refs.test.$el\r\n    : (this.$refs.test && this.$refs.test[0]) ? this.$refs.test[0]\r\n    : this.$refs.test ? this.$refs.test\r\n    : null;`\r\n```\r\n\r\nSo far I've never encountered this case, but I did encounter:\r\n\r\n- The case where the ref could be either a node or a custom component — I wanted to add a class and remove it with a timeout, for animation purposes. At the end, my workaround was to create a custom component to handle the \"empty state\" of a component, to consistently be able to reference the node using `.$el` (this was easier than refactoring all the parts where `.$el` was being referenced)-\r\n- The case where the ref could either be a node or an array of nodes, in a case of a list that had a default value (the default value was outside of the \"for loop\").\r\n\r\n\r\nMy proposal is to have a consistent way of referencing a node/component inside templates.\r\n\r\nAn idea I found in [another issue of this repo](https://github.com/vuejs/vue/issues/2044) is to use a special syntax when the ref is expected to be an array:\r\n\r\n```\r\n<div ref:multiple=\"example\"></div>\r\n```\r\n\r\nAnother part of the proposed change is to be able to access the DOM Node using `$el` (__always__ and exclusively that way). \r\n\r\nSince this is a breaking change, it would be interesting to hear workarounds for this. For example, using a different keyword altogether.\r\n\r\nIn general, I think this would add a lot of sanity and consistency to the usage of `$refs`, and I think it's a common issue for a lot of beginners.\r\n\r\nNote: this feature request is not compatible with [this other feature request](https://github.com/vuejs/vue/issues/4035)\r\n\r\n### What does the proposed API look like?\r\n``` vue-html\r\n<!-- Refs inside loops: -->\r\n<div v-for=\"...\">\r\n    <div ref:multiple=\"example\"></div>\r\n    (or ref:nested=\"example\")\r\n</div>\r\n```\r\n\r\n``` js\r\n// Refs array\r\n[\r\n    0: { $el: <div></div> }, // simple node item\r\n    1: { $el: <div></div>, methods, data, etc..... }, // ref in custom component\r\n    ...\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10284","RelatedDescription":"Open issue \"Consistency in `$refs`: all children of $refs array using same format.\" (#10284)"},{"Id":"468990887","IsPullRequest":false,"CreatedAt":"2019-07-17T06:07:55","Actor":"ChinaMars","Number":"10283","RawContent":null,"Title":"vue cli3 有什么办法提取css,但是打包不生成css文件","State":"closed","Body":"### What problem does this feature solve?\r\n我只想用到js文件，但是写在.vue里的样式会打包到js里，vue cli3有方法提取css，但是我用的是别的框架样式不需要再生成一遍。\r\n\r\n### What does the proposed API look like?\r\nextract: false，这样css文件是不生成了，但是会打包到js文件里，我想要的结果是js里的css和css文件都不需要\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10283","RelatedDescription":"Closed issue \"vue cli3 有什么办法提取css,但是打包不生成css文件\" (#10283)"},{"Id":"468820182","IsPullRequest":false,"CreatedAt":"2019-07-16T19:30:46","Actor":"Meekohi","Number":"10282","RawContent":null,"Title":"@click.prevent causes checkbox :checked property to not render","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/meekohi/pen/jjgezj](https://codepen.io/meekohi/pen/jjgezj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse `@click.prevent=` along with a `:checked='booleanComponentProp'` on a checkbox. Clicking the checkbox correctly updates all data, but the checkbox visually remains in whatever the original state was.\r\n\r\n### What is expected?\r\nCheckbox should update based on the `:checked` property.\r\n\r\n### What is actually happening?\r\nCheckbox does not update.\r\n\r\n---\r\nThis bug did not exist in Vue 2.5.22 -- it seems like Vue 2.6 started relying on the native `click` event to change the state of the box for the simple case, but if the underlying property changes via some other mechanism (for example a prop updating) then the checkbox visual appearance gets out of sync with the underlying data.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10282","RelatedDescription":"Closed issue \"@click.prevent causes checkbox :checked property to not render\" (#10282)"},{"Id":"468762196","IsPullRequest":false,"CreatedAt":"2019-07-16T17:39:11","Actor":"yaoguoli","Number":"10280","RawContent":null,"Title":"TypeError: undefined is not an object(evaluating 'vm.$scopedSlots')","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/yaoguoli/vue-bug](https://github.com/yaoguoli/vue-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. find an iphone which ios software version > 12.2 .  My situation is ios 12.3.1 iphoneX\r\n\r\n2.  vue-cli 3.9.2  &  clone https://github.com/yaoguoli/vue-bug & npm i & npm run serve\r\n\r\n3. use charles to proxy your iphone and  open url http://local.m.immomo.com:8081/ in wechat or safari\r\n\r\n4. you will get an alert with \"TypeError: undefined is not an object(evaluating 'vm.$scopedSlots')\"\r\n\r\n### What is expected?\r\nno error happens\r\n\r\n### What is actually happening?\r\nAn error happens only in ios > 12.2\r\n\r\n---\r\n1. parent componet App changes data 'selected' which props to child componets Tab in created hook\r\n\r\n2. componets Tab watch 'selected'  immediate: true\r\n\r\n3. child componets Test create an iframe Element and append to body in in created hook.\r\n\r\n4.  ios 12.3.1\r\n\r\nAn error will not happen if any of four conditions not set. I'm so confused ! .  It seems create iframe  will fire patch before Test componetInstance set up.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10280","RelatedDescription":"Closed issue \"TypeError: undefined is not an object(evaluating 'vm.$scopedSlots')\" (#10280)"},{"Id":"468768089","IsPullRequest":false,"CreatedAt":"2019-07-16T17:11:23","Actor":"afuno","Number":"10281","RawContent":null,"Title":"How to clean HTML code from extra spaces?","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrLg4uk/](https://jsfiddle.net/chrLg4uk/)\r\n\r\n### Steps to reproduce\r\n1. Write a simple component that I attached.\r\n2. In the HTML code you will see that there are spaces before and after the text.\r\n\r\n### What is expected?\r\nI want to remove these spaces. I can not imagine how you can write an HTML tag and a variable on one line. Especially when a lot of classes and other attributes.\r\n\r\n### What is actually happening?\r\nCannot remove extra spaces. Need to write a variable on a single line with an HTML tag.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10281","RelatedDescription":"Closed issue \"How to clean HTML code from extra spaces?\" (#10281)"},{"Id":"468677630","IsPullRequest":true,"CreatedAt":"2019-07-16T14:09:54","Actor":"HusamIbrahim","Number":"10279","RawContent":null,"Title":"chore: remove redundant code from Vue.prototype._render","State":"open","Body":"Parent vnode is set already in `initRender`.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: remove redundant code.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10279","RelatedDescription":"Open PR \"chore: remove redundant code from Vue.prototype._render\" (#10279)"},{"Id":"468631291","IsPullRequest":false,"CreatedAt":"2019-07-16T12:44:37","Actor":"dxvladislavvolkov","Number":"10278","RawContent":null,"Title":"The value is changed twice when two-way binding is used","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-3zzp2](https://codesandbox.io/s/vue-template-3zzp2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nA prepared an example. If you change the value of one component then you can see that computed value set twice (see console).\r\nI know that the event is emitted. But why is the same value set?\r\n\r\n### What is expected?\r\nI expect that value set once.\r\n\r\n### What is actually happening?\r\nThe computed value set twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10278","RelatedDescription":"Closed issue \"The value is changed twice when two-way binding is used\" (#10278)"},{"Id":"468571946","IsPullRequest":false,"CreatedAt":"2019-07-16T11:55:41","Actor":"dl0312","Number":"10277","RawContent":null,"Title":"Koeran input trigger keydown event twice","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0zj6narq/42/](https://jsfiddle.net/0zj6narq/42/)\r\n![Jul-16-2019 19-21-53](https://user-images.githubusercontent.com/3915393/61287017-05f5ba80-a7ff-11e9-9589-adb631a4605a.gif)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. type Korean input\r\n2. keydown event like Arrow Up, Down, Left, Right, Enter, Tab ...\r\n\r\n### What is expected?\r\nkeydown event just triggered once\r\n\r\n### What is actually happening?\r\nkeydown event just triggered doubled\r\n\r\n---\r\nIn addition to this bug, there's many bugs related to CJK language\r\nI love Vue but these bugs make me hard to use Vue 😥\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10277","RelatedDescription":"Closed issue \"Koeran input trigger keydown event twice\" (#10277)"},{"Id":"468497422","IsPullRequest":false,"CreatedAt":"2019-07-16T07:40:19","Actor":"e-lobo","Number":"10276","RawContent":null,"Title":"activated hook does not run in prod mode only dev mode.","State":"closed","Body":"using typescript and caching with keep-alive..\r\nin dev mode activated() works fine but in prod it doesnt run at all.\r\n","Url":"https://github.com/vuejs/vue/issues/10276","RelatedDescription":"Closed issue \"activated hook does not run in prod mode only dev mode.\" (#10276)"},{"Id":"468456237","IsPullRequest":false,"CreatedAt":"2019-07-16T05:35:40","Actor":"zoey1994","Number":"10275","RawContent":null,"Title":"vue-cli使用OIDC来登陆问题","State":"closed","Body":"关于vue-cli3  使用OIDC登陆有个问题像请教下，我登陆后这个页面一直重复加载好多次，\r\n 我用vue-cli2好像就没有这个问题\r\nhttps://files.gitter.im/vuejs/vue/y92d/image.png\r\n","Url":"https://github.com/vuejs/vue/issues/10275","RelatedDescription":"Closed issue \"vue-cli使用OIDC来登陆问题\" (#10275)"},{"Id":"468452939","IsPullRequest":false,"CreatedAt":"2019-07-16T05:22:32","Actor":"inunotaisho26","Number":"10274","RawContent":null,"Title":"Deno support or Deno rewrite pilot program","State":"closed","Body":"# 🚀 feature request\r\nWould like [Deno](https://deno.land/) runtime support.\r\n\r\n### Description\r\nThis is a new runtime that has was created by [Ryan Dahl](https://en.wikipedia.org/wiki/Ryan_Dahl), the original creator of [NodeJS](https://nodejs.org/en/). It has several new advantages:\r\n\r\n- Use of Promises\r\n- Uses TypeScript out of the box\r\n- no need for node_modules\r\n- uses urls to load dependencies (might be a plus or minus). \r\n","Url":"https://github.com/vuejs/vue/issues/10274","RelatedDescription":"Closed issue \"Deno support or Deno rewrite pilot program\" (#10274)"},{"Id":"468326301","IsPullRequest":false,"CreatedAt":"2019-07-15T21:03:03","Actor":"rellect","Number":"10273","RawContent":null,"Title":"v-model used in a number input does not accept characters other than numbers","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/rellect/ta1mkpnc/](https://jsfiddle.net/rellect/ta1mkpnc/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the repro link\r\n2. Type '1E' in the input\r\n3. See \"foo\" value is null instead of '1E'\r\n\r\n### What is expected?\r\nv-model should match the value in the input\r\n\r\n### What is actually happening?\r\nv-model saves the value as null if it contains characters other than numbers\r\n\r\n---\r\n '1E' is a valid number by the html spec.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10273","RelatedDescription":"Closed issue \"v-model used in a number input does not accept characters other than numbers\" (#10273)"},{"Id":"467026912","IsPullRequest":true,"CreatedAt":"2019-07-15T14:31:40","Actor":"nothingismagick","Number":"10257","RawContent":null,"Title":"fix(security) upgrade lodash.template","State":"closed","Body":"This is for vue-server-renderer\r\n\r\nhttps://github.com/lodash/lodash/pull/4336\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10257","RelatedDescription":"Closed or merged PR \"fix(security) upgrade lodash.template\" (#10257)"},{"Id":"468005692","IsPullRequest":true,"CreatedAt":"2019-07-15T08:41:09","Actor":"zrh122","Number":"10272","RawContent":null,"Title":"fix(compiler): avoid overwriting when dynamic v-slot used with v-for","State":"open","Body":"fixes #10271\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**","Url":"https://github.com/vuejs/vue/pull/10272","RelatedDescription":"Open PR \"fix(compiler): avoid overwriting when dynamic v-slot used with v-for\" (#10272)"},{"Id":"467889092","IsPullRequest":false,"CreatedAt":"2019-07-15T07:25:29","Actor":"soleo","Number":"10269","RawContent":null,"Title":"Consider use QuickJS for SSR (Server Side Rendering)","State":"closed","Body":"### What problem does this feature solve?\r\nLots of larger enterprises use Java or any JVM based language for building their backend system historically. Mostly because there are too many different systems in place and it is quite difficult to move to nodeJS with their limited resources. There are a few other options which are using other languages to act as  JavaScript Engine out there which don't seem to perform well or didn't gain a lot of attraction in the past. E.g Rinho from Mozilla, Jav8 from Google. With the  release of QuickJS (https://bellard.org/quickjs/) from FFMPEG author Fabrice Bellard, it may become a better choice for everyone who has suffered from SPA performance issue or SEO related complaints.\r\n\r\n### What does the proposed API look like?\r\nSimilar to the example on https://ssr.vuejs.org/guide/non-node.html, I've tried to use a few examples to provide a proof of concept build.  Check https://github.com/soleo/quickjs-docker out for details.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10269","RelatedDescription":"Closed issue \"Consider use QuickJS for SSR (Server Side Rendering)\" (#10269)"},{"Id":"467925098","IsPullRequest":false,"CreatedAt":"2019-07-15T07:20:48","Actor":"zhangenming","Number":"10270","RawContent":null,"Title":"allow await value in Template","State":"closed","Body":"### What problem does this feature solve?\r\n```\r\nSo far  a hack such as\r\n<template>\r\n{{foo}}\r\n</template>\r\n\r\n//js\r\nvar promise = new Promise(s=>setTimeout(s(1)))\r\n{\r\n    data:{foo:''},\r\n    computed:{\r\n        async bar(){\r\n            return await promise\r\n        }\r\n    },\r\n    watch:{\r\n        async bar(){\r\n            this.foo = await bar\r\n        }\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\n<template>\r\n{{await foo}}\r\n</template>\r\n\r\n//js\r\nvar promise = new Promise(s=>setTimeout(s(1)))\r\n{\r\n    computed:{\r\n        async foo(){\r\n            return await promise\r\n        }\r\n    },\r\n}\r\n\r\n\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10270","RelatedDescription":"Closed issue \"allow await value in Template\" (#10270)"},{"Id":"467964319","IsPullRequest":false,"CreatedAt":"2019-07-15T06:42:45","Actor":"zrh122","Number":"10271","RawContent":null,"Title":"dynamic v-slot maybe overwite when used together with v-for on same element","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/zrh122/scg6eq1t/](https://jsfiddle.net/zrh122/scg6eq1t/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open the reproduction link\r\n2. look at the rendered result\r\n\r\n### What is expected?\r\n```js\r\na: a\r\nb: b\r\n```\r\n\r\n### What is actually happening?\r\n```js\r\na:\r\nb: b\r\n```\r\n\r\n---\r\nThis is an english version of issue #10165.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10271","RelatedDescription":"Open issue \"dynamic v-slot maybe overwite when used together with v-for on same element\" (#10271)"},{"Id":"467854100","IsPullRequest":true,"CreatedAt":"2019-07-14T15:43:09","Actor":"Floridacustom86","Number":"10268","RawContent":null,"Title":"Regression test","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10268","RelatedDescription":"Closed or merged PR \"Regression test\" (#10268)"},{"Id":"467853697","IsPullRequest":true,"CreatedAt":"2019-07-14T15:38:44","Actor":"Floridacustom86","Number":"10267","RawContent":null,"Title":"sned it","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10267","RelatedDescription":"Closed or merged PR \"sned it\" (#10267)"},{"Id":"467816059","IsPullRequest":false,"CreatedAt":"2019-07-14T13:03:03","Actor":"jacekkarczmarczyk","Number":"10266","RawContent":null,"Title":"return type of scopedSlots.foo({}) doesn't match the return type of render() in functional components","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/1yonhcvb/](https://jsfiddle.net/1yonhcvb/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```ts\r\nimport Vue, { VNode } from 'vue';\r\n\r\n// Works\r\nVue.extend({\r\n  functional: true,\r\n  render: (h, { scopedSlots }) => scopedSlots.default({}) as VNode[],\r\n});\r\n\r\n// Doesn't work\r\nVue.extend({\r\n  functional: true,\r\n  render: (h, { scopedSlots }) => scopedSlots.default({}),\r\n});\r\n```\r\n\r\n### What is expected?\r\nI should be able to return scoped slot without casting\r\n\r\n### What is actually happening?\r\nI need to cast scoped slot return value to VNode[], otherwise it results in TS error:\r\n```\r\nArgument of type '{ functional: boolean; render: (h: CreateElement, { scopedSlots }: RenderContext<Record<never, any>>) => ScopedSlotChildren; }' is not assignable to parameter of type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Record<string, any>>, Record<string, any>>'.\r\n  Object literal may only specify known properties, and 'functional' does not exist in type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Record<string, any>>, Record<string, any>>'.ts(2345)\r\n```\r\n\r\n---\r\nMight be related to https://github.com/vuejs/vue/issues/9372\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10266","RelatedDescription":"Closed issue \"return type of scopedSlots.foo({}) doesn't match the return type of render() in functional components\" (#10266)"},{"Id":"467778969","IsPullRequest":false,"CreatedAt":"2019-07-14T12:53:00","Actor":"colin-guyon","Number":"10265","RawContent":null,"Title":"Limited set of reactive props for a data nested object","State":"closed","Body":"### What problem does this feature solve?\r\n**Referencing a big object in the data of a component can lead to performance issues**: indeed Vue automatically recursively observes all properties found in the object.\r\n\r\nThis is not ideal to reference big objects that are not just pure data or states, but especially in the context of a progressive migration of a legacy application to Vue (ie. adding new components on top of an existing architecture), one can have parts of existing big objects to observe for components to react seamlessly.\r\n\r\nI had performance issues when referencing an object having itself references to Three JS stuffs (meshes...): interacting with the 3D scene was much slower after the instantiation of the Vue component, whereas I just needed some properties at the root of this object to become reactive.\r\n\r\nThus I suggest adding the possibility to specify a limited set of properties to observe for an object referenced in the data of a component.\r\n\r\nA good practice in such case is certainly to isolate the needed properties inside a much smaller object without uncontrolled content, but in the context of a progressive migration, refactoring things cannot always be an option.\r\nCopying and/or partially freezing the object is not an option in my case as it needs to stay mutable for the existing application to keep working.\r\nIn my case the interesting properties being of simple types (String, Number, boolean...) and being at the root of the big object,  the entry point is the big object itself.\r\n\r\nIn my mind Vue is recommended for eg. over React for projects where you want a progressive migration towards a modern component-based framework, and in this context adding this feature would help.\r\n\r\n(Previously discussed here: https://forum.vuejs.org/t/limited-set-of-reactive-props-for-a-data-nested-object/)\r\n\r\nI could work on a PR, even if I don't have a lot of time, but for the moment this is just a feature suggestion :)\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n// src/someLegacyModule.js\r\nexport const bigOject = {\r\n  propA: ...,\r\n  propB: ...,\r\n  bar: {\r\n    deeperProp: ...,\r\n    // lots of stuffs we don't need in our Vue components\r\n  }\r\n  // lots of stuffs we don't need in our Vue components\r\n}\r\n```\r\n\r\nInitially I thought of something like the following, but it could be considered as not totally consistent with the framework as an import is needed:\r\n\r\n```javascript\r\nimport bigObject from '@/src/someLegacyModule'\r\nimport { PartialObserver } from 'vue'\r\n\r\nexport default {\r\n  template: `\r\n    <div>\r\n      {{ foo.propA }}\r\n      <div v-if=\"foo.propB\">{{ foo.bar.deeperProp }}</div>\r\n    </div>\r\n  `,\r\n  data () {\r\n    return {\r\n      // only make needed properties reactive on bigOject (as it could be huge and very deep)\r\n      foo: PartialObserver(bigObject, ['propA', 'propB', 'bar.deeperProp']),\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nOr maybe something like this, without additional import:\r\n \r\n```javascript\r\nexport default {\r\n  data () {\r\n    return {\r\n      foo: {\r\n        // only make needed properties reactive on bigOject (as it could be huge and very deep)\r\n        __partialObserver: [bigObject, ['propA', 'propB', 'bar.deeperProp']])\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe name of the added special property where we can define the limited list of properties to make reactive could be different: `'_observeOnly'`, `'_watchOnly'`, `'_reactiveProps'` ... ? Maybe adding a `$` or `_vue` prefix (but I know this is more for Vue internals) ?\r\n\r\nIt could also be separate, as not adding an extra level of indirection may be easier to implement:\r\n\r\n ```javascript\r\nexport default {\r\n  data () {\r\n    return {\r\n      foo: bigObject,\r\n      __settings: {\r\n        foo: {\r\n          watchOnly:  ['propA', 'propB', 'bar.deeperProp']\r\n        }\r\n      }\r\n    }\r\n  },\r\n  // ... or instead of the above:\r\n  // dataConfig: {\r\n  //   foo: {\r\n  //     watchOnly:  ['propA', 'propB', 'bar.deeperProp']\r\n  //   }\r\n  // },\r\n}\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10265","RelatedDescription":"Closed issue \"Limited set of reactive props for a data nested object\" (#10265)"},{"Id":"467734133","IsPullRequest":false,"CreatedAt":"2019-07-13T15:33:52","Actor":"rikser123","Number":"10264","RawContent":null,"Title":"Styles duplicate in html head section and in chunked files","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\nI use mini-css-extract plugin in my vue-ssr project.\r\nIt creates different style chunks files well, but all .scss files imported in single file components duplicates in vue-server bundle.\r\n\r\nHow can I prevent css from being in server bundle?\r\n\r\n` optimization: {\r\n        minimizer: IS_PRODUCTION ? minimizer: [],\r\n        splitChunks: {\r\n          cacheGroups: {\r\n              styles: {\r\n                name: 'styles',\r\n                test: /\\.css$/,\r\n                chunks: 'all',\r\n                enforce: true,\r\n              },\r\n        },\r\n    },\r\n    },\r\n\r\nconst baseStyleLoaders = IS_PRODUCTION ? [MiniCssExtractPlugin.loader, 'css-loader'] : ['css-loader'];\r\n\r\nconst plugins = [\r\n    new webpack.NoEmitOnErrorsPlugin(),\r\n    new webpack.HotModuleReplacementPlugin(),\r\n\r\n    new VueLoaderPlugin(),\r\n    new CopyWebpackPlugin(copyPulginOptions),\r\n    new HtmlWebPackPlugin({\r\n         title: 'App',\r\n         filename: \"index.html\",\r\n         template: 'index.html',\r\n    }),\r\n\r\n    new MiniCssExtractPlugin({\r\n      filename: \"./style.[contenthash].css\",\r\n      publicPath: '/'\r\n    }),\r\n    new webpack.ProvidePlugin({\r\n        'window.Quill': 'quill'\r\n      })\r\n];\r\n`\r\n","Url":"https://github.com/vuejs/vue/issues/10264","RelatedDescription":"Closed issue \"Styles duplicate in html head section and in chunked files\" (#10264)"},{"Id":"467689221","IsPullRequest":false,"CreatedAt":"2019-07-13T08:21:07","Actor":"wenfangcn","Number":"10263","RawContent":null,"Title":"Computed property bug","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-nursj](https://codesandbox.io/embed/vue-template-nursj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPlease follow the comments in the code\r\n\r\n### What is expected?\r\nTwo logs are the same\r\n\r\n### What is actually happening?\r\nTwo logs aren't the same\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10263","RelatedDescription":"Closed issue \"Computed property bug\" (#10263)"},{"Id":"467361214","IsPullRequest":false,"CreatedAt":"2019-07-12T11:19:35","Actor":"Repugraf","Number":"10262","RawContent":null,"Title":"Please let us change default behavior of v-bind!","State":"closed","Body":"<p>I'm using vee-validate package (to validate forms) and I'm binding the value like this <i><strong>:value=\"someValue\"</strong></i>. The problem is that vee-validate checks only changes of <i><strong>value</strong></i> attribute. The main issue is when <i><strong>someValue</strong></i> is empty then the attribute will not appear at all! That means that the first time user changes input the value sets and only after second change it will be checked by vee-validate.</p>\r\n<p>To fix the issue I had to set the value without v-bind like this: </p>\r\n<p><i><strong>&lt;input type=&quot;text&quot; :name=&quot;someName&quot; value=&quot;&quot; /&gt;</strong></i></p>\r\n<p>And then change the value with pure js</p>\r\n\r\n<hr/>\r\n<h2>The behavior I'd like to see:</h2>\r\n\r\n<p>\r\nThe code: <br>\r\n<i><strong>&lt;input type=&quot;text&quot; :name=&quot;someName&quot; :value=&quot;someValue&quot; /&gt;</strong></i> - the <i><strong>someValue</strong></i> is empty</p>\r\n<p>\r\nThe rendered code: <br>\r\n<i><strong>&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;&quot; /&gt;</strong></i>\r\n</p>\r\n<hr/>\r\n<h2>Ideas how to implement it:</h2>\r\n<ul>\r\n<li>Change the behavior of v-bind</li>\r\n<li>Return removed syntax: <i>value=\"{{someVlaue}}\"</i></li>\r\n<li>Add options: <i>v-bind.force:value=\"someValue\"</i></li>\r\n</ul>","Url":"https://github.com/vuejs/vue/issues/10262","RelatedDescription":"Closed issue \"Please let us change default behavior of v-bind!\" (#10262)"},{"Id":"467254908","IsPullRequest":false,"CreatedAt":"2019-07-12T07:45:53","Actor":"lanzhou2333","Number":"10261","RawContent":null,"Title":"Entering consecutive decimal points or multiple decimal points in the input tag that using the v-model binding results in null values for the bound variable","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/qzwdLg](https://codepen.io/anon/pen/qzwdLg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.input number 1234 , the next line dispaly the value of rechargeValue = 1234\r\n2.input number 1234. ,the next line dispaly the value of rechargeValue = 1234\r\n3.intpu number 1234.4, the next line dispaly the value of rechargeValue = 1234.4\r\n4.input 1234.. the next line dispaly the value of rechargeValue =\r\n  no display here \r\n5 input 1234.123.321  no display,the value of recharegeValue is \"\"\r\nall input above can ben input to the input tag like <input type=\"number\" > correctly.\r\n\r\n### What is expected?\r\nthe correct result or a exception\r\n\r\n### What is actually happening?\r\nwhen the value of the input tag can't be convert from string(may be) to the number. the variable will be a null value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10261","RelatedDescription":"Closed issue \"Entering consecutive decimal points or multiple decimal points in the input tag that using the v-model binding results in null values for the bound variable\" (#10261)"},{"Id":"467223439","IsPullRequest":false,"CreatedAt":"2019-07-12T05:07:52","Actor":"maunier","Number":"10260","RawContent":null,"Title":"v-bind not update dom in client side when data in client side is different from the server side","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/maunier/nuxt-learning](https://github.com/maunier/nuxt-learning)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install\r\nnpm run dev\r\nhttp://127.0.0.1:8080/\r\n\r\n### What is expected?\r\ni expect the div is like this:\r\n```\r\n<div text=\"isClient\">isClient</div>\r\n```\r\n\r\n### What is actually happening?\r\nbut now it is:\r\n```\r\n<div text=\"isServer\">isClient</div>\r\n```\r\n\r\n---\r\nit is not Nuxt's issue, I have tested in my own vue-ssr server without Nuxt, the problem is exsist still.  but the that project is not on the github, so i paste the nuxt project's link here\r\n\r\nthe core code is like this:\r\n```\r\n<div :text=\"text\">{{ text }}</div>\r\n```\r\n```\r\ndata () {\r\n      return {\r\n        text: ''\r\n      }\r\n    },\r\n\r\n    created () {\r\n      this.text = Vue.prototype.$isServer ? 'isServer' : 'isClient'\r\n    },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10260","RelatedDescription":"Open issue \"v-bind not update dom in client side when data in client side is different from the server side\" (#10260)"},{"Id":"467186163","IsPullRequest":false,"CreatedAt":"2019-07-12T02:14:02","Actor":"Kidwind","Number":"10259","RawContent":null,"Title":"服务器端渲染使用Store Code Splitting动态注册Stored导致 The client-side rendered virtual DOM tree is not matching server-rendered content. 的问题","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/Kidwind/vue-ssr-template.git](https://github.com/Kidwind/vue-ssr-template.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n根据官方文档创建一个服务器端渲染的应用，将页面的存储直接写在根目录的store.js文件中，没有问题，但随着项目的复杂度增加，全都写在根目录的store.js中会导致代码臃肿，因而考虑使用官方文档的Store Code Splitting模式 （https://ssr.vuejs.org/guide/data.html#store-code-splitting），但改成该模式后，服务器端渲染完成后会在控制台提示：\r\n\r\n“[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.”\r\n\r\n且页面后续操作无法正常运行。\r\n\r\n### What is expected?\r\n消除控制台错误提示且页面正常运行。\r\n\r\n### What is actually happening?\r\n控制台提示：\r\n\r\n“[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.”\r\n\r\n初步估计按官方文档的模式修改，会导致store模块的注册晚于客户端的vdom与服务器端渲染的 DOM 结构的匹配验证，因而导致了错误提示及页面无法正常运行。\r\n\r\n---\r\n建议官方提供可行的解决方案。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10259","RelatedDescription":"Open issue \"服务器端渲染使用Store Code Splitting动态注册Stored导致 The client-side rendered virtual DOM tree is not matching server-rendered content. 的问题\" (#10259)"},{"Id":"467061471","IsPullRequest":false,"CreatedAt":"2019-07-11T19:23:29","Actor":"pyskell","Number":"10258","RawContent":null,"Title":"Warn when Vue.set is used on a nested property such as propA.propB or probC[0]","State":"closed","Body":"### What problem does this feature solve?\r\nI attempted to do `Vue.set(object, 'attribute.nestedAttribute', value) and rather than setting `object.attribute.nestedAttribute = value` I got an object that looked like: `{attribute.nestedAttribute = value}`.\r\n\r\nI had no idea this was even possible within JavaScript and when debugging it in Vue devtools it first took a while to notice what had happened (I initially assumed Vue popped it to the root of my object just to highlight that it changed).\r\n\r\nIt would be very helpful if a warning could be added for certain reserved characters and keywords that have no business being used/set like this.\r\n\r\n### What does the proposed API look like?\r\nNo changes to API, just a warning.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10258","RelatedDescription":"Closed issue \"Warn when Vue.set is used on a nested property such as propA.propB or probC[0]\" (#10258)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"469374275","IsPullRequest":true,"CreatedAt":"2019-07-17T18:23:24","Actor":"darrylhein","Number":"2855","RawContent":null,"Title":"Adding periods in docs","State":"open","Body":"very minor\r\n","Url":"https://github.com/vuejs/vue-router/pull/2855","RelatedDescription":"Open PR \"Adding periods in docs\" (#2855)"},{"Id":"469283566","IsPullRequest":false,"CreatedAt":"2019-07-17T15:21:55","Actor":"atrueresistance","Number":"2854","RawContent":null,"Title":"Why does vue.js report 404 route in production, but not development?","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development](https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRunning npm run serve I can visit auth/login, but after npm run build the server returns a 404 on auth/login.\r\n\r\nI get a 404 when going to https://example.com/auth/login but navigating to https://example.com/address-records works just fine. It seems as if only something that is more than a single / deep returns a 404.\r\n\r\nHere is the router code\r\n\r\n```\r\nlet router = new Router({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      name: \"home\",\r\n      component: Home\r\n    },\r\n    {\r\n      path: \"/auth/login\",\r\n      name: \"Login\",\r\n      component: Login\r\n    },\r\n    {\r\n      path: \"/address-records\",\r\n      name: \"Address\",\r\n      component: Address\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nIs there something special I need to be doing with Nginx? I have it setup with similar searched questions.\r\n\r\n```\r\n location / {\r\n        try_files $uri $uri/ /index.html;\r\n }\r\n location @rewrites {\r\n         rewrite ^(. )$ /index.html last;\r\n      }\r\n\r\n location ~* \\.(?:ico|css|js|gif|jpe?g|png)$ {\r\n         # Some basic cache-control for static files to be sent to the browser\r\n         expires max;\r\n         add_header Pragma public;\r\n         add_header Cache-Control \"public, must-revalidate, proxy-revalidate\";\r\n  }\r\n```\r\n\r\n### What is expected?\r\n200 status code from auth/login in production\r\n\r\n### What is actually happening?\r\n404 status code from auth/login in production\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2854","RelatedDescription":"Closed issue \"Why does vue.js report 404 route in production, but not development?\" (#2854)"},{"Id":"469007379","IsPullRequest":true,"CreatedAt":"2019-07-17T06:49:12","Actor":"graup","Number":"2853","RawContent":null,"Title":"Add named exports RouterLink, RouterView to es modules","State":"closed","Body":"#1976\r\n","Url":"https://github.com/vuejs/vue-router/pull/2853","RelatedDescription":"Closed or merged PR \"Add named exports RouterLink, RouterView to es modules\" (#2853)"},{"Id":"468804144","IsPullRequest":false,"CreatedAt":"2019-07-16T18:36:51","Actor":"rSammy","Number":"2852","RawContent":null,"Title":"Cannot use router link with @contextmenu","State":"closed","Body":"Hello,\r\n\r\nI figured it's impossible to use @contextmenu event with router-link.\r\n\r\nI first thought I did something wrong before realizing I didn't touch this file, so there shouldn't be any problem with contextmenu.\r\n\r\nBut then I remembered @contextmenu was working when I used div before my previous changes.\r\n\r\n**Line 483** I found this function in **vue-router-esm.js**\r\nI guess instead of just \"return\", the router should emit @contextmenu event or something like this, am I wrong ?\r\n\r\n```\r\nfunction guardEvent (e) {\r\n  // don't redirect with control keys\r\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\r\n  // don't redirect when preventDefault called\r\n  if (e.defaultPrevented) { return }\r\n  // don't redirect on right click\r\n  if (e.button !== undefined && e.button !== 0) { return }\r\n  // don't redirect if `target=\"_blank\"`\r\n  if (e.currentTarget && e.currentTarget.getAttribute) {\r\n    var target = e.currentTarget.getAttribute('target');\r\n    if (/\\b_blank\\b/i.test(target)) { return }\r\n  }\r\n  // this may be a Weex event which doesn't have this method\r\n  if (e.preventDefault) {\r\n    e.preventDefault();\r\n  }\r\n  return true\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2852","RelatedDescription":"Closed issue \"Cannot use router link with @contextmenu\" (#2852)"},{"Id":"468772602","IsPullRequest":true,"CreatedAt":"2019-07-16T17:39:50","Actor":"posva","Number":"2851","RawContent":null,"Title":"fix(hash): correctly place query after first hash","State":"closed","Body":"Fixes #2125 \r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2851","RelatedDescription":"Closed or merged PR \"fix(hash): correctly place query after first hash\" (#2851)"},{"Id":"468535290","IsPullRequest":false,"CreatedAt":"2019-07-16T09:07:44","Actor":"chenguzhen87","Number":"2850","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://www.lulutopic.com/web/#/login](http://www.lulutopic.com/web/#/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、设置hash路由\r\n2、在iphone下打开带hash路由\r\n3、点击浏览器‘复制’按纽\r\n4、粘贴地址\r\n\r\n### What is expected?\r\n粘贴地址带上hash部分\r\n\r\n### What is actually happening?\r\nhash地址丢失\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2850","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2850)"},{"Id":"468529272","IsPullRequest":false,"CreatedAt":"2019-07-16T08:54:06","Actor":"chenguzhen87","Number":"2849","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"在浏览器中点击复制链接，但是复制出来的链接hash部分丢失\r\n","Url":"https://github.com/vuejs/vue-router/issues/2849","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2849)"},{"Id":"468518712","IsPullRequest":false,"CreatedAt":"2019-07-16T08:32:21","Actor":"zhengxsFE","Number":"2848","RawContent":null,"Title":"createHref 方法能否变成公共方法","State":"closed","Body":"### What problem does this feature solve?\r\n**场景一：**\r\n\r\n我的商城 base 是 /h5/shop/:shopId ( node 路由 )\r\n\r\nMy mall 'base' is 'h5/shop/: shopId' (node routing)\r\n\r\n\r\n点击购物车需要跳转到登录页，但是 fullPath 拿到的 path 不包含 base 的内容\r\n\r\nClick on the shopping cart to jump to the login page, but the 'path' of 'fullPath' does not contain the content of 'base'.\r\n\r\n\r\n每次都手动拼接，希望能变成一个公共方法，（ps: 应用有多个，目前左右一个函数在使用）\r\n\r\nHope to make this method public\r\n\r\n\r\n**场景二：**\r\n\r\n购买成功页需要生成海报，海报的地址指向商品详情页，需要生成 url 地址\r\n\r\nBusiness needs to generate URLs for other pages\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n/**\r\n * url join\r\n *\r\n * @param {String|Object} location\r\n * @param {Object} [options=null]\r\n * @param {Boolean} [options.base=false]\r\n *\r\n * @returns {String|Null}\r\n */\r\nrouter.url(location, options?)\r\n\r\n// -> /home\r\nrouter.url('home')\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url('home', {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url({ path: 'home' }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/member/123\r\nrouter.url({ name: 'member', params: { memberId: '123' } }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/products?sort=date\r\nrouter.url({ path: 'products', query: { sort: 'date' } }, {\r\n  base: true\r\n})\r\n```\r\n\r\n\r\n```javascript\r\n// 或者 route 添加 href 字段\r\nroute.href = '/h5/shop/1/shopping-cart'\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2848","RelatedDescription":"Closed issue \"createHref 方法能否变成公共方法\" (#2848)"},{"Id":"467233641","IsPullRequest":false,"CreatedAt":"2019-07-12T08:40:45","Actor":"Rolanddoda","Number":"2847","RawContent":null,"Title":"Visiting another page immediately creates the respective component, before disposing the component of the previous page. ","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (/ route)\r\n2. Click the Contact button to navigate to the contact component (/contact route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact components (or pages) I use store.registerModule and store.unregisterModule to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nVue router runs the new component before destroying the old one.\r\n\r\n---\r\nInitially I thought was a vuex issue and I opened one [here](https://github.com/vuejs/vuex/issues/1580). But then I saw that is a vue router issue. I tried to find if that issue already exists and couldn't find something.\r\n\r\nAs a workaround I can use transition mode out-in. And everything works\r\n```js\r\n    <transition mode=\"out-in\">\r\n      <router-view></router-view>\r\n    </transition>\r\n```\r\n\r\nbut to me, it doesn't makes sense to mount a component, before destroying the other one. What I am missing?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2847","RelatedDescription":"Closed issue \"Visiting another page immediately creates the respective component, before disposing the component of the previous page. \" (#2847)"},{"Id":"466813370","IsPullRequest":false,"CreatedAt":"2019-07-11T10:42:06","Actor":"up-chen","Number":"2846","RawContent":null,"Title":"路由返回错误","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\na页面使用router.push跳到b页面，b页面在beforeEnter钩子里面重定向到了c页面（replace），从c页面返回时直接到了空页面，没有返回到a页面\r\n![image](https://user-images.githubusercontent.com/20765130/61044509-65bd2180-a40b-11e9-9a5d-2bf93aae8e51.png)\r\n![image](https://user-images.githubusercontent.com/20765130/61044538-7372a700-a40b-11e9-99ad-58088c658851.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2846","RelatedDescription":"Closed issue \"路由返回错误\" (#2846)"},{"Id":"466782855","IsPullRequest":false,"CreatedAt":"2019-07-11T09:42:58","Actor":"ZhiGang-Fang","Number":"2845","RawContent":null,"Title":"There's no routing rules in history mode that don't match","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nIn history mode, no routing rules can be matched, only: path: '/register' can be matched, while path:' /member/register' cannot be matched, nor can dynamic routing attempts be matched\r\n\r\n\r\n`\r\n{\r\n        path: '/member/register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n    }\r\n\r\n\r\n{\r\n    path: '/:member',\r\n    component: { render: h => h('router-view') },\r\n    children: [ \r\n      {\r\n        path: 'register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n`\r\n\r\nIn the hash mode, the error is reported as follows: ‘Uncaught SyntaxError: Unexpected token <’\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2845","RelatedDescription":"Closed issue \"There's no routing rules in history mode that don't match\" (#2845)"},{"Id":"465619547","IsPullRequest":false,"CreatedAt":"2019-07-09T07:34:18","Actor":"lk8888","Number":"2844","RawContent":null,"Title":"typescript error Property 'matcher' does not exist on type 'VueRouter'.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nthis is my code:\r\nconst router = createRouter();\r\n\r\nexport function resetRouter() {\r\n  const newRouter = createRouter();\r\n  router.matcher = newRouter.matcher; // reset router\r\n}\r\nthe error:\r\nTS2339: Property 'matcher' does not exist on type 'VueRouter'.","Url":"https://github.com/vuejs/vue-router/issues/2844","RelatedDescription":"Closed issue \"typescript error Property 'matcher' does not exist on type 'VueRouter'.\" (#2844)"},{"Id":"465472063","IsPullRequest":false,"CreatedAt":"2019-07-09T07:03:50","Actor":"iFgR","Number":"2843","RawContent":null,"Title":"How to extract only components RouterView and RouterLink?","State":"closed","Body":"### What problem does this feature solve?\r\nLoad only the *router-view* and *router-link* will give me the ability to use external VueRouter instance.\r\n\r\nI'm working with web-components and I have an AppShell with VueRouter and I'm using a web-component inside them with another VueRouter.\r\nEverything inside the web-component are working fine but my AppShell can't load the router components.\r\n\r\n### What does the proposed API look like?\r\nI think something like **const { RouterView, RouterLink } = VueRouter** can help\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2843","RelatedDescription":"Closed issue \"How to extract only components RouterView and RouterLink?\" (#2843)"},{"Id":"465416375","IsPullRequest":false,"CreatedAt":"2019-07-08T19:13:27","Actor":"koszar93","Number":"2842","RawContent":null,"Title":"Best way to create vue-router - Online Shop","State":"closed","Body":"i have a little problem with prepare vue-router to my Online Shop. I have two level product category tree view with parent and child item.\r\nMy category view, is built dynamic of data get from the database:\r\n\r\n>     PARENT\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 2\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 3\r\n>     - CHILD 1\r\n>     PARENT 4\r\n>     - CHILD 1\r\n>     - CHILD 2\r\n> \r\n\r\netc.\r\nI don’t know how to prepare dynamic router. Now, i do something like that:\r\n\r\n```\r\n    {\r\n            name: 'Produkty',\r\n            display: true,\r\n            meta: { requiresAuth: false, menuType: 'topNav' },\r\n            path: '/product/:categoryId?/:subCategoryId?',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product')\r\n          },\r\n          {\r\n            name: 'productDetail',\r\n            display: false,\r\n            meta: { requiresAuth: false },\r\n            path: '/product/:categoryId/:subCategoryId/:productId',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product/Details')\r\n          }\r\n```\r\n\r\nI don't know is this a good way? Maybe anyone have better idea for this?\r\nI also want to implement dynamic breadcrumbs base on router path.\r\n\r\nAnd other question:\r\nHow to redirect from: http://localhost/produkt/1234/523/123(productId) to http://localhost/product_name.html for example ? Or.. id from url chage to http://localhost/parent_1/child_1/product_1 ??","Url":"https://github.com/vuejs/vue-router/issues/2842","RelatedDescription":"Closed issue \"Best way to create vue-router - Online Shop\" (#2842)"},{"Id":"464976350","IsPullRequest":true,"CreatedAt":"2019-07-07T17:50:43","Actor":"debs-obrien","Number":"2841","RawContent":null,"Title":"docs: update active class explanation","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2841","RelatedDescription":"Open PR \"docs: update active class explanation\" (#2841)"},{"Id":"464165688","IsPullRequest":false,"CreatedAt":"2019-07-04T09:33:08","Actor":"ykushev","Number":"2840","RawContent":null,"Title":"Add afterRouteEnter guard","State":"open","Body":"### What problem does this feature solve?\r\nI want execute one function in component after each routing (enter route, reused in the new route)\r\n\r\n### What does the proposed API look like?\r\nvariant 1:\r\n```\r\nbeforeRouteUpdate (to, from, next) {\r\n        console.log('page category beforeRouteUpdate');\r\n        next(() => {\r\n            // this don't calling\r\n            console.log('page category beforeRouteUpdate next');\r\n            this.$store.dispatch('catalog/exec');\r\n        });\r\n    },\r\n```\r\n\r\nvariant 2: add hook named \"afterRouteUpdate\" that will calling after we enter in route and after each time we navigating in this route (foo/2 -> foo/3)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2840","RelatedDescription":"Open issue \"Add afterRouteEnter guard\" (#2840)"},{"Id":"463845211","IsPullRequest":false,"CreatedAt":"2019-07-03T16:57:38","Actor":"juanescarraga","Number":"2839","RawContent":null,"Title":"Color active state on link does not return to color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the project in the browser.\r\nThe link with the name Say Hello appears in the browser.\r\nThe default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\nThe gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\nIn tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2839","RelatedDescription":"Closed issue \"Color active state on link does not return to color\" (#2839)"},{"Id":"462388128","IsPullRequest":true,"CreatedAt":"2019-07-02T20:09:24","Actor":"Alexeykhr","Number":"2838","RawContent":null,"Title":"Handle Promise rejection in guards (fix #2833)","State":"closed","Body":"#2833","Url":"https://github.com/vuejs/vue-router/pull/2838","RelatedDescription":"Closed or merged PR \"Handle Promise rejection in guards (fix #2833)\" (#2838)"},{"Id":"461054597","IsPullRequest":false,"CreatedAt":"2019-06-30T09:44:07","Actor":"kahirokunn","Number":"2827","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31](https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMaybe this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n\r\n### What is expected?\r\nI expected correct `getMatchedComponents` type\r\n\r\n### What is actually happening?\r\nI try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2827","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2827)"},{"Id":"461058663","IsPullRequest":true,"CreatedAt":"2019-06-30T09:43:54","Actor":"kahirokunn","Number":"2828","RawContent":null,"Title":"maybe getMatchedComponents type is missed #2827","State":"closed","Body":"This pull request for solved this issue.\r\nhttps://github.com/vuejs/vue-router/issues/2827","Url":"https://github.com/vuejs/vue-router/pull/2828","RelatedDescription":"Closed or merged PR \"maybe getMatchedComponents type is missed #2827\" (#2828)"},{"Id":"461944569","IsPullRequest":false,"CreatedAt":"2019-06-28T09:32:51","Actor":"liho00","Number":"2837","RawContent":null,"Title":"External JavaScript working when changing route","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nthis feature should allow the javascript works when changing routes. \r\n\r\n### What does the proposed API look like?\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works in different paths.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2837","RelatedDescription":"Closed issue \"External JavaScript working when changing route\" (#2837)"},{"Id":"461942087","IsPullRequest":false,"CreatedAt":"2019-06-28T09:23:21","Actor":"liho00","Number":"2836","RawContent":null,"Title":"External JavaScript stop working when changing route","State":"closed","Body":"I am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works with different paths.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2836","RelatedDescription":"Closed issue \"External JavaScript stop working when changing route\" (#2836)"},{"Id":"461913917","IsPullRequest":false,"CreatedAt":"2019-06-28T08:20:25","Actor":"liubin595338764","Number":"2835","RawContent":null,"Title":"base是否能当成params参数来配置？","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://www](https://www)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n### What is expected?\r\n希望在history模式的时候可以把`base`当成`params`来处理，\r\n\r\n对于多公司访问通一个应用的时候，这样的链接比较好看，\r\n\r\n比如：\r\n```js\r\nexport default new Router({\r\n    mode: 'history',\r\n    base: '/:company',\r\n    routes: routes\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n---\r\n希望能尽快支持哦\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2835","RelatedDescription":"Closed issue \"base是否能当成params参数来配置？\" (#2835)"},{"Id":"461897204","IsPullRequest":false,"CreatedAt":"2019-06-28T07:41:09","Actor":"Mighty683","Number":"2834","RawContent":null,"Title":"Add beforeUpdate to route config","State":"closed","Body":"### What problem does this feature solve?\r\nSince for now we can't handle lazy loading components without losing access to navigation hooks build in components we should give equal API on router config level.\r\nFor now we can only add `beforeEnter` route guard. It would be usefull if we had `beforeUpdate` guard too.\r\n\r\nProblem with lazy loading components described here: \r\nhttps://github.com/vuejs/vue-router/issues/2830\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/foo',\r\n      component: Foo,\r\n      beforeUpdate: (to, from, next) => {\r\n        // ...\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2834","RelatedDescription":"Closed issue \"Add beforeUpdate to route config\" (#2834)"},{"Id":"461529830","IsPullRequest":false,"CreatedAt":"2019-06-27T13:28:28","Actor":"posva","Number":"2833","RawContent":null,"Title":"Handle Promise rejection in guards","State":"open","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/orzwg537/](https://jsfiddle.net/orzwg537/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle and look in console\r\n\r\n### What is expected?\r\na message saying error caught\r\n\r\n### What is actually happening?\r\nThere is an Unhandled Promise rejection instead\r\n\r\n---\r\nCurrently, errors thrown in guards are caught by router.onError but Promises rejections (or error thrown in an `async` function) are not caught. This should be handled in all the other guards as well\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2833","RelatedDescription":"Open issue \"Handle Promise rejection in guards\" (#2833)"},{"Id":"461488156","IsPullRequest":false,"CreatedAt":"2019-06-27T12:06:14","Actor":"stavid","Number":"2832","RawContent":null,"Title":" use history mode,history.length is wrong","State":"closed","Body":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2831](https://github.com/vuejs/vue-router/issues/2831)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nexport default new Router({\r\nmode: 'history',\r\nroutes: [\r\n\r\n\t{\r\n\t\tpath: '/A',\r\n\t\tname: 'A',\r\n                   component: resolve => require(['../components/files/\r\n\r\nA.vue'], resolve),\r\nmeta: {\r\ntitle: 'A'\r\n}\r\n},\r\nopen A page ,print history.length in beforeEach method , the message is：\r\n\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n### What is expected?\r\nhistory.length add 1\r\n\r\n### What is actually happening?\r\nhistory.length add 2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2832","RelatedDescription":"Closed issue \" use history mode,history.length is wrong\" (#2832)"},{"Id":"461486225","IsPullRequest":false,"CreatedAt":"2019-06-27T11:56:25","Actor":"stavid","Number":"2831","RawContent":null,"Title":"use history mode,history.length is wrong","State":"closed","Body":"export default new Router({\r\n\tmode: 'history',\r\n\troutes: [\r\n\r\n\t\t{\r\n\t\t\tpath: '/A',\r\n\t\t\tname: 'A',\r\n                       component: resolve => require(['../components/files/\r\nA.vue'], resolve),\r\n\t\t\tmeta: {\r\n\t\t\t\ttitle: 'A'\r\n\t\t\t}\r\n\t\t},\r\n-------------------------------\r\nopen A page ,print history.length  in beforeEach method , the message is：\r\n---------------------------------\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2831","RelatedDescription":"Closed issue \"use history mode,history.length is wrong\" (#2831)"},{"Id":"461397478","IsPullRequest":false,"CreatedAt":"2019-06-27T11:48:13","Actor":"Mighty683","Number":"2830","RawContent":null,"Title":"Enable component async loading","State":"closed","Body":"### What problem does this feature solve?\r\nFor now there is no full support for `vue` `async components` described here:\r\n\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nSolution presented in: \r\nhttps://github.com/vuejs/vue-router/pull/2140\r\nhttps://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/router/routes.js\r\nis solving problem only partially because of such construction `beforeRouteEnter` etc guards are not launched due to fact that component is resolved inside another component after route update\r\n\r\nThis problem is also mentioned here:\r\nhttps://forum.vuejs.org/t/vue-router-async-component-loading-error-components-never-shown/40618/2\r\n\r\n### What does the proposed API look like?\r\nUpdate doc with information that this syntax is not working with `vue-router`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2830","RelatedDescription":"Closed issue \"Enable component async loading\" (#2830)"},{"Id":"461074294","IsPullRequest":false,"CreatedAt":"2019-06-26T17:13:08","Actor":"Etheryte","Number":"2829","RawContent":null,"Title":"Make route name map part of public API","State":"closed","Body":"### What problem does this feature solve?\r\nWorking with large-scale applications, a fairly common problem when using vue-router is trying to avoid inline string constants for link definitions and programmatic navigation. For example:\r\n\r\n```html\r\n<router-link to=\"/documents\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(\"/documents\");\r\n```\r\n\r\nInline constants like these are subject to rot over time, human error when refactoring multiple documents and other similar errors. As an application grows in size, these issues become more prominent.\r\n\r\n### What does the proposed API look like?\r\nAs a solution, our shop often uses a mapping from route name to a route definition. Sample implementation:\r\n\r\n```ts\r\ninterface IRouteMap {\r\n  [key: string]: ReturnType<Router['resolve']> & { name: string };\r\n}\r\n\r\nfunction mapRoutes(routeMap: IRouteMap, routes: RouteConfig[] = []) {\r\n  return routes.reduce((map, route) => {\r\n    const name = route.name;\r\n    if (name) {\r\n      map[name] = Object.assign({\r\n        name,\r\n      }, router.resolve(name));\r\n    }\r\n    if (route.children) {\r\n      mapRoutes(map, route.children);\r\n    }\r\n    return map;\r\n  }, routeMap);\r\n}\r\n\r\nexport const routeMap = mapRoutes({}, routes);\r\n```\r\n\r\nLinks and navigation can then simply use the resulting mapping:\r\n\r\n```html\r\n<router-link v-bind:to=\"routeMap.documents.location\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(routeMap.documents.location);\r\n```\r\nor\r\n```ts\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.name !== routeMap.login.name && !store.state.user) ...\r\n});\r\n```\r\n\r\nThis means that changing a route's path requires a single change in the route definition itself and no further refactoring is necessary. Route names are internal and aren't subject to change over time as route paths often can be.\r\n\r\nAdding a similar mapping (or exposing existing internals) to vue-router's public API would provide a standardized solution to the given problem and allow all vue-router consumers to reap the benefits.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2829","RelatedDescription":"Closed issue \"Make route name map part of public API\" (#2829)"},{"Id":"461052290","IsPullRequest":false,"CreatedAt":"2019-06-26T15:51:32","Actor":"kahirokunn","Number":"2826","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"I try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n","Url":"https://github.com/vuejs/vue-router/issues/2826","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2826)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"468913070","IsPullRequest":true,"CreatedAt":"2019-07-16T23:20:37","Actor":"ben-turner","Number":"1582","RawContent":null,"Title":"Update link to flux in README","State":"open","Body":"The current link to flux is broken. Looks like the paths have been updated to not include a file extension.","Url":"https://github.com/vuejs/vuex/pull/1582","RelatedDescription":"Open PR \"Update link to flux in README\" (#1582)"},{"Id":"468441343","IsPullRequest":false,"CreatedAt":"2019-07-16T04:28:09","Actor":"regchiu","Number":"1581","RawContent":null,"Title":"When actions returns promise, the property will be ignored","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-5rovy](https://codesandbox.io/s/vue-template-5rovy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```js\r\nactions: {\r\n    test() {\r\n      let prom = new Promise((resolve) => {\r\n        setTimeout(function(){\r\n          resolve(\"DONE\"); \r\n        }, 3000);\r\n      });\r\n      prom['id'] = 10\r\n      console.log(prom) // Object contains id\r\n      return prom;\r\n    }\r\n  }\r\n```\r\n```js\r\ncreated() {\r\n    let pf = this.$store.dispatch(\"test\");\r\n    console.log(\"PF\", pf); // No id property\r\n    pf.then(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n```\r\n\r\n### What is expected?\r\nThe properties of the object should be displayed in the console.\r\n\r\n### What is actually happening?\r\nThe properties of the object are ignored.\r\n\r\n---\r\nShare questions from the forum\r\n\r\nhttps://forum.vuejs.org/t/custom-promise-properties-in-actions/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1581","RelatedDescription":"Open issue \"When actions returns promise, the property will be ignored\" (#1581)"},{"Id":"466821711","IsPullRequest":false,"CreatedAt":"2019-07-12T05:53:05","Actor":"Rolanddoda","Number":"1580","RawContent":null,"Title":"Duplicate getter key: 'something/something' : When register/unregister Vuex module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (`/` route)\r\n2. Click the `Contact` button to navigate to the contact component (`/contact` route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact  components (or pages) I use `store.registerModule` and `store.unregisterModule` to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nAn error is showing in the console that I have duplicate getter keys.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1580","RelatedDescription":"Closed issue \"Duplicate getter key: 'something/something' : When register/unregister Vuex module\" (#1580)"},{"Id":"466177457","IsPullRequest":false,"CreatedAt":"2019-07-10T08:38:57","Actor":"yoyoys","Number":"1579","RawContent":null,"Title":"[Feature Request] mapModule","State":"open","Body":"### What problem does this feature solve?\r\nThis made namespaced module can be use like simple vuex store.\r\n\r\n### What does the proposed API look like?\r\n`store/modules/myModule.ts`\r\n\r\n```ts\r\n\r\nexport const myModule = {\r\n  state: {\r\n    count: 0\r\n  },\r\n  mutations: {\r\n    add(state, payload) {\r\n      state.count = state.count   payload\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n`lib/someLib.ts`\r\n\r\n```ts\r\nimport store from '@/store'\r\n\r\n// the `myModule` is module path\r\nconst myModule = mapModule<IMyModule>(store, 'myModule')\r\n\r\nconsole.log(myModule.state.count) // 0\r\nmyModule.commit('add', 2)\r\nconsole.log(myModule.state.count) // 2\r\n\r\n// for reuse or singleton?\r\nexport myModule\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1579","RelatedDescription":"Open issue \"[Feature Request] mapModule\" (#1579)"},{"Id":"465584333","IsPullRequest":false,"CreatedAt":"2019-07-09T05:57:06","Actor":"tinyCucumber","Number":"1578","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/cucumbers/pen/bPQQeO](https://codepen.io/cucumbers/pen/bPQQeO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.\r\n\r\n### What is expected?\r\nIf the param cb  is useless, remove it.\r\n\r\n### What is actually happening?\r\nThe param cb for wrappedActionHandler is never used;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1578","RelatedDescription":"Open issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1578)"},{"Id":"465576393","IsPullRequest":false,"CreatedAt":"2019-07-09T05:28:32","Actor":"tinyCucumber","Number":"1577","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"closed","Body":"in the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.Can someone answer my doubts?\r\n\r\n**wrappedActionHandler**\r\n\r\n```javascript\r\nfunction registerAction (store, type, handler, local) {\r\n  const entry = store._actions[type] || (store._actions[type] = [])\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb)\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n**dispatch**\r\n```javascript\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    if (!entry) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(`[vuex] unknown action type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    } catch (e) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`[vuex] error in before action subscribers: `)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload)))\r\n      : entry[0](payload)\r\n\r\n    return result.then(res => {\r\n      try {\r\n        this._actionSubscribers\r\n          .filter(sub => sub.after)\r\n          .forEach(sub => sub.after(action, this.state))\r\n      } catch (e) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`[vuex] error in after action subscribers: `)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return res\r\n    })\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1577","RelatedDescription":"Closed issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1577)"},{"Id":"465294713","IsPullRequest":true,"CreatedAt":"2019-07-08T15:53:27","Actor":"hejialianghe","Number":"1576","RawContent":null,"Title":"vuex-cart","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1576","RelatedDescription":"Closed or merged PR \"vuex-cart\" (#1576)"},{"Id":"465291851","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:06","Actor":"hejialianghe","Number":"1575","RawContent":null,"Title":"Create vuex-cart","State":"closed","Body":"1","Url":"https://github.com/vuejs/vuex/pull/1575","RelatedDescription":"Closed or merged PR \"Create vuex-cart\" (#1575)"},{"Id":"465227767","IsPullRequest":true,"CreatedAt":"2019-07-08T12:56:43","Actor":"boomler","Number":"1574","RawContent":null,"Title":"Refactor: extract a method for duplicate environment judgement","State":"closed","Body":"There are 17 times of environment judgement in `store.js`.  Extract it to  `util.js`","Url":"https://github.com/vuejs/vuex/pull/1574","RelatedDescription":"Closed or merged PR \"Refactor: extract a method for duplicate environment judgement\" (#1574)"},{"Id":"463514720","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:27","Actor":"hugoazevedosoares","Number":"1573","RawContent":null,"Title":"fix(#1571): remove undefined payload from store.dispatch","State":"open","Body":"Fixed the issue #1571\r\n\r\nRunned all tests and they were ok, except for tsc/types that didn't work on my computer, by that was before the change was made. Also, the change has no reason to break this kind of test.\r\n\r\nThe solution was proposed by @gitlab-winnie .","Url":"https://github.com/vuejs/vuex/pull/1573","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from store.dispatch\" (#1573)"},{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"},{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n```\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"},{"Id":"450569242","IsPullRequest":false,"CreatedAt":"2019-05-31T01:03:40","Actor":"mspiderv","Number":"1561","RawContent":null,"Title":"Retrieve module context from store instance","State":"open","Body":"### What problem does this feature solve?\r\nThis feature adds the ability to retrieve the store module context directly from root store instance.\r\n\r\n### What does the proposed API look like?\r\nLet's suppose, that `store` variable is my Vuex (root) store instance.\r\n\r\nI solve this problem with the following code:\r\n\r\n```\r\nlet subModuleContext = store._modulesNamespaceMap['subModuleName/'].context\r\n```\r\n\r\nIt would be nice to write\r\n\r\n```\r\nlet subModuleContext = store.getContext('subModuleName')\r\n```\r\n\r\nThen, I can write `subModuleContext.dispatch('someAction')` instead of `store.dispatch('subModuleName/someAction')`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1561","RelatedDescription":"Open issue \"Retrieve module context from store instance\" (#1561)"},{"Id":"448157757","IsPullRequest":false,"CreatedAt":"2019-05-30T07:01:45","Actor":"xianshenglu","Number":"1556","RawContent":null,"Title":"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode","State":"closed","Body":"### What problem does this feature solve?\r\nAs [doc](https://vuex.vuejs.org/guide/strict.html) said, \r\n\r\n> In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. \r\n\r\nHowever, **state will still be mutated** though an error would be thrown. \r\n\r\nIn my opinion, this behavior is weird and misleading. Normally,  operation would fail if an error showed. But in this case, it didn't. \r\n\r\nAlso, if a developer doesn't see this error and only see the result which is actually worked, he might do this behavior all the time until one day he find the error.\r\n\r\n So, my propose is\r\n\r\n>  Why Not Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode?\r\n\r\nThere should be a way to absolutely disable direct state mutation outside of mutation handlers. \r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst store = new Vuex.Store({\r\n  // ...\r\n  strict: true\r\n})\r\n```\r\nDirect state mutation outside of mutation handlers would be disabled when `strict` is true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1556","RelatedDescription":"Closed issue \"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode\" (#1556)"},{"Id":"450157740","IsPullRequest":false,"CreatedAt":"2019-05-30T06:56:44","Actor":"savoygu","Number":"1560","RawContent":null,"Title":"the parent state's key is covered by the same key of the child module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust look at the content displayed on the page.\r\n\r\n### What is expected?\r\nNot covered\r\n\r\n### What is actually happening?\r\nCovered\r\n\r\n---\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1560","RelatedDescription":"Closed issue \"the parent state's key is covered by the same key of the child module\" (#1560)"},{"Id":"450155081","IsPullRequest":false,"CreatedAt":"2019-05-30T06:38:52","Actor":"savoygu","Number":"1559","RawContent":null,"Title":"[BUG] the parent state's key is covered by the same key of the child module","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n  }\r\n```","Url":"https://github.com/vuejs/vuex/issues/1559","RelatedDescription":"Closed issue \"[BUG] the parent state's key is covered by the same key of the child module\" (#1559)"},{"Id":"449676032","IsPullRequest":false,"CreatedAt":"2019-05-29T08:46:50","Actor":"de-don","Number":"1558","RawContent":null,"Title":"Add handler \"subscribeAction.onError\"","State":"open","Body":"### What problem does this feature solve?\r\nThe \"subscribeAction.after\" is not run if an action throws an error.\r\n\r\n### What does the proposed API look like?\r\nI propose to add one more property for catching errors in actions:\r\n```\r\nconst waitPlugin = (store) => {\r\n  store.subscribeAction({\r\n    before: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    after: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    onError: (action, error) => {\r\n      console.log(action.type);\r\n    }\r\n  });\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1558","RelatedDescription":"Open issue \"Add handler \"subscribeAction.onError\"\" (#1558)"},{"Id":"448881052","IsPullRequest":false,"CreatedAt":"2019-05-28T06:31:34","Actor":"chulman444","Number":"1557","RawContent":null,"Title":"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2tb9frcj/1/](https://jsfiddle.net/2tb9frcj/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the reproduction, open the developer console panel, click on the \"click\", Look at the result and please click on the `Object > val`.\r\n\r\n### What is expected?\r\n0 is printed out when clicking on the output of:\r\n\r\n```\r\nconsole.log(\"Printed as undefined\", store.state.tests[0])\r\n```\r\n\r\n### What is actually happening?\r\nPrinted as undefined but behaves like zero\r\n\r\n---\r\nI know that `mutations` are not asynchronous, so the `setTimeout` or `$nextTick` won't fix it; try clicking the button multiple times to add more entries but the old values still 'display' as undefined but behaves like zero.\r\n\r\nBehaves like zero, so I'm fine with it. Printing out the value directly prints zero, so I'm fine with it. But this was HUGELY misleading in my case when it printed out `undefined`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1557","RelatedDescription":"Closed issue \"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly\" (#1557)"},{"Id":"445811290","IsPullRequest":true,"CreatedAt":"2019-05-22T02:28:11","Actor":"liyangworld","Number":"1554","RawContent":null,"Title":"add warnings when the different namespaced modules has the same names…","State":"closed","Body":"Add warnings when the different namespaced modules has the same namespace.\r\nThere is a situation that different namespaced modules could have the same namespace, so when in the method of installModule, generate store._modulesNamespaceMap, the follow module will override the before module.\r\nFor example:\r\n```\r\nnew Store({\r\n  modules: {\r\n    m1: {\r\n      namespaced: true,\r\n      state: {\r\n        a: \"a1\"\r\n      }\r\n    },\r\n    m2: {\r\n      modules: {\r\n        m1: {\r\n          namespaced: true,\r\n          state: {\r\n            a: \"a2\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\nthe module m1 has the namespace 'm1',\r\nthe module m2/m1 has the same namespace 'm1'\r\nso in the store._modulesNamespaceMap the module m2/m1 will override the module m1","Url":"https://github.com/vuejs/vuex/pull/1554","RelatedDescription":"Closed or merged PR \"add warnings when the different namespaced modules has the same names…\" (#1554)"},{"Id":"445160547","IsPullRequest":false,"CreatedAt":"2019-05-21T10:59:33","Actor":"Xambey","Number":"1553","RawContent":null,"Title":"MapGetters not working for modules with namespaced=true in vuex ","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://gitlab.com/Xambey/large](https://gitlab.com/Xambey/large)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Run the application.\r\n2) Open console in web browser (or vue extensions)\r\n3) Catch the error in the log (ChildA.vue: 14 )\r\n\r\n\"Property or method \"score\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property\"\r\n\r\nfound in\r\n\r\n---> <ChildA> at src/components/ChildA.vue\r\n       <Parent> at src/components/Parent.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n\r\n### What is expected?\r\nThe getter 'score'  is created in my component. (this.$store.getters['scoreBoard/score'] -> this.score)\r\n\r\n\r\n\r\n### What is actually happening?\r\nGetter no mapped, vue google chrome extension show what state existed https://i.imgur.com/QKB7Wqm.png\r\n\r\n---\r\n```\r\ncomputed: {\r\n    ...mapGetters([\r\n      'scoreBoard/score' // Not found when /scoreBoard/score is existed. \r\n    ])\r\n  }\r\n```\r\nif you do this, then everything works (or namespaced = false): \r\n```\r\ncomputed: {\r\n    ...mapGetters({\r\n      score: 'scoreBoard/score'\r\n    })\r\n  }\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1553","RelatedDescription":"Closed issue \"MapGetters not working for modules with namespaced=true in vuex \" (#1553)"},{"Id":"446184900","IsPullRequest":true,"CreatedAt":"2019-05-21T10:49:47","Actor":"57u","Number":"1555","RawContent":null,"Title":"Typo correction in docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1555","RelatedDescription":"Closed or merged PR \"Typo correction in docs\" (#1555)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-18T05:30:54.3385884Z","RunDurationInMilliseconds":1983}