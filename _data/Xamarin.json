{"Data":{"Blog":{"FeedItems":[{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7005333115","Type":"PullRequestEvent","CreatedAt":"2017-12-19T01:27:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1126","RelatedDescription":"Merged pull request \"Bump to opentk/master/396bc90c\" (#1126) at xamarin/xamarin-android","RelatedBody":"Harmonization with Xamarin.iOS and preparation for branching d15-6."},{"Id":"7004525509","Type":"PullRequestEvent","CreatedAt":"2017-12-18T21:20:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1126","RelatedDescription":"Opened pull request \"Bump to opentk/master/396bc90c\" (#1126) at xamarin/xamarin-android","RelatedBody":"Harmonization with Xamarin.iOS and preparation for branching d15-6."},{"Id":"7004364888","Type":"IssuesEvent","CreatedAt":"2017-12-18T20:41:46","Actor":"shankar12","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1125","RelatedDescription":"Opened issue \"Java.Lang.ClassNotFoundException: Didn't find class \"android.app.PictureInPictureParams$Builder\"\" (#1125) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nDownloaded PictureInPicture Sample from https://developer.xamarin.com/samples/monodroid/android-o/PictureInPicture/\r\n1.  Opened the Project on VS for MAC and Restored all Packages\r\n2.  Tried to run the project and got a runtime exception: System.NotSupportedException\r\n![image](https://user-images.githubusercontent.com/16974223/34126273-00d686ca-e45f-11e7-9af5-98bad50f5eea.png)\r\n3. Under System.NotSupportedException, there was Java.Lang.ClassNotFoundException\r\n<img width=\"814\" alt=\"screen shot 2017-12-19 at 2 00 10 am\" src=\"https://user-images.githubusercontent.com/16974223/34126669-684dfa3a-e460-11e7-97bd-17755c607b28.png\">\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[PictureInPicture.zip](https://github.com/xamarin/xamarin-android/files/1569346/PictureInPicture.zip)\r\n\r\n### Expected Behavior\r\nThe App Should work for PictureInPicture feature\r\n### Actual Behavior\r\nThrows a Runtime Exception\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: aed07d58-dc28-46be-99a7-82fcbd01df4b\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.1 (13532)\r\nBuild 9B55\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/mumashankar/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703020012\r\nGit revision: 7d0c9d7ad46b125cf4b7bbf9532c0531b6433ce6\r\nBuild date: 2017-12-12 14:03:18-05\r\nXamarin addins: 6dddaa49fbecb2695fcdcd6b712eb269e288518c\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Wed Oct  4 00:17:00 PDT 2017\r\n    root:xnu-3789.71.6~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n[VSForMAC LOG.docx](https://github.com/xamarin/xamarin-android/files/1569407/VSForMAC.LOG.docx)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7003888468","Type":"PullRequestEvent","CreatedAt":"2017-12-18T18:51:05","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1124","RelatedDescription":"Merged pull request \"Bump to mono/2017-10/ce89e4c5\" (#1124) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/6169"},{"Id":"7003888100","Type":"PullRequestEvent","CreatedAt":"2017-12-18T18:51:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1123","RelatedDescription":"Merged pull request \"Bump to mono/d15-5-2017-06/b293f453\" (#1123) at xamarin/xamarin-android","RelatedBody":"Context: https://bugzilla.xamarin.com/show_bug.cgi?id=60625"},{"Id":"7003334792","Type":"PullRequestEvent","CreatedAt":"2017-12-18T16:52:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1124","RelatedDescription":"Opened pull request \"Bump to mono/2017-10/ce89e4c5\" (#1124) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/6169"},{"Id":"7003220538","Type":"PullRequestEvent","CreatedAt":"2017-12-18T16:31:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1123","RelatedDescription":"Opened pull request \"Bump to mono/d15-5-2017-06/b293f453\" (#1123) at xamarin/xamarin-android","RelatedBody":"Context: https://bugzilla.xamarin.com/show_bug.cgi?id=60625"},{"Id":"6999897746","Type":"PullRequestEvent","CreatedAt":"2017-12-17T23:56:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1122","RelatedDescription":"Closed pull request \"Revert \"[create-vsix, build] Don't package API-10 assemblies\"\" (#1122) at xamarin/xamarin-android","RelatedBody":"Reverts commit 6671f059.\r\n\r\nRemoving the build and install of API-10 broke the monodroid build;\r\nthis will need to be fixed later.\r\n\r\nAdditionally, commit 6671f059 was *incomplete*: it stopped building\r\nand installing the `v2.3` framework, but e.g.\r\n`Xamarin.Android.CSharp.targets` still used `v2.3` as the default."},{"Id":"6999425315","Type":"PullRequestEvent","CreatedAt":"2017-12-17T18:24:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1122","RelatedDescription":"Opened pull request \"Revert \"[create-vsix, build] Don't package API-10 assemblies\"\" (#1122) at xamarin/xamarin-android","RelatedBody":"Reverts commit 6671f059.\r\n\r\nRemoving the build and install of API-10 broke the monodroid build;\r\nthis will need to be fixed later.\r\n\r\nAdditionally, commit 6671f059 was *incomplete*: it stopped building\r\nand installing the `v2.3` framework, but e.g.\r\n`Xamarin.Android.CSharp.targets` still used `v2.3` as the default."},{"Id":"6998280439","Type":"IssuesEvent","CreatedAt":"2017-12-17T02:10:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1120","RelatedDescription":"Closed issue \"ArrayTypeMismatchException when using array of generic ICollection<T> or IList<T>\" (#1120) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use the following test interface and class\r\n```\r\npublic interface IFoo\r\n{\r\n    int MyInt { get; }\r\n}\r\n\r\npublic class Bar : IFoo\r\n{\r\n    public int MyInt => 0;\r\n}\r\n```\r\n2. Use the following test code for reproducing the exception\r\n```\r\nICollection<IFoo> arr1 = new Bar[1] { new Bar() };\r\nICollection<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nICollection<IFoo>[] a2d = new ICollection<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n3. Try the same test code with `IList<T>`\r\n```\r\nIList<IFoo> arr1 = new Bar[1] { new Bar() };\r\nIList<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nIList<IFoo>[] a2d = new IList<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n\r\n### Expected Behavior\r\nExpected no exception throwing.\r\n\r\n### Actual Behavior\r\nThrows an `ArrayTypeMismatchException` at last line of test code at runtime when using `ICollection<T>` or `IList<T>`. \r\nThe following types are working properly as expected:\r\n`IEnumerable`\r\n`IEnumerable<T>`\r\n`ICollection`\r\n`IList`\r\nCode is compiling successfully with all types.\r\n\r\n### Version Information\r\n\r\nVisual Studio: 15.5.2\r\nMono: MonoAndroid70 / 4.0.30319 / 8.1.0.25\r\nAndroid: 7.0\r\nKernel: 4.1.18-gdd36b34\r\n\r\n### Log File\r\n\r\n`at (wrapper stelemref) System.Object:virt_stelemref_interface (intptr,object)`\r\n"},{"Id":"6997592214","Type":"PullRequestEvent","CreatedAt":"2017-12-16T16:33:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1112","RelatedDescription":"Merged pull request \"Bump to mono/2017-10/63e8dc6e\" (#1112) at xamarin/xamarin-android","RelatedBody":"Bumps to cecil/mono-2017-10/76ffcdab.\r\nThis is consistent with cba77e9d, which *hopefully* means we won't get\r\nthe unit test failures seen in PR #1101."},{"Id":"6997434617","Type":"PullRequestEvent","CreatedAt":"2017-12-16T14:47:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1115","RelatedDescription":"Merged pull request \"[create-vsix, build] Don't package API-10 assemblies\" (#1115) at xamarin/xamarin-android","RelatedBody":"Context: https://developer.xamarin.com/releases/android/xamarin.android_7/xamarin.android_7.4/#API-10_is_Obsolete\r\nContext: https://github.com/xamarin/xamarin-android/pull/1105\r\nContext: https://github.com/xamarin/xamarin-android/pull/1032\r\n\r\nIn Xamarin.Android 7.4, we announced that API-10 was obsolete and\r\nwould be removed in a future release.\r\n\r\nPR #1032 attempted to do so, but does not yet work, so until now we\r\nhave continued shipping API-10 assemblies, even though\r\nXamarin.Android 7.4 hit stable on 2017-Aug-11.\r\n\r\nMeanwhile, PR #1105 includes an NDK bump, which in turn means that the\r\nlowest API level we can compile for will be *API-14*.\r\n\r\nAttempt to split the difference, assuming PR #1105 lands before\r\nPR #1032: Keep the supporting files for API-10, but don't build them,\r\nand explicitly remove `v2.3` from the `.vsix` file."},{"Id":"6997352481","Type":"PullRequestEvent","CreatedAt":"2017-12-16T13:44:13","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1121","RelatedDescription":"Opened pull request \"[linker] Update linker sources location\" (#1121) at xamarin/xamarin-android","RelatedBody":"Recent changes in linker https://github.com/mono/linker/commit/10f4163fb4fa17e77a98f266e28e283ea6d45739 moved the source files around.\r\n\r\nAlso add `MarkingHelpers.cs` to the linker sources."},{"Id":"6996954880","Type":"IssuesEvent","CreatedAt":"2017-12-16T08:13:16","Actor":"MaasOne","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1120","RelatedDescription":"Opened issue \"ArrayTypeMismatchException when using array of generic ICollection<T> or IList<T>\" (#1120) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use the following test interface and class\r\n```\r\npublic interface IFoo\r\n{\r\n    int MyInt { get; }\r\n}\r\n\r\npublic class Bar : IFoo\r\n{\r\n    public int MyInt => 0;\r\n}\r\n```\r\n2. Use the following test code for reproducing the exception\r\n```\r\nICollection<IFoo> arr1 = new Bar[1] { new Bar() };\r\nICollection<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nICollection<IFoo>[] a2d = new ICollection<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n3. Try the same test code with `IList<T>`\r\n```\r\nIList<IFoo> arr1 = new Bar[1] { new Bar() };\r\nIList<IFoo> arr2 = new Bar[1] { new Bar() };\r\n\r\nIList<IFoo>[] a2d = new IList<IFoo>[2] { arr1, arr2 }; //ArrayTypeMismatchException\r\n```\r\n\r\n### Expected Behavior\r\nExpected no exception throwing.\r\n\r\n### Actual Behavior\r\nThrows an `ArrayTypeMismatchException` at last line of test code at runtime when using `ICollection<T>` or `IList<T>`. \r\nThe following types are working properly as expected:\r\n`IEnumerable`\r\n`IEnumerable<T>`\r\n`ICollection`\r\n`IList`\r\nCode is compiling successfully with all types.\r\n\r\n### Version Information\r\n\r\nVisual Studio: 15.5.2\r\nMono: MonoAndroid70\r\nAndroid: 7.0\r\nKernel: 4.1.18-gdd36b34\r\n\r\n### Log File\r\n\r\n`at (wrapper stelemref) System.Object:virt_stelemref_interface (intptr,object)`\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7005156075","Type":"PullRequestEvent","CreatedAt":"2017-12-19T00:20:11","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1419","RelatedDescription":"Opened pull request \"[iOS] Include margins when measuring ViewCell renderers\" (#1419) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`Label`s in a hierarchy that utilizes margins can sometimes wrap in a `ViewCell`, and the `ViewCell` will not appear to resize properly to contain the full text. This is because the `ViewCellRenderer` was not measuring its content with the content's `Margin`s, so the `ViewCell` thought it had enough room to display the text without wrapping, thus the `Height` was incorrect.\r\n\r\nNow measuring the contents of a `ViewCell` with the `Margin`s included.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1326\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nIt is possible for any `ViewCell` to be a different size now if the contents included `Margin`s. This should ideally lead to a better representation of the `ViewCell`'s true size.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (manual)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7005011849","Type":"IssuesEvent","CreatedAt":"2017-12-18T23:29:36","Actor":"Sevenish","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1418","RelatedDescription":"Opened issue \"Current Application gets overridden, causes application level resources to disappear\" (#1418) at xamarin/Xamarin.Forms","RelatedBody":"Use case forms embedding, with application level staticresources:\r\n- Create a new XF page\r\n- Call CreateViewController\r\n- Present the VC the native way.\r\n\r\nIn this case the existing current XF application gets overridden with an empty one at\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/4c8f901e2333ac1baae818ead61c93559f39758d/Xamarin.Forms.Platform.iOS/PageExtensions.cs#L15\r\n\r\nNormally the RealParent would be set when assiging main page. But with embedding this is not used.\r\nThe code should check wether there is a current XF application before overwriting it.\r\n\r\nA workaround until this is fixed is setting the parent manually \r\n```\r\nvar xfPage = new XfPage();\r\nxfPage.Parent = Xamarin.Forms.Application.Current;\r\nvar naviteVC = xfPage.CreateViewController();\r\n```\r\n\r\n\r\n"},{"Id":"7004614695","Type":"PullRequestEvent","CreatedAt":"2017-12-18T21:41:26","Actor":"mister-giga","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1417","RelatedDescription":null,"RelatedBody":"### Description of Change ###\r\n\r\nI just changed the UWP renderer for ActivityIndicator from FormsProgressBar to ProgressRing, \r\nSince the ActivityIndicator has round spinner on Android and same look on iOS, it shall be logical to have ProgressRing on UWP. It will have simillar look and it has even more native look, since most activity indicators are aligned center to whole content, same applies to ProgressRing while ProgressBar is usually aligned at vertically top and horizontally stretched, it makes big UI misunderstanding for Windows users to see ugly horizontal indicator on the center of their screens.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7004599474","Type":"PullRequestEvent","CreatedAt":"2017-12-18T21:37:40","Actor":"mister-giga","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1417","RelatedDescription":"Closed pull request \"replaced ACtivityIndicator renderer for UWP to display ProgressRing\" (#1417) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI just changed the UWP renderer for ActivityIndicator from FormsProgressBar to ProgressRing, \r\nSince the ActivityIndicator has round spinner on Android and same look on iOS, it shall be logical to have ProgressRing on UWP. It will have simillar look and it has even more native look, since most activity indicators are aligned center to whole content, same applies to ProgressRing while ProgressBar is usually aligned at vertically top and horizontally stretched, it makes big UI misunderstanding for Windows users to see ugly horizontal indicator on the center of their screens.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7004571747","Type":"PullRequestEvent","CreatedAt":"2017-12-18T21:31:10","Actor":"mister-giga","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1417","RelatedDescription":"Opened pull request \"replaced ACtivityIndicator renderer for UWP to display ProgressRing\" (#1417) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI just changed the UWP renderer for ActivityIndicator from FormsProgressBar to ProgressRing, \r\nSince the ActivityIndicator has round spinner on Android and same look on iOS, it shall be logical to have ProgressRing on UWP. It will have simillar look and it has even more native look, since most activity indicators are aligned center to whole content, same applies to ProgressRing while ProgressBar is usually aligned at vertically top and horizontally stretched, it makes big UI misunderstanding for Windows users to see ugly horizontal indicator on the center of their screens.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7004359930","Type":"IssuesEvent","CreatedAt":"2017-12-18T20:40:36","Actor":"nlraley","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1403","RelatedDescription":"Closed issue \"When no default namespace is provided at the project level, the .g.cs files get compiled with a namespace of \" .\"\" (#1403) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIf you change the project files so there is no default namespace, then the .g.cs files will compile the code with a space for the namespace, so you end up with a \" .\" leading the namespace declaration.\r\n\r\nI can wipe out the default namespace which requires me to manually specify a namespace for my class files, i.e. TestNamespace.  The .g.cs would then have \" .TestNamespace\" as the namespace declaration.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Edit the .csproj files and clear the default namespace value manually.\r\n2. Create a class that will create a .g.cs file and give it a namespace declaration.\r\n3. Build will fail b/c the .g.cs file will list the incorrect namespace.\r\n\r\n### Expected Behavior\r\nNamespace should be what is specified in the class file.\r\n\r\n### Actual Behavior\r\nAn empty space and period are added before the namespace declared in the class file.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Latest stable release.\r\n- Last known good version: Recurring issue.\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Any\r\n  - Android: Any \r\n  - UWP:  Any\r\n"},{"Id":"7004332358","Type":"IssuesEvent","CreatedAt":"2017-12-18T20:33:59","Actor":"Paul-Brenner-Tangoe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1416","RelatedDescription":"Opened issue \"[Android] SetupPageTransition does not work with PushModalAsync\" (#1416) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nSetupPageTransition does not work with PushModalAsync\r\n\r\n### Steps to Reproduce\r\nRepro: https://www.dropbox.com/s/9gcvrx8gh7e8z3m/PageAnimationSample.zip?dl=0\r\n\r\nLoad the app, press the \"click me\" button, note that the page animation loads from the bottom to the top.\r\nChange PushModalAsync to PushAsync and reload the app. Set a breakpoint in the navigation renderer, and press the \"click me\" button, note that SetupPageTransition gets hit, and the animation is changed to loading the page from the top to bottom.\r\n\r\n### Expected Behavior\r\nSetupPageTransition gets hit when using PushModalAsync\r\n\r\n### Actual Behavior\r\nSetupPageTransition does not get hit when using PushModalAsync, and the default page translation animation is used.\r\n\r\n### Basic Information\r\nTested against Android O.\r\nTested using Xamarin forms 2.5.0.121934\r\n\r\nNote: This is my first time using GitHub issues, how do I know when this is confirmed, or in progress? Thanks"},{"Id":"7002885211","Type":"IssuesEvent","CreatedAt":"2017-12-18T15:30:27","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1415","RelatedDescription":"Opened issue \"HorizontalTextAlignment=\"Center\" looses alignment when scrolled\" (#1415) at xamarin/Xamarin.Forms","RelatedBody":"Moved from https://bugzilla.xamarin.com/show_bug.cgi?id=49311\r\n\r\n### Description\r\nI've confirmed this issue. I also confirmed the Label is sized full width, and this issue is still present with Fast Renderers.\r\n\r\nFrom original Bugzilla description:\r\n\r\nIt's a bit odd, but sometimes the alignment of a Label inside a StackLayout inside a Frame (inside a ViewCell) is messed up.\r\n\r\nIf you scroll, then sometimes the Label is not centered and sometimes it's centered.\r\n\r\n### Expected Behavior\r\nText should be always centered on the screen\r\n\r\n### Actual Behavior\r\nText occasionally appears left aligned when scrolled.\r\n\r\n### Basic Information\r\n- Version with issue: 2.3.3.175, 2.5.0.121934\r\n- Last known good version: ?\r\n- IDE:\r\n- Platform Target Frameworks: \r\n  - Android: 8.0\r\n- Android Support Library Version: 25.4.0.2\r\n\r\n### Screenshots\r\n\r\nhttps://github.com/lhaussknecht/CenterBug/blob/master/assets/centerBug.gif\r\n\r\nhttps://www.dropbox.com/s/z4hzr7rl9o2lvqb/Screenshot%202017-12-18%2009.04.09.png?dl=0\r\n\r\nhttps://www.dropbox.com/s/evk3zhdu0ivfi5p/Screenshot%202017-12-18%2009.23.53.png?dl=0\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/lhaussknecht/CenterBug\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7004903985","Type":"PullRequestEvent","CreatedAt":"2017-12-18T22:56:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3113","RelatedDescription":"Merged pull request \"Bump mono and fix default for linker UserAction\" (#3113) at xamarin/xamarin-macios","RelatedBody":"The linker bump (included in the mono bump) requires setting a default value for UserAction\nhttps://github.com/mono/linker/commit/4d2362d8083e3c71560ba1225d468a0080aeea27\n\nCommit list for mono/mono:\n\n* mono/mono@ce89e4c5fa4 [threads] Fix leak of gchandle to MonoInternalThread (#6258)\n* mono/mono@9bd33ec5b67 [android] Android NDK does not contain API level/platform 12\n* mono/mono@63e8dc6ea17 Bump cecil\n* mono/mono@e65bf00e22b Merge pull request #6122 from lewurm/2017-10-interp-aot-mode-fixes\n* mono/mono@8f0589ae817 [mini] Add missing try holes\n* mono/mono@ab20369d5f0 [mini] Align stack when resuming to catch handler\n* mono/mono@3a134a2d8c3 [mini] Add missing try holes\n* mono/mono@2e775c7e390 [mini] Fix clause try hole checking\n* mono/mono@a9a4166431e [loader] Don't assert on abstract methods in get_method_constrained\n* mono/mono@feba66a6ceb [interp] small improvment for error reporting in interp compile method callback\n* mono/mono@6fc6ca1e189 [aot] encode interp_in wrappers with proper signature\n* mono/mono@73326908260 [interp] fix copy/paste-typo in n2m macro magic\n* mono/mono@b64faae88c3 [aot] add more signatures for interp_in wrapper needed for iOS\n* mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\n* mono/mono@ddeba6e1bab [interp] fix using conv.u with string\n* mono/mono@0360f420fe3 Bump API snapshot submodule\n* mono/mono@2f18e7dd23c Bump cecil & linker to match master.\n* mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\n\nDiff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...ce89e4c5fa46a4d8225f43339fab0b0574f81cfe\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60770"},{"Id":"7004862876","Type":"PullRequestEvent","CreatedAt":"2017-12-18T22:44:43","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3082","RelatedDescription":"Closed pull request \"bump mono 2017-10 branch\" (#3082) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@e65bf00e22b Merge pull request #6122 from lewurm/2017-10-interp-aot-mode-fixes\r\n* mono/mono@8f0589ae817 [mini] Add missing try holes\r\n* mono/mono@ab20369d5f0 [mini] Align stack when resuming to catch handler\r\n* mono/mono@3a134a2d8c3 [mini] Add missing try holes\r\n* mono/mono@2e775c7e390 [mini] Fix clause try hole checking\r\n* mono/mono@a9a4166431e [loader] Don't assert on abstract methods in get_method_constrained\r\n* mono/mono@feba66a6ceb [interp] small improvment for error reporting in interp compile method callback\r\n* mono/mono@6fc6ca1e189 [aot] encode interp_in wrappers with proper signature\r\n* mono/mono@73326908260 [interp] fix copy/paste-typo in n2m macro magic\r\n* mono/mono@b64faae88c3 [aot] add more signatures for interp_in wrapper needed for iOS\r\n* mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\r\n* mono/mono@ddeba6e1bab [interp] fix using conv.u with string\r\n* mono/mono@0360f420fe3 Bump API snapshot submodule\r\n* mono/mono@2f18e7dd23c Bump cecil & linker to match master.\r\n* mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\r\n\r\nDiff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...e65bf00e22b6b410951f62234f50b12d76238e7f\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60770\r\n\r\n\r\n**EDIT**: new list:\r\n\r\n    * mono/mono@63e8dc6ea17 Bump cecil\r\n    * mono/mono@e65bf00e22b Merge pull request #6122 from lewurm/2017-10-interp-aot-mode-fixes\r\n    * mono/mono@8f0589ae817 [mini] Add missing try holes\r\n    * mono/mono@ab20369d5f0 [mini] Align stack when resuming to catch handler\r\n    * mono/mono@3a134a2d8c3 [mini] Add missing try holes\r\n    * mono/mono@2e775c7e390 [mini] Fix clause try hole checking\r\n    * mono/mono@a9a4166431e [loader] Don't assert on abstract methods in get_method_constrained\r\n    * mono/mono@feba66a6ceb [interp] small improvment for error reporting in interp compile method callback\r\n    * mono/mono@6fc6ca1e189 [aot] encode interp_in wrappers with proper signature\r\n    * mono/mono@73326908260 [interp] fix copy/paste-typo in n2m macro magic\r\n    * mono/mono@b64faae88c3 [aot] add more signatures for interp_in wrapper needed for iOS\r\n    * mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\r\n    * mono/mono@ddeba6e1bab [interp] fix using conv.u with string\r\n    * mono/mono@0360f420fe3 Bump API snapshot submodule\r\n    * mono/mono@2f18e7dd23c Bump cecil & linker to match master.\r\n    * mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\r\n\r\n    Diff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...63e8dc6ea17c904157224a26e6b37a63a49c06da\r\n\r\n    https://bugzilla.xamarin.com/show_bug.cgi?id=60770"},{"Id":"7004575680","Type":"IssuesEvent","CreatedAt":"2017-12-18T21:32:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3107","RelatedDescription":"Closed issue \"The localization doesn't work\" (#3107) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use iOS 11.2 and the Visual Studio 15.5.2\r\n2. Setup the iPhone to German language (real phone or the emulator)\r\n\r\n\r\n### Expected Behavior\r\nThe CultureInfo.CurrentUICulture and Thread.CurrentThread.CurrentCulture should be like \"de-DE\"\r\n\r\n### Actual Behavior\r\nThe CultureInfo.CurrentUICulture and Thread.CurrentThread.CurrentCulture is always \"en-US\"\r\n\r\nThe localization stoped to work, because of the problem.\r\n\r\n\r\n### Environment\r\nWindows 10 Fall Creator Update\r\n\r\n\r\n\r\n\r\n<!--\r\n1.\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.5.2\r\nVisualStudio.15.Release/15.5.2+27130.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA113\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual Basic 2017   00369-60000-00001-AA113\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA113\r\nMicrosoft Visual C# 2017\r\n\r\nVisual C++ 2017   00369-60000-00001-AA113\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA113\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31125.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.1000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.1000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   3.0.17320.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.1000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.1000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   1.8\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.1000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11025.7\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPython   3.0.17320.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   3.0.17320.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   3.0.17320.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   3.0.17320.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.31108.1213\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nRedgate ReadyRoll   1.15.17340.6878\r\nExtend DevOps processes to your SQL Server databases and safely automate database deployments.\r\n    \r\nVisit https://www.red-gate.com/readyroll for more information.\r\n\r\nCopyright (C) 2011 Red Gate Software Ltd. All rights reserved.\r\n  \r\nThis software contains components from Component Owl.\r\nSQL Server is a registered trademark of Microsoft Corporation. \r\nVisual Studio is a registered trademark of Microsoft Corporation. \r\n\r\nReadyRoll contains code from the following open source software:\r\n\r\nNuGet https://www.nuget.org/\r\nSQL LocalDB Wrapper https://github.com/martincostello/sqllocaldb\r\nAutofac https://autofac.org/\r\nJson.NET https://json.net/\r\nMahApps.Metro http://mahapps.com/\r\nSemVer https://github.com/maxhauser/semver\r\nLog4Net http://logging.apache.org/log4net/\r\nExtended WPF Toolkit https://wpftoolkit.codeplex.com/\r\nCode InfoBox VSX http://www.codeproject.com/Articles/55196/Code-InfoBox-Visual-Studio-Extension-VSX\r\nOctoPack https://github.com/OctopusDeploy/OctoPack\r\nSQLite https://sqlite.org/\r\n\r\nThis product contains icons from http://www.visualpharm.com distributed under a free backlink license.\r\n\r\nFor license details or other notices relating to the above software, please see NOTICE.TXT and EULA.rtf in the ReadyRoll application folder.\r\n    \r\n\r\nRedgate SQL Prompt   9.0.3.3299\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27128.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWebJobs Tools v1.0.0   15.0.31201.0\r\nWebJobs Tools v1.0.0\r\n\r\nXamarin   4.8.0.753 (6575bd113)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.0.25 (HEAD/d8c6e504f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.2 (6857dfc)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7004262123","Type":"PullRequestEvent","CreatedAt":"2017-12-18T20:16:38","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3113","RelatedDescription":"Opened pull request \"Bump mono and fix default for linker UserAction\" (#3113) at xamarin/xamarin-macios","RelatedBody":"The linker bump (included in the mono bump) requires setting a default value for UserAction\nhttps://github.com/mono/linker/commit/4d2362d8083e3c71560ba1225d468a0080aeea27\n\nCommit list for mono/mono:\n\n* mono/mono@ce89e4c5fa4 [threads] Fix leak of gchandle to MonoInternalThread (#6258)\n* mono/mono@9bd33ec5b67 [android] Android NDK does not contain API level/platform 12\n* mono/mono@63e8dc6ea17 Bump cecil\n* mono/mono@e65bf00e22b Merge pull request #6122 from lewurm/2017-10-interp-aot-mode-fixes\n* mono/mono@8f0589ae817 [mini] Add missing try holes\n* mono/mono@ab20369d5f0 [mini] Align stack when resuming to catch handler\n* mono/mono@3a134a2d8c3 [mini] Add missing try holes\n* mono/mono@2e775c7e390 [mini] Fix clause try hole checking\n* mono/mono@a9a4166431e [loader] Don't assert on abstract methods in get_method_constrained\n* mono/mono@feba66a6ceb [interp] small improvment for error reporting in interp compile method callback\n* mono/mono@6fc6ca1e189 [aot] encode interp_in wrappers with proper signature\n* mono/mono@73326908260 [interp] fix copy/paste-typo in n2m macro magic\n* mono/mono@b64faae88c3 [aot] add more signatures for interp_in wrapper needed for iOS\n* mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\n* mono/mono@ddeba6e1bab [interp] fix using conv.u with string\n* mono/mono@0360f420fe3 Bump API snapshot submodule\n* mono/mono@2f18e7dd23c Bump cecil & linker to match master.\n* mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\n\nDiff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...ce89e4c5fa46a4d8225f43339fab0b0574f81cfe\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60770"},{"Id":"7003845208","Type":"PullRequestEvent","CreatedAt":"2017-12-18T18:41:20","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3111","RelatedDescription":"Merged pull request \"Merger d15-5 into xcode9.2 (for SR3)\" (#3111) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7003802299","Type":"PullRequestEvent","CreatedAt":"2017-12-18T18:31:18","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3112","RelatedDescription":"Merged pull request \"[macos][photos] Fix breaking change wrt PHLivePhotoFrameProcessingBlock\" (#3112) at xamarin/xamarin-macios","RelatedBody":"API diff reported\n\n```\nType Changed: Photos.PHLivePhotoEditingContext\n\nRemoved property:\n\n\tpublic virtual PHLivePhotoFrameProcessingBlock FrameProcessor { get; set; }\n\nRemoved Type Photos.PHLivePhotoFrameProcessingBlock\n````"},{"Id":"7003129279","Type":"PullRequestEvent","CreatedAt":"2017-12-18T16:14:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3108","RelatedDescription":"Merged pull request \"[tests][security] Update TrustTest to run faster (without timeouts)\" (#3108) at xamarin/xamarin-macios","RelatedBody":"The original test was to cover both X509Certificate and X509Certiicate2\nwhen using with SecTrust. However the code diverged over time. That and\nthe different certificates used caused the `*2` tests to hit a time\nloop (designed to reduce incorrect errors randomly reported).\n\nWe want to keep the \"delay\" logic for it's intended purpose - but it\nshould not be needed normally.\n\nThe tests have been refactored to reuse the same logic (between both\ntypes of certificates) which solve this (when used with the same\ncertificates)\n\nReplace https://github.com/xamarin/xamarin-macios/pull/3068"},{"Id":"7002989591","Type":"PullRequestEvent","CreatedAt":"2017-12-18T15:49:08","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3110","RelatedDescription":"Merged pull request \"[xtro] Add sanity tests to keep the entries up to date (avoid invalid, dupes and out of date entries)\" (#3110) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7002943536","Type":"PullRequestEvent","CreatedAt":"2017-12-18T15:40:46","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3112","RelatedDescription":"Opened pull request \"[macos][photos] Fix breaking change wrt PHLivePhotoFrameProcessingBlock\" (#3112) at xamarin/xamarin-macios","RelatedBody":"API diff reported\n\n```\nType Changed: Photos.PHLivePhotoEditingContext\n\nRemoved property:\n\n\tpublic virtual PHLivePhotoFrameProcessingBlock FrameProcessor { get; set; }\n\nRemoved Type Photos.PHLivePhotoFrameProcessingBlock\n````"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"942806196209307649","CreatedAt":"2017-12-18T17:18:08+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin is back for the 4th year in a row, counting down the top blog posts of 2017! Will your favorit… https://t.co/pwK3cBUg2s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":9,"RawContent":null},{"Id":"942789304971091968","CreatedAt":"2017-12-18T16:11:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/pXSan0xaif","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":12,"RawContent":null},{"Id":"942545953113935872","CreatedAt":"2017-12-18T00:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/GSLirxwKNb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":29,"RawContent":null},{"Id":"942199665780551680","CreatedAt":"2017-12-17T01:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null},{"Id":"941775247119921152","CreatedAt":"2017-12-15T21:01:30+00:00","UserScreenname":"xamarinhq","Text":"Win a three-month @XamarinU subscription just for checking out our new Getting Started Guide! Details on how to ent… https://t.co/At0addXQsO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":26,"RawContent":null},{"Id":"941710442497441798","CreatedAt":"2017-12-15T16:44:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":21,"RawContent":null},{"Id":"941412780158128128","CreatedAt":"2017-12-14T21:01:12+00:00","UserScreenname":"xamarinhq","Text":"Introducing the open source suite of SmartHotel360 reference #XamarinForms, Xamarin.iOS, and… https://t.co/iYMEQSAb2H","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":99,"RawContent":null},{"Id":"941351074564329477","CreatedAt":"2017-12-14T16:56:00+00:00","UserScreenname":"xamarinhq","Text":"Starting NOW—update your iOS apps in our webinar, \"Get the Most Out of iOS 11 with #VisualStudio Tools for #Xamarin… https://t.co/yHfdYJiwE2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"940998780735901697","CreatedAt":"2017-12-13T17:36:06+00:00","UserScreenname":"xamarinhq","Text":"Our own @jamesmontemagno shows you how to leverage the #Xamarin Live Player with your iOS applications:… https://t.co/S9D0tIvHrH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":23,"RawContent":null},{"Id":"940986925623758850","CreatedAt":"2017-12-13T16:49:00+00:00","UserScreenname":"xamarinhq","Text":"Last call! Join us now for our webinar on how to \"Get the Most out of Android 8 Oreo with #VisualStudio Tools for… https://t.co/N6AGPhXuJD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"940644784422707200","CreatedAt":"2017-12-12T18:09:27+00:00","UserScreenname":"xamarinhq","Text":"Get a quick overview of the latest updates to the #Xamarin iOS designer, including a new toolbar for managing trait… https://t.co/0Mcb5bx9j6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":34,"RawContent":null},{"Id":"940613212508184576","CreatedAt":"2017-12-12T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Register for one or register for both, but don't miss this week's webinars on updating your #Xamarin apps to get th… https://t.co/9Xtm5gjLw8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"940313518418661377","CreatedAt":"2017-12-11T20:13:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/IcA9ZV1nmN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":22,"RawContent":null},{"Id":"940264162273439744","CreatedAt":"2017-12-11T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0FzGbu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":97,"FavoriteCount":44,"RawContent":null},{"Id":"940013259083735041","CreatedAt":"2017-12-11T00:20:00+00:00","UserScreenname":"xamarinhq","Text":"Register now for this week's webinars on how to update your #Xamarin apps to get the most out of Android 8 Oreo (12… https://t.co/ARs0FVWV0P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":18,"FavoriteCount":10,"RawContent":null},{"Id":"939540900635607041","CreatedAt":"2017-12-09T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/xWBM7qo6ZK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":23,"RawContent":null},{"Id":"939234630691180549","CreatedAt":"2017-12-08T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"#NativeForms is all polished and ready for you in #XamarinForms 2.5.0. Get started: https://t.co/8ZTIbOktJX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":70,"RawContent":null},{"Id":"939193776089772032","CreatedAt":"2017-12-08T18:03:40+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSAppCenter: https://t.co/XHMCHeVNSB https://t.co/pEYDruWIGp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2017-12-19T05:30:47.6039654Z","RunDurationInMilliseconds":4595}