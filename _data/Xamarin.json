{"Data":{"Blog":{"FeedItems":[{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null},{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null},{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3,Â is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null},{"Title":"Add a Search Bar to Your Xamarin Apps in iOS 11","PublishedOn":"2018-02-12T20:00:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As described in the Go Large with iOS 11 post, view controllers in iOS 11 can use large titles to improve the clarity of an app&#8217;s user interface. To complement a view controller&#8217;s large...","Href":"https://blog.xamarin.com/add-search-bar-xamarin-ios-11/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7346315829","Type":"PullRequestEvent","CreatedAt":"2018-03-07T20:18:01","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1379","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add @(AndroidAarLibrary)\" (#1379) at xamarin/xamarin-android","RelatedBody":"Adding `@(AndroidAarLibrary)` to `@(AvailableItemName)` *should* have\r\nbeen done as part of commit 6a8ea2bb, but was overlooked.\r\n\r\nWe want `@(AvailableItemName)` to be up-to-date so that you can have\r\nconditional MSBuild behavior based on whether a particular item is\r\nsupported.\r\n\r\nIn particular, @Redth wants to ensure that the `@(AndroidAarLibrary)`\r\nbuild action is available as part of his Components work, and ensuring\r\nthat `@(AvailableItemName)` contains `@(AndroidAarLibrary)` is the\r\nmost straightforward way to do so.\r\n\r\nAdditionally, sort and re-indent the `@(AvailableItemName)` entries."},{"Id":"7345643811","Type":"IssuesEvent","CreatedAt":"2018-03-07T18:03:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1361","RelatedDescription":"Closed issue \"AndroidCreateDebugKey uses weak signature algorithm\" (#1361) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI did this under Linux but I guess it is the same under Windows:\r\n1. msbuild an Xamarin.Android project with target Debug / SignAndroidPackage \r\n2. msbuild task _CreateAndroidDebugSigningKey calls into [AndroidDebugKey](https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Tasks/AndroidCreateDebugKey.cs)\r\n3. AndroidDebugKey calls keytool with something like: /usr/bin/keytool -genkeypair -alias androiddebugkey -storepass android -keypass android -keystore \"..debug.keystore\" -dname \"CN=Android Debug,O=Android,C=US\" -keyalg RSA -validity 10950\r\n\r\n### Expected Behavior\r\n\r\nDebug APK is signed with an accepted algorithm. Refer to this page:\r\nhttp://www.oracle.com/technetwork/java/javase/8u131-relnotes-3565278.html\r\n\r\n### Actual Behavior\r\n\r\nThe value \"RSA\" for parameter keyalg leads to a signed APK which is considered not signed right after creation. Output of:\r\n\r\njarsigner -verify -verbose -certs ./bin/Android/AnyCPU/Release/some-Signed.apk\r\n\r\nshows:\r\n\r\nSigned by \"CN=Android Debug, O=Android, C=US\"\r\n    Digest algorithm: SHA1\r\n    Signature algorithm: MD5withRSA (weak), 2048-bit key\r\n\r\nWARNING: The jar will be treated as unsigned, because it is signed with a weak algorithm that is now disabled by the security property:\r\n\r\n  jdk.jar.disabledAlgorithms=MD2, MD5, RSA keySize < 1024, DSA keySize < 1024\r\n\r\n\r\n### Version Information\r\n\r\nTried with:\r\n\r\njava version \"1.8.0_161\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_161-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)\r\n\r\nxamarin-android build version 8.3.99.19\r\n"},{"Id":"7345642837","Type":"PullRequestEvent","CreatedAt":"2018-03-07T18:03:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1370","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add Properties for the Debug Key\" (#1370) at xamarin/xamarin-android","RelatedBody":"Context #1361\r\n\r\nThis change will allow developers to override our defaults and pick stronger values if required."},{"Id":"7345497419","Type":"PullRequestEvent","CreatedAt":"2018-03-07T17:35:46","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1379","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Add @(AndroidAarLibrary)\" (#1379) at xamarin/xamarin-android","RelatedBody":"Adding `@(AndroidAarLibrary)` to `@(AvailableItemName)` *should* have\r\nbeen done as part of commit 6a8ea2bb, but was overlooked.\r\n\r\nWe want `@(AvailableItemName)` to be up-to-date so that you can have\r\nconditional MSBuild behavior based on whether a particular item is\r\nsupported.\r\n\r\nIn particular, @Redth wants to ensure that the `@(AndroidAarLibrary)`\r\nbuild action is available as part of his Components work, and ensuring\r\nthat `@(AvailableItemName)` contains `@(AndroidAarLibrary)` is the\r\nmost straightforward way to do so.\r\n\r\nAdditionally, sort and re-indent the `@(AvailableItemName)` entries."},{"Id":"7345041563","Type":"PullRequestEvent","CreatedAt":"2018-03-07T16:17:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1377","RelatedDescription":"Merged pull request \"Bump to mono/2017-12/15d76bf5\" (#1377) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/569184\r\nContext: https://github.com/mono/mono/issues/7338\r\nContext: https://github.com/xamarin/maccore/issues/629\r\n\r\nFixes decoding of CMS/PKCS #7 messages with an explicit cryptographic\r\nobject identifier."},{"Id":"7344445851","Type":"PullRequestEvent","CreatedAt":"2018-03-07T14:42:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1377","RelatedDescription":"Opened pull request \"Bump to mono/2017-12/15d76bf5\" (#1377) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/569184?fullScreen=false\r\nContext: https://github.com/mono/mono/issues/7338\r\nContext: https://github.com/xamarin/maccore/issues/629\r\n\r\nFixes decoding of CMS/PKCS #7 messages with an explicit cryptographic\r\nobject identifier."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7347785025","Type":"IssuesEvent","CreatedAt":"2018-03-08T03:22:04","Actor":"ktd12","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2048","RelatedDescription":"Opened issue \"ListView.ScrollTo doesn't animate on UWP\" (#2048) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### ListView.ScrollTo  does not animate the scrolling on UWP when animated is set to True. This  works correctly on Android.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin Forms App (shared project including UWP and Android)\r\n2. On the main page, put a ListView that binds to a viewmodel that has an Observable Collection of Strings.  The ItemTemplate of the List View contains a Label that binds to the string and a button.\r\n\r\n```\r\n<ListView x:Name=\"lstItems\" ItemsSource=\"{Binding Items}\" RowHeight=\"48\" HeightRequest=\"144\" Margin=\"0,0,24,24\" VerticalOptions=\"Start\"  HasUnevenRows=\"False\" >\r\n            \r\n            <ListView.ItemTemplate>\r\n                <DataTemplate>\r\n                    <ViewCell>\r\n                        <Grid Margin=\"8,8,24,8\">\r\n                            <Grid.ColumnDefinitions>\r\n                                <ColumnDefinition Width=\"3*\"/>\r\n                                <ColumnDefinition Width=\"1*\"/>\r\n                            </Grid.ColumnDefinitions>\r\n                            <Label Text=\"{Binding}\"/>\r\n                            <Button x:Name=\"btnNext\" Text=\"Next\"  Grid.Column=\"1\" Clicked=\"btnNext_Clicked\"/>\r\n                        </Grid>\r\n                    </ViewCell>\r\n                </DataTemplate>\r\n            </ListView.ItemTemplate>\r\n           </ListView>\r\n\r\n```\r\n\r\n2.  In the btnNext_Clicked event in the code behind, use the ListView Scrollto method to scroll the next item to the top of the screen with animation set to true\r\n\r\n```\r\nprivate void btnNext_Clicked(object sender, EventArgs e)\r\n        {\r\n            MainPageViewModel vm = this.BindingContext as MainPageViewModel;\r\n            Button myButton = sender as Button;\r\n            Item myItem = myButton.BindingContext as Item;\r\n            int Index;\r\n            Index = vm.Items.IndexOf(myItem);\r\n           \r\n            if (Index < vm.Items.Count - 1)\r\n            {\r\n                lstItems.ScrollTo(vm.Items[Index + 1], ScrollToPosition.Start, true);\r\n            }\r\n        }\r\n\r\n```\r\n \r\n### Expected Behavior\r\nThe next item in the list will visibly move to the top of the screen\r\n### Actual Behavior\r\nThe next item suddenly appears at the top of the screen\r\n### Basic Information\r\nI believe this happens on UWP because the Xamarin Form's ListView.ScrollTo method is implemented using the UWP native methodl ScrollIntoView (  List.ScrollIntoView(c, ScrollIntoViewAlignment.Leading); )\r\nand ScrollIntoView does not animate the scrolling. To get animation to happen, you would instead use the **ChangeView** method of the ScrollViewer part of the UWP ListView.  For Example:\r\n\r\n```\r\nScrollViewer theScrollViewer = GetVisualChild<ScrollViewer>(lstItems);\r\n double yPos = IndexToScrollTo * ItemHeight; //only works when item height is constant\r\n double scrollOffset = yPos - theScrollViewer.VerticalOffset;\r\n \r\nawait Task.Delay(1);\r\n theScrollViewer.ChangeView(null, theScrollViewer.VerticalOffset + scrollOffset, null, false);\r\n\r\n```\r\nI tested the above technique using a custom renderer for the Listview on UWP and it worked (the item animated as expected).\r\n\r\nHere is the definition for the UWP ChangeView method: \r\n`public bool ChangeView(Nullable<Double> horizontalOffset, Nullable<Double> verticalOffset, Nullable<Single> zoomFactor, Boolean disableAnimation)\r\n`\r\n\r\n- Version with issue:  2.5.0.280555\r\n- Last known good version:\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  10.0.16299  Fall Creator's Update\r\n- Nuget Packages:\r\nXamarin Forms 2.5.0.280555\r\nNet Standard Library 2.0.1\r\n- Affected Devices:\r\nDesktop, Tablet\r\n### Screenshots\r\n<img width=\"376\" alt=\"scrollto app\" src=\"https://user-images.githubusercontent.com/2615390/37128914-65084952-224a-11e8-97f4-edfe81073fc4.PNG\">\r\n### Reproduction Link\r\nI am uploading a sample mainPage and a viewmodel.  Create a Xamarin Forms shared project and replace the mainPage in the shared project with this one. Add the viewmodel to the view models in your shared project.\r\n\r\n[ScrollTo Example.zip](https://github.com/xamarin/Xamarin.Forms/files/1791558/ScrollTo.Example.zip)\r\n\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7347258037","Type":"IssuesEvent","CreatedAt":"2018-03-07T23:53:44","Actor":"AceCoderLaura","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2047","RelatedDescription":"Opened issue \"Controls Don't Disable Properly\" (#2047) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nControls do not visually indicate that they are disabled and they are not disabled according to the platform.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Checkout https://bitbucket.org/ChristianFindlay/xamarin-forms-scratch\r\n2. Open the TestXamarinForms.sln file\r\n3. Run the application\r\n4. Click on \"IsEnabled Issue\"\r\n5. Notice the enabled controls on screen, appearing as enabled controls should\r\n6. Click the \"Disable This Page\" button\r\n7. Notice none of the controls have had their native \"IsEnabled\" property set to false\r\n8. Notice that none of the controls exhibit visual indications of being disabled\r\n9. Notice that not even the page is greyed out to any degree\r\n\r\n### Expected Behavior\r\nThe controls should grey out by having the native IsEnabled property set on them.\r\n\r\n### Actual Behavior\r\nThe page becomes what seems to be input transparent, which is not the same as disabled.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio 2017 Professional\r\n- Platform Target Frameworks: \r\n  - Android: 8.0\r\n  - UWP: 16299\r\n- Nuget Packages:\r\nGoogle.Apis.Calendar.v3             {1.32.2.1146}                            TestXamarinFormsLibrary                                                             \r\nNETStandard.Library                 {2.0.1}                                  TestXamarinFormsLibrary                                                             \r\nXamarin.Forms                       {2.5.0.280555}                           TestXamarinFormsLibrary                                                             \r\nXamarin.Forms                       {2.5.0.280555}                           TestXamarinForms.iOS                                                                \r\nXamarin.Forms                       {2.5.0.280555}                           TestXamarinForms.Droid                                                              \r\nMicrosoft.NETCore.UniversalWindo... {6.0.7}                                  TestXamarinForms.UWP                                                                \r\nXamarin.Forms                       {2.5.0.280555}                           TestXamarinForms.UWP        \r\n- Affected Devices: HTC U11\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/21048448/37124813-00fe728c-22be-11e8-855a-7e07181aec79.png)\r\n![image](https://user-images.githubusercontent.com/21048448/37124799-f060d316-22bd-11e8-8442-25786ee69f1d.png)\r\n\r\n### Reproduction Link\r\nhttps://bitbucket.org/ChristianFindlay/xamarin-forms-scratch"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7346744983","Type":"PullRequestEvent","CreatedAt":"2018-03-07T21:47:38","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3691","RelatedDescription":"Merged pull request \"Fixed target branch for llvm\" (#3691) at xamarin/xamarin-macios","RelatedBody":"Fixed target branch for llvm"},{"Id":"7346711536","Type":"PullRequestEvent","CreatedAt":"2018-03-07T21:40:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3354","RelatedDescription":"Merged pull request \"[msbuild] Always codesign libraries and frameworks\" (#3354) at xamarin/xamarin-macios","RelatedBody":"Fixes issue #3289"},{"Id":"7346633272","Type":"PullRequestEvent","CreatedAt":"2018-03-07T21:24:21","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3695","RelatedDescription":"Opened pull request \"Update CODEOWNERS files (#3455)\" (#3695) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7346629840","Type":"PullRequestEvent","CreatedAt":"2018-03-07T21:23:36","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3694","RelatedDescription":"Opened pull request \"Update CODEOWNERS files (#3455)\" (#3694) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7346579935","Type":"PullRequestEvent","CreatedAt":"2018-03-07T21:13:14","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3683","RelatedDescription":"Merged pull request \"[tests] Don't try to compile the Main function in F# extensions.\" (#3683) at xamarin/xamarin-macios","RelatedBody":"The F# compiler complains that:\n\n    /Users/xamarinqa/vsts/_work/52/s/tests/fsharp/Main.fs(13,9): error FS0433: A function labeled with the 'EntryPointAttribute' attribute must be the last declaration in the last file in the compilation sequence.\n\nMain.fs is the last file in the project file, but the MSBuild tasks adds\nanother one at the end:\n\n    obj/iPhone/Debug64-today-extension/Xamarin.iOS,Version=v1.0.AssemblyAttribute.fs\n\nbecause we're building a library (in which case the MSBuild tasks assume that\nthere won't be any Main functions in the project, and as such it's safe to\nappend files to compile).\n\nWork around this by excluding the Main function from F# extensions, it's not\nneeded anyway."},{"Id":"7346496512","Type":"PullRequestEvent","CreatedAt":"2018-03-07T20:55:44","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3693","RelatedDescription":"Closed pull request \"Fixed target branch for llvm\" (#3693) at xamarin/xamarin-macios","RelatedBody":"Fixed target branch for llvm"},{"Id":"7346409520","Type":"IssuesEvent","CreatedAt":"2018-03-07T20:37:35","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3686","RelatedDescription":"Closed issue \"NSWindow.FieldEditor should allow a null for forObject\" (#3686) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Call `NSWindow`'s `FieldEditor` method passing `null` for the second parameter\r\n\r\n### Expected Behavior\r\n\r\nThe default fieldEditor for the window. The Apple documentation says \r\n\r\n> Pass nil to get the default field editor\r\n\r\nhttps://developer.apple.com/documentation/appkit/nswindow/1419647-fieldeditor?language=objc\r\n\r\n### Actual Behavior\r\n\r\nAn ArgumentNullException is thrown\r\n\r\n```\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: forObject\r\n  at AppKit.NSWindow.FieldEditor (System.Boolean createFlag, Foundation.NSObject forObject) [0x00011] in /Library/Frameworks/Xamarin.Mac.framework/Versions/4.3.0.138/src/Xamarin.Mac/AppKit/NSWindow.g.cs:2809\r\n```\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac (Preview) ===\r\n\r\nVersion 7.5 Preview (7.5 build 439)\r\nInstallation UUID: f64c47d3-1a2d-4092-8fae-dc3309136470\r\nRuntime:\r\n\tMono 5.10.0.0 (2017-12/ec4a957151a) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 510000000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.0.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.3.0.138 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.5.0.92 (Visual Studio Community)\r\nHash: d0bb1c5d\r\nBranch: master\r\nBuild date: 2017-09-27 11:43:16-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.0.99.26 (Visual Studio Community)\r\nAndroid SDK: Not found\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705000439\r\nGit revision: e6230383e569e43342ced8eea9a23602d9cbc0de\r\nBuild date: 2018-02-20 04:50:31-05\r\nXamarin addins: 940b03fe3ff53201ce1e19b241671be5483104bd\r\nBuild lane: monodevelop-lion-master\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Thu Jan 11 22:59:40 PST 2018\r\n    root:xnu-3789.73.8~1/RELEASE_X86_64 x86_64\r\n\r\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signinâ¦ https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":8,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":13,"RawContent":null},{"Id":"970709776488419328","CreatedAt":"2018-03-05T17:17:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":17,"RawContent":null},{"Id":"970456916488015873","CreatedAt":"2018-03-05T00:32:13+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/jQn1NkyLSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":12,"RawContent":null},{"Id":"970104538375118848","CreatedAt":"2018-03-04T01:12:00+00:00","UserScreenname":"xamarinhq","Text":"Better resource organization in #XamarinForms: https://t.co/8bKeJx4e22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":18,"RawContent":null},{"Id":"969656588805001217","CreatedAt":"2018-03-02T19:32:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this! It's your chance to ask living legend @migueldeicaza your questions in his @redditâ¦ https://t.co/6qG4JhCwia","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"969616829483311104","CreatedAt":"2018-03-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/3D8bDqoefW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":107,"FavoriteCount":32,"RawContent":null},{"Id":"969291313173745665","CreatedAt":"2018-03-01T19:20:32+00:00","UserScreenname":"xamarinhq","Text":"Amp up your skills with a #Xamarin mobile developer event near you in March: https://t.co/glgXli4KCp https://t.co/hUYXkqMYl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"969256455504318464","CreatedAt":"2018-03-01T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/MNLAkVzqaz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"968935619358527488","CreatedAt":"2018-02-28T19:47:08+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/cwathwkTEw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"968895325460103168","CreatedAt":"2018-02-28T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/YZBmRK5CcT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"968530780724088832","CreatedAt":"2018-02-27T16:58:27+00:00","UserScreenname":"xamarinhq","Text":"Our own @mayur_tendulkar shows you how to build a mobile app using #XamarinForms and the Microsoft Graph API:â¦ https://t.co/svcX6jHBJ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":17,"RawContent":null},{"Id":"968204127166754816","CreatedAt":"2018-02-26T19:20:26+00:00","UserScreenname":"xamarinhq","Text":"Get a sneak peek at our newest @XamarinU course, \"Navigation Patterns in #XamarinForms\": https://t.co/3fd0sIUJMZ https://t.co/GzDZxRtlZH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":21,"RawContent":null},{"Id":"968170803916361728","CreatedAt":"2018-02-26T17:08:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to supercharge your Xamarin.Mac app startup times: https://t.co/JzwELyF3Tm https://t.co/ABxM6v3B6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":4,"RawContent":null},{"Id":"967928201430388736","CreatedAt":"2018-02-26T01:04:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from Greg Shackles on the #VSAppCenterâ¦ https://t.co/bCckhyxtl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"967564304206745600","CreatedAt":"2018-02-25T00:58:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/6VAIpDbCD7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":45,"RawContent":null},{"Id":"967121514339405824","CreatedAt":"2018-02-23T19:38:31+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/EVWC9fi7wy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":8,"RawContent":null},{"Id":"967078348043190272","CreatedAt":"2018-02-23T16:47:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2018-03-08T05:30:39.524882Z","RunDurationInMilliseconds":3975}