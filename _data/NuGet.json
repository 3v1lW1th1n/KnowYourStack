{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12029386521","Type":"IssuesEvent","CreatedAt":"2020-04-13T03:35:15","Actor":"MingweiSamuel","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7941","RelatedDescription":"Opened issue \"\"Last updated\" based on package version, not on lasted update\" (#7941) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nExample: https://www.nuget.org/packages/MingweiSamuel.Camille/2.4.1\r\n\r\nHere you can see the page displays \"last updated 5 months ago\" even though there are versions from 2 months ago and 30 minutes ago. This is because there are [newer versions](https://www.nuget.org/packages/MingweiSamuel.Camille/3.0.1-nightly-2019-11-07-8874098daa) (in terms of semvar) that I have hidden, but it seems the site only bases the \"last updated\" on that, not on the actual last update.\r\n\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Upload an \"older\" version of a package, in terms of semvar\r\n2. \"last updated\" will not update correctly\r\n\r\n### Expected behavior\r\n\"last updated\" should be based on when the project was last updated."},{"Id":"12018697366","Type":"IssuesEvent","CreatedAt":"2020-04-10T21:32:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7931","RelatedDescription":"Closed issue \"Incorrect syntax near the keyword 'IF'. returned while running 201904292139301_RemoveVulnerabilityDataFromPackageDeprecationModel.cs migration\" (#7931) at NuGet/NuGetGallery","RelatedBody":"I took the latest version master branch builded the solution configured the connection strings and ran: \r\n\r\n`Update-Database -ConfigurationTypeName MigrationsConfiguration`\r\n\r\nin Package Manager Console on NuGetGallery project.\r\n\r\nWhile running 201904292139301_RemoveVulnerabilityDataFromPackageDeprecationModel.cs migration the Incorrect syntax near the keyword 'IF'. \r\n\r\nThe fix this I had to replace :\r\n\r\n`Sql(\"ALTER TABLE [dbo].[PackageDeprecations] DROP CONSTRAINT IF EXISTS [dbo.PackageDeprecations_CVSSRating];\");`\r\n \r\nwith\r\n\r\n`Sql(\"IF EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo.PackageDeprecations_CVSSRating]') AND parent_object_id = OBJECT_ID(N'[dbo].[PackageDeprecations]')) ALTER TABLE dbo.PackageDeprecations DROP CONSTRAINT [dbo.PackageDeprecations_CVSSRating];\");`\r\n            "},{"Id":"12016934429","Type":"IssuesEvent","CreatedAt":"2020-04-10T17:13:28","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7933","RelatedDescription":"Closed issue \"Download page showing incorrect latest version\" (#7933) at NuGet/NuGetGallery","RelatedBody":"\r\n### Describe the bug\r\nhttps://www.nuget.org/downloads is showing 5.4 at top as latest when it is not the latest version 5.5.1 is\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. https://www.nuget.org/downloads\r\n\r\n### Expected behavior\r\nShow correct latest version at top\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/1192780/78588963-503b2380-77f4-11ea-8224-bfe142915b73.png)"},{"Id":"12016858235","Type":"IssuesEvent","CreatedAt":"2020-04-10T17:02:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7932","RelatedDescription":"Closed issue \"An administrator needs to claim ownership of the company by DNS validation of X before the application NuGet.Org can be provisioned\" (#7932) at NuGet/NuGetGallery","RelatedBody":"Trying to sign to my Nuget account and am getting this message:\r\n\r\n```\r\nAADSTS650051: Using application 'NuGet.Org' is currently not supported for your organization\r\n XXXX because it is in an unmanaged state. An administrator needs to claim ownership of the\r\n company by DNS validation of XXXX before the application NuGet.Org can be provisioned. \r\n\r\nTrace ID: 00a6abd7-0032-4e98-b22f-94d4026f4700 \r\nCorrelation ID: 3cda5e25-0c27-4c15-93df-166d1bfd9fe4 \r\nTimestamp: 2020-04-06 16:19:09Z\r\n```\r\nI was able to sign to this very account just last week. How do I go about claiming the ownership?"},{"Id":"12006241856","Type":"IssuesEvent","CreatedAt":"2020-04-09T14:41:57","Actor":"MGWVc","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7940","RelatedDescription":"Closed issue \"https://twitter.com/MGWVc\" (#7940) at NuGet/NuGetGallery","RelatedBody":"[@MGWVc](https://twitter.com/MGWVc) `MGWVc ###` For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this git commit of NuGetGallery '...'\r\n2. Run this code '....'\r\n3. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"12006229785","Type":"IssuesEvent","CreatedAt":"2020-04-09T14:40:50","Actor":"MGWVc","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7940","RelatedDescription":"Opened issue \"https://twitter.com/MGWVc\" (#7940) at NuGet/NuGetGallery","RelatedBody":"### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this git commit of NuGetGallery '...'\r\n2. Run this code '....'\r\n3. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"11998881006","Type":"PullRequestEvent","CreatedAt":"2020-04-08T21:18:01","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7939","RelatedDescription":"Merged pull request \"[A11y]Accessibility fixes 2\" (#7939) at NuGet/NuGetGallery","RelatedBody":"Follow-up to https://github.com/NuGet/NuGetGallery/pull/7927\r\nAddresses the following issues:\r\n[A11y]Narrator is not reading the labels for \"Select Version(s)\" drop-down and \"Select reason(s)\" check-box group #7888\r\n - Update the descriptions on these to indicate context.\r\n\r\n[A11y]The narrator announces same name for all 3 actionable images present under Owner section #7883\r\n - Updated gravatar image alt text to include username\r\n\r\n[A11y]Incorrect name property provided for the \"Custom\" tab item. #7884\r\n - Updated descriptions to include proper title."},{"Id":"11989192406","Type":"PullRequestEvent","CreatedAt":"2020-04-08T02:10:52","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7939","RelatedDescription":"Opened pull request \"[A11y]Accessibility fixes 2\" (#7939) at NuGet/NuGetGallery","RelatedBody":"Follow-up to https://github.com/NuGet/NuGetGallery/pull/7927\r\nAddresses the following issues:\r\n[A11y]Narrator is not reading the labels for \"Select Version(s)\" drop-down and \"Select reason(s)\" check-box group #7888\r\n - Update the descriptions on these to indicate context.\r\n\r\n[A11y]The narrator announces same name for all 3 actionable images present under Owner section #7883\r\n - Updated gravatar image alt text to include username\r\n\r\n[A11y]Incorrect name property provided for the \"Custom\" tab item. #7884\r\n - Updated descriptions to include proper title."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12028484685","Type":"IssuesEvent","CreatedAt":"2020-04-12T23:39:34","Actor":"loic-sharma","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9425","RelatedDescription":"Opened issue \"Confusing error message when incorrectly using a clear text password  \" (#9425) at NuGet/Home","RelatedBody":"The `nuget.config` file uses the `Password` key for encrypted passwords and the `ClearTextPassword` key for clear text passwords. Installing a package when a clear text password has been added to the `Password` key results in a confusing error message:\r\n\r\n```\r\nUnable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  Invalid length for a Base-64 char array or string.\r\n```\r\n\r\nInstead, I'd recommend an error message like:\r\n\r\n```\r\nUnable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  The password for package source 'abc' is invalid.\r\n```\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: nuget.exe and dotnet.exe\r\nNuGet version (x.x.x.xxx):  4.9.3.5777\r\ndotnet.exe --version: 5.0.100-preview.2.20157.4\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nAdd the following nuget.config file to your project:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n    <add key=\"nuget\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </packageSources>\r\n  <packageSourceCredentials>\r\n    <nuget>\r\n      <add key=\"Username\" value=\"foo\" />\r\n      <add key=\"Password\" value=\"bar\" />\r\n    </nuget>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```\r\n\r\nNotice I am incorrectly using a clear text password `bar` with the `Password` key. I should be using the `ClearTextPassword` key instead. See: https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#packagesourcecredentials\r\n\r\nNow, try to install a package using nuget.exe:\r\n\r\n```cli\r\nPS D:\\Code\\x> nuget.exe install FooBar\r\nFeeds used:\r\n  https://api.nuget.org/v3/index.json\r\n\r\nInstalling package 'FooBar' to 'D:\\Code\\x'.\r\nUnable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  Invalid length for a Base-64 char array or string.\r\n```\r\n\r\nOr dotnet.exe:\r\n\r\n```cli\r\nPS D:\\Code\\x> dotnet add package FooBar\r\n  Writing C:\\Users\\sharm\\AppData\\Local\\Temp\\tmpF97.tmp\r\ninfo : Adding PackageReference for package 'FooBar' into project 'D:\\Code\\x\\x.csproj'.\r\ninfo : Restoring packages for D:\\Code\\x\\x.csproj...\r\nerror: Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\nerror:   The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.\r\n\r\n...\r\n```\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n<details>\r\n<summary>Verbose Logs</summary>\r\n\r\n```cli\r\nPS D:\\Code\\x> nuget.exe install FooBar -Verbosity detailed\r\nNuGet Version: 4.9.3.5777\r\nFeeds used:\r\n  https://api.nuget.org/v3/index.json\r\n\r\nInstalling package 'FooBar' to 'D:\\Code\\x'.\r\nUnable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  Invalid length for a Base-64 char array or string.\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source https://api.nuget.org/v3/index.json. ---> System.FormatException: Invalid length for a Base-64 char array or string\r\n.\r\n   at System.Convert.FromBase64_Decode(Char* startInputPtr, Int32 inputLength, Byte* startDestPtr, Int32 destLength)\r\n   at System.Convert.FromBase64CharPtr(Char* inputPtr, Int32 inputLength)\r\n   at System.Convert.FromBase64String(String s)\r\n   at NuGet.Configuration.EncryptionUtility.DecryptString(String encryptedString)\r\n   at NuGet.Configuration.PackageSourceCredential.get_Password()\r\n   at NuGet.Protocol.HttpSourceAuthenticationHandler..ctor(PackageSource packageSource, HttpClientHandler clientHandler, ICredentialService credentialService)\r\n   at NuGet.Protocol.HttpHandlerResourceV3Provider.CreateResource(PackageSource packageSource)\r\n   at NuGet.Protocol.HttpHandlerResourceV3Provider.TryCreate(SourceRepository source, CancellationToken token)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__15`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<CreateHttpClientAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<EnsureHttpClientAsync>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<GetThrottledResponse>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<>c__DisplayClass14_0`1.<<GetAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Common.ConcurrencyUtilities.<ExecuteWithFileLockedAsync>d__2`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.HttpSource.<GetAsync>d__14`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<GetServiceIndexResourceV3>d__9.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<GetServiceIndexResourceV3>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.ServiceIndexResourceV3Provider.<TryCreate>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.DependencyInfoResourceV3Provider.<TryCreate>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__16`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.SourceRepository.<GetResourceAsync>d__15`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<GetLatestVersionCoreAsync>d__94.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<>c__DisplayClass92_1.<<GetLatestVersionAsync>b__3>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<GetLatestVersionAsync>d__92.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<GetLatestVersionAsync>d__91.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.InstallCommand.<InstallPackageAsync>d__40.MoveNext()\r\n```\r\n</details>\r\n"},{"Id":"12025970959","Type":"IssuesEvent","CreatedAt":"2020-04-12T12:00:47","Actor":"WebAzOps","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9424","RelatedDescription":"Opened issue \"NughetVisual\" (#9424) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"12022569749","Type":"IssuesEvent","CreatedAt":"2020-04-11T16:38:46","Actor":"IvanStoychev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9413","RelatedDescription":"Closed issue \"Pushing package to nuget.org always gives internal server error 500\" (#9413) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI am trying to upload a new version of my package to Nuget through console.\r\nIt always encounters an internal server error 500, no matter what I do and try.\r\nEven when status.nuget.org lists systems all green and trying different days.\r\n\r\nNuGet product used:\r\nNuGet.exe and dotnet.exe\r\n\r\nNuGet version:\r\n5.4.0\r\n\r\ndotnet.exe version:\r\n3.1.100\r\n\r\nOS version:\r\nwin7\r\n\r\nWorked before?\r\nNo.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Pull master of https://github.com/IvanStoychev/Useful.String.Extensions\r\n2. Run following command \"dotnet pack --configuration Release -o output\"\r\n3. Run one or both of the following commands:\r\n3.1. \"dotnet nuget push output/Useful.String.Extensions.1.4.2.nupkg -k yourAPIkey -s https://api.nuget.org/v3/index.json\"\r\n3.2. \"nuget push output/Useful.String.Extensions.1.4.2.nupkg -Source https://api.nuget.org/v3/index.json\" (you need to set your API key beforehand)\r\n\r\nThe 1.4.2 version does not exist on nuget.org, so it shouldn't be a problem. Besides, if that was the problem it should have returned a 403 error, instead of a 500 one.\r\n\r\nI don't know if the above command will work if you are not using my API key, however I am reluctant to share it, of course.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nNuget.exe -verbosity detailed output:\r\nNuGet Version: 5.4.0.6315\r\nPushing Useful.String.Extensions.1.4.2.nupkg to 'https://www.nuget.org/api/v2/package'...\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  InternalServerError https://www.nuget.org/api/v2/package/ 2079ms\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  InternalServerError https://www.nuget.org/api/v2/package/ 1218ms\r\n  PUT https://www.nuget.org/api/v2/package/\r\n  InternalServerError https://www.nuget.org/api/v2/package/ 1223ms\r\nResponse status code does not indicate success: 500 (Internal Server Error).\r\nSystem.Net.Http.HttpRequestException: Response status code does not indicate success: 500 (Internal Server Error).\r\n   at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.EnsureSuccessStatusCode(HttpResponseMessage response, Nullable`1 codeNotToThrow, ILogger logger)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<>c__DisplayClass23_0.<PushPackageToServer>b__0(HttpResponseMessage response)\r\n   at NuGet.Protocol.HttpSource.<ProcessResponseAsync>d__18`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageToServer>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackageCore>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<PushPackage>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Protocol.Core.Types.PackageUpdateResource.<Push>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.PushRunner.<Run>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.PushCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\ndotnet.exe -d output (--verbosity option not recogized):\r\nTelemetry is: Enabled\r\ninfo : Pushing Useful.String.Extensions.1.4.2.nupkg to 'https://www.nuget.org/api/v2/package'...\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo :   InternalServerError https://www.nuget.org/api/v2/package/ 11764ms\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo :   InternalServerError https://www.nuget.org/api/v2/package/ 575ms\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo :   InternalServerError https://www.nuget.org/api/v2/package/ 565ms\r\nerror: Response status code does not indicate success: 500 (Internal Server Error).\r\n\r\n### Sample Project\r\n[Useful.String.Extensions 1.4.2.zip](https://github.com/NuGet/Home/files/4456251/Useful.String.Extensions.1.4.2.zip)"},{"Id":"12020793099","Type":"IssuesEvent","CreatedAt":"2020-04-11T08:11:26","Actor":"anangaur","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/442","RelatedDescription":"Closed issue \"Manage NuGet Packages dialog shows 'Authors' of package but not 'Owners'\" (#442) at NuGet/Home","RelatedBody":"I have a question about why the package ‘Authors’ is listed in the data shown when looking at a package in Visual Studio through the “Manage NuGet Packages” dialog. The “Authors” is just an arbitrary string that could be filled in with anything. From trust perspective as a package consumer what I really want to know is who the ‘Owners’ or publishers of the package are.\n\nFor example if you look up the Xerces package in Visual Studio you see it says ‘The Apache Software Foundation’. I might think oh great it looks like it is published by the owner of the library. However if you actually go to the NuGet.org site and look at the package the owner is someone completely different, Kikuchi. From a package trusting perspective this is bad. I need to see front and center who the owner of the package is, since the author is just a meaningless string that could contain any value.\n"},{"Id":"12019565756","Type":"IssuesEvent","CreatedAt":"2020-04-11T00:48:36","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9350","RelatedDescription":"Closed issue \"Measure PMUI tab-switching Performance\" (#9350) at NuGet/Home","RelatedBody":"When switching tabs in the PMUI, we need to be able to measure the time between the user-action, data is refreshed, and when WPF has drawn the controls.\r\n\r\nMy goal for now is to figure out a strategy for measuring this timing on my own machine, so I can recognize and report when I've made a noticeable improvement. Current plan is not to introduce such measurements to clients via telemetry, Consider this step 1 toward perf improvements, and this will surely evolve from this point."},{"Id":"12019557984","Type":"IssuesEvent","CreatedAt":"2020-04-11T00:46:10","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9349","RelatedDescription":"Closed issue \"Discuss user-study to get a baseline on Perf issues\" (#9349) at NuGet/Home","RelatedBody":"Let's investigate how PMUI performance is perceived at a more granular level.\r\n\r\nA Baseline score would help us know that we've improved performance after some work is done in that area.\r\n\r\n//cc: @aortiz-msft "},{"Id":"12019139802","Type":"IssuesEvent","CreatedAt":"2020-04-10T22:58:26","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9423","RelatedDescription":"Closed issue \"Visual Studio non-sdk style PR projects with PR items without version silently fail to add package References.\" (#9423) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nIn a non-sdk package reference project if a PR item does not have a version:\r\n1. Reading the package references fails without any error in the build output and the build succeeds .\r\nThe error is displayed in the \"Test\" result window.\r\n![image](https://user-images.githubusercontent.com/16580006/79025495-cdd79a00-7b3a-11ea-802c-cda0f897ea69.png)\r\n\r\n2. The package is not added in the solution explorer -> project -> references tree.\r\n3. The behavior is different than the SDK style projects where in such cases the min version is used. \r\n\r\n\r\nVS version (if appropriate):\r\nMicrosoft Visual Studio Enterprise 2019 Int Preview\r\nVersion 16.6.0 Preview 3.0 [30006.203.master]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Download the attached zip folder.\r\n1. Load the project in Visual Studio.\r\n1. Build. \r\n\r\n### Sample Project\r\n\r\n[Repo.zip](https://github.com/NuGet/Home/files/4463526/Repo.zip)\r\n\r\n\r\n"},{"Id":"12018851404","Type":"IssuesEvent","CreatedAt":"2020-04-10T22:00:00","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9423","RelatedDescription":"Opened issue \"Visual Studio non-sdk style PR projects with PR items without version silently fail to add package References.\" (#9423) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\nIn a non-sdk package reference project if a PR item does not have a version:\r\n1. Reading the package references fails without any error in the build output and the build succeeds .\r\nThe error is displayed in the \"Test\" result window.\r\n![image](https://user-images.githubusercontent.com/16580006/79025495-cdd79a00-7b3a-11ea-802c-cda0f897ea69.png)\r\n\r\n2. The package is not added in the solution explorer -> project -> references tree.\r\n3. The behavior is different than the SDK style projects where in such cases the min version is used. \r\n\r\n\r\nVS version (if appropriate):\r\nMicrosoft Visual Studio Enterprise 2019 Int Preview\r\nVersion 16.6.0 Preview 3.0 [30006.203.master]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Download the attached zip folder.\r\n1. Load the project in Visual Studio.\r\n1. Build. \r\n\r\n### Sample Project\r\n\r\n[Repo.zip](https://github.com/NuGet/Home/files/4463526/Repo.zip)\r\n\r\n\r\n"},{"Id":"12017421480","Type":"IssuesEvent","CreatedAt":"2020-04-10T18:21:15","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9422","RelatedDescription":"Opened issue \"Extern alias feature implementation, NuGet side\" (#9422) at NuGet/Home","RelatedBody":"See design document: https://github.com/NuGet/Home/blob/dev/designs/PackageReference-Extern-Alias.md\r\n\r\nImplementation of https://github.com/NuGet/Home/issues/4989. \r\n\r\nGiven that this is a cross team feature, don't want to close the bug until all the partner work has been done too. "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-04-13T05:30:39.1939389Z","RunDurationInMilliseconds":1929}