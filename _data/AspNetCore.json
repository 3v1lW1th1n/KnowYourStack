{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":3,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":105,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6687311747","Type":"IssuesEvent","CreatedAt":"2017-10-07T21:54:15","Actor":"JulienM28","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2235","RelatedDescription":"Opened issue \"VS 2017 Debugger Hangs on start\" (#2235) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI use Visual studio 2017 x64 on Windows 10 x64 with Dot Net core 1.1\r\nMy project is using the last 1.1.X dependencies available.\r\n\r\nI have a starnge issue with an ASP.Net Core projetct.\r\n\r\nSince recently everything worked fine. The dubugger took a while to start but was ok.\r\n\r\nNow when I launch the debugger, the webSite is starting fine, but VS Hangs on a message telling the web server took too long time to start.\r\n\r\nI tried to make an application console instead of using IIS Express, The debugger is starting nicely.\r\n\r\nI have another issue in this case: I'm using custom url to test subdomains rooting, and brakpoints doesn't hit in this case.\r\n\r\nSo I can't debug anymore.\r\n\r\nFinaly I created a fresh project and the debugger worked fine.\r\n\r\nI assume there's something in my code that doesn't please to Visual Studio or .Net Core, But I didn't fint out what for now.\r\n\r\nAny Idea?\r\n\r\nThanks.\r\n"},{"Id":"6686797815","Type":"IssuesEvent","CreatedAt":"2017-10-07T15:46:04","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2234","RelatedDescription":"Opened issue \"Migrating ASP.NET Core 1.1 apps -> ASP.NET Core 2.0\" (#2234) at aspnet/Home","RelatedBody":"@richlander opened this here: https://github.com/dotnet/core/issues/726\r\n\r\nWe need docs for this.\r\n\r\nSee: https://github.com/dotnet/core/issues/711#issuecomment-312377310"},{"Id":"6686118866","Type":"IssuesEvent","CreatedAt":"2017-10-07T06:07:40","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2233","RelatedDescription":"Opened issue \"Performance issue with stream download\" (#2233) at aspnet/Home","RelatedBody":"@chintan3100 commented on Sep 5\r\nI am downloading 400 MB file on local machine with 7 MB/Second (.net core 2.0) same code run with .net framework 4.6 download speed 100 MB/Second.\r\n\r\npublic IActionResult DownloadDocument(Guid documentUniqueId)\r\n{\r\nvar bytes = System.IO.File.OpenRead(@\"D:\\home\\site\\wwwroot\\file\\Organizer01_2017-09-03 (14) (3).zip\");\r\nreturn File(bytes, \"application/octet-stream\");\r\n\r\n}\r\nFile size 400 MB . API on local system. FIle on local system\r\nPerformance issue with stream download hasno dependencies\r\n\r\n+ add dependency\r\n @Petermarcu\r\n@JeremyKuhne can we get this tracked in dotnet/corefx?\r\n @JeremyKuhne\r\n     Member\r\nJeremyKuhne commented on Sep 5\r\nThis issue was also opened as: aspnet/Performance#246\r\n\r\n@chintan3100 We need to know exactly how the FileStream is being written. What is the File class you're using? If you're writing via ASP.NET apis it would probably be better to start on that end.\r\n @chintan3100\r\n     \r\nchintan3100 commented 28 days ago\r\nI am using .net core. Please refer below code\r\n\r\npublic IActionResult DownloadDocument(Guid documentUniqueId)\r\n{\r\nvar bytes = System.IO.File.OpenRead(@\"D:\\home\\site\\wwwroot\\file\\Organizer01_2017-09-03 (14) (3).zip\");\r\nreturn File(bytes, \"application/octet-stream\");\r\n\r\n}\r\n @JeremyKuhne\r\n     Member\r\n\r\nPresumably you're talking about System.Web.Mvc.Controller.File. You should probably start with https://github.com/aspnet/Mvc/issues. The ASP.NET team is the right starting point."},{"Id":"6685310880","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:23:11","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2232","RelatedDescription":"Opened issue \"Core 2.0 CORS api doesn't work in IIS 8.5\" (#2232) at aspnet/Home","RelatedBody":"Originally opened by @kostyamy here: https://github.com/dotnet/core/issues/951\r\n# Issue Title\r\n\r\nHaving some troubles with hosting .NET Core 2.0 MVC bases api (not views but pure api) on Windows 2012 R2: IIS 8.5 -> Kestrel on dynamic port.\r\n\r\nClient is Chrome both kinds - \"fetch\" and \"XHR\" but i don't think it makes any difference\r\n\r\n- \"same origin\" requests work fine\r\n- locally on my dev machine Surface , Windows 10 same origin and cross-domain (faked via system32\\drivers\\etc\\hosts) work fine even using IIS proxy ->Kestrel chain. Please note not IIS Express but actual IIS 10.\r\n- 2012 box IIS 8.5 no luck :-( looks like IIS not passing through any cross-domain api calls since even IIS log and tracing show NO activities on \"<domain>/api/<controller>/<method>\" urls.  At the same time STATIC html files are being served just fine but not by Kestrel but pure IIS.\r\n\r\nTried to launch api form CLI: dotnet .\\<my-api>.dll and looks like it starts just find and hosts on localhost:<dynamic port>\r\n\r\nHere is my web.config (pretty much out of box)\r\n<system.webServer>\r\n    <handlers>\r\n      <add name=\"aspNetCore\" path=\"api/*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\"dotnet\" arguments=\".\\<my-api>.dll\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" />\r\n  </system.webServer>\r\n</configuration>\r\n\r\ni see no system level error in event log, no IIS logs, nothing.\r\nIf AspDotNetModule Core fails somehow while starting under IIS then where besides empty system event log i should be looking at ???\r\n\r\nIf needed I can provide more information.\r\n\r\nThanks in advance,\r\n-K\r\n\r\nFrom: @brockallen\r\n\r\nMy guess is that IIS is eating OPTIONS requests. Do you have anything configured in IIS to process those? \r\n\r\nhttps://brockallen.com/2012/10/18/cors-iis-and-webdav/\r\n\r\nFrom: @kostyamy\r\n\r\nall clean. no filters of any kind. looks like my original post is missing content of the web.config\r\nbut it's actually a default one produced by the dotnet publish -c command\r\nso only AspDotNetModule entry and that's it"},{"Id":"6685044573","Type":"IssuesEvent","CreatedAt":"2017-10-06T20:11:20","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2231","RelatedDescription":"Opened issue \"Asp-controller and asp-action attributes order\" (#2231) at aspnet/Home","RelatedBody":"@johanskoldekrans reported this issue here: https://github.com/dotnet/core/issues/899\r\n\r\nIf a make an a-tag in html on the view and put asp-* tags (for example asp-controller, asp-action and asp-route) after a @(some code)-section and a class-attribute it breaks the interpretation of the asp-* attributes.\r\n\r\nBelow example doesnt pick up the route-id:\r\n`\r\n<a asp-controller=\"Some\" asp-action=\"Something\" class=\"@(x == y ? \"something\" : \"\")\" asp-route-id=\"1\">Click me</a>\r\n`\r\nif I put all after nothing happens (no href is generated):\r\n`\r\n<a class=\"@(x == y ? \"something\" : \"\")\" asp-controller=\"Some\" asp-action=\"Something\" asp-route-id=\"1\">Click me</a>\r\n`\r\nIs this behaviour as design?\r\n\r\nVS 2017 15.3.2\r\n.NETCore 2.1.0-preview1-26778\r\n.EFCore 2.1.0-preview1-26778\r\nWindows 10 Insider (slow ring)\r\n\r\nThis is probably closer to what I did IRL that didn't work, if there is a difference:\r\n\r\n`<a @(x == y ? \"class=\\\"something\\\"\" : \"\")\" asp-controller=\"Some\" asp-action=\"Something\" asp-route-id=\"1\">Click me</a>`"},{"Id":"6684535755","Type":"IssuesEvent","CreatedAt":"2017-10-06T18:03:51","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2230","RelatedDescription":"Opened issue \"Multipart form data body is 0 \" (#2230) at aspnet/Home","RelatedBody":"@drakoumel opened this here: https://github.com/dotnet/core/issues/805\r\n\r\n# Issue Title\r\n\r\nThe body of the receiving controller action of a multipart form data request is 0\r\n\r\n# General\r\n\r\nSo in short, I have two applications the FE and the API. \r\nFrom the FE a user needs to upload a big file thus we use the code provided https://docs.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads\r\n\r\nAjax -> FE -> API.\r\nThe Ajax to FE works fine, but the FE to API send 0 body length. Although their controllers use the exact same code from the ms link.\r\n\r\nOn the API receiving end I see the following (see exception)\r\n\r\n![image](https://user-images.githubusercontent.com/2229298/29233314-92db2794-7ef0-11e7-83b4-20a1fda7dbe8.png)\r\n\r\nI do not know why this happens.\r\n'section.Body.ReadTimeout' threw an exception of type 'System.InvalidOperationException'\r\n\r\nFollowing is the code I use.\r\n\r\n\r\n```\r\nFileStream targetStream = System.IO.File.Create(targetFilePath);                        \r\n                        await section.Body.CopyToAsync(targetStream);\r\n                        Console.WriteLine($\"Copied the uploaded file '{targetFilePath}'\");\r\n                        \r\n                        if (await _api.UploadFile(id, contentDisposition.FileName.Trim('\"'), targetStream))\r\n                        {\r\n                            return BadRequest(\"Failed to upload file\");\r\n                        }\r\n```\r\n\r\n\r\nwhich on its own calls \r\n```\r\n\r\nClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", _session.AuthenticationToken());\r\n\r\n            Client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\r\n\r\n            MultipartFormDataContent form = new MultipartFormDataContent();\r\n\r\n            HttpContent content = new StringContent(\"fileToUpload\");\r\n            form.Add(content, \"fileToUpload\");\r\n\r\n            content = new StreamContent(stream);\r\n\r\n            content.Headers.ContentDisposition = new ContentDispositionHeaderValue(\"form-data\")\r\n            {\r\n                Name = \"fileToUpload\",\r\n                FileName = fileName\r\n            };\r\n            form.Add(content);\r\n```\r\n\r\nUpon sending the stream has Body length. \r\nBut upon receiving on the API it is empty.\r\n\r\n`        [HttpPost(\"{id}\")]\r\n        [DisableFormValueModelBinding]\r\n        public async Task<IActionResult> Upload()\r\n        {\r\n            string displayUrl = HttpContext.Request.GetDisplayUrl();\r\n            var arrayUrl = displayUrl.Split('/');\r\n            string metricId = arrayUrl.ToList().Last();\r\n\r\n            if (!this.IsMultipartContentType(Request.ContentType))\r\n            {\r\n                return BadRequest($\"Expected a multipart request, but got {Request.ContentType}\");\r\n            }\r\n\r\n            string targetFilePath = null;\r\n\r\n            var boundary = this.GetBoundary(\r\n                MediaTypeHeaderValue.Parse(Request.ContentType),\r\n                _defaultFormOptions.MultipartBoundaryLengthLimit);\r\n            var reader = new MultipartReader(boundary, HttpContext.Request.Body);\r\n\r\n            var section = await reader.ReadNextSectionAsync(); <-- section.body = 0\r\n}`\r\n\r\nI also tried with postman, which generated the code bellow ( I dont know which format is best )\r\n\r\n```\r\ncurl -X POST \\\r\n  http://localhost:5000/api/cloudstorage/08d4df1d-29a6-b421-9c77-df96f63c9f83 \\\r\n  -H 'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..hgj-C2Z4-ZcP6mDd7wIm7AVyWF0EzZwbvP6BIVzMKMs' \\\r\n  -H 'cache-control: no-cache' \\\r\n  -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \\\r\n  -H 'postman-token: 03f0b075-654d-2164-5f7c-bf1fa3277deb' \\\r\n  -F 'file=@C:\\Users\\AAA\\AppData\\Local\\Postman\\app-5.1.2\\content_resources_200_percent.pak'\r\n```"},{"Id":"6684093230","Type":"IssuesEvent","CreatedAt":"2017-10-06T16:15:56","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2229","RelatedDescription":"Opened issue \"After creating new ASP.NET Core 2.0 project Nuget could not restore packages\" (#2229) at aspnet/Home","RelatedBody":"@FireFighter92 reported this here: https://github.com/dotnet/core/issues/991\r\n\r\n**My tools:**\r\n\r\n> Microsoft Visual Studio Community 2017  Version 15.3.5\r\n> ASP.NET and Web Tools 2017   15.0.30726.0\r\n> ASP.NET Core Razor Language Services   1.0\r\n> ASP.NET Template Engine 2017   15.0.30726.0\r\n> NuGet Package Manager   4.3.1\r\n> SQL Server Data Tools   15.1.61707.200\r\nAnd of course I have the latest SDK and Runtime installed\r\n\r\nJust downloaded VS 2017 and tried to build new ASP.NET Core 2.0 project and unfortunately got an error with the best impression :)\r\n\r\n**Error:**\r\n\r\n> NU1202: Package Microsoft.Extensions.SecretManager.Tools 2.0.0 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.Extensions.SecretManager.Tools 2.0.0 supports: netcoreapp2.0 (.NETCoreApp,Version=v2.0)\r\n> NU1202: Package Microsoft.EntityFrameworkCore.Tools.DotNet 2.0.0 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.EntityFrameworkCore.Tools.DotNet 2.0.0 supports: netcoreapp2.0 (.NETCoreApp,Version=v2.0)\r\n> NU1202: Package Microsoft.VisualStudio.Web.CodeGeneration.Tools 2.0.0 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.VisualStudio.Web.CodeGeneration.Tools 2.0.0 supports: netcoreapp2.0 (.NETCoreApp,Version=v2.0)\r\n> NU1202: Package Microsoft.VisualStudio.Web.CodeGeneration.Contracts 2.0.0 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.VisualStudio.Web.CodeGeneration.Contracts 2.0.0 supports: netstandard2.0 (.NETStandard,Version=v2.0)\r\n> NU1202: Package Microsoft.Build 15.3.409 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.Build 15.3.409 supports:\r\n>   - net46 (.NETFramework,Version=v4.6)\r\n>   - netstandard1.5 (.NETStandard,Version=v1.5)\r\n> NU1202: Package Microsoft.Build.Framework 15.3.409 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.Build.Framework 15.3.409 supports:\r\n>   - net46 (.NETFramework,Version=v4.6)\r\n>   - netstandard1.3 (.NETStandard,Version=v1.3)\r\n> NU1202: Package Microsoft.Build.Utilities.Core 15.3.409 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package Microsoft.Build.Utilities.Core 15.3.409 supports:\r\n>   - net46 (.NETFramework,Version=v4.6)\r\n>   - netstandard1.3 (.NETStandard,Version=v1.3)"},{"Id":"6683994964","Type":"IssuesEvent","CreatedAt":"2017-10-06T15:54:29","Actor":"Saticmotion","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2228","RelatedDescription":"Opened issue \"How to publish self contained app\" (#2228) at aspnet/Home","RelatedBody":"I've upgraded my app from ASP.NET Core 1 to 2, and I've been trying to publish my app with the following command:\r\n\r\n    dotnet publish -o \\bin\\Release --self-contained --runtime win81-x64 --configuration \"Release\" --force\r\n\r\nI got to this point with the following tutorial: https://docs.microsoft.com/en-us/dotnet/core/deploying/deploy-with-cli\r\nI've followed the steps under \"Self-contained deployment without third-party dependencies\" and \"Self-contained deployment with third-party dependencies\"\r\n\r\nThis publishes some files (the exe, dll, pdb, and config files) but not my wwwroot (and thus css and js files), nor third party dlls.\r\n\r\nThen I copy the files to the folder where my .Net Core 1 app was. Then I restart the website. If I try to browse to my website I get 403 - Forbidden: Access is denied.\r\n\r\nWhat am I doing wrong? The IIS website used to work for .Net Core 1"},{"Id":"6683225558","Type":"IssuesEvent","CreatedAt":"2017-10-06T13:18:19","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2226","RelatedDescription":"Closed issue \"Add setter to MvcJsonOptions.SerializerSettings.\" (#2226) at aspnet/Home","RelatedBody":"I had an override for JsonSettings with all my desired configuration.\r\nI have to reproduce everything in AddJsonOptions because I cannot directly set SerializerSettings.\r\n"},{"Id":"6681298948","Type":"IssuesEvent","CreatedAt":"2017-10-06T02:41:59","Actor":"codetian","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2227","RelatedDescription":"Opened issue \"ComponentRegistrationException:\" (#2227) at aspnet/Home","RelatedBody":" I use castle  Ioc  in my application  ,like [code example ](https://gist.github.com/cwe1ss/050a531e2711f5b62ab0)\r\n\r\nbut An error occurred while starting the application.\r\n\r\nComponentRegistrationException: Component Microsoft.Extensions.Options.OptionsManager`1 could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not, make sure you specify a unique name.\r\nCastle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem.Register(IHandler handler)\r\n\r\nComponentRegistrationException: Component Microsoft.Extensions.Options.OptionsManager`1 could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not, make sure you specify a unique name.\r\nCastle.MicroKernel.SubSystems.Naming.DefaultNamingSubSystem.Register(IHandler handler)\r\nCastle.MicroKernel.DefaultKernel.AddCustomComponent(ComponentModel model)\r\nCastle.MicroKernel.Registration.ComponentRegistration.Castle.MicroKernel.Registration.IRegistration.Register(IKernelInternal kernel)\r\nCastle.MicroKernel.DefaultKernel.Register(IRegistration[] registrations)\r\nCastle.Windsor.WindsorContainer.Register(IRegistration[] registrations)\r\nBlueBlog.Utility.WindsorRegistration.Register(IWindsorContainer container, IEnumerable<ServiceDescriptor> descriptors) in WindsorRegistration.cs\r\n+\r\n                    container.Register(\r\nBlueBlog.Utility.WindsorRegistration.Populate(IocContainer container, IEnumerable<ServiceDescriptor> descriptors) in WindsorRegistration.cs\r\n+\r\n            Register(container.Container, descriptors);\r\nBlueBlog.Startup.ConfigureServices(IServiceCollection services) in Startup.cs\r\n+\r\n            container.Populate(services);\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n"},{"Id":"6680836824","Type":"IssuesEvent","CreatedAt":"2017-10-05T23:12:27","Actor":"Maly-Lemire","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2226","RelatedDescription":"Opened issue \"Add setter to MvcJsonOptions.SerializerSettings.\" (#2226) at aspnet/Home","RelatedBody":"I had an override for JsonSettings with all my desired configuration.\r\nI have to reproduce everything in AddJsonOptions because I cannot directly set SerializerSettings.\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6686964672","Type":"PullRequestEvent","CreatedAt":"2017-10-07T17:40:20","Actor":"Gurgen","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/997","RelatedDescription":"Opened pull request \"Groups collection without lock\" (#997) at aspnet/SignalR","RelatedBody":"As discussed with @davidfowl groups logic changed."},{"Id":"6686521927","Type":"IssuesEvent","CreatedAt":"2017-10-07T12:21:28","Actor":"tanichols","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/996","RelatedDescription":"Opened issue \"SignalR Documentation\" (#996) at aspnet/SignalR","RelatedBody":"I'd like to start working on SignalR documentation. Since SignalR is still in alpha, I don't believe the docs belong in the aspnet/Docs repo. Can I get some guidance on how the team would like to handle documentation? I can do simple .MD pages in root, .MD pages in a docs directory, a gh-pages branch with github pages or something else entirely. Let me know what format the team would like and I'll get started. "},{"Id":"6685694307","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:53:18","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/995","RelatedDescription":"Opened issue \"Exposing connections list?\" (#995) at aspnet/SignalR","RelatedBody":"Should we expose the list of connection to make it easier to be aware of all connected clients? \r\nRight now someone would have to do something like write their own HubEndpoint and override the OnConnected method and create their own ConnectionList property they would then expose. "},{"Id":"6685580419","Type":"IssuesEvent","CreatedAt":"2017-10-06T22:57:45","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/604","RelatedDescription":"Closed issue \"Add support for IUserIdProvider\" (#604) at aspnet/SignalR","RelatedBody":"This allows users to plug in how \r\n to convert from the incoming connection to the user id that SignalR uses for Clients.User(userId)\r\n\r\nhttps://github.com/SignalR/SignalR/blob/b73cbabe69bc48c4cb8d768148e157712a264ce9/src/Microsoft.AspNet.SignalR.Core/IUserIdProvider.cs"},{"Id":"6685575743","Type":"PullRequestEvent","CreatedAt":"2017-10-06T22:55:41","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/979","RelatedDescription":"Merged pull request \"Adding CancelInvocation message\" (#979) at aspnet/SignalR","RelatedBody":"Opening this early to get feedback on the spec mostly and to see if I'm missing anything major with the feature.\r\n\r\nWorking on adding a couple more tests and reviewing my changes."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6687345202","Type":"IssuesEvent","CreatedAt":"2017-10-07T22:20:30","Actor":"HarelM","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6924","RelatedDescription":"Opened issue \"AddSingleton breaks in 2.0?\" (#6924) at aspnet/Mvc","RelatedBody":"I'm in the middle of migrating my project from netcoreapp1.1 to netcoreapp2.0.\r\nMy code it at the following repository:\r\nhttps://github.com/IsraelHikingMap/Site\r\nThere is a branch called NetStandard2.0 there where I updated the code in order to move from 1.1 to 2.0.\r\nMost of the code stayed the same but a new bug started to appear after the migration:\r\nI have a class there called LRUCache which caches the recently logged users - it is registered in the following class as **singleton**:\r\nhttps://github.com/IsraelHikingMap/Site/blob/NetStansards2.0/IsraelHiking.API/RegisterApi.cs#L34\r\nWhen running the project I see two instances with different hash code:\r\nThe first is here:\r\nhttps://github.com/IsraelHikingMap/Site/blob/NetStansards2.0/IsraelHiking.Web/OsmAccessTokenValidator.cs#L17\r\nand the second is here:\r\nhttps://github.com/IsraelHikingMap/Site/blob/NetStansards2.0/IsraelHiking.API/Controllers/OsmController.cs#L39\r\n\r\nWhen using the immediate window for those different flows I get those hash codes:\r\n_cache.GetHashCode()\r\n37382511\r\n_cache.GetHashCode()\r\n44927025\r\n\r\nAm I crazy? Did I miss-configured something? Am I the only one who is reporting this?\r\nThanks ahead! "},{"Id":"6685532517","Type":"IssuesEvent","CreatedAt":"2017-10-06T22:38:15","Actor":"smitpatel","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6923","RelatedDescription":"Opened issue \"Mvc Web App template in docker generates incorrect URL\" (#6923) at aspnet/Mvc","RelatedBody":"Steps:\r\n1. Create new ASP.NET Core Web Application\r\n2. Choose Web Application template for 2.0\r\n3. Add individual accounts auth\r\n4. Enable Docker support for windows.\r\n\r\nRestore packages/build solution etc.\r\nPress F5\r\nExpected output:\r\nWebsite from template is opened in browser.\r\nActual output:\r\nBrowser fails to load website. The website URL in browser is http://172.21.203.31/https://localhost:44341/\r\n"},{"Id":"6683891826","Type":"IssuesEvent","CreatedAt":"2017-10-06T15:32:54","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6922","RelatedDescription":"Opened issue \"Add customizable conventions for ApiDescription default responses\" (#6922) at aspnet/Mvc","RelatedBody":""},{"Id":"6683728763","Type":"IssuesEvent","CreatedAt":"2017-10-06T15:00:10","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6921","RelatedDescription":"Closed issue \"Add setter to MvcJsonOptions.SerializerSettings.\" (#6921) at aspnet/Mvc","RelatedBody":"From https://github.com/aspnet/Home/issues/2226\r\n\r\n@Maly-Lemire \r\n\r\nI had an override for JsonSettings with all my desired configuration.\r\nI have to reproduce everything in AddJsonOptions because I cannot directly set SerializerSettings.\r\n"},{"Id":"6683646494","Type":"IssuesEvent","CreatedAt":"2017-10-06T14:44:22","Actor":"ben-foster-cko","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6920","RelatedDescription":"Closed issue \"Optional body parameters no longer work since upgrading to .NET Core 2.0\" (#6920) at aspnet/Mvc","RelatedBody":"I have an action filter that automatically checks `ModelState` and returns `400` if it's not valid.\r\n\r\nWe have a few actions that have optional body parameters, for example:\r\n\r\n```\r\n        // POST api/values\r\n        [HttpPost]\r\n        public IActionResult Post([FromBody]SomeClass request = null)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n\r\n            return Ok();\r\n        }\r\n```\r\n\r\nSpecifying the default value of `null` used to be enough to mark them as optional. Since upgrading to ASP.NET Core 2.0 I get the following response:\r\n\r\n```\r\n{\r\n  \"\": [\r\n    \"A non-empty request body is required.\"\r\n  ]\r\n}\r\n```\r\n\r\n"},{"Id":"6683224114","Type":"IssuesEvent","CreatedAt":"2017-10-06T13:18:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6921","RelatedDescription":"Opened issue \"Add setter to MvcJsonOptions.SerializerSettings.\" (#6921) at aspnet/Mvc","RelatedBody":"From https://github.com/aspnet/Home/issues/2226\r\n\r\n@Maly-Lemire \r\n\r\nI had an override for JsonSettings with all my desired configuration.\r\nI have to reproduce everything in AddJsonOptions because I cannot directly set SerializerSettings.\r\n"},{"Id":"6683171026","Type":"IssuesEvent","CreatedAt":"2017-10-06T13:05:49","Actor":"ben-foster-cko","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6920","RelatedDescription":"Opened issue \"Optional body parameters no longer work since upgrading to .NET Core 2.0\" (#6920) at aspnet/Mvc","RelatedBody":"I have an action filter that automatically checks `ModelState` and returns `400` if it's not valid.\r\n\r\nWe have a few actions that have optional body parameters, for example:\r\n\r\n```\r\n        // POST api/values\r\n        [HttpPost]\r\n        public IActionResult Post([FromBody]SomeClass request = null)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n\r\n            return Ok();\r\n        }\r\n```\r\n\r\nSpecifying the default value of `null` used to be enough to mark them as optional. Since upgrading to ASP.NET Core 2.0 I get the following response:\r\n\r\n```\r\n{\r\n  \"\": [\r\n    \"A non-empty request body is required.\"\r\n  ]\r\n}\r\n```\r\n\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6684456737","Type":"PullRequestEvent","CreatedAt":"2017-10-06T17:44:30","Actor":"lkempf","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1454","RelatedDescription":"Opened pull request \"Fixed irritating typo in ResetPasswordAsync()-docs\" (#1454) at aspnet/Identity","RelatedBody":""},{"Id":"6682233776","Type":"IssuesEvent","CreatedAt":"2017-10-06T09:00:29","Actor":"alonstar","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1452","RelatedDescription":"Closed issue \"How to get access_token from HttpContext.GetTokenAsync(\"access_token\") while external login\" (#1452) at aspnet/Identity","RelatedBody":"I want to get access_token from external login (using OpenIdConnect). I can see tokens in external login info,  but I can't get access_token from HttpContext.GetTokenAsync(\"access_token\"). \r\n\r\nMy ExternalLoginCallback is : \r\n\r\n        [HttpGet]\r\n        [AllowAnonymous]\r\n        public async Task<IActionResult> ExternalLoginCallback(string returnUrl = null, string remoteError = null)\r\n        {\r\n            if (remoteError != null)\r\n            {\r\n                ModelState.AddModelError(string.Empty, $\"Error from external provider: {remoteError}\");\r\n                return View(nameof(Login));\r\n            }\r\n            var info = await _signInManager.GetExternalLoginInfoAsync();\r\n            if (info == null)\r\n            {\r\n                return RedirectToAction(nameof(Login));\r\n            }\r\n\r\n            // Sign in the user with this external login provider if the user already has a login.\r\n            var result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, info.ProviderKey, isPersistent: false);\r\n            if (result.Succeeded)\r\n            {\r\n                // Update any authentication tokens if login succeeded\r\n                await _signInManager.UpdateExternalAuthenticationTokensAsync(info);\r\n\r\n                _logger.LogInformation(5, \"User logged in with {Name} provider.\", info.LoginProvider);\r\n                return RedirectToLocal(returnUrl);\r\n            }\r\n            if (result.RequiresTwoFactor)\r\n            {\r\n                return RedirectToAction(nameof(SendCode), new { ReturnUrl = returnUrl });\r\n            }\r\n            if (result.IsLockedOut)\r\n            {\r\n                return View(\"Lockout\");\r\n            }\r\n            else\r\n            {\r\n                // If the user does not have an account, then ask the user to create an account.\r\n                ViewData[\"ReturnUrl\"] = returnUrl;\r\n                ViewData[\"LoginProvider\"] = info.LoginProvider;\r\n                var email = info.Principal.FindFirstValue(ClaimTypes.Email);\r\n                return View(\"ExternalLoginConfirmation\", new ExternalLoginConfirmationViewModel { Email = email });\r\n            }\r\n        }"},{"Id":"6680371422","Type":"IssuesEvent","CreatedAt":"2017-10-05T21:00:04","Actor":"Risbot","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1453","RelatedDescription":"Opened issue \"Cannot consume scoped service Microsoft.AspNetCore.Identity.UserManager from singleton \" (#1453) at aspnet/Identity","RelatedBody":"Why is can not use UserManager in the singleton?"},{"Id":"6679965292","Type":"IssuesEvent","CreatedAt":"2017-10-05T19:28:09","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1414","RelatedDescription":"Closed issue \"Setting the LoginPath not working int ASP.NET Core 2.0\" (#1414) at aspnet/Identity","RelatedBody":"            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                options.LoginPath = \"/Login/Index\";\r\n                options.ReturnUrlParameter = \"RedirectUrl\";\r\n                options.LogoutPath = \"/Login/Logout\";\r\n                options.AccessDeniedPath = \"/Login/Index\";\r\n                options.ExpireTimeSpan = new TimeSpan(0, 15, 0);\r\n\r\n            });\r\n\r\nAfter setting this \"/Account/Login?RedirectUrl=%2F\" is being used.  I can manually go to the login page and login.  Is there another options I need to set now?  I can see that it is using ReturnUrlParameter and ExpireTimeSpan."},{"Id":"6679945261","Type":"IssuesEvent","CreatedAt":"2017-10-05T19:23:34","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1433","RelatedDescription":"Closed issue \"_userManager.ResetPasswordAsync(...) is returning Invalid Token validation message\" (#1433) at aspnet/Identity","RelatedBody":"App: **ASP.NET MVC Core 1.1.1 with Individual User Accounts\r\nIdentity Core\r\nEntity Framework Core\r\nVisual Studio 2017 ver 15.3.3**\r\n\r\nWhen clicking on `Forgot Password` link, the following code successfully sends an email with a generated link. Clicking on the link inside the email body correctly displays the `Reset Password` form.  But after entering login name, new password etc and clicking on Reset button, the validation error` Invalid Token` shows up.\r\n\r\n**Body of my Email that App sent**:\r\n\r\n    Please reset your password by clicking here: <a href='http://localhost/HPF/Account/ResetPassword?userId=1db73091-8098-4427-9a1a-1897dcabea90&code=CfDJ8IgLyyEqB6dPkvwFmW%2BJlPrg%2Fpz%2FiNTD442K1KoBG7MSx3zp6TFSY5w0Xj49cG87P%2BkGSWalD6YbbRlrLP4qAEORuoaHZM%2BMe0G08Y9EeUycbhNxx%2FpEv2z3sJ%2BMr4ZccLBO08iwlbIxBnXkJ5gu%2Bsnoo5FHAKysp85%2FrLdbS47smj%2Bt9kaaFA5DDBkzmR%2Bb0HTV2FL8CyjH2M1wCjLgcSC2Jg6BIcDAVUd7jEwxB8V9upAVh%2FR3FJCk2OAJU4w4Fg%3D%3D'>link</a>\r\n\r\n**Note**: The `PasswordReset `functionality works fine if I am logged in and want to reset my password to something else.\r\n\r\nThe only difference between following code and the default code that `VS2017 `generates in `AccountController `is that we're not using Email attribute as a user name, we have changed\r\n```\r\n[Required]\r\n[EmailAddress]\r\npublic string Email { get; set; }\r\n```\r\nto\r\n\r\n```\r\n[Required]\r\npublic string UserName { get; set; }\r\n```\r\netc. etc., and have extended the user properties as follows:\r\n\r\n**ApplicationUser.cs**:\r\n\r\n```\r\n// Add profile data for application users by adding properties to the ApplicationUser class\r\npublic class ApplicationUser : IdentityUser\r\n{\r\n    public string UserFullName { get; set; }\r\n    [Column(TypeName = \"varchar(50)\")]\r\n    public string UserEmaill { get; set; } \r\n    [Column(TypeName = \"varchar(15)\")]\r\n    public string UserCity{ get; set; }\r\n}\r\n```\r\n\r\n**Controller**:\r\n\r\n    [HttpPost]\r\n    [AllowAnonymous]\r\n    [ValidateAntiForgeryToken]\r\n    public async Task<IActionResult> ForgotPassword(ForgotPasswordViewModel model)\r\n    {\r\n        if (ModelState.IsValid)\r\n        {\r\n            var user = await _userManager.FindByNameAsync(model.UserName);\r\n            string sUserEmail = user.UserEmail; //I Added this. Note the email is not the user name in my app\r\n            if (user == null)\r\n            {\r\n                // Don't reveal that the user does not exist or is not confirmed\r\n                return View(\"ForgotPasswordConfirmation\");\r\n            }\r\n    \r\n            // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713\r\n            // Send an email with this link\r\n            var code = await _userManager.GeneratePasswordResetTokenAsync(user);\r\n            var callbackUrl = Url.Action(\"ResetPassword\", \"Account\", new { userId = user.Id, code = code }, protocol: HttpContext.Request.Scheme);\r\n            await _emailSender.SendEmailAsync(sUserEmail, \"Reset Password\", $\"Please reset your password by clicking here: <a href='{callbackUrl}'>link</a>\");\r\n            return View(\"ForgotPasswordConfirmation\");\r\n        }\r\n    \r\n        // If we got this far, something failed, redisplay form\r\n        return View(model);\r\n    }\r\n    \r\n    [HttpPost]\r\n    [AllowAnonymous]\r\n    [ValidateAntiForgeryToken]\r\n    public async Task<IActionResult> ResetPassword(ResetPasswordViewModel model)\r\n    {\r\n        if (!ModelState.IsValid)\r\n        {\r\n            return View(model);\r\n        }\r\n        var user = await _userManager.FindByNameAsync(model.UserName);\r\n        if (user == null)\r\n        {\r\n            // Don't reveal that the user does not exist\r\n            return RedirectToAction(nameof(AccountController.ResetPasswordConfirmation), \"Account\");\r\n        }\r\n        var result = await _userManager.ResetPasswordAsync(user, model.Code, model.Password);\r\n        if (result.Succeeded)\r\n        {\r\n            return RedirectToAction(nameof(AccountController.ResetPasswordConfirmation), \"Account\");\r\n        }\r\n        AddErrors(result);\r\n        return View();\r\n    }\r\n\r\n**UPDATE**:\r\nI read [this famous article ](http://tech.trailmax.info/2015/05/asp-net-identity-invalid-token-for-password-reset-or-email-confirmation/) on the above issue. But the article is more than 2 years old and none of the following scenarios apply to my case:\r\n\r\n1. _Password Reset Token vs Email Confirmation Token_: I've verified that I'm using Password Reset Token; moreover, the input parameter `purpose` in the signature `public virtual async Task<string> GenerateUserTokenAsync(string purpose, TKey userId)` is not used in `GeneratePasswordResetTokenAsync(...)` of ASP.NET Core 1.1.1.\r\n\r\n2.  _Token is changed in transit_: Author is talking about using Url-Encoding  such as: `code = System.Web.HttpUtility.UrlEncode(code);` but ASP.NET Core does not have `System.Web` available.\r\n\r\n3.  _Security Stamp is Null_: I've verified that each user in my ASPNETUsers table has SecurityStamp value not null.\r\n\r\n4.  _Machine Keys are not matching_: Token was generated on the same desktop machine (windows 10) where it's being validated (just minutes after it was generated).\r\n\r\n**UPDATE 2**\r\nAfter reading a response from `@claudioct`, I installed [NuGet package ](https://www.nuget.org/packages/Microsoft.AspNet.WebUtilities/) for using UrlEncode. I then tried the following but to no avail\r\n1. I tried `code = System.Net.WebUtility.UrlEncode(code);` after the line `var code = await _userManager.GeneratePasswordResetTokenAsync(user);` inside `ForgotPassword(...)` POST method; but still the same error. I then also tried `var code = System.Net.WebUtility.UrlDecode(model.Code);` before the line `var result = await _userManager.ResetPasswordAsync(user, code, model.Password);` inside `ResetPassword(...)` POST method; same error again.\r\n"},{"Id":"6679933873","Type":"IssuesEvent","CreatedAt":"2017-10-05T19:21:02","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1439","RelatedDescription":"Closed issue \"Why are all the Get...Store functions private or don't check Supports...Store\" (#1439) at aspnet/Identity","RelatedBody":"Flabbergasted by this, as to disable a piece of functionality on a manager now requires much more overrides compared to overriding just the one method and throwing unconditionally.\r\n\r\nI see more of these flaws in places where we'd like to take away or slightly remold functionality. Take for instance the idea of the feature interfaces for stores. The stores are great as we don't want to fully create the stores functionality ourselves and we like the idea of using interfaces to detect which features are supported. Problem with it though is the combination of those two are very hard on library users as we can't take away an interface once implemented. Which as they're all already implemented on all the supplied stores (base and inherits) is a problem... Now we have to choose, do we want reusability or a nice fit for our project's supported set.\r\n\r\nExample below to disable user claims as we ignore that entity in the dbcontext modelbuilder (we have our own solution for it):\r\n![screen shot 2017-09-20 at 22 15 05](https://user-images.githubusercontent.com/4218809/30665458-5a751448-9e51-11e7-88bc-1d7f3121b31f.png)\r\n"},{"Id":"6679925738","Type":"IssuesEvent","CreatedAt":"2017-10-05T19:19:07","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1440","RelatedDescription":"Closed issue \"Why isn't the normalized name used when adding roles to the claimsidentity?\" (#1440) at aspnet/Identity","RelatedBody":"https://github.com/aspnet/Identity/blob/eb3ff7fc32dbfff65a1ba6dfdca16487e0f6fc41/src/Microsoft.Extensions.Identity.Core/UserClaimsPrincipalFactory.cs#L143\r\n\r\nAs `ClaimsPrincipal.IsInRole()` calls down to `ClaimsIdentity.HasClaim()` which uses an Ordinal comparison on the value it seems logical to save the normalized name for the role. Or if it's important to be able to display the original name to return a version of ClaimsIdentity that has an overridden `HasClaim` method with an OrdinalIgnoreCase comparison, perhaps just for the default role type.\r\n\r\nOtherwise why normalize the role name at all?"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6684546447","Type":"IssuesEvent","CreatedAt":"2017-10-06T18:06:31","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2101","RelatedDescription":"Opened issue \"Add a logging base class to Transport.Abstractions\" (#2101) at aspnet/KestrelHttpServer","RelatedBody":"It could be beneficial to have methods in a transport logging base class for logging events like connection resets. This could serve as a minimum guideline for what should be logged by new transports and better enable cross-transport testing.\r\n\r\nAn alternative might be to move the more transport-agnostic logging like Connection(Error|Reset|Pause|Resume) into the Core project"},{"Id":"6684312739","Type":"PullRequestEvent","CreatedAt":"2017-10-06T17:08:57","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2090","RelatedDescription":"Merged pull request \"new toolset compiler - 2.6.0-beta1-62126-01\" (#2090) at aspnet/KestrelHttpServer","RelatedBody":"This was a \"special\" build, so there is no public VSIX for this.\r\nThe old one should be ok, for most scenarios.\r\n\r\nWhen VS 15.5 preview1 is available it will match this compiler feature-wise by default."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6685290467","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:17:07","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1715","RelatedDescription":"Opened issue \"Tie into ICompletionBroker.Dismissed event to determine provisional reparses.\" (#1715) at aspnet/Razor","RelatedBody":""},{"Id":"6682337613","Type":"IssuesEvent","CreatedAt":"2017-10-06T09:26:17","Actor":"marcusien","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1714","RelatedDescription":"Opened issue \"Add wildcard to tag on HtmlTargetElement\" (#1714) at aspnet/Razor","RelatedBody":"In a project, I would need to add functional logic on an unknown range of taghelpers. Why unknown ? just because I have a TagHelper on a homemade framework which contains mandatory logic. This framework is referenced by several projects.\r\nOn these several projects, We can write new TagHelpers but those new TagHelpers must call the TagHelper from the framework.\r\n\r\nTo reach our goal, the easiest way would be to apply our \"framework tag helper\" to every tags which begins by something\r\n\r\nFor instance, I'd like to apply my framework taghelper to every tag helpers beginning with \"mytag-*\". So i think allowing wildcard to \"tag\" parameter in HtmlTargetElement would be a great idea. It's already posible with the attributes"},{"Id":"6681612637","Type":"PullRequestEvent","CreatedAt":"2017-10-06T05:27:30","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1713","RelatedDescription":"Opened pull request \"Add smart indentation for brace completion.\" (#1713) at aspnet/Razor","RelatedBody":"This is a middle-ground approach to implementing brace completion smart indent without refactoring the entire `VisualStudioRazorParser`. Decided to use the \"smart indent\" verbiage because that's what the visual studio editor uses.\r\n\r\nHere's what this PR accomplishes. Pipe | indicates cursor\r\n\r\n## Razor code block smart indentation\r\nA user types `@{|`, Roslyn autocompletes it to `@{ |}`. User then hits enter and **without** this PR it becomes:\r\n```\r\n@{\r\n    |}\r\n```\r\nThis PR fixes that and makes it:\r\n```\r\n@{\r\n    |\r\n}\r\n```\r\n\r\n## Razor directive block smart indentation\r\nA user types `@functions {|`, Roslyn autocompletes it to `@functions {|}`. User then hits enter and **without** this PR it becomes:\r\n```\r\n@functions {\r\n    |}\r\n```\r\nThis PR fixes that and makes it:\r\n```\r\n@functions {\r\n    |\r\n}\r\n```\r\n\r\nOne significant note is that the cursor position in the above examples don't have spaces before it. That's the editor auto-indent that will auto-add those spaces if a user then attempts to add content.\r\n\r\n---------------------------------------------------------------------------------\r\n\r\n- Added a standalone brace smart indenter that listens to `ITextBuffer` changed events to determine when a brace completion event needs to be handled.\r\n- Added extension methods to handle interaction with the `ITextBuffer` and document trackers and text views.\r\n- Added a `BraceSmartIndenterTest` to verify all parts of the smart indenter.\r\n- Moved private test infrastructure classes into their own files and expanded on their functionality to enable the brace completion smart indent scenarios.\r\n\r\n#1538"},{"Id":"6681150077","Type":"IssuesEvent","CreatedAt":"2017-10-06T01:26:59","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1712","RelatedDescription":"Opened issue \"Meta-Issue: Improvements to Razor experience in class libraries\" (#1712) at aspnet/Razor","RelatedBody":"Things to consider:\r\n- [ ] Add Views and Controllers via Add New Item in a Net Standard library. [user feedback](https://github.com/aspnet/Home/issues/2135#issuecomment-330982068)"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"},{"Id":"6598999142","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:09:01","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-08T05:30:10.6126079Z","RunDurationInMilliseconds":8594}