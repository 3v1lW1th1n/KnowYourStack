{"Data":{"Vue":{"Events":[{"Id":"6670947377","Type":"PullRequestEvent","CreatedAt":"2017-10-04T03:32:47","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/pull/6734","RelatedDescription":"Closed pull request \"feat(v-model): warn for undefined binding values (#5932)\" (#6734) at vuejs/vue","RelatedBody":"Warn when the v-model binding value is undefined so users are aware that the binding may not be\r\nreactive.\r\n\r\nFixes #5932\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nI'm not sure if checking if the value is undefined is the right thing to do. I was hoping to do some kind of `hasOwnProperty`-like check to see if the key in the object exists, but I couldn't figure out how to do that. If that's what makes more sense a pointer in the right direction would be awesome."},{"Id":"6670943273","Type":"IssuesEvent","CreatedAt":"2017-10-04T03:30:45","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/5932","RelatedDescription":"Closed issue \"Warn when `v-model` is bound on non-existent key\" (#5932) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\nConsidering this binding:\r\n\r\n```<input type=\"text\" v-model=\"data.val1\">```\r\n\r\nThis works fine if there is for example { data:{ val1:null }} defined in component-data, but if only { data:{} } is defined it doesn't work correctly because while val1 is created by v-model, it's not made reactive.\r\n\r\nBy using Vue.set for setting values, this wouldn't be a problem which would make live easiert for certain usecases.\r\n\r\n### What does the proposed API look like?\r\nNo visible change.\r\n\r\nBut to maintain the actual behaviour this could also be implemented using a modifier like 'set' for example:\r\n\r\n```<input type=\"text\" v-model.set=\"data.val1\">```\r\n\r\nThis would use Vue.set(data, 'val1', ...) instead of simply generating data.val1 = ...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6670211417","Type":"IssuesEvent","CreatedAt":"2017-10-03T22:23:53","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/6714","RelatedDescription":"Closed issue \"Exceptions thrown in errorHandler halt app\" (#6714) at vuejs/vue","RelatedBody":"### Version\r\n2.4.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/qok5vcnf/1/](https://jsfiddle.net/qok5vcnf/1/)\r\n\r\n### Steps to reproduce\r\nAdd an errorHandler that throws an exception, and notice that the app halts badly.\r\n\r\n### What is expected?\r\nExceptions thrown from errorHandlers should use the console to print something, or fail silently.\r\n\r\n### What is actually happening?\r\nThe whole app rendering halts.\r\n\r\n---\r\nWas using the raven-js plugin for Vue, which triggers this behavior.  I have filed an issue over there with my feedback (https://github.com/getsentry/raven-js/issues/1061), but I thought it might save some future developers time to not fail quite so catastrophically in this case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6670151909","Type":"PullRequestEvent","CreatedAt":"2017-10-03T22:06:17","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue/pull/6730","RelatedDescription":"Merged pull request \"fix: pass errors encountered within nextTick to Vue.config.errorHandler\" (#6730) at vuejs/vue","RelatedBody":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nI've found it easier to debug my application if I use:\r\n\r\nVue.config.errorHandler = function(err, vm, info) {throw err};\r\n\r\nUnfortunately, I found that my error handler wasn't being called if the error was encountered as a result of updating a reactive element.  Tracing back, I found that this was due to nextTick calling console.error directly instead of handleError.  I made this change locally and found that it fixed my problem, and didn't cause any failures with 'npm test'.\r\n"},{"Id":"6670146860","Type":"IssuesEvent","CreatedAt":"2017-10-03T22:04:51","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/6641","RelatedDescription":"Closed issue \"using a component containing a top level v-if in parent with $refs\" (#6641) at vuejs/vue","RelatedBody":"### Version\r\n2.4.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/TomKaltz/aao0waem/](https://jsfiddle.net/TomKaltz/aao0waem/)\r\n\r\n### Steps to reproduce\r\nDefine a component where the top level element has a v-if.  Declare that component in the parent template with a ref.\r\n\r\n### What is expected?\r\nThe ref should be available even if the component top-level v-if is false\r\n\r\n### What is actually happening?\r\nEven if the v-if is false, the component is still accessible via $refs on first load.  When you toggle the component v-if from false to true to false the parent ref becomes undefined.  The component beforeDestroy and destroyed event also does not fire.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6668265717","Type":"PullRequestEvent","CreatedAt":"2017-10-03T15:15:52","Actor":"kazupon","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1774","RelatedDescription":"Merged pull request \"[doc][zh-cn] keep updates\" (#1774) at vuejs/vue-router","RelatedBody":"/ping @Justineo\r\nBtw. make a update mark #a89d1ec"},{"Id":"6666021443","Type":"PullRequestEvent","CreatedAt":"2017-10-03T05:56:25","Actor":"kazupon","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1781","RelatedDescription":"Merged pull request \"[RU] Translation update\" (#1781) at vuejs/vue-router","RelatedBody":"Small fixes"},{"Id":"6665996048","Type":"PullRequestEvent","CreatedAt":"2017-10-03T05:44:51","Actor":"Alex-Sokolov","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1781","RelatedDescription":"Opened pull request \"[RU] Translation update\" (#1781) at vuejs/vue-router","RelatedBody":"Small fixes"},{"Id":"6665853622","Type":"PullRequestEvent","CreatedAt":"2017-10-03T04:33:12","Actor":"Jinjiang","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1780","RelatedDescription":"Opened pull request \"[en] typos\" (#1780) at vuejs/vue-router","RelatedBody":"Changes:\r\n\r\n1. \"webpack\" -> \"Webpack\"\r\n2. change double quotes into single quotes in code snippets about \"native Node.js\" in `history-mode.md`, just because the others all use single quotes.\r\n\r\nThanks."}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6667512130","Type":"PullRequestEvent","CreatedAt":"2017-10-03T12:53:05","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/974","RelatedDescription":"Merged pull request \"[Doc FR]: Global typo fixes and usage of 1990 rules for french graphie\" (#974) at vuejs/vuex","RelatedBody":"Hi. Just typo changes @posva ! I let you check that again ;)"},{"Id":"6667338377","Type":"IssuesEvent","CreatedAt":"2017-10-03T12:11:10","Actor":"TonyLuo","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/976","RelatedDescription":"Opened issue \"[Vue warn]: Error in callback for watcher \"function () { return this._data.$$state }\": \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\"\" (#976) at vuejs/vuex","RelatedBody":"### Version\r\n2.4.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/issues/926](https://github.com/vuejs/vuex/issues/926)\r\n\r\n### Steps to reproduce\r\n\r\nin the parent page call the child component, the child component do nothing with the vuex state. \r\nvuex will not show any error message in following cases:\r\n\r\n1. when remove the child component parent page, everything runs well\r\n2. comment the props in the child component, everything is ok.\r\n\r\ntotally no idea what happen\r\n\r\n### What is expected?\r\nvuex will not do any thing on the child component\r\n\r\n### What is actually happening?\r\n`vue.esm.js?71e4:479 [Vue warn]: Error in callback for watcher \"function () { return this._data.$$state }\": \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\"\r\n\r\n(found in )Error: [vuex] Do not mutate vuex store state outside mutation handlers.\r\nat assert (vuex.esm.js?37e1:96)\r\nat Vue$3.store._vm.$watch.deep (vuex.esm.js?37e1:637)\r\nat Watcher.run (vue.esm.js?71e4:2972)\r\nat Watcher.update (vue.esm.js?71e4:2946)\r\nat Dep.notify (vue.esm.js?71e4:778)\r\nat Object.reactiveSetter [as props] (vue.esm.js?71e4:1000)\r\nat normalizeProps (vue.esm.js?71e4:1322)\r\nat mergeOptions (vue.esm.js?71e4:1370)\r\nat resolveConstructorOptions (vue.esm.js?71e4:4273)\r\nat createComponent (vue.esm.js?71e4:3606)`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-04T05:30:31.1745435Z","RunDurationInMilliseconds":2130}