{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":143,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8624312254","Type":"IssuesEvent","CreatedAt":"2018-11-21T04:31:09","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20629","RelatedDescription":"Reopened issue \"Assertion failed '(genRegMask(argReg) & RBM_ARG_REGS) != RBM_NONE'\" (#20629) at dotnet/coreclr","RelatedBody":"the failing job: https://ci.dot.net/job/dotnet_coreclr/job/master/view/x64_arm64_altjit/job/jitstress/job/x64_arm64_altjit_checked_windows_nt_jitincompletehwintrinsic/265\r\n\r\nfailed tests:\r\n\r\n- JIT_jit64._mcc_interop_mcc_i33_mcc_i33_._mcc_interop_mcc_i33_mcc_i33_cmd\r\n- JIT_jit64._mcc_interop_mcc_i03_mcc_i03_._mcc_interop_mcc_i03_mcc_i03_cmd\r\n- JIT_jit64._mcc_interop_mcc_i63_mcc_i63_._mcc_interop_mcc_i63_mcc_i63_cmd\r\n- JIT_jit64._mcc_interop_mcc_i73_mcc_i73_._mcc_interop_mcc_i73_mcc_i73_cmd\r\n- JIT_jit64._mcc_interop_mcc_i13_mcc_i13_._mcc_interop_mcc_i13_mcc_i13_cmd\r\n- JIT_jit64._mcc_interop_mcc_i53_mcc_i53_._mcc_interop_mcc_i53_mcc_i53_cmd\r\n\r\nfailed log:\r\nJIT_jit64._mcc_interop_mcc_i73_mcc_i73_._mcc_interop_mcc_i73_mcc_i73_cmd [FAIL]\r\n        \r\n        Assert failure(PID 10620 [0x0000297c], Thread: 11564 [0x2d2c]): Assertion failed '(genRegMask(argReg) & RBM_ARG_REGS) != RBM_NONE' in 'MCCTest.MyClass:GetSum2(double,int,long,float,short,double):struct' (IL size 5)\r\n        \r\n            File: d:\\j\\workspace\\x64_arm64_alt---d3160b11\\src\\jit\\codegenarmarch.cpp Line: 2719\r\n            Image: D:\\j\\workspace\\x64_arm64_alt---d3160b11\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n        \r\n        \r\n  \r\n  Return code:      1\r\n  Raw output file:      D:\\j\\workspace\\x64_arm64_alt---d3160b11\\bin\\tests\\Windows_NT.x64.Checked\\Reports\\JIT.jit64\\mcc\\interop\\mcc_i73\\mcc_i73.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x64_arm64_alt---d3160b11\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\" mcc_i73.exe \r\n        Expected: 100\r\n        Actual: -1073740286\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x64_arm64_alt---d3160b11\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x64_arm64_alt---d3160b11\\bin\\tests\\Windows_NT.x64.Checked\\JIT\\jit64\\mcc\\interop\\mcc_i73\\mcc_i73.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_arm64_alt---d3160b11\\bin\\tests\\Windows_NT.x64.Checked\\TestWrappers\\JIT.jit64\\JIT.jit64.XUnitWrapper.cs(23139,0): at JIT_jit64._mcc_interop_mcc_i73_mcc_i73_._mcc_interop_mcc_i73_mcc_i73_cmd()\r\n"},{"Id":"8624300587","Type":"PullRequestEvent","CreatedAt":"2018-11-21T04:26:41","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21135","RelatedDescription":"Opened pull request \"[WIP] Support data breakpoint on array element on x86\" (#21135) at dotnet/coreclr","RelatedBody":""},{"Id":"8624256541","Type":"IssuesEvent","CreatedAt":"2018-11-21T04:09:35","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21134","RelatedDescription":"Opened issue \"Collect dumps as part of CI failure\" (#21134) at dotnet/coreclr","RelatedBody":"There are a number of cases when CI jobs fail and the machine creates a coredump. However, it does not appear that we currently surface said coredumps at any point during the CI process.\r\n\r\nGiven that these CI failures are sometimes sporadic, may depend on machine state, or may not repro locally at all; it would be ideal if we could collect these coredumps and make them available as part of the CI failure logs.\r\n\r\nSome instances of this include:\r\n* https://github.com/dotnet/coreclr/issues/21105\r\n* https://github.com/dotnet/coreclr/issues/19299\r\n* https://github.com/dotnet/coreclr/issues/19190\r\n* https://github.com/dotnet/coreclr/pull/21097\r\n* (and likely others)\r\n"},{"Id":"8624016095","Type":"IssuesEvent","CreatedAt":"2018-11-21T02:49:04","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21133","RelatedDescription":"Opened issue \"System.Tests.TypeTests.GetInterface_SameNameInterfaces_ThrowsAmbiguousMatchException failed with Assert Failure\" (#21133) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86_arm_altjit/job/jitstress/job/x86_arm_altjit_checked_windows_nt_corefx_baseline/351/\r\n**Failed test:**\r\nSystem.Tests.TypeTests.GetInterface_SameNameInterfaces_ThrowsAmbiguousMatchException\r\n\r\n**Failed log:**\r\n```\r\nSystem.Tests.TypeTests.GetInterface_SameNameInterfaces_ThrowsAmbiguousMatchException [FAIL]\r\n        Assert.Throws() Failure\r\n        Expected: typeof(System.NullReferenceException)\r\n        Actual:   (No exception was thrown)\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_arm_altji---201cec94\\_\\fx\\src\\System.Runtime\\tests\\System\\Type\\TypeTests.Get.cs(77,0): at System.Tests.TypeTests.GetInterface_SameNameInterfaces_ThrowsAmbiguousMatchException()\r\n```"},{"Id":"8623906849","Type":"PullRequestEvent","CreatedAt":"2018-11-21T02:14:00","Actor":"mmitche","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21129","RelatedDescription":"Merged pull request \"Sign api-ms-win-core-xstate-l2-1-0.dll\" (#21129) at dotnet/coreclr","RelatedBody":"This file is only catalog signed in RS4.  Sign during the build. To achieve this copy the CRT binaries locally rather than referencing from the UCRT location directly."},{"Id":"8623774196","Type":"IssuesEvent","CreatedAt":"2018-11-21T01:33:45","Actor":"gfoidl","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21132","RelatedDescription":"Opened issue \"Unsafe.WriteUnaligned with Vector128<T> does unnecessary stack write\" (#21132) at dotnet/coreclr","RelatedBody":"`Unsafe.WriteUnaligned<Vector128<T>>` does an unnecessary stack write, before the actual data is written.\r\n\r\n```c#\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\nusing System.Runtime.Intrinsics;\r\nusing System.Runtime.Intrinsics.X86;\r\n\r\nnamespace ConsoleApp2\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Span<byte> destination = stackalloc byte[16];\r\n            ref byte dest = ref MemoryMarshal.GetReference(destination);\r\n\r\n            Write<int>(ref dest);\r\n            As<int>(ref dest);\r\n        }\r\n\r\n        [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.AggressiveOptimization)]\r\n        private static void Write<T>(ref byte dest) where T : struct\r\n        {\r\n            Vector128<T> zero = Sse2.SetZeroVector128<T>();\r\n            Unsafe.WriteUnaligned(ref dest, zero);\r\n        }\r\n\r\n        [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.AggressiveOptimization)]\r\n        private static void As<T>(ref byte dest) where T : struct\r\n        {\r\n            Vector128<T> zero = Sse2.SetZeroVector128<T>();\r\n            Unsafe.As<byte, Vector128<T>>(ref dest) = zero;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```asm\r\n; Assembly listing for method Program:Write(byref)\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; Tier-1 compilation\r\n; optimized code\r\n; rsp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 arg0         [V00,T00] (  3,  3   )   byref  ->  rdi\r\n;  V01 loc0         [V01,T01] (  3,  3   )  simd16  ->  mm0\r\n;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   \"OutgoingArgSpace\"\r\n;  V03 tmp1         [V03    ] (  1,  2   )  simd16  ->  [rsp+0x00]   do-not-enreg[SB] \"Inlining Arg\"\r\n;  V04 tmp2         [V04    ] (  1,  2   )    long  ->  [rsp+0x00]   do-not-enreg[] V03._00(offs=0x00) P-DEP \"field V03._00 (fldOffset=0x0)\"\r\n;  V05 tmp3         [V05    ] (  1,  2   )    long  ->  [rsp+0x08]   do-not-enreg[] V03._01(offs=0x08) P-DEP \"field V03._01 (fldOffset=0x8)\"\r\n;\r\n; Lcl frame size = 24\r\n\r\nG_M37822_IG01:\r\n       4883EC18             sub      rsp, 24\r\n\r\nG_M37822_IG02:\r\n       C4E179EFC0           vpxor    xmm0, xmm0, xmm0\r\n       C4E179290424         vmovapd  xmmword ptr [rsp], xmm0            ; not necessary\r\n       C4E1791107           vmovupd  xmmword ptr [rdi], xmm0\r\n\r\nG_M37822_IG03:\r\n       4883C418             add      rsp, 24\r\n       C3                   ret\r\n\r\n; Total bytes of code 25, prolog size 4 for method Program:Write(byref)\r\n; ============================================================\r\n; Assembly listing for method Program:As(byref)\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; Tier-1 compilation\r\n; optimized code\r\n; rsp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 arg0         [V00,T00] (  3,  3   )   byref  ->  rdi\r\n;  V01 loc0         [V01,T01] (  2,  2   )  simd16  ->  mm0\r\n;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   \"OutgoingArgSpace\"\r\n;\r\n; Lcl frame size = 0\r\n\r\nG_M39603_IG01:\r\n\r\nG_M39603_IG02:\r\n       C4E179EFC0           vpxor    xmm0, xmm0, xmm0\r\n       C4E1791107           vmovupd  xmmword ptr [rdi], xmm0\r\n\r\nG_M39603_IG03:\r\n       C3                   ret\r\n\r\n; Total bytes of code 11, prolog size 0 for method Program:As(byref)\r\n; ============================================================\r\n```\r\nThis is actually a really contrived example, but I saw this same behavior in production code with different values for `Vector128` (not only with 0).\r\n\r\n`Vector256<T>` is not affected, and produced optimal code.\r\n\r\n/cc: @tannergooding "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8623469379","Type":"PullRequestEvent","CreatedAt":"2018-11-21T00:01:03","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10375","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10375) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8623447436","Type":"PullRequestEvent","CreatedAt":"2018-11-20T23:54:58","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10374","RelatedDescription":"Opened pull request \"Could not restore manifest file with markOfTheWeb\" (#10374) at dotnet/cli","RelatedBody":""},{"Id":"8623189735","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:47:36","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10373","RelatedDescription":"Merged pull request \"Updating the release/2.2.2xx README\" (#10373) at dotnet/cli","RelatedBody":"Updating \"release/2.2.1xx\" to \"release/2.2.2xx\"\r\n"},{"Id":"8623158636","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:40:44","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10369","RelatedDescription":"Merged pull request \"Update dependency files\" (#10369) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18569.3\r\n\r\n"},{"Id":"8623091886","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:26:10","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10339","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10339) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8623088719","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:25:28","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10368","RelatedDescription":"Merged pull request \"Update dependency files\" (#10368) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18569.4\r\n\r\n"},{"Id":"8622978580","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:02:33","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10371","RelatedDescription":"Merged pull request \"Update aspnet, coresetup, sdk to servicing-31150, preview1-26216-03, servicing-63520-01, respectively (release/2.1.5xx)\" (#10371) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"8622973984","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:01:37","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10373","RelatedDescription":"Opened pull request \"Updating the release/2.2.2xx README\" (#10373) at dotnet/cli","RelatedBody":"Updating \"release/2.2.1xx\" to \"release/2.2.2xx\"\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8623146917","Type":"PullRequestEvent","CreatedAt":"2018-11-20T22:38:08","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Opened pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft "},{"Id":"8619716551","Type":"PullRequestEvent","CreatedAt":"2018-11-20T13:11:36","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/977","RelatedDescription":"Merged pull request \"Update dependency files\" (#977) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18569.4\r\n\r\n"},{"Id":"8619658782","Type":"PullRequestEvent","CreatedAt":"2018-11-20T13:01:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/977","RelatedDescription":"Opened pull request \"Update dependency files\" (#977) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18569.4\r\n\r\n"},{"Id":"8616736966","Type":"IssuesEvent","CreatedAt":"2018-11-20T01:40:49","Actor":"verb0se","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/976","RelatedDescription":"Opened issue \"Could not load file or assembly System.Configuration.ConfigurationManager\" (#976) at dotnet/standard","RelatedBody":"Upgrading some .NET Framework projects to Standard 2.0, I've installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet on all projects.  Getting the following error:\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Configuration.ConfigurationManager, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n  \r\nJust to see if the issue might have been due to something with the current solution, I created a new Standard 2.0 console app, installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet as the only dependency, and got the same error.\r\n\r\nFrom the deps.json file:\r\n\r\n\"System.Configuration.ConfigurationManager/4.5.0\": {\r\n        \"dependencies\": {\r\n          \"System.Security.Cryptography.ProtectedData\": \"4.5.0\",\r\n          \"System.Security.Permissions\": \"4.5.0\"\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard2.0/System.Configuration.ConfigurationManager.dll\": {\r\n            \"assemblyVersion\": \"4.0.1.0\",\r\n            \"fileVersion\": \"4.6.26515.6\"\r\n          }\r\n        }\r\n      }\r\n\r\nWe would like to use System.Configuration.ConfigurationManager with our upgrade but I can't seem to load it from a project \r\n"},{"Id":"8616135429","Type":"PullRequestEvent","CreatedAt":"2018-11-19T22:52:13","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/951","RelatedDescription":"Merged pull request \"Import Arcade props/targets\" (#951) at dotnet/standard","RelatedBody":"Moves us closer to transitioning to the new Engineering system. Currently this builds, but has APICompat failures. Will remove WIP label when I think it's ready to merge\r\n\r\n@weshaggard @eerhardt @safern PTAL\r\n\r\nCC @danmosemsft @karelz "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8624434248","Type":"IssuesEvent","CreatedAt":"2018-11-21T05:15:57","Actor":"Varorbc","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33643","RelatedDescription":"Opened issue \"System.ComponentModel.Annotations version is inconsistent\" (#33643) at dotnet/corefx","RelatedBody":"## Detailed repro steps so we can see the same problem\r\n\r\n1.The target framework of my project is net472\r\n\r\n2. the target framework for the [package](https://www.nuget.org/packages/NServiceBus.DataAnnotations/) is netstandard2.0\r\n\r\n3.the package depend on [System.ComponentModel.Annotations](https://www.nuget.org/packages/System.ComponentModel.Annotations/)\r\n\r\n4.When my project restores the package(`System.ComponentModel.Annotations`), the net461 package is restored\r\n\r\n5.NServiceBus.DataAnnotations restores the package(`System.ComponentModel.Annotations`),the netstandard2.0 package is restored\r\n"},{"Id":"8624065945","Type":"PullRequestEvent","CreatedAt":"2018-11-21T03:04:37","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33227","RelatedDescription":"Merged pull request \"Update CoreFx, ProjectNTfs, ProjectNTfsTestILC to servicing-27120-07, rel-27026-00, rel-27026-00, respectively (release/uwp6.2)\" (#33227) at dotnet/corefx","RelatedBody":""},{"Id":"8623995344","Type":"PullRequestEvent","CreatedAt":"2018-11-21T02:42:17","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33642","RelatedDescription":"Opened pull request \"Update CoreClr to preview-27121-01 (master)\" (#33642) at dotnet/corefx","RelatedBody":""},{"Id":"8623975933","Type":"PullRequestEvent","CreatedAt":"2018-11-21T02:36:04","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33641","RelatedDescription":"Opened pull request \"Remove char[] allocation in CheckIriUnicodeRange\" (#33641) at dotnet/corefx","RelatedBody":"We can trivially remove a char[2] allocation by replacing it with a stackalloc'd span.  We could likely go further and avoid the subsequent string allocation as well, but we'd want to do perf validation of that, given the sheer number of CompareOrdinal calls that follow.\r\n\r\ncc: @davidsh, @GrabYourPitchforks "},{"Id":"8623793727","Type":"PullRequestEvent","CreatedAt":"2018-11-21T01:39:46","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33433","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#33433) at dotnet/corefx","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @tarekgh\n* @wtgodbe\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\ngit checkout release/2.2\r\ngit merge --no-ff merge/release/2.1-to-release/2.2\r\ngit push origin release/2.2\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1."},{"Id":"8623780277","Type":"PullRequestEvent","CreatedAt":"2018-11-21T01:35:38","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33626","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview-27120-03, preview.18570.9, preview-27120-04, respectively (master)\" (#33626) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8624214707","Type":"IssuesEvent","CreatedAt":"2018-11-21T03:54:19","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31290","RelatedDescription":"Opened issue \"VS2017 Memory and CPU with converted Projects\" (#31290) at dotnet/roslyn","RelatedBody":"I basically followed this guide: http://www.natemcmaster.com/blog/2017/03/09/vs2015-to-vs2017-upgrade/ and got it to the point where all our projects were building with no errors/warnings, and our application behaved as expected, but VS performance was abysmal. We have 93 projects in our solution with approx 6000 .cs files. Mostly dlls, 6 web projects and a couple exe projects in there. I've already done 1 and 2 from this: https://github.com/dotnet/roslyn/wiki/Performance-considerations-for-large-solutions I have not tried the other solutions as I'm weary having to make registry changes across the team.  With the old csproj format, our solution took about 750MB on fresh start and was ready in about 30s.  With the new csproj format, that same solution now takes 2.5GB+ on fresh load, and the IDE is not responsive for at least 5 minutes.  Even after that point, CPU usage stays high and never goes down.  ReSharper will not even load with the new format, the system just completely hangs indefinitely.\n\nUsing VS 2017 15.3.2 on a i7-7700K with 32GB of RAM and Samsung SSD 950 with Windows 10 1703 with all latest updates.  No virus scanners at all.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/100072/vs2017-memory-and-cpu-with-converted-projects.html\nVSTS ticketId: 484198_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"8623790159","Type":"PullRequestEvent","CreatedAt":"2018-11-21T01:38:40","Actor":"ryzngard","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31288","RelatedDescription":"Closed pull request \"Up timeout to 120 minutes from 90 minutes in build\" (#31288) at dotnet/roslyn","RelatedBody":"Builds are close to the 90 minute mark, and sometimes exceeding. Add another 30 minutes to help mitigate"},{"Id":"8623762067","Type":"PullRequestEvent","CreatedAt":"2018-11-21T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31289","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#31289) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8622368038","Type":"PullRequestEvent","CreatedAt":"2018-11-20T20:05:28","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6597","RelatedDescription":"Opened pull request \"WIP: incomplete fixes for LDVIRTFTN and other framework build issues\" (#6597) at dotnet/corert","RelatedBody":"This change includes several experimental hotfixes I made to fix\r\nLDVIRTFTN and other issues is CPAOT framework compilation:\r\n\r\n1) The infra change to Microsoft.NetCore.Native.targets to ignore\r\nCSC exit code is required to receive meaningful results for the ASP.NET\r\ntest build, otherwise the build stops as soon as we hit the first error\r\nin ILC assembly builds.\r\n\r\n2) I tried to reverse engineer Crossgen behavior with JanV's help\r\nand use the info to properly implement LDVIRTFTN but apparently the\r\nchanges are still not completely correct, about 15 framework assemblies\r\nare failing an assert in JIT that we're passing CORINFO_VIRTUALCALL_STUB\r\nto some method that only expects CORINFO_CALL or CORINFO_CALL_CODE_POINTER.\r\n\r\n3) I added a throw clause to abort JIT compilation of methods that\r\npreviously ended up crashing due to the Enum thunks.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8621031784","Type":"IssuesEvent","CreatedAt":"2018-11-20T16:22:29","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6596","RelatedDescription":"Opened issue \"wasm: question - how to specify additional flags for em++ and emcc \" (#6596) at dotnet/corert","RelatedBody":"I'm experimenting with adding threading support to the wasm build.  For that to work, the cpp, and any other library needs to be built with `-s USE_PTHREADS=1`.  In particular I would like to build \r\n```\r\nlibPortableRuntime.bc \r\nlibbootstrappercpp.bc\r\nlibSystem.Private.CoreLib.Native.bc\r\n```\r\nwith this option.  I think this could be part of my current problem as when I look at the LLVM, I only see `thread_local` on `@t_pShadowStackTop = internal thread_local global i8* null` whereas I would hope to see it also on at least `tls_CurrentThread` in `threadstore.cpp`.  I tried setting `set EMMAKEN_CFLAGS=-s USE_PTHREADS=1` and `build clean` but that didn't seem to help although I'm having a hard time finding the actual command that is used in the build output.  Can someone help me understand the build system a bit more so that I know where I would have to add this flag for it to be picked up by the `em++` and `emcc` commands?\r\n\r\nThanks"},{"Id":"8617563735","Type":"PullRequestEvent","CreatedAt":"2018-11-20T06:14:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6557","RelatedDescription":"Merged pull request \"Report type-related intrinsics to RyuJIT\" (#6557) at dotnet/corert","RelatedBody":"We had this disabled because the way we represent runtime types is different from CoreCLR and reporting any of these led to asserts in RyuJIT and bad code.\r\n\r\nThis lets us optimize common patterns such as:\r\n* `typeof(T) == typeof(byte)`\r\n* `foo.GetType() == typeof(Foo)`\r\n\r\nThese patterns are pretty commonly used in high performance code paths, so having actual reflection there is pretty bad. This also lets us generate smaller code because a lot of these can be evaluated at compile time (this makes the ASP.NET WebApi sample in the repo 380 kB smaller).\r\n\r\nRequires an updated RyuJIT, so this won't work until I get the RyuJIT portion in.\r\n\r\nFixes #5180."},{"Id":"8617563727","Type":"IssuesEvent","CreatedAt":"2018-11-20T06:14:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5180","RelatedDescription":"Closed issue \"Enable RyuJIT optimizations around System.Type\" (#5180) at dotnet/corert","RelatedBody":"RyuJIT already does these optimizations in CoreCLR. We disable them in CoreRT because our representation of `RuntimeTypeHandle` is different from CoreCLR (in CoreCLR, RTTH just wraps a `RuntimeType` object instance; in CoreRT RTTH wraps an unmanaged pointer to the EEType).\r\n\r\nThis is needed to let us optimize patterns like:\r\n* `typeof(T) == typeof(byte)`\r\n* `foo.GetType() == typeof(Foo)`\r\n\r\nThese are usually used to optimized high performance code, so having actual reflection in the code path is pretty bad."},{"Id":"8615513193","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:47:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6595","RelatedDescription":"Merged pull request \"Optimize when building retail shared framework\" (#6595) at dotnet/corert","RelatedBody":"Fixes the CI failure in my weekend project (#6557)."},{"Id":"8614288214","Type":"PullRequestEvent","CreatedAt":"2018-11-19T17:04:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6593","RelatedDescription":"Merged pull request \"[CppCodeGen] Support thread statics\" (#6593) at dotnet/corert","RelatedBody":"This patch fixes https://github.com/dotnet/corert/issues/6406"},{"Id":"8614288195","Type":"IssuesEvent","CreatedAt":"2018-11-19T17:04:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6406","RelatedDescription":"Closed issue \"[CppCodeGen] Thread statics don't work\" (#6406) at dotnet/corert","RelatedBody":"Following example produces incorrect output:\r\n```cs\r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace Hello\r\n{\r\n    internal class Program\r\n    {\r\n        [ThreadStatic]\r\n        static int value;\r\n\r\n        static void M()\r\n        {\r\n            value++;\r\n            Console.WriteLine(\"T1: \" + value);\r\n        }\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            value = 25;\r\n\r\n            var t = new Thread(new ThreadStart(Program.M));\r\n            t.Start();\r\n            t.Join();\r\n\r\n            Console.WriteLine(\"Main Thread : \" + value);\r\n        }\r\n    }\r\n}\r\n```\r\n```\r\n$ ./Hello\r\nT1: 26\r\nAborted (core dumped)\r\n```\r\nExpected output:\r\n```\r\nT1: 1\r\nMain Thread : 25\r\n```\r\nAbort occurs due to multithreading https://github.com/dotnet/corert/issues/6405"},{"Id":"8614033761","Type":"PullRequestEvent","CreatedAt":"2018-11-19T16:26:59","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6595","RelatedDescription":"Opened pull request \"Optimize when building retail shared framework\" (#6595) at dotnet/corert","RelatedBody":"Fixes the CI failure in my weekend project (#6557)."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8623771892","Type":"PullRequestEvent","CreatedAt":"2018-11-21T01:33:03","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2684","RelatedDescription":"Opened pull request \"Use `PreserveNewest` for explicitly published files.\" (#2684) at dotnet/sdk","RelatedBody":"The publish targets contain files that are explicitly published, such as the\r\nbuild output, the deps file, the runtime config, etc.  Because the default for\r\nresolved files to publish was to always copy, a second publish operation when\r\neverything was up-to-date had needless copies of these files.\r\n\r\nThis commit changes those items to use `PreserveNewest` so that they are only\r\ncopied if the source is newer than the target.\r\n\r\nFixes #2573."},{"Id":"8623727619","Type":"IssuesEvent","CreatedAt":"2018-11-21T01:19:31","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2617","RelatedDescription":"Closed issue \"Error when restore .Net Core 2.2 Console application via VS #26 \" (#2617) at dotnet/sdk","RelatedBody":"_From YunWeiaa on 10/23_ \r\n\r\n### **Steps to reproduce**\r\n\r\nCreate a new .net core console application via VS,\r\nRestore\r\n\r\n### **Expected behavior**\r\n\r\nRestore succeeded with no warnings and no errors.\r\n\r\n### **Actual behavior**\r\n\r\nError NETSDK1065 Cannot find app host for win-x64. win-x64 could be an invalid runtime identifier (RID). For more information about RID, see https://aka.ms/rid-catalog. \r\n\r\n![47351468-9a0c7880-d6ea-11e8-91af-5187ed30d329](https://user-images.githubusercontent.com/19596695/47449218-f3ba8480-d776-11e8-88e3-96bcac42bd92.png)\r\n\r\n\r\nNote: When I modify the TargetFramework in .csproj file from netcoreapp3.0 to netcoreapp2.2 via CLI, it does not appear the error NETSDK1065, but dotnet restore failed with error NU1103: #10193\r\n\r\nEnvironment data\r\nCLI/SDK - 3.0.100-alpha1-009697 against d16.0stg\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-alpha1-009697\r\n Commit:    7365786612\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-alpha1-009697\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-27018-05\r\n  Commit:  7a7ca06512\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009431 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-alpha1-009697 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35364 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10062 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35364 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10062 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.DesktopUI.App 3.0.0-alpha-27017-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.DesktopUI.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27001-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview1-27018-05 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1064967345070882817","CreatedAt":"2018-11-20T19:42:55+00:00","UserScreenname":"dotnet","Text":"Find out what's new in F# 4.5 from Phillip Carter (@_cartermp) in this episode of the #OnDotNet show.\n\nhttps://t.co/B5Q1Xt828F","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":22,"RawContent":null},{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":78,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2018-11-21T05:30:32.3759629Z","RunDurationInMilliseconds":9037}