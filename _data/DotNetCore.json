{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":234,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7041825180","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:21:12","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15672","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26030-01 (master)\" (#15672) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7041704117","Type":"IssuesEvent","CreatedAt":"2017-12-29T23:36:56","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15671","RelatedDescription":"Opened issue \"[RyuJIT] Assertion prop performs incorrect range check elimination\" (#15671) at dotnet/coreclr","RelatedBody":"C# example:\r\n```C#\r\nprivate int _size;\r\nprivate int[] _array = new int[42];\r\n\r\npublic bool Test(out int result)\r\n{\r\n    int size = _size - 1;\r\n    if ((uint)size >= (uint)_array.Length)\r\n    {\r\n        result = 0;\r\n        return false;\r\n    }\r\n    result = _array[size];\r\n    return true;\r\n}\r\n```\r\nGenerated asm code:\r\n```asm\r\nG_M55886_IG01:\r\nG_M55886_IG02:\r\n       8B4110               mov      eax, dword ptr [rcx+16]\r\n       448D40FF             lea      r8d, [rax-1]\r\n       488B4108             mov      rax, gword ptr [rcx+8]\r\n       8B4008               mov      eax, dword ptr [rax+8]\r\n       413BC0               cmp      eax, r8d\r\n       7705                 ja       SHORT G_M55886_IG04\r\n       33C0                 xor      eax, eax\r\n       8902                 mov      dword ptr [rdx], eax\r\nG_M55886_IG03:\r\n       C3                   ret\r\nG_M55886_IG04:\r\n; reload array reference from _array field\r\n; a different thread might have changed the field\r\n; so the range check should not have been eliminated\r\n       488B4108             mov      rax, gword ptr [rcx+8]\r\n       4963C8               movsxd   rcx, r8d\r\n       8B448810             mov      eax, dword ptr [rax+4*rcx+16]\r\n       8902                 mov      dword ptr [rdx], eax\r\n       B801000000           mov      eax, 1\r\nG_M55886_IG05:\r\n       C3                   ret\r\n```\r\n\r\nI would seem that the conservative VN that assertion propagation uses to eliminate the range check is incorrect, possible due to mishandling of liberal/conservative VNs by CSE."},{"Id":"7041664129","Type":"PullRequestEvent","CreatedAt":"2017-12-29T23:07:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15668","RelatedDescription":"Merged pull request \"Replace a few for loops with foreach to avoid loop cloning\" (#15668) at dotnet/coreclr","RelatedBody":"A pattern like\r\n```C#\r\nint len = a.Length;\r\nfor (int i = 0; i < len; i++) { ... a[i] ... }\r\n```\r\nmay result in unnecessary loop cloning.\r\n\r\nAnyway, there's no real reason to use a for loop in any of these case. Avois the need for a cast too.\r\n\r\nAlso remove duplicated code related to AppDomain.OnXResolveEvent methods."},{"Id":"7041481790","Type":"IssuesEvent","CreatedAt":"2017-12-29T21:21:07","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15670","RelatedDescription":"Opened issue \"Provide a build switch to improve the inner loop experience\" (#15670) at dotnet/coreclr","RelatedBody":"Currently, `build.cmd` will build the product, build the tests, and create `CORE_ROOT` directory for running the tests.\r\n\r\nThere exists a switch for building just the product and a switch for building tests and creating the CORE_ROOT directory, but I cannot find a switch which will create the CORE_ROOT directory without building the tests as well.\r\n\r\nI propose such a switch should be added. This would help cut down the inner loop time for the scenario where you are iterating on the product and have already built all the tests (which can still take a significant time for the \"up-to-date\" check, given the sheer number)\r\n"},{"Id":"7041422436","Type":"IssuesEvent","CreatedAt":"2017-12-29T20:52:34","Actor":"iskiselev","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15669","RelatedDescription":"Opened issue \"Resolve entry-point assembly on profiler initialization\" (#15669) at dotnet/coreclr","RelatedBody":"Looks like there is no any simple way to resolve entry-point assembly path in `ICorProfilerCallback::Initialize` to take a decision, if application should be profiled or not in case if application is started using dotnet. The only way will I see now is to parse command-line arguments within profiler, which is bad - as some command-line arguments treated as \"internal implementation details\" (see dotnet/cli#2243) and in any case require repeating many part of CoreCLI command-line parser.\r\nI'm not sure which repository is best for this issue. It looks related to dotnet/core-setup#2007 and some discussions in dotnet/cli#6237."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7041572145","Type":"IssuesEvent","CreatedAt":"2017-12-29T22:10:36","Actor":"kasper3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8306","RelatedDescription":"Opened issue \"dotnet-nuget doesn't support verbosity\" (#8306) at dotnet/cli","RelatedBody":"```\r\ndotnet nuget push --source {uri} path.nupkg -v q\r\n\r\n# error: Unrecognized option '-v'\r\n\r\ndotnet nuget push --source {uri} path.nupkg --verbosity quiet\r\n\r\n# error: Unrecognized option '--verbosity'\r\n```\r\n\r\nHowever, \r\n\r\n```\r\ndotnet nuget --verbosity quiet push --source {uri} path.nupkg\r\n```\r\n\r\ndoesn't throw but doesn't quiet the verbosity either.\r\n\r\nThis breaks what --help quotes:\r\n\r\n```\r\nCommon options:\r\n  -v|--verbosity        Set the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n  -h|--help             Show help.\r\n```\r\n\r\n### `--verbosity` is NOT a common option, only `--help` is"},{"Id":"7041394604","Type":"IssuesEvent","CreatedAt":"2017-12-29T20:39:33","Actor":"grbd","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8305","RelatedDescription":"Opened issue \"issue with running dotnet cli within gentoo sandbox\" (#8305) at dotnet/cli","RelatedBody":"Hi,\r\nI've recently been trying to setup some ebuild scripts for gentoo\r\nfor the purposes of installing dotnet core 2.0 onto gentoo\r\n\r\nNormally the ebuild system within gentoo uses a **sandbox** system while compiling / installing\r\nNormally during the install phase the build is set to install it's content into a directory under /var/tmp/portage/\r\nthen on a follow up stage is copied across to the live system.\r\nhttps://wiki.gentoo.org/wiki/Project:Sandbox\r\n\r\nHowever it looks as if the sandboxing system and dotnet restore (or even running dotnet --version inside it)\r\ncauses the dotnet exe to hang.\r\n\r\n## Steps to reproduce\r\n\r\nunder gentoo\r\n```\r\nwget https://github.com/dotnet/corefx/archive/v2.0.4.tar.gz\r\ntar -xvzf v2.0.4.tar.gz\r\ncd corefx-2.0.4\r\nsandbox\r\n./init-tools.sh\r\n```\r\n\r\n## Expected  behavior\r\n\r\ndotnet should restore the packages based on BuildToolsVersion.txt\r\n\r\n## Actual behavior\r\n\r\n```\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 2.0.0-servicing-02217-01...\r\n```\r\nThe dotnet cli tool hangs and requires a kill -9 to stop inside the sandbox\r\nI also tried upping the DotnetCLIVersion.txt to 2.1.3 but this had the same result\r\nI also tried calling dotnet --version directly within the sandbox using -v detailed but there was no returned output just another hang\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     gentoo\r\n OS Version:\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /root/test1/dotnet-runtime-test/corefx-2.0.4/Tools/dotnetcli/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nkernel version 4.14.8\r\n\r\n\r\n## workaround\r\n\r\nThere's a way to disable sandbox features per package under portage which I'll have to explore next.\r\nBut considering this affects **dotnet restore** this also impacts any future app creatd via dotnet (not just the install of dotnet core) installed under gentoo\r\n\r\nhttps://wiki.gentoo.org/wiki/Knowledge_Base:Overriding_environment_variables_per_package\r\n\r\n"},{"Id":"7040273168","Type":"IssuesEvent","CreatedAt":"2017-12-29T12:54:26","Actor":"eduherminio","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8304","RelatedDescription":"Opened issue \"Tasks named \"AfterBuild\" & \"AfterPublish\" are apparently ignored\" (#8304) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create directory with these two files:\r\n\r\n- Trial.csproj file\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"AfterBuild\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 1\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterBuilds\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 2\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterPublish\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 3\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n  <Target Name=\"AfterPublishs\" AfterTargets=\"Build\">\r\n    <Message Text=\"Hi World 4\" Importance=\"high\"></Message>\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n- Program.cs file (any)\r\n\r\n```\r\nnamespace Bug\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n2. `dotnet build`\r\n\r\n\r\n## Expected  behavior\r\n\r\nHi World 1\r\nHi World 2\r\nHi World 3\r\nHi World 4\r\n\r\n## Actual behavior\r\n\r\nHi World 2\r\nHi World 4\r\n\r\n## Environment data\r\n```\r\nHerramientas de la línea de comandos .NET (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7039913064","Type":"IssuesEvent","CreatedAt":"2017-12-29T10:16:48","Actor":"HaythemJ","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8296","RelatedDescription":"Closed issue \"node_modules folder is not published\" (#8296) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet core 2.0\r\nVisual Studio 2017 15.5.1\r\nPublish Web Application\r\n\r\n## Expected  behavior\r\nfolder with name node_modules should be published like any other folder\r\n\r\n## Actual behavior\r\nfolder with name node_modules is not published\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.1.3)\r\n\r\nProduct Information:\r\n Version:            2.1.3\r\n Commit SHA-1 hash:  a0ca411ca5\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.3\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.4\r\n  Build    : 7f262f453d8c8479b9af91d34c013b3aa05bc1ff\r\n\r\nI have a Web Application where I put Javascript files under wwwroot/lib/vendors/ like below:\r\n\r\n![image](https://user-images.githubusercontent.com/9905290/34366814-94801e48-eaa1-11e7-9466-b44317333e25.png)\r\n\r\nWhen publishing the folder wwwroot/lib/vendors/node_modules is not published in the output folder which leads to missing libraries.\r\n\r\nIs there a way to force the publish of that folder?\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7039598187","Type":"PullRequestEvent","CreatedAt":"2017-12-29T08:00:39","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8303","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#8303) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20171229-080038\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20171229-080038 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7039312780","Type":"IssuesEvent","CreatedAt":"2017-12-29T05:18:10","Actor":"bojanrajkovic","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8302","RelatedDescription":"Opened issue \"dotnet run breaks argument passing to app\" (#8302) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Download the attached sample.\r\n2. Run `dotnet run -- -tfoo -`\r\n\r\nSample: [dotnet-run-argument-issues-repro.zip](https://github.com/dotnet/cli/files/1592588/dotnet-run-argument-issues-repro.zip)\r\n\r\n## Expected  behavior\r\n\r\nThe following output:\r\n\r\n```\r\nArguments: [-tfoo, -]\r\nRemaining: [-]\r\nTest argument value: foo\r\n```\r\n\r\nThis correct behavior can be obtained by running `dotnet bin/Debug/netcoreapp2.0/dotnet-run-argument-issues-repro.dll -tfoo -`.r\r\n\r\n## Actual behavior\r\n\r\n```\r\nArguments: [-tfoo]\r\nRemaining: []\r\nTest argument value: foo\r\n```\r\n\r\nThe `-` is being eaten by `dotnet run`, despite the fact it's been told to stop argument parsing (`--`).\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  17.10\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.2/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7036730892","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:30:41","Actor":"Styxxy","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/614","RelatedDescription":"Closed issue \"DocumentationFile outputs both to project root as in output folder (when only specifying filename)\" (#614) at dotnet/standard","RelatedBody":"When specifying only a filename in the DocumentationFile in the csproj, the generated xml documentation file will be outputted to both the root of the project as well as in the output path.\r\n\r\nGiven following csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>\r\n    <DocumentationFile>my_library.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we have one class in our class libary:\r\n```cs\r\nnamespace my_library\r\n{\r\n    /// <summary>\r\n    /// Test\r\n    /// </summary>\r\n    public class Test\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nThe documentation file is generated in following directories:\r\n\r\n- project-root\r\n- project-root/bin/$(Configuration)/net47\r\n- project-root/bin/$(Configuration)/netstandard2.0\r\n\r\nIn the _old_ csproj format, the documentation file would be only outputted to the output folder."},{"Id":"7036717658","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:26:06","Actor":"Styxxy","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/614","RelatedDescription":"Opened issue \"DocumentationFile outputs both to project root as in output folder (when only specifying filename)\" (#614) at dotnet/standard","RelatedBody":"When specifying only a filename in the DocumentationFile in the csproj, the generated xml documentation file will be outputted to both the root of the project as well as in the output path.\r\n\r\nGiven following csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>\r\n    <DocumentationFile>my_library.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we have one class in our class libary:\r\n```cs\r\nnamespace my_library\r\n{\r\n    /// <summary>\r\n    /// Test\r\n    /// </summary>\r\n    public class Test\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nThe documentation file is generated in following directories:\r\n\r\n- project-root\r\n- project-root/bin/$(Configuration)/net47\r\n- project-root/bin/$(Configuration)/netstandard2.0\r\n\r\nIn the _old_ csproj format, the documentation file would be only outputted to the output folder."},{"Id":"7036709386","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:23:14","Actor":"0xF6","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/612","RelatedDescription":"Closed issue \"Merge Library?\" (#612) at dotnet/standard","RelatedBody":"Now to merge.NET Standard libraries into one library?"},{"Id":"7035640765","Type":"IssuesEvent","CreatedAt":"2017-12-28T01:54:35","Actor":"rexcfnghk","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/613","RelatedDescription":"Opened issue \"Issue with referencing a .NET Standard 2.0 project with an classic ASP.NET project targeting .NET Framework 4.6.1\" (#613) at dotnet/standard","RelatedBody":"I refer to my original issue submitted to Autofac [here](https://github.com/autofac/Autofac.WebApi/issues/32). I originally thought it was an Autofac issue but turns out it is not as I can reproduce it without Autofac.\r\n\r\n# Summary\r\n`MissingMethodException` is thrown when resolving for a component through a delegate that returns a type defined in a .NET Standard 2.0 library, under the context of an classic ASP.NET Web API project.\r\n\r\n# Steps to reproduce\r\n1. Create two projects as follows\r\n    - A .NET Standard 2.0 library\r\n    - A classic ASP.NET Web API project targeting .NET Framework 4.6.1\r\n2. Define an interface and an implementing class pair in the .NET standard library as follows:\r\n```c#\r\npublic interface IFoo { void DoSomething(); }\r\n\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo(HttpClient httpClient) => _httpClient = httpClient;\r\n\r\n    public void DoSomething() { /* No-op */ }\r\n}\r\n```\r\n3. Reference the .NET Standard library from the ASP.NET Web API project\r\n4. Implement a dummy controller that takes `IFoo` as a constructor parameter, like:\r\n```c#\r\npublic class DummyController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public DummyController() => _foo = new Foo(new HttpClient);\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\nNote that I have a parameterless contructor for `DummyController`.\r\n6. Run the ASP.NET Web API application and visit `/api/dummy/test`.\r\n\r\n# Expected behaviour\r\n`\"a\"` is returned.\r\n\r\n# Actual behaviour\r\n`Autofac.Core.DependencyResolutionException` is thrown.\r\n\r\nStack trace:\r\n<pre>\r\nAn error has occurred.An error occurred when trying to create a controller of type 'DummyController'. Make sure that the controller has a parameterless public constructor.System.InvalidOperationException   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n   at System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(HttpRequestMessage request)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__1.MoveNext()An error has occurred.Method not found: 'Void AutofacNetStandara.Library.Foo..ctor(System.Net.Http.HttpClient)'.System.MissingMethodException   at AutofacNetStandard.Web.Controllers.DummyController..ctor()\r\n   at lambda_method(Closure )\r\n   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n</pre>\r\n---------\r\n# Additional things I have tried\r\n1. Reference the same .NET Standard project from a .NET Framework 4.6.1 **Console** project, with the `Main` method initailizing `Foo`:\r\n```c#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var foo = new Foo(new HttpClient());\r\n\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```\r\nNo runtime exceptions are thrown and `foo` variable is initialised correctly.\r\n2. Moving the initialising of `Foo._httpClient` to the default constructor of `Foo` and call the empty constructor from the web project instead, like:\r\n```c#\r\n// In the .NET Standard 2.0 library\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo() => _httpClient = new HttpClient();\r\n\r\n    public void DoSomething() { }\r\n}\r\n\r\n// In the ASP.NET project, targeting .NET 4.6.1\r\npublic class ValuesController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public ValuesController() => _foo = new Foo();\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n`\"a\"` is returned as expected when visiting the route `/api/values/test`.\r\n"},{"Id":"7035205864","Type":"IssuesEvent","CreatedAt":"2017-12-27T21:53:55","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/608","RelatedDescription":"Closed issue \"Proposal: add GetEnvironmentVariableAsBool to netstandard\" (#608) at dotnet/standard","RelatedBody":"Currently the dotnet cli has a function which is located at: [src/Microsoft.DotNet.Cli.Utils/EnvironmentProvider.cs Line 106](https://github.com/dotnet/cli/blob/fffe3142ad8043743d83885df2166fd2f80dceca/src/Microsoft.DotNet.Cli.Utils/EnvironmentProvider.cs#L106)\r\n\r\nI think it would be useful to consider this functionality for inclusion into the `System.Environment` namespace.\r\n\r\nThis issue is to raise the idea and garner discussion. I do not believe it would conflict with anything already present, though I've not performed a thorough examination to prove it."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7041880346","Type":"IssuesEvent","CreatedAt":"2017-12-30T02:19:02","Actor":"bgulanowski","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26103","RelatedDescription":"Opened issue \"Drawing.Common issue on macOS High Sierra\" (#26103) at dotnet/corefx","RelatedBody":"After much trial and error, I believe I installed/configured/referenced the correct packages/references successfully. (The language around packages/references is not well explained in docs on Microsoft's website.)\r\n\r\nI can build and run a .Net Core CLI app, from Visual Studio for Mac, but it freezes when it tries to access objects from the Drawing.Common package.\r\n\r\nI can't create a Bitmap or a Colour. Test code, take right from documentation:\r\n\r\nusing System;\r\nusing System.IO;\r\nusing System.Drawing;\r\n\r\n```\r\nnamespace Test {\r\n    class MainClass {\r\n        public static void Main(string[] args) {\r\n\r\n            //Bitmap bm = new Bitmap(32, 32);\r\n            //Console.WriteLine(\"Bitmap: {0}\", bm);\r\n\r\n            Color slateBlue = Color.FromName(\"SlateBlue\");\r\n            byte g = slateBlue.G;\r\n            byte b = slateBlue.B;\r\n            byte r = slateBlue.R;\r\n            byte a = slateBlue.A;\r\n            string text = String.Format(\"Slate Blue has these ARGB values: Alpha:{0}, \" +\r\n                \"red:{1}, green: {2}, blue {3}\", new object[] { a, r, g, b });\r\n            Console.WriteLine(text);\r\n\r\n            Console.WriteLine(\"done\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe app freezes at `Color.FromName()`.\r\n\r\nOverall, this was surprisingly confusing for someone coming from a native macOS/iOS background. I was slowed down a lot because I missed a few small but important details:\r\n\r\n1. The packages are pre-release, so they don't appear in Visual Studio package UI unless \"show pre-release\" is checked. Would be great if that was called out better.\r\n2. The previous Drawing package (CoreCompat.System.Drawing) is not marked \"deprecated\", although I had the same problem with both.\r\n3. The dependency between CoreCompat.System.Drawing, runtime.osx.10.10-64.CoreCompat.System.Drawing, and libgdiplus (or mono-libgdiplus) is not well explained anywhere that I could find.\r\n4. The name overloading for \"System.Drawing\" in .Net Core and .Net 4.7 is confusing. (How can two different packages have the same namespace?)\r\n\r\nFirst I installed a plain version of `libgdiplus`, then I tried `mono-libgdiplus`, but that had no impact on the freezing problem.\r\n\r\nI'm wondering if there is an issue with High Sierra or some other macOS problem where trying to access graphic functionality from a CLI tool is the problem. Possibly not linked to AppKit/CoreGraphics?"},{"Id":"7041824653","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:20:39","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26102","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26030-01, preview1-26029-02, respectively (master)\" (#26102) at dotnet/corefx","RelatedBody":""},{"Id":"7041824600","Type":"IssuesEvent","CreatedAt":"2017-12-30T01:20:35","Actor":"AraHaan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26101","RelatedDescription":"Opened issue \"[Windows] PictureBox Control does not consider and honor Alpha Channels correctly.\" (#26101) at dotnet/corefx","RelatedBody":"Earlier today I filed an ticket with Microsoft for this exact issue on VS2017 for their .NET Framework's 4.5.x, 4.6.x, and 4.7.x\r\n\r\nBasically if you got an PNG image with an aplha channel, which has an partially transparent glow, or shadow on it.\r\n\r\nBasically the following steps can be taken to reproduce this (reporting this here as well for .NET Core can have this fixed as well if desired):\r\n\r\n1. make a new forms project\r\n2. make a new form, frame style set to None, Transparent Color set to Control\r\n3. addd an PictureBox and make it the same size of the control and make the background color to transparent.\r\n4. set that PictureBox to that image.\r\n5. Compile and run, you will see the image's transparency on partially transparent pixels get tossed (unless it is an .NET Framework specific thing or me using the wrong control for the RGBA images of mine).\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7041925765","Type":"PullRequestEvent","CreatedAt":"2017-12-30T03:07:39","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23439","RelatedDescription":"Merged pull request \"Infer nested nullability in flow analysis\" (#23439) at dotnet/roslyn","RelatedBody":"Infer nested nullability in flow analysis. To support nested nullability such as the cases below, it's necessary to track the entire type in flow analysis rather than just the top-level nullability.\r\n```\r\nstatic T F<T>(T[] a) => a[0];\r\n\r\nstatic void M(object? o)\r\n{\r\n    if (o != null)\r\n    {\r\n        var a = new[] { o };\r\n        a[0].ToString(); // no warning\r\n        F(a).ToString(); // no warning    \r\n    }\r\n    else\r\n    {\r\n        var b = new[] { o };\r\n        b[0].ToString(); // warning: b[0] may be null\r\n        F(b).ToString(); // warning: F(b) may be null    \r\n    }\r\n}\r\n```"},{"Id":"7041921736","Type":"IssuesEvent","CreatedAt":"2017-12-30T03:03:14","Actor":"paul1956","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23974","RelatedDescription":"Opened issue \"Getting Started VB Semantic Analysis is not current and examples don't work\" (#23974) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nAnthony D. Green edited this page on Sep 19 2015 · 1 revision from this Repo\r\n**Steps to Reproduce**:\r\n\r\n1. The page refers to VS 2015\r\n2. The Example as below are marked Obsolete with VS 2017 15.5.2\r\n```\r\nDim compilation As Compilation =\r\n                VisualBasicCompilation.Create(\"HelloWorld\").\r\n                                       AddReferences(MetadataReference.CreateFromAssembly(\r\n                                                         GetType(Object).Assembly)).\r\n                                       AddSyntaxTrees(tree)\r\n```\r\n\r\n**Expected Behavior**:\r\nExamples work\r\n**Actual Behavior**:\r\nError pointing out CreateFromAssembly is deprecated and instructions to fix are less than obvious"},{"Id":"7041848204","Type":"IssuesEvent","CreatedAt":"2017-12-30T01:45:07","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23864","RelatedDescription":"Closed issue \"Erroneous 'Using directive is unnecessary' when XML comment requires it\" (#23864) at dotnet/roslyn","RelatedBody":"VS 15.5.2\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\nusing System;\r\n\r\n/// <summary>\r\n/// <see cref=\"InvalidOperationException\"/>\r\n/// </summary>\r\nclass Foo\r\n{\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe using directive should appear in use and removal should not be offered.\r\n\r\n**Actual Behavior**:\r\n\r\nThe using directive appears dim with a diagnostic saying it is unused and a code fix to remove it.\r\n"},{"Id":"7041833797","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:30:00","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23357","RelatedDescription":null,"RelatedBody":"- Disallow `default` as a pattern to reduce confusion in the match expression. See #23499. Only a warning in `case default:`.\r\n- Syntax nodes and parsing for the match expression\r\n- Change punctuation for switch expression per LDM advice from () to {}\r\n- Add a when clause to the switch expression's cases\r\n- Add support for binding the switch expression (but not decision tree)\r\n- Implement flow analysis for switch expression\r\n- Adjust precedence of the constant pattern in a switch expression arm.\r\n- Implement and test lazily inferring variables in the match expression.\r\n- Test that we do not permit a short discard as the _pattern_ of an *is-pattern-expression* (per LDM).\r\n- Forbid a parenthsized pattern to be used as a single-element deconstruct without additional disambiguating syntax, per 2017-11-20 LDM decision.\r\n- Add a \"var pattern\" corresponding to deconstruction using a parenthesized designation.\r\n- As part of the above, we now forbid the use of `var` as a pattern's type except in the var pattern, where it is forbidden to bind to a user-declared type. Requires compat council review.\r\n- Add contextual keyword \"var\" for use in the *var-pattern*.\r\n\r\nThis is the fourth of several PRs for the implementation of recursive pattern-matching, each of which builds on the previous. Until the previous PR #23228 is integrated, you will also see the changes from that PR included here. You should review #23208 (DONE) and #23209 and #23228 first, and only review new deltas in this review.\r\n"},{"Id":"7041833760","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:29:59","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23357","RelatedDescription":"Closed pull request \"recursive-patterns(4): Parsing the switch expression.\" (#23357) at dotnet/roslyn","RelatedBody":"- Disallow `default` as a pattern to reduce confusion in the match expression. See #23499. Only a warning in `case default:`.\r\n- Syntax nodes and parsing for the match expression\r\n- Change punctuation for switch expression per LDM advice from () to {}\r\n- Add a when clause to the switch expression's cases\r\n- Add support for binding the switch expression (but not decision tree)\r\n- Implement flow analysis for switch expression\r\n- Adjust precedence of the constant pattern in a switch expression arm.\r\n- Implement and test lazily inferring variables in the match expression.\r\n- Test that we do not permit a short discard as the _pattern_ of an *is-pattern-expression* (per LDM).\r\n- Forbid a parenthsized pattern to be used as a single-element deconstruct without additional disambiguating syntax, per 2017-11-20 LDM decision.\r\n- Add a \"var pattern\" corresponding to deconstruction using a parenthesized designation.\r\n- As part of the above, we now forbid the use of `var` as a pattern's type except in the var pattern, where it is forbidden to bind to a user-declared type. Requires compat council review.\r\n- Add contextual keyword \"var\" for use in the *var-pattern*.\r\n\r\nThis is the fourth of several PRs for the implementation of recursive pattern-matching, each of which builds on the previous. Until the previous PR #23228 is integrated, you will also see the changes from that PR included here. You should review #23208 (DONE) and #23209 and #23228 first, and only review new deltas in this review.\r\n"},{"Id":"7041796786","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:55:01","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23973","RelatedDescription":"Opened issue \"Crash on applying an analyzer fixer across a large solution\" (#23973) at dotnet/roslyn","RelatedBody":"1. Opened Compliers.sln from roslyn repo.\r\n2. Tried to apply an analyzer fixer for CA1801 (https://github.com/dotnet/roslyn-analyzers/issues/459) for the whole solution. There were 470+ issues of the type.\r\n3. Failed with the following exception:\r\n\r\n```\r\nSystem.AggregateException : One or more errors occurred. ---> Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.<>c__DisplayClass18_0.<InvokeCore>b__0()\r\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n---> (Inner Exception #0) System.Runtime.InteropServices.COMException : Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode,IntPtr errorInfo)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.InvisibleEditor..ctor(IServiceProvider serviceProvider,String filePath,IVisualStudioHostProject projectOpt,Boolean needsSave,Boolean needsUndoDisabled)\r\n   at Microsoft.VisualStudio.LanguageServices.RoslynVisualStudioWorkspace.OpenInvisibleEditor(IVisualStudioHostDocument hostDocument)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.DocumentProvider.StandardTextDocument.UpdateText(SourceText newText)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyDocumentTextChanged(DocumentId documentId,SourceText newText)\r\n   at Microsoft.CodeAnalysis.Workspace.ApplyChangedDocument(ProjectChanges projectChanges,DocumentId documentId)\r\n   at Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(ProjectChanges projectChanges)\r\n   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\r\n   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace,IProgressTracker progressTracker,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace,ImmutableArray`1 operations,IProgressTracker progressTracker,CancellationToken cancellationToken)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ApplyAsync(<Unknown Parameters>)<---\r\n\r\n```"},{"Id":"7041688385","Type":"IssuesEvent","CreatedAt":"2017-12-29T23:25:05","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23972","RelatedDescription":"Opened issue \"make ShadowsExplicitly public\" (#23972) at dotnet/roslyn","RelatedBody":"Consider making Microsoft.CodeAnalysis.VisualBasic.Symbol.ShadowsExplicitly public\r\n\r\nNeed to ignore Shadows implementation in https://github.com/dotnet/roslyn-analyzers/issues/459."},{"Id":"7041225144","Type":"IssuesEvent","CreatedAt":"2017-12-29T19:23:50","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23971","RelatedDescription":"Opened issue \"changing branches in project system repo crashed VS\" (#23971) at dotnet/roslyn","RelatedBody":"**Version Used**: Latest Int branch\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  change git branches\r\n2.  attempt to do a find-all-references operation\r\n\r\n**Expected Behavior**:\r\nVS navigates to the references\r\n\r\n**Actual Behavior**:\r\nVS crash\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.AggregateException: One or more errors occurred. ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.get_Item(TKey key)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.<GetConfigsAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.<GetCodingConventionSnapshotAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCodingConventionsProvider.<GetCodingConventionsAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.CodingConventions.CodingConventionsManager.<GetConventionContextAsync>d__13.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Shared.Utilities.IOUtilities.<PerformIOAsync>d__2`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.Options.EditorConfigDocumentOptionsProvider.<GetOptionsForDocumentAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Options.OptionServiceFactory.OptionService.<GetUpdatedOptionSetForDocumentAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Document.<>c__DisplayClass38_0.<<InitializeCachedOptions>b__0>d.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.HighlighterViewTaggerProvider.<ProduceTagsAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1.<ProduceTagsAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1.TagSource.<RecomputeTagsAsync>d__73.MoveNext()\r\n---> (Inner Exception #0) System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.get_Item(TKey key)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.MapAllAncestorsToContext(EditorConfigCodingConventionContext context, String currentDirectory)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.<GetConfigsAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCache.<GetCodingConventionSnapshotAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.CodingConventions.EditorConfig.EditorConfigCodingConventionsProvider.<GetCodingConventionsAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.CodingConventions.CodingConventionsManager.<GetConventionContextAsync>d__13.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Shared.Utilities.IOUtilities.<PerformIOAsync>d__2`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.Options.EditorConfigDocumentOptionsProvider.<GetOptionsForDocumentAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Options.OptionServiceFactory.OptionService.<GetUpdatedOptionSetForDocumentAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Document.<>c__DisplayClass38_0.<<InitializeCachedOptions>b__0>d.MoveNext()<---\r\n\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception)\r\n   at Roslyn.Utilities.TaskExtensions.ReportFatalErrorWorker(System.Threading.Tasks.Task, System.Object)\r\n   at System.Threading.Tasks.ContinuationTaskFromTask.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.Tasks.Task.ExecutionContextCallback(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.TaskScheduler.TryRunInline(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.TaskContinuation.InlineIfPossibleOrElseQueue(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.StandardTaskContinuation.Run(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.TaskExtensions+VoidResult, System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetException(System.Object)\r\n   at System.Threading.Tasks.UnwrapPromise`1[[System.Threading.Tasks.TaskExtensions+VoidResult, System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetFromTask(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.UnwrapPromise`1[[System.Threading.Tasks.TaskExtensions+VoidResult, System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].InvokeCore(System.Threading.Tasks.Task)\r\n   at System.Threading.Tasks.UnwrapPromise`1[[System.Threading.Tasks.TaskExtensions+VoidResult, System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Invoke(System.Threading.Tasks.Task)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1+TagSource+<RecomputeTagsAsync>d__73[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider`1+<ProduceTagsAsync>d__30[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.HighlighterViewTaggerProvider+<ProduceTagsAsync>d__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7041927200","Type":"PullRequestEvent","CreatedAt":"2017-12-30T03:09:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5167","RelatedDescription":"Merged pull request \"Add a couple more metadata rules\" (#5167) at dotnet/corert","RelatedBody":"Found these when looking at getting Benchmark.net to run with CoreRT.\r\n\r\nThe delegate Invoke method rule is something I hit multiple times already - LINQ Expressions are guaranteed to reflect on Invoke."},{"Id":"7041926642","Type":"IssuesEvent","CreatedAt":"2017-12-30T03:08:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4379","RelatedDescription":"Closed issue \"Implement RhGetCodeTarget on Linux/Apple\" (#4379) at dotnet/corert","RelatedBody":""},{"Id":"7041926643","Type":"PullRequestEvent","CreatedAt":"2017-12-30T03:08:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5168","RelatedDescription":"Merged pull request \"Fix RhGetCodeTarget for Unix x64\" (#5168) at dotnet/corert","RelatedBody":"Fix RhGetCodeTarget on Unix\r\n\r\nFixes #4379"},{"Id":"7041699056","Type":"PullRequestEvent","CreatedAt":"2017-12-29T23:33:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5169","RelatedDescription":"Opened pull request \"Normalize types and methods to fully canonical forms\" (#5169) at dotnet/corert","RelatedBody":"This was hit with Benchmark.net in the new code I added for reflection. We had partially canonical types and methods flying around in the system and up until the reflection work this went unnoticed. I sprinkled around some new asserts so that we'll be more likely to see a problem like this in the future.\r\n\r\nThere are a couple places where we migth end up with things like `Foo<object, __Canon>`. We shouldn't let things like that float around in the system."},{"Id":"7041644587","Type":"PullRequestEvent","CreatedAt":"2017-12-29T22:55:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5168","RelatedDescription":"Opened pull request \"Fix RhGetCodeTarget for Unix x64\" (#5168) at dotnet/corert","RelatedBody":"Fix RhGetCodeTarget on Unix"},{"Id":"7041641591","Type":"PullRequestEvent","CreatedAt":"2017-12-29T22:53:08","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5167","RelatedDescription":"Opened pull request \"Add a couple more metadata rules\" (#5167) at dotnet/corert","RelatedBody":"Found these when looking at getting Benchmark.net to run with CoreRT.\r\n\r\nThe delegate Invoke method rule is something I hit multiple times already - LINQ Expressions are guaranteed to reflect on Invoke."},{"Id":"7041614932","Type":"PullRequestEvent","CreatedAt":"2017-12-29T22:36:31","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5166","RelatedDescription":"Opened pull request \"Set cleanOptions to 3 so that output directory is cleaned up\" (#5166) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7039445938","Type":"IssuesEvent","CreatedAt":"2017-12-29T06:42:10","Actor":"KirillOsenkov","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1833","RelatedDescription":"Opened issue \"Invalid TrimEnd function usage in Microsoft.NET.TargetFrameworkInference.targets#L51\" (#1833) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/blob/7fc8f64b89f5a69bb8043bae814b314b6ce6841f/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.TargetFrameworkInference.targets#L51\r\n\r\n`$(TargetFramework.TrimEnd('.0123456789'))`\r\n\r\nMSBuild Expander doesn't like this TrimEnd"},{"Id":"7033942081","Type":"IssuesEvent","CreatedAt":"2017-12-27T13:59:08","Actor":"skarllot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1832","RelatedDescription":"Opened issue \"TargetFramework for Xamarin platforms\" (#1832) at dotnet/sdk","RelatedBody":"I cannot set `TargetFramework` to `monoandroid10`, `xamarinios10` or `uap10.0`.  The following errors are throw:\r\n\r\n```bash\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'xamarinios10' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'monoandroid10' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'uap10.0' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\n```\r\n\r\nThe following configuration is being used:\r\n\r\n```xml\r\n<TargetFrameworks>netstandard1.3;net46;monoandroid10;xamarinios10;uap10.0</TargetFrameworks>\r\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"943234846079496192","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/Xm2utapspg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"942039735144452097","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/UjBOoFqFp5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":18,"RawContent":null},{"Id":"941295101212549121","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/qJHWFDaUGf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2017-12-30T05:30:21.535544Z","RunDurationInMilliseconds":7903}