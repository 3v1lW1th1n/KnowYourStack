{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null},{"Title":"Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework","PublishedOn":"2018-05-08T00:41:28+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"Today at //Build 2018, we are excited to announce the preview of ML.NET, a cross-platform, open source machine learning framework. ML.NET will allow .NET developers to develop their own models and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"},{"Id":"7660843516","Type":"IssuesEvent","CreatedAt":"2018-05-11T12:12:46","Actor":"Longvimol","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/69","RelatedDescription":"Opened issue \"Dotnet / announcement \" (#69) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\n"},{"Id":"7644965785","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:03:40","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to ASP.NET Core 2.0.8.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to 2.0.8 to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_"},{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7760177966","Type":"PullRequestEvent","CreatedAt":"2018-06-01T04:15:29","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18230","RelatedDescription":"Opened pull request \"JIT: Eliminate RegTracker (#18179)\" (#18230) at dotnet/coreclr","RelatedBody":"https://github.com/dotnet/coreclr/issues/18179\r\n@BruceForstall \r\n@CarolEidt "},{"Id":"7760132004","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:57:01","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18142","RelatedDescription":"Merged pull request \"Moves Stream to shared location\" (#18142) at dotnet/coreclr","RelatedBody":""},{"Id":"7759996399","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:02:46","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18222","RelatedDescription":"Merged pull request \"Fix SpanHelpers.ClearWithoutReferences alignment detection\" (#18222) at dotnet/coreclr","RelatedBody":"The current code reads the span elements instead of using the element addresses.\r\nWith this fix `Span.Clear` is 1.4x faster on a 100 byte array on x86 if the span is aligned and contains non-zero data.\r\n\r\n#16614 might be related to this."},{"Id":"7759792333","Type":"IssuesEvent","CreatedAt":"2018-06-01T01:45:43","Actor":"glenn-slayden","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18229","RelatedDescription":"Opened issue \"x64 JIT crash 'Compiler::implResolveToken' for typeof(ValueType) containing array of self\" (#18229) at dotnet/coreclr","RelatedBody":"The following program crashes the **x64** JIT.\r\n\r\n    using System;\r\n\r\n    public struct StructTree\r\n    {\r\n        public Double P;\r\n        public StructTree[] rg;\r\n    };\r\n\r\n    class Program\r\n    {\r\n        static void Main() => T = typeof(StructTree);      // <-- EETypeLoadException\r\n\r\n        static Type T; // (not important that 'T' be a non-local variable; only done here to\r\n                       // prevent the above assignment from being fully optimized-out)\r\n    }\r\n\r\nThe exception:\r\n\r\n>Exception thrown at 0x00007FFDFD13F218 in ConsoleApp23.exe: Microsoft C++ exception: EETypeLoadException at memory location 0x0000003F1433A450.\r\n\r\nStack trace:\r\n\r\n\tRaiseException()\r\n\t_CxxThrowException()\r\n\tCompiler::impResolveToken() Line 277          <--- EETypeLoadException\r\n\tCompiler::impImportBlockCode() Line 14293\r\n\tCompiler::impImportBlock() Line 16079\r\n\tCompiler::impImport() Line 17163\r\n\t[Inline Frame] Compiler::fgImport() Line 6800\r\n\tCompiler::compCompile() Line 4386\r\n\tCompiler::compCompileHelper() Line 6025\r\n\tCompiler::compCompile() Line 5359\r\n\tjitNativeCode() Line 6666\r\n\tCILJit::compileMethod() Line 315\r\n\t_CorExeMain()\r\n\t_CorExeMain_Exported()\r\n\tBaseThreadInitThunk()\r\n\tRtlUserThreadStart()\r\n\r\nHere's a link to the throwing source code form the [coreclr repo](https://github.com/dotnet/coreclr):\r\n\r\nhttps://github.com/dotnet/coreclr/blob/86c438de4043359942f3e0f46c55fdaa98dc5b2f/src/jit/importer.cpp#L262-L277\r\n\r\nAs best as I can tell, that would be here:\r\n\r\n![asm](https://user-images.githubusercontent.com/5589855/40815819-f5e8d6c6-64fd-11e8-9901-98adcc270f9b.png)\r\n\r\nThe **IL** code for the problematic **C#** JIT target method (`Program.Main`) is essentially the same for *Debug* and *Release* builds, and both exhibit the crash.\r\n\r\n\tL_0000: ldtoken StructTree\r\n\tL_0005: call class [mscorlib]Type [mscorlib]Type::GetTypeFromHandle(valuetype [mscorlib]RuntimeTypeHandle)\r\n\tL_000a: stsfld class [mscorlib]Type Program::T\r\n\tL_000f: ret \r\n\r\nTo Reproduce\r\n----\r\n\r\nTo reproduce this crash, create a new **C#** project for .NET 4.7.2 in the latest VS2017. Enter the code shown at the top. Alternatively, [here's a zip](https://github.com/dotnet/coreclr/files/2060673/jit-crash-resolve-token-recursive.zip) of the whole project.\r\n\r\nNext, on the *Project Properties* pane, enable **Native Code Debugging**:\r\n\r\n![app-properties](https://user-images.githubusercontent.com/5589855/40815912-a3573802-64fe-11e8-9d48-b0b8c86e142d.png)\r\n\r\nOn the *Exception Settings* pane, enable exceptions as shown here:\r\n\r\n![ex-settings](https://user-images.githubusercontent.com/5589855/40815934-cd6d1526-64fe-11e8-8929-2b773df0df56.png)\r\n\r\nHere are the debugger settings I used. In the case of **Suppress JIT optimization on module load**, it does not have any effect on the issue (the crash occurs in both modes).\r\n\r\n\r\n![dbg-opts](https://user-images.githubusercontent.com/5589855/40816102-d3693878-64ff-11e8-82e0-16dfaa56e038.png)\r\n"},{"Id":"7759569658","Type":"IssuesEvent","CreatedAt":"2018-06-01T00:18:51","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18228","RelatedDescription":"Opened issue \"[arm32][JitStressRegs=3] Assertion failed 'farthestRefPhysRegRecord != nullptr'\" (#18228) at dotnet/coreclr","RelatedBody":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_jitstressregs3_tst/9/consoleFull\r\n\r\n```\r\n21:09:37 FAILED   - JIT/Performance/CodeQuality/V8/Crypto/Crypto/Crypto.sh\r\n21:09:37                BEGIN EXECUTION\r\n21:09:37                /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_jitstressregs3_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun Crypto.exe\r\n21:09:37                \r\n21:09:37 \r\n               Assert failure(PID 17639 [0x000044e7], Thread: 17639 [0x44e7]): Assertion failed 'farthestRefPhysRegRecord != nullptr' in 'V8.Crypto.BigInteger:exp(int,ref):ref:this' (IL size 110)\r\n21:09:37                \r\n21:09:37                    File: /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/src/jit/lsra.cpp Line: 3637\r\n21:09:37                    Image: /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_jitstressregs3_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun\r\n21:09:37                \r\n21:09:37                ./Crypto.sh: line 244: 17639 Aborted                 $_DebuggerFullPath \"$CORE_ROOT/corerun\" $ExePath $CLRTestExecutionArguments\r\n21:09:37                Expected: 100\r\n21:09:37                Actual: 134\r\n21:09:37                END EXECUTION - FAILED\r\n```\r\n\r\nPossibly related: https://github.com/dotnet/coreclr/issues/18153\r\n"},{"Id":"7759539381","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:07:35","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18220","RelatedDescription":"Merged pull request \"Fix HasPendingGCStressInstructionUpdate CONSISTENCY_CHECK\" (#18220) at dotnet/coreclr","RelatedBody":"Fixes the CONSISTENCY_CHECK to be ordering aware\r\n\r\nFixes new race observed in #18047 which was exposed by #18173\r\n\r\n@BruceForstall PTAL"},{"Id":"7759532081","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:05:00","Actor":"chsienki","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18129","RelatedDescription":"Merged pull request \"Arm stepping fixes\" (#18129) at dotnet/coreclr","RelatedBody":"Fixes a few SetIP issues on arm\r\n- Ensures PCODEs have thumb_code set.\r\n- Adds assert to ensure we catch missing thumb bits in the future"},{"Id":"7759377849","Type":"PullRequestEvent","CreatedAt":"2018-05-31T23:11:38","Actor":"acmyu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18227","RelatedDescription":"Opened pull request \"R2RDump - Dump AvailableTypes section contents\" (#18227) at dotnet/coreclr","RelatedBody":""},{"Id":"7759358818","Type":"PullRequestEvent","CreatedAt":"2018-05-31T23:05:41","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18206","RelatedDescription":null,"RelatedBody":"Morph can't relay on Lower optimization that it can't guarantee.\r\n\r\nIn this test case we have such tree:\r\n```\r\n               [000041] ------------                   /--*  CAST      long <- int\r\n               [000040] ------------                   |  \\--*  CNS_INT   int    1\r\n               [000042] ---X--------                /--*  UMOD      long  \r\n\t\t\t                                              / *** \r\n               [000024] ---X--------                |  \\--*  MUL       long\r\n\t\t\t                                              \\ ***\r\n\r\n```\r\nMoprh thinks that Lower will optimize it as `a % b = a & (b - 1); `, but then `a` tree is found to be a constant:\r\n```\r\nN034 (  1,  1) [000041] ------------                      /--*  CNS_INT   long   1 $182\r\nN035 ( 36, 24) [000042] -A-X--------                   /--*  UMOD      long   $287\r\nN032 (  1,  1) [000023] ------------                   |  /--*  CNS_INT   long   0 $180\r\nN033 ( 34, 22) [000024] -A-X--------                   \\--*  COMMA     long\r\n                                                          \\ *** \r\n```\r\nand Lower rejects optimizing `a % b` when both operands are const.\r\n\r\nIt cases assert during Lsra: `assert(!\"Shouldn't see an integer typed GT_MOD node in ARM64\");`\r\n\r\nThe fix is similar to #17338.\r\n\r\nFixes #17968.\r\n\r\nPR #15690 can help to return this optimization back."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7760223004","Type":"PullRequestEvent","CreatedAt":"2018-06-01T04:35:18","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9394","RelatedDescription":"Opened pull request \"Revert \"Fix MSBuild invocation to quote property option values.\"\" (#9394) at dotnet/cli","RelatedBody":"This reverts commit f9b939fe8996210666f4740d16e997081023bb23.\r\n\r\nThat fix caused a regression that prevented a single `/property` option to\r\ndefine multiple properties using the `/property:First=foo;Second=bar` syntax.\r\n\r\nUsers that want literal semicolons in the property values should use escaped\r\nquotes around the property value, e.g. `/property:Prop='\"foo;bar;baz\"'`.\r\n\r\nFixes #9369."},{"Id":"7760142249","Type":"PullRequestEvent","CreatedAt":"2018-06-01T04:01:02","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9393","RelatedDescription":"Opened pull request \"Merge release/2.1.3xx to release/2.1.4xx\" (#9393) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-release/2.1.4xx\ngit reset --hard upstream/release/2.1.4xx\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-release/2.1.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7760060891","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:28:21","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/7816","RelatedDescription":"Closed pull request \"1.1.0 branch - added property for aspnet template version\" (#7816) at dotnet/cli","RelatedBody":"This PR is the rel/1.1.0 analogue of the similar PR for release/15.5 #7811 "},{"Id":"7760013550","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:09:08","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9350","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to release/2.1.4xx\" (#9350) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-release/2.1.4xx\ngit reset --hard upstream/release/2.1.4xx\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-release/2.1.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7760300530","Type":"IssuesEvent","CreatedAt":"2018-06-01T05:09:55","Actor":"peppy","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/30038","RelatedDescription":"Opened issue \"ExpectContinue causes breaking behaviour in responseStream.Read\" (#30038) at dotnet/corefx","RelatedBody":"Since 2.1.300, setting `ExpectContinue` to `true` will cause `Read` operations on the response stream to block for a long period rather than immediately returning 0 at the end of stream content.\r\n\r\nReproduction:\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Net.Http;\r\n\r\nnamespace http_response_read_test\r\n{\r\n    class Program\r\n    {\r\n        private const int buffer_size = 2048;\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var client = new HttpClient();\r\n\r\n            client.DefaultRequestHeaders.ExpectContinue = true;\r\n\r\n            var response = client.SendAsync(new HttpRequestMessage(HttpMethod.Get, \"https://httpbin.org/get\")).Result;\r\n            var buffer = new byte[buffer_size];\r\n\r\n            using (var responseStream = response.Content.ReadAsStreamAsync().Result)\r\n            {\r\n                int read;\r\n                while ((read = responseStream.Read(buffer, 0, buffer_size)) > 0)\r\n                {\r\n                    // consume buffer\r\n                }\r\n            }\r\n            \r\n            System.Console.WriteLine(\"finished\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nRunning this code under `netcoreapp2.0` and `net471` will exit immediately after the response is read, while running under `netcoreapp2.1` will block for a very long time before eventually exiting (takes around a minute).\r\n\r\nCommenting out the `ExpectContinue` line will cause all three runtimes to match in behaviour.\r\n"},{"Id":"7760003455","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:05:03","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30037","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#30037) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7759961781","Type":"PullRequestEvent","CreatedAt":"2018-06-01T02:50:13","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/30002","RelatedDescription":"Closed pull request \"Make directory enumeration consistent (#29908)\" (#30002) at dotnet/corefx","RelatedBody":"This ports #29908, which fixes special error case handling in file enumeration in Unix, which is essentially broken. This includes `EnumerationOptions.IgnoreInaccessible` and writing custom error handlers for Unix.\r\n\r\nI caught this when investigating other issues in the area. We were missing tests that covered the full scenario. This change includes coverage.\r\n\r\n* Make directory enumeration consistent\r\n\r\nDirectories can disappear or be replaced with files after we find them when recursively enumerating. Fix so we don't throw in these cases.\r\n\r\nAlso make queue handling consistent between Unix/Windows. In error skipping cases we need to be sure that we don't try to process directories we fail to open but don't care about. This simplifies custom error handling.\r\n\r\nFix error mapping in Unix. Add tests\r\n\r\n* Fix typo in WinRT\r\n\r\n* Address feedback"},{"Id":"7759901819","Type":"IssuesEvent","CreatedAt":"2018-06-01T02:27:22","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29848","RelatedDescription":"Reopened issue \"Inefficient array clearing of DefaultArrayPool.Return()\" (#29848) at dotnet/corefx","RelatedBody":"I was benchmarking things and found out that DefaultArrayPool clearing of array is extremely inefficient compared to simple ```new Span(array).Clear()```\r\nhttps://github.com/dotnet/corefx/blob/8f968b9e79c5721d78cc88e46fe57457fe9d490d/src/System.Buffers/src/System/Buffers/DefaultArrayPool.cs#L142-L145\r\n\r\nMy benchmark code\r\n```C#\r\nconst int MinSize = 10000;\r\n[Benchmark] \r\npublic void ArrayPoolClearDefault() {\r\n    var b = ArrayPool<byte>.Shared.Rent(MinSize);\r\n    ArrayPool<byte>.Shared.Return(b, true);\r\n}\r\n[Benchmark] \r\npublic void ArrayPoolClearFill0() {\r\n    var b = ArrayPool<byte>.Shared.Rent(MinSize);\r\n    new Span<byte>(b).Fill(0);\r\n    ArrayPool<byte>.Shared.Return(b, false);\r\n}\r\n[Benchmark] \r\npublic void ArrayPoolClearClear() {\r\n    var b = ArrayPool<byte>.Shared.Rent(MinSize);\r\n    new Span<byte>(b).Clear();\r\n    ArrayPool<byte>.Shared.Return(b, false);\r\n}\r\n```\r\nHere is result\r\n```\r\nBenchmarkDotNet=v0.10.14, OS=Windows 10.0.17134\r\nIntel Core i5-3230M CPU 2.60GHz (Ivy Bridge), 1 CPU, 4 logical and 2 physical cores\r\nFrequency=2533310 Hz, Resolution=394.7405 ns, Timer=TSC\r\n.NET Core SDK=2.1.300-rc1-008673\r\n  [Host]     : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT\r\n  DefaultJob : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT\r\n\r\n\r\n                Method |       Mean |      Error |    StdDev |\r\n---------------------- |-----------:|-----------:|----------:|\r\n ArrayPoolClearDefault | 4,241.5 ns | 105.129 ns | 98.337 ns |\r\n   ArrayPoolClearFill0 |   611.4 ns |  14.166 ns | 23.669 ns |\r\n   ArrayPoolClearClear |   590.8 ns |   4.181 ns |  3.911 ns |\r\n```\r\n\r\nI don't really understand about how GC works and maybe Array.Clear needed to somehow notify GC that by-ref elements of array are unused anymore.\r\nBut if array consists of structs without references then clearing of it should be speeded up."},{"Id":"7759881099","Type":"PullRequestEvent","CreatedAt":"2018-06-01T02:19:39","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30036","RelatedDescription":"Opened pull request \"use dual mode sockets in cases when address family is not set explicitly\" (#30036) at dotnet/corefx","RelatedBody":"fixes #29414 Classes inheriting TcpClient or Sockets don't function using correct IP by default.\r\n\r\nin essence, this change allows to connect either to IPv4 or IPv4 when instantiated without specific address family. This is done by using dual mode socket if possible or falling back to IPv4 to match existing behavior. \r\n\r\nNote that UDPClient has same problem. I can add it to this PR if we agree on approach or I can open new issue far that. \r\n\r\nAside from added unit test, I also tried to run sample test code from the issue."},{"Id":"7759649047","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:49:17","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30035","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26601-01, preview1-26531-03, respectively (master)\" (#30035) at dotnet/corefx","RelatedBody":""},{"Id":"7759647602","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:48:42","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30034","RelatedDescription":"Opened pull request \"Disable failing XSLT tests\" (#30034) at dotnet/corefx","RelatedBody":"These are taking out all PRs.\r\nhttps://github.com/dotnet/corefx/issues/30017\r\n\r\ncc: @danmosemsft"},{"Id":"7759620105","Type":"IssuesEvent","CreatedAt":"2018-06-01T00:37:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30016","RelatedDescription":"Closed issue \"Documentation for the StopWatch class is incorrect\" (#30016) at dotnet/corefx","RelatedBody":"https://github.com/dotnet/corefx/blob/master/src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs\r\n\r\nThe documentation is currently\r\n```csharp\r\n   // This class uses high-resolution performance counter if installed hardware \r\n    // does not support it. Otherwise, the class will fall back to DateTime class\r\n    // and uses ticks as a measurement.\r\n```\r\n\r\nI believe the portion  This class uses high-resolution performance counter if installed hardware **does not support it.**\r\n\r\nI believe you mean \"supports it\""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7760144912","Type":"PullRequestEvent","CreatedAt":"2018-06-01T04:02:02","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5879","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5879) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7760133063","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:57:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5878","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5878) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7760007926","Type":"PullRequestEvent","CreatedAt":"2018-06-01T03:06:49","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5878","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5878) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7759544905","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:09:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5871","RelatedDescription":"Merged pull request \"Expose Exception.set_HResult as Public\" (#5871) at dotnet/corert","RelatedBody":"This is to change Excetion.set_HResult from protected to public, so that others can set HResult value for a given exception.\r\n\r\nApproved API: dotnet/corefx#29696\r\nRelated Corefx Change(ref assembly): dotnet/corefx#29986\r\nRelated CoreCLR PR(S.P.Corelib change): dotnet/coreclr#18203"},{"Id":"7759541893","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:08:33","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5876","RelatedDescription":"Merged pull request \"Delete unnecessary MembersMustExist annotation\" (#5876) at dotnet/corert","RelatedBody":""},{"Id":"7759540725","Type":"PullRequestEvent","CreatedAt":"2018-06-01T00:08:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5877","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5877) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7759106905","Type":"PullRequestEvent","CreatedAt":"2018-05-31T21:55:08","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5864","RelatedDescription":"Merged pull request \"Enable OSX and Linux CoreFX CI tests\" (#5864) at dotnet/corert","RelatedBody":"This only enables System.Collections, System.Threading and System.Threading.Tasks, which should be stable and not suffer from spurious failures. "},{"Id":"7758927899","Type":"PullRequestEvent","CreatedAt":"2018-05-31T21:14:52","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5877","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5877) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7758883956","Type":"PullRequestEvent","CreatedAt":"2018-05-31T21:05:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5876","RelatedDescription":"Opened pull request \"Delete unnecessary MembersMustExist annotation\" (#5876) at dotnet/corert","RelatedBody":""},{"Id":"7758798134","Type":"PullRequestEvent","CreatedAt":"2018-05-31T20:48:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5873","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5873) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1001877224096649216","CreatedAt":"2018-05-30T17:25:18+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 https://t.co/HyKnPLqfwy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":1204,"FavoriteCount":844,"RawContent":null},{"Id":"1001877112469438464","CreatedAt":"2018-05-30T17:24:52+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0 now available https://t.co/Q5x6kghf6W","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":284,"FavoriteCount":199,"RawContent":null},{"Id":"1001876975982526466","CreatedAt":"2018-05-30T17:24:19+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 https://t.co/8so4DdNQDl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":240,"FavoriteCount":166,"RawContent":null}]}},"RunOn":"2018-06-01T05:30:32.8556346Z","RunDurationInMilliseconds":7267}