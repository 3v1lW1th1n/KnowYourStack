{"Data":{"Blog":{"FeedItems":[{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8788011827","Type":"PullRequestEvent","CreatedAt":"2018-12-20T20:38:29","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2563","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix ManagedResourceParser API breakage\" (#2563) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2546\r\nChanges: https://github.com/xamarin/xamarin-android-api-compatibility/compare/ec562e9...3fe4561\r\n\r\nBumps to xamarin/xamarin-android-api-compatibility/master@3fe4561\r\n\r\nThis partially reverts 0f91aea.\r\n\r\nIn #2546, we experienced a bit of API breakage when disabling\r\n`$(AndroidUseAapt2)`. We want to fix the breakage in master, but keep\r\n`$(AndroidUseAapt2)` turned on by default.\r\n\r\nWe need to put the `ManagedResourceParser` back the way it was before\r\n0f91aea, except for `Resource.Attribute`.\r\n\r\nSince `aapt`(1) always emits this class, we should replicate that."},{"Id":"8787996974","Type":"IssuesEvent","CreatedAt":"2018-12-20T20:35:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2562","RelatedDescription":"Opened issue \"Need to move OS dependency checks & installation out of MSBuild\" (#2562) at xamarin/xamarin-android","RelatedBody":"Consider: https://jenkins.mono-project.com/job/xamarin-android-debug/85/console\r\n\r\nThis was a bot that had an (ancient!) Mono 5.4.1.7 installed, and `make prepare` fails:\r\n\r\n```\r\n14:17:12 nuget restore Xamarin.Android.sln\r\n...\r\n14:17:57 msbuild /p:Configuration=Debug /p:AutoProvision=True /p:AutoProvisionUsesSudo=True /p:IgnoreMaxMonoVersion=False /v:d /restore \"build-tools/Java.Interop.BootstrapTasks/Java.Interop.BootstrapTasks.csproj\"\r\n...\r\n14:17:57 MSBUILD : error MSB1001: Unknown switch.\r\n14:17:57 Switch: /restore\r\n```\r\n\r\nThe problem is that `make prepare` calls `nuget restore  Xamarin.Android.sln`, and -- depending on NuGet version -- this *may* call `msbuild /restore`.  The `msbuild` included with Mono 5.4.1.7 didn't support `msbuild /restore`, hence the failure.\r\n\r\nThe \"funny\" thing is, we need to get *past* `make prepare-external` in order to get to `make prepare-reps`, which will build `build-tools/dependencies/dependencies.csproj`, check the installed mono version, and update the system mono if necessary.\r\n\r\nExcept this causes a circular dependency: we can't *build* `dependencies.csproj` until *after* we've run `nuget restore`, and we can't (necessarily) run `nuget restore` until we've gotten an updated Mono install.\r\n\r\nWe need to break this circular dependency, and the sanest way to do that is to move the current dependency checking logic *out* of MSBuild (sigh), and into something that doesn't depend on mono."},{"Id":"8787950611","Type":"PullRequestEvent","CreatedAt":"2018-12-20T20:25:08","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2560","RelatedDescription":"Merged pull request \"Bump to xamarin/java.interop/d16-0@c987483\" (#2560) at xamarin/xamarin-android","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/6c5b4ea...c987483\r\n\r\n[jcwgen] add public method for GetDestinationPath\r\n\r\nThis is needed to cherry-pick c362fe5."},{"Id":"8787943161","Type":"PullRequestEvent","CreatedAt":"2018-12-20T20:23:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2546","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] disable aapt2 by default\" (#2546) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2501\r\n\r\nThis partially reverts 0f91aea.\r\n\r\nWe have a circular dependency problem with aapt2...\r\n\r\n1. `<Aapt2Compile/>` creates `*.flata` files, but needs\r\n  `<ConvertCustomView/>` to have run.\r\n2. `<GenerateJavaStubs/>` creates `acw-map.txt`.\r\n3. `<ConvertCustomView/>` needs `acw-map.txt` to work.\r\n\r\nIf I try calling no. 3 earlier, `acw-map.txt` doesn't exist yet...\r\n\r\nSo it seems like custom views aren't getting fixed up at all when\r\naapt2 is enabled...\r\n\r\nThe final apk will contain non-fixed up custom views, but the\r\n`obj\\Debug\\res` directory will be correct.\r\n\r\nFor now let's disable `$(AndroidUseAapt2)` by default, and revisit\r\nafter the holiday.\r\n\r\n## API Compatibility ##\r\n\r\nWe also had to put the `ManagedResourceParser` back the way it was,\r\nexcept for `Resource.Attribute`.\r\n\r\nSince `aapt`(1) always emits this class, we should replicate that.\r\n\r\nBumping to xamarin/xamarin-android-api-compatibility/d16-0@ea6c866\r\n\r\nChanges: https://github.com/xamarin/xamarin-android-api-compatibility/compare/ec562e9...ea6c866"},{"Id":"8787180820","Type":"PullRequestEvent","CreatedAt":"2018-12-20T17:48:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2556","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Aar directory resolution. (#2424)\" (#2556) at xamarin/xamarin-android","RelatedBody":"* [Xamarin.Android.Build.Tasks] Fix Aar directory resolution.\r\n\r\nFixed #2408\r\n\r\nAs part of the speed up process when extracting resources\r\nfrom assemblies and Aar files, we dont re-extract if\r\nthe stamp file is newer than the assembly.\r\n\r\nThe problem with that was in the case of Aar files we\r\nwere NOT adding the `res` or `asset` directories to\r\nthe list of resolved directories when we skipped extraction.\r\nAs a result we got less `res` directories on a second\r\nbuild.\r\n\r\nThis commit fixes that.\r\n\r\n* Add Unit Test\r\n\r\n* Fix Compile Error"},{"Id":"8787147920","Type":"PullRequestEvent","CreatedAt":"2018-12-20T17:42:27","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2561","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] remove Xamarin.Android.Windows.targets\" (#2561) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.devdiv.io/707557\r\n\r\nIn 539954c, I was aiming to remove the\r\n`_RegisterAndroidFilesWithFileWrites` MSBuild target (runs only on\r\nWindows). I was having trouble getting everything to work, so I undid\r\nthis change to make the PR smaller.\r\n\r\nReasons to remove `_RegisterAndroidFilesWithFileWrites`:\r\n\r\n- It looks like it *may* be a source of incremental build bugs. It\r\n  causes `$(CleanFile)` to grow on incremental builds indefinitely...\r\n- We should instead use the `FileWrites` item group appropriately.\r\n- We can avoid ~81ms of build time.\r\n\r\n    81 ms  _RegisterAndroidFilesWithFileWrites        1 calls\r\n\r\nRevisiting it now, it looks like we can remove\r\n`Xamarin.Android.Windows.targets` completely!\r\n\r\n- `_RegisterAndroidFilesWithFileWrites` is the only target.\r\n- The `$(_IsRunningXBuild)` property is only used in this file.\r\n- I moved the `$(Debugger)` property to\r\n  `Xamarin.Android.Common.props`. I believe this value is only used in\r\n  VS Windows, but it make more sense to be here.\r\n\r\n~~ Other Changes ~~\r\n\r\nI modified the `CheckNothingIsDeletedByIncrementalClean` test to\r\nverify that `$(CleanFile)` isn't growing on incremental builds.\r\n\r\nAnything added to `FileWrites` during the `_CompileDex` MSBuild target\r\n(or its dependent targets) wasn't showing up in `$(CleanFile)`! I\r\nadjusted its `BeforeTargets` to match what I did in 539954c for\r\n`_PrepareAssemblies`."},{"Id":"8786537025","Type":"PullRequestEvent","CreatedAt":"2018-12-20T15:59:28","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2560","RelatedDescription":"Opened pull request \"Bump to xamarin/java.interop/d16-0@c987483\" (#2560) at xamarin/xamarin-android","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/6c5b4ea...c987483\r\n\r\n[jcwgen] add public method for GetDestinationPath\r\n\r\nThis is needed to cherry-pick c362fe5."},{"Id":"8786317032","Type":"PullRequestEvent","CreatedAt":"2018-12-20T15:26:23","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2559","RelatedDescription":"Opened pull request \"[build] create-vsix.csproj should have Release configuration\" (#2559) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we are getting a build error during a\r\n`Release` build:\r\n\r\n    xamarin-android/src/libzip/libzip.targets(16,5): error MSB4062: The \"Xamarin.Android.BuildTools.PrepTasks.GitCommitTime\" task could not be loaded from the assembly xamarin-android/build-tools/scripts/../../bin/BuildDebug/xa-prep-tasks.dll. Invalid Image Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n\r\nThe path here is wrong, we should not be looking in `BuildDebug`\r\nduring a `Release` build.\r\n\r\nI opened Xamarin.Android.sln in Visual Studio (on Windows), and in the\r\n`Configuration Manager` `create-vsix.csproj` was listed as building\r\n`Debug` for `Release` builds! The dropdown would not even let me\r\nselect `Release`, it seemed the IDE did not think there was a\r\n`Release` configuration in the project at all!\r\n\r\n![image](https://user-images.githubusercontent.com/840039/50293476-49d73b80-0439-11e9-8a21-2f4661b6345f.png)\r\n\r\nThis would imply that the following `<ProjectReference/>` in\r\n`create-vsix.csproj` would be built in `Debug`:\r\n\r\n    <ProjectReference Include=\"..\\xa-prep-tasks\\xa-prep-tasks.csproj\">\r\n      <Project>{7CE69551-BD73-4726-ACAA-AAF89C84BAF8}</Project>\r\n      <Name>xa-prep-tasks</Name>\r\n      <ReferenceOutputAssembly>False</ReferenceOutputAssembly>\r\n      <Private>False</Private>\r\n    </ProjectReference>\r\n\r\nTo fix this I added these lines to `create-vsix.csproj`:\r\n\r\n    <PropertyGroup Condition=\" '$(Configuration)' == 'Debug' \" />\r\n    <PropertyGroup Condition=\" '$(Configuration)' == 'Release' \" />\r\n\r\nThen the IDE allowed me to select `Release`! Of course, the IDE made\r\nlots of other random changes we won't understand, since the `*.sln`\r\nfile format is not human readable.\r\n\r\nThis is not the same project we are getting an error from, but this\r\n*does* seem like a problem."},{"Id":"8785947544","Type":"PullRequestEvent","CreatedAt":"2018-12-20T14:28:48","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2558","RelatedDescription":"Opened pull request \"[tests] Allow running only selected apk tests\" (#2558) at xamarin/xamarin-android","RelatedBody":"Make it possible to run selected apk tests by passing `TESTS` variable\r\nto `make`.\r\n\r\nExample usage:\r\n\r\n    make run-apk-tests TESTS=\"Xamarin.Forms_Performance_Integration;Xamarin.Android.Locale_Tests\""},{"Id":"8785657476","Type":"PullRequestEvent","CreatedAt":"2018-12-20T13:40:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2555","RelatedDescription":"Merged pull request \"[monodroid] Release local refs earlier (#2312)\" (#2555) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2257\r\n\r\nWe should release local ref earlier in these cases, because with\r\nhigher number of assemblies we can overflow the local reference table\r\nsoon enough, before returning from native code.\r\n\r\nIn case of apks it is not as much probable, but why not release it and\r\nnot take a chance."},{"Id":"8785187271","Type":"IssuesEvent","CreatedAt":"2018-12-20T12:10:59","Actor":"SpiegelSoft","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2557","RelatedDescription":"Opened issue \"F# project template -- need to add System.Numerics manually.\" (#2557) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new F# Android project (class library or app)\r\n2. Try to compile it.\r\n3. The compiler breaks because BigInteger is undefined. You need to add a project reference to System.Numerics\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project should build out of the box.\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Professional 2017  (2)\r\nVersion 15.9.4\r\nVisualStudio.15.Release/15.9.4+28307.222\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-10200-39966-AA534\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.9.18254.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nDotfuscator Community Edition   5.36.0.7050-e77ce80a6\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.1.2    Build 112.0.20180530.113618\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.4\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Quantum Development Kit   0 and 1\r\nMicrosoft Quantum Development Kit provides support for developing quantum algorithms in the Q# programming language.\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.21001.1 Commit Hash:8dd15923800d931b153ab9e4de74e42a74eba5e6\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.9.18254.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.40517.1016\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Xamarin VSExtensions   2018.4.1121.1\r\nProgress® Telerik® UI for Xamarin Visual Studio extensions\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.208\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.77 (d15-9@e3f40b477)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.4.2 (HEAD/8255f42fc)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8789624855","Type":"IssuesEvent","CreatedAt":"2018-12-21T04:53:37","Actor":"klzig","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4841","RelatedDescription":"Opened issue \"\"Can't resolve reference get_Platform()\" when building for physical iPhone device, Forms 4.0.0\" (#4841) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAfter upgrading to Forms 4.0.0, build fails with following error when targeting a connected iPhone 6S.  Build and deploy succeed when targeting simulated iPhone 6S or physical Android device.\r\n\r\n> Can't resolve the reference 'Xamarin.Forms.Internals.IPlatform Xamarin.Forms.Element::get_Platform()', referenced from the method 'System.Void Naxam.Mapbox.Platform.iOS.Extensions.FormsViewContainer::Dispose(System.Boolean)' in 'Xamarin.Forms.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null'.\tCTForms.iOS\t\r\n\r\n### Steps to Reproduce\r\n\r\n1. Working project on Forms 3.4\r\n2. Upgrade nuget to Forms preview 4.0.0\r\n3. Target connected iPhone, build\r\n\r\n### Expected Behavior\r\nApp builds and deploys to connected iPhone\r\n\r\n### Actual Behavior\r\nBuild error.  Build and deploy succeed when targeting simulated iPhone.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.8055-pre1\r\n- Last known good version: 3.4.0.1008975\r\n- IDE: Visual Studio 2017 15.9.4 (Windows)\r\n- Platform Target Frameworks:\r\n  - iOS:  12.1\r\n- Nuget Packages:\r\nXamarin.Forms v4.0.0.8055-pre1\r\nXamarin.Essentials v1.0.0\r\nNewtonsoft.Json v12.0.1\r\nNaxam.Mapbox.Forms v1.0.5.2\r\n- Affected Devices:\r\niOS 6S (the only physical iOS device I have)\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nN/A\r\n"},{"Id":"8789352968","Type":"IssuesEvent","CreatedAt":"2018-12-21T03:04:07","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4840","RelatedDescription":"Opened issue \"[Shell] ContentPage with UseSafeArea incorrectly renders\" (#4840) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have a  `ContentPage` in an app being ported to Shell. The tabs atop the page are not displayed when inside of Shell although the space is reserved; they just aren't visible. \r\n\r\n<img width=\"545\" alt=\"screenshot 2018-12-20 20 36 48\" src=\"https://user-images.githubusercontent.com/41873/50322195-baae4000-0499-11e9-94f3-d34eacd62812.png\">\r\n\r\nRemoving the UseSafeArea shows the content, however now under what would be the nav bar (my app removes the nav bar background).\r\n\r\nRelated to #4752 \r\n\r\n<img width=\"545\" alt=\"screenshot 2018-12-20 20 39 21\" src=\"https://user-images.githubusercontent.com/41873/50322264-f6e1a080-0499-11e9-9bd6-d234bc8cf291.png\">\r\n\r\n\r\nOriginal app and page:\r\nhttps://github.com/davidortinau/HowYouSay/blob/master/HowYouSay.Shared/Views/HomeView.xaml\r\n\r\nThis YConstraint appears to be the difference. Removing  it and assuming a 0 coordinate \"fixes\" the issue.  \r\n\r\nhttps://github.com/davidortinau/HowYouSay/blob/master/HowYouSay.Shared/Views/HomeView.xaml#L28\r\n\r\nBut I'm concerned that the layout renders different in Shell  than it did in the non-Shell app that uses MasterDetailPage and NavigationPage.\r\n\r\n### Expected Behavior\r\n\r\nTabs (Buttons and BoxViews) appear at the top, between the nav bar and the ListView.\r\n\r\n<img width=\"545\" alt=\"screenshot 2018-12-20 20 55 52\" src=\"https://user-images.githubusercontent.com/41873/50322179-af5b1480-0499-11e9-94f8-3b3e83c2e015.png\">\r\n\r\n### Actual Behavior\r\n\r\nThe space is there, but the elements are not visible.\r\n\r\n<img width=\"545\" alt=\"screenshot 2018-12-20 20 36 48\" src=\"https://user-images.githubusercontent.com/41873/50322195-baae4000-0499-11e9-94f3-d34eacd62812.png\">\r\n\r\nIf I hide the ListView the buttons appear to be possibly below it:\r\n\r\n<img width=\"545\" alt=\"screenshot 2018-12-20 20 52 25\" src=\"https://user-images.githubusercontent.com/41873/50322249-e92c1b00-0499-11e9-82d0-5642683b459c.png\">\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/2701354/Archive.zip)\r\n"},{"Id":"8789103895","Type":"PullRequestEvent","CreatedAt":"2018-12-21T01:36:06","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4839","RelatedDescription":"Opened pull request \"[Tizen] Supports Picker.TitleColor, FontSize, FontFamily and FontAttr\" (#4839) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdded `TitleColor` property for setting color for the  `Picker.Title`  and `FontSize`/`FontFamily`/`FontAttributes` as well. This PR is an addendum to the changes in #4701 and #662.\r\n\r\n### Issues Resolved ### \r\n- implements tizen part of #4669 \r\n- implements tizen part of #662 (for Picker)\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\nJust like other platforms, on Tizen, the visual representation of a Picker is now similar to a `Entry` (not a `Button`). Plus, `Title` is shown as a placeholder.\r\n\r\n### Before/After Screenshots ### \r\n\r\n| Before  | After |\r\n| ------------- | ------------- |\r\n| <img src=\"https://user-images.githubusercontent.com/1029134/50319643-c1759b00-050b-11e9-816d-71e535e822a0.gif\" width=\"300\">  | <img src=\"https://user-images.githubusercontent.com/1029134/50319671-dd793c80-050b-11e9-834f-1d8ba89073be.gif\" width=\"300\">  |\r\n\r\n### Testing Procedure ###\r\nUse `ControlGallery` (Picker Gallery)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard"},{"Id":"8788898397","Type":"IssuesEvent","CreatedAt":"2018-12-21T00:24:20","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4611","RelatedDescription":"Reopened issue \"How to obtain the dynamically changing editor height at runt time for Xamarin Forms UWP? \" (#4611) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn our sample, we have added custom editor and changed the height of the editor based on the given text by calling ‘InValidateMeasure’ for Xamarin Forms UWP. It works fine but when i call ‘InValidateMeasure’, 'OnSizeAllocated' and 'OnMeasure' override methods are not triggered. So, it is not possible to estimate and obtain the changed height of the editor at run time. Could you please provide your valuable suggestion on this? If it is achievable through renderer, could you please modify the sample and provide solution?\r\n\r\n**Sample:**  [CustomControl.zip](https://github.com/xamarin/Xamarin.Forms/files/2638674/CustomControl.zip)\r\n\r\nRegards,\r\nGaneshamoorthy C"},{"Id":"8788897614","Type":"IssuesEvent","CreatedAt":"2018-12-21T00:24:05","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4673","RelatedDescription":"Reopened issue \"Tab through list of entries doesnt work\" (#4673) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCannot tab through list of Entries.\r\n\r\nI have a list of entries and I am using the \"Tab\" button on the keyboard on all 3 platforms.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create list of entries\r\n2. Press tab\r\n3. see it doesnt work\r\n\r\n### Expected Behavior\r\ntab to next entry in thelist\r\n\r\n\r\n### Actual Behavior\r\nnothing happens"},{"Id":"8788868618","Type":"IssuesEvent","CreatedAt":"2018-12-21T00:14:12","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4550","RelatedDescription":"Reopened issue \"[Feedback] Cannot start debugging an UWP app\" (#4550) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>Hi,\n\nWhen I start debugging application, it builds and deploys fine but when the application is going to be start it gives following error:\n\nUnable to activate Windows Store app 'package_ family_name!App'. The activation request failed with error 'Access is denied'.\n\nevent viewer shows the error:\n'Activation for 50f1b773-5e74-4b59-b899-f7e127a185b5_htwwqjmb1yyyr!App failed. Error code: Access is denied.. Activation phase: COM ActivateExtension'\n\nI have tried to run Visual Studio as administrator without success.\n\nThat error started to happen to our main project (I don't exactly know when, maybe after updating visual studio).\nI also tried creating a new xamarin.forms project with .netstandard code sharing option and the debug threw the same error message. So in my case I can reproduce this by creating a new xamarin.forms application.\n\nVisual Studio version I'm using:\nMicrosoft Visual Studio Enterprise 2017  (2)\nVersion 15.8.9\nVisualStudio.15.Release/15.8.9+28010.2050\nMicrosoft .NET Framework\nVersion 4.7.03056\n\nInstalled Version: Enterprise\n\nVisual C++ 2017   00369-60000-00001-AA741\nMicrosoft Visual C++ 2017\n\nADL Tools Service Provider   1.0\nThis package contains services used by Data Lake tools\n\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\nApplication Insights Tools for Visual Studio\n\nASP.NET and Web Tools 2017   15.8.05085.0\nASP.NET and Web Tools 2017\n\nASP.NET Core Razor Language Services   15.8.31590\nProvides languages services for ASP.NET Core Razor.\n\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\nFor additional information, visit https://www.asp.net/\n\nAzure App Service Tools v3.0.0   15.8.05023.0\nAzure App Service Tools v3.0.0\n\nAzure Data Lake Node   1.0\nThis package contains the Data Lake integration nodes for Server Explorer.\n\nAzure Data Lake Tools for Visual Studio   2.3.5001.4\nMicrosoft Azure Data Lake Tools for Visual Studio\n\nAzure Functions and Web Jobs Tools   15.9.02046.0\nAzure Functions and Web Jobs Tools\n\nAzure Stream Analytics Tools for Visual Studio   2.3.5001.4\nMicrosoft Azure Stream Analytics Tools for Visual Studio\n\nC# Tools   2.9.0-beta8-63208-01\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\n\nCommon Azure Tools   1.10\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\n\nDevExpress.DeploymentTool   1.0\nA useful tool for deploying DevExpress assemblies.\n\nDevExpress.XtraReports.RepxPackage   10.0\nShowing the editor for REPX files.\n\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\n\nFabric.DiagnosticEvents   1.0\nFabric Diagnostic Events\n\nJavaScript Language Service   2.0\nJavaScript Language Service\n\nJavaScript Project System   2.0\nJavaScript Project System\n\nJetBrains ReSharper Ultimate 2017.3.5    Build 111.0.20180323.160610\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\n\nMicrosoft Azure HDInsight Azure Node   2.3.5001.4\nHDInsight Node under Azure Node\n\nMicrosoft Azure Hive Query Language Service   2.3.5001.4\nLanguage service for Hive query\n\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.3\nMicrosoft Azure Service Fabric Tools for Visual Studio\n\nMicrosoft Azure Stream Analytics Language Service   2.3.5001.4\nLanguage service for Azure Stream Analytics\n\nMicrosoft Azure Stream Analytics Node   1.0\nAzure Stream Analytics Node under Azure Node\n\nMicrosoft Azure Tools   2.9\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\n\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\n\nMicrosoft JVM Debugger   1.0\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\n\nMicrosoft Library Manager   1.0\nInstall client-side libraries easily to any web project\n\nMicrosoft MI-Based Debugger   1.0\nProvides support for connecting Visual Studio to MI compatible debuggers\n\nMicrosoft Visual C++ Wizards   1.0\nMicrosoft Visual C++ Wizards\n\nMicrosoft Visual Studio Tools for Containers   1.1\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit &amp; refresh your app without having to rebuild the container.\n\nMicrosoft Visual Studio VC Package   1.0\nMicrosoft Visual Studio VC Package\n\nMLGen Package Extension   1.0\nMLGen Package Visual Studio Extension Detailed Info\n\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\nSupport for debugging Mono processes with Visual Studio.\n\nNuGet Package Manager   4.6.0\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\n\nOffice Developer Tools for Visual Studio 2017 ENU   15.0.27907.01\nMicrosoft Office Developer Tools for Visual Studio 2017 ENU\n\nOracle Developer Tools for Visual Studio   12.2.0.1.0\nOracle Developer Tools for Visual Studio Copyright (c) 2005, 2017\n\nProjectServicesPackage Extension   1.0\nProjectServicesPackage Visual Studio Extension Detailed Info\n\nRedgate SQL Change Automation   3.0.18291.2122\nExtend DevOps processes to your SQL Server databases and safely automate database deployments.\n\nVisit https://www.red-gate.com/sca/productpage for more information.\n\nCopyright (C) 2011 Red Gate Software Ltd. All rights reserved.\n\nThis software contains components from Component Owl.\nSQL Server is a registered trademark of Microsoft Corporation.\nVisual Studio is a registered trademark of Microsoft Corporation.\n\nSQL Change Automation contains code from the following open source software:\n\nNuGet https://www.nuget.org/\nSQL LocalDB Wrapper https://github.com/martincostello/sqllocaldb\nAutofac https://autofac.org/\nJson.NET https://json.net/\nMahApps.Metro http://mahapps.com/\nSemVer https://github.com/maxhauser/semver\nLog4Net http://logging.apache.org/log4net/\nStringTemplate https://github.com/antlr/stringtemplate4\nExtended WPF Toolkit https://wpftoolkit.codeplex.com/\nCode InfoBox VSX http://www.codeproject.com/Articles/55196/Code-InfoBox-Visual-Studio-Extension-VSX\nOctoPack https://github.com/OctopusDeploy/OctoPack\nSQLite https://sqlite.org/\n\nThis product contains icons from http://www.visualpharm.com distributed under a free backlink license.\n\nFor license details or other notices relating to the above software, please see NOTICE.TXT and EULA.rtf in the SQL Change Automation application folder.\n    \n\nRedgate SQL Prompt   9.4.3.7121\nWrite, format, and refactor SQL effortlessly\n\nResourcePackage Extension   1.0\nResourcePackage Visual Studio Extension Detailed Info\n\nResourcePackage Extension   1.0\nResourcePackage Visual Studio Extension Detailed Info\n\nSnapshot Debugging Extension   1.0\nSnapshot Debugging Visual Studio Extension Detailed Info\n\nSQL Server Data Tools   15.1.61808.07020\nMicrosoft SQL Server Data Tools\n\nTest Adapter for Boost.Test   1.0\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\n\nTest Adapter for Google Test   1.0\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\n\nToolWindowHostedEditor   1.0\nHosting json editor into a tool window\n\nTypeScript Tools   15.8.20822.2001\nTypeScript Tools for Microsoft Visual Studio\n\nVisual Basic Tools   2.9.0-beta8-63208-01\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\n\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\nMicrosoft Visual F# Tools 10.2 for F# 4.5\n\nVisual Studio Code Debug Adapter Host Package   1.0\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\n\nVisual Studio Tools for Containers   1.0\nVisual Studio Tools for Containers\n\nVisual Studio Tools for Universal Windows Apps   15.0.28010.2046\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\n\nVisualStudio.Mac   1.0\nMac Extension for Visual Studio\n\nWorkflow Manager Tools 1.0   1.0\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\n\nXamarin   4.11.0.779 (d15-8@ff915e800)\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\n\nXamarin Designer   4.15.12 (d7ff6f39c)\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\n\nXamarin Templates   1.1.118 (4217ee9)\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\n\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\nXamarin.Android Reference Assemblies and MSBuild support.\n\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\n\nXsd2Code++   1.0\nxsd2code++ Advanced and flexible code generator from XML schemas\n\nXtraReports package   1.0\nXtraReports package</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/387273/cannot-start-debugging-an-uwp-app.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/732583\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[736029](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/736029)"},{"Id":"8787598391","Type":"IssuesEvent","CreatedAt":"2018-12-20T19:12:52","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4837","RelatedDescription":"Opened issue \"[Shell] Cannot pass querystring value to registered route\" (#4837) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen a page is not in a `ShellContent`, the querystring values aren't passed/applied.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nRegister a route like:\r\n\r\n```\r\nRouting.RegisterRoute(\"second\",  typeof(Page2));\r\n```\r\n\r\nNavigate to it like:\r\n\r\n```\r\nawait (App.Current.MainPage as Shell).GoToAsync($\"app:///base/second?id=new\");\r\n```\r\n\r\nAnd retrieve the query property like:\r\n\r\n```\r\n[QueryProperty(\"ID\", \"id\")]\r\n    public partial class Page2 : ContentPage\r\n    {\r\n        public Page2()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n        \r\n        private string _id = \"Broken\";\r\n        public string ID\r\n        {\r\n            get { return _id; }\r\n            set\r\n            {\r\n                _id = value;\r\n                IDLabel.Text = _id;\r\n\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe  ID is set.\r\n\r\n### Actual Behavior\r\n\r\nNot set.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n### Reproduction Link\r\n\r\n[Archive.zip](https://github.com/xamarin/Xamarin.Forms/files/2700181/Archive.zip)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8788473448","Type":"PullRequestEvent","CreatedAt":"2018-12-20T22:20:14","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5317","RelatedDescription":"Opened pull request \"[XHarness] Reneable Mono.Data.Tds tests on watch os.\" (#5317) at xamarin/xamarin-macios","RelatedBody":" Ignore the failing tests and run the rest. Fixes https://github.com/xamarin/maccore/issues/1152"},{"Id":"8788458407","Type":"PullRequestEvent","CreatedAt":"2018-12-20T22:16:27","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5316","RelatedDescription":"Opened pull request \"[XHarness] Reenable the NUnit Corlib tests from the iOS Mono SDK.\" (#5316) at xamarin/xamarin-macios","RelatedBody":" Reenable the tests on iOS/TvOS/WatchOS. Fixes https://github.com/xamarin/maccore/issues/1153"},{"Id":"8788445221","Type":"PullRequestEvent","CreatedAt":"2018-12-20T22:13:18","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5288","RelatedDescription":"Merged pull request \"[XHarness] Add support for ignore files in the blc tests\" (#5288) at xamarin/xamarin-macios","RelatedBody":"This PR adds support to the use of *.ignore files for iOS/tvOS/WatchOS. The files are very similar to those that are use in xtro. We have:\r\n\r\n* common-{TestProjectName}.ignore: For those tests that fail in all platforms.\r\n* tvOS-{TestProjectName}.ignore: For tvOS specific failures.\r\n* watchOS-{TestProjectName}.ignore: For watchOS specific failures.\r\n* iOS-{TestProjectName}.ignore: for iOS specific projects.\r\n\r\nTwo test projects that were ignored previously have been added to show that the code does as advertised:\r\n\r\n*  SystemDataXunit: xUnit test project example\r\n* SystemServiceModelWebTests: NUnit test project example.\r\n\r\nThe files take the name of the failing tests, although we do support ignoring by class/namespace and other combinations, that would make the *.ignore files format more complicated and it is not worth it."},{"Id":"8787129962","Type":"PullRequestEvent","CreatedAt":"2018-12-20T17:39:00","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5315","RelatedDescription":"Opened pull request \"[d16-0] [registrar] Throw EntryPointNotFoundException when generating P/Invoke wrappers for objc_msgSend*_stret on arm64. Fixes #5183.\" (#5315) at xamarin/xamarin-macios","RelatedBody":"objc_msgSend*_stret doesn't exist on arm64, so trying to call these functions\nin our generated P/Invoke wrappers will result in a clang error:\n\n    [...]/pinvokes.m:180:69: error: 'objc_msgSend_stret' is unavailable: not available in arm64 (TaskId:243)\n\nSo instead generate a call to throw an EntryPointNotFoundException (which is\nexactly what would happen if we didn't generate the P/Invoke wrapper).\n\nFixes https://github.com/xamarin/xamarin-macios/issues/5183.\n\nBackport of #5312.\n\n/cc @rolfbjarne "},{"Id":"8787125649","Type":"PullRequestEvent","CreatedAt":"2018-12-20T17:38:09","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5312","RelatedDescription":"Merged pull request \"[registrar] Throw EntryPointNotFoundException when generating P/Invoke wrappers for objc_msgSend*_stret on arm64. Fixes #5183.\" (#5312) at xamarin/xamarin-macios","RelatedBody":"objc_msgSend*_stret doesn't exist on arm64, so trying to call these functions\nin our generated P/Invoke wrappers will result in a clang error:\n\n    [...]/pinvokes.m:180:69: error: 'objc_msgSend_stret' is unavailable: not available in arm64 (TaskId:243)\n\nSo instead generate a call to throw an EntryPointNotFoundException (which is\nexactly what would happen if we didn't generate the P/Invoke wrapper).\n\nFixes https://github.com/xamarin/xamarin-macios/issues/5183."},{"Id":"8787125633","Type":"IssuesEvent","CreatedAt":"2018-12-20T17:38:09","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5183","RelatedDescription":"Closed issue \"\"framework native references\" not compiling\" (#5183) at xamarin/xamarin-macios","RelatedBody":"When adding a \"framework native references\" in VS2017 and building with a mac, the intermediate xcode build fails with:  ```.../mtouch-cache/pinvokes.m:180:69: error: 'objc_msgSend_stret' is unavailable: not available in arm64```\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an iOS project\r\n2. Add a \"framework native references\", which is a folder containing C/C++ headers and a kind of binary file without extension\r\n3. Set its properties: IsC++: true, SmartLink: true\r\n4. Build the project from VS2017 with a mac connected\r\n\r\n### Expected Behavior\r\nBuilds fine\r\n\r\n### Actual Behavior\r\nFails to build\r\n\r\n### Environment\r\nXamarin iOS SDK 12.2.1.10\r\nVS2017 15.9.2\r\n\r\n### Build Logs\r\n```\r\n3>  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang  -framework Foundation -weak_framework CFNetwork -Xlinker -rpath -Xlinker @executable_path /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.10/SDKs/MonoTouch.iphoneos.sdk/usr/lib/libxamarin-debug.dylib /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.10/SDKs/MonoTouch.iphoneos.sdk/usr/lib/libmonosgen-2.0.dylib -stdlib=libc++ -lz -gdwarf-2 -I/Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.10/SDKs/MonoTouch.iphoneos.sdk/usr/include -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk -Qunused-arguments -miphoneos-version-min=12.0 -arch arm64 -shared -liconv -install_name @rpath/libpinvokes.dylib -fapplication-extension -o /Volumes/Ursa/Users/minimac2/Library/Caches/Xamarin/mtbs/builds/Air.iOS/e664f4b58bd933733e069046d1c84d07/obj/iPhone/Debug/mtouch-cache/arm64/libpinvokes.dylib -x objective-c++ -DDEBUG /Volumes/Ursa/Users/minimac2/Library/Caches/Xamarin/mtbs/builds/Air.iOS/e664f4b58bd933733e069046d1c84d07/obj/iPhone/Debug/mtouch-cache/pinvokes.m (TaskId:243)\r\n3>  /Volumes/Ursa/Users/minimac2/Library/Caches/Xamarin/mtbs/builds/Air.iOS/e664f4b58bd933733e069046d1c84d07/obj/iPhone/Debug/mtouch-cache/pinvokes.m:180:69: error: 'objc_msgSend_stret' is unavailable: not available in arm64 (TaskId:243)\r\n3>                          return ((func_xamarin_pinvoke_wrapper_CGSize_objc_msgSend_stret) objc_msgSend_stret) (receiver, selector); (TaskId:243)\r\n3>                                                                                           ^  (TaskId:243)\r\n3>  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/usr/include/objc/message.h:133:1: note: 'objc_msgSend_stret' has been explicitly marked unavailable here (TaskId:243)\r\n3>  objc_msgSend_stret(id _Nullable self, SEL _Nonnull op, ...) (TaskId:243)\r\n3>  ^  (TaskId:243)\r\n3>  /Volumes/Ursa/Users/minimac2/Library/Caches/Xamarin/mtbs/builds/Air.iOS/e664f4b58bd933733e069046d1c84d07/obj/iPhone/Debug/mtouch-cache/pinvokes.m:194:74: error: 'objc_msgSendSuper_stret' is unavailable: not available in arm64 (TaskId:243)\r\n3>                          return ((func_xamarin_pinvoke_wrapper_CGSize_objc_msgSendSuper_stret) objc_msgSendSuper_stret) (receiver, selector); (TaskId:243)\r\n3>                                                                                                ^  (TaskId:243)\r\n3>  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/usr/include/objc/message.h:143:1: note: 'objc_msgSendSuper_stret' has been explicitly marked unavailable here (TaskId:243)\r\n3>  objc_msgSendSuper_stret(struct objc_super * _Nonnull super, (TaskId:243)\r\n3>  ^  (TaskId:243)\r\n\r\n...\r\n\r\nerror MT4002: Failed to compile the generated code for P/Invoke methods. Please file a bug report at http://bugzilla.xamarin.com\r\n```\r\n\r\n\r\nThe pinvokes.m file contains offending code like this:\r\n\r\n```\r\n\t// EntryPoint: objc_msgSend_stret\r\n\t// Managed method: ObjCRuntime.Messaging.CGSize_objc_msgSend_stret\r\n\t// Signature: CGSize objc_msgSend_stret (CGSize*, void *, void *)\r\n\ttypedef CGSize(*func_xamarin_pinvoke_wrapper_CGSize_objc_msgSend_stret) (void * receiver, void * selector);\r\n\tCGSize\r\n\txamarin_pinvoke_wrapper_CGSize_objc_msgSend_stret (void * receiver, void * selector)\r\n\t{\r\n\t\t@try {\r\n\t\t\treturn ((func_xamarin_pinvoke_wrapper_CGSize_objc_msgSend_stret) objc_msgSend_stret) (receiver, selector);\r\n\t\t} @catch (NSException *exc) {\r\n\t\t\txamarin_process_nsexception (exc);\r\n\t\t}\r\n\t}\r\n```\r\n\r\nHave i done something wrong or is it a bug ?\r\nI've checked doc for objc_msgSend_stret and it does not seem to be obsolete.\r\n\r\n"},{"Id":"8786904071","Type":"PullRequestEvent","CreatedAt":"2018-12-20T16:58:09","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5314","RelatedDescription":"Opened pull request \"[d16-0] [foundation] Respect HttpClient.Timeout for NSUrlSessionHandler. Fix #5190\" (#5314) at xamarin/xamarin-macios","RelatedBody":"When `HttpClient` is used it might not be possible to set custom\nproperties on the handler.\n\nThis PR avoids a fight between the `HttpClient.Timeout` and the ones that\n`NSURLSession` provides - making its use, as default, working as expected\n\nIt is still possible to set those custom properties when creating the\n`NSUrlSessionHandler` manually, so there's no loss of functionalities.\n\nAdding a unit test would be tricky since it depends on external sites and\nrequires \"enough\" delays to trigger (both leading to false positives over\ntime).\n\nNotes\n* HttpClientHandler timeout is broken -> https://github.com/mono/mono/issues/12100\n* CFNetworkHandler is broken when no data is received -> https://github.com/xamarin/xamarin-macios/issues/5289\n\nFixes https://github.com/xamarin/xamarin-macios/issues/5190\n\nBackport of #5290.\n\n/cc @spouliot "},{"Id":"8786820812","Type":"PullRequestEvent","CreatedAt":"2018-12-20T16:44:14","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5313","RelatedDescription":"Merged pull request \"[d16-0] Bump mono to get fix for #5252.\" (#5313) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/5252.\n\nCommit list for mono/mono:\n\n* mono/mono@3f799cc3c78 [exceptions] Verbose logging for cfa_reg assertion (#11916)\n* mono/mono@0d9e781cb65 [jit] Fix a buffer overflow in mini_get_gsharedvt_out_sig_wrapper_signature ().\n* mono/mono@35a1ed626df Fix IndexOutOfRangeException in MethodInfo.ReturnParameter.IsDefined(type)\n* mono/mono@03b9354ed95 [MacSDK] Bump NuGet to 4.8.1\n\nDiff: https://github.com/mono/mono/compare/f919fb58c4e3f803659e403814110697162750f6...3f799cc3c78810b4d6ca3d468f7ce4b4b6c8195c\n\nBackport of #5308.\n\n/cc @rolfbjarne "},{"Id":"8786717558","Type":"PullRequestEvent","CreatedAt":"2018-12-20T16:27:47","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5311","RelatedDescription":"Merged pull request \"[registrar] Remove unused parameter from function call.\" (#5311) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8786715537","Type":"PullRequestEvent","CreatedAt":"2018-12-20T16:27:27","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5310","RelatedDescription":"Merged pull request \"[mtouch] Ignore linker warnings about our own libraries being built for iOS 7.0 when deployment target is iOS 6.0. Fixes #5092.\" (#5310) at xamarin/xamarin-macios","RelatedBody":"Only the arm64 slice are built for iOS 7.0 (because that's when arm64 was\nintroduced), the arm7(s) slices are built for iOS 6.0, which means it's safe\nto ignore this warning.\n\nFixes https://github.com/xamarin/xamarin-macios/issues/5092."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":178,"FavoriteCount":70,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":153,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":142,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null}]}},"RunOn":"2018-12-21T05:31:13.6857194Z","RunDurationInMilliseconds":4440}