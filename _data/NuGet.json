{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11215390012","Type":"PullRequestEvent","CreatedAt":"2020-01-07T01:59:32","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7799","RelatedDescription":"Opened pull request \"Functional test script update to wait for the service to start up after the deployment\" (#7799) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nApp service deployment reports success way before the service initialization completes successfully and is able to serve requests. This breaks our tests that encounter 502 responses and fail.\r\nThis change adds a delay and a response test to the test run script to make sure we run tests against the working service."},{"Id":"11215375430","Type":"PullRequestEvent","CreatedAt":"2020-01-07T01:55:55","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7798","RelatedDescription":"Opened pull request \"HTTP to HTTPS redirect differences between App and Cloud services\" (#7798) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nCloud and app services handle the HTTP to HTTPS redirect differently (we can enable \"Always HTTPS\" for an app service, while we can't do that for the cloud service), so the test update is required to accommodate for that difference.\r\nThis change also requires the test configuration to be updated."},{"Id":"11215152526","Type":"PullRequestEvent","CreatedAt":"2020-01-07T01:04:07","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7797","RelatedDescription":"Merged pull request \"Merge branch 'dev' to master\" (#7797) at NuGet/NuGetGallery","RelatedBody":"Handle: https://github.com/nuget/nugetgallery/issues/7796"},{"Id":"11214847939","Type":"PullRequestEvent","CreatedAt":"2020-01-06T23:52:21","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7797","RelatedDescription":"Opened pull request \"Merge branch 'dev' to master\" (#7797) at NuGet/NuGetGallery","RelatedBody":"Handle: https://github.com/nuget/nugetgallery/issues/7796"},{"Id":"11214811498","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:43:59","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7796","RelatedDescription":"Opened issue \"[2020-01-06] Deployment\" (#7796) at NuGet/NuGetGallery","RelatedBody":"NuGetGallery\r\n- [ ] Merge dev to master\r\n- [ ] DEV\r\n    - [ ] NuGetGallery\r\n- [ ] INT\r\n    - [ ] NuGetGallery\r\n- [ ] PROD\r\n    - [ ] NuGetGallery"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11215434421","Type":"IssuesEvent","CreatedAt":"2020-01-07T02:10:11","Actor":"OzBob","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9019","RelatedDescription":"Opened issue \"Restore fails for 4.4.* and 404 on myget source\" (#9019) at NuGet/Home","RelatedBody":"Restoring a package with an version with a *, and referencing a VSIX myget source feed and building the project in Visual Studio results in \r\n'Error occurred while restoring NuGet packages: Failed to retrieve information'\r\n\r\nMy sources are:\r\nmy local folder nuget packages source\r\nnuget.org\r\ndotnet-core myget\r\nand\r\nWindows Template Studio VSIX myget feed \r\n\r\n\r\nA restore would fail for packages that use wildcards in their version, e.g. 4.4.*, but 4.4.0 would succeed.\r\n\r\nIf I remove the Windows Template Studio myget feed it would work as expected.\r\n\r\n@dasetser (from the microsoft WCF team) and I have replicated this.\r\n\r\nNuGet product used: VS UI and dotnet.exe.\r\n\r\nNuGet version (x.x.x.xxx):5.5.0.6293\r\n\r\ndotnet.exe --version:3.1.100\r\n\r\nVS version: 16.5.0 Preview 1.0\r\n\r\nOS version: win10 v1903:\r\n\r\n## Detailed repro steps:\r\n\r\n1. In Visual Studio or commandline: create a new Console App: dotnet new console\r\n\r\n2. Add a Service Reference to a WSDL/.svc endpoint. On VS right click Dependencies and choose 'Connected Service' then 'Microsoft WCF Web Service Reference Provider'. On command prompt run dotnet-svcutil http://gcomputer.net/webservices/dilbert.asmx?WSDL\r\n\r\n3. In VS add 'https://www.myget.org/F/windows-template-studio-nightly/vsix' as the last nuget source.\r\n\r\n4. Build the project in VS or dotnet restore\r\n\r\nOutput when using dotnet restore from command line:\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://www.myget.org/F/windows-template-studio-nightly/vsix/FindPackagesById()?id='System.ServiceModel.Duplex'&semVerLevel=2.0.0'.\r\n  Response status code does not indicate success: 404 (Not Found).\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100\\NuGet.targets(123,5): error : Failed to retrieve information about 'System.ServiceModel.Security' from remote source 'https://www.myget.org/F/windows-template-studio-nightly/vsix/FindPackagesById()?id='System.ServiceModel.Security'&semVerLevel=2.0.0'. [...dilbert2\\dilbert2.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100\\NuGet.targets(123,5): error :   Response status code does not indicate success: 404 (Not Found). [...dilbert2\\dilbert2.csproj]\r\n\r\n5. Remove myget source\r\n\r\n6. dotnet restore\r\n\r\n7. OK"},{"Id":"11215288991","Type":"IssuesEvent","CreatedAt":"2020-01-07T01:34:54","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9018","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Visual Studio : PMUI for Project Package References\" (#9018) at NuGet/Home","RelatedBody":"Implement changes needed to project level - PMUI."},{"Id":"11215277524","Type":"IssuesEvent","CreatedAt":"2020-01-07T01:32:09","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9017","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Close of the Visual Studio UI CPVM user scenarios\" (#9017) at NuGet/Home","RelatedBody":"This work will consist from:\r\n1. Work with PM and UX teams to agree on the final design for UI regarding CPVM.\r\n2. Review the UI design doc with Partners (msbuild, dotnet teams)\r\n3. Reiterate until everyone in sync. "},{"Id":"11215259663","Type":"IssuesEvent","CreatedAt":"2020-01-07T01:28:05","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9016","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Design document for Visual Studio - CPVM integration\" (#9016) at NuGet/Home","RelatedBody":""},{"Id":"11215250852","Type":"IssuesEvent","CreatedAt":"2020-01-07T01:25:57","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9015","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Visual Studio integration (MVP scenarios)\" (#9015) at NuGet/Home","RelatedBody":""},{"Id":"11215241999","Type":"IssuesEvent","CreatedAt":"2020-01-07T01:23:56","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9014","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] CLI - MVP commands\" (#9014) at NuGet/Home","RelatedBody":"https://github.com/NuGet/Home/wiki/Centrally-managing-NuGet-package-versions"},{"Id":"11214880269","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:59:45","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5796","RelatedDescription":"Closed issue \"VS Package Manager. Icons lost after scrolling\" (#5796) at NuGet/Home","RelatedBody":"Using Visual Studio 2017 package manager, after scrolling a couple of times some icons are replaced with the default.\r\n\r\nSee attached animated GIF.\r\n\r\n\r\n![nugetscroll](https://user-images.githubusercontent.com/1918324/29640158-69f596ae-8812-11e7-9901-67a1b266fb0c.gif)\r\n"},{"Id":"11214804967","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:42:27","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8050","RelatedDescription":"Closed issue \"Signing: Enable tests that used OCSP on Linux\" (#8050) at NuGet/Home","RelatedBody":"On Linux, OCSP are not supported in netstandard 2.0, therefore tests that used OCSP were disabled for this platform. \r\nSince .Net Standard 2.1 implements OCSP, we should enable all the tests used OCSP on Linux.\r\n\r\nThis is one of the breakdown tasks from NuGet/NuGet.Client#2706"},{"Id":"11214729822","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:26:12","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8047","RelatedDescription":"Closed issue \"Signing: Fix 22 test failures on Mac OS\" (#8047) at NuGet/Home","RelatedBody":"There are still 22 test failures on Mac OS. \r\n* [x] 4 of this fail because chain building for verification doesnâ€™t call the OCSP server. It seems like OCSP is called once for signing the package, but then when trying to build the chain for the same package in verification, the OCSP server is not being hit.\r\n \r\n* [x] This 4 tests seem to behave differently on Mojave vs Sierra. On Sierra chain building fails in signing, while in Mojave signing succeeds but then verification fails with the OCSP server issues. \r\nThe chain building issues in Sierra seem similar to the issues in the 18 other tests that don't repro in Mojave, so they might be related.\r\n\r\n* [x] Other 18 I have not been able to repro \r\n\r\nThe machine I use is on MacOS Mojave (10.14.2) while the CI is on MacOS Sierra (10.12.6) so there might be fixes done by the underlaying OS. \r\nIn MacOS Mojave the string \"The trust policy was not trusted.\" changed to \"The certificate was not trusted.\" for Untrusted Root. If CI is updated, this would need to be updated for 7 tests to pass.\r\nOnly 13.16% of MacOS users use Sierra, while 36.57% use Mojave (see http://gs.statcounter.com/macos-version-market-share/desktop/worldwide)\r\n\r\nThis is one of the breakdown tasks from NuGet/NuGet.Client#2706"},{"Id":"11214708991","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:21:48","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9013","RelatedDescription":"Opened issue \"Re-enable OSX failing signing tests\" (#9013) at NuGet/Home","RelatedBody":"This 4 tests seem to behave differently on Mojave vs Sierra. On Sierra chain building fails in signing, while in Mojave signing succeeds but then verification fails with the OCSP server issues.\r\nThe chain building issues in Sierra seem similar to the issues in the 18 other tests that don't repro in Mojave, so they might be related.\r\n\r\nThe tests have been disabled on CI and need to be fixed and re-enabled."},{"Id":"11214654713","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:10:57","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7606","RelatedDescription":"Closed issue \"Manage .NET XPLAT cryptography \" (#7606) at NuGet/Home","RelatedBody":"The dotnet APIs have specific XPLAT behaviors that we need to address when tackling signing and verification XPLAT. This will mean either document known behavior or do functional changes in specific platforms.\r\n\r\nSome things are:\r\n\r\n- [ ] X509RevocationMode.Offline is not supported on macOS\r\n- [ ] OSCP are not supported in Linux\r\n\r\nMore info: https://github.com/dotnet/corefx/blob/master/Documentation/architecture/cross-platform-cryptography.md\r\n\r\n**Note:** Make sure to read the document before implementing since it might change.\r\n"},{"Id":"11214560532","Type":"IssuesEvent","CreatedAt":"2020-01-06T22:52:42","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9012","RelatedDescription":"Opened issue \"rebase main signing branch on top of latest dev\" (#9012) at NuGet/Home","RelatedBody":"It's been a while since we've done a rebase, so once #3168 is merged into `dev-feature-xplatVerification`, we should go do that."},{"Id":"11214189893","Type":"IssuesEvent","CreatedAt":"2020-01-06T21:50:22","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9011","RelatedDescription":"Opened issue \"Broken test in SignCommandRunnerTests Tests\" (#9011) at NuGet/Home","RelatedBody":"In SignCommandRunnerTests ,\r\ntestExecuteCommandAsync_WithAmbiguousMatch_ThrowsAsync failed on Linux and not run on Mac."},{"Id":"11213853842","Type":"IssuesEvent","CreatedAt":"2020-01-06T20:59:34","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9010","RelatedDescription":"Opened issue \"Signing: Design dotnet package signing commands\" (#9010) at NuGet/Home","RelatedBody":"Write up an RFC describing the commands and options and get it reviewed before implementing the actual commands."},{"Id":"11213427087","Type":"IssuesEvent","CreatedAt":"2020-01-06T19:56:20","Actor":"jomonson","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9009","RelatedDescription":"Opened issue \"Ubuntu nuget push fails when depending on Grpc.AspNetCore and compiling sources\" (#9009) at NuGet/Home","RelatedBody":"NuGet product used (dotnet.exe):\r\ndotnet.exe --version (3.1.100):\r\n\r\nOS version (Ubuntu WSL subsystem 18.04LTS):\r\n\r\nWorked before? If so, with which NuGet version:\r\nWorks on Windows using NuGet.exe\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. **Create a csproj file with the following:**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <Platforms>x64</Platforms>\r\n    <PlatformTarget>x64</PlatformTarget>\r\n    <DebugType>portable</DebugType>\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <PackageId>SomeId</PackageId>\r\n    <Version>1.0.3</Version>\r\n    <Authors>whatever</Authors>\r\n    <Company>whatever</Company>\r\n    <RepositoryUrl>https://github.com/private/private2</RepositoryUrl>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Protobuf Include=\"../**/*.proto\" ProtoRoot=\"..\" GrpcServices=\"Both\"/>\r\n    <PackageReference Include=\"Grpc.AspNetCore\" Version=\"2.23.2\"/>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n**have a sample .proto file.**\r\n**have a nuget.config file:**\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n        <add key=\"github\" value=\"https://nuget.pkg.github.com/private/index.json\" />\r\n    </packageSources>\r\n    <packageSourceCredentials>\r\n        <github>\r\n            <add key=\"Username\" value=\"whatever\" />\r\n            <add key=\"ClearTextPassword\" value=\"private3\" />\r\n        </github>\r\n    </packageSourceCredentials>\r\n</configuration>\r\n```\r\nrun:\r\n`dotnet pack --configuration Release`\r\ndotnet nuget push bin/Release/SomeId.1.0.3.nupkg -s github\r\n\r\nThe above fails. The above **works** only if removing `<PackageReference Include=\"Grpc.AspNetCore\" Version=\"2.23.2\"/>` from the .csproj or if specifying GRPC not to build the sources.\r\n\r\nThe resulting .nupkg files differ from 4kb to 140kb. Looking in Wireshark, I see that the DNS requests differ in order when executing the working version versus when executing the non-working version. The working version executes A and then AAAA to nuget.pkg.github.com and is responded with first A and then AAAA. The non-working version executes A and then AAAA to the same url but gets first the AAAA and then the A responses. I don't know if that's related but the later exchange of packets is done on different ips. \r\n\r\nThe resulting logs for the failing version is as follows:\r\n```\r\nwarn : No API Key was provided and no API Key could be found for 'https://nuget.pkg.github.com/private'. To save an API Key for a source use the 'setApiKey' command.\r\ninfo : Pushing SomeId.1.0.3.nupkg to 'https://nuget.pkg.github.com/private'...\r\ninfo :   PUT https://nuget.pkg.github.com/private/\r\ninfo : An error was encountered when fetching 'PUT https://nuget.pkg.github.com/private/'. The request will now be retried.\r\ninfo : An error occurred while sending the request.\r\ninfo :   The response ended prematurely.\r\ninfo :   PUT https://nuget.pkg.github.com/private/\r\ninfo : An error was encountered when fetching 'PUT https://nuget.pkg.github.com/private/'. The request will now be retried.\r\ninfo : An error occurred while sending the request.\r\ninfo :   The response ended prematurely.\r\ninfo :   PUT https://nuget.pkg.github.com/private/\r\nerror: An error occurred while sending the request.\r\nerror:   The response ended prematurely.\r\n\r\n```\r\n### Verbose Logs\r\n\r\ndotnet nuget push does not contain a verbosity diag flag.\r\nerror: Unrecognized option '--verbosity'\r\n\r\ntried using -n false and it didn't help"},{"Id":"11213356794","Type":"IssuesEvent","CreatedAt":"2020-01-06T19:46:43","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9008","RelatedDescription":"Opened issue \"Test ExtractPackageAsync_RequireMode_UnsignedPackage_InCoreCLR_SkipsSigningVerificationAsync is out of date when xplat verification is implemented\" (#9008) at NuGet/Home","RelatedBody":"Test ExtractPackageAsync_RequireMode_UnsignedPackage_InCoreCLR_SkipsSigningVerificationAsync is checking if unsigned package will skip verification in CoreCLR in RequireMode during extraction(restore).\r\nThis test should be disabled when xplat verification is implemented, as it should be verified.\r\n\r\nWe need to make sure the verification xplat is tested when we disable this test."},{"Id":"11213334310","Type":"IssuesEvent","CreatedAt":"2020-01-06T19:43:42","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9007","RelatedDescription":"Opened issue \"Smart context menus in the solution explorer - show only when applicable\" (#9007) at NuGet/Home","RelatedBody":"The https://github.com/NuGet/Home/issues/8956 effort will add \"update\" context menus. \r\n\r\nThis context menu will be shown for every package. \r\n\r\nIdeally this context menu is only shown when applicable, like if there are updates available (or a next step, applicable updates available). \r\n\r\nA comparable experience is the VS for Mac solution explorer. \r\n\r\n<img width=\"529\" alt=\"Screen Shot 2020-01-02 at 11 49 31 AM\" src=\"https://user-images.githubusercontent.com/2878341/71843808-8cd27400-3079-11ea-93cd-9e065a18ee86.png\">\r\n\r\nfyi @anangaur @donnie-msft "},{"Id":"11213013098","Type":"IssuesEvent","CreatedAt":"2020-01-06T18:58:27","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9006","RelatedDescription":"Opened issue \"XPlat Signing: dotnet commands\" (#9006) at NuGet/Home","RelatedBody":"This epic covers the design and implementation of `dotnet sign` and `dotnet verify` (or whatever they end up being called)."},{"Id":"11213003771","Type":"IssuesEvent","CreatedAt":"2020-01-06T18:57:09","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9005","RelatedDescription":"Opened issue \"XPlat Signing: Package signing\" (#9005) at NuGet/Home","RelatedBody":"This epic covers the remainder of tasks related to signing as far as current support goes:\n\n1. Enable all signature tests\n2. Make sure `nuget.exe sign` works cross-platform."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-07T05:30:46.9979113Z","RunDurationInMilliseconds":2058}