{"Data":{"GitHub":{"Issues":[{"Id":"554489330","IsPullRequest":false,"CreatedAt":"2020-01-24T00:47:21","Actor":"antoniovs1029","Number":"4700","RawContent":null,"Title":"Using PlattCalibratorTransformer with custon name for Score Column","State":"open","Body":"### Issue\r\n\r\n- **What did you do?**\r\nI tried to create a model with a PlattCalibratorEstimator that uses a `scoreColumnName` with a name different from \"Score\" (as done through [this API](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.binaryclassificationcatalog.calibratorscatalog.platt?view=ml-dotnet#Microsoft_ML_BinaryClassificationCatalog_CalibratorsCatalog_Platt_System_String_System_String_System_String_))\r\n\r\n- **What happened?**\r\nAfter fitting the estimator, and while trying to transform the input dataview, the following exception is thrown:\r\n`System.InvalidOperationException: 'The data to calibrate contains no 'Score' column'`\r\n\r\n- **What did you expect?**\r\nThe model to work the same way as if I had used the name \"Score\"\r\n\r\nFurthermore, I couldn't find any sample or test that actually used the optional parameter `scoreColumnName` of PlattCalibratorEstimator, or the other parameters (such as labelColumnName). So adding such tests might be also necessary.\r\n\r\n### Source code / logs\r\nIn EXAMPLE 1 I show that it works if my score column is named \"Score\". But if I change the name, then it doesn't work.\r\n\r\n```C#\r\nusing Microsoft.ML;\r\n\r\nnamespace Platt2\r\n{\r\n    public static class Platt2\r\n    {\r\n\r\n        class ModelInput\r\n        {\r\n            public bool Label { get; set; }\r\n            public float Score { get; set; }\r\n        }\r\n\r\n        class ModelInput2\r\n        {\r\n            public bool Label { get; set; }\r\n            public float ScoreX { get; set; }\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            var mlContext = new MLContext(seed: 0);\r\n\r\n            // EXAMPLE 1 - Works\r\n            IDataView data = mlContext.Data.LoadFromEnumerable<ModelInput>(\r\n                new ModelInput[]\r\n                {\r\n                                new ModelInput { Score = 10, Label = true },\r\n                                new ModelInput { Score = 15, Label = false },\r\n                }\r\n            );\r\n\r\n            var calibratorEstimator = mlContext.BinaryClassification.Calibrators\r\n                .Platt();\r\n\r\n            var calibratorTransformer = calibratorEstimator.Fit(data);\r\n            var finalData = calibratorTransformer.Transform(data);\r\n            var prev = finalData.Preview();\r\n\r\n\r\n            // EXAMPLE 2 - Doesn't Work\r\n            IDataView data2 = mlContext.Data.LoadFromEnumerable<ModelInput2>(\r\n                new ModelInput2[]\r\n                {\r\n                                new ModelInput2 { ScoreX = 10, Label = true },\r\n                                new ModelInput2 { ScoreX = 15, Label = false },\r\n                }\r\n            );\r\n\r\n            calibratorEstimator = mlContext.BinaryClassification.Calibrators\r\n                .Platt(scoreColumnName: \"ScoreX\");\r\n\r\n            calibratorTransformer = calibratorEstimator.Fit(data2);\r\n            finalData = calibratorTransformer.Transform(data2); // Throws exception\r\n            prev = finalData.Preview();\r\n\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4700","RelatedDescription":"Open issue \"Using PlattCalibratorTransformer with custon name for Score Column\" (#4700)"},{"Id":"554485803","IsPullRequest":true,"CreatedAt":"2020-01-24T00:33:23","Actor":"antoniovs1029","Number":"4699","RawContent":null,"Title":"Added Onnx Export to PlattCalibratorTransformer","State":"open","Body":"`PlattCalibrator` already had a `SaveAsOnnx` method ([link](https://github.com/dotnet/machinelearning/blob/2267f8d709ad053a5db5867abb396c960173d6ef/src/Microsoft.ML.Data/Prediction/Calibrator.cs#L1739)) which was called when saving to Onnx a `PlattCalibrator` through a `CalibratedModelParameter` class (such as in [here](https://github.com/dotnet/machinelearning/blob/2267f8d709ad053a5db5867abb396c960173d6ef/src/Microsoft.ML.Data/Prediction/Calibrator.cs#L391)). This would happen when saving a model produced by a calibrated binary classifier.\r\n\r\nBesides being part of calibrated binary classifiers, a PlattCalibrator can also be used independently, through a `PlattCalibratorTransformer`. So in this PR I add the necessary code so to also make it possible to save as Onnx a model that used a `PlattCalibratorTransformer`.\r\n\r\nI added 2 tests where a PlattCalibratorTransformer is added at the end of the model (in one test it's added on top of binary classifiers, in the other test no binary classifiers were used).","Url":"https://github.com/dotnet/machinelearning/pull/4699","RelatedDescription":"Open PR \"Added Onnx Export to PlattCalibratorTransformer\" (#4699)"},{"Id":"554472705","IsPullRequest":true,"CreatedAt":"2020-01-23T23:48:53","Actor":"Lynx1820","Number":"4698","RawContent":null,"Title":"Fix for OneVersusAll Multiclass trainer","State":"open","Body":"Also adding tests for OVA with FastForest, LinearSVM, and AveragedPerceptron.","Url":"https://github.com/dotnet/machinelearning/pull/4698","RelatedDescription":"Open PR \"Fix for OneVersusAll Multiclass trainer\" (#4698)"},{"Id":"554445158","IsPullRequest":true,"CreatedAt":"2020-01-23T22:30:54","Actor":"natke","Number":"4697","RawContent":null,"Title":"Fix #4611 broken xrefs in ExpressionTransformer","State":"open","Body":"Re-fix #4611 \r\n\r\n#4647 tried to fix this but some problems remained","Url":"https://github.com/dotnet/machinelearning/pull/4697","RelatedDescription":"Open PR \"Fix #4611 broken xrefs in ExpressionTransformer\" (#4697)"},{"Id":"554243517","IsPullRequest":true,"CreatedAt":"2020-01-23T15:50:53","Actor":"yaeldekel","Number":"4696","RawContent":null,"Title":"Fix bug in WordBagEstimator when training on empty data","State":"open","Body":"Fixes #969 .\r\nRelated to issue #4693 .","Url":"https://github.com/dotnet/machinelearning/pull/4696","RelatedDescription":"Open PR \"Fix bug in WordBagEstimator when training on empty data\" (#4696)"},{"Id":"554130086","IsPullRequest":true,"CreatedAt":"2020-01-23T12:34:56","Actor":"mstfbl","Number":"4695","RawContent":null,"Title":"Update LightGbmTrainerBase.cs","State":"open","Body":"Fixes #4681 , and also adds the ability to use the numerical value (0) as missing value with LightGBM.","Url":"https://github.com/dotnet/machinelearning/pull/4695","RelatedDescription":"Open PR \"Update LightGbmTrainerBase.cs\" (#4695)"},{"Id":"553892271","IsPullRequest":true,"CreatedAt":"2020-01-23T01:42:36","Actor":"antoniovs1029","Number":"4694","RawContent":null,"Title":"Remove obsolete code in BinaryClassifierEvaluator","State":"open","Body":"As mentioned in [here](https://github.com/dotnet/machinelearning/pull/4673#discussion_r368178117), the code that I am removing in this PR makes use of `IRowCursor` and `XYPlot`, which existed back in TLC but doesn't exist in ML.NET. The only reason they didn't cause a problem when building ML.NET was because they're wrapped around an `#if !CORECLR` directive.","Url":"https://github.com/dotnet/machinelearning/pull/4694","RelatedDescription":"Open PR \"Remove obsolete code in BinaryClassifierEvaluator\" (#4694)"},{"Id":"553194291","IsPullRequest":true,"CreatedAt":"2020-01-23T00:58:11","Actor":"frank-dong-ms","Number":"4684","RawContent":null,"Title":"fix reg path when take memory dump","State":"closed","Body":"seeing below error from CI, fix the path format:\r\n\r\n\"C:\\Windows\\system32\\cmd.exe\" /D /E:ON /V:OFF /S /C \"CALL \"F:\\workspace\\_work\\_temp\\12c42bfd-4cdb-4cfb-ab8c-35ee6b913464.cmd\"\"\r\nERROR: Invalid key name.\r\nType \"REG ADD /?\" for usage.\r\nERROR: Invalid key name.\r\nType \"REG ADD /?\" for usage.\r\nERROR: Invalid key name.\r\nType \"REG ADD /?\" for usage.\r\nERROR: Invalid key name.\r\nType \"REG ADD /?\" for usage.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4684","RelatedDescription":"Closed or merged PR \"fix reg path when take memory dump\" (#4684)"},{"Id":"553863174","IsPullRequest":false,"CreatedAt":"2020-01-22T23:56:22","Actor":"nsingal","Number":"4693","RawContent":null,"Title":"SelectFeaturesBasedOn* Transformers are not outputing vectors of known size.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n**Code that failed:**\r\n\r\nContext.Transforms.Text.TokenizeIntoWords(\"TextFeature\")                                   .Append(Context.Transforms.FeatureSelection.SelectFeaturesBasedOnCount(\"TextFeature\", \"TextFeature\", 10)).\r\nAppend(Context.Transforms.FeatureSelection.SelectFeaturesBasedOnMutualInformation(\"TextFeature\", \"TextFeature\", \"Label\", 5000))\r\n.Append(Context.Transforms.NormalizeLpNorm(\"TextFeature\", \"TextFeature\", Microsoft.ML.Transforms.LpNormNormalizingEstimatorBase.NormFunction.L2, true));\r\n\r\n**Error:**\r\nAt NormalizeLpNorm, it fails with\r\nSchema mismatch for input column 'TextFeature': expected Expected Single or known-size vector of Single, got VarVector<Single>\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4693","RelatedDescription":"Open issue \"SelectFeaturesBasedOn* Transformers are not outputing vectors of known size.\" (#4693)"},{"Id":"553703564","IsPullRequest":false,"CreatedAt":"2020-01-22T18:00:54","Actor":"lefig","Number":"4692","RawContent":null,"Title":"AutoML: Binary classification - AUC is not defined","State":"open","Body":"\r\nHi,\r\n\r\nI am struggling with this baffling exception. My data label is binary and I have 1,0 in the csv. I am sure that I have enough data and the splitter is able training and testing data to include positive values.\r\n\r\nIs there anything that I can try?\r\n\r\nThanks\r\n\r\n\r\n=============== Running AutoML experiment ===============\r\n#########################################################\r\nRunning AutoML bin classification experiment...\r\nPress any key to stop the experiment run...\r\n|     Trainer                              Accuracy      AUC    AUPRC  F1-score  Duration                        |\r\nException during AutoML iteration: System.ArgumentOutOfRangeException: AUC is not defined when there is no positive class in the data\r\nParameter name: PosSample\r\n   at Microsoft.ML.Data.EvaluatorBase`1.AucAggregatorBase`1.ComputeWeightedAuc(Double& unweighted)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Aggregator.Finish()\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.<>c__DisplayClass32_0.<GetAggregatorConsolidationFuncs>b__0(UInt32 stratColKey, ReadOnlyMemory`1 stratColVal, Aggregator agg)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.BinaryClassifierEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.AutoML.BinaryMetricsAgent.EvaluateMetrics(IDataView data, String labelColumn)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)","Url":"https://github.com/dotnet/machinelearning/issues/4692","RelatedDescription":"Open issue \"AutoML: Binary classification - AUC is not defined\" (#4692)"},{"Id":"553472855","IsPullRequest":true,"CreatedAt":"2020-01-22T11:15:28","Actor":"mstfbl","Number":"4691","RawContent":null,"Title":"Fixes cases of invalid image folder path and input column name","State":"open","Body":"Fixes #4429 \r\n\r\nInput column names and image folders can no longer be empty or null.","Url":"https://github.com/dotnet/machinelearning/pull/4691","RelatedDescription":"Open PR \"Fixes cases of invalid image folder path and input column name\" (#4691)"},{"Id":"553425752","IsPullRequest":true,"CreatedAt":"2020-01-22T09:52:02","Actor":"yaeldekel","Number":"4690","RawContent":null,"Title":"Make SVM Light loader create the correct schema in case of indices greater than int.MaxValue","State":"open","Body":"Fixes #4689 .","Url":"https://github.com/dotnet/machinelearning/pull/4690","RelatedDescription":"Open PR \"Make SVM Light loader create the correct schema in case of indices greater than int.MaxValue\" (#4690)"},{"Id":"553416639","IsPullRequest":false,"CreatedAt":"2020-01-22T09:35:16","Actor":"yaeldekel","Number":"4689","RawContent":null,"Title":"SVM Light loader bug","State":"open","Body":"When SVM Light loader encounters a feature index greater than `int.MaxValue` it ignores the value with this index, but it creates a schema where the length of the Features column is `int.MaxValue`. However, if the file is saved with the SVM Light saver, and then loaded again with SVM Light loader, the feature with that index will not be there, so the new loader will have a different length for the Features column. \r\nSaving and reloading should give the same data and the same schema, so SVM Light loader should not assign `int.MaxValue` as the length of the Features column, but instead it should assign the maximum valid index in the file.","Url":"https://github.com/dotnet/machinelearning/issues/4689","RelatedDescription":"Open issue \"SVM Light loader bug\" (#4689)"},{"Id":"553348546","IsPullRequest":true,"CreatedAt":"2020-01-22T07:01:34","Actor":"frank-dong-ms","Number":"4688","RawContent":null,"Title":"separate build pipelines","State":"open","Body":"1. new outer loop pipeline that runs all tests\r\n2. remove flaky tests from CI\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4688","RelatedDescription":"Open PR \"separate build pipelines\" (#4688)"},{"Id":"553103631","IsPullRequest":true,"CreatedAt":"2020-01-22T06:57:46","Actor":"frank-dong-ms","Number":"4683","RawContent":null,"Title":"retry more times on tensorflow test","State":"closed","Body":"retry more times on tensorflow tests\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4683","RelatedDescription":"Closed or merged PR \"retry more times on tensorflow test\" (#4683)"},{"Id":"553345588","IsPullRequest":true,"CreatedAt":"2020-01-22T06:53:20","Actor":"harishsk","Number":"4687","RawContent":null,"Title":"Updated langversion to 8.0","State":"open","Body":"Fixes #3786\r\n\r\nWe cannot use 7.3 because Utilities\\ThreadUtils.cs uses static local functions which is available only in 8.0. I also had to set the langVersion to 4.7 for the F# project.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4687","RelatedDescription":"Open PR \"Updated langversion to 8.0\" (#4687)"},{"Id":"553229574","IsPullRequest":false,"CreatedAt":"2020-01-22T00:15:34","Actor":"frank-dong-ms","Number":"4686","RawContent":null,"Title":"upload procdump to Tools repro","State":"open","Body":"Upload procdump.exe tool to Tools repro","Url":"https://github.com/dotnet/machinelearning/issues/4686","RelatedDescription":"Open issue \"upload procdump to Tools repro\" (#4686)"},{"Id":"553212201","IsPullRequest":true,"CreatedAt":"2020-01-21T23:34:42","Actor":"deanna-cs","Number":"4685","RawContent":null,"Title":"Fix typos in README.md","State":"open","Body":"Copy edited the following:\r\n\r\n- Added serial commas \r\n- Added comma after introductory phrase \"for example\"\r\n- Fix typo: in this separated page > in this separate page\r\n- Fix typo and sentence structure under \"ML.NET videos playlist at YouTube\" section\r\n- Fix wording: or alternatively > alternatively \r\n\r\n<hr>\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4685","RelatedDescription":"Open PR \"Fix typos in README.md\" (#4685)"},{"Id":"553078711","IsPullRequest":true,"CreatedAt":"2020-01-21T19:24:37","Actor":"LittleLittleCloud","Number":"4682","RawContent":null,"Title":"update Assembly Key in AutoML and CodeGen","State":"open","Body":"Since mlnet and mlnet.test are already moved into modelbuilder's repo, update assembly key in AutoML and CodeGenerator project to allow mlnet to visit internal classes from those two projects\r\n\r\nRelated Issue:\r\n[Update mlnet and mlnet.test assembly key to match modelbuilder's](https://github.com/dotnet/machinelearning-modelbuilder/issues/453)","Url":"https://github.com/dotnet/machinelearning/pull/4682","RelatedDescription":"Open PR \"update Assembly Key in AutoML and CodeGen\" (#4682)"},{"Id":"552210125","IsPullRequest":false,"CreatedAt":"2020-01-21T17:48:48","Actor":"salmanmkc","Number":"4677","RawContent":null,"Title":"Domain request for ML.net ","State":"closed","Body":"Would be great if Microsoft has the domain ml.net to link to https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet because at the moment ml.net is unresolved, but asp.net redirects.","Url":"https://github.com/dotnet/machinelearning/issues/4677","RelatedDescription":"Closed issue \"Domain request for ML.net \" (#4677)"},{"Id":"552717639","IsPullRequest":false,"CreatedAt":"2020-01-21T09:11:54","Actor":"rauhs","Number":"4681","RawContent":null,"Title":"LightGBM trainer filters out rows with NaN features","State":"open","Body":"LightGBM (binary trainer) will filter out NaN (feature)-values even though we have the option of `HandleMissingValue` which allows LightGBM to properly deal with missing values:\r\n\r\nhttps://lightgbm.readthedocs.io/en/latest/Advanced-Topics.html\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/7a4372e1dda8f5d5c070ffce6bd1929216939d90/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs#L178\r\n\r\nI think this:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/7a4372e1dda8f5d5c070ffce6bd1929216939d90/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs#L439\r\n\r\n\r\nshould also specify the flag \"AllFeatures\" so they're allowed through.","Url":"https://github.com/dotnet/machinelearning/issues/4681","RelatedDescription":"Open issue \"LightGBM trainer filters out rows with NaN features\" (#4681)"},{"Id":"552611803","IsPullRequest":false,"CreatedAt":"2020-01-21T04:03:25","Actor":"curtfehr","Number":"4680","RawContent":null,"Title":"New feature request: Image regression model","State":"open","Body":"It would be nice to have a regression model that works on images, so an image rank can be predicted.  eg. Train images of the sky with a cloudiness rank of 1-100, get prediction as a float instead of bucketing into classifications.","Url":"https://github.com/dotnet/machinelearning/issues/4680","RelatedDescription":"Open issue \"New feature request: Image regression model\" (#4680)"},{"Id":"552604981","IsPullRequest":false,"CreatedAt":"2020-01-21T03:33:17","Actor":"curtfehr","Number":"4679","RawContent":null,"Title":"Unable to load DLL 'tensorflow'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro v 1903\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n   - Create a new .NET Core console application\r\n   - Right-click, Add Machine Learning\r\n   - Image classification\r\n   - Select input path for images\r\n   - Start Training\r\n\r\n- **What happened?**\r\n   - Crashed with: System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n\r\n- **What did you expect?**\r\n   - Training to occur\r\n\r\n### Source code / logs\r\n\r\n|     Trainer                              MicroAccuracy  MacroAccuracy  Duration #Iteration                     |\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] Downloading resnet_v2_50_299.meta from https://aka.ms/mlnet-resources/resnet_v2_50_299.meta to D:\\User Temp\\MLNET\\resnet_v2_50_299.meta\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 3711 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 10264576 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 20525056 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 30785536 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 41050112 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 51310592 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 61571072 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 71835648 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 82096128 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 92356608 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Downloaded 102616931 bytes out of 102616931\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Info] resnet_v2_50_299.meta: Download complete\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:52.2037712.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0005611.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003606.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004386.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0003186.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0004189.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0007600.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0009608.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0002711.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0006318.\r\n[Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoML, Kind=Error] Pipeline crashed: xf=ValueToKeyMapping{ col=Label:Label} xf=ImageLoading{ col=ImageSource_featurized:ImageSource imageFolder=} xf=ColumnCopying{ col=Features:ImageSource_featurized} tr=ImageClassification{} xf=KeyToValueMapping{ col=PredictedLabel:PredictedLabel} cache=- . Exception: System.FormatException: Tensorflow exception triggered while loading model. ---> System.DllNotFoundException: Unable to load DLL 'tensorflow': A dynamic link library (DLL) initialization routine failed. (Exception from HRESULT: 0x8007045A)\r\n   at Tensorflow.c_api.TF_NewGraph()\r\n   at Tensorflow.Graph..ctor()\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadMetaGraph(String path)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger)\r\n[Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\nTensorflow exception triggered while loading model.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4679","RelatedDescription":"Open issue \"Unable to load DLL 'tensorflow'\" (#4679)"},{"Id":"552334663","IsPullRequest":false,"CreatedAt":"2020-01-20T14:29:03","Actor":"Sinfulelf","Number":"4678","RawContent":null,"Title":"System.MissingMethodException: 'Method not found: 'Tensorflow.Tensor Tensorflow.tensorflow.truncated_normal'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindow 10 build-17134\r\n- **.NET Version (eg., dotnet --info)**: \r\nNetCore 3.1\r\n### Issue\r\n\r\n- **What did you do?**\r\nThat example [**Tutorial: Automated visual inspection using transfer learning with the ML.NET Image Classification AP**I](https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning)\r\n- **What happened?**\r\nException on step _ITransformer trainedModel = trainingPipeline.Fit(trainSet)_;:\r\n\r\n> Method not found: 'Tensorflow.Tensor Tensorflow.tensorflow.truncated_normal(Int32[], Single, Single, Tensorflow.TF_DataType, System.Nullable`1<Int32>, System.String)'.\r\n\r\n`\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var workspaceRelativePath = @\"C:\\Test_dev\\ML_Main_Test\\workspace\";\r\n            var assetsRelativePath = @\"C:\\Test_dev\\ML_Main_Test\\assets\";\r\n\r\n            MLContext mlContext = new MLContext();\r\n\r\n            IEnumerable<ImageData> images = LoadImagesFromDirectory(folder: assetsRelativePath, useFolderNameAsLabel: true);\r\n\r\n            var test = images.First();\r\n\r\n            IDataView imageData = mlContext.Data.LoadFromEnumerable(images);\r\n\r\n            IDataView shuffledData = mlContext.Data.ShuffleRows(imageData);\r\n\r\n            var preprocessingPipeline = mlContext.Transforms.Conversion.MapValueToKey(\r\n                                    inputColumnName: \"Label\",\r\n                                    outputColumnName: \"LabelAsKey\")\r\n                                .Append(mlContext.Transforms.LoadRawImageBytes(\r\n                                    outputColumnName: \"Image\",\r\n                                    imageFolder: assetsRelativePath,\r\n                                    inputColumnName: \"ImagePath\"));\r\n\r\n            IDataView preProcessedData = preprocessingPipeline.Fit(shuffledData)\r\n                                            .Transform(shuffledData);\r\n\r\n            TrainTestData trainSplit = mlContext.Data.TrainTestSplit(data: preProcessedData, testFraction: 0.2);\r\n            TrainTestData validationTestSplit = mlContext.Data.TrainTestSplit(trainSplit.TestSet);\r\n\r\n            IDataView trainSet = trainSplit.TrainSet;\r\n            IDataView validationSet = validationTestSplit.TrainSet;\r\n            IDataView testSet = validationTestSplit.TestSet;\r\n\r\n            var classifierOptions = new ImageClassificationTrainer.Options()\r\n            {\r\n                FeatureColumnName = \"Image\",\r\n                LabelColumnName = \"LabelAsKey\",\r\n                ValidationSet = validationSet,\r\n                Arch = ImageClassificationTrainer.Architecture.ResnetV2101,\r\n                MetricsCallback = Console.WriteLine,\r\n                TestOnTrainSet = false,\r\n                ReuseTrainSetBottleneckCachedValues = true,\r\n                ReuseValidationSetBottleneckCachedValues = true,\r\n                WorkspacePath = workspaceRelativePath\r\n            };\r\n            var trainingPipeline = mlContext.MulticlassClassification.Trainers.ImageClassification(classifierOptions)\r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n            ITransformer trainedModel = trainingPipeline.Fit(trainSet);\r\n\r\n            mlContext.Model.Save(trainedModel, preProcessedData.Schema, \"model.zip\");\r\n\r\n            ClassifySingleImage(mlContext, testSet, trainedModel);\r\n        }\r\n\r\n`\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4678","RelatedDescription":"Open issue \"System.MissingMethodException: 'Method not found: 'Tensorflow.Tensor Tensorflow.tensorflow.truncated_normal'\" (#4678)"},{"Id":"551919388","IsPullRequest":true,"CreatedAt":"2020-01-19T13:04:36","Actor":"yaeldekel","Number":"4676","RawContent":null,"Title":"Add support for stateful custom mappers, and for custom filters.","State":"open","Body":"Fixes #4675 .","Url":"https://github.com/dotnet/machinelearning/pull/4676","RelatedDescription":"Open PR \"Add support for stateful custom mappers, and for custom filters.\" (#4676)"},{"Id":"551919346","IsPullRequest":false,"CreatedAt":"2020-01-19T13:04:16","Actor":"yaeldekel","Number":"4675","RawContent":null,"Title":"Add support for stateful custom mappers, and for custom filters","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/4675","RelatedDescription":"Open issue \"Add support for stateful custom mappers, and for custom filters\" (#4675)"},{"Id":"551699185","IsPullRequest":true,"CreatedAt":"2020-01-18T01:09:38","Actor":"Lynx1820","Number":"4674","RawContent":null,"Title":"F1-score to return 0.0 instead of NaN","State":"open","Body":"Fixes #4664","Url":"https://github.com/dotnet/machinelearning/pull/4674","RelatedDescription":"Open PR \"F1-score to return 0.0 instead of NaN\" (#4674)"},{"Id":"551662681","IsPullRequest":true,"CreatedAt":"2020-01-17T22:31:23","Actor":"antoniovs1029","Number":"4673","RawContent":null,"Title":"Update documentation to stop mentioning interfaces that no longer exist","State":"open","Body":"So some weeks ago I noticed that the documentation under `docs/code` mention several interfaces that currently don't exist in ML.NET's codebase. They existed back in TLC... and perhaps some of them, if not all of them, actually made it into ML.NET before version 1.0 release... but the case is that they no longer exist, so I just wanted to update them.\r\n\r\nAfter looking into the TLC code, I decided to make the following replacements in the docs:\r\nISchema -> DataViewSchema\r\nIRandom -> System.Random\r\nIRow -> DataViewRow\r\nIRowCursor and ICursor -> DataViewRowCursor\r\nIDataReader -> IDataLoader\r\n\r\n### Side notes\r\n1. **About IRandom**: In TLC it seems that only `SysRandom `and `TauswortheHybrid ` implemented `IRandom`. In ML.NET `IRandom` and `SysRandom` don't exist, but `TauswortheHybrid` inherits from System.Random. So I guess it's safe to replace `IRandom` for \"System.Random\" in the docs.","Url":"https://github.com/dotnet/machinelearning/pull/4673","RelatedDescription":"Open PR \"Update documentation to stop mentioning interfaces that no longer exist\" (#4673)"},{"Id":"551609651","IsPullRequest":false,"CreatedAt":"2020-01-17T20:10:53","Actor":"lefig","Number":"4672","RawContent":null,"Title":"New feature request: Additional TimeseriesCatalog estimators ","State":"open","Body":"Dear all,\r\n\r\nUnless I am mistaken there is currently a single model suitable for time-series forecasting (ForecastBySsa). \r\n\r\nThe other models within this catalogue target anomaly detection. There are various alternative methods that may be used to forecast time. \r\n\r\nIt would be nice to have a choice and the option to try a different method.\r\n\r\nThank you\r\n\r\nFig","Url":"https://github.com/dotnet/machinelearning/issues/4672","RelatedDescription":"Open issue \"New feature request: Additional TimeseriesCatalog estimators \" (#4672)"},{"Id":"551554129","IsPullRequest":false,"CreatedAt":"2020-01-17T17:59:13","Actor":"saucepleez","Number":"4671","RawContent":null,"Title":"Loading Data from DataTable or \"Dynamic\" Model","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n- **.NET Version (eg., dotnet --info)**:  .NET Framework 4.8\r\n\r\n### Issue\r\nI would like to know how I can leverage a datatable or some similar type instead of using model classes.  To start with, I am currently able to successfully train and predict with a model class using the multi-class classification.  The current model in my setup looks like this:\r\n\r\n     public class MultiClassInput\r\n      {\r\n        [ColumnName(\"Statement\")]\r\n        public string Statement { get; set; }\r\n        [ColumnName(\"Label\")]\r\n        public string Label { get; set; }\r\n      }\r\n\r\nI am essentially creating a List<MultiClassInput> from data in a datatable.  Some sample data I used to successfully train and predict:\r\n \r\n                    v_ModelTrainingData.Rows.Clear();\r\n                    v_ModelTrainingData.Rows.Add(\"I need to Reset Password\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"I want to Reset Password\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Password Reset\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Reset My Password\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pass Reset\", \"#ITSupport\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pay Bill\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pay Invoice\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Billing Problems\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Review Charges\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Pay Charges\", \"#Billing\");\r\n                    v_ModelTrainingData.Rows.Add(\"Invoice Problem\", \"#Billing\");\r\n\r\nWhat I would like to do is figure out some way to have a user pick a column to be the label -- that way I can support multiple columns of data to act as input to the training process without creating multiple classes.  Everything I have found so far looks like it requires a known model class.  Any thoughts on how I can achieve this? Thanks.\r\n\r\n### Source code / logs\r\nRead documentation for loading data: https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/load-data-ml-net","Url":"https://github.com/dotnet/machinelearning/issues/4671","RelatedDescription":"Open issue \"Loading Data from DataTable or \"Dynamic\" Model\" (#4671)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-01-24T05:30:42.4742441Z","RunDurationInMilliseconds":1176}