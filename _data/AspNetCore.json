{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7651197042","Type":"IssuesEvent","CreatedAt":"2018-05-09T17:40:36","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3131","RelatedDescription":"Closed issue \"ActionResult<int?> is returning 204 instead of 200\" (#3131) at aspnet/Home","RelatedBody":"I just upgraded to the latest preview version so that I could try out the new `ActionResult<>` class.\r\n\r\nHowever, I'm finding that when I have the following code, it returns a 204 response rather than a 200 response as I would expect.  Is this expected behavior?\r\n\r\n```\r\npublic class SomeController\r\n   public async Task<ActionResult<int?>> GetId() {\r\n      return null;\r\n   }\r\n}\r\n```\r\n"},{"Id":"7651063594","Type":"IssuesEvent","CreatedAt":"2018-05-09T17:13:26","Actor":"livarcocc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3132","RelatedDescription":"Opened issue \"Dotnet core 2.1 rc-1 won't load projects targeting net461\" (#3132) at aspnet/Home","RelatedBody":"_From @Petermarcu on May 9, 2018 15:31_\n\n@dloukola commented on [Wed May 09 2018](https://github.com/dotnet/core/issues/1525)\n\nI have been working with dotnet core 2.1 preview 2 and earlier without issues. Installing the dotnet core 2.1 rc-1 SDK causes my webapi projects that are targeting 4.6.1 framework to fail to load.\r\n\r\nIt fails in the Startup at ConfigureServices when calling services.AddMvcCore().\r\n\r\nThe error message is: \"the given key was not present in the dictionary\"\r\nIt seems to error out in the stack trace at: \"DefaultAssemblyPartDiscoveryProvider\"\r\n\r\nUninstalling the 2.1 SDK makes everything work again, so it's definitely the issue.\r\n\r\nI am targeting some aspnet core 1.* versions...maybe that is the issue?\r\nExample:\r\nMicrosoft.AspNetCore.Authentication.JwtBearer (1.1.1)\r\nMicrosoft.AspNetCore.Diagnostics (1.1.1)\r\nMicrosoft.AspNetCore.Mvc (1.1.2)\r\nMicrosoft.AspNetCore.Routing (1.1.1)\r\nMicrosoft.AspNetCore.Server.IISIntegration (1.1.1)\r\nMicrosoft.AspNetCore..Server.Kestrel (1.1.1)\r\n\r\nAny ideas?\n\n---\n\n@thyams commented on [Wed May 09 2018](https://github.com/dotnet/core/issues/1525#issuecomment-387761135)\n\nTry replacing the AspNetCore 1.0 packages with AspNetCore.All (v2.0.8),\n\n---\n\n@dloukola commented on [Wed May 09 2018](https://github.com/dotnet/core/issues/1525#issuecomment-387762080)\n\n@thyams  I have a plan to try that. However, I have no current intention to migrate that project to core 2.0. Installing a SDK shouldn't break older projects. I'm not referencing and 2.1-rc1 nuget packages in that project. 2.1 preview 2 didn't have this issue.\n\n---\n\n@thyams commented on [Wed May 09 2018](https://github.com/dotnet/core/issues/1525#issuecomment-387763401)\n\nIt might be the configuration / startup change. Try this change (without package updates):\r\n![image](https://user-images.githubusercontent.com/1414138/39821275-d92eb102-5375-11e8-8360-22f10622f96a.png)\r\n\r\nThats kestrel running successfully running a brand new project utilizing everything NetCore 2.0 (so no old packages) but try with your setup.\r\n\r\nAddMvcCore() is a little different then just utilizing AddMvc()\r\n\n\n---\n\n@dloukola commented on [Wed May 09 2018](https://github.com/dotnet/core/issues/1525#issuecomment-387779085)\n\nI appreciate the thought of updating...but like I said previously, I think we need a workaround that will allow the 2.1 sdk installed without having to change apps that aren't using 2.1. \r\nI have tried adding global.json files all over the place to no avail.\n\n\n\n_Copied from original issue: dotnet/cli#9241_"},{"Id":"7650934265","Type":"IssuesEvent","CreatedAt":"2018-05-09T16:47:28","Actor":"joshmouch","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3131","RelatedDescription":"Opened issue \"ActionResult<int?> is returning 204 instead of 200\" (#3131) at aspnet/Home","RelatedBody":"I just upgraded to the latest preview version so that I could try out the new `ActionResult<>` class.\r\n\r\nHowever, I'm finding that when I have the following code, it returns a 204 response rather than a 200 response as I would expect.  Is this expected behavior?\r\n\r\n```\r\npublic class SomeController\r\n   public async Task<ActionResult<int?>> GetId() {\r\n      return null;\r\n   }\r\n}\r\n```\r\n"},{"Id":"7650739071","Type":"IssuesEvent","CreatedAt":"2018-05-09T16:09:23","Actor":"mesteves-mw","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3130","RelatedDescription":"Opened issue \"CVE-2017-11883 on Microsoft.AspNetCore.JsonPatch.2.0.0\" (#3130) at aspnet/Home","RelatedBody":"After using OWASP dependency check for a vulnerability scan it found the issue: CVE-2017-11883 on \r\npackage Microsoft.AspNetCore.JsonPatch.2.0.0.\r\n\r\n`.NET Core 1.0, 1.1, and 2.0 allow an unauthenticated attacker to remotely cause a denial of service attack against a .NET Core web application by improperly handling web requests, aka \".NET CORE Denial Of Service Vulnerability\".`\r\n\r\nIs there a workaround? If not, is it possible to get it fixed please for the next release?\r\n\r\nMore info here: https://github.com/aspnet/announcements/issues/278\r\n"},{"Id":"7650096076","Type":"IssuesEvent","CreatedAt":"2018-05-09T14:24:25","Actor":"j-nord","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3129","RelatedDescription":"Opened issue \"Error 500 unacceptable\" (#3129) at aspnet/Home","RelatedBody":"MiMicrosoft.AspNetCore Version: 2.02:\r\n\r\nIt can not be that the server returns an error message 500 without any error message !!!\r\n\r\n\"stdout\" protocol does not work either!\r\n\r\nJust do not catch on talking to you, with server log, etc. That's and remains a no go!\r\n\r\nWe need \"proper\" error messages for net core!\r\n\r\nRegards\r\nj.nord"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7653561385","Type":"IssuesEvent","CreatedAt":"2018-05-10T04:54:46","Actor":"Boychenko","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2243","RelatedDescription":"Opened issue \"For a user with multiple connections. Closing one connection kills notifications to the user using user id. Redis backplane\" (#2243) at aspnet/SignalR","RelatedBody":"Hi\r\nI've found an issue with `Microsoft.AspNetCore.SignalR.Redis` as backplane.\r\n\r\nEnvironment:\r\nMicrosoft.AspNetCore.SignalR: 1.0.0-rc1-final\r\nMicrosoft.AspNetCore.SignalR.Redis: 1.0.0-rc1-final\r\nJavascript js file: 1.0.0-rc1-update1\r\nServer: Kestrel / IIS\r\nOS on server and client: Windows 10\r\nBrowser: Firefox (latest) and Chrome (latest)\r\n\r\nStep to reproduce:\r\n1 Open two tabs with the same user logged in\r\n2 Close one tab\r\n\r\nExpected: The app in the existing tab should be able to get notifications using user id\r\nActual: No notifications sent using user id delivered to this user anymore.\r\n\r\nI made some research. There are my finding\r\n* Everything works fine if I don't use Redis as a backplane.\r\n* According to my understanding [unsubscribe](https://github.com/aspnet/SignalR/blob/6f6382799b00936521452cc6c5c516a5bb7f3ce8/src/Microsoft.AspNetCore.SignalR.Redis/RedisHubLifetimeManager.cs#L87) causing the problem. While it works fine for connection subscriptions since it closed anyway. For users this is wrong. A user can have more than one connection to the same server. "},{"Id":"7652959400","Type":"IssuesEvent","CreatedAt":"2018-05-10T00:58:28","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2165","RelatedDescription":"Closed issue \"flaky test: StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_default\" (#2165) at aspnet/SignalR","RelatedBody":"Seen on this PR https://github.com/aspnet/SignalR/pull/2162\r\n\r\nhttps://ci3.dot.net/job/aspnet_SignalR/job/dev/job/windows-Configuration_Release_prtest/621/\r\n\r\n```\r\n20:53:23    System.Exception : 2 error(s) logged.\r\n20:53:23   Microsoft.AspNetCore.Server.Kestrel - ApplicationError - Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000003\": An unhandled exception was thrown by the application.\r\n20:53:23   ===================\r\n20:53:23   System.InvalidOperationException: Writing is not allowed after writer was completed.\r\n20:53:23      at System.IO.Pipelines.Pipe.GetMemory(Int32 sizeHint)\r\n20:53:23      at System.IO.Pipelines.Pipe.DefaultPipeWriter.GetSpan(Int32 sizeHint)\r\n20:53:23      at System.IO.Pipelines.PipeWriter.WriteAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)\r\n20:53:23      at System.IO.Pipelines.PipeWriterStream.WriteCoreAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)\r\n20:53:23      at System.IO.Pipelines.PipeWriterStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n20:53:23      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<CopyToAsync>d__22.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.<CopyToAsyncInternal>d__23.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ProcessSend>d__16.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ExecuteAsync>d__7.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__186`1.MoveNext()\r\n20:53:23   ===================\r\n20:53:23   Microsoft.AspNetCore.Http.Connections.Client.HttpConnection - TransportThrewExceptionOnStop - The transport threw an exception while stopping.\r\n20:53:23   ===================\r\n20:53:23   System.Net.Http.HttpRequestException: Response status code does not indicate success: 500 (Internal Server Error).\r\n20:53:23      at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n20:53:23      at Microsoft.AspNetCore.Http.Connections.Client.Internal.SendUtils.<SendMessages>d__0.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23      at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.<DisposeAsyncCore>d__44.MoveNext()\r\n20:53:23   ===================\r\n20:53:23   Stack Trace:\r\n20:53:23      at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose()\r\n20:53:23      at Microsoft.AspNetCore.SignalR.Tests.ServerLogScope.Dispose()\r\n20:53:23      at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.<StreamDoesNotStartIfTokenAlreadyCanceled>d__12.MoveNext()\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23   --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23   Standard Output Messages:\r\n20:53:23    | [2018-04-30T03:53:21] TestLifetime Information: Starting test StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_default\r\n20:53:23    | [2018-04-30T03:53:21] ServerLogScope Information: Server log scope started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:124).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting HubConnection.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting HttpConnection.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Establishing connection with server at 'http://127.0.0.1:50710/default'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:50710/default/negotiate'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGU\" started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:50710/default/negotiate  0\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default/negotiate'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: New connection Jgqn02y3zYLC0o-2rvw5PA created.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Sending negotiation response.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGU\" completed keep alive response.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.0622ms 200 application/json\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Established connection 'Jgqn02y3zYLC0o-2rvw5PA' with the server.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Skipping transport WebSockets because it was disabled by the client.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting transport 'ServerSentEvents' with Url: http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Starting transport. Transfer mode: Text.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request GET 'http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA  \r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Establishing new connection.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: OnConnectedAsync started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Starting receive loop.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 3 bytes. Parsing SSE frame.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Starting the send loop.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Transport 'ServerSentEvents' started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Using HubProtocol 'json v1'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Hub Handshake.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 32 bytes to the server using url: http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\" started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA  32\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000001\": started reading request body.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000001\": done reading request body.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver Debug: Found protocol implementation for requested protocol: json.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Trace: Received 32 bytes.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\" completed keep alive response.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.HubConnectionContext Information: Completed connection handshake. Using HubProtocol 'json'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.7752ms 200 text/plain\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.Transports.ServerSentEventsTransport Trace: Writing a 3 byte message.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Message(s) sent successfully.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 6 bytes. Parsing SSE frame.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 13 bytes. Parsing SSE frame.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Passing message to application. Payload size: 3.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Handshake with server complete.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Receive loop starting.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting server timeout timer. Duration: 30000.00ms\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: HubConnection started.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:166).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:249).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.Streaming Trace: Invocation 1 created.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Preparing streaming invocation '1' of 'Stream', with return type 'System.Int32' and 1 argument(s).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Registering Invocation ID '1' for tracking.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Issuing Invocation '1': System.Int32 Stream(System.Int32).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending StreamInvocationMessage message '1'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending StreamInvocationMessage message '1' completed.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 64 bytes to the server using url: http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:224).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:267).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA  64\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:182).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Cancellation for Invocation '1'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000002\": started reading request body.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending CancelInvocationMessage message '1'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending CancelInvocationMessage message '1' completed.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:241).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.Streaming Trace: Invocation 1 disposed.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000002\": done reading request body.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:209).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Stopping HubConnection.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Trace: Received 64 bytes.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Terminating receive loop.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\" completed keep alive response.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Waiting for the receive loop to terminate.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.7504ms 200 text/plain\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher Debug: Received stream hub invocation: StreamInvocation { InvocationId: \"1\", Target: \"Stream\", Arguments: [ 5 ] }.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher Trace: InvocationId 1: Streaming result of type 'System.Threading.Channels.ChannelReader`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:655).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Message(s) sent successfully.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:664).\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.Transports.ServerSentEventsTransport Trace: Writing a 39 byte message.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Disposing HttpConnection.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Transport is stopping.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 6 bytes. Parsing SSE frame.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 49 bytes. Parsing SSE frame.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 30 bytes to the server using url: http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Passing message to application. Payload size: 39.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Server-Sent Event Stream ended.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Receive loop stopped.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA  30\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLDE9NGO7HGU\" received FIN.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGU\" disconnecting.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLDE9NGO7HGU\" sending FIN.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000003\": started reading request body.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: Disposing connection Jgqn02y3zYLC0o-2rvw5PA.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: Waiting for application to complete.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: OnConnectedAsync ending.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: Application complete.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: Removing connection Jgqn02y3zYLC0o-2rvw5PA from the list of connections.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 7.6043ms 200 text/event-stream\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGU\" stopped.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000003\": done reading request body.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Error: Connection id \"0HLDE9NGO7HGV\", Request id \"0HLDE9NGO7HGV:00000003\": An unhandled exception was thrown by the application.\r\n20:53:23    | System.InvalidOperationException: Writing is not allowed after writer was completed.\r\n20:53:23    |    at System.IO.Pipelines.Pipe.GetMemory(Int32 sizeHint)\r\n20:53:23    |    at System.IO.Pipelines.Pipe.DefaultPipeWriter.GetSpan(Int32 sizeHint)\r\n20:53:23    |    at System.IO.Pipelines.PipeWriter.WriteAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)\r\n20:53:23    |    at System.IO.Pipelines.PipeWriterStream.WriteCoreAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)\r\n20:53:23    |    at System.IO.Pipelines.PipeWriterStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n20:53:23    |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<CopyToAsync>d__22.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.<CopyToAsyncInternal>d__23.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ProcessSend>d__16.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher.<ExecuteAsync>d__7.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__186`1.MoveNext()\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\" completed keep alive response.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 10.9232ms 500 \r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Warning: Unsuccessful HTTP response 500 return from POST 'http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA'.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Error: Error while sending to 'http://127.0.0.1:50710/default?id=Jgqn02y3zYLC0o-2rvw5PA'.\r\n20:53:23    | System.Net.Http.HttpRequestException: Response status code does not indicate success: 500 (Internal Server Error).\r\n20:53:23    |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.SendUtils.<SendMessages>d__0.MoveNext()\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Transport stopped.\r\n20:53:23    | System.Net.Http.HttpRequestException: Response status code does not indicate success: 500 (Internal Server Error).\r\n20:53:23    |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.SendUtils.<SendMessages>d__0.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext()\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Error: The transport threw an exception while stopping.\r\n20:53:23    | System.Net.Http.HttpRequestException: Response status code does not indicate success: 500 (Internal Server Error).\r\n20:53:23    |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.SendUtils.<SendMessages>d__0.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext()\r\n20:53:23    | --- End of stack trace from previous location where exception was thrown ---\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n20:53:23    |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n20:53:23    |    at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.<DisposeAsyncCore>d__44.MoveNext()\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Disposed.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Canceling all outstanding invocations.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLDE9NGO7HGV\" received FIN.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Removing pending invocation 1.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.Streaming Trace: Invocation 1 disposed.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLDE9NGO7HGV\" disconnecting.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Shutting down connection.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: HubConnection stopped.\r\n20:53:23    | [2018-04-30T03:53:21] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLDE9NGO7HGV\" sending FIN.\r\n20:53:23    | [2018-04-30T03:53:21] ServerLogScope Information: Server log scope stopped.\r\n20:53:23    | [2018-04-30T03:53:21] TestLifetime Information: Finished test StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_default in 0.0399162s\r\n```"},{"Id":"7652957991","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:57:57","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2180","RelatedDescription":"Merged pull request \"Gracefully handle disposing while writing\" (#2180) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/2165"},{"Id":"7652764944","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:46:16","Actor":"abbotware","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2230","RelatedDescription":"Reopened issue \"Non-WebSockets Transport using Linux C# Client Fails\" (#2230) at aspnet/SignalR","RelatedBody":"C# <-> C# communication from NetCore on Linux seems to not be working when the transport is not websockets.  I suspect this might be an issue on the linux client side since a windows machine connecting to the same server has no problems.  There are also no problems if the same linux machines connects to IIS Express and web sockets are 'working'.\r\n\r\nThis sums up the scenarios:\r\n\r\nOS | WebSockets (IIS Express) | NonWebSockets (AWS / Elastic Beanstalk) |\r\n--- | --- | ---\r\n|Linux | OK | :-(|\r\n|Windows | OK | OK |\r\n\r\n\r\n\r\n\r\n* Versions of Server-Side NuGet Packages:\r\n1.0.0-rc1-final\r\n* Versions of Client-Side NuGet/NPM Packages:\r\n1.0.0-rc1-final\r\n* Are you using the C# client or the JavaScript client:\r\nC# client\r\n\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.): \r\nIIS in AWS (Elastic Beanstalk) \r\n* The Operating System on the Server (Windows/Linux/macOS):\r\nWindows / AWS\r\n* The Operating System on the Client (Windows/Linux/macOS):\r\nLinux (ARM processor armhf architecture)\r\n\r\n\r\n\r\n\r\n"},{"Id":"7652764247","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:46:02","Actor":"abbotware","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2230","RelatedDescription":"Closed issue \"Non-WebSockets Transport using Linux C# Client Fails\" (#2230) at aspnet/SignalR","RelatedBody":"C# <-> C# communication from NetCore on Linux seems to not be working when the transport is not websockets.  I suspect this might be an issue on the linux client side since a windows machine connecting to the same server has no problems.  There are also no problems if the same linux machines connects to IIS Express and web sockets are 'working'.\r\n\r\nThis sums up the scenarios:\r\n\r\nOS | WebSockets (IIS Express) | NonWebSockets (AWS / Elastic Beanstalk) |\r\n--- | --- | ---\r\n|Linux | OK | :-(|\r\n|Windows | OK | OK |\r\n\r\n\r\n\r\n\r\n* Versions of Server-Side NuGet Packages:\r\n1.0.0-rc1-final\r\n* Versions of Client-Side NuGet/NPM Packages:\r\n1.0.0-rc1-final\r\n* Are you using the C# client or the JavaScript client:\r\nC# client\r\n\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.): \r\nIIS in AWS (Elastic Beanstalk) \r\n* The Operating System on the Server (Windows/Linux/macOS):\r\nWindows / AWS\r\n* The Operating System on the Client (Windows/Linux/macOS):\r\nLinux (ARM processor armhf architecture)\r\n\r\n\r\n\r\n\r\n"},{"Id":"7652727541","Type":"PullRequestEvent","CreatedAt":"2018-05-09T23:33:01","Actor":"YourFriendBmo","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2242","RelatedDescription":"Opened pull request \"Add Content-Type header in HttpClient.ts\" (#2242) at aspnet/SignalR","RelatedBody":"This change prevents an error in react-native when running on the Android platform. If the Content-Type header is not set, an error is thrown.\r\n\r\nSetting the value to `text/plain;charset=UTF-8` matches what Chrome sends without the header being specified.\r\n\r\nError w/out change:\r\n![image](https://user-images.githubusercontent.com/4699747/39844289-31ad2e3e-53a4-11e8-998e-76dd944a5a7d.png)\r\n\r\nWhen setting the `LogLevel` to `Debug`,  it would fail after:\r\n\r\n`Debug: Sending negotiation request: ...`\r\n\r\nWhen debugging the `xhr.onerror` function in HttpClient.ts, the details on the `xhr` object shows the underlying error from react-native is \"Payload is set but no content-type header specified\".\r\n\r\nWith this proposed change, the error is not thrown and results in the connection established and working as expected.\r\n\r\nThanks."},{"Id":"7652699555","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:23:22","Actor":"martincostello","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2241","RelatedDescription":"Opened issue \"Support CancellationToken on Hub methods?\" (#2241) at aspnet/SignalR","RelatedBody":"I've just been playing around with the new SignalR RC1 bits, and copying a pattern from MVC I added an optional `CancellationToken cancellationToken = default` parameter to the end of my `Hub` class' method to pass through into a service to do something.\r\n\r\nWith the method declared as thus, trying to send a message from the JavaScript client did not hit the breakpoint I'd set in the hub. Removing this parameter and re-running the code hit the breakpoint.\r\n\r\nSo this leads me to ask a couple of questions:\r\n\r\n  1. Is this a valid use-case in the first place compared to HTTP in MVC controllers?\r\n  1. If this is a valid use-case, is this something coming in 2.1 for RTM (or some future release)?\r\n  1. Is there something already accessible to `Hub` that can be used to pass to other code called by hub methods that's more useful than `CancellationToken` in lieu of the equivalent Controller scenario?\r\n\r\nI've seen a view recently merged PRs related to cancellation tokens (e.g. #2101), but I wasn't sure whether that was just internally plumbing, rather than something to enable a scenario like this."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7653642386","Type":"IssuesEvent","CreatedAt":"2018-05-10T05:29:11","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6599","RelatedDescription":"Closed issue \"ViewModel parameter with the same name as the action does not receive the data\" (#6599) at aspnet/Mvc","RelatedBody":"When you have an action and a parameter which is a class (a ViewModel, for example) with the same name, the action doesn't receive the data unless you send the data with a hack.\r\n\r\nI am going to show it with an example.\r\nMy example consists of users who can comment publications with the Publication controller and the **Comment** action, and the action has a parameter which is of type CommentViewModel, and its name is **comment** (the same name).\r\n\r\n**PublicationsController.cs**\r\n```\r\n[Produces(\"application/json\")]\r\n[Route(\"api/[controller]/[action]\")]\r\npublic class PublicationsController : Controller\r\n{\r\n    [HttpGet]\r\n    public IActionResult Comment(CommentViewModel comment)\r\n    {\r\n        if (ModelState.IsValid)\r\n        {\r\n            return Ok();\r\n        }\r\n        else\r\n        {\r\n            return BadRequest();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**CommentViewModel.cs**\r\n```\r\npublic class CommentViewModel\r\n{\r\n    [Required]\r\n    public string Author { get; set; }\r\n\r\n    [Required]\r\n    public string Comment { get; set; }\r\n\r\n    [Required]\r\n    public int PublicationId { get; set; }\r\n}\r\n```\r\n\r\nIf you send the query correctly:\r\nhttp://localhost:56740/api/publications/comment?author=Andreu&comment=Hellooo&publicationId=4\r\n\r\nYou don't receive the data:\r\n![comment](https://user-images.githubusercontent.com/30506301/28719709-310609b2-73ab-11e7-9f13-29761e8f946d.png)\r\n\r\nIf you send the query with the name of the parameter (comment) with a dot before, you receive the data. For this example, you must write \"comment.\" before \"author\":\r\nhttp://localhost:56740/api/publications/comment?comment.author=Andreu&comment=Hellooo&publicationId=4\r\n![commentdotproperty](https://user-images.githubusercontent.com/30506301/28719716-3c8eb0a4-73ab-11e7-8fd8-67b7609c446c.png)\r\n\r\nBesides, if you send, for example, a string (which is a class too), with the same name as before (comment), you receive the data:\r\n`public IActionResult Comment(string comment)`\r\n\r\nOr if you use another name for the parameter, you receive the data as well:\r\n`public IActionResult Comment(CommentViewModel comm)`\r\n\r\nThe example can be downloaded here: https://github.com/AndreuCodina/ViewModelParameterPossibleBug\r\n"},{"Id":"7653617532","Type":"PullRequestEvent","CreatedAt":"2018-05-10T05:18:53","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7764","RelatedDescription":"Opened pull request \"Cleanup TestCommon\" (#7764) at aspnet/Mvc","RelatedBody":"Fixes https://github.com/aspnet/Mvc/issues/4627"},{"Id":"7653380400","Type":"IssuesEvent","CreatedAt":"2018-05-10T03:35:57","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/3020","RelatedDescription":"Closed issue \"Add extension methods for adding a parameter model convention \" (#3020) at aspnet/Mvc","RelatedBody":"We have sugar for registering a controller model convention or action model convention in options. We should do the same for bound-properties and parameters.\n\nSee example here: https://github.com/aspnet/Mvc/issues/3018#issuecomment-133576948\n"},{"Id":"7653288935","Type":"IssuesEvent","CreatedAt":"2018-05-10T03:01:06","Actor":"taori","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7763","RelatedDescription":"Closed issue \"Question: Is this behavior of the route attribute working as intended?\" (#7763) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nIt is potentially a bug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\n- Create TestController\r\n- Add [Route(\"api/v1/[controller]/[action]\")] to controller\r\n- Create a signature like \r\n```\r\n[HttpPost]\r\n[Route(\"Oranges\")]\r\npublic async Task<IActionResult> Bananas(List<ContractorLocationV1> locations)\r\n```\r\n\r\n#### Description of the problem:\r\nexpected route: Test/Bananas\r\nactual route: Test/Bananas/Oranges\r\ni am not 100% sure of this, but i think mvc5 worked as expected here\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\nAspNetCore.All 2.0.8\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->"},{"Id":"7653265248","Type":"IssuesEvent","CreatedAt":"2018-05-10T02:52:30","Actor":"taori","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7763","RelatedDescription":"Opened issue \"Question: Is this behavior of the route attribute working as intended?\" (#7763) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nIt is potentially a bug\r\n\r\n#### Steps to reproduce or link to a repro project:\r\n- Create TestController\r\n- Add [Route(\"api/v1/[controller]/[action]\")] to controller\r\n- Create a signature like \r\n```\r\n[HttpPost]\r\n[Route(\"Oranges\")]\r\npublic async Task<IActionResult<bool>> Bananas(List<ContractorLocationV1> locations)\r\n```\r\n\r\n#### Description of the problem:\r\nexpected route: Test/Bananas\r\nactual route: Test/Bananas/Oranges\r\ni am not 100% sure of this, but i think mvc5 worked as expected here\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\nAspNetCore.All 2.0.8\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->"},{"Id":"7652997644","Type":"PullRequestEvent","CreatedAt":"2018-05-10T01:12:17","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7762","RelatedDescription":"Merged pull request \"setupAction parameter in MvcLocalizationServices.AddLocalizationServices is never used\" (#7762) at aspnet/Mvc","RelatedBody":"\r\nFixes #7761"},{"Id":"7652916027","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:41:13","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7762","RelatedDescription":"Opened pull request \"setupAction parameter in MvcLocalizationServices.AddLocalizationServices is never used\" (#7762) at aspnet/Mvc","RelatedBody":"\r\nFixes #7761"},{"Id":"7652770996","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:48:20","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7761","RelatedDescription":"Opened issue \"setupAction parameter in MvcLocalizationServices.AddLocalizationServices is never invoked\" (#7761) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Mvc/blob/47287c508ee43c4f30b8000400fda1b01f68bfe2/src/Microsoft.AspNetCore.Mvc.Localization/Internal/MvcLocalizationServices.cs#L32-L46"},{"Id":"7652768311","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:47:28","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6406","RelatedDescription":"Closed issue \"ASP.NET MVC core Tag helper for GridView\" (#6406) at aspnet/Mvc","RelatedBody":"Hi,\r\nIn ASP.NET MVC core we see that Data Table, Data view and data set are coming back. In ASP.NET web forms world we use to bind the data table directly to Data grid. The table column names are inferred from the Data Table column names. \r\n\r\nThe same scenario can happen in case of Razor pages also. So the ask is Can we have a built TagHelper (like form taghelper ect:-) for Grid View also that will function like data grid. This will help easy migration of Web form application to Razor Pages very easily."},{"Id":"7652765708","Type":"IssuesEvent","CreatedAt":"2018-05-09T23:46:32","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6850","RelatedDescription":"Closed issue \"I have a name puzzle about Content in MVC\" (#6850) at aspnet/Mvc","RelatedBody":"Here is the defaults MVC folder structure.\r\n![img3](https://user-images.githubusercontent.com/13679242/30576418-54a2d18a-9d3a-11e7-952e-9defa7419c8e.png)\r\nWhy Content is call Content, Why not use Contents?\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7651782116","Type":"IssuesEvent","CreatedAt":"2018-05-09T19:40:24","Actor":"Yeeler","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1786","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Identity.UI.csproj failed to load\" (#1786) at aspnet/Identity","RelatedBody":"git clone code, then load it in VS 2017 ver 15.7.1 \r\nMicrosoft.AspNetCore.Identity.UI.csproj load failed.\r\n\r\n![image](https://user-images.githubusercontent.com/5031611/39835715-a0f6e776-5403-11e8-857d-17086584219f.png)\r\n"},{"Id":"7650861285","Type":"IssuesEvent","CreatedAt":"2018-05-09T16:32:46","Actor":"Ruud-cb","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1784","RelatedDescription":"Closed issue \"Identity core in ASP.NET MVC 6\" (#1784) at aspnet/Identity","RelatedBody":"I am trying to port a class library to .NET Standard, this library includes all repositories, entities and my DbContext. This will be used by both .NET Core applications and .NET Framework applications. \r\nThe library itself is done and EF code-first migrations can be created successfully. Now I am trying to use the AspNetCore.Identity.EntityFrameworkCore inside my ASP.NET MVC Framework application.\r\n\r\nAny guidance or documentation on using the .net core Identity within an existing .net framework asp.net project? Without converting the asp.net mvc project to a .net core project?  I don't want to convert it because too many other libraries are now not able to and simply this takes to much time.\r\n\r\nFull issue described here with more details:\r\nhttps://stackoverflow.com/q/50236246/2901207"},{"Id":"7650255898","Type":"PullRequestEvent","CreatedAt":"2018-05-09T14:49:57","Actor":"apocer","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1785","RelatedDescription":"Opened pull request \"More specific search for the keys of userid and roleid in FindUserRoleAsync\" (#1785) at aspnet/Identity","RelatedBody":"My UserRole-Table was created by the following auto-generated migration code:\r\n\r\n`migrationBuilder.CreateTable(\r\n                name: \"UserRole\",\r\n                schema: \"Security\",\r\n                columns: table => new\r\n                {\r\n                    RoleId = table.Column<int>(nullable: false),\r\n                    UserId = table.Column<int>(nullable: false)\r\n                },\r\n                constraints: table =>\r\n                {\r\n                    table.PrimaryKey(\"PK_UserRole\", x => new { x.RoleId, x.UserId });\r\n                    table.UniqueConstraint(\"AK_UserRole_UserId_RoleId\", x => new { x.UserId, x.RoleId });\r\n                    table.ForeignKey(\r\n                        name: \"FK_UserRole_Role_RoleId\",\r\n                        column: x => x.RoleId,\r\n                        principalSchema: \"Security\",\r\n                        principalTable: \"Role\",\r\n                        principalColumn: \"Id\",\r\n                        onDelete: ReferentialAction.Cascade);\r\n                    table.ForeignKey(\r\n                        name: \"FK_UserRole_Users_UserId\",\r\n                        column: x => x.UserId,\r\n                        principalSchema: \"Security\",\r\n                        principalTable: \"Users\",\r\n                        principalColumn: \"Id\",\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });`\r\n\r\n**I am using int-based Id-Fields.**\r\n\r\nThis code specifies my primary key like this:\r\n`table.PrimaryKey(\"PK_UserRole\", x => new { x.RoleId, x.UserId }); ` but `FindUserRoleAsync(..)`.\r\nThe `UserStore` searches for `UserRole` like this: \r\n`UserRoles.FindAsync(new object[] { userId, roleId }, cancellationToken);`\r\n\r\nThe keys of the primary key are swapped, leading to random behaviour of some user manager functions e.g. `RemoveFromRoleAsync(..)`, `AddToRoleAsync(..)`, ..\r\n\r\nMy solution with \r\n`SingleOrDefaultAsync(r => r.UserId.Equals(userId) && r.RoleId.Equals(roleId)` \r\nsearches for the `UserRole` independent of the primary key order."},{"Id":"7645120504","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:34:43","Actor":"Ruud-cb","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1784","RelatedDescription":"Opened issue \"Identity core in ASP.NET MVC 6\" (#1784) at aspnet/Identity","RelatedBody":"I am trying to port a class library to .NET Standard, this library includes all repositories, entities and my DbContext. This will be used by both .NET Core applications and .NET Framework applications. \r\nThe library itself is done and EF code-first migrations can be created successfully. Now I am trying to use the AspNetCore.Identity.EntityFrameworkCore inside my ASP.NET MVC Framework application.\r\n\r\nAny guidance or documentation on using the .net core Identity within an existing .net framework asp.net project? Without converting the asp.net mvc project to a .net core project?  I don't want to convert it because too many other libraries are now not able to and simply this takes to much time.\r\n\r\nFull issue described here with more details:\r\nhttps://stackoverflow.com/q/50236246/2901207"},{"Id":"7640581781","Type":"PullRequestEvent","CreatedAt":"2018-05-07T23:32:10","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1780","RelatedDescription":"Merged pull request \"Upgrade to netcoreapp22\" (#1780) at aspnet/Identity","RelatedBody":null}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7652884464","Type":"PullRequestEvent","CreatedAt":"2018-05-10T00:28:39","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2551","RelatedDescription":"Merged pull request \"Merge release/2.1 into dev\" (#2551) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7652756383","Type":"PullRequestEvent","CreatedAt":"2018-05-09T23:43:17","Actor":"pranavkm","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2559","RelatedDescription":"Merged pull request \"Revert \"Revert \"Don't touch product repos\"\"\" (#2559) at aspnet/KestrelHttpServer","RelatedBody":"This reverts commit fe9da3c57b18407a61df1f8a6d9851bf7b8407e1."},{"Id":"7652652428","Type":"PullRequestEvent","CreatedAt":"2018-05-09T23:07:19","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2560","RelatedDescription":"Opened pull request \"Enable pubternal analyzer\" (#2560) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7652569036","Type":"PullRequestEvent","CreatedAt":"2018-05-09T22:41:09","Actor":"pranavkm","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2559","RelatedDescription":"Opened pull request \"Revert \"Revert \"Don't touch product repos\"\"\" (#2559) at aspnet/KestrelHttpServer","RelatedBody":"This reverts commit fe9da3c57b18407a61df1f8a6d9851bf7b8407e1."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7652400057","Type":"IssuesEvent","CreatedAt":"2018-05-09T21:54:28","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1760","RelatedDescription":"Closed issue \"Make TagHelperDescriptorFactory errors provide more information\" (#1760) at aspnet/Razor","RelatedBody":"For instance, when a `TagHelper`s tag name or attribute name is null or whitespace we don't provide the TagHelper type that we're looking at. If we put that information in the error it would be much easier to diagnose issues.\r\n\r\nFor instance: https://github.com/aspnet/Mvc/issues/7029"},{"Id":"7651028934","Type":"IssuesEvent","CreatedAt":"2018-05-09T17:06:15","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2343","RelatedDescription":"Closed issue \"Name space Auto Complete is not working after @using \" (#2343) at aspnet/Razor","RelatedBody":"I'm facing this issue in when I want to declare a namespace on a razor page.\r\n![asp razor issue](https://user-images.githubusercontent.com/19934571/39815740-77de93f8-53b2-11e8-8fa2-356d56811e12.gif)\r\n"},{"Id":"7650713093","Type":"IssuesEvent","CreatedAt":"2018-05-09T16:04:35","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2313","RelatedDescription":"Closed issue \"Allow tag helper string attributes to honor null values\" (#2313) at aspnet/Razor","RelatedBody":"I have a view component that needs to be able to understand the difference between a null and empty string. when I use the following the view component is still retrieving an empty string.\r\n\r\n```html\r\n<vc:product-line-list exclude=\"@(Enumerable.Empty<string>())\" selected=\"@ViewData[\"selected\"]\" has-key-nomen=\"@null\"></vc:product-line-list>\r\n```\r\naspnet/mvc#7708"},{"Id":"7649597313","Type":"IssuesEvent","CreatedAt":"2018-05-09T12:58:04","Actor":"sohaibahsan007","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2343","RelatedDescription":"Opened issue \"Name space Auto Complete is not working after @using \" (#2343) at aspnet/Razor","RelatedBody":"I'm facing this issue in when I want to declare a namespace on a razor page.\r\n![asp razor issue](https://user-images.githubusercontent.com/19934571/39815740-77de93f8-53b2-11e8-8fa2-356d56811e12.gif)\r\n"},{"Id":"7648026631","Type":"IssuesEvent","CreatedAt":"2018-05-09T07:23:14","Actor":"janis-veinbergs","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2342","RelatedDescription":"Opened issue \"View Components cannot be included, mystery exception references irrelevant model.\" (#2342) at aspnet/Razor","RelatedBody":"This is a follow up to https://github.com/aspnet/Docs/issues/6278 A quest trying to figure out what is the default search path for ViewComponents\r\n\r\nProbably I am doing something wrong, but I cannot get ViewComponent to be included in a page. \r\n\r\n\r\nI have a folder structure:\r\n```\r\n- Pages\r\n  - Components\r\n    - ExternalSystems\r\n      - Default.cshtml\r\n- Views\r\n  - Shared\r\n    - Components\r\n      - ExternalSystems\r\n        - Default.cshtml\r\n```\r\n\r\nwithin `Pages/Index.cshtml` i'v tried to include this component by trial & error (i'm learning this stuff after all):\r\n```\r\n@await Component.InvokeAsync(\"ExternalSystems\");\r\n@await Component.InvokeAsync(\"/Pages/Components/ExternalSystems\");\r\n@await Component.InvokeAsync(\"/Pages/Components/ExternalSystems/Default\");\r\n@await Component.InvokeAsync(\"/Pages/Components/ExternalSystems/Default.cshtml\");\r\n@await Component.InvokeAsync(\"/Views/Shared/ExternalSystems\");\r\n```\r\n\r\nI expected that exception will show places searched like it does for `@Html.Partial`:\r\n> InvalidOperationException: The partial view 'none' was not found. The following locations were searched: /Pages/none.cshtml /Views/Shared/none.cshtml\r\n\r\nHowever for every single call to `@await Component.InvokeAsync` it spits this exception: `InvalidOperationException: Could not find an 'Invoke' or 'InvokeAsync' method for the view component '<Stripped.Out>.Pages.Identities.IndexModel'.`\r\nFirst of all, it doesn't show me paths searched. Second, wait what? Why are you telling me something about Pages.Identities. Yes, I have that model, but it is nowhere referenced in neither `Pages/Index.cshtml` or View Component i'm trying to include.\r\n\r\nCould someone please provide me with a guidance to determine: How view component paths are searched? For Razor Pages it is not documented, only in [3rd party site](https://www.learnrazorpages.com/razor-pages/view-components). \r\nAnyway it doesn't work that way for me - what would be the debugging steps? Console debug doesn't show anything useful."},{"Id":"7647718118","Type":"PullRequestEvent","CreatedAt":"2018-05-09T05:54:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2341","RelatedDescription":"Opened pull request \"Track the open/closed state of documents\" (#2341) at aspnet/Razor","RelatedBody":"This change intoduces content changes to our project snapshots. We now\r\nknow the open/closed state of documents that are initialized by the\r\nRazor project system and listen to the correct data source based on\r\nwhether the file is open in the editor.\r\n\r\nThere are a few other random improvements in here as well like a\r\nworkaround for the upcoming name change to our OOP client type."},{"Id":"7646786309","Type":"IssuesEvent","CreatedAt":"2018-05-08T23:55:11","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2335","RelatedDescription":"Closed issue \"Make Razor's Workspace lookup logic work with live share\" (#2335) at aspnet/Razor","RelatedBody":"We need to add a way for liveshare to find its own remote workspace."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":473,"FavoriteCount":268,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2018-05-10T05:30:14.3298797Z","RunDurationInMilliseconds":8591}