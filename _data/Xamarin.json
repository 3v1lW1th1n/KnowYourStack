{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8861013232","Type":"IssuesEvent","CreatedAt":"2019-01-09T22:48:54","Actor":"samhouts","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2602","RelatedDescription":"Opened issue \"Gravity property in TextView is not working when TextView is added and measured in custom FrameLayout in Xamarin Android\" (#2602) at xamarin/xamarin-android","RelatedBody":"_From @Ganeshamoorthy10 on January 9, 2019 15:0_\n\n### Description\r\n\r\nMy requirement is to set the text at the end/right in the TextView which is added and measured in Custom frame layout, when i set Gravity as Centre its not working, other Gravity options also not working. Gravity property is working when TextView is not manually measured in custom frame layout. Kindly find the sample and code snippet below,\r\n\r\n**Code snippet:** \r\n\r\n ```\r\npublic class CustomLayout : FrameLayout\r\n{\r\n    public CustomLayout(Context context) : base(context)\r\n    {\r\n    }\r\n\r\n    protected override void OnLayout(bool changed, int left, int top, int right, int bottom)\r\n    {\r\n        this.GetChildAt(0).Layout(left, 20, right / 2, 200);\r\n    }\r\n\r\n    protected override void OnMeasure(int widthMeasureSpec, int heightMeasureSpec)\r\n    {\r\n        base.OnMeasure(widthMeasureSpec, heightMeasureSpec);\r\n\r\n        var width = MeasureSpec.GetSize(widthMeasureSpec);\r\n        var height = MeasureSpec.GetSize(heightMeasureSpec);\r\n\r\n        this.GetChildAt(0).Measure(width / 2, 200);\r\n    }\r\n}\r\n\r\nprotected override void OnCreate(Bundle savedInstanceState)\r\n{\r\n    base.OnCreate(savedInstanceState);\r\n\r\n    var label = new TextView(this);\r\n    label.Text = \"Label\";\r\n    label.SetBackgroundColor(Color.Gray);\r\n    label.Gravity = GravityFlags.Center;\r\n\r\n    var customLayout = new CustomLayout(this);\r\n    customLayout.AddView(label);\r\n\r\n    SetContentView(customLayout);\r\n}\r\n```\r\n\r\n**Sample:**\r\n[Sample_Android.zip](https://github.com/xamarin/Xamarin.Forms/files/2741358/Sample_Android.zip)\r\n\r\n### Screenshots\r\n![textview](https://user-images.githubusercontent.com/39787321/50907316-10e52200-144d-11e9-9624-2531331b2cf6.png)\r\n\r\n**Note:**\r\nI have also checked in Latest Xamarin version (v3.4)\r\n\n\n_Copied from original issue: xamarin/Xamarin.Forms#4934_"},{"Id":"8859633059","Type":"PullRequestEvent","CreatedAt":"2019-01-09T18:30:49","Actor":"kzu","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2601","RelatedDescription":"Opened pull request \"Add support for background builds when the IDE supports them\" (#2601) at xamarin/xamarin-android","RelatedBody":"In order to take the most expensive target in a DTB (`UpdateAndroidResources`) out \r\nof the DTB, the IDE can monitor design-time builds and schedule a background build \r\nto run after the DTB finishes. \r\n\r\nWhen the IDE supports background builds, the  `BackgroundBuildSupported` will be \r\ntrue, and in that case, the `BackgroundBuild` target will run after the DTB finishes. To \r\nschedule targets to run as part of that background build, they need to be added to \r\nthe `BackgroundBuildDependsOn` property. \r\n\r\nTargets can selectively disable themselves on DTBs when the background build is \r\nsupported by checking for both `'$(BackgroundBuildSupported)' == 'true'` and the \r\n`'$(BackgroundBuild)' == 'true'` property, which is set for those builds. \r\n\r\nThe background build queuing will be based on the following condition: a regular design\r\ntime build was triggered and the targets run were either \"Compile\" or any target\r\nthat contains \"DesignTime\" in its name (this excludes queuing a background build\r\nwhen a target like `GetFrameworkPaths` or `GetTargetPath` is run in a DTB, for\r\nexample).\r\n\r\nNote that `Inputs`/`Outputs` on the targets, as well as any `DependsOnTargets`\r\nspecified remain the same as before. The effect is that expensive targets that caused\r\na slow DTB before, can now be scheduled to run *after* the build finishes (this is\r\nwhen the background build is queued).\r\n\r\nIt's entirely opt-in (if no targets are specified for `BackgroundBuildDependsOn`\r\nit will be essentially a no-op run).\r\n\r\nFinally, when a regular build starts, the existing background build will be waited for \r\ncompletion before continuing, to ensure no concurrency happens."},{"Id":"8859625503","Type":"PullRequestEvent","CreatedAt":"2019-01-09T18:29:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2600","RelatedDescription":"Merged pull request \"[android-toolchain] Version the NDK `.stamp` file\" (#2600) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2592\r\nContext: https://jenkins.mono-project.com/job/xamarin-android-pr-builder-release/339/console\r\n\r\nRecall commit b28856f4 and the behavior of \"forward only\"\r\ndependencies: some dependencies can only be easily \"upgraded,\" and not\r\nreverted.  Commit b28856f4 dealt with MXE, and \"solved\" the\r\n\"downgrade\" problem by encoding the MXE hash into the MXE installation\r\ndirectory, so that multiple MXE installations can exist.\r\n\r\nTurns Out™, the NDK is in a similar scenario: because the\r\n`_UnzipFiles` target within `android-toolchain.targets` only executes\r\nwhen one of the input files has *changed*, e.g. a new NDK `.zip` file\r\nwas downloaded, then when the NDK is \"downgraded\" but the \"downgraded\"\r\nNDK `.zip` *already existed*, the \"older\" NDK wouldn't be installed:\r\n\r\n 1. PR #2592 is a PR to update the NDK, and is built on a machine.\r\n    As part of building #2592, `$HOME/android-toolchain/ndk` is\r\n    upgraded to NDK r18.\r\n\r\n 2. As part of upgrading the build machine to NDK r18,\r\n    `$HOME/android-archives` contains `android-ndk-*.zip` files for\r\n    *at least* NDK r14b and r18.\r\n\r\n 3. \"Later\", a different PR is executed on the same build machine.\r\n    This different PR doesn't further change the NDK, i.e. it's still\r\n    specifying NDK r14b, and r14b is already present on the machine.\r\n\r\n 4. The NDK is *not* \"downgraded\" to r14b from r18, and the build\r\n    attempts to use NDK r18.\r\n\r\nThe build then fails:\r\n\r\n\txamarin-android/external/sqlite/dist/sqlite3.c(33031,9): error G3127DA5A: use of undeclared identifier 'ANDROID_FDSAN_OWNER_TYPE_SQLITE'; did you mean 'ANDROID_FDSAN_OWNER_TYPE_FILE'?\r\n\txamarin-android/external/sqlite/dist/sqlite3.c(33616,7): error G3127DA5A: use of undeclared identifier 'ANDROID_FDSAN_OWNER_TYPE_SQLITE'; did you mean 'ANDROID_FDSAN_OWNER_TYPE_FILE'?\r\n\txamarin-android/src/sqlite-xamarin/sqlite-xamarin.targets(27,5): error MSB3073: The command \"/Users/builder/android-toolchain/sdk/cmake/3.6.4111459/bin/ninja -v\" exited with code 1.\r\n\r\nThis makes for a brittle build environment.\r\n\r\nSupport NDK downgrades by embedding the NDK version into the generated\r\nstamp file, e.g. `$HOME/android-toolchain/ndk/.stamp-ndk-r14b`.  This\r\nallows \"normal file timestamps\" to be used to determine if the NDK\r\nneeds to be recreated, which will allow the build machine to recreate\r\nthe NDK when the NDK version changes."},{"Id":"8859514671","Type":"PullRequestEvent","CreatedAt":"2019-01-09T18:09:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2600","RelatedDescription":"Opened pull request \"[android-toolchain] Version the NDK `.stamp` file\" (#2600) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2592\r\nContext: https://jenkins.mono-project.com/job/xamarin-android-pr-builder-release/339/console\r\n\r\nRecall commit b28856f4 and the behavior of \"forward only\"\r\ndependencies: some dependencies can only be easily \"upgraded,\" and not\r\nreverted.  Commit b28856f4 dealt with MXE, and \"solved\" the\r\n\"downgrade\" problem by encoding the MXE hash into the MXE installation\r\ndirectory, so that multiple MXE installations can exist.\r\n\r\nTurns Out™, the NDK is in a similar scenario: because the\r\n`_UnzipFiles` target within `android-toolchain.targets` only executes\r\nwhen one of the input files has *changed*, e.g. a new NDK `.zip` file\r\nwas downloaded, then when the NDK is \"downgraded\" but the \"downgraded\"\r\nNDK `.zip` *already existed*, the \"older\" NDK wouldn't be installed:\r\n\r\n 1. PR #2592 is a PR to update the NDK, and is built on a machine.\r\n    As part of building #2592, `$HOME/android-toolchain/ndk` is\r\n    upgraded to NDK r18.\r\n\r\n 2. As part of upgrading the build machine to NDK r18,\r\n    `$HOME/android-archives` contains `android-ndk-*.zip` files for\r\n    *at least* NDK r14b and r18.\r\n\r\n 3. \"Later\", a different PR is executed on the same build machine.\r\n    This different PR doesn't further change the NDK, i.e. it's still\r\n    specifying NDK r14b, and r14b is already present on the machine.\r\n\r\n 4. The NDK is *not* \"downgraded\" to r14b from r18, and the build\r\n    attempts to use NDK r18.\r\n\r\nThe build then fails:\r\n\r\n\txamarin-android/external/sqlite/dist/sqlite3.c(33031,9): error G3127DA5A: use of undeclared identifier 'ANDROID_FDSAN_OWNER_TYPE_SQLITE'; did you mean 'ANDROID_FDSAN_OWNER_TYPE_FILE'?\r\n\txamarin-android/external/sqlite/dist/sqlite3.c(33616,7): error G3127DA5A: use of undeclared identifier 'ANDROID_FDSAN_OWNER_TYPE_SQLITE'; did you mean 'ANDROID_FDSAN_OWNER_TYPE_FILE'?\r\n\txamarin-android/src/sqlite-xamarin/sqlite-xamarin.targets(27,5): error MSB3073: The command \"/Users/builder/android-toolchain/sdk/cmake/3.6.4111459/bin/ninja -v\" exited with code 1.\r\n\r\nThis makes for a brittle build environment.\r\n\r\nSupport NDK downgrades by embedding the NDK version into the generated\r\nstamp file, e.g. `$HOME/android-toolchain/ndk/.stamp-ndk-r14b`.  This\r\nallows \"normal file timestamps\" to be used to determine if the NDK\r\nneeds to be recreated, which will allow the build machine to recreate\r\nthe NDK when the NDK version changes."},{"Id":"8859509633","Type":"PullRequestEvent","CreatedAt":"2019-01-09T18:08:00","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2599","RelatedDescription":"Opened pull request \"[C++ification] Making AndroidSystem class more C++ and faster\" (#2599) at xamarin/xamarin-android","RelatedBody":"It's a start of effort to slowly (and piece by piece) modify our runtime code\r\naway from the C syntax toward the C++ one, using idioms and constructs from the\r\nlatter wherever possible, practical or simply better. The goal is to have code\r\nthat's safer, more correct, faster as well as to expose only the minimum\r\n\"public\" API of every class in the interest of minimizing the potential of code\r\nabuse.\r\n\r\nAt the same time, the changes should not affect the way the code works on the\r\nruntime (unless the change implements a performance increase)\r\n\r\nEach commit/PR in this series will attempt to mimimize collateral changes to\r\nother classes/parts of code, but sometimes (as in this case) there will be\r\nminimal changes in other areas related to the main class changed by a commit.\r\n\r\nThe following changes to the `AndroidSystem` class are made in this commit:\r\n\r\n  * The `BundledProperty` structure moves to `android-system.cc` - it has no use\r\n    outside the class\r\n  * Several `printf` family calls are replaced with either simple `strdup` or by\r\n    compile-time string concatenation.\r\n  * `for` loops use `size_t` type for the counter variable\r\n  * `nullptr` is used in place of the `!pointer` or `pointer` in conditional\r\n    expressions or asserts.\r\n  * The `_monodroid__system_property_get` overload which uses `popen(3)` to\r\n    retrieve the property is removed - the `__system_property_get` call is still\r\n    present in the Android NDK (albeit deprecated) and since we're compiling\r\n    against API16 at least, we're in no immediate danger of missing that call\r\n  * Local function variables are moved closer to places where they are first\r\n    initialized/used.\r\n  * Replaced the `TRY_LIBMONOSGEN` macro with an inline function\r\n  * Replaced use of `mono_bool` with the C++ type `bool`\r\n  * Replaced a number of `malloc/free` calls with `new/delete`\r\n  * The `MONO_SGEN_ARCH_SO` constant is now generated on the compile time\r\n    instead of on the runtime.\r\n\r\nOther changes:\r\n\r\n  * Define the `ANDROID64` macro on build time if targetting 64-bit Android.\r\n    This macro was mistakenly omitted in conversion to `cmake`\r\n  * Fix a handful of warnings regarding our `new/delete` operator\r\n    implementations."},{"Id":"8858993259","Type":"PullRequestEvent","CreatedAt":"2019-01-09T16:44:08","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2598","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks]  Fix XAMARIN_BUILD_ID so if doesnt trigger _CompileJava.\" (#2598) at xamarin/xamarin-android","RelatedBody":"Commit b90d3ab7 altered where we generate the Guid for the\r\n`XAMARIN_BUILD_ID`. This change resulted in the `_CompileJava`\r\ntarget running on every build. This was because the Guid and\r\nthe resultng `AndroidEnvironment.java` file changed on every\r\nbuild.\r\n\r\nThe `XAMARIN_BUILD_ID` should only change when an apk is\r\nbuilt. This is so the same id can be written to both the\r\napk and the msym archive.\r\n\r\nThis commit introduces a `buildid.txt` file in the\r\n`$(IntermediateOutputPath)` which contains the build id. If\r\nthis file is not present than a new `Guid` will be\r\ngenerated and used in the `$(_XamarinBuildId)` property.\r\nThis property will then be used for the java code and\r\nwritten to the file.\r\n\r\nWhen we finally create the msym archive we then delete the\r\n`buildid.txt` file so that a new one will be generated on\r\nthe next build. This file will then remain until an apk\r\nis build. We will use the new file as an Input to\r\n`_GeneratePackageManagerJava` so that if it is missing or\r\nhas been changed it will trigger that target. This will\r\nthen correctly trigger the `_CompileJava` target."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8861686463","Type":"IssuesEvent","CreatedAt":"2019-01-10T01:52:27","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4885","RelatedDescription":"Closed issue \"Gesture not firing for custom renderer on iOS\" (#4885) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nGiven a gesture recognizer on a `View` _with_ custom renderer, the gesture is not firing events on iOS.\r\n\r\nThis code\r\n\r\n```\r\n<ContentPage.Content>\r\n        <AbsoluteLayout HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"FillAndExpand\">\r\n            <vlc:VideoView x:Name=\"videoView\" MediaPlayer=\"{Binding MediaPlayer}\" AbsoluteLayout.LayoutBounds=\"0,0,1,1\" AbsoluteLayout.LayoutFlags=\"All\">\r\n                <vlc:VideoView.GestureRecognizers>\r\n                    <PanGestureRecognizer PanUpdated=\"PanGestureRecognizer_PanUpdated\"/>\r\n                </vlc:VideoView.GestureRecognizers>\r\n            </vlc:VideoView>\r\n            <Label Text=\"{Binding Message}\" AbsoluteLayout.LayoutBounds=\".5,1,1,.1\" AbsoluteLayout.LayoutFlags=\"All\" FontSize=\"20\" LineBreakMode=\"WordWrap\" TextColor=\"White\" />\r\n        </AbsoluteLayout>\r\n    </ContentPage.Content>\r\n```\r\n\r\nWorks fine on Android, while `PanGestureRecognizer_PanUpdated` is never raised on iOS.\r\n\r\nUsing an `Image` instead of the `VideoView` (custom renderer) works as expected on iOS.\r\nI don't think a custom renderered View needs any particular setup to make gesture recognizers work. So I'm confused as to why it works on Android and not on iOS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. git clone https://github.com/mfkl/libvlcsharp-samples/\r\n2. git checkout gestures\r\n3. run Gestures.iOS and touch the screen\r\n\r\n### Expected Behavior\r\n\r\nPan events fire.\r\n\r\n### Actual Behavior\r\n\r\nPan events don't fire.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0967583\r\n- IDE: VS4Mac 7.7.2\r\n- Platform Target Framework:\r\n  - iOS:  12.2.1.12\r\n\r\n\r\nThanks for looking into it. \r\n"},{"Id":"8861093081","Type":"IssuesEvent","CreatedAt":"2019-01-09T23:06:42","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4946","RelatedDescription":"Opened issue \"Tests in Issue3624 fails\" (#4946) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nRunning tests for #3624 fails on Android.\r\n"},{"Id":"8861013456","Type":"IssuesEvent","CreatedAt":"2019-01-09T22:48:57","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4934","RelatedDescription":"Closed issue \"Gravity property in TextView is not working when TextView is added and measured in custom FrameLayout in Xamarin Android\" (#4934) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nMy requirement is to set the text at the end/right in the TextView which is added and measured in Custom frame layout, when i set Gravity as Centre its not working, other Gravity options also not working. Gravity property is working when TextView is not manually measured in custom frame layout. Kindly find the sample and code snippet below,\r\n\r\n**Code snippet:** \r\n\r\n ```\r\npublic class CustomLayout : FrameLayout\r\n{\r\n    public CustomLayout(Context context) : base(context)\r\n    {\r\n    }\r\n\r\n    protected override void OnLayout(bool changed, int left, int top, int right, int bottom)\r\n    {\r\n        this.GetChildAt(0).Layout(left, 20, right / 2, 200);\r\n    }\r\n\r\n    protected override void OnMeasure(int widthMeasureSpec, int heightMeasureSpec)\r\n    {\r\n        base.OnMeasure(widthMeasureSpec, heightMeasureSpec);\r\n\r\n        var width = MeasureSpec.GetSize(widthMeasureSpec);\r\n        var height = MeasureSpec.GetSize(heightMeasureSpec);\r\n\r\n        this.GetChildAt(0).Measure(width / 2, 200);\r\n    }\r\n}\r\n\r\nprotected override void OnCreate(Bundle savedInstanceState)\r\n{\r\n    base.OnCreate(savedInstanceState);\r\n\r\n    var label = new TextView(this);\r\n    label.Text = \"Label\";\r\n    label.SetBackgroundColor(Color.Gray);\r\n    label.Gravity = GravityFlags.Center;\r\n\r\n    var customLayout = new CustomLayout(this);\r\n    customLayout.AddView(label);\r\n\r\n    SetContentView(customLayout);\r\n}\r\n```\r\n\r\n**Sample:**\r\n[Sample_Android.zip](https://github.com/xamarin/Xamarin.Forms/files/2741358/Sample_Android.zip)\r\n\r\n### Screenshots\r\n![textview](https://user-images.githubusercontent.com/39787321/50907316-10e52200-144d-11e9-9624-2531331b2cf6.png)\r\n\r\n**Note:**\r\nI have also checked in Latest Xamarin version (v3.4)\r\n"},{"Id":"8860896956","Type":"PullRequestEvent","CreatedAt":"2019-01-09T22:24:19","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4870","RelatedDescription":"Merged pull request \"[iOS] CollectionView EmptyView\" (#4870) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImplements the EmptyView rendering for the CollectionView on iOS.\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nIn ControlGallery, navigate to CollectionView Galleries -> EmptyView Galleries.\r\n\r\nShould have some automated tests once #4697 is merged.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8860773190","Type":"PullRequestEvent","CreatedAt":"2019-01-09T22:00:38","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4945","RelatedDescription":"Opened pull request \"[tests] UWP requires file extensions\" (#4945) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8860727375","Type":"PullRequestEvent","CreatedAt":"2019-01-09T21:52:15","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4944","RelatedDescription":"Opened pull request \"[tests] UWP requires file extensions\" (#4944) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8860662821","Type":"IssuesEvent","CreatedAt":"2019-01-09T21:40:30","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4943","RelatedDescription":"Opened issue \"Issue4600.cs can't run\" (#4943) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI was testing Issue4600.cs on UWP (but this probably affects all platforms) and the test can't actually run.\r\n\r\nAlso, there is no instructions on what to do (if anything).\r\n\r\nAnd, there is no way to go back, at least on UWP\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8860646996","Type":"PullRequestEvent","CreatedAt":"2019-01-09T21:37:43","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4942","RelatedDescription":"Closed pull request \"[tests] make sure to wrap the items\" (#4942) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI was testing Issue4600.cs and this appeared to be wrong. \r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8860631339","Type":"PullRequestEvent","CreatedAt":"2019-01-09T21:34:46","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4942","RelatedDescription":"Opened pull request \"[tests] make sure to wrap the items\" (#4942) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI was testing Issue4600.cs and this appeared to be wrong. \r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8860252605","Type":"IssuesEvent","CreatedAt":"2019-01-09T20:23:11","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5250","RelatedDescription":"Closed issue \"Sample with entity framework fails to launch with 15.9 XI builds\" (#5250) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1.  Install XI 12.2.1.12\r\n2. Build and launch the attached project on device\r\n\r\n### Expected Behavior\r\nApp should successfully launch on device\r\n\r\n### Actual Behavior\r\nApp fails to launch on device with an error, Unhandled Exception:\r\nSystem.ExecutionEngineException: Attempting to JIT compile method '(wrapper runtime-invoke) :runtime_invoke_void__this___int_byte_object_object_DateTime_Nullable`1_Decimal_Guid_Nullable`1_Nullable`1 (object,intptr,intptr,intptr)' while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n  at (wrapper managed-to-native) System.Reflection.MonoCMethod.InternalInvoke(System.Reflection.MonoCMethod,object,object[],System.Exception&)\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/GouriKumari/6afd85fa510ae3e1b171049c139b2792\r\n\r\n### Build Logs\r\nBuild log: https://gist.github.com/GouriKumari/87b58e29eae2925554f31c63ef407aa9\r\nError Log: https://gist.github.com/GouriKumari/12c16adfdc3b8b9bbbaadd60591e58a3\r\n\r\n### Example Project (If Possible)\r\nhttps://www.dropbox.com/s/z3sjkwk5s3yi4zt/iOSEFCore21.zip?dl=0\r\n\r\n##Additional Info:\r\n\r\nThis issue is reproducible only with 15.9 builds and it is not occurring with master builds. I have a test run where  sample launched successfully with 12.2.1.10, the d15-9 RTW build. But the sample is now failing to launch with RTW build. I couldn't figure out the reason. \r\n\r\nApp launches successfully on iOS simulator with d15-9 builds. \r\n\r\n"},{"Id":"8860046041","Type":"IssuesEvent","CreatedAt":"2019-01-09T19:44:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5226","RelatedDescription":"Closed issue \"Got a SIGSEGV while executing native code\" (#5226) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n\r\n### Expected Behavior\r\nOpen ViewController to select items\r\n### Actual Behavior\r\nApp is crashing after open and close ViewController\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.7 (build 1868)\r\nInstallation UUID: 4cb88bbd-3027-4206-9e44-ff02a726a40e\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\nMono Framework MDK\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\nNuGet\r\nVersão: 4.7.0.5148\r\n\r\n.NET Core\r\nTempo de execução: /usr/local/share/dotnet/dotnet\r\nVersões de Tempo de Execução:\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.500/Sdks\r\nVersões do SDK:\r\n\t2.1.500\r\n\t2.1.302\r\n\t2.1.4\r\nSDKs do MSBuild: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersão: 1.6.4\r\nLocal: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\nXamarin.Mac\r\nVersion: 5.2.1.11 (Visual Studio Community)\r\nHash: 5ef73d34\r\nBranch: \r\nBuild date: 2018-11-21 00:03:25-0500\r\n\r\nXamarin.iOS\r\nVersion: 12.2.1.11 (Visual Studio Community)\r\nHash: 5ef73d34\r\nBranch: d15-9\r\nBuild date: 2018-11-21 00:03:24-0500\r\n\r\nXamarin.Android\r\nVersão: 9.1.0.38 (Visual Studio Community)\r\nAndroid SDK: /Users/cristianowinter/Library/Android/sdk\r\n\tVersões Android com suporte:\r\n\t\t5.0 (nível da API 21)\r\n\t\t6.0 (nível da API 23)\r\n\t\t7.0 (nível da API 24)\r\n\t\t7.1 (nível da API 25)\r\n\t\t8.0 (nível da API 26)\r\n\t\t8.1 (nível da API 27)\r\n\r\nVersão das Ferramentas de SDK: 26.1.1\r\nVersão das Ferramentas da Plataforma SDK: 27.0.1\r\nVersão das Ferramentas de Build do SDK: 27.0.3\r\n\r\nJava SDK: /Users/cristianowinter/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nO código EPL do Designer Android está disponível aqui:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nAndroid Device Manager\r\nVersion: 7.7.1.0\r\nHash: 06ceaea1\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 707001868\r\nGit revision: 8bcdfa96d67c8c88dc45728cc968a2f84b55322f\r\nBuild date: 2018-11-22 12:19:29+00\r\nBuild branch: release-7.7\r\nXamarin extensions: d66dbedcda237cd9b546abfecfeecafba6f8e3cb\r\n\r\nOperating System\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Sun Aug  5 20:59:30 PDT 2018\r\n    root:xnu-4903.200.354~13/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed extensions\r\nMvvmCross Template pack 2.0.1\r\n\r\n```\r\n\r\n### StackTrace\r\n\r\n```\r\n2018-12-04 13:15:55.000 MyApp.iOS[342:16833830] critical: Stacktrace:\r\n\r\n2018-12-04 13:15:55.000 MyApp.iOS[342:16833830] critical:   at <unknown> <0xffffffff>\r\n2018-12-04 13:15:55.001 MyApp.iOS[342:16833830] critical:   at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain (int,string[],intptr,intptr) <0x00007>\r\n2018-12-04 13:15:55.002 MyApp.iOS[342:16833830] critical:   at UIKit.UIApplication.Main (string[],intptr,intptr) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.11/src/Xamarin.iOS/UIKit/UIApplication.cs:79\r\n2018-12-04 13:15:55.002 MyApp.iOS[342:16833830] critical:   at UIKit.UIApplication.Main (string[],string,string) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.11/src/Xamarin.iOS/UIKit/UIApplication.cs:63\r\n2018-12-04 13:15:55.003 MyApp.iOS[342:16833830] critical:   at MyApp.iOS.Application.Main (string[]) [0x00002] in /Users/cristianowinter/Projects/Dettan-Mobile/iOS/Main.cs:19\r\n2018-12-04 13:15:55.003 MyApp.iOS[342:16833830] critical:   at (wrapper runtime-invoke) object.runtime_invoke_dynamic (intptr,intptr,intptr,intptr) [0x0001e] in <c4a2fda8811f4542beb215065956a67b#888D4198-907A-751B-9A56-24C4BD676857>:0\r\n2018-12-04 13:15:55.003 MyApp.iOS[342:16833830] critical: \r\nNative stacktrace:\r\n\r\n2018-12-04 13:15:55.045 MyApp.iOS[342:16833830] critical: \t0   libmonosgen-2.0.dylib               0x0000000103e78d18 mono_handle_native_crash + 224\r\n2018-12-04 13:15:55.045 MyApp.iOS[342:16833830] critical: \t1   libmonosgen-2.0.dylib               0x0000000103e869e8 mono_sigsegv_signal_handler + 316\r\n2018-12-04 13:15:55.045 MyApp.iOS[342:16833830] critical: \t2   libsystem_platform.dylib            0x00000001b01b2a20 <redacted> + 56\r\n2018-12-04 13:15:55.045 MyApp.iOS[342:16833830] critical: \t3   CoreFoundation                      0x00000001b0490200 <redacted> + 68\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t4   CoreFoundation                      0x00000001b048e5f4 <redacted> + 392\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t5   UIKitCore                           0x00000001dce05604 <redacted> + 60\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t6   UIKitCore                           0x00000001dcde6c80 <redacted> + 1128\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t7   UIKitCore                           0x00000001dcde72d8 <redacted> + 100\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t8   UIKitCore                           0x00000001dcd0c6f4 <redacted> + 920\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t9   UIKitCore                           0x00000001dd3b0800 <redacted> + 296\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t10  UIKitCore                           0x00000001dd39e840 <redacted> + 384\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t11  UIKitCore                           0x00000001dd3cdb78 <redacted> + 132\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t12  CoreFoundation                      0x00000001b0535b94 <redacted> + 32\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t13  CoreFoundation                      0x00000001b0530828 <redacted> + 412\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t14  CoreFoundation                      0x00000001b0530dc8 <redacted> + 1264\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t15  CoreFoundation                      0x00000001b05305b8 CFRunLoopRunSpecific + 436\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t16  GraphicsServices                    0x00000001b27a4584 GSEventRunModal + 100\r\n2018-12-04 13:15:55.046 MyApp.iOS[342:16833830] critical: \t17  UIKitCore                           0x00000001dd3a4bc8 UIApplicationMain + 212\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t18  libXamarin.iOS.dll.dylib            0x0000000100d743e8 wrapper_managed_to_native_UIKit_UIApplication_UIApplicationMain_int_string___intptr_intptr + 328\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t19  libXamarin.iOS.dll.dylib            0x0000000100d41ecc UIKit_UIApplication_Main_string___intptr_intptr + 44\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t20  libXamarin.iOS.dll.dylib            0x0000000100d41e8c UIKit_UIApplication_Main_string___string_string + 172\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t21  libMyApp.iOS.exe.dylib       0x0000000100c68414 MyApp_iOS_Application_Main_string__ + 164\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t22  libmscorlib.dll.dylib               0x0000000101363d18 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 248\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t23  libmonosgen-2.0.dylib               0x0000000103e89bb4 mono_jit_runtime_invoke + 904\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t24  libmonosgen-2.0.dylib               0x0000000103f0f9e0 mono_runtime_invoke_checked + 148\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t25  libmonosgen-2.0.dylib               0x0000000103f158c4 mono_runtime_exec_main_checked + 120\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t26  libmonosgen-2.0.dylib               0x0000000103e6945c mono_jit_exec + 268\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t27  libxamarin-debug.dylib              0x00000001041ccc88 xamarin_main + 2220\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t28  MyApp.iOS                    0x0000000100bc2cac main + 96\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \t29  libdyld.dylib                       0x00000001afff0b94 <redacted> + 4\r\n2018-12-04 13:15:55.047 MyApp.iOS[342:16833830] critical: \r\n=================================================================\r\nGot a SIGSEGV while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":268,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":178,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":114,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2019-01-10T05:31:10.224483Z","RunDurationInMilliseconds":2801}