{"Data":{"Blog":{"FeedItems":[{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null},{"Title":"View PDF Files within Your Xamarin.Forms Apps Using the Syncfusion PDF Viewer","PublishedOn":"2019-02-28T17:04:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Suresh Mohan. Suresh is the Product Manager for PDF Viewer at Syncfusion Software where he specializes in desktop and mobile app development. &#160;...","Href":"https://blog.xamarin.com/xamarin-forms-apps-syncfusion-pdf-viewer/","RawContent":null},{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming weeks, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: Releases, Previews, and Roadmaps!","PublishedOn":"2019-02-13T19:56:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. In this episode, we discuss the best of...","Href":"https://blog.xamarin.com/podcast-releases-previews-roadmaps/","RawContent":null},{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9178654008","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:51:09","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2789","RelatedDescription":"Opened pull request \"[docs] Add `make import-docs` and `make export-docs` targets\" (#2789) at xamarin/xamarin-android","RelatedBody":"Add a couple simple helper `make` targets to facilitate copying\r\ndocuments from the xamarin-android repository to and from the\r\ncorresponding files in the MicrosoftDocs/xamarin-docs-pr and\r\nMicrosoftDocs/xamarin-docs repositories.  For now, the targets only\r\ncover one example document that will be ready to export when\r\nhttps://github.com/xamarin/xamarin-android/pull/2788 is merged.\r\n\r\nI aimed for simple but useful in this first idea for these targets.  I\r\nmight have overlooked a good idea about some more sophisticated things\r\nthese targets should do.  I'm happy to go back to the drawing board if\r\nthis first draft doesn't look right.\r\n\r\nThanks!"},{"Id":"9178531627","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:23:23","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2788","RelatedDescription":"Opened pull request \"[docs] Prepare BuildProcess for sync to docs.microsoft.com\" (#2788) at xamarin/xamarin-android","RelatedBody":"  * Bring in the typo corrections from the current version of the\r\n    document on:\r\n    https://docs.microsoft.com/xamarin/android/deploy-test/building-apps/build-process\r\n  * Correct spelling and formatting of the newly added items.\r\n  * Remove trailing whitespace and adjust all the list items to use the\r\n    same indentation levels.\r\n  * Alphabetize the various items.  I double-checked the new order in\r\n    each section by `grep`ing to get the first line of each list item or\r\n    header element, removing the list and header markers, and then\r\n    `diff`ing with the output of `sort`.  All the sections now match the\r\n    `sort` order.\r\n\r\nAfter these changes, `BuildProcess.md` will be ready to copy into the\r\nMicrosoftDocs/xamarin-docs repository to update the document on\r\ndocs.microsoft.com."},{"Id":"9178454556","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:06:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2787","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix designer breakage around _BuildAdditionalResourcesCache\" (#2787) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/eca09c89db42c6dbd5cd2f57c6da2196d86ff761#diff-db39bf07b89b50eaab8ab2001546310cR459\r\n\r\nIn eca09c8, I fixed cases where our MSBuild targets were running every\r\ntime. We missed some breakage happening in the designer:\r\n\r\n1. NuGet restore on a new project\r\n2. Designer calls `SetupDependenciesForDesigner`\r\n3. Designer calls `GetExtraLibraryLocationsForDesigner`\r\n\r\n`GetExtraLibraryLocationsForDesigner` was not returning all the paths\r\nrequired, since `_BuildAdditionalResourcesCache` was skipped on step\r\nno. 2!\r\n\r\nTo fix this:\r\n\r\n* Moved the `Condition` from the target to the `<Touch/>` call.\r\n* This should allow the target to build incrementally, but still\r\n  prevent downloads on DTBs.\r\n\r\nI also updated a few tests around this scenario."},{"Id":"9176049087","Type":"PullRequestEvent","CreatedAt":"2019-03-04T16:36:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2786","RelatedDescription":"Merged pull request \"Don't include host *.so libraries in the APK\" (#2786) at xamarin/xamarin-android","RelatedBody":"APK building process includes a step to put native libraries (Mono runtime,\r\nXamarin.Android runtime etc) into the archive. This is done by including known\r\n`*.so` files from the per-architecture library directories in the\r\nXamarin.Android source tree or from a location on the end user's computer.\r\nUnfortunately, currently this process uses a glob pattern to find the required\r\nlibraries which may include Linux host libraries with those names, thus\r\nproducing the following error when attempting to build any application which\r\nneeds to embed SQLite, libMonoPosixHelper or (in the `mono-2018-10` branch)\r\nlibmono-native DSOs:\r\n\r\n    Adding native library: bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/lib/arm64-v8a/libmono-profiler-log.so (APK path: lib/arm64-v8a/libmono-profiler-log.so) (TaskId:320)\r\n      bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/lib/host-Linux/libmono-native.so : error XA4301: Cannot determine abi of native library\r\n      bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/lib/host-Linux/libmono-native.so. [xamarin-forms-samples/FormsGallery/FormsGallery/FormsGallery.Android/FormsGallery.Android.csproj]\r\n\r\nThis commit fixes the issue by constructing paths to all the supported ABI\r\nlocations before attempting to include the shared libraries from them, thus\r\nforgoing the need to use the glob pattern and removing the problem."},{"Id":"9175917499","Type":"PullRequestEvent","CreatedAt":"2019-03-04T16:19:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2785","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix issue with Adaptive Icons\" (#2785) at xamarin/xamarin-android","RelatedBody":"Fixes #2769\r\n\r\nOur `ConverResourcesCases` task was NOT processing\r\n`mipmap` xml items. The RegEx needed to be updated\r\nto include `mipmap` items so that we can lowercase\r\nthe items within those files.\r\n\r\nAlso added a unit test."},{"Id":"9175917454","Type":"IssuesEvent","CreatedAt":"2019-03-04T16:19:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2769","RelatedDescription":"Closed issue \"Mipmap Icon Error\" (#2769) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1.  Create a new Xamarin.Forms based Android App\r\n2.  Create a set of adaptive icons using Image Asset Studio that comes with Android Studio. This process created a set of 6 mipmap folders including mipmap-anydpi-26 and 5 for hdpi to xxxhdpi resoutions. \r\n3.    If your Xamarin Forms based Android project doesn't have those mipmap folders then copy those folders as-is under Resources directory (that was my case originally when I got this error) OR  if those folders exist then copy corresponding icons related files from and to the respective folders.\r\n4.  Updated mainactivity class, AndroidManifest.xml <application> tag with mipmap based values for icon and roundicon. \r\n\r\nIt will result the compilation failing indicating with the error - \"error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/{iconname_background} | same for foreground layer. \r\n\r\nYour help in addressing this error will be appreciated.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n**Repro solution -** \r\n[AdaptiveIconsAndroid.zip](https://github.com/xamarin/xamarin-android/files/2910384/AdaptiveIconsAndroid.zip)\r\n\r\n\r\n### Expected Behavior\r\nXamarin Forms - Android App to compile successfully and render adaptive icon depending on the target device and its resolution.\r\n\r\n### Actual Behavior\r\nBuild fails with the errors - \r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_background').\r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_foreground').\r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon_round.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_background').\r\n1>{User Directory}\\source\\repos\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid\\AdaptiveIconsAndroid.Android\\Resources\\mipmap-anydpi-v26\\AdaptiveIcon_round.xml(2): error APT0000: No resource found that matches the given name (at 'drawable' with value '@mipmap/AdaptiveIcon_foreground').\r\n\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.7\r\nVisualStudio.15.Release/15.9.7+28307.423\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA059\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.7000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.7000.1\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCodeMaid   10.6.144\r\nCodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.8.0.6968\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.7000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.7000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Mesh Tools (Preview)   0.1\r\nMicrosoft Azure Service Fabric Mesh Tools (Preview)\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.4\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.7000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNode.js Tools   1.4.21001.1 Commit Hash:8dd15923800d931b153ab9e4de74e42a74eba5e6\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nNuProjPackage   1.0\r\nNuGet Package Project System\r\n\r\nPlantUml Language Service   1.0\r\nProvides basic editor features for working with the PlantUml programming language\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61901.24070\r\nMicrosoft SQL Server Data Tools\r\n\r\nStylerPackage Extension   1.0\r\nStylerPackage Visual Stuido Extension Detailed Info\r\n\r\nSyncfusion ASP.NET Core (Essential JS 2) Project Templates   16.4.0.52\r\nProvides project templates for creating an ASP.NET Core Web Application using Syncfusion Essential JS 2 components.\r\n\r\nSyncfusion EJ2 Web Conversion and Migration   13.4.0.53\r\nConverts and migrates a web project into a Syncfusion web project.\r\n\r\nSyncfusion Xamarin Toolbox   16.4.0.52\r\nSyncfusion Essential Studio for Xamarin Toolbox Visual Studio extension.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.421\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.80 (d15-9@914127c74)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.15 (d60abd1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n[BuildOutput.log.txt](https://github.com/xamarin/xamarin-android/files/2910378/BuildOutput.log.txt)\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9174857284","Type":"PullRequestEvent","CreatedAt":"2019-03-04T13:59:49","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2786","RelatedDescription":"Opened pull request \"Don't include host *.so libraries in the APK\" (#2786) at xamarin/xamarin-android","RelatedBody":"APK building process includes a step to put native libraries (Mono runtime,\r\nXamarin.Android runtime etc) into the archive. This is done by including known\r\n`*.so` files from the per-architecture library directories in the\r\nXamarin.Android source tree or from a location on the end user's computer.\r\nUnfortunately, currently this process uses a glob pattern to find the required\r\nlibraries which may include Linux host libraries with those names, thus\r\nproducing the following error when attempting to build any application which\r\nneeds to embed SQLite, libMonoPosixHelper or (in the `mono-2018-10` branch)\r\nlibmono-native DSOs:\r\n\r\n    Adding native library: bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/lib/arm64-v8a/libmono-profiler-log.so (APK path: lib/arm64-v8a/libmono-profiler-log.so) (TaskId:320)\r\n      bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/lib/host-Linux/libmono-native.so : error XA4301: Cannot determine abi of native library\r\n      bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/lib/host-Linux/libmono-native.so. [xamarin-forms-samples/FormsGallery/FormsGallery/FormsGallery.Android/FormsGallery.Android.csproj]\r\n\r\nThis commit fixes the issue by constructing paths to all the supported ABI\r\nlocations before attempting to include the shared libraries from them, thus\r\nforgoing the need to use the glob pattern and removing the problem."},{"Id":"9174764936","Type":"PullRequestEvent","CreatedAt":"2019-03-04T13:46:11","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2785","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix issue with Adaptive Icons\" (#2785) at xamarin/xamarin-android","RelatedBody":"Fixes #2769\r\n\r\nOur `ConverResourcesCases` task was NOT processing\r\n`mipmap` xml items. The RegEx needed to be updated\r\nto include `mipmap` items so that we can lowercase\r\nthe items within those files.\r\n\r\nAlso added a unit test."},{"Id":"9174699207","Type":"IssuesEvent","CreatedAt":"2019-03-04T13:36:09","Actor":"vjlomocso","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2783","RelatedDescription":"Closed issue \"Allowing microphone permission in runtime has no effect the first time\" (#2783) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Request permission using API\r\n2. Allow permission\r\n3. call `AudioRecord#StartRecording`\r\n4. The AudioRecord#StartRecording method will throw an exception saying something like the AudioRecord is uninitialized. This is exactly what happens when you don't allow the permission.\r\n\r\nHere's a repro project\r\nhttps://github.com/vjlomocso/XamarinAndroidPermissionBug\r\n\r\n### Expected Behavior\r\nShould not throw exception after allowing permission\r\n\r\n### Actual Behavior\r\nThrows exception\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttps://github.com/vjlomocso/XamarinAndroidPermissionBug/blob/master/versioninfo.txt\r\n\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\nhttps://github.com/vjlomocso/XamarinAndroidPermissionBug/blob/master/logcat.log\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9179761572","Type":"IssuesEvent","CreatedAt":"2019-03-05T04:42:24","Actor":"alexanderzuban","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5451","RelatedDescription":"Opened issue \"Android/UWP ListView Memory Leak\" (#5451) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen updating ItemsSource for ListView cell views remains in memory both on Android(not so fast) and UWP(rapidly)\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Run sample app in Android/UWP\r\n2.  Click a few times on any item \r\n3.  Check debug output or diagnostic on UWM \r\n\r\n### Expected Behavior\r\nCell Views GC\r\n\r\n### Actual Behavior\r\n Cells grow in memory\r\n\r\nSample Project:\r\n[ListViewMemory.zip](https://github.com/xamarin/Xamarin.Forms/files/2929297/ListViewMemory.zip)\r\n"},{"Id":"9179194680","Type":"PullRequestEvent","CreatedAt":"2019-03-05T02:08:36","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5450","RelatedDescription":"Opened pull request \"ContextCompat.getColor if API < 23\" (#5450) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUse `ContextCompat.getColor` if API < 23 per https://stackoverflow.com/questions/31590714/getcolorint-id-deprecated-on-android-6-0-marshmallow-api-23\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes part of #5071\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone; Without this change, XF Shell throws on load for API under 23\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nLoad Shell Template\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9178657150","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:51:54","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5449","RelatedDescription":"Opened pull request \"remove covariant out on IElementConfiguration\" (#5449) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nCurrently there appears to be an issue with UWP where a DataContext that implements a covariant generic constrained interface performs very poorly\r\n\r\nIf you create a native UWP app and use the following ViewModel structure\r\n```C#\r\n\tpublic class ViewModel : IElementConfiguration<Element>\r\n\t{\r\n\t\tpublic string CompositionName { get; set; } = \"test class\";\r\n\t}\r\n\r\n\tpublic class Element\r\n\t{\r\n\r\n\t}\r\n\r\n\t// Remove the out on the generic or the constraint on the generic and rerun the application\r\n\tpublic interface IElementConfiguration<out TElement> where TElement : Element\r\n\t{\r\n\t}\r\n\r\n\r\n\tuwpListView.ItemsSource = Enumerable.Range(0,1000).Select(x=> new ViewModel()).ToList();\r\n```\r\n\r\nYou will see the same performance degradation\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Testing Procedure ###\r\n- Verify you can run UWP UI Tests\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9178620725","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:43:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5442","RelatedDescription":"Merged pull request \"[Android] remove android specific target\" (#5442) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nHaving a platform specific target\r\n```\r\n/build/MonoAndroid10/Xamarin.Forms.targets\r\n```\r\n\r\nBreaks shared projects\r\n\r\n### Testing Procedure ###\r\nInstall nuget into a shared project and a netstandard project and ensure xaml.g.cs files run.\r\nAfter installing the nuget close the project\r\ndelete all bin/obj folders\r\nreopen the project\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9179723145","Type":"PullRequestEvent","CreatedAt":"2019-03-05T04:30:31","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5716","RelatedDescription":"Merged pull request \"[passkit] Update for beta 4\" (#5716) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9179281343","Type":"PullRequestEvent","CreatedAt":"2019-03-05T02:31:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5717","RelatedDescription":"Opened pull request \"[mediaplayer] Update for beta 4\" (#5717) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9179260968","Type":"PullRequestEvent","CreatedAt":"2019-03-05T02:25:59","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5716","RelatedDescription":"Opened pull request \"[passkit] Update for beta 4\" (#5716) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9179233924","Type":"PullRequestEvent","CreatedAt":"2019-03-05T02:18:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5715","RelatedDescription":"Merged pull request \"Bump for Xcode 10.2 beta 4\" (#5715) at xamarin/xamarin-macios","RelatedBody":"- [webkit] Update for Xcode 10.2 beta 4"},{"Id":"9178458775","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:07:52","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5715","RelatedDescription":"Opened pull request \"Bump for Xcode 10.2 beta 4\" (#5715) at xamarin/xamarin-macios","RelatedBody":"- [webkit] Update for Xcode 10.2 beta 4"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":11,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":41,"FavoriteCount":18,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":21,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":25,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":17,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":37,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":67,"FavoriteCount":23,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":100,"FavoriteCount":43,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":29,"RawContent":null}]}},"RunOn":"2019-03-05T05:30:53.8599651Z","RunDurationInMilliseconds":2802}