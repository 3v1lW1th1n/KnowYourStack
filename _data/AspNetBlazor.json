{"Data":{"GitHubIssues":{"Issues":[{"Id":"317463500","IsPullRequest":false,"CreatedAt":"2018-04-25T03:03:13","Actor":"galvesribeiro","Number":"674","RawContent":null,"Title":"Blazor.platform.xxx don't work on BlazorLib projects","State":"open","Body":"While experimenting the new Blazor library projects (which is awesome btw) we've hit a wall when using Blazor APIs.\r\n\r\nTo repro just create a blazor library project and at the .js file, call this:\r\n\r\n```\r\nconst callbackMethod = Blazor.platform.findMethod(\r\n  assemblyName,\r\n  namespace,\r\n  typeName,\r\n  methodName\r\n);\r\n```\r\n\r\nAdd this project to a Blazor app project and just run it.\r\n\r\n![image](https://user-images.githubusercontent.com/4714040/39224046-7ec5e3a8-481b-11e8-8c04-5f062af6059c.png)\r\n\r\nThe project build actions looks like is adding the content properly to the index.html as the scripts are added _after_ mono.js import...\r\n\r\n![image](https://user-images.githubusercontent.com/4714040/39224087-b8d3a81e-481b-11e8-86fc-8c0df4986583.png)\r\n\r\nSo, how to workaround this?\r\n\r\nIt looks to me that all `Blazor.xxx` objects are properly defined in JS except the `Blazor.platform.xxxx`...","Url":"https://github.com/aspnet/Blazor/issues/674","RelatedDescription":"Open issue \"Blazor.platform.xxx don't work on BlazorLib projects\" (#674)"},{"Id":"317448570","IsPullRequest":true,"CreatedAt":"2018-04-25T01:31:26","Actor":"zbecknell","Number":"673","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Minor updates in the dev builds section.","Url":"https://github.com/aspnet/Blazor/pull/673","RelatedDescription":"Closed or merged PR \"Update README.md\" (#673)"},{"Id":"317439801","IsPullRequest":true,"CreatedAt":"2018-04-25T00:25:52","Actor":"rynowak","Number":"672","RawContent":null,"Title":"Make Razor.Design a transitive dependency","State":"open","Body":"By making Razor.Design a transitive dependency of Blazor.Build we can\r\navoid the need for users to care which version of Razor we depend upon,\r\nand take it out of the templates.","Url":"https://github.com/aspnet/Blazor/pull/672","RelatedDescription":"Open PR \"Make Razor.Design a transitive dependency\" (#672)"},{"Id":"317428489","IsPullRequest":false,"CreatedAt":"2018-04-24T23:20:42","Actor":"Andrzej-W","Number":"671","RawContent":null,"Title":"Project build failed - no error message","State":"open","Body":"Blazor Language Service v. 15.7.10245\r\nCreate demo project (standalone or hosted). In Counter.cshtml add\r\n`int counter;`\r\nbelow `int currentCount = 0;`\r\nBuild solution. In Error List window warning is displayed that Counter.counter is never used - it is expected.\r\nChange variable name to\r\n`int Counter;`\r\nBuild solution. In VS status bar (blue line at the bottom) I see Build failed. In Error List window I don't see an error.","Url":"https://github.com/aspnet/Blazor/issues/671","RelatedDescription":"Open issue \"Project build failed - no error message\" (#671)"},{"Id":"317423571","IsPullRequest":false,"CreatedAt":"2018-04-24T22:56:11","Actor":"muqeet-khan","Number":"670","RawContent":null,"Title":"Navlink doesn't take base href into account","State":"open","Body":"https://muqeet-khan.github.io/BlazorComponents.github.io/ is an example of a blazor app hosted on Github pages. I had to modify the base href to get github pages to work. \r\n\r\nBut the navlink component links still point to the local blazor pages URL. Shouldn't the navlink component take the base URL into account?\r\n\r\nFor example, \r\nhttps://muqeet-khan.github.io/BlazorComponents.github.io/linechart works, but, \r\nhttps://muqeet-khan.github.io/linechart does not which is what Navlink is pointing to currently.  \r\n\r\nif not, then, is there a JS interop or API i could invoke before blazor boot that will make it work?\r\n","Url":"https://github.com/aspnet/Blazor/issues/670","RelatedDescription":"Open issue \"Navlink doesn't take base href into account\" (#670)"},{"Id":"317162333","IsPullRequest":false,"CreatedAt":"2018-04-24T20:48:49","Actor":"chassq","Number":"663","RawContent":null,"Title":"TimeZone issues related to Mono?","State":"closed","Body":"Just wanted to report I am seeing issues with timezone related code. See:\r\n\r\n**ERROR**\r\n```\r\nMonoPlatform.ts:70 Uncaught Error: System.TimeZoneNotFoundException: Couldn't read time zone file /usr/share/zoneinfo/Eastern Standard Time ---> System.IO.DirectoryNotFoundException: Could not find a part of the path \"/usr/share/zoneinfo/Eastern Standard Time\".\r\n  at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options) <0x1f623d8 + 0x00226> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share) <0x1f5a478 + 0x00032> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.IO.File.OpenRead (System.String path) <0x1f5a180 + 0x0000e> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.FindSystemTimeZoneByFileName (System.String id, System.String filepath) <0x1f59ef0 + 0x00014> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n   --- End of inner exception stack trace ---\r\n  at System.TimeZoneInfo.FindSystemTimeZoneByFileName (System.String id, System.String filepath) <0x1f59ef0 + 0x00038> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.FindSystemTimeZoneByIdCore (System.String id) <0x1f596d0 + 0x0001e> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.FindSystemTimeZoneById (System.String id) <0x1f594e8 + 0x00030> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (System.DateTimeOffset dateTimeOffset, System.String destinationTimeZoneId) <0x1f59398 + 0x00018> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at lib.shared.util.Helper.DateTimeHelper.GetEstFromUtc () <0x1f53c90 + 0x00012> in <ea87f8326c3d4dca87bad74658f34e5b>:0 \r\n  at TestBlazor_0_2_0.Client.Pages.Test.TestLibSharedUtilHelper.RunTests () <0x1f53a78 + 0x00022> in <9ce1d538f01b40c39a6a753959ed2ef0>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer+<>c__DisplayClass13_0.<AssignEventHandlerId>b__0 (Microsoft.AspNetCore.Blazor.UIEventArgs e) <0x1f53908 + 0x00014> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.Microsoft.AspNetCore.Blazor.Components.IHandleEvent.HandleEvent (Microsoft.AspNetCore.Blazor.UIEventHandler handler, Microsoft.AspNetCore.Blazor.UIEventArgs args) <0x1f53798 + 0x00018> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.ComponentState.DispatchEvent (Microsoft.AspNetCore.Blazor.UIEventHandler handler, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f535c0 + 0x00034> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f53088 + 0x00050> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f52f20 + 0x00020> in <08ceae4b872f4f8d8ccefc410a9a8971>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1f11940 + 0x0005a> in <08ceae4b872f4f8d8ccefc410a9a8971>:0 \r\n  at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options) <0x1f623d8 + 0x00226> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share) <0x1f5a478 + 0x00032> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.IO.File.OpenRead (System.String path) <0x1f5a180 + 0x0000e> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.FindSystemTimeZoneByFileName (System.String id, System.String filepath) <0x1f59ef0 + 0x00014> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n   --- End of inner exception stack trace ---\r\n  at System.TimeZoneInfo.FindSystemTimeZoneByFileName (System.String id, System.String filepath) <0x1f59ef0 + 0x00038> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.FindSystemTimeZoneByIdCore (System.String id) <0x1f596d0 + 0x0001e> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.FindSystemTimeZoneById (System.String id) <0x1f594e8 + 0x00030> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (System.DateTimeOffset dateTimeOffset, System.String destinationTimeZoneId) <0x1f59398 + 0x00018> in <031009ec673a4a808e11b357311ab8f4>:0 \r\n  at lib.shared.util.Helper.DateTimeHelper.GetEstFromUtc () <0x1f53c90 + 0x00012> in <ea87f8326c3d4dca87bad74658f34e5b>:0 \r\n  at TestBlazor_0_2_0.Client.Pages.Test.TestLibSharedUtilHelper.RunTests () <0x1f53a78 + 0x00022> in <9ce1d538f01b40c39a6a753959ed2ef0>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer+<>c__DisplayClass13_0.<AssignEventHandlerId>b__0 (Microsoft.AspNetCore.Blazor.UIEventArgs e) <0x1f53908 + 0x00014> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.Microsoft.AspNetCore.Blazor.Components.IHandleEvent.HandleEvent (Microsoft.AspNetCore.Blazor.UIEventHandler handler, Microsoft.AspNetCore.Blazor.UIEventArgs args) <0x1f53798 + 0x00018> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.ComponentState.DispatchEvent (Microsoft.AspNetCore.Blazor.UIEventHandler handler, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f535c0 + 0x00034> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f53088 + 0x00050> in <8a8022566b074cca8a70e10050945cdd>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1f52f20 + 0x00020> in <08ceae4b872f4f8d8ccefc410a9a8971>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1f11940 + 0x0005a> in <08ceae4b872f4f8d8ccefc410a9a8971>:0 \r\n    at Object.callMethod (http://localhost:49819/_framework/blazor.js:435:23)\r\n    at raiseEvent (http://localhost:49819/_framework/blazor.js:949:28)\r\n    at EventDelegator.onEvent (http://localhost:49819/_framework/blazor.js:692:13)\r\n    at EventDelegator.onGlobalEvent (http://localhost:49819/_framework/blazor.js:1096:26)\r\ncallMethod @ MonoPlatform.ts:70\r\nraiseEvent @ BrowserRenderer.ts:304\r\n(anonymous) @ BrowserRenderer.ts:17\r\nEventDelegator.onGlobalEvent @ EventDelegator.ts:77\r\n```\r\n**CODE:** - Works fine on server just not in blazor/mono\r\n```\r\n@using lib.shared.util.Helper\r\n@page \"/test/libsharedutilhelper\"\r\n\r\n<h3>Test Lib.Shared.Util.Heplers</h3>\r\n<p>Test a bunch of static helpers for fun :-)</p>\r\n\r\n<button onclick=@RunTests>Run Tests</button>\r\n<p>@TestList</p>\r\n\r\n@functions {\r\n\r\n    string TestList = \"\";\r\n\r\n    private void RunTests()\r\n    {\r\n        TestList = \"Init...\";\r\n        TestList += \"<br />Get Est From Utc: \" + TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTimeOffset.UtcNow, \"Eastern Standard Time\").ToString();\r\n    }\r\n}\r\n```\r\nI looked at some articles and they suggested this is a mono issue?\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=11817\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=31432\r\nhttps://stackoverflow.com/questions/18395018/system-timezonenotfoundexception-on-viewpage-using-servicestack-razor\r\nhttps://www.reddit.com/r/jailbreak/comments/3ll1rf/tutorial_solution_how_to_fix_broken_timezone_in/\r\n\r\nKind of an essential missing piece.. Any workaround ideas? Thoughts?\r\n","Url":"https://github.com/aspnet/Blazor/issues/663","RelatedDescription":"Closed issue \"TimeZone issues related to Mono?\" (#663)"},{"Id":"317164765","IsPullRequest":false,"CreatedAt":"2018-04-24T20:47:54","Actor":"MihaMarkic","Number":"664","RawContent":null,"Title":"Json serialization on RegisteredFunction.Invoke includes members with null value","State":"closed","Body":"If I'm not mistaken, I think that serializer includes members having a null value, so if I have a type\r\n```\r\nclass Tubo {\r\n  public string Text { get; set; }\r\n}\r\n```\r\nand I serialize new Tubo(), I'd get\r\n`{ Text: null }`\r\ninstead of\r\n`{}`\r\nThis is a problem when you don't want to pass properties around.","Url":"https://github.com/aspnet/Blazor/issues/664","RelatedDescription":"Closed issue \"Json serialization on RegisteredFunction.Invoke includes members with null value\" (#664)"},{"Id":"317214731","IsPullRequest":false,"CreatedAt":"2018-04-24T20:46:55","Actor":"chassq","Number":"666","RawContent":null,"Title":"Code Lens References show up in cshtml  and corresponding g.i.cs files","State":"closed","Body":"See attached pic. When I reference a lib method in the blazor project cshtml file code lens displays the refs in 2 places (cshtml file and generated corresponding g.i.cs file). I guess this is technically correct but looks strange in the code lens references.\r\n![capture](https://user-images.githubusercontent.com/4785384/39188498-f2cdf57a-479d-11e8-8597-5574a1b53d10.PNG)\r\n","Url":"https://github.com/aspnet/Blazor/issues/666","RelatedDescription":"Closed issue \"Code Lens References show up in cshtml  and corresponding g.i.cs files\" (#666)"},{"Id":"317308897","IsPullRequest":false,"CreatedAt":"2018-04-24T20:45:33","Actor":"RemiBou","Number":"668","RawContent":null,"Title":"Cannot get out of Blazor app when using base tag","State":"closed","Body":"# Description\r\nGiven this documentation : https://blazor.net/docs/host-and-deploy/index.html#app-base-path \r\nIf our app is located in \"/a\" we should change the base tag by `<base href=\"/a\" >` we can deploy our Blazor app in virtual directory of our server. But once on the app all the link to other virtual directory on the server are broken.\r\n\r\n# Actual behavior\r\n\r\nWith the following base tag \r\n `<base href=\"/a\" >` \r\nIf we add a link in the app like this\r\n`<a class='navbar-brand' href='/manage/index'>Account</a>`\r\nOnce we click on it, the console will displays a router error \r\n> 'Router' cannot find any component with a route for '/manage/index'.\r\n\r\nThis is because of the method \"isWithinBaseUriSpace\" in https://github.com/aspnet/Blazor/blob/dev/src/Microsoft.AspNetCore.Blazor.Browser.JS/src/Services/UriHelper.ts it calls \"toBaseUriPrefixWithTrailingSlash\" which ignores the last part of the base URI we set in the base tag.\r\n\r\nIf I set this base tag\r\n`<base href=\"/a/\" >`\r\nI get the following error on first load\r\n> Uncaught SyntaxError: Unexpected token <\r\n\r\n# Expected behavior\r\nBlazor let the browser query the page \"/manage/index\"\r\n\r\n# Suggested solution\r\nChange the behavior of toBaseUriPrefixWithTrailingSlash and just check if baseUri ends with a slash and adds it if it doesn't. I can send a PR if you agree on this solution\r\n\r\n# Temporary solution\r\nManage navigation with vanila js (document.location = xxx)\r\n\r\n# System spec\r\nBlazor 0.2.1\r\nWeb server Asp.Net core 2.1","Url":"https://github.com/aspnet/Blazor/issues/668","RelatedDescription":"Closed issue \"Cannot get out of Blazor app when using base tag\" (#668)"},{"Id":"316546361","IsPullRequest":false,"CreatedAt":"2018-04-24T19:57:42","Actor":"chanan","Number":"647","RawContent":null,"Title":"Can't name a tag the same name as an html element","State":"closed","Body":"I created a Button component (upper case \"B\") and placed the following html in it:\r\n\r\n```html\r\n<button type=\"button\" class=\"btn btn-primary\">Primary</button>\r\n```\r\n\r\nPlaced the Button in a page: `<Button />`\r\n\r\nWhen the page was rendered I got an error that Button doesn't have a property named type. (first attribute in the button html above).\r\n\r\nWorkaround: renamed Button to something else.\r\n\r\nFix: Perhaps Blazor should only allow lower case html tags and upper case custom tags (like react)","Url":"https://github.com/aspnet/Blazor/issues/647","RelatedDescription":"Closed issue \"Can't name a tag the same name as an html element\" (#647)"},{"Id":"317214412","IsPullRequest":false,"CreatedAt":"2018-04-24T19:42:20","Actor":"dlr1","Number":"665","RawContent":null,"Title":"Looping and passing arguments to a method","State":"closed","Body":"I have the following code\r\n```\r\n@inherits MyCompBase\r\n\r\n@for(var i=0; i< Counter;i++)\r\n{\r\n    <div onclick=@( x=>ItemClicked(i))>this is item @i</div>\r\n}\r\n\r\nusing Microsoft.AspNetCore.Blazor.Components;\r\nusing System;\r\n\r\nnamespace WebApplication2.Shared\r\n{\r\n    public class MyCompBase : BlazorComponent\r\n    {\r\n        public int Counter { get; set; } = 4;\r\n        public void ItemClicked(int value)\r\n        {\r\n            Console.WriteLine(value);\r\n        }\r\n    }\r\n}\r\n```\r\nI expected it to write value \"i\" to be written to console when the div is clicked. it is always writing \"4\". what am I missing?","Url":"https://github.com/aspnet/Blazor/issues/665","RelatedDescription":"Closed issue \"Looping and passing arguments to a method\" (#665)"},{"Id":"317352698","IsPullRequest":false,"CreatedAt":"2018-04-24T19:08:00","Actor":"floreseken","Number":"669","RawContent":null,"Title":"Floatingpoint numbers lose their comma in JsonUtil","State":"closed","Body":"JsonUtil seems not to honor the comma in floatingpoint numbers.\r\n\r\nThis JSON\r\n```{\"MyNumber\": 100.99}```\r\n\r\nMapped to this property:\r\n```public decimal MyNumber {get;set;}```\r\n\r\nWill end up with the number `10099` in MyNumber when deserialized with JsonUtil.\r\n\r\nI've tried setting the Culture and UICulture (which seem to be empty by default) in my `Main` of the blazor app, but that doesn't seem to help.\r\n\r\nAnybody already tackled this?","Url":"https://github.com/aspnet/Blazor/issues/669","RelatedDescription":"Closed issue \"Floatingpoint numbers lose their comma in JsonUtil\" (#669)"},{"Id":"316953957","IsPullRequest":false,"CreatedAt":"2018-04-24T17:26:06","Actor":"TastesLikeTurkey","Number":"658","RawContent":null,"Title":"Can't add custom HTTP headers","State":"closed","Body":"I'm trying to add custom HTTP headers to my request like so:\r\n\r\n```\r\n_client.DefaultRequestHeaders.TryAddWithoutValidation(\"app_id\", _appIdProvider.GetAppId());\r\n_client.DefaultRequestHeaders.TryAddWithoutValidation(\"app_key\", _appKeyProvider.GetAppKey());\r\n```\r\n\r\nHowever, when the request is sent the custom headers aren't there. Of course this results in my request failing. I've also tried just an ordinary `DefaultRequestHeaders.Add()`, same issue.\r\n\r\nEDIT: Here's a repo with the project: https://github.com/TastesLikeTurkey/blazor-demo","Url":"https://github.com/aspnet/Blazor/issues/658","RelatedDescription":"Closed issue \"Can't add custom HTTP headers\" (#658)"},{"Id":"317222641","IsPullRequest":false,"CreatedAt":"2018-04-24T16:21:22","Actor":"chassq","Number":"667","RawContent":null,"Title":"Environment.OSVersion = Unix 1.0.0.0","State":"closed","Body":"Using Blazor I just printed out the Environment.OSVersion in a .cshtml file. Its value was Unix 1.0.0.0. Can I assume this is why the method System.IO.Path.GetInvalidFileNameChars() returns only a null character per the mono documents at https://github.com/mono/mono/blob/master/mcs/class/corlib/System.IO/Path.cs#L540 ?\r\n\r\n**I am using:**\r\nVS 2017 15.7.0 Preview 4.0\r\nDotnet SDK 2.1.300-preview2-008533\r\nBlazor Language Services 0.2.1-rtm-10237\r\nChrome 66.0.3359.117\r\nWindows Server 2016 Datacenter (Azure VM for VS preview)","Url":"https://github.com/aspnet/Blazor/issues/667","RelatedDescription":"Closed issue \"Environment.OSVersion = Unix 1.0.0.0\" (#667)"},{"Id":"317073960","IsPullRequest":false,"CreatedAt":"2018-04-24T05:53:34","Actor":"RemiBou","Number":"662","RawContent":null,"Title":"\" rzc generate exited with code 1\" when updtating packages on VS2017 Blazor template","State":"closed","Body":"### Title\r\nWhen we try to update all the packages on the VS2017 preview template for Blazor we can't build our project.\r\n\r\n### Functional impact\r\nUnable to create a new project with Blazor latest features as the template targets \"Microsoft.AspNetCore.Blazor.Build\" version 0.10\r\n\r\n### Minimal repro steps\r\n\r\n1. Open VS201715.7.0 preview 4*\r\n2. New project Asp.Net core => Blazor (asp.net core hosted)\r\n3. Right click on solution => Manage package\r\n4. Install all the updates\r\n5. Build solution\r\n\r\n### Expected result\r\nBuild succeeded\r\n### Actual result\r\nBuild failed\r\n\r\nOutput shows \r\n```\r\n\r\n2>   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor)\r\n2>   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n2>   at System.Activator.CreateInstance(Type type, Boolean nonPublic)\r\n2>   at System.Activator.CreateInstance(Type type)\r\n2>   at Microsoft.AspNetCore.Razor.Language.AssemblyExtension.CreateInitializer()\r\n2>   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.LoadExtensions(RazorProjectEngineBuilder builder, IReadOnlyList`1 extensions)\r\n2>   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.Create(RazorConfiguration configuration, RazorProjectFileSystem fileSystem, Action`1 configure)\r\n2>   at Microsoft.AspNetCore.Razor.Tools.GenerateCommand.ExecuteCore(RazorConfiguration configuration, String projectDirectory, String tagHelperManifest, List`1 sources, List`1 outputs, List`1 relativePaths)\r\n2>   at Microsoft.AspNetCore.Razor.Tools.GenerateCommand.ExecuteCoreAsync()\r\n2>   at Microsoft.AspNetCore.Razor.Tools.CommandBase.<ExecuteAsync>d__10.MoveNext()\r\n2>C:\\Users\\remi\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.1\\targets\\RazorCompilation.targets(187,5): error : rzc generate exited with code 1.\r\n2>Génération du projet \"BlazorEmpty.Client.csproj\" terminée -- ÉCHEC.\r\n3>------ Début de la génération : Projet : BlazorEmpty.Server, Configuration : Debug Any CPU ------\r\n\r\n```\r\n\r\n\"dotnet --info\" output\r\n\r\n```\r\n\r\nProduct Information:\r\n Version:            2.1.200-preview-007576\r\n Commit SHA-1 hash:  bd3372b5a3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.200-preview-007576\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/662","RelatedDescription":"Closed issue \"\" rzc generate exited with code 1\" when updtating packages on VS2017 Blazor template\" (#662)"},{"Id":"317026521","IsPullRequest":false,"CreatedAt":"2018-04-24T00:18:24","Actor":"javiercn","Number":"661","RawContent":null,"Title":"Generate definition files for blazor.js","State":"open","Body":"We should generate d.ts files for our javascript component and publish them to typings or somewhere similar. @SteveSandersonMS am I missing something here?\r\n\r\nI want to be able to reference blazor.d.ts from a ts file and access to everything in a strongly typed way.","Url":"https://github.com/aspnet/Blazor/issues/661","RelatedDescription":"Open issue \"Generate definition files for blazor.js\" (#661)"},{"Id":"316956356","IsPullRequest":false,"CreatedAt":"2018-04-23T19:53:57","Actor":"nabels-coolblue","Number":"660","RawContent":null,"Title":"Using minus signs in solution name renders solution uncompilable","State":"closed","Body":"**Environment:**\r\n- Windows 10 Pro\r\n- dotnet core 2.1.300-preview1-008174\r\n- Blazor 0.2.1\r\n- VisualStudio.15.Preview/15.7.0-pre.4.0+27617.1\r\n\r\n**Repro steps:**\r\n- Create a blazor stand-alone (or hosted) app from the latest templates, and name the solution 'poc-blazor-app'\r\n- Build with `dotnet build poc-blazor-app`\r\n\r\n**Expected:**\r\n- Namespace of generated classes is `PocBlazorApp`\r\n- Blazor app builds\r\n\r\n**Actual:**\r\n- Namespace of generated classes is `poc-blazor-app`\r\n- Build fails \r\n\r\n**Additional info:**\r\n\r\nThe namespace would become `Poc_Blazor_App` in both a:\r\n- .NET Core console project\r\n- ASP.NET Core Web Application -> Web Application project","Url":"https://github.com/aspnet/Blazor/issues/660","RelatedDescription":"Closed issue \"Using minus signs in solution name renders solution uncompilable\" (#660)"},{"Id":"316956206","IsPullRequest":false,"CreatedAt":"2018-04-23T19:42:18","Actor":"jirisykora83","Number":"659","RawContent":null,"Title":"Support removing 'value' attribute","State":"open","Body":"**Runtime Environment:**\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008533\\\r\n\r\n**Repro**\r\n\r\n```\r\n@page \"/\"\r\n\r\n<input value=\"@Text\" onchange=\"@onTextChange\" />\r\n<div>Currently text: @Text</div>\r\n<div onclick=\"@onButtonClick\">SET TEXT TO NULL</div>\r\n\r\n@{ \r\n\tConsole.WriteLine($\"Render with: '{Text ?? \"NULL\"}'\");\r\n}\r\n\r\n@functions\r\n{\r\n\tpublic string Text { get; set; }\r\n\r\n\tprotected void onTextChange(UIChangeEventArgs e)\r\n\t{\r\n\t\tText = (string)e.Value;\r\n\t}\r\n\r\n\tprotected void onButtonClick()\r\n\t{\r\n\t\tText = null;\r\n\t}\r\n}\r\n```\r\n\r\nWhen i type some text to input (click outside for call \"onchange\"). And then i click to \"SET TEXT TO NULL\". In console i see `Render with: 'NULL'` but input keep last value.\r\n\r\nIt fail same if i use `<input bind=\"@Text\" />` (and remove onTextChange).\r\n\r\n**Excepted behavior**\r\n\r\nReset input text. (same like for `<div>@Text</div>`).\r\n\r\n**Workaround**\r\n\r\n`<input value=\"@(Text ?? string.Empty)\" onchange=\"@onTextChange\" />`\r\n","Url":"https://github.com/aspnet/Blazor/issues/659","RelatedDescription":"Open issue \"Support removing 'value' attribute\" (#659)"},{"Id":"316836871","IsPullRequest":false,"CreatedAt":"2018-04-23T15:30:21","Actor":"ChendrayanV","Number":"657","RawContent":null,"Title":"Suggestion - It's good to have PS assembly support","State":"closed","Body":"This is not priority but it would be great if we get support for PowerShell Assembly. Yes, I know it's built using .NET framework so all we do in PS can be done in C#. For IT Pro it's easy to write PS and share with Developers for few development tasks (Microsoft Exchange Online reporting tasks as an example). \r\n\r\nSample PS Code - Class\r\n`C#`\r\nusing System.Management.Automation;\r\nnamespace BlazorPSPreview2\r\n{\r\n    public class xBlazorPS\r\n    {\r\n        public string GetDateTime()\r\n        {\r\n            using (var ps = PowerShell.Create())\r\n            {\r\n                if (ps == null)\r\n                {\r\n                    return \"sorry\";\r\n                }\r\n                else\r\n                {\r\n                    return \"I am sorry\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nprogram.cs\r\n`C#`\r\nvar serviceProvider = new BrowserServiceProvider(services =>\r\n            {\r\n                // Add any custom services here\r\n                services.AddSingleton<xBlazorPS>();\r\n            });\r\nmyView.cshtml (Under Pages)\r\n`html`\r\n@page \"/PSDemo\"\r\n@inject xBlazorPS PSDemo1;\r\n<h1>PowerShell Demo</h1>\r\n\r\n\r\n<p>@PSDemo1.GetDateTime()</p>\r\n\r\nError\r\n=======\r\n1>------ Build started: Project: BlazorPSPreview2, Configuration: Debug Any CPU ------\r\n1>You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452\r\n1>BlazorPSPreview2 -> C:\\Users\\ChenV\\source\\repos\\BlazorPSPreview2\\BlazorPSPreview2\\bin\\Debug\\netstandard2.0\\BlazorPSPreview2.dll\r\n1>Fatal error in IL Linker\r\n1>Mono.Linker.Steps.XmlResolutionException: Failed to process XML description: <unspecified> ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'System.Management.Automation, Version=6.0.2.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'System.Management.Automation, Version=6.0.2.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'\r\n1>   at Mono.Linker.DirectoryAssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n1>   at Mono.Linker.AssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n1>   at Mono.Linker.LinkContext.Resolve(IMetadataScope scope)\r\n1>   --- End of inner exception stack trace ---\r\n1>   at Mono.Linker.LinkContext.Resolve(IMetadataScope scope)\r\n1>   at Mono.Linker.LinkContext.ResolveReferences(AssemblyDefinition assembly)\r\n1>   at Mono.Linker.Steps.ResolveFromXmlStep.ProcessReferences(AssemblyDefinition assembly, LinkContext context)\r\n1>   at Mono.Linker.Steps.ResolveFromXmlStep.GetAssembly(LinkContext context, AssemblyNameReference assemblyName)\r\n1>   at Mono.Linker.Steps.ResolveFromXmlStep.ProcessAssemblies(LinkContext context, XPathNodeIterator iterator)\r\n1>   at Mono.Linker.Steps.ResolveFromXmlStep.Process()\r\n1>   --- End of inner exception stack trace ---\r\n1>   at Mono.Linker.Steps.ResolveFromXmlStep.Process()\r\n1>   at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n1>   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n1>   at Mono.Linker.Driver.Run(ILogger customLogger)\r\n1>   at Mono.Linker.Driver.Execute(String[] args, ILogger customLogger)\r\n1>C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.1\\targets\\Blazor.MonoRuntime.targets(435,5): error MSB3073: The command \"dotnet \"C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.1\\targets\\../tools/illink/illink.dll\" -c link -u link -t --verbose  -d \"C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.1\\targets\\../tools/mono/bcl/\" -d \"C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.1\\targets\\../tools/mono/bcl/Facades/\" -o \"C:\\Users\\ChenV\\source\\repos\\BlazorPSPreview2\\BlazorPSPreview2\\obj\\Debug\\netstandard2.0\\blazor/linker/\" -x \"C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.1\\targets\\BuiltInBclLinkerDescriptor.xml\" -x \"C:\\Users\\ChenV\\source\\repos\\BlazorPSPreview2\\BlazorPSPreview2\\obj\\Debug\\netstandard2.0\\blazor\\linker.descriptor.xml\" -a \"C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor\\0.2.1\\lib\\netstandard2.0\\Microsoft.AspNetCore.Blazor.dll\" -a \"C:\\Users\\ChenV\\.nuget\\packages\\microsoft.aspnetcore.blazor.browser\\0.2.1\\lib\\netstandard2.0\\Microsoft.AspNetCore.Blazor.Browser.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.0.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.0.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" -a \"C:\\Users\\ChenV\\source\\repos\\BlazorPSPreview2\\BlazorPSPreview2\\obj\\Debug\\netstandard2.0\\BlazorPSPreview2.dll\"\" exited with code 1.\r\n1>Done building project \"BlazorPSPreview2.csproj\" -- FAILED.\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========","Url":"https://github.com/aspnet/Blazor/issues/657","RelatedDescription":"Closed issue \"Suggestion - It's good to have PS assembly support\" (#657)"},{"Id":"316794842","IsPullRequest":false,"CreatedAt":"2018-04-23T12:41:41","Actor":"SteveSandersonMS","Number":"656","RawContent":null,"Title":"Events inside ChildContent are being dispatched to incorrect component","State":"open","Body":"Repro:\r\n\r\n```html\r\n<NavLink href=\"/\">\r\n    <button onclick=\"@(_ => { Console.WriteLine(\"Hello\"); })\">Click me</button>\r\n</NavLink>\r\n```\r\n\r\nClicking the button fails with *The component of type Microsoft.AspNetCore.Blazor.Routing.NavLink cannot receive events because it does not implement Microsoft.AspNetCore.Blazor.Components.IHandleEvent.*.\r\n\r\nThe event should be dispatched to the owner component, not to the `NavLink`.\r\n\r\nIn most cases it's currently possible to work around this by calling `StateHasChanged` inside the event handler delegate, because any component that inherits `BlazorComponent` does implement `IHandleEvent` and handles events by invoking the supplied delegate. But that workaround doesn't work when the event-receiving component doesn't implement `IHandleEvent`, and in general it's still wrong because you shouldn't have to do this.\r\n\r\n**Possible solution**\r\n\r\nThe intent is for events to be dispatched to the component whose code declares the event handler, not the component whose rendering logic added it to the RenderTree.\r\n\r\nWe could change the signature of `BindMethods.GetEventHandlerValue<T>(value)` to `BindMethods.GetEventHandlerValue<T>(IComponent target, value)` (for each of the `value` type overloads). Then we change the Razor compiler to supply the value `this` for `target`, hence we've captured a `target` value matching the component whose code contains the actual `onevent=...` syntax. In typical cases where the delegate represents an instance method, the lambda already captures `this` so this change wouldn't trigger any more allocations than we already do.\r\n\r\nThen, the overloads of `GetEventHandlerValue` that return `MulticastDelegate` could be changed to return some new `struct`, `ComponentEventDelegate` that has two properties: `IComponent target` and `MulticastDelegate delegate`.\r\n\r\nThen we'd change `RenderTreeBuilder`'s `AddAttribute` so that it has an explicit overload for `ComponentEventDelegate` instead of ones for `MulticastDelegate`. Inside that overload, we do the same logic that we used to for `MulticastDelegate`, but on the resulting `RenderTreeFrame`, we also store information about the target component. (To fit into the existing `RenderTreeFrame` memory layout, we might want to locate and store the target component's **id** here rather than a pointer to the actual instance, since pointers are 8-bytes, and we only have 4 bytes spare without expanding the size of a frame).\r\n\r\nThen, we change the `AssignEventHandlerId` logic (and data storage) so that it stores the target component ID on the `_eventHandlersById` dictionary entry as well as the delegate itself.\r\n\r\nFinally we can remove the whole notion of specifying a component ID during the event dispatching process. It will only be necessary to specify the `eventHandlerId`, and the `Renderer` code will be able to find the correct target component from that alone.","Url":"https://github.com/aspnet/Blazor/issues/656","RelatedDescription":"Open issue \"Events inside ChildContent are being dispatched to incorrect component\" (#656)"},{"Id":"316766295","IsPullRequest":false,"CreatedAt":"2018-04-23T12:31:42","Actor":"Andrzej-W","Number":"655","RawContent":null,"Title":"Update project template to describe problems with add blockers","State":"closed","Body":"There are a lot of users who have different add blockers in their browsers. They open https://blazor-demo.github.io/ or they create demo project and publish to Azure. They see Loading... and that is all. I think it is a good idea to describe the problem in `<div id=\"app\">Loading...</div>`. Otherwise people may think that Blazor is useless product, and we all know that it is exactly opposite - it is a revolution!\r\n\r\nIt will be a good idea to update demo app here https://blazor-demo.github.io/. Current version with Bootstrap 4 looks much better.","Url":"https://github.com/aspnet/Blazor/issues/655","RelatedDescription":"Closed issue \"Update project template to describe problems with add blockers\" (#655)"},{"Id":"316749931","IsPullRequest":false,"CreatedAt":"2018-04-23T12:00:12","Actor":"sjbthfc2","Number":"653","RawContent":null,"Title":"Library Component not rendering","State":"closed","Body":"Hi,\r\n\r\nI was following the steps from the [0.2.0 Release Blog](https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/) to try and build a Blazor Component hosted in a seperate BlazorLib project but I cannot seem to get the Lib Component to render in the parent Component. I did the following:\r\n\r\n1. Created a BlazorLib project with dotnet new on the cmd line.\r\n2. Added the project to an existing Visual Studio solution which has Blazor ASP.NET Core hosted projects (Shared, Server and Client).\r\n3. Added a reference to the Library project from the Client project.\r\nAdded <Component1 /> tag to a parent Component in the Client project.\r\n\r\n**The Component1 Component from the Library does not get rendered in the parent Component which is Index.cshtml.**. I also added and overrode an OnInit method which never gets called.\r\n\r\nMy Library Component, called Component1.cshtml' looks like:\r\n```\r\n<div class=\"my-component\">\r\n    This Blazor component is defined in the <strong>blazorhosted.ReusableComponent</strong> package.\r\n</div>\r\n\r\n@functions {\r\n    protected override void OnInit()\r\n    {        \r\n        Console.WriteLine(\"Called Component1\");\r\n    }\r\n}\r\n```\r\nAnd the Parent Index.cshtml looks like:\r\n```\r\n@page \"/\"\r\n\r\n<h1>Hello, world!</h1>\r\n\r\nWelcome to your new app.\r\n\r\n<SurveyPrompt Title=\"How is Blazor working for you?\" />\r\n\r\n<Component1 />\r\n```\r\n\r\nComponent1.cshtml is in a Library project called Blazor.ReusableComponent and Blazor.Client has a project reference to this. The solution builds successfully and runs with no compilation issues.\r\n\r\nAm I doing something wrong here or is this a genuine bug/issue?\r\n\r\nThanks so much for the amazing work on Blazor, so excited for this technology.","Url":"https://github.com/aspnet/Blazor/issues/653","RelatedDescription":"Closed issue \"Library Component not rendering\" (#653)"},{"Id":"316751761","IsPullRequest":false,"CreatedAt":"2018-04-23T10:26:25","Actor":"Daddoon","Number":"654","RawContent":null,"Title":"asm.js fallback not working on IE11","State":"open","Body":"Hi,\r\n\r\nSince my last update of source code (0.3.0), Blazor don't work anymore on Internet Explorer 11.\r\n\r\nOf course i know this is not yet officially supported, but i was able to make it work with babel-core polyfill and fetch.\r\n\r\nI don't expect this to be resolved fast, as Internet Explorer 11 is not your goal.\r\nHowever, here is the Stacktrace i have with Blazor when crashing. I had the same error/issue using other polyfill implementation too.\r\n\r\n> WASM: Services are configured...\r\n> WASM: \r\n> WASM: Unhandled Exception:\r\n> WASM: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: Espace pile insuffisant\r\n> WASM: Error: Espace pile insuffisant\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1dfc088 + 0x00056> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1dfbfa0 + 0x00022> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch batch) <0x1dfbeb8 + 0x00020> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1bf2c58 + 0x0009e> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.AddToRenderQueue (System.Int32 componentId, Microsoft.AspNetCore.Blazor.RenderFragment renderFragment) <0x1befde0 + 0x00080> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Components.RenderHandle.Render (Microsoft.AspNetCore.Blazor.RenderFragment renderFragment) <0x1befac0 + 0x00042> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.StateHasChanged () <0x1bef9b0 + 0x00060> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.SetParameters (Microsoft.AspNetCore.Blazor.Components.ParameterCollection parameters) <0x1bef230 + 0x000bc> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.AddComponent (System.Type componentType, System.String domElementSelector) <0x1bb1778 + 0x0005e> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.AddComponent[TComponent] (System.String domElementSelector) <0x1bb1468 + 0x00020> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Allogaia.Web.Client.Program+<OnReady>d__3.MoveNext () <0x1b9afc8 + 0x00048> in <fe827bd384f14639a7f0b9701a14fa41>:0 \r\n> WASM: --- End of stack trace from previous location where exception was thrown ---\r\n> WASM:   at Allogaia.Web.Client.Program+<>c+<<Main>b__4_0>d.MoveNext () <0x1b95b28 + 0x000bc> in <fe827bd384f14639a7f0b9701a14fa41>:0 \r\n> WASM: --- End of stack trace from previous location where exception was thrown ---\r\n> WASM:   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_1 (System.Object state) <0x1e183d8 + 0x00014> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) <0x1e18388 + 0x00022> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e17ee0 + 0x000f0> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e17b80 + 0x00020> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () <0x1b411f8 + 0x00046> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.ThreadPoolWorkQueue.Dispatch () <0x1b3f180 + 0x000f4> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () <0x1b3ed70 + 0x00000> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM: [ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: Espace pile insuffisant\r\n> WASM: Error: Espace pile insuffisant\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:    at Symbol()_t.u5o0ubgkph8.set (https://www.gzahra.fr/lib/ie/browser-polyfill/5.6.15/browser-polyfill.min.js:14:262)\r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1dfc088 + 0x00056> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1dfbfa0 + 0x00022> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch batch) <0x1dfbeb8 + 0x00020> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1bf2c58 + 0x0009e> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.AddToRenderQueue (System.Int32 componentId, Microsoft.AspNetCore.Blazor.RenderFragment renderFragment) <0x1befde0 + 0x00080> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Components.RenderHandle.Render (Microsoft.AspNetCore.Blazor.RenderFragment renderFragment) <0x1befac0 + 0x00042> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.StateHasChanged () <0x1bef9b0 + 0x00060> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Components.BlazorComponent.SetParameters (Microsoft.AspNetCore.Blazor.Components.ParameterCollection parameters) <0x1bef230 + 0x000bc> in <dda9c70b7e7c47719b1245b1cd2394d5>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.AddComponent (System.Type componentType, System.String domElementSelector) <0x1bb1778 + 0x0005e> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.AddComponent[TComponent] (System.String domElementSelector) <0x1bb1468 + 0x00020> in <f0d706fedda044e9959d576f3c4a2bbf>:0 \r\n> WASM:   at Allogaia.Web.Client.Program+<OnReady>d__3.MoveNext () <0x1b9afc8 + 0x00048> in <fe827bd384f14639a7f0b9701a14fa41>:0 \r\n> WASM: --- End of stack trace from previous location where exception was thrown ---\r\n> WASM:   at Allogaia.Web.Client.Program+<>c+<<Main>b__4_0>d.MoveNext () <0x1b95b28 + 0x000bc> in <fe827bd384f14639a7f0b9701a14fa41>:0 \r\n> WASM: --- End of stack trace from previous location where exception was thrown ---\r\n> WASM:   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_1 (System.Object state) <0x1e183d8 + 0x00014> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) <0x1e18388 + 0x00022> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e17ee0 + 0x000f0> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e17b80 + 0x00020> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () <0x1b411f8 + 0x00046> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading.ThreadPoolWorkQueue.Dispatch () <0x1b3f180 + 0x000f4> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> WASM:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () <0x1b3ed70 + 0x00000> in <44d04a8d2b4a4027ae601aa5d288e318>:0 \r\n> SCRIPT5022: ExitStatus: Program terminated with exit(255)\r\n> mono.js (1,268)\r\n\r\nAt first sight, i look like a Stackoverflow to me, somehow only occuring on Internet Explorer 11.","Url":"https://github.com/aspnet/Blazor/issues/654","RelatedDescription":"Open issue \"asm.js fallback not working on IE11\" (#654)"},{"Id":"316525299","IsPullRequest":false,"CreatedAt":"2018-04-23T08:58:49","Actor":"discostu105","Number":"645","RawContent":null,"Title":"Reading local files","State":"closed","Body":"Blazor newbie here.\r\n\r\nI'm trying to read files locally (browser-side) and do something with them in C#.\r\n\r\nI'm using the `<input type=\"file\" onchange=\"@OnChange\" />` tag. In my OnChange method I can only receive the filename, but cannot read it:\r\n```\r\n    void OnChange(UIEventArgs eventArgs) {\r\n        var changeEventArgs = (UIChangeEventArgs)eventArgs;\r\n        var filepath = changeEventArgs.Value.ToString();  // returns C:\\fakepath\\test.txt\r\n        data = System.IO.File.ReadAllText(filepath);   // System.IO.FileNotFoundException: Could not find file \"/C:\\fakepath\\test.txt\"\r\n    }\r\n```\r\n\r\nHow can I do this? An alternative would be to implement a javascript handler, then use [HTML5 File API](https://www.html5rocks.com/en/tutorials/file/dndfiles/) to read the file, then pass the raw bytes over to a C# method via custom C# binding. Would that be the way to go, or should this be easier?\r\n","Url":"https://github.com/aspnet/Blazor/issues/645","RelatedDescription":"Closed issue \"Reading local files\" (#645)"},{"Id":"316540267","IsPullRequest":false,"CreatedAt":"2018-04-23T08:49:07","Actor":"DanielProgrammer007","Number":"646","RawContent":null,"Title":"Instantiating/enumerating components","State":"closed","Body":"Hi,\r\n\r\nCouple of questions:\r\n\r\n1. How can I instantiate a component at run-time and attach it to a container?\r\n\r\n2. Is there a way to list all components in a given container?\r\n\r\n3. I'm not sure I understand how components can interact with each other. I read the docs section on parent/child components, but how can two completely independent components talk to each other? A common scenario is when there are multiple components inside a TabPage component where a component inside tab A needs to notify a component in tab B about some change. Also, I'm assuming components can trigger their own events?\r\n\r\n4. I've noticed that the initial load takes a few seconds even on localhost, is this going to improve once the entire app is compiled directly to WASM? Is this something that you are actively working on? I don't think the initial load time matters that much for an SPA, but I'm looking at potentially integrating Blazor into my existing WebForms app. I think if users attempt to access a simple page (containing some Blazor components) that takes a few seconds to interpret, that could be a problem.\r\n\r\nAdmittedly I'm not too familiar with other SPA frameworks (React etc), so maybe questions 1-3 have obvious answers. I think it would be very beneficial if in the future releases (once Blazor somewhat matures) your team can provide guidance on how to tackle more complex UI cases, including best practices for creating custom reusable components (e.g. GridView, TreeView etc) - ideally, this would be packaged as a NuGet library of Microsoft's set of basic components.\r\n\r\nAnyway, this project is awesome!\r\n\r\nThank you,\r\nDaniel","Url":"https://github.com/aspnet/Blazor/issues/646","RelatedDescription":"Closed issue \"Instantiating/enumerating components\" (#646)"},{"Id":"316595395","IsPullRequest":false,"CreatedAt":"2018-04-23T08:41:24","Actor":"chanan","Number":"650","RawContent":null,"Title":"Need the concept of react context","State":"closed","Body":"I need to be able to send properties down to child components that the user of my library supplies. For example:\r\n```\r\n<Dropdown>\r\n        <DropdownToggle>Dropdown</DropdownToggle>\r\n        <DropdownMenu>\r\n            <DropdownItem Href=\"#\">Action</DropdownItem>\r\n        </DropdownMenu>\r\n</Dropdown>\r\n```\r\n\r\nIn this example, Dropdown holds a a variable IsOpen that needs to be passed down to DropdownToggle and DropdownMenu. In react this is done by setting context in Dropdown and having the child components read the context.\r\n\r\nIs there a current of passing down properties to child elements, or can a similar concept of context be added to Blazor?","Url":"https://github.com/aspnet/Blazor/issues/650","RelatedDescription":"Closed issue \"Need the concept of react context\" (#650)"},{"Id":"316608815","IsPullRequest":false,"CreatedAt":"2018-04-23T08:40:02","Actor":"thild","Number":"651","RawContent":null,"Title":"UI don't get updated on long run process","State":"closed","Body":"I'm working on a graph search project coded in C# that uses cytoscape.js to render the graphs, paths, and highlighted nodes. I want to render the paths and highlight the nodes in a step-by-step fashion. When a node is visited, an event is raised from the lib and captured by a Blazor component that interop with cytoscape.js. However, apparently the UI thread is blocked until the end of the Blazor rendering cycle even calling StateHasChanged on every event. Can I call async methods from UI?\r\n\r\nThis is my run method on Index.cshtml.\r\n\r\n```\r\nvoid Run()\r\n{\r\n    Graph graph = GraphIO.Read(GraphFile);\r\n    var dijkstra = new Dijkstra(graph);\r\n    dijkstra.Visited = (key) => {\r\n        System.Threading.Thread.Sleep(1000);\r\n        Interop.MarkNode(key);\r\n        StateHasChanged();\r\n    };\r\n    var result = dijkstra.Process(0, 9); //result contains the shortest path\r\n    Result = result.ToString();\r\n    Interop.DrawPath(result);\r\n}\r\n\r\n```","Url":"https://github.com/aspnet/Blazor/issues/651","RelatedDescription":"Closed issue \"UI don't get updated on long run process\" (#651)"},{"Id":"316616223","IsPullRequest":false,"CreatedAt":"2018-04-23T08:31:58","Actor":"Andrzej-W","Number":"652","RawContent":null,"Title":"Obsolete <nobr> HTML element in Shared/SurveyPrompt.cshtml","State":"closed","Body":"I'm using ASP.NET Core Blazor Language Services version 15.7.10242. I have created a new project: Blazor (ASP.NET Core Hosted). In SurveyPrompt.cshtml file I see `<nobr>` HTML element. According to this page [https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr) it is obsolete. Recommended solution is `<span style=\"white-space: nowrap\">Long line with no breaks</span>`\r\n\r\nReal question is: do you really need this behaviour (nowrap)?","Url":"https://github.com/aspnet/Blazor/issues/652","RelatedDescription":"Closed issue \"Obsolete <nobr> HTML element in Shared/SurveyPrompt.cshtml\" (#652)"},{"Id":"316552973","IsPullRequest":false,"CreatedAt":"2018-04-22T14:38:00","Actor":"chanan","Number":"648","RawContent":null,"Title":"input tag doesnt allow ChildContent","State":"closed","Body":"This works:\r\n`<button onclick=\"@_onclick\" type=\"button\" class=\"@className\">@ChildContent</button>`\r\n\r\nThis does not:\r\n`<input onclick=\"@_onclick\" type=\"button\" class=\"@className\">@ChildContent</input>`\r\n\r\nThe error:\r\nFound a malformed 'input' tag helper. Tag helpers must have a start and end tag or be self closing.\r\n","Url":"https://github.com/aspnet/Blazor/issues/648","RelatedDescription":"Closed issue \"input tag doesnt allow ChildContent\" (#648)"},{"Id":"316568301","IsPullRequest":false,"CreatedAt":"2018-04-22T10:44:16","Actor":"montyclt","Number":"649","RawContent":null,"Title":"[PROPOSAL] Support DOM properties binding as HTML attribute.","State":"open","Body":"A DOM object has attributes (set by HTML attributes) and properties, set or get by dot notation in DOM object.\r\n\r\nAn example:\r\n\r\n```\r\n// HTML\r\n<input id=\"name\" value=\"Monty\" />\r\n\r\n// Assume I render the page and change the content of textbox from Monty by Anna.\r\n\r\n// JavaScript\r\nvar name = document.getElementById(\"name\");\r\n\r\nname.getAttribute(\"value\"); // Monty\r\nname.value; // Anna\r\n```\r\n\r\nAs see, the value of the attribute is not the same than the property.\r\n\r\nBecause the text of textbox rendered by `input` tag is in the property and not in the HTML attribute, if we bind the attribute and change the value of the bound field, nothing occurs in rendered textfield.\r\n\r\n```\r\n<input value\"@Name\" id=\"name\" />\r\n\r\n@functions\r\n{\r\n    public string Name = \"Monty\";\r\n}\r\n ```\r\nIf we use value instead of bind attribute, if `Name` field change, nothing is reflected in rendered textfield.\r\n\r\nI propose a syntax to bind field to DOM property.\r\n\r\nAn possible example:\r\n```\r\n<input $value=\"@Name\" />\r\n```\r\nThis syntax, bind `Name` field to DOM property instead of HTML attribute.\r\n\r\nWhy?\r\n\r\n- Consistency, instead of new attribute called `bind`, you know what is binding really.\r\n- Some webcomponents, use new properties, for example:\r\n```\r\n// HTML\r\n<my-calendar id=\"calendar\" />\r\n\r\n// JavaScript\r\nvar calendar = document.getElementById(\"calendar\");\r\ncalendar.day; // 13\r\ncalendar.month; //4\r\ncalendar.year; // 2017\r\ncalendar.value; // undefined\r\n```\r\n\r\nIn this case, I can't use `bind` attribute, but I can do:\r\n```\r\n<my-calendar $day=\"Day\" $month=\"Month\" $year=\"Year\" />\r\n\r\n@functions\r\n{\r\n    public int Day { get; set; }\r\n    public int Month { get; set; }\r\n    public int Year { get; set; }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/649","RelatedDescription":"Open issue \"[PROPOSAL] Support DOM properties binding as HTML attribute.\" (#649)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-04-25T05:30:02.4364918Z","RunDurationInMilliseconds":1089}