{"Data":{"Sdk":{"Events":[{"Id":"7158149066","Type":"PullRequestEvent","CreatedAt":"2018-01-26T22:54:46","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/394","RelatedDescription":"Opened pull request \"Update office2016 from master\" (#394) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7157116300","Type":"IssuesEvent","CreatedAt":"2018-01-26T18:43:33","Actor":"pjanouch","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/393","RelatedDescription":"Opened issue \"Strict http://purl.oclc.org/ooxml/spreadsheetml/main fails validation\" (#393) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nStrict namespace spreadsheetml tables throw an exception in OpenXmlValidator.\r\n\r\n**Information**\r\n\r\n- .NET Target: whatever the default is in VS\r\n- DocumentFormat.OpenXml Version: 2.5.0, 2.8.1\r\n\r\n**Repro**\r\n\r\nTrivial spreadsheet that triggers the problem: [test.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/1668722/test.xlsx)\r\n\r\n*_rels/worksheet.xml.rels* has `<Relationship Id='rId1' Type='http://purl.oclc.org/ooxml/officeDocu\r\nment/relationships/table' Target='table.xml' />` which should, I think, enable `StrictTranslation`.\r\n\r\n*table.xml* has `<table xmlns='http://purl.oclc.org/ooxml/spreadsheetml/main' id='1' displayName='Data' ref='A1:B3'>`\r\n\r\nBoth URLs are straight from ECMA-376, Part 1, *12.3.21 Table Definition Part*.\r\n\r\nAdditionally, both LibreOffice and Office Online are able to load the table definition, which arguably might not signify anything.\r\n\r\n```csharp\r\nSpreadsheetDocument document = SpreadsheetDocument.Open(\"test.xlsx\", false);\r\nOpenXmlValidator validator = new OpenXmlValidator(FileFormatVersions.Office2010);\r\nvalidator.Validate(document);\r\n``` \r\n\r\n**Observed**\r\n\r\n```\r\nSystem.IO.InvalidDataException\r\n  HResult=0x80131501\r\n  Message=Cannot load the root element from the part. The part contains invalid data.\r\n  Source=DocumentFormat.OpenXml\r\n  StackTrace:\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree[T]()\r\n   at DocumentFormat.OpenXml.Packaging.TableDefinitionPart.get_PartRootElement()\r\n   at DocumentFormat.OpenXml.Validation.DocumentValidator.ValidatePart(OpenXmlPart part)\r\n   at DocumentFormat.OpenXml.Validation.DocumentValidator.Validate(OpenXmlPackage document)\r\n   at DocumentFormat.OpenXml.Validation.OpenXmlValidator.Validate(OpenXmlPackage openXmlPackage)\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\Users\\IEUser\\source\\repos\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 18\r\n\r\nInner Exception 1:\r\nInvalidDataException: The root XML element \"http://purl.oclc.org/ooxml/spreadsheetml/main:table\" in the part is incorrect. The expected root XML element is: \"http://schemas.openxmlformats.org/spreadsheetml/2006/main:table\".\r\n```\r\n\r\n**Expected**\r\n\r\nNo exception should be thrown and no errors returned."},{"Id":"7155573768","Type":"IssuesEvent","CreatedAt":"2018-01-26T13:23:25","Actor":"mraz1337","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/392","RelatedDescription":"Opened issue \"OpenXML  - workbook.xml.rels\" (#392) at OfficeDev/Open-XML-SDK","RelatedBody":"We have found the annoyance which doesn't allow the file to be opened on iOS/Mac OS xl\\_rels\\workbook.xml.rels \r\n\r\nInside this file there is tag with Target Attribute\r\n\r\n <Relationship Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"/xl/styles.xml\" Id=\"rId3\"/>\r\n\r\nOpenXML SDK adds this \"/xl/\" before filename.  \r\nExcel after re-saving removes this \"/xl/\" and file can be opened on iOS.\r\n\r\nQuestion: how to force OpenXML SDK to work as Excel does and NOT put this  \"/xl/\" into Target tag of  workbook.xml.rels?"},{"Id":"7152515928","Type":"PullRequestEvent","CreatedAt":"2018-01-25T21:19:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/391","RelatedDescription":"Opened pull request \"Update FxCop and VSTest to stable versions\" (#391) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7152137099","Type":"PullRequestEvent","CreatedAt":"2018-01-25T19:55:38","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/390","RelatedDescription":"Opened pull request \"Create single ValidationContext and remove mutability from validators\" (#390) at OfficeDev/Open-XML-SDK","RelatedBody":"This simplifies some of the validation logic and removes more mutability. There's probably some more that can be addressed later, but this creates a single `ValidationContext` to track errors and whether or not validation is cancelled. By doing this, a number of eventing patterns can be removed, which should help a bit with performance on large validation scenarios."},{"Id":"7152104228","Type":"PullRequestEvent","CreatedAt":"2018-01-25T19:48:50","Actor":"tomjebo","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/388","RelatedDescription":"Merged pull request \"Remove package state in DocumentValidator\" (#388) at OfficeDev/Open-XML-SDK","RelatedBody":"The DocumentValidator was maintaining a reference to the previously validated document. This change removes the state kept within the DocumentValidator and adds a test to ensure we are not holding on to any document reference.\r\n\r\nFixes #52 "},{"Id":"7150227758","Type":"IssuesEvent","CreatedAt":"2018-01-25T13:56:09","Actor":"daniel-white","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/389","RelatedDescription":"Opened issue \"DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart has no functional properties\" (#389) at OfficeDev/Open-XML-SDK","RelatedBody":"\r\n\r\n**Description**\r\n\r\nDocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart has no functional properties. I'd like to access at least the tags, description and title elements. There seems to be a well defined schema for it.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core\r\n- DocumentFormat.OpenXml Version: (ie 2.8.2)\r\n"},{"Id":"7147905111","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:24:13","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/388","RelatedDescription":"Opened pull request \"Remove package state in DocumentValidator\" (#388) at OfficeDev/Open-XML-SDK","RelatedBody":"The DocumentValidator was maintaining a reference to the previously validated document. This removes the state kept within the DocumentValidator and adds a test to ensure we are not holding on to any document reference.\r\n\r\nFixes #52 "},{"Id":"7147058036","Type":"IssuesEvent","CreatedAt":"2018-01-24T22:51:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/380","RelatedDescription":"Closed issue \"ToFlatOpcString fails with generated document\" (#380) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\n`ToFlatOpcString` throws \"Root element is missing.\" I'm trying to put this format into a VSTO add-in. When I enumerate `wordprocessingDocument.Package.GetParts()`, I get the relationship part back as an empty string (`ContentType = \"application/vnd.openxmlformats-package.relationships+xml\"`). Shouldn't `AddMainDocumentPart` take care of this under the covers?\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.0, .NET Framework 4.7\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Wordprocessing;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (MemoryStream stream = new MemoryStream())\r\n            using (WordprocessingDocument wordprocessingDocument = WordprocessingDocument.Create(stream, WordprocessingDocumentType.Document))\r\n            {\r\n                MainDocumentPart mainDocumentPart = wordprocessingDocument.AddMainDocumentPart();\r\n                Body body = new Body(new Paragraph(new Run(new RunProperties(new Bold()),\r\n                    new Text(\"Hello world this should be bold\"))));\r\n                mainDocumentPart.Document = new Document(body);\r\n\r\n                wordprocessingDocument.Save();\r\n\r\n                Console.WriteLine(wordprocessingDocument.ToFlatOpcDocument());\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nException:\r\n\r\n```\r\nSystem.Xml.XmlException: Root element is missing.\r\n   at System.Xml.XmlTextReaderImpl.Throw(Exception e)\r\n   at System.Xml.XmlTextReaderImpl.ParseDocumentContent()\r\n   at System.Xml.XmlTextReaderImpl.Read()\r\n   at System.Xml.XmlReader.MoveToContent()\r\n   at System.Xml.Linq.XElement.Load(XmlReader reader, LoadOptions options)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.GetContentsAsXml(PackagePart part)\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ToFlatOpcDocument(XProcessingInstruction instruction)\r\n   at ConsoleApp1.Program.Main(String[] args)\r\n```\r\n\r\n**Expected**\r\n\r\nThat `ToFlatOpcString` doesn't throw and I get the resulting XML string.\r\n"},{"Id":"7146728987","Type":"PullRequestEvent","CreatedAt":"2018-01-24T21:38:06","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/383","RelatedDescription":"Merged pull request \"Add tests for flatopc without flush\" (#383) at OfficeDev/Open-XML-SDK","RelatedBody":"@daniel-white I added these from your previous PR. Seems they should go into this FlatOpcTests.cs."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7114740250","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:27:51","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/200","RelatedDescription":"Opened pull request \"Safe HTML to wml\" (#200) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Check for properties that could be null when HTML is parsed."},{"Id":"7103446568","Type":"PullRequestEvent","CreatedAt":"2018-01-16T05:07:12","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/199","RelatedDescription":"Opened pull request \"No settings fix\" (#199) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Fixed issue with converting a docx to HTML that has no settings file."},{"Id":"7103393888","Type":"PullRequestEvent","CreatedAt":"2018-01-16T04:43:30","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/70","RelatedDescription":"Closed pull request \"Ability to process Flat to OPC and OPC to Flat in memory.\" (#70) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Added a couple of overloads to make it possible to transfer a flat opc structure to a docx package and vice versa without writing to disk.\n"},{"Id":"7102446154","Type":"IssuesEvent","CreatedAt":"2018-01-15T22:17:57","Actor":"AlirezaAhmadiRad","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/198","RelatedDescription":"Opened issue \"Exception during conversion of html table to docx\" (#198) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hello\r\nI have [this html file](https://1drv.ms/f/s!Alj_FDyopEuRgtp3ZozLwqQGXxZNWQ). \r\nThis is code for converting it to docx:\r\n\r\n`                                XElement X = XElement.Parse(HT.HTML); \r\n                                HtmlToWmlConverterSettings S = HtmlToWmlConverter.GetDefaultSettings(); \r\n                                WmlDocument D = HtmlToWmlConverter.ConvertHtmlToWml(\"\", \"\", \"\", X, S); \r\n                                sources.Add(new Source(D, true));\r\n`\r\n\r\nThen I receive exception of \"Object reference not set to an instance of an object.\" at this address:\r\n\r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.GetTableGrid(XElement element, HtmlToWmlConverterSettings settings)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.Transform(XNode node, HtmlToWmlConverterSettings settings, WordprocessingDocument wDoc, NextExpected nextExpected, Boolean preserveWhiteSpace)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.<>c__DisplayClass20_0.<Transform>b__6(XNode n)     \r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()     \r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)     \r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.UpdateMainDocumentPart(WordprocessingDocument wDoc, XElement html, HtmlToWmlConverterSettings settings)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.ConvertHtmlToWml(String defaultCss, String authorCss, String userCss, XElement xhtml, HtmlToWmlConverterSettings settings, WmlDocument emptyDocument, String annotatedHtmlDumpFileName)     \r\n   at OpenXmlPowerTools.HtmlToWmlConverter.ConvertHtmlToWml(String defaultCss, String authorCss, String userCss, XElement xhtml, HtmlToWmlConverterSettings settings)     at WebOS.Engine.V100.WebOSIO.GenerateWordReport(List`1 Tables, Guid FileID, String FileName, ReportType FileType, Guid OwnerProgramID, RemoteLogin ID) \r\n\r\nI'm using nuget version 4.5.3.2\r\nCould you please help?\r\n\r\n"},{"Id":"7090822866","Type":"PullRequestEvent","CreatedAt":"2018-01-12T10:28:26","Actor":"bonek","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/197","RelatedDescription":"Opened pull request \"Master\" (#197) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Fixed TextReplacer on empty string in parameter"},{"Id":"7082063968","Type":"PullRequestEvent","CreatedAt":"2018-01-10T18:45:18","Actor":"DiE-MaRMeLaDe","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/153","RelatedDescription":"Closed pull request \"Added .Net Core support without validation\" (#153) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Added .net core package without XSD validation."},{"Id":"7077940167","Type":"IssuesEvent","CreatedAt":"2018-01-10T00:34:50","Actor":"sandhyarkr","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/196","RelatedDescription":"Opened issue \"Support for converting textboxes in .docx  to html\" (#196) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\nI am using OpenXmlPowerTools 4.5.3.2 for my project to convert .docx files to html . I have found that the  textboxes within the .docx files are not being converted into html. Is this feature likely to be supported? \r\nI am doing this project as part of my organization requirement and most of the .docx files have textboxes and embedded data within the same which needs to be seen in the converted html .\r\nI am using Visual Studio 2012 with Update 5 applied and have retrieved the OpenXMLPowertools library through NuGet. \r\n\r\nAlso are any enhancements likely on making the html responsive?"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-27T05:30:32.3813491Z","RunDurationInMilliseconds":2178}