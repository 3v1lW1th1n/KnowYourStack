{"Data":{"GitHub":{"Issues":[{"Id":"407534325","IsPullRequest":true,"CreatedAt":"2019-02-07T04:11:30","Actor":"manuelvalenzuela","Number":"413","RawContent":null,"Title":"Fixed broken link pointing to contributing.md","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/413","RelatedDescription":"Open PR \"Fixed broken link pointing to contributing.md\" (#413)"},{"Id":"404532531","IsPullRequest":true,"CreatedAt":"2019-02-06T19:36:30","Actor":"dreddy-work","Number":"397","RawContent":null,"Title":"Dev/dreddy/primitives design port","State":"closed","Body":"Adding remaining tests and configurations to complete System.Drawing.Design port to winforms.\r\nFixes #340","Url":"https://github.com/dotnet/winforms/pull/397","RelatedDescription":"Closed or merged PR \"Dev/dreddy/primitives design port\" (#397)"},{"Id":"407049136","IsPullRequest":true,"CreatedAt":"2019-02-06T01:47:18","Actor":"zsd4yr","Number":"412","RawContent":null,"Title":"Rename binlog after creation","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/412","RelatedDescription":"Closed or merged PR \"Rename binlog after creation\" (#412)"},{"Id":"406925380","IsPullRequest":true,"CreatedAt":"2019-02-05T21:10:23","Actor":"zsd4yr","Number":"411","RawContent":null,"Title":"Enable CI for Release Branches","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/411","RelatedDescription":"Closed or merged PR \"Enable CI for Release Branches\" (#411)"},{"Id":"406771930","IsPullRequest":true,"CreatedAt":"2019-02-05T13:01:22","Actor":"dotnet-maestro[bot]","Number":"410","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19104.18\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19105.5\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/410","RelatedDescription":"Open PR \"Update dependencies from dotnet/arcade\" (#410)"},{"Id":"405981028","IsPullRequest":true,"CreatedAt":"2019-02-04T21:37:27","Actor":"dotnet-maestro[bot]","Number":"409","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19102.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19103.1\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/409","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#409)"},{"Id":"405909787","IsPullRequest":true,"CreatedAt":"2019-02-04T21:30:36","Actor":"zsd4yr","Number":"408","RawContent":null,"Title":"fix for binary log being clobbered by later steps","State":"closed","Body":"This is a fix for the clobbering of the binary log by later phases of the build jobs; this is currently done on the eng/common version which will be overridden the next time that we take an update from arcade. I will circle around and see if they want to add this feature or if we will have to step away and maintain our own co0py of the script (not ideal)","Url":"https://github.com/dotnet/winforms/pull/408","RelatedDescription":"Closed or merged PR \"fix for binary log being clobbered by later steps\" (#408)"},{"Id":"403703288","IsPullRequest":false,"CreatedAt":"2019-02-04T20:59:53","Actor":"Olina-Zhang","Number":"386","RawContent":null,"Title":"WinForms Core default project name/solution name should not be “ConsoleAppXXX” in Visual Studio","State":"closed","Body":"**VS**: 16.0.0 Preview 4.0 [28526.15.d16.0stg]\r\n**.NET SDK**: .NET Core 3.0.100-preview-010184\r\n\r\n**Steps to Reproduce:**\r\n1. Launch Dev16, click “Create a new project”, then choose “Windows Forms App (.Net Core)” template, then click Next\r\n2. In “configure your new project” dialog, check the project name and solution name\r\n\r\n**Actual:**\r\nThe Project name and Solution name for Winforms .Net Core app are not correct, should not be “ConsoleAppXXX”. See following screenshot:\r\n![corecreating](https://user-images.githubusercontent.com/26474449/51823921-a5e17b00-2295-11e9-8881-593939e31043.png)\r\n\r\n**Expected:**\r\nThe default Project name and Solution name are same as Winforms Framework app when creating.","Url":"https://github.com/dotnet/winforms/issues/386","RelatedDescription":"Closed issue \"WinForms Core default project name/solution name should not be “ConsoleAppXXX” in Visual Studio\" (#386)"},{"Id":"405223196","IsPullRequest":true,"CreatedAt":"2019-02-01T22:42:53","Actor":"v-zbsail","Number":"402","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20190131","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/402","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20190131\" (#402)"},{"Id":"405869529","IsPullRequest":false,"CreatedAt":"2019-02-01T20:54:14","Actor":"dreddy-work","Number":"407","RawContent":null,"Title":"Add appcompat for shared assembly System.Drawing between winforms and corefx and also between winforms and Desktop.","State":"open","Body":"System.Drawing.dll exists in corefx and winforms. Winforms assembly is expected to be a super-set of corefx version and should win at load time in all applicable scenarios.  To make sure of this,  We made file version of this assembly in winforms higher than the corefx version. We also need to add appcompat in the build process to make sure we never go out of sync of these assumptions.","Url":"https://github.com/dotnet/winforms/issues/407","RelatedDescription":"Open issue \"Add appcompat for shared assembly System.Drawing between winforms and corefx and also between winforms and Desktop.\" (#407)"},{"Id":"405692399","IsPullRequest":true,"CreatedAt":"2019-02-01T16:57:28","Actor":"dotnet-maestro[bot]","Number":"406","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19081.3\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/406","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#406)"},{"Id":"405641103","IsPullRequest":true,"CreatedAt":"2019-02-01T16:36:34","Actor":"KlausLoeffelmann","Number":"405","RawContent":null,"Title":"Fix bug where SetHighDpiMode returns wrong result on W8.1-<W10RS1.","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/405","RelatedDescription":"Closed or merged PR \"Fix bug where SetHighDpiMode returns wrong result on W8.1-<W10RS1.\" (#405)"},{"Id":"404284000","IsPullRequest":true,"CreatedAt":"2019-01-31T22:53:18","Actor":"KlausLoeffelmann","Number":"396","RawContent":null,"Title":"HighDpiMode API Extension","State":"closed","Body":"Following EnableVisualStyles()/RenderWithVisualStyles of the Application class, this is the implementation of the method SetHighDpiMode which switches to the corresponding HighDPI mode, if that HighDPIMode setting a) has not been set before by other means (App.Manifest, P/Invoke before Application.Run – in this case the value to be set is ignored), and b) that HighDPIMode setting was set via SetHighDpiMode before the first UI Element has been rendered.\r\n\r\nPossible settings values are provided by the HighDpiMode Enum:\r\n\r\n* DpiUnaware\r\n* SystemAware\r\n* PerMonitor\r\n* PerMonitorV2\r\n* DpiUnawareGdiScaled\r\n\r\nIf a setting is attempted to be set which is not supported by the underlying OS, SetHighDpiMode automatically assumes the next possible setting on that OS; SetHighDpiMode never directly triggers an exception, but gives feedback as to whether the setting could be successfully set (true) or not (false).\r\n\r\nIn addition developers can query the actual setting of the current HighDpiMode at any time using the Application.HighDpiMode property, which returns one of the available HighDpiMode Enum values.\r\n\r\ncloses #135.","Url":"https://github.com/dotnet/winforms/pull/396","RelatedDescription":"Closed or merged PR \"HighDpiMode API Extension\" (#396)"},{"Id":"405247423","IsPullRequest":true,"CreatedAt":"2019-01-31T17:23:10","Actor":"dotnet-maestro[bot]","Number":"404","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19080.5\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview.19080.5\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19080.5\r\n- System.Windows.Extensions - 4.6.0-preview.19080.5\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19080.5\r\n- System.Security.Cryptography.Cng - 4.6.0-preview.19080.5\r\n- System.Security.Permissions - 4.6.0-preview.19080.5\r\n- System.Drawing.Common - 4.6.0-preview.19080.5\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/404","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#404)"},{"Id":"405235244","IsPullRequest":true,"CreatedAt":"2019-01-31T17:22:46","Actor":"dotnet-maestro[bot]","Number":"403","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19080.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/403","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#403)"},{"Id":"405010278","IsPullRequest":true,"CreatedAt":"2019-01-30T23:25:50","Actor":"zsd4yr","Number":"401","RawContent":null,"Title":"fix no header failures as part of previous PR","State":"closed","Body":"fixes failures from #213","Url":"https://github.com/dotnet/winforms/pull/401","RelatedDescription":"Closed or merged PR \"fix no header failures as part of previous PR\" (#401)"},{"Id":"404954003","IsPullRequest":true,"CreatedAt":"2019-01-30T20:37:54","Actor":"M-Lipin","Number":"400","RawContent":null,"Title":"Net FX 48 Accessibility Fixes port","State":"open","Body":"Porting accessibility fixes for DataGridView, ToolStrip and PropertyGrid controls.\r\n\r\ncontributes to #182","Url":"https://github.com/dotnet/winforms/pull/400","RelatedDescription":"Open PR \"Net FX 48 Accessibility Fixes port\" (#400)"},{"Id":"403453656","IsPullRequest":false,"CreatedAt":"2019-01-30T19:00:51","Actor":"hughbe","Number":"385","RawContent":null,"Title":"TableLayoutStyleCollection.Insert/Add/ItemSet(null) throws NRE should throw ANE","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/issues/385","RelatedDescription":"Closed issue \"TableLayoutStyleCollection.Insert/Add/ItemSet(null) throws NRE should throw ANE\" (#385)"},{"Id":"403453605","IsPullRequest":false,"CreatedAt":"2019-01-30T19:00:46","Actor":"hughbe","Number":"384","RawContent":null,"Title":"TableLayoutPanelCellPosition.CreateInstance(null, null) throws NRE should throw ANE","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/issues/384","RelatedDescription":"Closed issue \"TableLayoutPanelCellPosition.CreateInstance(null, null) throws NRE should throw ANE\" (#384)"},{"Id":"404767658","IsPullRequest":true,"CreatedAt":"2019-01-30T18:22:52","Actor":"dotnet-maestro[bot]","Number":"398","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19079.11\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview.19079.11\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19079.11\r\n- System.Windows.Extensions - 4.6.0-preview.19079.11\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19079.11\r\n- System.Security.Cryptography.Cng - 4.6.0-preview.19079.11\r\n- System.Security.Permissions - 4.6.0-preview.19079.11\r\n- System.Drawing.Common - 4.6.0-preview.19079.11\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/398","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#398)"},{"Id":"404901364","IsPullRequest":true,"CreatedAt":"2019-01-30T18:21:14","Actor":"zsd4yr","Number":"399","RawContent":null,"Title":"Dpi awareness context fixes from classic + deprecate unspecified context ","State":"open","Body":"* Port fixes from desktop classic runtime to core runtime\r\n* remove unspecified dpi awareness context and replace with null\r\n* fix tests","Url":"https://github.com/dotnet/winforms/pull/399","RelatedDescription":"Open PR \"Dpi awareness context fixes from classic + deprecate unspecified context \" (#399)"},{"Id":"404075107","IsPullRequest":true,"CreatedAt":"2019-01-29T00:59:32","Actor":"hughbe","Number":"395","RawContent":null,"Title":"Add ListBindingHelper tests","State":"open","Body":"Depends on https://github.com/dotnet/winforms/pull/394","Url":"https://github.com/dotnet/winforms/pull/395","RelatedDescription":"Open PR \"Add ListBindingHelper tests\" (#395)"},{"Id":"404074584","IsPullRequest":true,"CreatedAt":"2019-01-29T00:57:22","Actor":"hughbe","Number":"394","RawContent":null,"Title":"Fix binding null refs","State":"open","Body":"Fixes #388 \r\nFixes #389\r\nFixes #390\r\nFixes #391\r\nFixes #392\r\n\r\nThis is an obvious win - we now return something meaningful (and usable) in these examples rather than throwing NRE. There are no changes in exceptions, only exceptions in edge cases that are no longer an issue!","Url":"https://github.com/dotnet/winforms/pull/394","RelatedDescription":"Open PR \"Fix binding null refs\" (#394)"},{"Id":"404073071","IsPullRequest":true,"CreatedAt":"2019-01-29T00:50:47","Actor":"hughbe","Number":"393","RawContent":null,"Title":"Remove dead code from binding","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/393","RelatedDescription":"Open PR \"Remove dead code from binding\" (#393)"},{"Id":"403985815","IsPullRequest":false,"CreatedAt":"2019-01-28T20:08:28","Actor":"hughbe","Number":"392","RawContent":null,"Title":"ListBindingHelper.GetListName(1, new PropertyDescriptor[] { null }) throws NRE should return null","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/392","RelatedDescription":"Open issue \"ListBindingHelper.GetListName(1, new PropertyDescriptor[] { null }) throws NRE should return null\" (#392)"},{"Id":"403984816","IsPullRequest":false,"CreatedAt":"2019-01-28T20:05:44","Actor":"hughbe","Number":"391","RawContent":null,"Title":"ListBindingHelper.GetListName(typeof(Array), new PropertyDescriptor[0]) throws NRE should return \"Array\"","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/391","RelatedDescription":"Open issue \"ListBindingHelper.GetListName(typeof(Array), new PropertyDescriptor[0]) throws NRE should return \"Array\"\" (#391)"},{"Id":"403931318","IsPullRequest":false,"CreatedAt":"2019-01-28T17:45:34","Actor":"hughbe","Number":"390","RawContent":null,"Title":"ListBindingHelper.GetListItemProperties(x, new PropertyDescriptor[] { null }) throws NRE should return empty","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/390","RelatedDescription":"Open issue \"ListBindingHelper.GetListItemProperties(x, new PropertyDescriptor[] { null }) throws NRE should return empty\" (#390)"},{"Id":"403877132","IsPullRequest":false,"CreatedAt":"2019-01-28T15:46:34","Actor":"hughbe","Number":"389","RawContent":null,"Title":"ListBindingHelper.GetListItemType(new IEnumerableWrapper(null)) throws NRE should return typeof(object)","State":"open","Body":"```cs\r\nListBindingHelper.GetListItemType(new IEnumerableWrapper(null));\r\n\r\nprivate class IEnumerableWrapper : IEnumerable\r\n{\r\n    public IEnumerableWrapper(IList list)\r\n    {\r\n        List = list;\r\n    }\r\n\r\n    private IList List { get; }\r\n\r\n    public IEnumerator GetEnumerator() => List?.GetEnumerator();\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/389","RelatedDescription":"Open issue \"ListBindingHelper.GetListItemType(new IEnumerableWrapper(null)) throws NRE should return typeof(object)\" (#389)"},{"Id":"403870631","IsPullRequest":false,"CreatedAt":"2019-01-28T15:32:50","Actor":"hughbe","Number":"388","RawContent":null,"Title":"ListBindingHelper.GetListItemType(typeof(IListSourceThatReturnsNull)) throws NRE should return null","State":"open","Body":"Should return null\r\n\r\n```cs\r\nvoid Method()\r\n{\r\n      ListBindingHelper.GetListItemType(ilistSource.GetType());\r\n}\r\n\r\n        private class ClassWithIListSource : IListSource\r\n        {\r\n            public bool ContainsListCollection => throw new NotImplementedException();\r\n\r\n            public IList GetListResult { get; set; }\r\n\r\n            public IList GetList() => GetListResult;\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/388","RelatedDescription":"Open issue \"ListBindingHelper.GetListItemType(typeof(IListSourceThatReturnsNull)) throws NRE should return null\" (#388)"},{"Id":"403775569","IsPullRequest":false,"CreatedAt":"2019-01-28T11:48:02","Actor":"Zheng-Li01","Number":"387","RawContent":null,"Title":"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application ","State":"open","Body":"**OS:** RS4 X64\r\n**VS:** Visual Studio 2019 Version 16.0.0.0 Preview 4.0 [28526.15.d16.0stg]\r\n**.NET SDK:** .NET Core 3.0.100-preview-10184\r\n\r\n**More Info:**\r\n1. In .Net framework application adding the same code, no exception pops up.\r\n2. Replace Bitmap value = new Bitmap(64, 64) with Bitmap value = new Bitmap(\"C:\\Users\\Desktop\\xxx.png\") , no exception pops up.\r\n\r\n**Steps to Reproduce:**\r\n1. Create a Winforms .Net Core application by command: dotnet new winforms –o “xxx”.\r\n2. Write code to Form1.cs.\r\n    using System.Resources;\r\n    using System.Drawing;\r\n    Bitmap value = new Bitmap(64, 64);\r\n    String key = \"e\";\r\n    ResXResourceWriter writer = new ResXResourceWriter(\"ResxResourceWriter.resx\");\r\n    ResXDataNode node = new ResXDataNode(key, value);\r\n    writer.AddResource(node);\r\n3. Debug the application.\r\n\r\n**Actual:**\r\nWhen debugging to writer.AddResource(node), the exception pops up.\r\n![image](https://user-images.githubusercontent.com/38325459/51834305-d62c2680-2334-11e9-8764-6b0f0b4b3800.png)\r\n\r\n**Call Stack:**\r\nSystem.ArgumentNullException\r\nHResult=0x80004003\r\nMessage=Value cannot be null.\r\nSource=System.Drawing.Common\r\nStackTrace:\r\nat System.Drawing.Image.Save(Stream stream, ImageCodecInfo encoder, EncoderParameters encoderParams)\r\nat System.Drawing.Image.Save(Stream stream, ImageFormat format)\r\nat System.Drawing.ImageConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)\r\nat System.ComponentModel.TypeConverter.ConvertTo(Object value, Type destinationType)\r\nat System.Resources.ResXDataNode.FillDataNodeInfoFromObject(DataNodeInfo nodeInfo, Object value)\r\nat System.Resources.ResXDataNode.GetDataNodeInfo()\r\nat System.Resources.ResXResourceWriter.AddResource(ResXDataNode node)\r\nat AddResourceconsole.Program.Main(String[] args) in C:\\Users\\v-jiaol\\Desktop\\WinformDemo\\AddResourceconsole\\Program.cs:line 31\r\n\r\n**Expected:**\r\nNo exception pops up, application runs successfully.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/387","RelatedDescription":"Open issue \"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application \" (#387)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-07T05:31:13.2647758Z","RunDurationInMilliseconds":618}