{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":74,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0","PublishedOn":"2019-09-23T16:00:29+00:00","CommentsCount":120,"FacebookCount":0,"Summary":"Announcing .NET Core 3.0\nWe’re excited to announce the release of .NET Core 3.0. It includes many improvements, including adding Windows Forms and WPF, adding new JSON APIs, support for ARM64 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10649298194","Type":"PullRequestEvent","CreatedAt":"2019-10-17T05:07:47","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27244","RelatedDescription":"Merged pull request \"Use armarch queue for internal builds\" (#27244) at dotnet/coreclr","RelatedBody":"This is incremental work to remove the ubuntu.1604.arm32 queue."},{"Id":"10648973893","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:44:56","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27235","RelatedDescription":"Merged pull request \"Use aligned memory access in JIT_StackProbe\" (#27235) at dotnet/coreclr","RelatedBody":"As Jan suggested in https://github.com/dotnet/coreclr/pull/27184#discussion_r334700866 I reimplemented `JIT_StackProbe` so the helper uses only aligned memory access to probe the stack. It turns out that the new implementations on win-x86, linux-x86 and Linux-x64 require one instruction less.\r\n\r\n@BruceForstall @janvorli PTAL\r\ncc @jkotas "},{"Id":"10648972215","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:44:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27240","RelatedDescription":"Merged pull request \"Delete ENABLE_WINRT define\" (#27240) at dotnet/coreclr","RelatedBody":".NET Native specific code not needed anymore"},{"Id":"10648967052","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:43:12","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27245","RelatedDescription":"Merged pull request \"Fix field offset computation in crossgen2\" (#27245) at dotnet/coreclr","RelatedBody":"The logic for determining when to align base offset was not matching the\r\nlogic that is used in the coreclr runtime. This resulted in assert\r\nfailure: `m_alignpad == 0` at runtime in 4 CoreMangLib tests.\r\n\r\nI've actually fixed the same issue in old crossgen some time ago in #25029, so \r\nit was easy to figure out where the issue came from. The issue causes a memory\r\ncorruption after the end of an object, which later on results in the m_alignpad of\r\nan object that's allocated consequently being zero.\r\n\r\nThe fix is to make the logic in `AlignBaseOffsetIfNecessary` match the one in `MethodTableBuilder::NeedsAlignedBaseOffset`."},{"Id":"10648828813","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:10:27","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27257","RelatedDescription":"Opened pull request \"Replace gtIndex. with AsIndex()->\" (#27257) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10648822943","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:09:06","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27256","RelatedDescription":"Opened pull request \"Replace gtAddrMode. with AsAddrMode()->\" (#27256) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10648817258","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:07:50","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27255","RelatedDescription":"Opened pull request \"Replace gtIntrinsic. with AsIntrinsic()->\" (#27255) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10648798412","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:03:31","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27254","RelatedDescription":"Opened pull request \"Replace gtArgPlace. with AsArgPlace()->\" (#27254) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10648692829","Type":"IssuesEvent","CreatedAt":"2019-10-17T02:38:45","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27253","RelatedDescription":"Opened issue \"Assert failure(PID 984 [0x000003d8], Thread: 3652 [0x0e44]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\" (#27253) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-corefx-jitstress2-jitstressregs:20191016.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=389575)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/3733fe9b-4da4-4ade-ba16-2c3c7ae46670/workitems/System.Reflection.MetadataLoadContext.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=0\r\nset COMPlus_JitStress=2\r\nset COMPlus_JitStressRegs=3\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nSystem.BadImageFormatException : A type specification contained an out of range index for a generic type parameter '-605572008'.\r\n\r\nAssert failure(PID 984 [0x000003d8], Thread: 3652 [0x0e44]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\r\n\r\nCORECLR! `Object::ValidateInner'::`1'::catch$12 + 0x147 (0x00007ffe`21daf43d)\r\nCORECLR! CallSettingFrame + 0x20 (0x00007ffe`21c45210)\r\nCORECLR! _FrameHandler3::CxxCallCatchBlock + 0x15A (0x00007ffe`21c439ba)\r\nNTDLL! RtlCaptureContext + 0x3C3 (0x00007ffe`51c09bd3)\r\nCORECLR! Object::ValidateInner + 0x12E (0x00007ffe`216a317e)\r\nCORECLR! Object::Validate + 0x13A (0x00007ffe`216a300a)\r\nCORECLR! WKS::GCHeap::Promote + 0x9F (0x00007ffe`21af29ef)\r\nCORECLR! TailCallFrame::GcScanRoots + 0x188 (0x00007ffe`2141d838)\r\nCORECLR! GcStackCrawlCallBack + 0x386 (0x00007ffe`219e6616)\r\nCORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ffe`214454ca)\r\n    File: f:\\workspace.4\\_work\\1\\s\\src\\vm\\object.cpp Line: 674\r\n    Image: C:\\dotnetbuild\\work\\3733fe9b-4da4-4ade-ba16-2c3c7ae46670\\Payload\\dotnet.exe\r\n\r\n----- end Wed 10/16/2019  8:54:36.71 ----- exit code -1073740286 ----------------------------------------------------------\r\n```"},{"Id":"10648615028","Type":"IssuesEvent","CreatedAt":"2019-10-17T02:20:12","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27252","RelatedDescription":"Opened issue \"Test failed: JIT\\Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.cmd\" (#27252) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191015.2 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=389381&view=logs)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/160a80d4-8632-4dfe-9f89-99e3815072a5/workitems/JIT.Methodical/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nwe can't run this program on our windows rt 8.1.\r\n\r\n**Log:** \r\n```\r\nJIT\\Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.cmd [FAIL]\r\n      \r\n      Assert failure(PID 3684 [0x00000e64], Thread: 14000 [0x36b0]): Consistency check failed: AV in clr at this callstack:\r\n      ------\r\n      <no module>! <no symbol> + 0x0 (0x00000000)\r\n      -----\r\n      .AV on tid=0x36b0 (14000), cxr=0057DE08, exr=0057DFA8\r\n      FAILED: false\r\n      \r\n      <no module>! <no symbol> + 0x0 (0x00000000)\r\n          File: f:\\workspace.4\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7590\r\n          Image: C:\\dotnetbuild\\work\\160a80d4-8632-4dfe-9f89-99e3815072a5\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\160a80d4-8632-4dfe-9f89-99e3815072a5\\Work\\3f016667-3c4f-4918-aef6-b4ede053a75c\\Exec\\JIT\\Methodical\\Reports\\JIT.Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\160a80d4-8632-4dfe-9f89-99e3815072a5\\Payload\\corerun.exe\" _il_dbgdeep_gc.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10648491425","Type":"IssuesEvent","CreatedAt":"2019-10-17T01:49:38","Actor":"HexJacaranda","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27251","RelatedDescription":"Opened issue \"CoreRun cannot load assembly\" (#27251) at dotnet/coreclr","RelatedBody":"After building coreclr, I tried to run some samples on my build in PowerShell but got the exception\r\n“this module was expected to contain an assembly manifest” for console program and \"Entry point\r\nnot found\" for compiled dll.\r\nOS Version： 10.0.18362.1\r\nI don't kown what goes wrong.\r\n"},{"Id":"10648434754","Type":"PullRequestEvent","CreatedAt":"2019-10-17T01:34:43","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27222","RelatedDescription":"Merged pull request \"Replace gtLclVar. with AsLclVar()->\" (#27222) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10648430760","Type":"PullRequestEvent","CreatedAt":"2019-10-17T01:33:40","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27219","RelatedDescription":"Merged pull request \"Replace gtLngCon. with AsLngCon()->\" (#27219) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10648401042","Type":"PullRequestEvent","CreatedAt":"2019-10-17T01:25:59","Actor":"josalem","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27250","RelatedDescription":"Opened pull request \"Fix unique ETW events for GC Type logging to also be sent to EventPipe\" (#27250) at dotnet/coreclr","RelatedBody":"There were 3 event types in the ETW GC Type Logging infrastructure that appear to be different from the rest in how they fire their events.  They don't use the generated wrapper functions and instead directly call the platform specific generated functions inside `ifdef` blocks.  As a result, it looks like they slipped through the cracks when EventPipe was added.  \r\n\r\nThere may be a more generic solution to this that will prevent this from happening again, but this is meant to be a targeted fix so that it can be paired with #26270 and ported to 3.1 in order to enable GCDump collection via EventPipe.\r\n\r\nWithout this fix, GCDumps generated by EventPipe will not contain static or COM based roots.\r\n\r\nCC - @tommcdon "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10649087553","Type":"PullRequestEvent","CreatedAt":"2019-10-17T04:13:52","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12869","RelatedDescription":"Merged pull request \"Merge release/3.1.1xx to master\" (#12869) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10649038590","Type":"IssuesEvent","CreatedAt":"2019-10-17T04:01:07","Actor":"brianary","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/12910","RelatedDescription":"Opened issue \"Can't find any way to set version\" (#12910) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Add `<VersionPrefix>1.0.0</VersionPrefix>` to **netcoreapp3.0** fsproj file\r\n2. `dotnet build Project.fsproj --version-suffix 1` (as [documented](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build \"--version-suffix <VERSION_SUFFIX>\"))\r\n3. `Get-ChildItem -Recurse -Filter Project.dll |Foreach-Object VersionInfo`\r\n\r\n### or\r\n\r\n1. Add `<Version>1.0.0</Version>`\r\n2. `dotnet build Project.fsproj`\r\n3. `Get-ChildItem -Recurse -Filter Project.dll |Foreach-Object VersionInfo`\r\n\r\n### or\r\n\r\n1. `dotnet build Project.fsproj /p:Version=1.0.0`\r\n2. `Get-ChildItem -Recurse -Filter Project.dll |Foreach-Object VersionInfo`\r\n\r\n## Expected  behavior\r\n\r\n```text\r\nProductVersion   FileVersion      FileName\r\n--------------   -----------      --------\r\n1.0.0                             ...\\bin\\Debug\\netcoreapp3.0\\Project.dll\r\n1.0.0                             ...\\obj\\Debug\\netcoreapp3.0\\Project.dll\r\n```\r\n\r\n## Actual behavior\r\n\r\n```text\r\nProductVersion   FileVersion      FileName\r\n--------------   -----------      --------\r\n                                  ...\\bin\\Debug\\netcoreapp3.0\\Project.dll\r\n                                  ...\\obj\\Debug\\netcoreapp3.0\\Project.dll\r\n```\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"10648995602","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:50:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12909","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12909) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.15\r\n- **Date Produced**: 10/17/2019 2:04 AM\r\n- **Commit**: 5cf43118651b9b8ab3d7e61134a1c0e14ba75e27\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19516.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19516.11 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10648849269","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:15:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12909","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12909) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.15\r\n- **Date Produced**: 10/17/2019 2:04 AM\r\n- **Commit**: 5cf43118651b9b8ab3d7e61134a1c0e14ba75e27\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19516.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19516.11 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10648604184","Type":"PullRequestEvent","CreatedAt":"2019-10-17T02:17:34","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/12473","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/core-setup\" (#12473) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190902.8\r\n- **Date Produced**: 9/3/2019 4:10 AM\r\n- **Commit**: 9e9aaf47b6684ef37bd1a35d088aeed275c8dfc3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19452.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19452.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19452.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19452.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19452.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10648592926","Type":"PullRequestEvent","CreatedAt":"2019-10-17T02:14:56","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12897","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to release/2.2.4xx\" (#12897) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10648260649","Type":"PullRequestEvent","CreatedAt":"2019-10-17T00:50:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12908","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12908) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191016.9\r\n- **Date Produced**: 10/16/2019 11:20 PM\r\n- **Commit**: 5ceb94f3fe9462afc2e730e94d0a2fb59b8aaae3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19516.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10642856385","Type":"PullRequestEvent","CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1613) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10642775404","Type":"PullRequestEvent","CreatedAt":"2019-10-16T12:22:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1613) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10636953207","Type":"PullRequestEvent","CreatedAt":"2019-10-15T19:33:31","Actor":"crummel","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Opened pull request \"Source-build improvements.\" (#1612) at dotnet/standard","RelatedBody":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?"},{"Id":"10633383163","Type":"PullRequestEvent","CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1611) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10633303652","Type":"PullRequestEvent","CreatedAt":"2019-10-15T12:20:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1611) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10633161357","Type":"PullRequestEvent","CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1610) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191015.1\r\n- **Date Produced**: 10/15/2019 9:05 AM\r\n- **Commit**: a093b5b2bef24499239a2e9b4114db01fa19e446\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19515.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10649186027","Type":"PullRequestEvent","CreatedAt":"2019-10-17T04:39:15","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41845","RelatedDescription":"Opened pull request \"Use Sse2 instrinsics to make NeedsEscaping check faster for large JSON strings\" (#41845) at dotnet/corefx","RelatedBody":"Here's the whole analysis and experimentation of different alternatives with benchmark results: https://gist.github.com/ahsonkhan/c566f5e7d65c1fde5a83a67be290c4ee\r\n\r\nIgnore the uap target changes (they were borrowed from https://github.com/dotnet/corefx/pull/41759) since it was happening anyway and I am not yet sure if its worth the effort to create different constants for uap (since intrinsics aren't built for that configuration).\r\n\r\nHere's the conclusion and next steps.\r\n\r\n## Conclusions:\r\nHere's a summary of the results when the user doesn't customize the encoder via the `JsonSerializerOptions` or `JsonWriterOptions` (i.e. uses the default encoder behavior).\r\n1) For end-to-end scenario (such as serializing commonly found objects/payloads), there is a 10-20% improvement.\r\n2) Writing relatively large JSON strings using the writer got ~30% faster (i.e. greater than 16 characters).\r\n3) Checking for escaping strings that are less than 8 characters is ~20-50% slower, but larger strings (i.e. greater than 16 character) got 2-3x faster.\r\n4) If a character is found that needs escaping within the first 8 characters, there is a 20-90% regression. Otherwise, there is a a 2-3x performance improvement depending on where the first character that needs escaping is found (say index greater than 16).\r\n\r\n## Next Steps:\r\n~1) Add similar support and tests for UTF-8 bytes, not just UTF-16 characters.~\r\n2) Evaluate if the trade-off is worth it for property names which tend to be small (2-8 characters), compared to values.\r\n3) Consider optimizing the commonly used built-in `JavascriptEncoder` statics using similar techniques.\r\n4) Apply non-Sse2 based optimizations where Sse2 isn't supported rather than processing one character at a time.\r\n5) Rather than returning the first index to escape, return the whole mask and escape all characters that need to be escaped at once (within the block of 8) and return back to the \"fast\" non-escaping path, rather than writing one character at a time whenever a single character is found that needs escaping.\r\n\r\ncc @steveharter, @tannergooding, @GrabYourPitchforks "},{"Id":"10648727946","Type":"PullRequestEvent","CreatedAt":"2019-10-17T02:47:01","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41842","RelatedDescription":"Merged pull request \"Store Description value of ConfigurationProperty\" (#41842) at dotnet/corefx","RelatedBody":"It seems that description parameter isn't used:\r\nhttps://github.com/dotnet/corefx/blob/58a4d24eb808936f7dc61e68265e968291470b42/src/System.Configuration.ConfigurationManager/src/System/Configuration/ConfigurationProperty.cs#L56-L67\r\n\r\nbut according to [docs](https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationproperty.-ctor?view=netframework-4.8#System_Configuration_ConfigurationProperty__ctor_System_String_System_Type_System_Object_System_ComponentModel_TypeConverter_System_Configuration_ConfigurationValidatorBase_System_Configuration_ConfigurationPropertyOptions_System_String_) it should\r\n\r\nPlease review and let me know if code authors intentionally don't use it or it is a bug\r\nThank you in advance"},{"Id":"10648608350","Type":"PullRequestEvent","CreatedAt":"2019-10-17T02:18:34","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41820","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41820) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191016.2\r\n- **Date Produced**: 10/16/2019 8:55 PM\r\n- **Commit**: 617091aa904c74fe8a42cebf7fcb56677c60c079\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview2.19516.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview2.19516.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview2.19516.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n"},{"Id":"10648300557","Type":"PullRequestEvent","CreatedAt":"2019-10-17T01:00:28","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41844","RelatedDescription":"Opened pull request \"Add back TraceListener handling for Callstack/LogicalOperationStack\" (#41844) at dotnet/corefx","RelatedBody":"For .NET Core 2.0, PR https://github.com/dotnet/corefx/pull/13320 added back TraceOptions.Callstack and TraceOptions.LogicalOperationStack, but it didn't add back the code in TraceListener.WriteFooter that respects these options.    Then PR https://github.com/dotnet/corefx/pull/18185 added back checking for TraceOptions.LogicalOperationStack in DelimitedListTraceListener.WriteFooter, but for some reason didn't do so for TraceOptions.Callstack.\r\n\r\nThis adds back the handling for both, copying the product code from reference source.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/41837\r\ncc: @safern"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10649084020","Type":"IssuesEvent","CreatedAt":"2019-10-17T04:12:55","Actor":"jwooley","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39343","RelatedDescription":"Opened issue \"Syntax Visualizer - View Directed Graph causes VS 2019 (16.3) to crash\" (#39343) at dotnet/roslyn","RelatedBody":"**Version Used**:  16.3.4\r\n\r\n**Steps to Reproduce**:\r\nInstall the Visual Studio Extension Development workload\r\nAdd components for \"Code Map\" , \"DGML Editor\", and \".NET Compiler Platform SDK\"\r\nOpen a C# Code file.\r\nOpen View -> Other Window -> Syntax Visualizer\r\nSelect a variable declaration statement in the C# code.\r\nRight click on the node in the visualizer and select View Directed Syntax Graph. \r\nVisual Studio crashes and reboots.\r\n\r\nFrom the event log:\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.Resources.MissingManifestResourceException\r\n   at System.Resources.ManifestBasedResourceGroveler.HandleResourceStreamMissing(System.String)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean, System.Threading.StackCrawlMark ByRef)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean, System.Threading.StackCrawlMark ByRef)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.My.Resources.Resources.get_SyntaxNodeLabel()\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlHelper.GetLabelForNode(Microsoft.CodeAnalysis.SyntaxNode)\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlHelper.ProcessNode(Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlOptions, Microsoft.CodeAnalysis.SyntaxNode, System.Xml.Linq.XElement, Int32 ByRef, System.Xml.Linq.XElement, System.Xml.Linq.XElement, System.Collections.Generic.HashSet`1<System.String>)\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlHelper.ToDgml(Microsoft.CodeAnalysis.SyntaxNode, Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlOptions)\r\n   at Roslyn.SyntaxVisualizer.Extension.SyntaxVisualizerContainer.DisplaySyntaxNodeDgml(Microsoft.CodeAnalysis.SyntaxNode)\r\n   at Roslyn.SyntaxVisualizer.Control.SyntaxVisualizerControl.DirectedSyntaxGraphMenuItem_Click(System.Object, System.Windows.RoutedEventArgs)\r\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(System.Object, System.Windows.RoutedEventArgs)\r\n   at System.Windows.EventRoute.InvokeHandlersImpl(System.Object, System.Windows.RoutedEventArgs, Boolean)\r\n   at System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject, System.Windows.RoutedEventArgs)\r\n   at System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\r\n   at System.Windows.Controls.MenuItem.InvokeClickAfterRender(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(System.Object)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\r\n\r\n\r\n**Expected Behavior**:\r\nVisualizer should appear\r\n\r\n**Actual Behavior**:\r\nVS Reboots"},{"Id":"10648971689","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:44:23","Actor":"snhardin","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39342","RelatedDescription":"Opened pull request \"Fix var being treated as unknown type\" (#39342) at dotnet/roslyn","RelatedBody":"Closes #38947\r\n\r\nStill working out a couple things on this one. Advice is very much appreciated, especially on some of the specifics on how you guys want this implemented, but I think I got the general idea down."},{"Id":"10648646543","Type":"PullRequestEvent","CreatedAt":"2019-10-17T02:27:44","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39341","RelatedDescription":"Opened pull request \"EnC: Compare document content before performing IO while stepping\" (#39341) at dotnet/roslyn","RelatedBody":"Avoid IO during stepping unless a source file are modified.\r\n\r\nAddresses perf regression observed in RPS [958005](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/958005) and PerfWatson [979191](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/979191).\r\n\r\n\r\n"},{"Id":"10648554267","Type":"PullRequestEvent","CreatedAt":"2019-10-17T02:05:26","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38147","RelatedDescription":"Merged pull request \"Ensure synthesized closure method is static for static local function\" (#38147) at dotnet/roslyn","RelatedBody":"Fixes #38143"},{"Id":"10648554247","Type":"IssuesEvent","CreatedAt":"2019-10-17T02:05:26","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/38143","RelatedDescription":"Closed issue \"`static` Local Functions are not being emitted as static\" (#38143) at dotnet/roslyn","RelatedBody":"```cs\r\nusing System;\r\npublic class C {\r\n\tstatic void M()\r\n\t{\r\n  \t\tstatic void localFunction() { }\r\n        Action a = localFunction;\r\n\t}\r\n}\r\n```\r\nCapturing the local function in an `Action` is causing it to be emitted as an instance function on an inner class, instead of being a static method.\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDZICYgNQA+AAgEwCMAsAFBEDMABKfQML0De1AkEWQGyMAWegFkAFAEouHKvXqdufQfQwB7AMYQMRAKww0KgHYT29AL7VZlyzxL0I9ALzL1mnXsMBuLuaqmgA=="},{"Id":"10648137838","Type":"IssuesEvent","CreatedAt":"2019-10-17T00:18:54","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39340","RelatedDescription":"Opened issue \"VS 16.4.0 Preview 1.0 - AD0001 DisposeObjectsBeforeLosingScopeDiagnosticAnalyzer NullReferenceException\" (#39340) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/749988/vs-1640-preview-10-ad0001-disposeobjectsbeforelosi.html)._\n\n---\nAD0001 Analyzer 'Microsoft.CodeAnalysis.DisposeAnalysis.DisposeObjectsBeforeLosingScopeDiagnosticAnalyzer' threw an exception of type 'System.NullReferenceException' with message 'Object reference not set to an instance of an object.'.\n\n```\nSystem.NullReferenceException: Object reference not set to an instance of an object.\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.AnalysisEntityFactory.TryCreateForTupleElements(ITupleOperation tupleOperation, ImmutableArray`1&amp; elementEntities)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.VisitTuple(ITupleOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.PointsToAnalysis.PointsToAnalysis.PointsToDataFlowOperationVisitor.VisitTuple(ITupleOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.Operations.BaseTupleOperation.Accept[TArgument,TResult](OperationVisitor`2 visitor, TArgument argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.VisitCore(IOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.Visit(IOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.VisitConversion(IConversionOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.PointsToAnalysis.PointsToAnalysis.PointsToDataFlowOperationVisitor.VisitConversion(IConversionOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.Operations.BaseConversionOperation.Accept[TArgument,TResult](OperationVisitor`2 visitor, TArgument argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.VisitCore(IOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.Visit(IOperation operation, Object argument)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowOperationVisitor`4.FlowBranch(BasicBlock fromBlock, BranchWithInfo branch, TAnalysisData input)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.PointsToAnalysis.PointsToAnalysis.PointsToDataFlowOperationVisitor.FlowBranch(BasicBlock fromBlock, BranchWithInfo branch, PointsToAnalysisData input)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowAnalysis`5.RunCore(ControlFlowGraph cfg, SortedSet`1 worklist, SortedSet`1 pendingBlocksNeedingAtLeastOnePass, TAnalysisData initialAnalysisDataOpt, DataFlowAnalysisResultBuilder`1 resultBuilder, PooledHashSet`1 uniqueSuccessors, PooledDictionary`2 finallyBlockSuccessorsMap, PooledDictionary`2 catchBlockInputDataMap, PooledDictionary`2 inputDataFromInfeasibleBranchesMap, PooledDictionary`2 blockToUniqueInputFlowMap, PooledDictionary`2 loopRangeMap, Boolean exceptionPathsAnalysisPostPass)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowAnalysis`5.Run(TAnalysisContext analysisContext)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowAnalysis`5.&lt;&gt;c__DisplayClass8_0.&lt;TryGetOrComputeResultCore&gt;b__0(TAnalysisContext _)\n   at Analyzer.Utilities.SingleThreadedConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DataFlowAnalysis`5.TryGetOrComputeResultCore(TAnalysisContext analysisContext, Boolean cacheResult)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.PointsToAnalysis.PointsToAnalysis.TryGetOrComputeResultForAnalysisContext(PointsToAnalysisContext analysisContext)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.PointsToAnalysis.PointsToAnalysis.TryGetOrComputeResult(ControlFlowGraph cfg, ISymbol owningSymbol, AnalyzerOptions analyzerOptions, WellKnownTypeProvider wellKnownTypeProvider, DataFlowAnalysisResult`2&amp; copyAnalysisResultOpt, InterproceduralAnalysisConfiguration interproceduralAnalysisConfig, InterproceduralAnalysisPredicate interproceduralAnalysisPredicateOpt, Boolean pessimisticAnalysis, Boolean performCopyAnalysis, Boolean exceptionPathsAnalysis)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DisposeAnalysis.DisposeAnalysis.TryGetOrComputeResult(ControlFlowGraph cfg, ISymbol owningSymbol, AnalyzerOptions analyzerOptions, WellKnownTypeProvider wellKnownTypeProvider, InterproceduralAnalysisConfiguration interproceduralAnalysisConfig, InterproceduralAnalysisPredicate interproceduralAnalysisPredicateOpt, ImmutableHashSet`1 disposeOwnershipTransferLikelyTypes, Boolean disposeOwnershipTransferAtConstructor, Boolean disposeOwnershipTransferAtMethodCall, Boolean trackInstanceFields, Boolean exceptionPathsAnalysis, Boolean performCopyAnalysis, PointsToAnalysisResult&amp; pointsToAnalysisResult)\n   at Microsoft.CodeAnalysis.FlowAnalysis.DataFlow.DisposeAnalysis.DisposeAnalysis.TryGetOrComputeResult(ControlFlowGraph cfg, ISymbol owningSymbol, WellKnownTypeProvider wellKnownTypeProvider, AnalyzerOptions analyzerOptions, DiagnosticDescriptor rule, ImmutableHashSet`1 disposeOwnershipTransferLikelyTypes, Boolean trackInstanceFields, Boolean exceptionPathsAnalysis, CancellationToken cancellationToken, PointsToAnalysisResult&amp; pointsToAnalysisResult, InterproceduralAnalysisKind interproceduralAnalysisKind, Boolean performCopyAnalysisIfNotUserConfigured, InterproceduralAnalysisPredicate interproceduralAnalysisPredicateOpt, Boolean defaultDisposeOwnershipTransferAtConstructor, Boolean defaultDisposeOwnershipTransferAtMethodCall)\n   at Microsoft.CodeAnalysis.DisposeAnalysis.DisposeAnalysisHelper.TryGetOrComputeResult(OperationBlockAnalysisContext context, IMethodSymbol containingMethod, DiagnosticDescriptor rule, InterproceduralAnalysisKind interproceduralAnalysisKind, Boolean trackInstanceFields, DisposeAnalysisResult&amp; disposeAnalysisResult, PointsToAnalysisResult&amp; pointsToAnalysisResult, InterproceduralAnalysisPredicate interproceduralAnalysisPredicateOpt)\n   at Microsoft.CodeAnalysis.DisposeAnalysis.DisposeObjectsBeforeLosingScopeDiagnosticAnalyzer.PerformFlowAnalysisOnOperationBlock(OperationBlockAnalysisContext operationBlockContext, DisposeAnalysisHelper disposeAnalysisHelper, ConcurrentDictionary`2 reportedLocations, IMethodSymbol containingMethod)\n   at Microsoft.CodeAnalysis.DisposeAnalysis.DisposeObjectsBeforeLosingScopeDiagnosticAnalyzer.AnalyzeOperationBlock(OperationBlockAnalysisContext operationBlockContext, DisposeAnalysisHelper disposeAnalysisHelper, ConcurrentDictionary`2 reportedLocations)\n   at Microsoft.CodeAnalysis.DisposeAnalysis.DisposeObjectsBeforeLosingScopeDiagnosticAnalyzer.&lt;&gt;c__DisplayClass4_0.&lt;InitializeWorker&gt;b__1(OperationBlockAnalysisContext operationBlockContext)\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.&lt;&gt;c__58`2.&lt;ExecuteBlockActions&gt;b__58_1(ValueTuple`2 data)\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteAndCatchIfThrows_NoLock[TArg](DiagnosticAnalyzer analyzer, Action`1 analyze, TArg argument, Nullable`1 info)\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/26/2019, 10:49 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"10648076010","Type":"PullRequestEvent","CreatedAt":"2019-10-17T00:03:55","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39339","RelatedDescription":"Opened pull request \"Merge master to features/static-lambdas\" (#39339) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10648075490","Type":"PullRequestEvent","CreatedAt":"2019-10-17T00:03:47","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39338","RelatedDescription":"Opened pull request \"Merge master to features/local-function-attributes\" (#39338) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10648074961","Type":"PullRequestEvent","CreatedAt":"2019-10-17T00:03:40","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39337","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#39337) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10627984673","Type":"IssuesEvent","CreatedAt":"2019-10-14T20:24:49","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824) at dotnet/corert","RelatedBody":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n"},{"Id":"10625366540","Type":"IssuesEvent","CreatedAt":"2019-10-14T14:21:45","Actor":"imback82","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Opened issue \"Debugger.Launch() on macOS\" (#7824) at dotnet/corert","RelatedBody":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n"},{"Id":"10616883770","Type":"PullRequestEvent","CreatedAt":"2019-10-12T15:06:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7823) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo"},{"Id":"10614032565","Type":"PullRequestEvent","CreatedAt":"2019-10-11T20:37:56","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7823) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10608939903","Type":"PullRequestEvent","CreatedAt":"2019-10-11T08:45:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7822) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"10607447761","Type":"PullRequestEvent","CreatedAt":"2019-10-11T03:49:41","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7822) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10592232499","Type":"PullRequestEvent","CreatedAt":"2019-10-09T12:42:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Merged pull request \"Delete unused method\" (#7821) at dotnet/corert","RelatedBody":"Supplements #7819."},{"Id":"10590790043","Type":"PullRequestEvent","CreatedAt":"2019-10-09T09:29:22","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Opened pull request \"Delete unused method\" (#7821) at dotnet/corert","RelatedBody":"Supplements #7819."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10649131486","Type":"PullRequestEvent","CreatedAt":"2019-10-17T04:25:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3758","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3758) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.12\r\n- **Date Produced**: 10/17/2019 12:27 AM\r\n- **Commit**: 32085cbc728e1016c9d6a7bc105845f0f9eb6b47\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n"},{"Id":"10648849121","Type":"PullRequestEvent","CreatedAt":"2019-10-17T03:15:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3761","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3761) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.15\r\n- **Date Produced**: 10/17/2019 2:04 AM\r\n- **Commit**: 5cf43118651b9b8ab3d7e61134a1c0e14ba75e27\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10648448410","Type":"PullRequestEvent","CreatedAt":"2019-10-17T01:38:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3757","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3757) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 11:22 AM\r\n- **Commit**: f8aac40612d167c5beff554f569897177e786d3a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.1\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10648384699","Type":"IssuesEvent","CreatedAt":"2019-10-17T01:21:45","Actor":"syndicatedshannon","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3760","RelatedDescription":"Opened issue \"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade\" (#3760) at dotnet/sdk","RelatedBody":"Downgrade TargetFramework from netcoreapp3.0 to netcoreapp2.2 causes the following upon build:\r\n\r\n> The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nClean/Rebuild does not resolve. Deleting bin/obj folders does resolve. This causes unexpected failures when switching branches. Note the project also depends upon .NET Standard 2.1/2.0 projects, which have coincident upgrade/downgrades. However, cleaning those projects did not resolve.\r\n\r\nI can repro and try deleting something specific if it will help pin the problem down further."},{"Id":"10648230434","Type":"PullRequestEvent","CreatedAt":"2019-10-17T00:42:52","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Merged pull request \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"508147087","IsPullRequest":true,"CreatedAt":"2019-10-17T05:07:47","Actor":"jashook","Number":"27244","RawContent":null,"Title":"Use armarch queue for internal builds","State":"closed","Body":"This is incremental work to remove the ubuntu.1604.arm32 queue.","Url":"https://github.com/dotnet/coreclr/pull/27244","RelatedDescription":"Closed or merged PR \"Use armarch queue for internal builds\" (#27244)"},{"Id":"508071323","IsPullRequest":true,"CreatedAt":"2019-10-17T03:44:56","Actor":"echesakovMSFT","Number":"27235","RawContent":null,"Title":"Use aligned memory access in JIT_StackProbe","State":"closed","Body":"As Jan suggested in https://github.com/dotnet/coreclr/pull/27184#discussion_r334700866 I reimplemented `JIT_StackProbe` so the helper uses only aligned memory access to probe the stack. It turns out that the new implementations on win-x86, linux-x86 and Linux-x64 require one instruction less.\r\n\r\n@BruceForstall @janvorli PTAL\r\ncc @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/27235","RelatedDescription":"Closed or merged PR \"Use aligned memory access in JIT_StackProbe\" (#27235)"},{"Id":"508125732","IsPullRequest":true,"CreatedAt":"2019-10-17T03:44:31","Actor":"jkotas","Number":"27240","RawContent":null,"Title":"Delete ENABLE_WINRT define","State":"closed","Body":".NET Native specific code not needed anymore","Url":"https://github.com/dotnet/coreclr/pull/27240","RelatedDescription":"Closed or merged PR \"Delete ENABLE_WINRT define\" (#27240)"},{"Id":"508152809","IsPullRequest":true,"CreatedAt":"2019-10-17T03:43:10","Actor":"janvorli","Number":"27245","RawContent":null,"Title":"Fix field offset computation in crossgen2","State":"closed","Body":"The logic for determining when to align base offset was not matching the\r\nlogic that is used in the coreclr runtime. This resulted in assert\r\nfailure: `m_alignpad == 0` at runtime in 4 CoreMangLib tests.\r\n\r\nI've actually fixed the same issue in old crossgen some time ago in #25029, so \r\nit was easy to figure out where the issue came from. The issue causes a memory\r\ncorruption after the end of an object, which later on results in the m_alignpad of\r\nan object that's allocated consequently being zero.\r\n\r\nThe fix is to make the logic in `AlignBaseOffsetIfNecessary` match the one in `MethodTableBuilder::NeedsAlignedBaseOffset`.","Url":"https://github.com/dotnet/coreclr/pull/27245","RelatedDescription":"Closed or merged PR \"Fix field offset computation in crossgen2\" (#27245)"},{"Id":"508206051","IsPullRequest":true,"CreatedAt":"2019-10-17T03:10:26","Actor":"franksinankaya","Number":"27257","RawContent":null,"Title":"Replace gtIndex. with AsIndex()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27257","RelatedDescription":"Open PR \"Replace gtIndex. with AsIndex()->\" (#27257)"},{"Id":"508205656","IsPullRequest":true,"CreatedAt":"2019-10-17T03:09:06","Actor":"franksinankaya","Number":"27256","RawContent":null,"Title":"Replace gtAddrMode. with AsAddrMode()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27256","RelatedDescription":"Open PR \"Replace gtAddrMode. with AsAddrMode()->\" (#27256)"},{"Id":"508205266","IsPullRequest":true,"CreatedAt":"2019-10-17T03:07:50","Actor":"franksinankaya","Number":"27255","RawContent":null,"Title":"Replace gtIntrinsic. with AsIntrinsic()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27255","RelatedDescription":"Open PR \"Replace gtIntrinsic. with AsIntrinsic()->\" (#27255)"},{"Id":"508203981","IsPullRequest":true,"CreatedAt":"2019-10-17T03:03:31","Actor":"franksinankaya","Number":"27254","RawContent":null,"Title":"Replace gtArgPlace. with AsArgPlace()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27254","RelatedDescription":"Open PR \"Replace gtArgPlace. with AsArgPlace()->\" (#27254)"},{"Id":"508197377","IsPullRequest":false,"CreatedAt":"2019-10-17T02:38:45","Actor":"AriNuer","Number":"27253","RawContent":null,"Title":"Assert failure(PID 984 [0x000003d8], Thread: 3652 [0x0e44]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstress2-jitstressregs:20191016.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=389575)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/3733fe9b-4da4-4ade-ba16-2c3c7ae46670/workitems/System.Reflection.MetadataLoadContext.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=0\r\nset COMPlus_JitStress=2\r\nset COMPlus_JitStressRegs=3\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nSystem.BadImageFormatException : A type specification contained an out of range index for a generic type parameter '-605572008'.\r\n\r\nAssert failure(PID 984 [0x000003d8], Thread: 3652 [0x0e44]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\r\n\r\nCORECLR! `Object::ValidateInner'::`1'::catch$12 + 0x147 (0x00007ffe`21daf43d)\r\nCORECLR! CallSettingFrame + 0x20 (0x00007ffe`21c45210)\r\nCORECLR! _FrameHandler3::CxxCallCatchBlock + 0x15A (0x00007ffe`21c439ba)\r\nNTDLL! RtlCaptureContext + 0x3C3 (0x00007ffe`51c09bd3)\r\nCORECLR! Object::ValidateInner + 0x12E (0x00007ffe`216a317e)\r\nCORECLR! Object::Validate + 0x13A (0x00007ffe`216a300a)\r\nCORECLR! WKS::GCHeap::Promote + 0x9F (0x00007ffe`21af29ef)\r\nCORECLR! TailCallFrame::GcScanRoots + 0x188 (0x00007ffe`2141d838)\r\nCORECLR! GcStackCrawlCallBack + 0x386 (0x00007ffe`219e6616)\r\nCORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ffe`214454ca)\r\n    File: f:\\workspace.4\\_work\\1\\s\\src\\vm\\object.cpp Line: 674\r\n    Image: C:\\dotnetbuild\\work\\3733fe9b-4da4-4ade-ba16-2c3c7ae46670\\Payload\\dotnet.exe\r\n\r\n----- end Wed 10/16/2019  8:54:36.71 ----- exit code -1073740286 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27253","RelatedDescription":"Open issue \"Assert failure(PID 984 [0x000003d8], Thread: 3652 [0x0e44]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\" (#27253)"},{"Id":"508192591","IsPullRequest":false,"CreatedAt":"2019-10-17T02:20:11","Actor":"VincentBu","Number":"27252","RawContent":null,"Title":"Test failed: JIT\\Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.cmd","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191015.2 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=389381&view=logs)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/160a80d4-8632-4dfe-9f89-99e3815072a5/workitems/JIT.Methodical/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nwe can't run this program on our windows rt 8.1.\r\n\r\n**Log:** \r\n```\r\nJIT\\Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.cmd [FAIL]\r\n      \r\n      Assert failure(PID 3684 [0x00000e64], Thread: 14000 [0x36b0]): Consistency check failed: AV in clr at this callstack:\r\n      ------\r\n      <no module>! <no symbol> + 0x0 (0x00000000)\r\n      -----\r\n      .AV on tid=0x36b0 (14000), cxr=0057DE08, exr=0057DFA8\r\n      FAILED: false\r\n      \r\n      <no module>! <no symbol> + 0x0 (0x00000000)\r\n          File: f:\\workspace.4\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7590\r\n          Image: C:\\dotnetbuild\\work\\160a80d4-8632-4dfe-9f89-99e3815072a5\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\160a80d4-8632-4dfe-9f89-99e3815072a5\\Work\\3f016667-3c4f-4918-aef6-b4ede053a75c\\Exec\\JIT\\Methodical\\Reports\\JIT.Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\160a80d4-8632-4dfe-9f89-99e3815072a5\\Payload\\corerun.exe\" _il_dbgdeep_gc.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27252","RelatedDescription":"Open issue \"Test failed: JIT\\Methodical\\tailcall\\_il_dbgdeep_gc\\_il_dbgdeep_gc.cmd\" (#27252)"},{"Id":"508184991","IsPullRequest":false,"CreatedAt":"2019-10-17T01:49:38","Actor":"HexJacaranda","Number":"27251","RawContent":null,"Title":"CoreRun cannot load assembly","State":"open","Body":"After building coreclr, I tried to run some samples on my build in PowerShell but got the exception\r\n“this module was expected to contain an assembly manifest” for console program and \"Entry point\r\nnot found\" for compiled dll.\r\nOS Version： 10.0.18362.1\r\nI don't know what goes wrong.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27251","RelatedDescription":"Open issue \"CoreRun cannot load assembly\" (#27251)"},{"Id":"508179831","IsPullRequest":true,"CreatedAt":"2019-10-17T01:25:59","Actor":"josalem","Number":"27250","RawContent":null,"Title":"Fix unique ETW events for GC Type logging to also be sent to EventPipe","State":"open","Body":"There were 3 event types in the ETW GC Type Logging infrastructure that appear to be different from the rest in how they fire their events.  They don't use the generated wrapper functions and instead directly call the platform specific generated functions inside `ifdef` blocks.  As a result, it looks like they slipped through the cracks when EventPipe was added.  \r\n\r\nThere may be a more generic solution to this that will prevent this from happening again, but this is meant to be a targeted fix so that it can be paired with #26270 and ported to 3.1 in order to enable GCDump collection via EventPipe.\r\n\r\nWithout this fix, GCDumps generated by EventPipe will not contain static or COM based roots.\r\n\r\nCC - @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/27250","RelatedDescription":"Open PR \"Fix unique ETW events for GC Type logging to also be sent to EventPipe\" (#27250)"},{"Id":"508117366","IsPullRequest":true,"CreatedAt":"2019-10-17T00:52:02","Actor":"AaronRobinsonMSFT","Number":"27239","RawContent":null,"Title":"Update Jupiter host interface method names to match official documentation","State":"closed","Body":"Update Jupiter host interface method names defined in .NET Core to match officially documented method names. The interface names are still different, but all function names now match.\r\n\r\nSee https://docs.microsoft.com/windows/win32/api/windows.ui.xaml.hosting.referencetracker\r\n\r\n/cc @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/pull/27239","RelatedDescription":"Closed or merged PR \"Update Jupiter host interface method names to match official documentation\" (#27239)"},{"Id":"508165305","IsPullRequest":true,"CreatedAt":"2019-10-17T00:23:35","Actor":"AndyAyersMS","Number":"27249","RawContent":null,"Title":"JIT: describe requested and actual opt levels more accurately","State":"open","Body":"Note in jit dump headers and in `COMPlus_DumpJittedMethods` traces when the jit\r\nchanged the optimization level that the VM requested.\r\n\r\nAlso remove the FCOMI handling in the jit, x87 is not longer a thing. Needs to\r\nstay in the options for now though.\r\n\r\nFinally, reorder the `Options` struct fields to avoid gratiuitous padding.","Url":"https://github.com/dotnet/coreclr/pull/27249","RelatedDescription":"Open PR \"JIT: describe requested and actual opt levels more accurately\" (#27249)"},{"Id":"508162547","IsPullRequest":true,"CreatedAt":"2019-10-17T00:11:58","Actor":"sandreenko","Number":"27248","RawContent":null,"Title":"Fix debug check in `CheckAndMoveRMWLastUse`.","State":"open","Body":"There were 2 warnings from PVS-Studio:\r\n```\r\nV547 Expression 'toTree != nullptr' is always true. lsra.h 1581\r\nV501 There are identical sub-expressions 'toTree->AsLclVarCommon()->GetLclNum()' to the left and to the right of the '!=' operator. lsra.h 1574\r\n```\r\nso the second was a typo from https://github.com/dotnet/coreclr/pull/17431, the first was just an unnecessary check. \r\n\r\n\r\nAlso, move the function under `_TARGET_X86_` while around.","Url":"https://github.com/dotnet/coreclr/pull/27248","RelatedDescription":"Open PR \"Fix debug check in `CheckAndMoveRMWLastUse`.\" (#27248)"},{"Id":"508161459","IsPullRequest":false,"CreatedAt":"2019-10-17T00:07:45","Actor":"jkotas","Number":"27247","RawContent":null,"Title":"AF: Popping a frame out of order","State":"open","Body":"Repro:\r\n\r\n1. Create .exe that is referencing missing assembly in the Main method\r\n2. Run using corerun on Windows checked x64 (compiled using latest VS 2019 dogfood?)\r\n\r\nResult:\r\n\r\n```\r\nAssert failure(PID 36812 [0x00008fcc], Thread: 26032 [0x65b0]): pThread->GetFrame() == this && \"Popping a frame out of order ?\"\r\n\r\nCORECLR! Frame::Pop + 0x11E (0x00007ffd`89988b96)\r\nCORECLR! GCFrame::Pop + 0x1B (0x00007ffd`89988d93)\r\nCORECLR! GCFrame::~GCFrame + 0x132 (0x00007ffd`89985ac2)\r\nCORECLR! CallSettingFrameEncoded + 0x2A (0x00007ffd`89fbf4ca)\r\nCORECLR! _FrameHandler4::FrameUnwindToState + 0x2CC (0x00007ffd`89fbdddc)\r\nCORECLR! _InternalCxxFrameHandler<__FrameHandler4> + 0x259 (0x00007ffd`89fbc2f9)\r\nCORECLR! _CxxFrameHandler4 + 0xFB (0x00007ffd`89fb6bab)\r\nNTDLL! chkstk + 0x19F (0x00007ffd`e9b6127f)\r\nNTDLL! RtlUnwindEx + 0x522 (0x00007ffd`e9adda32)\r\nCORECLR! _FrameHandler4::UnwindNestedFrames + 0x1B5 (0x00007ffd`89fb6735)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27247","RelatedDescription":"Open issue \"AF: Popping a frame out of order\" (#27247)"},{"Id":"508154480","IsPullRequest":true,"CreatedAt":"2019-10-16T23:41:31","Actor":"sdmaclea","Number":"27246","RawContent":null,"Title":"WIP Fix step with stackalloc","State":"open","Body":"Generalize handling of stackalloc.\r\n\r\nFixes #14926\r\nThis is a safer alternative to #26688\r\n\r\n/cc @dotnet/dotnet-diag ","Url":"https://github.com/dotnet/coreclr/pull/27246","RelatedDescription":"Open PR \"WIP Fix step with stackalloc\" (#27246)"},{"Id":"508131566","IsPullRequest":true,"CreatedAt":"2019-10-16T22:25:51","Actor":"sandreenko","Number":"27243","RawContent":null,"Title":"[WIP] Fix LookupPromotedStructDeathVars function.","State":"open","Body":"That started with PVS-Studio (my Friday learning day activity) warning:\r\n`V763 Parameter 'bits' is always rewritten in function body before being used. compiler.h 7394`\r\n\r\nI have checked that it was a real error that could end up in `nullptr` dereferencing in two places, the one was dead code, so I deleted it (the second commit).\r\n\r\nI was not able to hit the second case locally, so let's see if ci can do that.\r\n\r\n52b1192431: add a description of the issue, link https://github.com/dotnet/coreclr/pull/19753\r\n\r\nb57a16409f: Delete unused functions that were referencing `LookupPromotedStructDeathVars`.\r\n\r\nd39c9cc00b: abuse ci to find a test that could expose the issue.\r\n\r\nPTAL @CarolEidt @AndyAyersMS, cc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27243","RelatedDescription":"Open PR \"[WIP] Fix LookupPromotedStructDeathVars function.\" (#27243)"},{"Id":"508131317","IsPullRequest":true,"CreatedAt":"2019-10-16T22:25:08","Actor":"kouvel","Number":"27242","RawContent":null,"Title":"Protect against a rare invalid lock acquision attempt during etw processing during abrupt shutdown","State":"open","Body":"Targeted and partial fix for https://github.com/dotnet/coreclr/issues/27129\r\n- This is not a generic fix for the issue above, it is only a very targeted fix for an issue seen (a new issue introduced in 3.x). For a generic fix and more details, see the fix in 5.0: https://github.com/dotnet/coreclr/pull/27238.\r\n- This change avoids taking a lock during process detach - a point in time when all other threads have already been abruptly shut down by the OS and locks may have been orphaned.\r\n- The issue leads to a hang during shutdown when ETW tracing is enabled and the .NET process being traced begins the shutdown sequence at an unfortunate time - this is a probably rare timing issue. It would take the shutdown sequence to begin at just the point when a thread holds a particular lock and is terminated by the OS while holding the lock, then the OS sends the process detach event to the CLR, work during which then tries to acquire the lock and cannot because it is orphaned.\r\n- The generic fix has broader consequences and is unlikely to be a reasonable change to make so late in the cycle, such a change needs some bake time and feedback. Hence this targeted fix for 3.x.","Url":"https://github.com/dotnet/coreclr/pull/27242","RelatedDescription":"Open PR \"Protect against a rare invalid lock acquision attempt during etw processing during abrupt shutdown\" (#27242)"},{"Id":"508130208","IsPullRequest":true,"CreatedAt":"2019-10-16T22:22:11","Actor":"kouvel","Number":"27241","RawContent":null,"Title":"Protect against a rare invalid lock acquision attempt during etw processing during abrupt shutdown","State":"open","Body":"Targeted and partial fix for https://github.com/dotnet/coreclr/issues/27129\r\n- This is not a generic fix for the issue above, it is only a very targeted fix for an issue seen (a new issue introduced in 3.x). For a generic fix and more details, see the fix in 5.0: https://github.com/dotnet/coreclr/pull/27238.\r\n- This change avoids taking a lock during process detach - a point in time when all other threads have already been abruptly shut down by the OS and locks may have been orphaned.\r\n- The issue leads to a hang during shutdown when ETW tracing is enabled and the .NET process being traced begins the shutdown sequence at an unfortunate time - this is a probably rare timing issue. It would take the shutdown sequence to begin at just the point when a thread holds a particular lock and is terminated by the OS while holding the lock, then the OS sends the process detach event to the CLR, work during which then tries to acquire the lock and cannot because it is orphaned.\r\n- The generic fix has broader consequences and is unlikely to be a reasonable change to make so late in the cycle, such a change needs some bake time and feedback. Hence this targeted fix for 3.x.","Url":"https://github.com/dotnet/coreclr/pull/27241","RelatedDescription":"Open PR \"Protect against a rare invalid lock acquision attempt during etw processing during abrupt shutdown\" (#27241)"},{"Id":"508116225","IsPullRequest":true,"CreatedAt":"2019-10-16T21:45:30","Actor":"kouvel","Number":"27238","RawContent":null,"Title":"Process/send etw rundown events only during graceful shutdown and not during process detach (a form of abrupt shutdown)","State":"open","Body":"Longer-term fix for https://github.com/dotnet/coreclr/issues/27129:\r\n- Etw rundown events sent during process shutdown are currently (and have for a long time) been sent during process detach. By that time, all other threads have been abruptly terminated by the OS, and as a result the state of the system is fundamentally unpredictable.\r\n- In this particular case, locks have been orphaned by threads that have been abruptly terminated, so taking locks is not feasible during processing of rundown events, and if acquiring locks were to be avoided based on such knowledge (not recommended, this would get messy), we'd have to resort to providing information that would not accurately reflect the state, in the events\r\n- I consider any situation where process detach occurs before an opportunity to handle graceful shutdown (that is, the runtime is unaware that a shutdown is about to happen and does not have an opportunity to handle shutdown prior to process detach (before the OS already shuts some things down)), then that is abrupt shutdown and in that scenario all bets are off - in the case of this change, etw rundown events would not be sent\r\n- This change has the following effects:\r\n  - Graceful shutdown such as returning from `Main` or `Environment.Exit()` will send rundown events very slighly earlier than before. Background threads will still be running and there may be other etw events interspersed among rundown events and sent after rundown events.\r\n  - On Windows, Ctrl+C and Ctrl+Break are not handled by the runtime and by default result in abrupt termination. The only indication the runtime gets is the process detach event, by which time the OS has already terminated all other threads\r\n    - When these events are not handled (by the runtime or by the app), this is an abrupt shutdown scenario and rundown events will not be sent\r\n    - When these events are handled by the app and canceled along with `Environment.Exit()`, that converts these events into graceful shutdown (see above). If an app handles these events and chooses to not cancel the event, the event remains unhandled and leads to abrupt shutdown (see immediately above).\r\n  - On Unixes, there is no significant change. SIGTERM is graceful shutdown as described above and there are no similar issues of abrupt shutdown.\r\n- There is an option of sending rundown events upon process detach (when we don't have an opportunity to do so gracefully), but as I described above that will get messy and is not a path that we should be headed down","Url":"https://github.com/dotnet/coreclr/pull/27238","RelatedDescription":"Open PR \"Process/send etw rundown events only during graceful shutdown and not during process detach (a form of abrupt shutdown)\" (#27238)"},{"Id":"508084968","IsPullRequest":false,"CreatedAt":"2019-10-16T20:36:10","Actor":"josalem","Number":"27237","RawContent":null,"Title":"GCBulkRootStatic events not firing through EventPipe on Windows","State":"open","Body":"While building out GCDump for EventPipe, I noticed that static variables are not being reported in the dumps when compared to ETW.  Upon further inspection, I noticed that the function `BulkStaticsLogger::FireBulkStaticsEvent` is not using the code generated by the python scripts to enable ETW/EventPipe event sharing and is instead using the Windows API `EventWrite`:\r\nhttps://github.com/dotnet/coreclr/blob/16e83a73cb2df7e2434a7332f7608fc39286ac72/src/vm/eventtrace.cpp#L1402-L1436\r\n\r\nFixing should just be a matter of replacing the `EventWrite`/`#ifdef` block with the appropriate generated function so the event gets fired to both EventPipe and ETW.\r\n\r\nCC - @noahfalk @sywhang @tommcdon ","Url":"https://github.com/dotnet/coreclr/issues/27237","RelatedDescription":"Open issue \"GCBulkRootStatic events not firing through EventPipe on Windows\" (#27237)"},{"Id":"508082432","IsPullRequest":false,"CreatedAt":"2019-10-16T20:30:54","Actor":"sandreenko","Number":"27236","RawContent":null,"Title":"PR testing (coreclr-ci) has an unstable job that is not part of coreclr-outerloop","State":"open","Body":"[CI PR testing](https://dev.azure.com/dnceng/public/_build?definitionId=228&_a=summary) has `Run Test Pri0 CoreFX Windows_NT x64 checked` that sometimes fails with test timeouts ([example ](https://dev.azure.com/dnceng/public/_build/results?buildId=390097&view=ms.vss-test-web.build-test-results-tab&runId=12097244&resultId=165634&paneView=debug)),\r\nthat job is not part of [coreclr-outerloop](https://dev.azure.com/dnceng/public/_build?definitionId=98&_a=summary) that is tracked for ci health measurements.\r\n\r\nBecause of that outerloop testing is not a superset of PR testing and it makes PRs testing more unstable than outerloop.","Url":"https://github.com/dotnet/coreclr/issues/27236","RelatedDescription":"Open issue \"PR testing (coreclr-ci) has an unstable job that is not part of coreclr-outerloop\" (#27236)"},{"Id":"508060959","IsPullRequest":true,"CreatedAt":"2019-10-16T19:47:02","Actor":"mikedn","Number":"27234","RawContent":null,"Title":"Delete fgMorphUnsafeBlk","State":"open","Body":"Making block copy ops non-interruptible can and should be done during lowering, at least because this is intended only for unrolled block ops and it's lowering that decides when to unroll.\r\n\r\nThis also avoids accidentally making block init ops non-interruptible - the block op starts as copy but then assertion propagation managed to transform it into init but nothing resets gtBlkOpGcUnsafe.","Url":"https://github.com/dotnet/coreclr/pull/27234","RelatedDescription":"Open PR \"Delete fgMorphUnsafeBlk\" (#27234)"},{"Id":"508022433","IsPullRequest":true,"CreatedAt":"2019-10-16T18:40:46","Actor":"jashook","Number":"27233","RawContent":null,"Title":"Revert \"Manually managed card bundles windows\"","State":"closed","Body":"Reverts dotnet/coreclr#27087\r\n\r\nTest outerloop job","Url":"https://github.com/dotnet/coreclr/pull/27233","RelatedDescription":"Closed or merged PR \"Revert \"Manually managed card bundles windows\"\" (#27233)"},{"Id":"508018987","IsPullRequest":false,"CreatedAt":"2019-10-16T18:22:05","Actor":"jashook","Number":"27232","RawContent":null,"Title":"[Windows/arm] build sometimes fails with out of heap space","State":"open","Body":"```\r\nsuperpmi-shim-collector.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-collector\\Checked\\superpmi-shim-collector.dll\r\n  mcs.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\mcs\\Checked\\mcs.exe\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-counter\\superpmi-shim-counter.vcxproj]\r\n     Creating library F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/ToolBox/superpmi/superpmi-shim-counter/Checked/superpmi-shim-counter.lib and object F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/ToolBox/superpmi/superpmi-shim-counter/Checked/superpmi-shim-counter.exp\r\n  superpmi-shim-counter.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-counter\\Checked\\superpmi-shim-counter.dll\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-simple\\superpmi-shim-simple.vcxproj]\r\n     Creating library F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/ToolBox/superpmi/superpmi-shim-simple/Checked/superpmi-shim-simple.lib and object F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/ToolBox/superpmi/superpmi-shim-simple/Checked/superpmi-shim-simple.exp\r\n  superpmi-shim-simple.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-simple\\Checked\\superpmi-shim-simple.dll\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi\\superpmi.vcxproj]\r\n  superpmi.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi\\Checked\\superpmi.exe\r\n  Building Custom Rule F:/workspace/_work/1/s/src/dlls/mscordac/CMakeLists.txt\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscordbi\\mscordbi.vcxproj]\r\n  CMake does not need to re-run because F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/dlls/mscordac/CMakeFiles/generate.stamp is up-to-date.\r\n     Creating library F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/dlls/mscordbi/Checked/mscordbi.lib and object F:/workspace/_work/1/s/bin/obj/Windows_NT.arm64.Checked/src/dlls/mscordbi/Checked/mscordbi.exp\r\n  mscordbi.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscordbi\\Checked\\mscordbi.dll\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\tools\\crossgen\\crossgen.vcxproj]\r\n  unwinder_dac_amd64.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\unwinder\\Checked\\unwinder_dac_amd64.lib\r\n  crossgen.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\tools\\crossgen\\Checked\\crossgen.exe\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscordac\\mscordaccore.vcxproj]\r\n  mscordaccore.vcxproj -> F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscordac\\Checked\\mscordaccore.dll\r\n\r\nBuild FAILED.\r\n\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\coreclr\\hosts\\coreconsole\\CoreConsole.vcxproj]\r\nF:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\asmconstants.asm(423): warning A4045: missing END directive [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\coreclr\\hosts\\corerun\\CoreRun.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\coreclr\\hosts\\coreshim\\CoreShim.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\gc\\clrgc.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\clretwrc\\clretwrc.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\gc\\sample\\gcsample.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\dbgshim\\dbgshim.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\tools\\crossgen2\\jitinterface\\jitinterface.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ildasm\\exe\\ildasm.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\jit\\standalone\\clrjit.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscorrc\\small\\mscorrc.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscorrc\\full\\mscorrc.debug.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ilasm\\ilasm.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\mcs\\mcs.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-collector\\superpmi-shim-collector.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-counter\\superpmi-shim-counter.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi-shim-simple\\superpmi-shim-simple.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\ToolBox\\superpmi\\superpmi\\superpmi.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscordbi\\mscordbi.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\tools\\crossgen\\crossgen.vcxproj]\r\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:REF' specification [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\dlls\\mscordac\\mscordaccore.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : error C3859: Failed to create virtual memory for PCH [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1076: compiler limit: internal heap limit reached [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap spacefptrstubs.cpp [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap spacegenericdict.cpp [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap spacegcenv.ee.common.cpp [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap spacehandletablecore.cpp [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap spacegccommon.cpp [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\nc1xx : fatal error C1060: compiler is out of heap space [F:\\workspace\\_work\\1\\s\\bin\\obj\\Windows_NT.arm64.Checked\\src\\vm\\wks\\cee_wks.vcxproj]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27232","RelatedDescription":"Open issue \"[Windows/arm] build sometimes fails with out of heap space\" (#27232)"},{"Id":"507996156","IsPullRequest":false,"CreatedAt":"2019-10-16T17:36:10","Actor":"jashook","Number":"27231","RawContent":null,"Title":"CI - Status/Health","State":"open","Body":"# Overview\r\n\r\nPlease use this issue to discover ongoing issues with CI issues in `dotnet/coreclr`.\r\n\r\n# Current tracked issues\r\n\r\n1. #27126 - Clang 5.0 throws a stack trace occasionally when building arm or arm64 targets\r\n    - Currently ~15% of the of PRs are failing. This manifests as a build issue while either building `linux arm`, `linux arm64` or `linux musl arm64` \r\n2. #27232 - arm/arm64 Windows cross build sometimes fails with out of heap space.\r\n3. Linux arm musl build fails\r\n    - This affects outerloop jobs\r\n\r\n## Untracked Problems\r\n\r\nThis issue is expected to be up to date with all ongoing issues, and it exists to avoid duplicate investigations of CI related failures. If there is information that is not currently tracked here, please open an issue and reference it as a new comment in this issue. Please also mention the `@dotnet/coreclr-infra` group in the opened issue.\r\n\r\n## Goals\r\n\r\n1. A minimum 95% passing rate for the `coreclr-outerloop` pipeline\r\n\r\n## Resources\r\n\r\n1. [coreclr-outerloop pipeline analytics](https://dev.azure.com/dnceng/public/_pipeline/analytics/stageawareoutcome?definitionId=98&contextType=build)","Url":"https://github.com/dotnet/coreclr/issues/27231","RelatedDescription":"Open issue \"CI - Status/Health\" (#27231)"},{"Id":"507959401","IsPullRequest":true,"CreatedAt":"2019-10-16T16:25:41","Actor":"MihaZupan","Number":"27230","RawContent":null,"Title":"Improve ConfigurableArrayPool's Bucket Rent/Release codegen","State":"open","Body":"Functionally exactly the same, just yields better codegen according to [SharpLab](https://sharplab.io/#v2:C4LghgzgtgPgAgBgARwIwDoAqALATgUzABMBLAOwHMBuAWACh7ElNMBPAB3yQF4UMBJMsADMAJloM65YPlxkwAGyQRCC/ERSikAIQCuAYwDW+YPQDe9JFaTTZ8pQWIB7MgtY2hSAPoAjXQDN/WQAZfEpgbAlrJHZcEgA3MBkkRyIXN2Y2TgBtAF087z9A2QgJS2tYhKSuAGV2cmCnI28FJsMoirjE5OlvciJ8AA8Oq3KrWzlFHQNjYAAKXqKg3FDw7AAaD2AkMl0oH1kAeX89YtwIAEoxpAs6aOivVubeMnwAdyQ6hra5i5H73wBZYQHg7d6ZDj4bK7fZHE5Akr5XL/B5LEJhCgRUFolYYiL/AC+12uE3sEJyuSQACUwvMrndrLd7tYWJC8gUcSDeICzqVrtFWRSkDjQbsFAoUdZ+dYfE4nEonoZMGBjGRQf5FCpNoontVTst1Zr8JKrMBcKxpVYmcyAYr0ABRISyOYEfxIRXK1V/eiW+4kN1zLz9IZIAA8woR53Qq0x2HpNvu1oTzJFvE52SDZAGg2RvoT6cz2YA1EXKS9dOKTcmdU09ZHsfXuOXK3nrESGcz2wn/OQdRaO4nW+MAx6VWELi02g7BiR5hqFCpvQPol2bb7/Ug5jX9HWzvGbUnk6mwR9BVCecsYxFc8u2z7b1Y4AB2CNnQkkp2TJRngo0oSiX5rkPAUsihSljzFCVfV9WV5XdNpPTCQ0F3wbVxVrGR9VkZCVCrM1+wTYCbR/JFX2BUELxKKsHjtR0ZFwF18DdUcvWoqUH2TXpg0GCjuLY5kNzmOZdGkC5uLDTcRKEC5OWjPE4yHQcOOTGVGzIkpsm4m8VJU9MtNFCsoOUnTCyGEt+OrdCd0wtSRRIEFIIsldfVXZke3sNxfSIgSRwQscyAnR4p3tGc5yNJcE1c+51wDbdd2WfdmW8+4IPBH9KNxNZtJtdtfWfdTcHfAcP3osk4AAFmpExdDkOYSKQMBcFwMBWESm4YLlBU/NVHDjV9fCvMUoKjAdT9GOY7rxzKYzh03UyeIAQl4BA2sIxTUUjCBsgAWm2+aywapqWosqLnI49y+0GmabF8oxEICycRpC2c5nnRcqyiqLSSmCqquAGqyAA+rGua1qgI6uCWKQ3g3r6jiBo45KaOCsbXXgu7/IinTFK4rMQ25PicYDcSlqQFbFKRm1uN2pzrAyrb9N4EHjvWunqe2k6XN9C7xQIg8ic3KGHuGwxpxe2Gsc7a52wJIA).\r\n\r\nMoved here from dotnet/corefx#41829.","Url":"https://github.com/dotnet/coreclr/pull/27230","RelatedDescription":"Open PR \"Improve ConfigurableArrayPool's Bucket Rent/Release codegen\" (#27230)"},{"Id":"507955729","IsPullRequest":true,"CreatedAt":"2019-10-16T16:18:17","Actor":"GrabYourPitchforks","Number":"27229","RawContent":null,"Title":"[release/3.1] Fix DecoderNLS.Convert to out the correct value for 'completed'","State":"open","Body":"Port https://github.com/dotnet/coreclr/pull/27210 to release/3.1\r\nFixes https://github.com/dotnet/coreclr/issues/27191\r\n\r\n## Description\r\n\r\nIn .NET Core 3.0 we fixed several bugs in the __System.Text__ namespace, including for how UTF-8 fallbacks sequences are calculated and the _out_ parameters from commonly-used methods like `Encoder.Convert`. (See https://github.com/dotnet/coreclr/issues/23020, for instance.) However, we missed fixing the same issue in the related method `Decoder.Convert`. That method is still producing incorrect output for some inputs.\r\n\r\n## Customer Impact\r\n\r\nCustomers who use `Decoder.Convert` may see incorrect behavior from these APIs. Importantly, it is also blocking our ability to introduce extension methods which utilize these APIs, such as those under consideration at https://github.com/dotnet/corefx/pull/41810.\r\n\r\n## Regression?\r\n\r\nNo. The original bug has existed since the dawn of time.\r\n\r\n## Testing\r\n\r\nThe unit tests added as part of https://github.com/dotnet/corefx/pull/41802 should be sufficient to cover this.\r\n\r\n## Risk\r\n\r\nMedium. As with any behavioral changes, there exists the possibility that customers may be depending (either intentionally or unintentionally) on the incorrect outputs.","Url":"https://github.com/dotnet/coreclr/pull/27229","RelatedDescription":"Open PR \"[release/3.1] Fix DecoderNLS.Convert to out the correct value for 'completed'\" (#27229)"},{"Id":"507927148","IsPullRequest":true,"CreatedAt":"2019-10-16T15:27:50","Actor":"MichalStrehovsky","Number":"27228","RawContent":null,"Title":"Merge master to single-exe","State":"open","Body":"This had a surprising amount of conflicts due to various cleanups, deletes, and managed/native build system overhauls in master. Hope I got this right...","Url":"https://github.com/dotnet/coreclr/pull/27228","RelatedDescription":"Open PR \"Merge master to single-exe\" (#27228)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"508219742","IsPullRequest":false,"CreatedAt":"2019-10-17T04:01:04","Actor":"brianary","Number":"12910","RawContent":null,"Title":"Can't find any way to set version","State":"open","Body":"## Steps to reproduce\r\n\r\n1. Add `<VersionPrefix>1.0.0</VersionPrefix>` to **netcoreapp3.0** fsproj file\r\n2. `dotnet build Project.fsproj --version-suffix 1` (as [documented](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build \"--version-suffix <VERSION_SUFFIX>\"))\r\n3. `Get-ChildItem -Recurse -Filter Project.dll |Foreach-Object VersionInfo`\r\n\r\n### or\r\n\r\n1. Add `<Version>1.0.0</Version>`\r\n2. `dotnet build Project.fsproj`\r\n3. `Get-ChildItem -Recurse -Filter Project.dll |Foreach-Object VersionInfo`\r\n\r\n### or\r\n\r\n1. `dotnet build Project.fsproj /p:Version=1.0.0`\r\n2. `Get-ChildItem -Recurse -Filter Project.dll |Foreach-Object VersionInfo`\r\n\r\n## Expected  behavior\r\n\r\n```text\r\nProductVersion   FileVersion      FileName\r\n--------------   -----------      --------\r\n1.0.0            1.0.0            ...\\bin\\Debug\\netcoreapp3.0\\Project.dll\r\n1.0.0            1.0.0            ...\\obj\\Debug\\netcoreapp3.0\\Project.dll\r\n```\r\n\r\n## Actual behavior\r\n\r\n```text\r\nProductVersion   FileVersion      FileName\r\n--------------   -----------      --------\r\n                                  ...\\bin\\Debug\\netcoreapp3.0\\Project.dll\r\n                                  ...\\obj\\Debug\\netcoreapp3.0\\Project.dll\r\n```\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12910","RelatedDescription":"Open issue \"Can't find any way to set version\" (#12910)"},{"Id":"508207412","IsPullRequest":true,"CreatedAt":"2019-10-17T03:50:26","Actor":"dotnet-maestro[bot]","Number":"12909","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.15\r\n- **Date Produced**: 10/17/2019 2:04 AM\r\n- **Commit**: 5cf43118651b9b8ab3d7e61134a1c0e14ba75e27\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19516.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19516.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19516.11 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12909","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12909)"},{"Id":"507541876","IsPullRequest":true,"CreatedAt":"2019-10-17T02:14:55","Actor":"dotnet-bot","Number":"12897","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12897","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/2.2.4xx\" (#12897)"},{"Id":"508163372","IsPullRequest":true,"CreatedAt":"2019-10-17T00:50:28","Actor":"dotnet-maestro[bot]","Number":"12908","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191016.9\r\n- **Date Produced**: 10/16/2019 11:20 PM\r\n- **Commit**: 5ceb94f3fe9462afc2e730e94d0a2fb59b8aaae3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19516.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12908","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12908)"},{"Id":"507807190","IsPullRequest":true,"CreatedAt":"2019-10-17T00:41:35","Actor":"dotnet-bot","Number":"12903","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12903","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#12903)"},{"Id":"507820490","IsPullRequest":true,"CreatedAt":"2019-10-16T16:52:25","Actor":"dotnet-maestro[bot]","Number":"12904","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 11:22 AM\r\n- **Commit**: f8aac40612d167c5beff554f569897177e786d3a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19516.1\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19516.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19516.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19516.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19516.1\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12904","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12904)"},{"Id":"507966450","IsPullRequest":true,"CreatedAt":"2019-10-16T16:40:19","Actor":"dotnet-maestro[bot]","Number":"12907","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.12\r\n- **Date Produced**: 10/17/2019 12:27 AM\r\n- **Commit**: 32085cbc728e1016c9d6a7bc105845f0f9eb6b47\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.1\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.1\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.6.0 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12907","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#12907)"},{"Id":"507925437","IsPullRequest":true,"CreatedAt":"2019-10-16T15:25:13","Actor":"dotnet-maestro[bot]","Number":"12906","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.11\r\n- **Date Produced**: 10/17/2019 12:01 AM\r\n- **Commit**: 4d0c362529292d2d0b3908cb4f7430d88ea3ebfc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19516.11\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19516.11\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19516.11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19516.11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19516.11\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12906","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12906)"},{"Id":"507875617","IsPullRequest":false,"CreatedAt":"2019-10-16T14:06:10","Actor":"stsrki","Number":"12905","RawContent":null,"Title":"dotnet pack doesn't work for referenced project","State":"open","Body":"I have an issue with `dotnet pack` when I try to pack projects that have a reference to the base .csproj.\r\n\r\nI have already reported this issue on AspNetCore repo https://github.com/aspnet/AspNetCore/issues/14467 but I think this should be the better place to report the problem.\r\n\r\n## The problem\r\n\r\nHere is a quick overview:\r\n\r\n- I have root project named `Blazorise.csproj`\r\n- I also have sub-project named `Blazorise.Bootstrap.csproj` that have a reference to `Blazorise.csproj`\r\n- When I run dotnet pack for `Blazorise.Bootstrap.csproj` the final package will include `content` and `contentFiles` folders that should not be included.\r\n- Those folders will also have `Blazorise.Bootstrap.StaticWebAssets.xml` that point to my local directory.\r\n\r\n## Workaround\r\n\r\nI had to come up with some hacky `.nuspec` files to overcome this limitation. The workaround can be seen on PR https://github.com/stsrki/Blazorise/pull/317\r\n\r\n- `content` and `contentFiles` folders had to be removed\r\n- `build`, `buildMultiTargeting` and `buildTransitive` had to be copied from `.nupkg` generated from `dotnet pack` so that they could be included in the final package","Url":"https://github.com/dotnet/cli/issues/12905","RelatedDescription":"Open issue \"dotnet pack doesn't work for referenced project\" (#12905)"},{"Id":"507309987","IsPullRequest":false,"CreatedAt":"2019-10-16T09:06:03","Actor":"TclasenITVT","Number":"12892","RawContent":null,"Title":"SingleFile Publish Win10-x64 doesnt run on newer windows version than the one it was build on","State":"closed","Body":"## Steps to reproduce\r\npublish a dotnet core 3.0 console app on windows 10.0.14393.\r\nTry running it on a Windows PC 10 x64 1803 (17134.1069).\r\n\r\n## Expected  behavior\r\nThe Software executes.\r\n\r\n## Actual behavior\r\nNot starting but outputting this message (German System Language):\r\n\r\n> Die Version von ITVT.Tool.exe ist mit der ausgeführten Windows-Version nicht kompatibel. Überprüfen Sie die Systeminformationen des Computers, und wenden Sie sich anschließend an den Herausgeber der Software.\r\n\r\nRough translation:\r\nThis version of the ITVT.Tool.exe is incompatible with the current windows-version. Check the systeminformation of the computer and then talk to the creator of the software.\r\n\r\n## Environment data\r\nBuildAgent OS Version: Windows_NT 10.0.14393\r\nOn the build agent the dotnet core 3.0.100 sdk is installed.\r\nUser Win 10 x64 1803 (17134.1069) here the dotnet core 3.0.100 sdk ist not installed. Also no other dotnet sdk/runtime.\r\n\r\nPublishProfile:\r\n```\r\n <PropertyGroup>\r\n     <PublishProtocol>FileSystem</PublishProtocol>\r\n     <Configuration>Release</Configuration>\r\n     <Platform>Any CPU</Platform>\r\n     <TargetFramework>netcoreapp3.0</TargetFramework>\r\n     <PublishDir>bin\\Release\\netcoreapp3.0\\publish\\</PublishDir>\r\n     <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n     <SelfContained>true</SelfContained>\r\n     <PublishSingleFile>true</PublishSingleFile>\r\n     <PublishTrimmed>true</PublishTrimmed>\r\n</PropertyGroup>\r\n```\r\n\r\n--\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12892","RelatedDescription":"Closed issue \"SingleFile Publish Win10-x64 doesnt run on newer windows version than the one it was build on\" (#12892)"},{"Id":"507249711","IsPullRequest":false,"CreatedAt":"2019-10-16T08:07:14","Actor":"t-hart","Number":"12890","RawContent":null,"Title":"dotnet cli, test, build, run, broken; Infinite recursion","State":"closed","Body":"Hey! I ran into an issue today with the CLI, where suddenly nothing seems to work anymore. I'm not sure how I got into this state, but now I can't seem to get out. I tried reinstalling, rebooting, upgrading my OS. Almost every single `dotnet` command I've tried (the only exception being `--version`) terminates with an infinite recursion error.\r\n\r\n## Steps to reproduce\r\n\r\nNot sure how I got into this state, but now most any command I try and run gives me the same error. `test`, `build`, `run`, `publish`, and `--info` all yield the same result. \r\n\r\n## Expected  behavior\r\n\r\nThe commands should do what they are designed to, not throw an infinite recursion error.\r\n\r\n## Actual behavior\r\n\r\nThe processes terminate with this output:\r\n```\r\nProcess terminated. Infinite recursion during resource lookup within System.Private.CoreLib.  This may be a bug in System.Private.CoreLib, or potentially in certain extensibility points such as assembly resolve events or CultureInfo names.  Resource name: Argument_InvalidResourceCultureName\r\n   at System.Environment.FailFast(System.String)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String, System.String)\r\n   at System.Globalization.CultureInfo.VerifyCultureName(System.String, Boolean)\r\n   at System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String, System.String)\r\n   at System.Globalization.CultureInfo.VerifyCultureName(System.String, Boolean)\r\n   at System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at Microsoft.TemplateEngine.Cli.LocalizableStrings.get_DisplaysHelp()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.CommandParserSupport.get_NewCommandVisibleArgs()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.CommandParserSupport.CreateNewCommandWithoutTemplateInfo(System.String)\r\n   at Microsoft.DotNet.Cli.Parser..cctor()\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(System.String[], Microsoft.DotNet.Cli.Telemetry.ITelemetry)\r\n   at Microsoft.DotNet.Cli.Program.Main(System.String[])\r\n```\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output: `dotnet --info` exits with the same message as above, but `dotnet --version` yields `3.0.100`\r\n\r\nOn macOS. Was on Mojave, tried updating to Catalina to get around this, but nothing changed.\r\n\r\nSorry for not being able to dump `--info` output, but just let  me know what you need, and I'll try and find out for you.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12890","RelatedDescription":"Closed issue \"dotnet cli, test, build, run, broken; Infinite recursion\" (#12890)"},{"Id":"507668592","IsPullRequest":true,"CreatedAt":"2019-10-16T08:05:32","Actor":"dotnet-maestro[bot]","Number":"12901","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.17\r\n- **Date Produced**: 10/16/2019 6:28 AM\r\n- **Commit**: 0ceceab994c8e965bf50b11fc230dc2ea67aa1ec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.17\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.17\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.17\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.17\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.17\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12901","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12901)"},{"Id":"507684658","IsPullRequest":false,"CreatedAt":"2019-10-16T08:05:09","Actor":"sitepodmatt","Number":"12902","RawContent":null,"Title":"Poor error message when using `dotnet <file.dll>`  with runtimes only on Linux","State":"open","Body":"## Steps to reproduce\r\nUsing a dotnet runtime-only container run a dll/exe that doesnt exist.\r\ndotnet <nonexistant.dll> somearg\r\n\r\nIn our case it was typo in our Dockerfile but we missed it  due to the confusing error message about SDKs\r\n\r\n## Expected  behavior\r\nMessage that nonexistent.dll does not exist. Similar to how it works when SDKS are installed. \r\n\r\n## Actual behavior\r\n  It was not possible to find any installed .NET Core SDKs\r\n  Did you mean to run .NET Core SDK commands? Install a .NET Core SDK from:\r\n      https://aka.ms/dotnet-download\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n  It was not possible to find any installed .NET Core SDKs\r\n  Did you mean to run .NET Core SDK commands? Install a .NET Core SDK from:\r\n      https://aka.ms/dotnet-download\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntl;dr the dotnet cli command on runtimes presumes the issue is missing SDKs before more obvious issues.. ","Url":"https://github.com/dotnet/cli/issues/12902","RelatedDescription":"Open issue \"Poor error message when using `dotnet <file.dll>`  with runtimes only on Linux\" (#12902)"},{"Id":"507625057","IsPullRequest":true,"CreatedAt":"2019-10-16T06:10:28","Actor":"dotnet-maestro[bot]","Number":"12900","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.16\r\n- **Date Produced**: 10/16/2019 4:22 AM\r\n- **Commit**: 57ce1fec7a023a8e32cc64f8ce2637a0b3cdba35\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19515.16\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19515.16\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19515.16\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19515.16\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19515.16\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19515.16\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19514.6 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12900","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12900)"},{"Id":"507620689","IsPullRequest":true,"CreatedAt":"2019-10-16T05:21:25","Actor":"wli3","Number":"12899","RawContent":null,"Title":"Fix eventProperties.Add mutate _commonProperties","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/12899","RelatedDescription":"Open PR \"Fix eventProperties.Add mutate _commonProperties\" (#12899)"},{"Id":"507549652","IsPullRequest":true,"CreatedAt":"2019-10-16T01:10:30","Actor":"dotnet-maestro[bot]","Number":"12898","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.6\r\n- **Date Produced**: 10/15/2019 11:30 PM\r\n- **Commit**: b2bff948e10f7632a40799808f4d7c74b912df80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12898","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12898)"},{"Id":"506316072","IsPullRequest":true,"CreatedAt":"2019-10-15T22:21:54","Actor":"dotnet-bot","Number":"12883","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12883","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#12883)"},{"Id":"507470342","IsPullRequest":true,"CreatedAt":"2019-10-15T21:06:55","Actor":"wli3","Number":"12896","RawContent":null,"Title":"Merges/release/3.1.1xx to master","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/12896","RelatedDescription":"Closed or merged PR \"Merges/release/3.1.1xx to master\" (#12896)"},{"Id":"507416591","IsPullRequest":false,"CreatedAt":"2019-10-15T18:42:45","Actor":"dagood","Number":"12895","RawContent":null,"Title":"Running \"dotnet Some.NonExistent.dll\" for an FDD app tells me \"dotnet-Some.NonExistent.dll\" doesn't exist","State":"open","Body":"## Steps to reproduce\r\n\r\nRun `dotnet Some.NonExistent.dll`, where `Some.NonExistent.dll` doesn't exist. My intent here is to use the `dotnet` host to run an FDD app.\r\n\r\n## Expected  behavior\r\n\r\nThe error message tells me `Some.NonExistent.dll` doesn't exist (if I meant to run a program).\r\n\r\n## Actual behavior\r\n\r\nThe error message tells me `dotnet-Some.NonExistent.dll` doesn't exist (if I meant to run a program):\r\n(Note the `dotnet-` prefix!)\r\n\r\n```\r\n$ dotnet Some.NonExistent.dll\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-Some.NonExistent.dll does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\n```\r\n\r\nI remember the `dotnet-` prefix being used to build/find SDK commands, maybe that's what the message means by \"a .NET Core program\"? I'm not sure, I may just not understand the message.\r\n\r\n## Environment data\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  30\r\n OS Platform: Linux\r\n RID:         fedora.30-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/12895","RelatedDescription":"Open issue \"Running \"dotnet Some.NonExistent.dll\" for an FDD app tells me \"dotnet-Some.NonExistent.dll\" doesn't exist\" (#12895)"},{"Id":"507408025","IsPullRequest":false,"CreatedAt":"2019-10-15T18:24:21","Actor":"BananchickPasha","Number":"12894","RawContent":null,"Title":"dotnet build does not run without sudo","State":"open","Body":"When i write `dotnet build` in any project, I have this error:\r\n```\r\n> dotnet build\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 80.46 ms for /home/banan/programming/dotnet/test3/test3.csproj.\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: System.UnauthorizedAccessException: Access to the path '/home/banan/programming/dotnet/test3/obj/Debug/netcoreapp3.0/t\r\nest3' is denied. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:  ---> System.IO.IOException: Permission denied [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    --- End of inner exception stack trace --- [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter) [/\r\nhome/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode) [/home/banan/programmi\r\nng/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options) [/home/banan/programming/do\r\ntnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Fil\r\neOptions options) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileSystem.CopyFile(String sourceFullPath, String destFullPath, Boolean overwrite) [/home/banan/progra\r\nmming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.File.Copy(String sourceFileName, String destFileName, Boolean overwrite) [/home/banan/programming/dotn\r\net/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.BinaryUtils.CopyFile(String sourcePath, String destinationPath) [/home/banan/pro\r\ngramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.HostWriter.CreateAppHost(String appHostSourceFilePath, String appHostDestination\r\nFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String assemblyToCopyResorcesFrom) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/home/banan/prog\r\nramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingCon\r\ntext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: System.UnauthorizedAccessException: Access to the path '/home/banan/programming/dotnet/test3/obj/Debug/netcoreapp3.0/t\r\nest3' is denied. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:  ---> System.IO.IOException: Permission denied [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    --- End of inner exception stack trace --- [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter) [/\r\nhome/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode) [/home/banan/programmi\r\nng/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options) [/home/banan/programming/do\r\ntnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Fil\r\neOptions options) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileSystem.CopyFile(String sourceFullPath, String destFullPath, Boolean overwrite) [/home/banan/progra\r\nmming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.File.Copy(String sourceFileName, String destFileName, Boolean overwrite) [/home/banan/programming/dotn\r\net/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.BinaryUtils.CopyFile(String sourcePath, String destinationPath) [/home/banan/pro\r\ngramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.HostWriter.CreateAppHost(String appHostSourceFilePath, String appHostDestination\r\nFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String assemblyToCopyResorcesFrom) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/home/banan/prog\r\nramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingCon\r\ntext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\n\r\n```\r\n\r\nbut when I run the same command under root, all works OK:\r\n```\r\n> sudo dotnet build\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 79.49 ms for /home/banan/programming/dotnet/test3/test3.csproj.\r\n  test3 -> /home/banan/programming/dotnet/test3/bin/Debug/netcoreapp3.0/test3.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:02.35\r\n\r\n```\r\n\r\nAnother problem is that when I write `sudo dotnet run`, It cannot find some files\r\n```\r\n> sudo dotnet run\r\nSystem.ComponentModel.Win32Exception (2): No such file or directory\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, B\r\noolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd,\r\nInt32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\n```\r\n\r\nWhat can it be? \r\nHere is my dotnet info:\r\n```\r\n> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     nixos\r\n OS Version:  19.09.736.9bbad4c6254\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```","Url":"https://github.com/dotnet/cli/issues/12894","RelatedDescription":"Open issue \"dotnet build does not run without sudo\" (#12894)"},{"Id":"507364652","IsPullRequest":true,"CreatedAt":"2019-10-15T17:20:26","Actor":"dotnet-maestro[bot]","Number":"12893","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.3\r\n- **Date Produced**: 10/15/2019 3:41 PM\r\n- **Commit**: 119d6f9ad450a81c0b93491adebc8090ee10858a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12893","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12893)"},{"Id":"507300935","IsPullRequest":true,"CreatedAt":"2019-10-15T15:25:29","Actor":"dotnet-maestro[bot]","Number":"12891","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.2\r\n- **Date Produced**: 10/15/2019 1:44 PM\r\n- **Commit**: 1f4b5745cc95e76b2643cff3eb1894ad35a57044\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12891","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12891)"},{"Id":"507220720","IsPullRequest":true,"CreatedAt":"2019-10-15T13:15:27","Actor":"dotnet-maestro[bot]","Number":"12889","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.1\r\n- **Date Produced**: 10/15/2019 11:25 AM\r\n- **Commit**: 3ab6f2af2d6bf29dfda7435d455de62103fce0bc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12889","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12889)"},{"Id":"506935932","IsPullRequest":false,"CreatedAt":"2019-10-15T06:48:32","Actor":"MisinformedDNA","Number":"12888","RawContent":null,"Title":"tool install can't find package in private NuGet feed","State":"closed","Body":"## Steps to reproduce\r\n1. Create an Azure Artifacts feed\r\n2. Push a pre-release global tool to the feed\r\n3. Click \"Connect Feed\" to get URL\r\n4. Set up Feed in VS to see that the package does exist and is marked pre-release\r\n5. Install the tool via Azure Pipelines\r\n\r\n```yaml\r\n  - task: NuGetCommand@2\r\n    displayName: 'Add auth values'\r\n    inputs:\r\n      command: custom\r\n      arguments: sources update -Name \"SomeName\" -Username \"vsts\" -Password \"$(System.AccessToken)\" -StorePasswordInClearText -ConfigFile NuGet.Config\r\n   \r\n  - pwsh: cat Nuget.config\r\n\r\n  - pwsh: dotnet tool install --global ToolName --version 1.0.1-ci-20191014-185132 --configfile NuGet.config\r\n```\r\n\r\n## Expected  behavior\r\n\r\nTool is successfully installed.\r\n\r\n## Actual behavior\r\n\r\nReceive an error that package can't be found:\r\n\r\n> error NU1101: Unable to find package ToolName. No packages exist with this id in source(s): FeedName, C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\r\n> The tool package could not be restored.\r\n> Tool 'ToolName' failed to install. This failure may have been caused by:\r\n> \r\n> * You are attempting to install a preview release and did not use the --version option to specify the version.\r\n> * A package by this name was found, but it was not a .NET Core tool.\r\n> * The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n> * You mistyped the name of the tool.\r\n> \r\n> For more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n> ##[debug]$LASTEXITCODE: 1\r\n> \r\n\r\nNot getting a 401 anymore, so auth doesn't appear to be the problem.\r\n\r\nNuGet.config:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n   <packageSources>\r\n      <add key=\"FeedName\" value=\"https://OrgName.pkgs.visualstudio.com/_packaging/FeedName/nuget/v3/index.json\" />\r\n   </packageSources>\r\n  <packageSourceCredentials>\r\n    <FeedName>\r\n      <add key=\"Username\" value=\"vsts\" />\r\n      <add key=\"ClearTextPassword\" value=*** />\r\n    </FeedName>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```\r\n\r\nThe package name and version are definitely correct. Am I missing something? Is there a better way to do this?\r\n\r\n## Environment data\r\nAzure DevOps\r\ndotnet SDK 3.0.100\r\n\r\n@wli3 ","Url":"https://github.com/dotnet/cli/issues/12888","RelatedDescription":"Closed issue \"tool install can't find package in private NuGet feed\" (#12888)"},{"Id":"506498982","IsPullRequest":false,"CreatedAt":"2019-10-15T05:30:48","Actor":"khteh","Number":"12886","RawContent":null,"Title":"publish -f netcoreapp3.0 errorneously looks for 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00'","State":"closed","Body":"```\r\n$ dn publish -f netcoreapp3.0 -c Release --no-restore --no-build src/Biz4x.Frontend.Web/\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  bower font-awesome    extra-resolution Unnecessary resolution: font-awesome#5.0.8\r\n  bower popper.js       extra-resolution Unnecessary resolution: popper.js#v1.14.1\r\n  It was not possible to find any compatible framework version\r\n  The specified framework 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00' was not found.\r\n    - The following frameworks were found:\r\n        3.0.0 at [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n  \r\n  You can resolve the problem by installing the specified framework and/or SDK.\r\n  \r\n  The .NET Core frameworks can be found at:\r\n    - https://aka.ms/dotnet-download\r\n/usr/src/4xlabs/bz-frontend/src/Biz4x.Frontend.Web/Biz4x.Frontend.Web.csproj(89,5): error MSB3073: The command \"dotnet bundle\" exited with code 150.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12886","RelatedDescription":"Closed issue \"publish -f netcoreapp3.0 errorneously looks for 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00'\" (#12886)"},{"Id":"506495909","IsPullRequest":false,"CreatedAt":"2019-10-14T21:52:21","Actor":"John0King","Number":"12885","RawContent":null,"Title":"Does consume COM component be supported?","State":"closed","Body":"## Steps to reproduce\r\n1. create a class library that use com, and target net461\r\n2. dotnet build\r\n\r\n## Expected  behavior\r\nbuild success and there's a com dll in the project\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Microsoft.Common.CurrentVersion.targets(2726,5): error : MSB4803: .NET Core 版本的 MSBuild 不支持“ResolveComReference”。请使用 .NET Framework 版本的 MSBuild。有关更多详细信息，请参阅 https://aka.ms/msbuild/MSB4803。 [E:\\Projects\\FingerprintConnector\\src\\FingerprintConnector.Services\\FingerprintConnector.Services.csproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12885","RelatedDescription":"Closed issue \"Does consume COM component be supported?\" (#12885)"},{"Id":"506815973","IsPullRequest":true,"CreatedAt":"2019-10-14T21:06:38","Actor":"dsplaisted","Number":"12887","RawContent":null,"Title":"Update branding to 3.1.100-preview2","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/12887","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.100-preview2\" (#12887)"},{"Id":"506343288","IsPullRequest":true,"CreatedAt":"2019-10-14T10:27:45","Actor":"dotnet-maestro[bot]","Number":"12884","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191014.1\r\n- **Date Produced**: 10/14/2019 8:54 AM\r\n- **Commit**: 4ace84dbf94128b4825c76cdd09b46dba7473478\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19514.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12884","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12884)"},{"Id":"506308966","IsPullRequest":true,"CreatedAt":"2019-10-13T11:35:24","Actor":"dotnet-maestro[bot]","Number":"12882","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 10:00 AM\r\n- **Commit**: 17c01271d621e2947dbf702dda0d61e43c5ec150\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12882","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12882)"},{"Id":"506220812","IsPullRequest":true,"CreatedAt":"2019-10-12T18:55:23","Actor":"dotnet-maestro[bot]","Number":"12881","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191012.2\r\n- **Date Produced**: 10/12/2019 5:16 PM\r\n- **Commit**: 45672e39189b07c5f5928d287e097e136acbed20\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19512.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12881","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12881)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-15T19:33:30","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"open","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Open PR \"Source-build improvements.\" (#1612)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191015.2\r\n- **Date Produced**: 10/16/2019 5:29 AM\r\n- **Commit**: cbfa29d4e859622ada3d226f90f103f659665d31\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19515.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19515.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19515.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19515.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19515.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19515.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"},{"Id":"505811013","IsPullRequest":true,"CreatedAt":"2019-10-11T12:11:39","Actor":"dotnet-maestro[bot]","Number":"1604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191010.4\r\n- **Date Produced**: 10/10/2019 5:59 PM\r\n- **Commit**: 8cd48078f550fbcbd4f684b897b14db207397b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19510.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1604)"},{"Id":"505304835","IsPullRequest":false,"CreatedAt":"2019-10-10T14:21:00","Actor":"Sumeetkumawat","Number":"1603","RawContent":null,"Title":"Issue while Referencing iOS native library to .net standard library","State":"open","Body":"I have three projects in my solution. I have added .net standard library say 'A'. I have some code there. Then i added ios library 'B' and added project reference of 'A' here.\r\nNow I have another .net standard library 'C' and here I would like to add reference of 'A' & 'B' projects not dll's. Reference of 'A' is added successfully but while adding reference of 'B', I \r\nsee 'Incompatible Target Framework' message.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1603","RelatedDescription":"Open issue \"Issue while Referencing iOS native library to .net standard library\" (#1603)"},{"Id":"505235113","IsPullRequest":true,"CreatedAt":"2019-10-10T12:33:39","Actor":"dotnet-maestro[bot]","Number":"1602","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.26\r\n- **Date Produced**: 10/10/2019 3:16 AM\r\n- **Commit**: 30280e07adc3c1f0776ef9531b47a769e2b45420\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.26\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1602","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1602)"},{"Id":"505224197","IsPullRequest":true,"CreatedAt":"2019-10-10T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1601","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191009.5\r\n- **Date Produced**: 10/9/2019 10:22 PM\r\n- **Commit**: 1acb4c3ce4c6497388752adad31825ae7cdb7e2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19509.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1601","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1601)"},{"Id":"505206761","IsPullRequest":false,"CreatedAt":"2019-10-10T11:24:37","Actor":"manijak","Number":"1600","RawContent":null,"Title":"The state of X509Certificate management with netstandard, xamarin, win & macOS","State":"open","Body":"First, my apologies if this is the wrong channel to post this. I've been digging and trying to understand for weeks where the issue/limitation is to our problem, figured this would be the most suitable place to ask. We are not sure if this is a limitation with the frameworks, or the platform, or due to our limited knowledge, or a combination of all. But things are very confusing right now, and we just need proper guidance on what direction to take.\r\n\r\nEDIT: Would appreciate if @bartonjs or @filipnavara could pitch in 👍 \r\n\r\n### **Background** 💡 \r\nWe are creating a small, cross-platform (win & macos), desktop application that will act as a websocket server running only on localhost (https). This application is a bridge between our web applications and the local machine hardware (e.g. printers). In order to provide a secure connection, `SslStream` requires a `X509Certificate2` class with a `PrivateKey`.\r\n\r\nThe idea is to let the app itself generate a self-signed certificate with private key and use that to start the secure websocket service. After the certificate has been generated for the first time, we store it in the local certificate store and reuse it when the app restarts. \r\n\r\n### **Project structure & frameworks** 📦 \r\nThis is how our solution is defined. `SharedProject` is a shared lib referenced by both `AppWin` & `AppMac`. The Win & Mac projects are startup-projects for their respective platform. \r\n```\r\nOurApp.sln\r\n  |---- SharedProject (netstandard2.1)\r\n        Creates & runs the websocket service, generates certificate (win), communicates with local hardware, ect\r\n\r\n  |---- AppWin (netcore3.0)\r\n        Startup project for Windows platform. Contains platform-specific code, if any.\r\n\r\n  |---- AppMac (Xamarin.Mac)\r\n        Startup project for macOS platform. Contains platform-specific code (generates certificate).\r\n```\r\n\r\n### **How it runs** 🏃 \r\nIn our `SharedProject` we have a class taking care of certificate generation and storing. The idea was that both the Win & Mac platforms could use this to manage the certificates. It uses the `X509Certificate2` & `CertificateRequest` provided by the framework. Plus the `X509Store` to save and retrieve the certificate.\r\n\r\n**Windows** ✔️ \r\nOn Windows there are no issues. With minimum amount of code we are able to generate a self-signed certificate with private-key, store it, and run the service with it. Also re-using the certificate when the app restarts by retrieving the certificate works very well. The `X509Store` returns the certificate with the _private key_, and we can easily use it with our `SslStream`. \r\n\r\n**macOS** ❌ \r\nThings are not so clear here... We could not use the above mentioned shared class to manage certificates (that works just fine on Windows):\r\n* First issue was that we got a `PlatformNotSupportedException` when the application was trying to use the `CertificateRequest`. \r\n* Second \"issue\" was that the `X509Store` did not store or retrieve certificates from the macOS keychain, but instead it uses some local mono certificate-store that the browsers do not see (at least in our tests). And it only stored the certificate (.cer) not the private-key that was included in the `X509Certificate2` object. Plus it seemed difficult to \"Trust\" the stored certificate.\r\n\r\nSo we created a separate class to take care of certificate management for macOS inside the `AppMac (Xamarin.Mac)` project. By using `BouncyCastle` we generated an identical self-signed certificate with private-key and used that to run our secure websocket service:\r\n\r\n* When launching our Secure Websocket service on macOS, the certificate used here is automatically added to the local macOS login keychain. For us this is great, since we could not use `X509Store` to add it there in the first place.\r\n* The only way we could retrieve the certificate from the keychain was to use the `SecKeyChain` class and query for it. Thankfully the `SecCertificate` object has a `ToX509Certificate2()` function. But that still left us without the `PrivateKey` that is needed by `SslStream`. \r\n* We also tried using `SecKeyChain.FindIdentity` to retrieve both, but even tho it is easy to convert `SecCertificate` to `X509Certificate2`, there seems to be no way to convert a `SecKey` to something useful like `RSA` or `RSACryptoServiceProvider` or something that can be embedded to the `X509Certificate2`\r\n\r\n### What to do? 😭 \r\nWe are pretty much stuck when it comes to the macOS platform. There seems to be no way for us to retrieve our own X509Certificate2 with the private-key embedded. Not sure if this is because we are using Xamarin.Mac & netstandard2.1, perhaps things are easier on netcore3? But still, Xamarin & mono have been around for a long time, there should be a way for us to do this today. Must be something we are missing here and would appreciate if someone could guide us. ","Url":"https://github.com/dotnet/standard/issues/1600","RelatedDescription":"Open issue \"The state of X509Certificate management with netstandard, xamarin, win & macOS\" (#1600)"},{"Id":"504399207","IsPullRequest":false,"CreatedAt":"2019-10-09T12:43:05","Actor":"2300070","Number":"1598","RawContent":null,"Title":"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.","State":"closed","Body":"    private class TestReadOnly\r\n    {\r\n        public static readonly int Field;\r\n    }\r\n    [TestMethod]\r\n    public void TestReadOnlyField()\r\n    {\r\n        FieldInfo field = typeof(TestReadOnly).GetField(nameof(TestReadOnly.Field));\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        field.SetValue(null, 0xFF);\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        Console.WriteLine(TestReadOnly.Field);\r\n    }\r\n\r\nOutput:\r\n\r\n0\r\n255\r\n255\r\n0\r\n","Url":"https://github.com/dotnet/standard/issues/1598","RelatedDescription":"Closed issue \"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.\" (#1598)"},{"Id":"504610278","IsPullRequest":true,"CreatedAt":"2019-10-09T12:21:49","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.1\r\n- **Date Produced**: 10/9/2019 9:11 AM\r\n- **Commit**: a7ee8cdccce7d2607d58f9b93ce319209a238f7a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1599)"},{"Id":"504006427","IsPullRequest":true,"CreatedAt":"2019-10-08T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1597","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191008.1\r\n- **Date Produced**: 10/8/2019 8:59 AM\r\n- **Commit**: c1092870c306b8da256e455cec0814486255d0c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19508.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1597","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1597)"},{"Id":"503415647","IsPullRequest":true,"CreatedAt":"2019-10-07T12:29:27","Actor":"dotnet-maestro[bot]","Number":"1596","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191006.4\r\n- **Date Produced**: 10/7/2019 1:07 AM\r\n- **Commit**: 38aa9151607cb63bb569beb42880057ba2cd3da0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19506.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1596","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1596)"},{"Id":"503407217","IsPullRequest":true,"CreatedAt":"2019-10-07T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191006.1\r\n- **Date Produced**: 10/6/2019 12:59 PM\r\n- **Commit**: 7acc732c615d2c2326cd347c8c1841a300a632cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19506.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"},{"Id":"503093090","IsPullRequest":true,"CreatedAt":"2019-10-06T12:23:42","Actor":"dotnet-maestro[bot]","Number":"1594","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191005.5\r\n- **Date Produced**: 10/6/2019 3:54 AM\r\n- **Commit**: 6de42378223c6cb138d28f812c440092718c7a19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19505.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1594","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1594)"},{"Id":"503091277","IsPullRequest":true,"CreatedAt":"2019-10-06T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1593","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191005.1\r\n- **Date Produced**: 10/5/2019 12:53 PM\r\n- **Commit**: 13e1dbd86223eaa797655bf14070ea28ce6461e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19505.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1593","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1593)"},{"Id":"502956371","IsPullRequest":true,"CreatedAt":"2019-10-05T12:29:24","Actor":"dotnet-maestro[bot]","Number":"1592","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191004.9\r\n- **Date Produced**: 10/5/2019 3:05 AM\r\n- **Commit**: 99ea2b5aebf7361a5baa638c978cb6214fca5217\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19504.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19504.9\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19504.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1592","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1592)"},{"Id":"502954708","IsPullRequest":true,"CreatedAt":"2019-10-05T12:06:58","Actor":"dotnet-maestro[bot]","Number":"1591","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/5/2019 1:24 AM\r\n- **Commit**: 380eaaf663b425943754a15b29e814df0bb1b078\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19504.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1591","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1591)"},{"Id":"502952894","IsPullRequest":false,"CreatedAt":"2019-10-05T11:42:25","Actor":"axanth","Number":"1590","RawContent":null,"Title":"Any specific date about support of Universal Windows Platform in .net Standard 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1590","RelatedDescription":"Open issue \"Any specific date about support of Universal Windows Platform in .net Standard 2.1?\" (#1590)"},{"Id":"502601357","IsPullRequest":true,"CreatedAt":"2019-10-04T12:26:51","Actor":"dotnet-maestro[bot]","Number":"1589","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191003.5\r\n- **Date Produced**: 10/4/2019 1:12 AM\r\n- **Commit**: eff9fbf446468ca411bf5e0475916f316eea7223\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19503.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1589)"},{"Id":"502231307","IsPullRequest":false,"CreatedAt":"2019-10-03T18:40:35","Actor":"lucbueno54","Number":"1588","RawContent":null,"Title":"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation","State":"open","Body":"Create references to two net462 projects in NETStandard and enable automatic nuget generation (GeneratePackageOnBuild = true). \r\n\r\nAn important detail that is AssemblyName is different from the csproj file. \r\n\r\nExample: \r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Nuget.NetStandardClassLibrary</id>\r\n    <version>19.9.0</version>\r\n    <authors>Nuget.NetStandardClassLibrary</authors>\r\n    <owners>Nuget.NetStandardClassLibrary</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Package Description</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"nuget.AnotherStandardClassLibrary\" version=\"198.0.0\" exclude=\"Build,Analyzers\" />    <= NETStandard\r\n        <dependency id=\"FrameworkClassLibrary\" version=\"1.0.0\" exclude=\"Build,Analyzers\" /> <= net462 \r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n\r\n\r\nhttps://github.com/lucbueno54/dotnetStandardReferencesTest ","Url":"https://github.com/dotnet/standard/issues/1588","RelatedDescription":"Open issue \"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation\" (#1588)"},{"Id":"502031073","IsPullRequest":true,"CreatedAt":"2019-10-03T12:29:49","Actor":"dotnet-maestro[bot]","Number":"1587","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191002.6\r\n- **Date Produced**: 10/3/2019 2:33 AM\r\n- **Commit**: c8c2917540a568869ba761afa6e4dba6edeb433b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19502.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1587","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1587)"},{"Id":"502022842","IsPullRequest":true,"CreatedAt":"2019-10-03T12:11:49","Actor":"dotnet-maestro[bot]","Number":"1586","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191002.11\r\n- **Date Produced**: 10/2/2019 11:34 PM\r\n- **Commit**: da75c6547c64a91eb8a9cecf8c503331c2cc394a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19502.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1586)"},{"Id":"501454733","IsPullRequest":true,"CreatedAt":"2019-10-02T12:30:46","Actor":"dotnet-maestro[bot]","Number":"1585","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191001.13\r\n- **Date Produced**: 10/2/2019 4:05 AM\r\n- **Commit**: dcc9f626eeb0751d4ba4499f623aac42d2e95c10\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19501.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19501.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19501.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1585","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1585)"},{"Id":"501445824","IsPullRequest":true,"CreatedAt":"2019-10-02T12:11:47","Actor":"dotnet-maestro[bot]","Number":"1584","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191001.4\r\n- **Date Produced**: 10/1/2019 10:24 PM\r\n- **Commit**: c21a409f11386d22c6083198176868d3974de832\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19501.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1584)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"508229406","IsPullRequest":true,"CreatedAt":"2019-10-17T04:39:14","Actor":"ahsonkhan","Number":"41845","RawContent":null,"Title":"Use Sse2 instrinsics to make NeedsEscaping check faster for large JSON strings","State":"open","Body":"Here's the whole analysis and experimentation of different alternatives with benchmark results: https://gist.github.com/ahsonkhan/c566f5e7d65c1fde5a83a67be290c4ee\r\n\r\nIgnore the uap target changes (they were borrowed from https://github.com/dotnet/corefx/pull/41759) since it was happening anyway and I am not yet sure if its worth the effort to create different constants for uap (since intrinsics aren't built for that configuration).\r\n\r\nHere's the conclusion and next steps.\r\n\r\n## Conclusions:\r\nHere's a summary of the results when the user doesn't customize the encoder via the `JsonSerializerOptions` or `JsonWriterOptions` (i.e. uses the default encoder behavior).\r\n1) For end-to-end scenario (such as serializing commonly found objects/payloads), there is a 10-20% improvement.\r\n2) Writing relatively large JSON strings using the writer got ~30% faster (i.e. greater than 16 characters).\r\n3) Checking for escaping strings that are less than 8 characters is ~20-50% slower, but larger strings (i.e. greater than 16 character) got 2-3x faster.\r\n4) If a character is found that needs escaping within the first 8 characters, there is a 20-90% regression. Otherwise, there is a a 2-3x performance improvement depending on where the first character that needs escaping is found (say index greater than 16).\r\n\r\n## Next Steps:\r\n~1) Add similar support and tests for UTF-8 bytes, not just UTF-16 characters.~\r\n2) Evaluate if the trade-off is worth it for property names which tend to be small (2-8 characters), compared to values.\r\n3) Consider optimizing the commonly used built-in `JavascriptEncoder` statics using similar techniques.\r\n4) Apply non-Sse2 based optimizations where Sse2 isn't supported rather than processing one character at a time.\r\n5) Rather than returning the first index to escape, return the whole mask and escape all characters that need to be escaped at once (within the block of 8) and return back to the \"fast\" non-escaping path, rather than writing one character at a time whenever a single character is found that needs escaping.\r\n\r\ncc @steveharter, @tannergooding, @GrabYourPitchforks ","Url":"https://github.com/dotnet/corefx/pull/41845","RelatedDescription":"Open PR \"Use Sse2 instrinsics to make NeedsEscaping check faster for large JSON strings\" (#41845)"},{"Id":"508158064","IsPullRequest":true,"CreatedAt":"2019-10-17T02:47:01","Actor":"Marusyk","Number":"41842","RawContent":null,"Title":"Store Description value of ConfigurationProperty","State":"closed","Body":"It seems that description parameter isn't used:\r\nhttps://github.com/dotnet/corefx/blob/58a4d24eb808936f7dc61e68265e968291470b42/src/System.Configuration.ConfigurationManager/src/System/Configuration/ConfigurationProperty.cs#L56-L67\r\n\r\nbut according to [docs](https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationproperty.-ctor?view=netframework-4.8#System_Configuration_ConfigurationProperty__ctor_System_String_System_Type_System_Object_System_ComponentModel_TypeConverter_System_Configuration_ConfigurationValidatorBase_System_Configuration_ConfigurationPropertyOptions_System_String_) it should\r\n\r\nPlease review and let me know if code authors intentionally don't use it or it is a bug\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/41842","RelatedDescription":"Closed or merged PR \"Store Description value of ConfigurationProperty\" (#41842)"},{"Id":"507713573","IsPullRequest":true,"CreatedAt":"2019-10-17T02:18:34","Actor":"dotnet-maestro[bot]","Number":"41820","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191016.2\r\n- **Date Produced**: 10/16/2019 8:55 PM\r\n- **Commit**: 617091aa904c74fe8a42cebf7fcb56677c60c079\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview2.19516.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview2.19516.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview2.19516.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41820","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#41820)"},{"Id":"508174017","IsPullRequest":true,"CreatedAt":"2019-10-17T01:00:27","Actor":"stephentoub","Number":"41844","RawContent":null,"Title":"Add back TraceListener handling for Callstack/LogicalOperationStack","State":"open","Body":"For .NET Core 2.0, PR https://github.com/dotnet/corefx/pull/13320 added back TraceOptions.Callstack and TraceOptions.LogicalOperationStack, but it didn't add back the code in TraceListener.WriteFooter that respects these options.    Then PR https://github.com/dotnet/corefx/pull/18185 added back checking for TraceOptions.LogicalOperationStack in DelimitedListTraceListener.WriteFooter, but for some reason didn't do so for TraceOptions.Callstack.\r\n\r\nThis adds back the handling for both, copying the product code from reference source.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/41837\r\ncc: @safern","Url":"https://github.com/dotnet/corefx/pull/41844","RelatedDescription":"Open PR \"Add back TraceListener handling for Callstack/LogicalOperationStack\" (#41844)"},{"Id":"508160446","IsPullRequest":true,"CreatedAt":"2019-10-17T00:04:21","Actor":"Marusyk","Number":"41843","RawContent":null,"Title":"Fix possible NRE in DirectoryEntry from System.DirectoryServices","State":"open","Body":"https://github.com/dotnet/corefx/blob/b49a8a9be1d53cd9e50cb68fd8540be25c65d433/src/System.DirectoryServices/src/System/DirectoryServices/DirectoryEntry.cs#L983-L991\r\nIn the method, there's a check `propertyNames != null`. But above you can see a few access operations by this potentially null reference — `propertyNames.Length` and `propertyNames[i]`. The result is quite predictable — the occurrence of an exception of the `NullReferenceExcepption` type in case if a null reference is passed to the method.\r\n\r\nAs a `RefreshCache` is a public method in the public class then we can do this to break it down:\r\n```csharp\r\nDirectoryEntry de = new DirectoryEntry();\r\nde.RefreshCache(null);\r\n```\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/41843","RelatedDescription":"Open PR \"Fix possible NRE in DirectoryEntry from System.DirectoryServices\" (#41843)"},{"Id":"508156382","IsPullRequest":false,"CreatedAt":"2019-10-16T23:49:08","Actor":"cyperous","Number":"41841","RawContent":null,"Title":"FileSystemWatcher does not fire events on MacOS when NotifyFilter = LastAccess","State":"open","Body":"MacOS Versions tested: Mojave 10.14, Catalina 10.15\r\n\r\nCode used.\r\n\r\n```\r\n     using (var watcher = new FileSystemWatcher (Directory.GetCurrentDirectory (), \"*.txt\")) {\r\n            watcher.IncludeSubdirectories = true;\r\n            watcher.NotifyFilter = NotifyFilters.LastAccess;\r\n\r\n            watcher.Changed += (sender, e) => {\r\n               Console.WriteLine (e.FullPath);\r\n            };\r\n\r\n            watcher.EnableRaisingEvents = true;\r\n\r\n            // Wait for the user to quit the program.\r\n            Console.WriteLine (\"Press 'q' to quit the sample.\");\r\n            while (Console.Read () != 'q');\r\n         }\r\n```\r\nif I run cat sometextfile.txt, the event in the code above is never fired.\r\n\r\nAlternate Code that works in Mojave but not in Catalina\r\n\r\n ```\r\n public abstract class AccessTime {\r\n      public abstract DateTime GetLastAccessTime (string filename);\r\n   }\r\n\r\n   public class AccessTimeUnix : AccessTime {\r\n      public override DateTime GetLastAccessTime (string filename) {\r\n         return new Mono.Unix.UnixFileInfo (filename).LastAccessTime;\r\n      }\r\n   }\r\n\r\n   public class AccessTimeWindows : AccessTime {\r\n      public override DateTime GetLastAccessTime (string filename) {\r\n         FileInfo temp = new FileInfo (filename);\r\n         temp.Refresh ();\r\n         return temp.LastAccessTime;\r\n      }\r\n   }\r\n\r\npublic static AccessTime _accessTime;\r\n\r\npublic static void Main (string [] args) {\r\n         if (Environment.OSVersion.Platform ==  PlatformID.Unix) {\r\n            _accessTime = new AccessTimeUnix ();\r\n         } else {\r\n            _accessTime = new AccessTimeWindows ();  \r\n         }\r\n\r\n        DateTime currentTime = _accessTime.GetLastAccessTime (\"sometextfile.txt\");\r\n\r\n        File.ReadAllText (\"sometextfile.txt\")\r\n\r\n        DateTime newTime = _accessTime.GetLastAccessTime (\"sometextfile.txt\");\r\n\r\n        //Note currentTime and newTime will be different\r\n}\r\n```\r\n\r\nBy using the technique above I can run a loop continuing to watch for files that are being read but not changed because the LastAccessTime is changing.\r\n\r\nFor some reason on Catalina, the LastAccessTime is not being updated not sure why it's probably a bug in Catalina.","Url":"https://github.com/dotnet/corefx/issues/41841","RelatedDescription":"Open issue \"FileSystemWatcher does not fire events on MacOS when NotifyFilter = LastAccess\" (#41841)"},{"Id":"508153774","IsPullRequest":false,"CreatedAt":"2019-10-16T23:38:48","Actor":"saucecontrol","Number":"41840","RawContent":null,"Title":"API Proposal: Avx.CompareXXX convenience methods for float/double","State":"open","Body":"## Background\r\n\r\nFor SSE/SSE2, Intel defined convenience intrinsics for all float comparison pseudo-ops, which map to CMPPS/CMPPD (and CMPSS/CPMSD) with different control values.\r\n\r\nFor example:\r\n\r\n```\r\n__m128 _mm_cmpeq_ps (__m128 a, __m128 b)\r\n#include <xmmintrin.h>\r\nInstruction: cmpps xmm, xmm, imm\r\nCPUID Flags: SSE\r\n```\r\n\r\nWhich is exposed in System.Runtime.Intrinsics as:\r\n\r\n```C#\r\n/// <summary>\r\n/// __m128 _mm_cmpeq_ps (__m128 a,  __m128 b)\r\n///   CMPPS xmm, xmm/m128, imm8(0)\r\n/// </summary>\r\npublic static Vector128<float> CompareEqual(Vector128<float> left, Vector128<float> right)\r\n```\r\n\r\nThis gives API parity between the integer and floating point types, which combined with the inheritance in the S.R.I API makes `CompareEqual` overloads for all primitive numeric types available from e.g. `Sse41`\r\n\r\nIn AVX, the control value was extended to support more flag values for float comparisons, and Intel dropped the `_mm256` forms of those convenience intrinsics.\r\n\r\nThe Intel intrinsics were mirrored in S.R.I, meaning that from `Avx2`, `CompareEqual` has overloads that accept `Vector128<T>` of all 10 primitive numeric types but only 8 of the 10 (integer only) for `Vector256<T>`.\r\n\r\n\r\n## Rationale\r\n\r\nAlthough the current API does mirror the Intel intrinsics, it makes the API less discoverable for .NET users due to the inconsistency.  Additionally, it can be difficult to grok the behavior of the float comparison flags, meaning it can be difficult/confusing to map the SSE Methods to their AVX equivalents.\r\n\r\nGiven the ease with which we can write code for different ISAs in .NET, achieving parity between SSE code and AVX code is a common goal.\r\n\r\n```C#\r\nif (Sse.IsSupported && !Avx.IsSupported)\r\n{\r\n    Vector128<float> vec1, vec2;\r\n    /// ... do some stuff\r\n    var mask = Sse.GreaterThan(vec1, vec2);\r\n    /// ... use the mask\r\n}\r\nelse if (Avx.IsSupported)\r\n{\r\n    Vector256<float> vec1, vec2;\r\n    /// ... do some stuff\r\n    var mask = Avx.Compare(vec1, vec2, FloatComparisonMode.OrderedGreaterThanNonSignaling); // ???\r\n    /// ... use the mask\r\n}\r\n```\r\n\r\nForgiving the awkward ordering of the conditions there, how does a dev know which of the 4 GreaterThan variants is equivalent to the one used in the `Sse` branch?  Or should that be one of the NotLessThanOrEqual variants?  The code would read better if it could use `Avx.GreaterThan` to express the same behavior just on the wider vector.\r\n\r\n## Proposal\r\n\r\nIt would be nice to add a set of convenience overloads for AVX that mirror the SSE float psuedo-ops. These could have managed-only implementations that invoke `Avx.Compare` with the correct `FloatComparisonMode`\r\n\r\n```diff\r\npublic abstract class Avx : Sse41\r\n{\r\n+    public static Vector256<float> CompareEqual(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareEqual(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareGreaterThan(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareGreaterThan(Vector256<double> left,  Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareGreaterThanOrEqual(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareGreaterThanOrEqual(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareLessThan(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareLessThan(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareLessThanOrEqual(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareLessThanOrEqual(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareNotEqual(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareNotEqual(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareNotGreaterThan(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareNotGreaterThan(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareNotGreaterThanOrEqual(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareNotGreaterThanOrEqual(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareNotLessThan(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareNotLessThan(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareNotLessThanOrEqual(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareNotLessThanOrEqual(Vector256<double> left, Vector256<double> right);\r\n\r\n     // The justification for these is questionable as the equivalent FloatComparisonMode is obvious.\r\n+    public static Vector256<float> CompareOrdered(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareOrdered(Vector256<double> left, Vector256<double> right);\r\n\r\n+    public static Vector256<float> CompareUnordered(Vector256<float> left, Vector256<float> right);\r\n+    public static Vector256<double> CompareUnordered(Vector256<double> left, Vector256<double> right);\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41840","RelatedDescription":"Open issue \"API Proposal: Avx.CompareXXX convenience methods for float/double\" (#41840)"},{"Id":"508147042","IsPullRequest":false,"CreatedAt":"2019-10-16T23:13:57","Actor":"pranavkm","Number":"41839","RawContent":null,"Title":"[System.Text.Json] Null ref when attempting to deserialize an json object as an array","State":"open","Body":"Ran in to this by accident. Not entirely sure if it's already fixed \\ tracked since there's a few that are pretty similar to this one:\r\n\r\n```C#\r\nusing System.Text.Json;\r\n\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var json = JsonSerializer.Deserialize<int[]>(\"{ \\\"a\\\": \\\"b\\\" }\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\nUnhandled exception. System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Text.Json.JsonClassInfo.GetProperty(ReadOnlySpan`1 propertyName, ReadStackFrame& frame)\r\n   at System.Text.Json.JsonSerializer.HandlePropertyName(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/41839","RelatedDescription":"Open issue \"[System.Text.Json] Null ref when attempting to deserialize an json object as an array\" (#41839)"},{"Id":"508131501","IsPullRequest":true,"CreatedAt":"2019-10-16T22:25:40","Actor":"carlossanlop","Number":"41838","RawContent":null,"Title":"Add pipe creation extension methods that take an ACL","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41657","Url":"https://github.com/dotnet/corefx/pull/41838","RelatedDescription":"Open PR \"Add pipe creation extension methods that take an ACL\" (#41838)"},{"Id":"508121285","IsPullRequest":false,"CreatedAt":"2019-10-16T21:58:05","Actor":"ericjohannsen","Number":"41837","RawContent":null,"Title":"TraceOptions.Callstack ignored","State":"open","Body":"Consider the following static method called from the Main method of a console project:\r\n\r\n```\r\nstatic void TraceTest()\r\n{\r\n    Trace.Listeners.Clear();\r\n\r\n    TextWriterTraceListener tl = new TextWriterTraceListener(Console.Out);\r\n    tl.TraceOutputOptions = TraceOptions.DateTime | TraceOptions.Callstack;\r\n\r\n    Trace.Listeners.Add(tl);\r\n\r\n    Trace.TraceWarning(\"Alert\");\r\n}\r\n```\r\n\r\nIf the console project is .NET Framework, the stack trace is included:\r\n\r\n> TraceConsFwk.exe Warning: 0 : Alert\r\n>     DateTime=2019-10-16T21:53:58.7416455Z\r\n>     Callstack=   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n>    at System.Environment.get_StackTrace()\r\n>    at System.Diagnostics.TraceEventCache.get_Callstack()\r\n>    at System.Diagnostics.TraceListener.WriteFooter(TraceEventCache eventCache)\r\n>    at System.Diagnostics.TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)\r\n>    at System.Diagnostics.TraceInternal.TraceEvent(TraceEventType eventType, Int32 id, String format, Object[] args)\r\n>    at System.Diagnostics.Trace.TraceWarning(String message)\r\n>    at Testing.TraceTestX.TraceTest() in C:\\Users\\Eric\\source\\repos\\GcMon\\TraceConsFwk\\Program.cs:line 23\r\n>    at Testing.TraceTestX.Main() in C:\\Users\\Eric\\source\\repos\\GcMon\\TraceConsFwk\\Program.cs:line 28\r\n\r\nHowever, if the console project is .NET Core, the stack trace is absent:\r\n\r\n> GcMon Warning: 0 : Alert\r\n>     DateTime=2019-10-16T21:52:26.1178378Z\r\n\r\nExpected: The TraceOptions.Callstack flag is respected on .NET Core.\r\n\r\nTested with .NET Core 3.0 in VS 2019.","Url":"https://github.com/dotnet/corefx/issues/41837","RelatedDescription":"Open issue \"TraceOptions.Callstack ignored\" (#41837)"},{"Id":"507990101","IsPullRequest":true,"CreatedAt":"2019-10-16T21:28:35","Actor":"stephentoub","Number":"41831","RawContent":null,"Title":"Improve error when socket ValueTask consumed incorrectly","State":"closed","Body":"Related to https://github.com/dotnet/corefx/issues/41830","Url":"https://github.com/dotnet/corefx/pull/41831","RelatedDescription":"Closed or merged PR \"Improve error when socket ValueTask consumed incorrectly\" (#41831)"},{"Id":"508066516","IsPullRequest":true,"CreatedAt":"2019-10-16T21:21:52","Actor":"wtgodbe","Number":"41835","RawContent":null,"Title":"Don't tie Platform Package version to Product version","State":"closed","Body":"Decouples the platforms package version from the product version, as we only want to increment this version when we ship changes to it. Unblocks https://github.com/dotnet/core-setup/pull/8554\r\n\r\nCC @ericstj @safern @joperezr @mmitche ","Url":"https://github.com/dotnet/corefx/pull/41835","RelatedDescription":"Closed or merged PR \"Don't tie Platform Package version to Product version\" (#41835)"},{"Id":"508086051","IsPullRequest":false,"CreatedAt":"2019-10-16T20:38:25","Actor":"scalablecory","Number":"41836","RawContent":null,"Title":"HttpClient.DefaultRequestVersion of HTTP/2 is not honored if using SendAsync","State":"open","Body":"This will send a request via HTTP/1.1:\r\n\r\n```c#\r\nvar client = new HttpClient() { DefaultRequestVersion = HttpVersion.Version20 };\r\nvar msg = new HttpRequestMessage { Method = HttpMethod.Get, RequestUri = new Uri(\"https://contoso.com\") };\r\nclient.SendAsync(msg);\r\n```\r\n\r\nThe default version is only being used for the convenience methods (`GetAsync` etc.).","Url":"https://github.com/dotnet/corefx/issues/41836","RelatedDescription":"Open issue \"HttpClient.DefaultRequestVersion of HTTP/2 is not honored if using SendAsync\" (#41836)"},{"Id":"507871834","IsPullRequest":false,"CreatedAt":"2019-10-16T19:29:35","Actor":"MarkusBrgr","Number":"41826","RawContent":null,"Title":".Net Core 3.0 CredentialCache empty","State":"closed","Body":"\r\nWhen accessing the `CredentialCache.DefaultCredentials` or `CredentialCache.DefaultNetworkCredentials` both returned Credentials are empty.\r\n\r\n### Code to Reproduce:\r\n\r\nThis code produces 2 empty Credentials:\r\n```c#\r\nclass Program {\r\n    static void Main(string[] args) {\r\n\r\n        var defaultCred = CredentialCache.DefaultCredentials;\r\n        var defaultNetCred = CredentialCache.DefaultNetworkCredentials;\r\n\r\n    }\r\n}\r\n```\r\n\r\nI expected to get at least one Credentials to be filled with my User-Credentials.\r\n\r\nThis Code has been tested in .net Core 3.0 and .net Framework 4.7.1 on Windows 7 and Windows 10.","Url":"https://github.com/dotnet/corefx/issues/41826","RelatedDescription":"Closed issue \".Net Core 3.0 CredentialCache empty\" (#41826)"},{"Id":"508042925","IsPullRequest":true,"CreatedAt":"2019-10-16T19:08:49","Actor":"carlossanlop","Number":"41834","RawContent":null,"Title":"Add file and directory creation methods that take an ACL","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41614\r\n\r\n@JeremyKuhne ","Url":"https://github.com/dotnet/corefx/pull/41834","RelatedDescription":"Open PR \"Add file and directory creation methods that take an ACL\" (#41834)"},{"Id":"508034816","IsPullRequest":true,"CreatedAt":"2019-10-16T18:52:16","Actor":"eiriktsarpalis","Number":"41833","RawContent":null,"Title":"HttpStress: add a yaml pipeline","State":"open","Body":"This PR introduces the following changes\r\n\r\n* Adds a first iteration of an [AzDops stress testing job](https://dev.azure.com/dnceng/public/_build/results?buildId=390120) which uses corefx bits built from source.\r\n\r\n* Makes changes to the `load-corefx-testhost.*` scripts. In particular the logic will now copy the aspnetcore runtime bits from the bootstrap sdk to the `testhost` shared folder. While I'm not the biggest fan of this approach, it's an orthogonal change to our CI infrastructure and I can maintain it until a better alternative comes along.","Url":"https://github.com/dotnet/corefx/pull/41833","RelatedDescription":"Open PR \"HttpStress: add a yaml pipeline\" (#41833)"},{"Id":"508029040","IsPullRequest":true,"CreatedAt":"2019-10-16T18:41:05","Actor":"safern","Number":"41832","RawContent":null,"Title":"Move analyzers restore to a .depproj to follow arcade Tools.proj convention","State":"open","Body":"More info on why this is better here: https://github.com/dotnet/arcade/pull/4124\r\n\r\nWe want to avoid bringing SDK targets in Tools.proj restore... more details here: https://github.com/dotnet/arcade/issues/4102\r\n\r\nThis unblocks arcade update.\r\n\r\nFYI: @stephentoub","Url":"https://github.com/dotnet/corefx/pull/41832","RelatedDescription":"Open PR \"Move analyzers restore to a .depproj to follow arcade Tools.proj convention\" (#41832)"},{"Id":"507814178","IsPullRequest":true,"CreatedAt":"2019-10-16T17:58:46","Actor":"dotnet-maestro[bot]","Number":"41824","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191015.3\r\n- **Date Produced**: 10/16/2019 12:55 AM\r\n- **Commit**: 535984200521b3e8dd1338bbc4d50b1617fb077a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19515.3\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41824","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41824)"},{"Id":"507969946","IsPullRequest":false,"CreatedAt":"2019-10-16T16:47:19","Actor":"azhmur","Number":"41830","RawContent":null,"Title":"Unhandled exception AwaitableSocketAsyncEventArgs.s_availableSentinel at PerformIOCompletionCallback","State":"open","Body":"We have number of Kestrel Asp.net MVC Core 3.0.100 hosts and SocketHttpHandler backed HttpClients looking at them all in same process. Most of them using Http1.1 unsecure. Sometimes unhandled exception occurs which results in process termination. It seems like our code is not involved and there is tricky racing in SocketHttpHandler/Socket.Tasks. Can anyone provide hints how we can diagnose it further?\r\n\r\n```\r\nSystem.Exception: s_availableSentinel\r\n   at void System.Net.Sockets.Socket+AwaitableSocketAsyncEventArgs.s_availableSentinel(object state)\r\n   at void System.Net.Sockets.Socket+AwaitableSocketAsyncEventArgs.InvokeContinuation(Action<object> continuation, object state, bool forceAsync, bool requiresExecutionContextFlow)\r\n   at void System.Net.Sockets.Socket+AwaitableSocketAsyncEventArgs.OnCompleted(SocketAsyncEventArgs _)\r\n   at void System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, NativeOverlapped* pNativeOverlapped)\r\n```","Url":"https://github.com/dotnet/corefx/issues/41830","RelatedDescription":"Open issue \"Unhandled exception AwaitableSocketAsyncEventArgs.s_availableSentinel at PerformIOCompletionCallback\" (#41830)"},{"Id":"507934907","IsPullRequest":true,"CreatedAt":"2019-10-16T16:25:46","Actor":"MihaZupan","Number":"41829","RawContent":null,"Title":"Improve ConfigurableArrayPool's Bucket Rent/Release codegen","State":"closed","Body":"Functionally exactly the same, just yields better codegen according to [SharpLab](https://sharplab.io/#v2:C4LghgzgtgPgAgBgARwIwDoAqALATgUzABMBLAOwHMBuAWACh7ElNMBPAB3yQF4UMBJMsADMAJloM65YPlxkwAGyQRCC/ERSikAIQCuAYwDW+YPQDe9JFaTTZ8pQWIB7MgtY2hSAPoAjXQDN/WQAZfEpgbAlrJHZcEgA3MBkkRyIXN2Y2TgBtAF087z9A2QgJS2tYhKSuAGV2cmCnI28FJsMoirjE5OlvciJ8AA8Oq3KrWzlFHQNjYAAKXqKg3FDw7AAaD2AkMl0oH1kAeX89YtwIAEoxpAs6aOivVubeMnwAdyQ6hra5i5H73wBZYQHg7d6ZDj4bK7fZHE5Akr5XL/B5LEJhCgRUFolYYiL/AC+12uE3sEJyuSQACUwvMrndrLd7tYWJC8gUcSDeICzqVrtFWRSkDjQbsFAoUdZ+dYfE4nEonoZMGBjGRQf5FCpNoontVTst1Zr8JKrMBcKxpVYmcyAYr0ABRISyOYEfxIRXK1V/eiW+4kN1zLz9IZIAA8woR53Qq0x2HpNvu1oTzJFvE52SDZAGg2RvoT6cz2YA1EXKS9dOKTcmdU09ZHsfXuOXK3nrESGcz2wn/OQdRaO4nW+MAx6VWELi02g7BiR5hqFCpvQPol2bb7/Ug5jX9HWzvGbUnk6mwR9BVCecsYxFc8u2z7b1Y4AB2CNnQkkp2TJRngo0oSiX5rkPAUsihSljzFCVfV9WV5XdNpPTCQ0F3wbVxVrGR9VkZCVCrM1+wTYCbR/JFX2BUELxKKsHjtR0ZFwF18DdUcvWoqUH2TXpg0GCjuLY5kNzmOZdGkC5uLDTcRKEC5OWjPE4yHQcOOTGVGzIkpsm4m8VJU9MtNFCsoOUnTCyGEt+OrdCd0wtSRRIEFIIsldfVXZke3sNxfSIgSRwQscyAnR4p3tGc5yNJcE1c+51wDbdd2WfdmW8+4IPBH9KNxNZtJtdtfWfdTcHfAcP3osk4AAFmpExdDkOYSKQMBcFwMBWESm4YLlBU/NVHDjV9fCvMUoKjAdT9GOY7rxzKYzh03UyeIAQl4BA2sIxTUUjCBsgAWm2+aywapqWosqLnI49y+0GmabF8oxEICycRpC2c5nnRcqyiqLSSmCqquAGqyAA+rGua1qgI6uCWKQ3g3r6jiBo45KaOCsbXXgu7/IinTFK4rMQ25PicYDcSlqQFbFKRm1uN2pzrAyrb9N4EHjvWunqe2k6XN9C7xQIg8ic3KGHuGwxpxe2Gsc7a52wJIA).","Url":"https://github.com/dotnet/corefx/pull/41829","RelatedDescription":"Closed or merged PR \"Improve ConfigurableArrayPool's Bucket Rent/Release codegen\" (#41829)"},{"Id":"507893253","IsPullRequest":true,"CreatedAt":"2019-10-16T16:12:31","Actor":"stephentoub","Number":"41827","RawContent":null,"Title":"Make ShellExecuteOnSTAThread's thread a background thread","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/41827","RelatedDescription":"Closed or merged PR \"Make ShellExecuteOnSTAThread's thread a background thread\" (#41827)"},{"Id":"507919120","IsPullRequest":false,"CreatedAt":"2019-10-16T15:14:53","Actor":"Tratcher","Number":"41828","RawContent":null,"Title":"Kestrel Web Server completely broken when TLS 1.3 is enabled; having TLS 1.2 enabled doesn't help","State":"open","Body":"_From @jhudsoncedaron on Tuesday, October 15, 2019 11:12:16 PM_\r\n\r\n### Describe the bug\r\nKestrel Web Server completely broken when TLS 1.3 is enabled. Firefox reports PR_END_OF_FILE_ERROR, and the only working client is net core's own HttpClient. Failing clients: Firefox, IE, openssl s_client, Edge (Edge's failure appears to be no TLS 1.3 but I can't really tell).\r\n\r\n### Expected behavior\r\nIt just works.\r\n\r\n### Additional context\r\n```\r\n      Request starting HTTP/1.1 GET http://localhost:5104/Heartbeat/Pulse  \r\ninfo: Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker[3]\r\n      Route matched with {action = \"Pulse\", controller = \"Heartbeat\", area = \"\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Pulse() on controller Cedaron.FormBuilder.Presentation.Controllers.HeartbeatController (Cedaron.FormBuilder.Presentation).\r\ninfo: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]\r\n      Executing HttpStatusCodeResult, setting HTTP status code 204\r\ninfo: Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker[2]\r\n      Executed action Cedaron.FormBuilder.Presentation.Controllers.HeartbeatController.Pulse (Cedaron.FormBuilder.Presentation) in 1.2453ms\r\ninfo: Microsoft.AspNetCore.Hosting.Diagnostics[2]\r\n      Request finished in 2.4098ms 204 \r\nfail: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unhandled exception while processing 0HLQHOG2JCIDM.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Buffer.Memmove(Byte& dest, Byte& src, UInt64 len)\r\n   at System.Net.Security.SafeDeleteContext.AcceptSecurityContext(SafeFreeCredentials& inCredentials, SafeDeleteContext& refContext, ContextFlags inFlags, Endianness endianness, ReadOnlySpan`1 inSecBuffers, SecurityBuffer& outSecBuffer, ContextFlags& outFlags)\r\n   at System.Net.SSPISecureChannelType.AcceptSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, ReadOnlySpan`1 inputBuffers, ContextFlags inFlags, Endianness endianness, SecurityBuffer& outputBuffer, ContextFlags& outFlags)\r\n   at System.Net.SSPIWrapper.AcceptSecurityContext(SSPIInterface secModule, SafeFreeCredentials credential, SafeDeleteContext& context, ContextFlags inFlags, Endianness datarep, ReadOnlySpan`1 inputBuffers, SecurityBuffer& outputBuffer, ContextFlags& outFlags)\r\n   at System.Net.Security.SslStreamPal.AcceptSecurityContext(SafeFreeCredentials& credentialsHandle, SafeDeleteContext& context, ArraySegment`1 input, Byte[]& outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n   at System.Net.Security.SecureChannel.GenerateToken(Byte[] input, Int32 offset, Int32 count, Byte[]& output)\r\n   at System.Net.Security.SecureChannel.NextMessage(Byte[] incoming, Int32 offset, Int32 count)\r\n   at System.Net.Security.SslStream.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslStream.ThrowIfExceptional()\r\n   at System.Net.Security.SslStream.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_1(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.KestrelConnection.ExecuteAsync()\r\n```\r\n\r\nInclude the output of `dotnet --info`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#15041_","Url":"https://github.com/dotnet/corefx/issues/41828","RelatedDescription":"Open issue \"Kestrel Web Server completely broken when TLS 1.3 is enabled; having TLS 1.2 enabled doesn't help\" (#41828)"},{"Id":"507826688","IsPullRequest":false,"CreatedAt":"2019-10-16T12:42:17","Actor":"zachsaw","Number":"41825","RawContent":null,"Title":"System.Text.Json does not serialize values in Dictionary<string, IInterface>","State":"open","Body":"Serializing `Dictionary<string, IInterface>` causes the output to be like Dictionary with null values when they're not nulls.\r\n\r\ne.g.\r\n```C#\r\n    JsonSerializer.Serialize(new Dictionary<string, IFoo> {{\"test\", new Foo {X = 100}}});\r\n\r\n    public class Foo : IFoo\r\n    {\r\n        public int X { get; set; }\r\n    }\r\n\r\n    public interface IFoo\r\n    {\r\n    }\r\n```\r\n\r\nWrong output:\r\n```\r\n{\"test\":{}}\r\n```\r\n\r\nNewtonsoft produces the correct output:\r\n```\r\n{\"test\":{\"X\":100}}\r\n```\r\n\r\nIf you explicitly cast Value to object, serialization works correctly.\r\ne.g. \r\n```C#\r\nJsonSerializer.Serialize(new Dictionary<string, IFoo> {{\"test\", new Foo {X = 100}}}\r\n.ToDictionary(kvp => kvp.Key, kvp => (object) kvp.Value));\r\n```\r\n\r\nCorrect output:\r\n```\r\n{\"test\":{\"x\":100}}\r\n```","Url":"https://github.com/dotnet/corefx/issues/41825","RelatedDescription":"Open issue \"System.Text.Json does not serialize values in Dictionary<string, IInterface>\" (#41825)"},{"Id":"507795780","IsPullRequest":false,"CreatedAt":"2019-10-16T11:40:31","Actor":"vishwas-trivedi","Number":"41823","RawContent":null,"Title":"TransformBlock's MaxDegreeOfParallelism is not working as expected","State":"open","Body":"**Problem Definition**\r\n\r\nI'm trying to execute multiple Async tasks in parallel by using TransformBlock in ASP.NET core API.\r\nThe problem that I'm facing is if I set MaxDegreeOfParallelism to 1, it executes multiple messages in parallel but as per my understanding it should only execute 1 message at a time because MaxDegreeOfParallelism is set to 1.\r\n\r\nMy code looks like following :\r\n\r\n    public static async Task<List<object>> ParallelTaskExecutor(object[] data, Func<object, Task<object>> taskToExecute, int maxDegreeOfParallelism, CancellationToken cancellationToken)\r\n    {\r\n        var options = new ExecutionDataflowBlockOptions()\r\n        {\r\n            CancellationToken = cancellationToken,\r\n            MaxDegreeOfParallelism = maxDegreeOfParallelism\r\n        };\r\n    \r\n        // Append task for parallel execution.\r\n        var workerBlock = new TransformBlock<object, Task<object>>(taskToExecute, options);\r\n        for (var index = 0; index < data.Length; index++)\r\n        {\r\n            workerBlock.Post(new object[] { data[index], options.CancellationToken,});\r\n        }\r\n    \r\n        // Get result of tasks as it finishes.\r\n        var finalResult = new List<object>();\r\n        for (var i = 0; i < data.Length; i++)\r\n        {\r\n            var result = await workerBlock.Receive().ConfigureAwait(false);\r\n            finalResult.Add(result);\r\n        }\r\n    \r\n        return finalResult;\r\n    }\r\n\r\n\r\nI tried adding log to check the execution flow and it produced flow as following :\r\n\r\n    Process start for task: 1\r\n    Process start for task: 2\r\n    Process start for task: 3\r\n    Process start for task: 4\r\n    \r\n    Process end for task: 4\r\n    Process end for task: 3\r\n    Process end for task: 2\r\n    Process end for task: 1\r\n\r\n\r\nAbove log shows that all the tasks are started in parallel and ended in the same sequence.\r\nI also tried replacing TransformBlock with ActionBlock just for the sake of confirmation and flow is as following :\r\n\r\n    Process start for task: 1\r\n    Process end for task: 1\r\n    \r\n    Process start for task: 2\r\n    Process end for task: 2\r\n    \r\n    Process start for task: 3\r\n    Process end for task: 3\r\n    \r\n    Process start for task: 4\r\n    Process end for task: 4\r\n\r\nwhich is expected out put because MaxDegreeOfParallelism is set to 1 and thus task 2 should not start before task 1 finishes its job.\r\n\r\n_Note : Above tasks actually send HTTP request to specific server._\r\n\r\n**Expected Output**\r\nTask2 should not start until Task1 ends because MaxDegreeOfParalellism is set to 1, so it sould only execute 1 message at a time. Similar to ActionBlock.\r\n\r\n**Question**\r\nIs this expected behavior or is it a bug?","Url":"https://github.com/dotnet/corefx/issues/41823","RelatedDescription":"Open issue \"TransformBlock's MaxDegreeOfParallelism is not working as expected\" (#41823)"},{"Id":"507787801","IsPullRequest":false,"CreatedAt":"2019-10-16T11:23:12","Actor":"benaadams","Number":"41822","RawContent":null,"Title":"API: long Math.BigMult(long, long, out long)","State":"open","Body":"To return 128 bit result (as per `long BigMul(int a, int b)`)\r\n```csharp\r\npartial class Math\r\n{\r\n    ulong Math.BigMult(ulong a, ulong b, out ulong high);\r\n    long Math.BigMult(long a, long b, out long high);\r\n\r\n    ulong Math.MultHigh(ulong a, ulong b);\r\n    long Math.MultHigh(long a, long b);\r\n}\r\n```\r\nWhile it is what the asm does (i.e. `RDX:RAX ← RAX ∗ SRC`) the apis either use a 128bit value or the split pair.\r\n\r\nMSVC: \r\n```cpp\r\n__int64 _mul128(__int64 Multiplier, __int64 Multiplicand, __int64 *HighProduct)\r\n__int64 __mulh(__int64 a, __int64 b)\r\n```\r\nOthers use `*` overloading on a `__uint128_t` type\r\n\r\nNot sure best api shape (e.g. should it return a 128bit type `Vector128<long>`? /cc @tannergooding ","Url":"https://github.com/dotnet/corefx/issues/41822","RelatedDescription":"Open issue \"API: long Math.BigMult(long, long, out long)\" (#41822)"},{"Id":"507732609","IsPullRequest":false,"CreatedAt":"2019-10-16T09:34:21","Actor":"ViktorHofer","Number":"41821","RawContent":null,"Title":"Consolidate files which were split by tfms which aren't supported anymore","State":"open","Body":"In example `ProcessTests.netcoreapp.cs` should be consolidated with `ProcessTests.cs`. As we just removed UWP we have multiple places to clean-up.\r\n\r\ncc @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/41821","RelatedDescription":"Open issue \"Consolidate files which were split by tfms which aren't supported anymore\" (#41821)"},{"Id":"507660963","IsPullRequest":false,"CreatedAt":"2019-10-16T07:12:06","Actor":"neyromant","Number":"41819","RawContent":null,"Title":"System.Threading.Channels. Ability to delete an item from channel queue only after its successful processing.","State":"open","Body":"Hi,\r\nIs it possible to somehow organize reading from the System.Threading.Channel with confirmation?\r\nI want to read data from a channel, and if I could not process it, so that the data remains in the channel queue, for example, until the next processing attempt.\r\n```\r\nvar channel = Channel.CreateBounded<LogItem>(new BoundedChannelOptions(100)\r\n            {\r\n                FullMode = BoundedChannelFullMode.DropOldest,\r\n                AllowSynchronousContinuations = true,\r\n                SingleReader = true,\r\n                SingleWriter = false\r\n            });\r\n//...\r\nvar item = await channel.Reader.ReadAsync();\r\nawait DoSomeWorkOnItemAsync(item); //Now, if DoSomeWorkOnItemAsync throws exception, I will lose item\r\n```\r\nOf course, I can add an item to the top of the queue, but I need the old items that have not been processed to be pushed out of the queue when it is full.\r\n\r\nIs it possible for the channel to have an API like below?:\r\n```\r\nusing (PickedResult<LogItem> peekedItem = await channel.Reader.PeekAsync())\r\n{\r\n    await DoSomeWorkOnItemAsync(peekedItem.Value);\r\n    peekedItem.CommitRead(); // Confirmed read. Item removes from channel's queue\r\n}\r\n```\r\n\r\nThank you very much for your reply in advance.","Url":"https://github.com/dotnet/corefx/issues/41819","RelatedDescription":"Open issue \"System.Threading.Channels. Ability to delete an item from channel queue only after its successful processing.\" (#41819)"},{"Id":"507660309","IsPullRequest":false,"CreatedAt":"2019-10-16T07:10:27","Actor":"AriNuer","Number":"41818","RawContent":null,"Title":"Test failure: System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests","State":"open","Body":"Test `System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests` has failed\r\n\r\n```\r\n===========================================================================================================\r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>for /F %f in ('dir /b /s \"C:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Payload\\Runner\\\"|find /i /v \".pri\"') do @(set relPath=%f  & set relPath=!relPath:C:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Payload\\Runner\\=!  & if exist %f\\nul (if not exist !relPath! mkdir !relPath! )  else (if not exist !relPath! mklink /h !relPath! %f  1>NUL ) ) \r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>for /R \"C:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Payload\\UAPLayout\\\" %I in (*) do @if not exist \"%~nxI\" (mklink /H \"%~nxI\" \"%I\"  1>NUL ) \r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>copy /y \"C:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Payload\\UAPLayout\\System.Private.CoreLib.dll\" System.Private.CoreLib.ni.dll \r\n        1 file(s) copied.\r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>call \"C:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Payload\\Launcher\\WindowsStoreAppLauncher.exe\" -install appxmanifest.xml System.Runtime.Numerics.Tests.dll \r\nGot manifest file appxmanifest.xml\r\nRemoving any previous installation...\r\nInstalling the application...\r\nPackage Full Name is 5cd54353-3ed7-4a6e-a72f-db349f28867c_1.0.0.0_x64__v52bfwc2c21ha\r\n\r\nSUCCESS\r\nExitCode 100\r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>XUnitRunnerUap System.Runtime.Numerics.Tests.dll -xml \"C:\\Users\\runner\\AppData\\Local\\Packages\\5cd54353-3ed7-4a6e-a72f-db349f28867c_v52bfwc2c21ha\\LocalState\\System.Runtime.Numerics.Tests.xml\" -nologo -nocolor -notrait category=nonuaptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Runtime.Numerics.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Numerics.Tests (found 209 of 214 test cases)\r\n  Starting:    System.Runtime.Numerics.Tests (parallel test collections = on, max threads = 2)\r\nUnhandled exception. Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 850\r\nActual:   851\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 41\r\n   at Xunit.Assert.Equal[T](T expected, T actual) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\EqualityAsserts.cs:line 25\r\n   at System.Numerics.Tests.ToStringTest.VerifyExpectedStringResult(String expectedResult, String result) in /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs:line 1447\r\n   at System.Numerics.Tests.ToStringTest.VerifyToString(String test, String format, IFormatProvider provider, Boolean expectError, String expectedResult) in /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs:line 1431\r\n   at System.Numerics.Tests.ToStringTest.RunStandardFormatToStringTests(Random random, String format, String negativeSign, Int32 precision, StringFormatter formatter) in /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs:line 468\r\n   at System.Numerics.Tests.ToStringTest.<>c.<RunRegionSpecificStandardFormatToStringTests>b__7_0() in /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs:line 206\r\n--- End of stack trace from previous location ---\r\n   at Xunit.ConsoleClient.RemoteExecutor.Execute(String[] args)\r\n   at Xunit.ConsoleClient.ConsoleRunner.EntryPoint(String[] args)\r\n   at Xunit.ConsoleClient.Program.Main(String[] args)\r\n    System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n        Expected: 850\r\n        Actual:   851\r\n        /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs(1447,0): at System.Numerics.Tests.ToStringTest.VerifyExpectedStringResult(String expectedResult, String result)\r\n        /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs(1431,0): at System.Numerics.Tests.ToStringTest.VerifyToString(String test, String format, IFormatProvider provider, Boolean expectError, String expectedResult)\r\n        /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs(468,0): at System.Numerics.Tests.ToStringTest.RunStandardFormatToStringTests(Random random, String format, String negativeSign, Int32 precision, StringFormatter formatter)\r\n        /_/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs(206,0): at System.Numerics.Tests.ToStringTest.<>c.<RunRegionSpecificStandardFormatToStringTests>b__7_0()\r\n        \r\n        Child process:\r\n          System.Runtime.Numerics.Tests, Version=4.1.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 System.Numerics.Tests.ToStringTest+<>c Void <RunRegionSpecificStandardFormatToStringTests>b__7_0()\r\n        \r\n        \r\n  Finished:    System.Runtime.Numerics.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.Numerics.Tests  Total: 1619, Errors: 0, Failed: 1, Skipped: 0, Time: 11.859s\r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>set ERRORLEVEL=1 \r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>move /Y \"C:\\Users\\runner\\AppData\\Local\\Packages\\5cd54353-3ed7-4a6e-a72f-db349f28867c_v52bfwc2c21ha\\LocalState\\System.Runtime.Numerics.Tests.xml\" .\\testResults.xml \r\n        1 file(s) moved.\r\n\r\nC:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Work\\3fe2f8e8-9f77-4423-8b23-bedaecebfa4a\\Exec>call \"C:\\dotnetbuild\\work\\191db5eb-01a4-4ef4-acce-408be6d9ef5c\\Payload\\Launcher\\WindowsStoreAppLauncher.exe\" -uninstall appxmanifest.xml System.Runtime.Numerics.Tests.dll \r\nGot manifest file appxmanifest.xml\r\nRemoving the application...\r\n\r\nSUCCESS\r\nExitCode 100\r\n----- end Wed 10/16/2019  3:06:51.86 ----- exit code 1 ----------------------------------------------------------\r\n```\r\n\r\nBuild:[20191015.66](https://dnceng.visualstudio.com/public/_build/results?buildId=389370)(Master)\r\n\r\nDetails:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/191db5eb-01a4-4ef4-acce-408be6d9ef5c/workitems/System.Runtime.Numerics.Tests/console","Url":"https://github.com/dotnet/corefx/issues/41818","RelatedDescription":"Open issue \"Test failure: System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests\" (#41818)"},{"Id":"507652356","IsPullRequest":false,"CreatedAt":"2019-10-16T06:50:55","Actor":"Daniel15","Number":"41817","RawContent":null,"Title":"error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'linux-x86'","State":"open","Body":"Trying to publish a project for `linux-x86` fails:\r\n```\r\nλ dotnet publish -c Release -o --self-contained --runtime linux-x86\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(87,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'linux-x86'. [C:\\src\\test\\Test.Worker.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(87,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'linux-x86'. [C:\\src\\test\\Test.Worker.csproj]\r\n```\r\n\r\n`linux-x64` works fine though.\r\n\r\nCan `--self-contained` not be used for 32-bit Linux builds?","Url":"https://github.com/dotnet/corefx/issues/41817","RelatedDescription":"Open issue \"error NETSDK1084: There is no application host available for the specified RuntimeIdentifier 'linux-x86'\" (#41817)"},{"Id":"507637844","IsPullRequest":false,"CreatedAt":"2019-10-16T06:14:09","Actor":"saucecontrol","Number":"41816","RawContent":null,"Title":"API Proposal: Sse2.StoreScalar(int*)","State":"open","Body":"## Background\r\n\r\n`System.Runtime.Intrinsics.X86.Sse2` exposes load and store methods accepting address arguments for most supported types, but methods to store to an `int*` are missing.\r\n\r\nThe load versions of the methods are present:\r\n\r\n```C#\r\n/// <summary>\r\n/// __m128i _mm_loadl_epi32 (__m128i const* mem_addr)\r\n/// MOVD xmm, reg/m32\r\n/// The above native signature does not exist. We provide this additional overload for completeness.\r\n/// </summary>\r\npublic static unsafe Vector128<int> LoadScalarVector128(int* address) => LoadScalarVector128(address);\r\n/// <summary>\r\n/// __m128i _mm_loadl_epi32 (__m128i const* mem_addr)\r\n/// MOVD xmm, reg/m32\r\n/// The above native signature does not exist. We provide this additional overload for completeness.\r\n/// </summary>\r\npublic static unsafe Vector128<uint> LoadScalarVector128(uint* address) => LoadScalarVector128(address);\r\n```\r\n\r\nAs noted in the comments, `_mm_loadl_epi32` doesn't exist in the Intel intrinsics guide.  However, there is a matching signature under `_mm_loadu_si32`\r\n\r\n```\r\n__m128i _mm_loadu_si32 (void const* mem_addr)\r\n#include <immintrin.h>\r\nInstruction: movd xmm, m32\r\nCPUID Flags: SSE2\r\n```\r\n\r\nIts counterpart for storing a scalar int32 also exists:\r\n\r\n```\r\nvoid _mm_storeu_si32 (void* mem_addr, __m128i a)\r\n#include <immintrin.h>\r\nInstruction: movd m32, xmm\r\nCPUID Flags: SSE2\r\n```\r\n\r\nHowever the `StoreScalar` pair that would correspond to that intrinsic is missing.\r\n\r\n## Rationale\r\n\r\n`StoreScalar` is implemented with address arguments for `float`, `double` and `long`, but not for `int`.\r\n\r\n`StoreScalar` methods for `int` would mirror the existing `LoadScalarVector128(int *)` methods and would complete the set of supported types for stores.\r\n\r\n## Poposed API\r\n\r\n```diff\r\npbulic abstract class Sse2 : Sse\r\n{\r\n     /// <summary>\r\n     /// void _mm_storeu_si32 (void* mem_addr, __m128i a)\r\n     ///   MOVD m32, xmm\r\n     /// </summary>\r\n+    public static unsafe void StoreScalar(int* address, Vector128<int> source);\r\n     /// <summary>\r\n     /// void _mm_storeu_si32 (void* mem_addr, __m128i a)\r\n     ///   MOVD m32, xmm\r\n     /// </summary>\r\n+    public static unsafe void StoreScalar(uint* address, Vector128<uint> source);\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/41816","RelatedDescription":"Open issue \"API Proposal: Sse2.StoreScalar(int*)\" (#41816)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"508222622","IsPullRequest":false,"CreatedAt":"2019-10-17T04:12:54","Actor":"jwooley","Number":"39343","RawContent":null,"Title":"Syntax Visualizer - View Directed Graph causes VS 2019 (16.3) to crash","State":"open","Body":"**Version Used**:  16.3.4\r\n\r\n**Steps to Reproduce**:\r\nInstall the Visual Studio Extension Development workload\r\nAdd components for \"Code Map\" , \"DGML Editor\", and \".NET Compiler Platform SDK\"\r\nOpen a C# Code file.\r\nOpen View -> Other Window -> Syntax Visualizer\r\nSelect a variable declaration statement in the C# code.\r\nRight click on the node in the visualizer and select View Directed Syntax Graph. \r\nVisual Studio crashes and reboots.\r\n\r\nFrom the event log:\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.Resources.MissingManifestResourceException\r\n   at System.Resources.ManifestBasedResourceGroveler.HandleResourceStreamMissing(System.String)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean, System.Threading.StackCrawlMark ByRef)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean, System.Threading.StackCrawlMark ByRef)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.My.Resources.Resources.get_SyntaxNodeLabel()\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlHelper.GetLabelForNode(Microsoft.CodeAnalysis.SyntaxNode)\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlHelper.ProcessNode(Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlOptions, Microsoft.CodeAnalysis.SyntaxNode, System.Xml.Linq.XElement, Int32 ByRef, System.Xml.Linq.XElement, System.Xml.Linq.XElement, System.Collections.Generic.HashSet`1<System.String>)\r\n   at Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlHelper.ToDgml(Microsoft.CodeAnalysis.SyntaxNode, Roslyn.SyntaxVisualizer.DgmlHelper.SyntaxDgmlOptions)\r\n   at Roslyn.SyntaxVisualizer.Extension.SyntaxVisualizerContainer.DisplaySyntaxNodeDgml(Microsoft.CodeAnalysis.SyntaxNode)\r\n   at Roslyn.SyntaxVisualizer.Control.SyntaxVisualizerControl.DirectedSyntaxGraphMenuItem_Click(System.Object, System.Windows.RoutedEventArgs)\r\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(System.Object, System.Windows.RoutedEventArgs)\r\n   at System.Windows.EventRoute.InvokeHandlersImpl(System.Object, System.Windows.RoutedEventArgs, Boolean)\r\n   at System.Windows.UIElement.RaiseEventImpl(System.Windows.DependencyObject, System.Windows.RoutedEventArgs)\r\n   at System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\r\n   at System.Windows.Controls.MenuItem.InvokeClickAfterRender(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(System.Object)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\r\n\r\n\r\n**Expected Behavior**:\r\nVisualizer should appear\r\n\r\n**Actual Behavior**:\r\nVS Reboots","Url":"https://github.com/dotnet/roslyn/issues/39343","RelatedDescription":"Open issue \"Syntax Visualizer - View Directed Graph causes VS 2019 (16.3) to crash\" (#39343)"},{"Id":"508215615","IsPullRequest":true,"CreatedAt":"2019-10-17T03:44:23","Actor":"snhardin","Number":"39342","RawContent":null,"Title":"Fix var being treated as unknown type","State":"open","Body":"Closes #38947\r\n\r\nStill working out a couple things on this one. Advice is very much appreciated, especially on some of the specifics on how you guys want this implemented, but I think I got the general idea down.","Url":"https://github.com/dotnet/roslyn/pull/39342","RelatedDescription":"Open PR \"Fix var being treated as unknown type\" (#39342)"},{"Id":"508194522","IsPullRequest":true,"CreatedAt":"2019-10-17T02:27:43","Actor":"tmat","Number":"39341","RawContent":null,"Title":"EnC: Compare document content before performing IO while stepping","State":"open","Body":"Avoid IO during stepping unless a source file is modified. Stepping currently blocks the UI thread. Even if the debugger made stepping completely asynchronous it is desirable that it's as fast as possible in the common case when no files are modified.\r\n\r\nAddresses perf regression observed in RPS [958005](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/958005) and PerfWatson [979191](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/979191).\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/39341","RelatedDescription":"Open PR \"EnC: Compare document content before performing IO while stepping\" (#39341)"},{"Id":"508160317","IsPullRequest":true,"CreatedAt":"2019-10-17T00:03:53","Actor":"dotnet-bot","Number":"39339","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"open","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39339","RelatedDescription":"Open PR \"Merge master to features/static-lambdas\" (#39339)"},{"Id":"508160286","IsPullRequest":true,"CreatedAt":"2019-10-17T00:03:46","Actor":"dotnet-bot","Number":"39338","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39338","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39338)"},{"Id":"508160241","IsPullRequest":true,"CreatedAt":"2019-10-17T00:03:39","Actor":"dotnet-bot","Number":"39337","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39337","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#39337)"},{"Id":"508159788","IsPullRequest":true,"CreatedAt":"2019-10-17T00:02:04","Actor":"dotnet-bot","Number":"39336","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39336","RelatedDescription":"Open PR \"Merge master to release/dev16.5-preview1\" (#39336)"},{"Id":"508134070","IsPullRequest":true,"CreatedAt":"2019-10-16T22:33:13","Actor":"ryzngard","Number":"39335","RawContent":null,"Title":"Use ConstructWithNullability in InferTypeInAwaitExpression","State":"open","Body":"The inferred type may include nullability information, and will fail to be recognized as a symbol without using the correct construct call. \r\n\r\nFixes #39333 ","Url":"https://github.com/dotnet/roslyn/pull/39335","RelatedDescription":"Open PR \"Use ConstructWithNullability in InferTypeInAwaitExpression\" (#39335)"},{"Id":"508130356","IsPullRequest":true,"CreatedAt":"2019-10-16T22:22:34","Actor":"ivanbasov","Number":"39334","RawContent":null,"Title":"follow up for Go to base: support metadata references and bug fixes","State":"open","Body":"Addressing feedback at https://github.com/dotnet/roslyn/pull/39055#pullrequestreview-302246824","Url":"https://github.com/dotnet/roslyn/pull/39334","RelatedDescription":"Open PR \"follow up for Go to base: support metadata references and bug fixes\" (#39334)"},{"Id":"508057922","IsPullRequest":true,"CreatedAt":"2019-10-16T21:22:37","Actor":"RikkiGibson","Number":"39330","RawContent":null,"Title":"Skip RenamingEscapedIdentifiers","State":"closed","Body":"Related to #29483\r\n\r\nflaky build (see attempt 1): https://dev.azure.com/dnceng/public/_build/results?buildId=390082&view=ms.vss-test-web.build-test-results-tab&runId=12097348&resultId=138635&paneView=debug","Url":"https://github.com/dotnet/roslyn/pull/39330","RelatedDescription":"Closed or merged PR \"Skip RenamingEscapedIdentifiers\" (#39330)"},{"Id":"508101816","IsPullRequest":false,"CreatedAt":"2019-10-16T21:11:33","Actor":"vsfeedback","Number":"39333","RawContent":null,"Title":"VB.NET Return Await causes code fix providers to crash in 16.3.4","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/776481/vbnet-return-await-causes-code-fix-providers-to-cr.html)._\n\n---\nI am able to reproduce in a new VB.NET console application targetting .NET Framework 4.7.2, and typing the following into the default Module1.vb module - how fast you type varies when exactly the errors show.  This seems to be triggered by `Return Await`, since just `Return something` doesn't seem to cause the errors.\n\n```\nModule Module1\n\n    Sub Main()\n\n    End Sub\n\nEnd Module\n\nClass Testing\n\n    Private Async Function WaitForIt() As Task(Of Boolean)\n        Return Await tas  '&lt;-- crashes here, was starting to type Task.Delay(1000)\n    End Function\n\nEnd Class\n```\n\nI first see an exception message at the top:\n\nAn exception of type ArgumentException has been encountered.  This may be cause by an extension.\n\nLog file attached for that.  Then several code fix providers crash.\n\n'GenerateParameterizedMemberCodeFixProvider' encountered an error and has been disabled.\n'VisualBasicGenerateVariableCodeFixProvider' encountered an error and has been disabled.\n'VisualBasicSpellCheckCodeFixProvider' encountered an error and has been disabled.\n\nStack traces in the order listed above...\n\n```\nSystem.ArgumentException : Not a VB symbol.\nParameter name: typeArguments\n   at Microsoft.CodeAnalysis.VisualBasic.Symbols.SymbolExtensions.EnsureVbSymbolOrNothing[TSource,TDestination](TSource symbol,String paramName)\n   at Microsoft.CodeAnalysis.VisualBasic.Symbol.ConstructTypeArguments(ITypeSymbol[] typeArguments)\n   at Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol.INamedTypeSymbol_Construct(ITypeSymbol[] typeArguments)\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicTypeInferenceService.TypeInferrer._Closure$__19-0._Lambda$__0(TypeInferenceInfo t)\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\n   at System.Linq.Enumerable.&lt;DistinctIterator&gt;d__64`1.MoveNext()\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\n   at System.Collections.Immutable.ImmutableArray.CreateRange[T](IEnumerable`1 items)\n   at System.Collections.Immutable.ImmutableArray.ToImmutableArray[TSource](IEnumerable`1 items)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.AbstractTypeInferrer.Filter(IEnumerable`1 types,Boolean filterUnusable)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.AbstractTypeInferrer.InferTypes(SyntaxNode expression,Boolean filterUnusable)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.InferTypes(SemanticModel semanticModel,SyntaxNode expression,String nameOpt,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Shared.Extensions.ITypeInferenceServiceExtensions.InferTypes(ITypeInferenceService service,SemanticModel semanticModel,SyntaxNode expression,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.GenerateMember.GenerateParameterizedMember.AbstractGenerateMethodService`4.State.TryInitializeSimpleName(TService service,SemanticDocument semanticDocument,TSimpleNameSyntax simpleName,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.GenerateMember.GenerateParameterizedMember.AbstractGenerateMethodService`4.State.TryInitializeMethodAsync(TService service,SemanticDocument document,SyntaxNode node,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.GenerateMember.GenerateParameterizedMember.AbstractGenerateMethodService`4.State.GenerateMethodStateAsync[TService,TSimpleNameSyntax,TExpressionSyntax,TInvocationExpressionSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.GenerateMember.GenerateParameterizedMember.AbstractGenerateMethodService`4.GenerateMethodAsync[TService,TSimpleNameSyntax,TExpressionSyntax,TInvocationExpressionSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeFixes.GenerateMember.AbstractGenerateMemberCodeFixProvider.RegisterCodeFixesAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformActionAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n```\n\n```\nSystem.ArgumentException : Not a VB symbol.\nParameter name: typeArguments\n   at Microsoft.CodeAnalysis.VisualBasic.Symbols.SymbolExtensions.EnsureVbSymbolOrNothing[TSource,TDestination](TSource symbol,String paramName)\n   at Microsoft.CodeAnalysis.VisualBasic.Symbol.ConstructTypeArguments(ITypeSymbol[] typeArguments)\n   at Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol.INamedTypeSymbol_Construct(ITypeSymbol[] typeArguments)\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicTypeInferenceService.TypeInferrer._Closure$__19-0._Lambda$__0(TypeInferenceInfo t)\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\n   at System.Linq.Enumerable.&lt;DistinctIterator&gt;d__64`1.MoveNext()\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\n   at System.Collections.Immutable.ImmutableArray.CreateRange[T](IEnumerable`1 items)\n   at System.Collections.Immutable.ImmutableArray.ToImmutableArray[TSource](IEnumerable`1 items)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.AbstractTypeInferrer.Filter(IEnumerable`1 types,Boolean filterUnusable)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.AbstractTypeInferrer.InferTypes(SyntaxNode expression,Boolean filterUnusable)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.InferTypes(SemanticModel semanticModel,SyntaxNode expression,String nameOpt,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.GenerateMember.GenerateVariable.AbstractGenerateVariableService`3.State.DetermineFieldType(SemanticDocument semanticDocument,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.GenerateMember.GenerateVariable.AbstractGenerateVariableService`3.State.TryInitializeSimpleName(TService service,SemanticDocument semanticDocument,TSimpleNameSyntax simpleName,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.GenerateMember.GenerateVariable.AbstractGenerateVariableService`3.State.TryInitializeAsync[TService,TSimpleNameSyntax,TExpressionSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.GenerateMember.GenerateVariable.AbstractGenerateVariableService`3.State.GenerateAsync[TService,TSimpleNameSyntax,TExpressionSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.GenerateMember.GenerateVariable.AbstractGenerateVariableService`3.GenerateVariableAsync[TService,TSimpleNameSyntax,TExpressionSyntax](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeFixes.GenerateMember.AbstractGenerateMemberCodeFixProvider.RegisterCodeFixesAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformActionAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n```\n\n```\nSystem.ArgumentException : Not a VB symbol.\nParameter name: typeArguments\n   at Microsoft.CodeAnalysis.VisualBasic.Symbols.SymbolExtensions.EnsureVbSymbolOrNothing[TSource,TDestination](TSource symbol,String paramName)\n   at Microsoft.CodeAnalysis.VisualBasic.Symbol.ConstructTypeArguments(ITypeSymbol[] typeArguments)\n   at Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol.INamedTypeSymbol_Construct(ITypeSymbol[] typeArguments)\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicTypeInferenceService.TypeInferrer._Closure$__19-0._Lambda$__0(TypeInferenceInfo t)\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\n   at System.Linq.Enumerable.&lt;DistinctIterator&gt;d__64`1.MoveNext()\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\n   at System.Collections.Immutable.ImmutableArray.CreateRange[T](IEnumerable`1 items)\n   at System.Collections.Immutable.ImmutableArray.ToImmutableArray[TSource](IEnumerable`1 items)\n   at Microsoft.CodeAnalysis.LanguageServices.TypeInferenceService.AbstractTypeInferenceService.InferTypes(SemanticModel semanticModel,Int32 position,String nameOpt,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Shared.Extensions.ContextQuery.SyntaxContext.ComputeInferredTypes(Workspace workspace,SemanticModel semanticModel,Int32 position,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Shared.Extensions.ContextQuery.SyntaxContext..ctor(Workspace workspace,SemanticModel semanticModel,Int32 position,SyntaxToken leftToken,SyntaxToken targetToken,Boolean isTypeContext,Boolean isNamespaceContext,Boolean isNamespaceDeclarationNameContext,Boolean isPreProcessorDirectiveContext,Boolean isRightOfNameSeparator,Boolean isStatementContext,Boolean isAnyExpressionContext,Boolean isAttributeNameContext,Boolean isEnumTypeMemberAccessContext,Boolean isNameOfContext,Boolean isInQuery,Boolean isInImportsDirective,Boolean isWithinAsyncMethod,Boolean isPossibleTupleContext,Boolean isPatternContext,Boolean isRightSideOfNumericType,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.VisualBasic.Extensions.ContextQuery.VisualBasicSyntaxContext..ctor(Workspace workspace,SemanticModel semanticModel,Int32 position,SyntaxToken leftToken,SyntaxToken targetToken,SyntaxToken touchingToken,Boolean isTypeContext,Boolean isNamespaceContext,Boolean isNamespaceDeclarationNameContext,Boolean isPreProcessorDirectiveContext,Boolean isRightOfNameSeparator,Boolean isSingleLineStatementContext,Boolean isExpressionContext,Boolean isAttributeNameContext,Boolean isEnumTypeMemberAccessContext,Boolean isNameOfContext,Boolean isInLambda,Boolean isInQuery,Boolean isInImportsDirective,Boolean isCustomEventContext,Boolean isPossibleTupleContext,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.VisualBasic.Extensions.ContextQuery.VisualBasicSyntaxContext.VB$StateMachine_19_CreateContextAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.VisualBasic.Completion.Providers.KeywordCompletionProvider.VB$StateMachine_2_CreateContextAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Completion.Providers.AbstractKeywordCompletionProvider`1.RecommendCompletionItemsAsync[TContext](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Shared.Extensions.DocumentExtensions.GetUnionItemsFromDocumentAndLinkedDocumentsAsync[T](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Completion.Providers.AbstractKeywordCompletionProvider`1.ProvideCompletionsAsync[TContext](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.GetContextAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.ComputeNonEmptyCompletionContextsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.GetCompletionsWithAvailabilityOfExpandedItemsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.GetCompletionsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.SpellCheck.AbstractSpellCheckCodeFixProvider`1.CreateSpellCheckCodeIssueAsync[TSimpleName](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.SpellCheck.AbstractSpellCheckCodeFixProvider`1.CheckNodeAsync[TSimpleName](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.SpellCheck.AbstractSpellCheckCodeFixProvider`1.RegisterCodeFixesAsync[TSimpleName](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformActionAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/14/2019, 11:32 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39333","RelatedDescription":"Open issue \"VB.NET Return Await causes code fix providers to crash in 16.3.4\" (#39333)"},{"Id":"508023427","IsPullRequest":true,"CreatedAt":"2019-10-16T20:44:13","Actor":"tmat","Number":"39322","RawContent":null,"Title":"Do not wait for output writer thread to complete when aborting execution in IW","State":"closed","Body":"Joining the threads might cause deadlock if Dispose is executing on UI thread since the output writing threads are dispatching to UI thread to write the output.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/36022\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/39322","RelatedDescription":"Closed or merged PR \"Do not wait for output writer thread to complete when aborting execution in IW\" (#39322)"},{"Id":"507995791","IsPullRequest":true,"CreatedAt":"2019-10-16T20:44:02","Actor":"dotnet-bot","Number":"39318","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39318","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39318)"},{"Id":"507996756","IsPullRequest":true,"CreatedAt":"2019-10-16T20:43:55","Actor":"dotnet-bot","Number":"39320","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39320","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39320)"},{"Id":"507996664","IsPullRequest":true,"CreatedAt":"2019-10-16T20:43:42","Actor":"dotnet-bot","Number":"39319","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39319","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39319)"},{"Id":"508035269","IsPullRequest":true,"CreatedAt":"2019-10-16T20:43:23","Actor":"chsienki","Number":"39324","RawContent":null,"Title":"Remove analyzer workarounds for using declarations","State":"closed","Body":"Remove workarounds introduced introduced in https://github.com/dotnet/roslyn/pull/36734 as #32100 is now implemented.\r\n","Url":"https://github.com/dotnet/roslyn/pull/39324","RelatedDescription":"Closed or merged PR \"Remove analyzer workarounds for using declarations\" (#39324)"},{"Id":"508082952","IsPullRequest":false,"CreatedAt":"2019-10-16T20:31:57","Actor":"vsfeedback","Number":"39332","RawContent":null,"Title":"If I'm trying to reference a new class, property, etc. that only newer frameworks/standard/core target, some helpful refactor recommendations would be nice. I find I spend a lot of time trying to understand when given features came in for what version....","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/776570/if-im-trying-to-reference-a-new-class-property-etc.html)._\n\n---\nIf I'm trying to reference a new class, property, etc. that only newer frameworks/standard/core target, some helpful refactor recommendations would be nice. I find I spend a lot of time trying to understand when given features came in for what version. Having that built into the IDE so I can make more intelligent choices would be helpful.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/14/2019, 11:55 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39332","RelatedDescription":"Open issue \"If I'm trying to reference a new class, property, etc. that only newer frameworks/standard/core target, some helpful refactor recommendations would be nice. I find I spend a lot of time trying to understand when given features came in for what version....\" (#39332)"},{"Id":"508078971","IsPullRequest":false,"CreatedAt":"2019-10-16T20:23:31","Actor":"RikkiGibson","Number":"39331","RawContent":null,"Title":"Add a special diagnostic for when the parser is not making progress in loops","State":"open","Body":"See `IsMakingProgress(ref int)`:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/1ccaa91e9ea9fbfccbdf47afc938644af927f425/src/Compilers/CSharp/Portable/Parser/SyntaxParser.cs#L1107\r\n\r\nThis method Debug.Asserts so that we know there's an infinite loop bug in the parser in debug mode. In release mode, it just returns 'false' so that the related loop terminates and compilation finishes (expected to finish with syntax errors.)\r\n\r\nI think we should consider making it so this method also adds a special diagnostic which requests the user to report an issue, so that when users inadvertently put the parser into an unexpected no-progress state, we can find out about it and address any underlying issues.\r\n\r\n/cc @jcouv","Url":"https://github.com/dotnet/roslyn/issues/39331","RelatedDescription":"Open issue \"Add a special diagnostic for when the parser is not making progress in loops\" (#39331)"},{"Id":"508049167","IsPullRequest":false,"CreatedAt":"2019-10-16T19:21:48","Actor":"vsfeedback","Number":"39329","RawContent":null,"Title":"Extract Method changes 'using var' semantic to 'out parameter' semantic","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/760023/extract-method-changes-using-var-semantic-to-out-p.html)._\n\n---\nUsing 'Extract Method' in a block containing 'using var' causes the resulting method to assign the variables to out parameters and contains no using expression.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/6/2019, 11:35 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/8/2019, 02:04 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39329","RelatedDescription":"Open issue \"Extract Method changes 'using var' semantic to 'out parameter' semantic\" (#39329)"},{"Id":"507948845","IsPullRequest":true,"CreatedAt":"2019-10-16T19:21:10","Actor":"NextTurn","Number":"39316","RawContent":null,"Title":"Enable virtual/override recommender on private protected members","State":"closed","Body":"Fixes #39263 ","Url":"https://github.com/dotnet/roslyn/pull/39316","RelatedDescription":"Closed or merged PR \"Enable virtual/override recommender on private protected members\" (#39316)"},{"Id":"508044337","IsPullRequest":false,"CreatedAt":"2019-10-16T19:11:53","Actor":"vsfeedback","Number":"39328","RawContent":null,"Title":"ExtractInterfaceCodeRefactoringProvider encountered an error and has been disabled","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/547144/extractinterfacecoderefactoringprovider-encountere.html)._\n\n---\nThis happens everytime. The class that I am trying to extract interface from is defined in a shared project (shproj).\n\nThe stack trace:\n```\nSystem.AggregateException : One or more errors occurred. ---&gt; Files and folders cannot be:\n- Empty strings \n- System reserved names, including 'CON', 'AUX', PRN', 'COM1' or 'LPT2' \n- contain only '.'\n- have any of the following characters: / ? : &amp; \\ * &quot; &lt; &gt; | # %\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.&lt;&gt;c__DisplayClass18_0.&lt;InvokeCore&gt;b__0()\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\n---&gt; (Inner Exception #0) System.InvalidOperationException : Files and folders cannot be:\n- Empty strings \n- System reserved names, including 'CON', 'AUX', PRN', 'COM1' or 'LPT2' \n- contain only '.'\n- have any of the following characters: / ? : &amp; \\ * &quot; &lt; &gt; | # %\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.Utilities.ValidateFileName(IServiceProvider serviceProvider,String filePath)\n   at async Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.Automation.OAProjectItems.&lt;&gt;c__DisplayClass2_0.&lt;AddFolder&gt;b__0(&lt;Unknown Parameters&gt;)\n   at async Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.Automation.OAProject.&lt;&gt;c__DisplayClass68_0`1.&lt;Mutate&gt;b__0[T](&lt;Unknown Parameters&gt;)\n   at async Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.ProjectNode.&lt;&gt;c__DisplayClass569_0.&lt;Mutate&gt;b__0(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\n   at Microsoft.VisualStudio.ProjectSystem.ProjectMultiThreadedService.ExecuteSynchronously(Func`1 asyncAction)\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.ProjectNode.Mutate(Func`1 asyncAction,Boolean includesFileSystemChange,String telemetryActivity)\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.Automation.OAProject.Mutate[T](Func`1 asyncAction,Boolean includesFileSystemChange,String telemetryActivity)\n   at Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package.Automation.OAProjectItems.AddFolder(String name,String kind)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.Extensions.ProjectExtensions.CreateFolder(ProjectItems currentItems,String container)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.Extensions.ProjectExtensions.FindOrCreateFolder(Project project,IEnumerable`1 containers)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.AddDocumentToFolder(AbstractProject hostProject,Project project,DocumentId documentId,IEnumerable`1 folders,String documentName, SourceCodeKind sourceCodeKind,SourceText initialText,String filePath,Boolean isAdditionalDocument)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.AddDocumentCore(DocumentInfo info,SourceText initialText,Boolean isAdditionalDocument)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyDocumentAdded(DocumentInfo info,SourceText text)\n   at Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(ProjectChanges projectChanges)\n   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace,ImmutableArray`1 operations,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ApplyAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&lt;---\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 4/26/2019, 00:29 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 5/6/2019, 04:37 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39328","RelatedDescription":"Open issue \"ExtractInterfaceCodeRefactoringProvider encountered an error and has been disabled\" (#39328)"},{"Id":"508043005","IsPullRequest":false,"CreatedAt":"2019-10-16T19:09:01","Actor":"vsfeedback","Number":"39327","RawContent":null,"Title":"C#, Rename file to match class name unexpectedly fails to trigger","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/761952/c-rename-file-to-match-class-name-unexpectedly-fai.html)._\n\n---\nI have Ctrl-W mapped to Edit.ExpandSelection.\n\nPrerequisite: Have a class in a .cs file where filename and class name don't match.\n\nRepro actions:\n- Place the cursor (using kbd) somewhere in the middle of the class name, in the definition of the class.\n- Ctrl-W, to select the whole class name.\n- Engage `EditorContextMenus.CodeWindow.QuickActionsForPosition` (defaultmapped to Ctrl-'.' I believe).\n\nResult: You are not even presented with the choices to rename neither the file nor the class.\n\nExpected: Whether no selection is active, or exacly _one_ selection is active where the classname is partially or fully included in a selection, together with zero or more leading and/or trailing whitespace, the refactoring should be suggested.\n\nFrom the behavior it seems the bug is the refactoring fails to even understand the cursor is on a class name if a selection is active.\n\nFeel free to replace &quot;class name&quot; with &quot;typename&quot;, as it seems likely this bug should affect all kinds of non-predefined typenames.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/7/2019, 00:55 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/8/2019, 01:57 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39327","RelatedDescription":"Open issue \"C#, Rename file to match class name unexpectedly fails to trigger\" (#39327)"},{"Id":"508041921","IsPullRequest":false,"CreatedAt":"2019-10-16T19:06:43","Actor":"vsfeedback","Number":"39326","RawContent":null,"Title":"Duplication word  when rename property","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/761897/duplication-word-when-rename-property.html)._\n\n---\nNote: VS 2019 Community 16.3.1\n\n**Act**\nWe have two members, for excample:\n\n```\nprivate const string _sidSearchFilter = &quot;(&amp;(objectClass=user)(objectClass=person)(objectGUID={0}))&quot;;\nprivate const string _emailAttribute = &quot;mail&quot;;\n```\n\n**Arrange**\nRename them, click &quot;Ctrl+R&quot;\n\n**Assert**\n1) For `_sidSearchFilter`, rename preview will be as `_sidSearchFilter` - _**ok**_;\n2) For `_emailAttribute`, rename preview will be as `_emailAttributeAttribute` - _**Is it ok?**_;\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/7/2019, 01:03 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/8/2019, 01:57 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39326","RelatedDescription":"Open issue \"Duplication word  when rename property\" (#39326)"},{"Id":"508040993","IsPullRequest":false,"CreatedAt":"2019-10-16T19:04:45","Actor":"vsfeedback","Number":"39325","RawContent":null,"Title":"Go to implementation throws AggregateException","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/745946/go-to-implementation-throws-aggregateexception.html)._\n\n---\n<p>[regression] [worked-in:16.2.3]<br>\nAfter upgrading to 16.3 the Go to Implementation command (Ctrl+F12 in the default shortcuts) no longer work and throws an AggregateException.</p><p>Update: this works properly on a dotnet core solution. The project where this fails is a larger (50+ csproj) legacy dotnet framework solution. The main project type is ASP.NET.</p><p>I tried disabling all plugins but the error persists.</p><p>Please see the attached logs/recording for more details.</p><p>This is the stack trace for the error:</p>\n<pre>System.AggregateException: One or more errors occurred. ---&gt; System.AggregateException: One or more errors occurred. ---&gt; System.AggregateException: One or more errors occurred. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object.at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&lt;CreateIndexAsync&gt;d__8.MoveNext() --- End of stack trace from previous location where exception was thrown --- at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject) --- End of inner exception stack trace --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;AddSourceTypesInProjectAsync&gt;d__30.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesInProjectAsync&gt;d__20.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesAsync&gt;d__18.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;&gt;c__DisplayClass9_0.&lt;&lt;FindTypesFromCacheOrComputeAsync&gt;b__0&gt;d.MoveNext() --- End of inner exception stack trace --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesFromCacheOrComputeAsync&gt;d__9.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTransitivelyImplementingStructuresAndClassesAsync&gt;d__13.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&lt;FindImplementationsAsync&gt;d__50.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&lt;FindImplementationsAsync&gt;d__49.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&lt;FindImplementationsWorkerAsync&gt;d__4.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&lt;FindImplementationsAsync&gt;d__3.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&lt;FindImplementationsAsync&gt;d__2.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.AbstractFindUsagesService.&lt;FindImplementationsAsync&gt;d__2.MoveNext() --- End of inner exception stack trace --- at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)at Microsoft.CodeAnalysis.Editor.GoToImplementation.GoToImplementationCommandHandler.StreamingGoToImplementation(Document document, Int32 caretPosition, IFindUsagesService findUsagesService, IStreamingFindUsagesPresenter streamingPresenter, CancellationToken cancellationToken, String&amp; messageToShow)at Microsoft.CodeAnalysis.Editor.GoToImplementation.GoToImplementationCommandHandler.ExecuteCommand(Document document, Int32 caretPosition, IFindUsagesService streamingService, CommandExecutionContext context)at Microsoft.CodeAnalysis.Editor.GoToImplementation.GoToImplementationCommandHandler.ExecuteCommand(GoToImplementationCommandArgs args, CommandExecutionContext context)at Microsoft.VisualStudio.Commanding.CommandHandlerExtensions.ExecuteCommand[T](ICommandHandler commandHandler, T args, Action nextCommandHandler, CommandExecutionContext executionContext)at Microsoft.VisualStudio.UI.Text.Commanding.Implementation.EditorCommandHandlerService.&lt;&gt;c__DisplayClass13_1`1.&lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;Execute&lt;/span&gt;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;b__1&lt;/span&gt;()&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;Microsoft&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.VisualStudio&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.Text&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.Utilities&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.GuardedOperations&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.CallExtensionPoint&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;errorSource&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;call&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;Predicate&lt;/span&gt;`1 exceptionFilter) ---&gt; (Inner Exception #0) System.AggregateException: One or more errors occurred. ---&gt; System.AggregateException: One or more errors occurred. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object.at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&lt;CreateIndexAsync&gt;d__8.MoveNext() --- End of stack trace from previous location where exception was thrown --- at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject) --- End of inner exception stack trace --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;AddSourceTypesInProjectAsync&gt;d__30.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesInProjectAsync&gt;d__20.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesAsync&gt;d__18.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;&gt;c__DisplayClass9_0.&lt;&lt;FindTypesFromCacheOrComputeAsync&gt;b__0&gt;d.MoveNext() --- End of inner exception stack trace --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesFromCacheOrComputeAsync&gt;d__9.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTransitivelyImplementingStructuresAndClassesAsync&gt;d__13.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&lt;FindImplementationsAsync&gt;d__50.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.&lt;FindImplementationsAsync&gt;d__49.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&lt;FindImplementationsWorkerAsync&gt;d__4.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&lt;FindImplementationsAsync&gt;d__3.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.FindUsagesHelpers.&lt;FindImplementationsAsync&gt;d__2.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.Editor.FindUsages.AbstractFindUsagesService.&lt;FindImplementationsAsync&gt;d__2.MoveNext() ---&gt; (Inner Exception #0) System.AggregateException: One or more errors occurred. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object.at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&lt;CreateIndexAsync&gt;d__8.MoveNext() --- End of stack trace from previous location where exception was thrown --- at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject) --- End of inner exception stack trace --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;AddSourceTypesInProjectAsync&gt;d__30.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesInProjectAsync&gt;d__20.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;FindTypesAsync&gt;d__18.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.&lt;&gt;c__DisplayClass9_0.&lt;&lt;FindTypesFromCacheOrComputeAsync&gt;b__0&gt;d.MoveNext() ---&gt; (Inner Exception #0) System.NullReferenceException: Object reference not set to an instance of an object.at Microsoft.CodeAnalysis.FindSymbols.DependentTypeFinder.ProjectIndex.&lt;CreateIndexAsync&gt;d__8.MoveNext() --- End of stack trace from previous location where exception was thrown --- at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&lt;--- &lt;--- &lt;--- \n</pre>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/24/2019, 11:19 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39325","RelatedDescription":"Open issue \"Go to implementation throws AggregateException\" (#39325)"},{"Id":"508030347","IsPullRequest":false,"CreatedAt":"2019-10-16T18:43:46","Actor":"RachelDavids","Number":"39323","RawContent":null,"Title":"C# formatter's \"Make private fields readonly\" option fails to consider separated partial classes","State":"open","Body":"VS Enterprise 16.3.5\r\n\r\n**Steps to Reproduce**:\r\nusing the following code - using separate files - If used in the same file behavior is as expected.\r\nApply code-cleanup - including \"Make private fields readonly when possible\"\r\n```\r\n\tpartial class MyTest : Form\r\n\t{\r\n\t\tprivate bool _disposed;\r\n\t}\r\n\r\n\tpartial class MyTest\r\n\t{\r\n\t\tprotected override void Dispose(bool disposing)\r\n\t\t{\r\n\t\t\tif(!_disposed)\r\n\t\t\t\tbase.Dispose(disposing);\r\n                       _disposed = true;\r\n\t\t}\r\n\t}\r\n```\r\n\r\n**Expected Behavior**:\r\n```\r\n\tinternal partial class MyTest : Form\r\n\t{\r\n\t\tprivate bool _disposed;;\r\n\t}\r\n\r\n\tinternal partial class MyTest\r\n\t{\r\n\t\tprotected override void Dispose(bool disposing)\r\n\t\t{\r\n\t\t\tif (!_disposed)\r\n\t\t\t{\r\n\t\t\t\tbase.Dispose(disposing);\r\n\t\t\t}\r\n                       _disposed = true;\r\n\t\t}\r\n\t}\r\n```\r\n**Actual Behavior**:\r\n```\r\n\tinternal partial class MyTest : Form\r\n\t{\r\n\t\tprivate readonly bool _disposed = true;\r\n\t}\r\n\r\n\tinternal partial class MyTest\r\n\t{\r\n\t\tprotected override void Dispose(bool disposing)\r\n\t\t{\r\n\t\t\tif (!_disposed)\r\n\t\t\t{\r\n\t\t\t\tbase.Dispose(disposing);\r\n\t\t\t}\r\n\t\t\t_disposed = true; // this line fails to compile \r\n\t\t}\r\n\t}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39323","RelatedDescription":"Open issue \"C# formatter's \"Make private fields readonly\" option fails to consider separated partial classes\" (#39323)"},{"Id":"507959008","IsPullRequest":false,"CreatedAt":"2019-10-16T16:24:55","Actor":"onovotny","Number":"39317","RawContent":null,"Title":"Naming rule fix generates code with errors","State":"open","Body":"**Version Used**: 16.4p2\r\n\r\n**Steps to Reproduce**:\r\n\r\nCode with the following along with an `.editorconfig` rule (based on the Roslyn one):\r\n\r\n```\r\n# Static readonly fields are PascalCased\r\ndotnet_naming_rule.static_readonly_fields_should_be_pascal_case.symbols                               = private_static_readonly_field_symbols\r\ndotnet_naming_rule.static_readonly_fields_should_be_pascal_case.style                                 = pascal_case_style\r\ndotnet_naming_rule.static_readonly_fields_should_be_pascal_case.severity                              = warning\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1427284/66938671-9ff01d80-f00f-11e9-901f-fffb0c49713e.png)\r\n\r\n\r\n**Expected Behavior**:\r\nAn alternate fix or automatic suppression of the warning when a property matches the target name already.\r\n\r\n**Actual Behavior**:\r\nCode generates a conflict with a property that already exists.","Url":"https://github.com/dotnet/roslyn/issues/39317","RelatedDescription":"Open issue \"Naming rule fix generates code with errors\" (#39317)"},{"Id":"507923210","IsPullRequest":false,"CreatedAt":"2019-10-16T15:21:28","Actor":"sharwell","Number":"39315","RawContent":null,"Title":"VB implementation of WriteDocumentationCommentXml does not respect filterTree","State":"open","Body":"During review of [DevDiv 999063](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/999063), I found that syntax trees were reconstituted 115603 times in less than 100 seconds, including 217 cases for just **src/Compilers/VisualBasic/Portable/Lowering/Rewriter.vb**. CPU analysis suggests that the trees are being requested by this method:\r\n\r\n```\r\nMicrosoft.CodeAnalysis.VisualBasic.VisualBasicCompilation+DocumentationCommentCompiler.WriteDocumentationCommentXml\r\n```\r\n\r\nI noticed that this block:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/1de29ff0ae5661a0ac4b8208ac42570bce4c9417/src/Compilers/CSharp/Portable/Compiler/DocumentationCommentCompiler.cs#L108-L113\r\n\r\nis not present in the corresponding VB compiler method:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/1de29ff0ae5661a0ac4b8208ac42570bce4c9417/src/Compilers/VisualBasic/Portable/Compilation/DocumentationComments/DocumentationCommentCompiler.vb#L59-L65","Url":"https://github.com/dotnet/roslyn/issues/39315","RelatedDescription":"Open issue \"VB implementation of WriteDocumentationCommentXml does not respect filterTree\" (#39315)"},{"Id":"507913772","IsPullRequest":false,"CreatedAt":"2019-10-16T15:06:16","Actor":"footcha","Number":"39314","RawContent":null,"Title":"Optimize boxing of boolean values","State":"open","Body":"It happens rather often in applications that there is implicit conversion `boolean->object` that causes boxing (and memory allocation in a heap) of a boolean value each and every time the conversion is called. This can produce quite significant memory allocations if such conversions happen in a hot path. Is it worth optimizing this specific conversion at compile time by a compiler? Bellow there is a workaround in C# however compiler can solve this more conventionally by emitting similar byte code at compile-time.\r\n\r\n```csharp\r\npublic static class BoolExtensions\r\n{\r\n    private static readonly object boxedFalse = false; // one-time boxing\r\n    private static readonly object boxedTrue = true; // one-time boxing\r\n\r\n    public static object Boxed(this bool value)\r\n    {\r\n        return value ? boxedTrue : boxedFalse;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39314","RelatedDescription":"Open issue \"Optimize boxing of boolean values\" (#39314)"},{"Id":"507885483","IsPullRequest":false,"CreatedAt":"2019-10-16T14:22:04","Actor":"onovotny","Number":"39313","RawContent":null,"Title":"Invalid suggestion: use var instead of explicit type","State":"open","Body":"**Version Used**: 16.4p2\r\n\r\n**Steps to Reproduce**:\r\n\r\n![image](https://user-images.githubusercontent.com/1427284/66927603-12580200-effe-11e9-8326-6c389c7a9455.png)\r\n\r\nCode like that, where the .Parent property returns `PackagePart?`.\r\n\r\n**Expected Behavior**:\r\nNo IDE0007 message\r\n\r\n**Actual Behavior**:\r\nIDE0007 message.\r\n\r\nWhen the quick fix runs, and it puts `for(var cursor = this ...`, yields a different warning since it'd be trying to assign a nullable to a non-nullable.","Url":"https://github.com/dotnet/roslyn/issues/39313","RelatedDescription":"Open issue \"Invalid suggestion: use var instead of explicit type\" (#39313)"},{"Id":"508021884","IsPullRequest":false,"CreatedAt":"2019-10-15T08:32:28","Actor":"rechkalov","Number":"39321","RawContent":null,"Title":"IAsyncEnumerable possible memory leak","State":"open","Body":"Following code creates \"Event\" objects. Looks like that no references to them are kept, but last created (and returned) in each stream is not garbage collected. Is this incorrect usage or bug?\r\n\r\n```c#\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var counter = 0;\r\n        while (true)\r\n        {\r\n            await Test(counter++);\r\n            GC.Collect();\r\n        }\r\n    }\r\n\r\n    static async Task Test(int counter)\r\n    {\r\n        await foreach (var e in CreateEventSource(counter))\r\n        {\r\n            Console.WriteLine(e);\r\n        }\r\n    }\r\n\r\n    static async IAsyncEnumerable<Event> CreateEventSource(int counter)\r\n    {\r\n        for (var i = 0; i < 100; i++)\r\n        {\r\n            await Task.Delay(1); // this line can be commented and then \"Events\" \r\n            yield return new Event(counter, i);\r\n        }\r\n    }\r\n}\r\n\r\nclass Event\r\n{\r\n    private readonly int _counter;\r\n    private readonly int _i;\r\n\r\n    public Event(int counter, int i)\r\n    {\r\n        _counter = counter;\r\n        _i = i;\r\n    }\r\n\r\n    public override string ToString()\r\n        => $\"({_counter}, {_i})\";\r\n}\r\n```\r\n\r\nUsing TargetFramework netcoreapp3.0\r\n\r\n```\r\n> dotnet --info\r\nПакет SDK для .NET Core (отражающий любой global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nСреда выполнения:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39321","RelatedDescription":"Open issue \"IAsyncEnumerable possible memory leak\" (#39321)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"506685516","IsPullRequest":false,"CreatedAt":"2019-10-14T20:24:48","Actor":"imback82","Number":"7824","RawContent":null,"Title":"Debugger.Launch() on macOS","State":"closed","Body":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824)"},{"Id":"506047436","IsPullRequest":true,"CreatedAt":"2019-10-12T15:06:11","Actor":"Dotnet-GitSync-Bot","Number":"7823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7823)"},{"Id":"505621245","IsPullRequest":true,"CreatedAt":"2019-10-11T08:45:30","Actor":"Dotnet-GitSync-Bot","Number":"7822","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7822)"},{"Id":"504527034","IsPullRequest":true,"CreatedAt":"2019-10-09T12:42:07","Actor":"MichalStrehovsky","Number":"7821","RawContent":null,"Title":"Delete unused method","State":"closed","Body":"Supplements #7819.","Url":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Closed or merged PR \"Delete unused method\" (#7821)"},{"Id":"504357120","IsPullRequest":true,"CreatedAt":"2019-10-09T09:28:10","Actor":"Dotnet-GitSync-Bot","Number":"7820","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7820","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7820)"},{"Id":"504158790","IsPullRequest":true,"CreatedAt":"2019-10-09T09:27:34","Actor":"am11","Number":"7818","RawContent":null,"Title":"Fix exit code of build-native.sh","State":"closed","Body":"I noticed it in the docker container, that the failed build was successfully committing the container (false positive).","Url":"https://github.com/dotnet/corert/pull/7818","RelatedDescription":"Closed or merged PR \"Fix exit code of build-native.sh\" (#7818)"},{"Id":"504330608","IsPullRequest":true,"CreatedAt":"2019-10-09T01:16:45","Actor":"Dotnet-GitSync-Bot","Number":"7819","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7819","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7819)"},{"Id":"503784732","IsPullRequest":false,"CreatedAt":"2019-10-08T02:17:07","Actor":"ZacharyJia","Number":"7817","RawContent":null,"Title":"Call generated dll from cpp crash","State":"open","Body":"I use a dll generated by corert in a cpp program, but it crashed when any statement runs.\r\nI'm using the `.net core 3.0` and the ilcompiler version is `1.0.0-alpha-28207-01`\r\n\r\nThe call stack is:\r\n```\r\ngenet.net.exe!S_P_CoreLib_System_Threading_LockHolder__Hold()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner_Cctor__GetCctor()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase()\r\ngenet.net.exe!S_P_CoreLib_System_Text_Encoding__get_UTF8()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetModuleName()genet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__FixupModuleCell()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvokeSlow()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvoke()\r\ngenet.net.exe!genet_net_genet_net_Program__LoadLibrary()\r\ngenet.net.exe!genet_net_genet_net_Program__show()\r\ndlldemo-cpp.exe!main()  line 17\tC++\r\n```\r\n\r\nThe crash message is:\r\n```\r\n0x00007FF9C9416408 (genet.net.exe)处(位于 dlldemo-cpp.exe 中)引发的异常: 0xC0000005: 读取位置 0x0000000000000000 时发生访问冲突。\r\n```","Url":"https://github.com/dotnet/corert/issues/7817","RelatedDescription":"Open issue \"Call generated dll from cpp crash\" (#7817)"},{"Id":"503304688","IsPullRequest":false,"CreatedAt":"2019-10-07T08:30:51","Actor":"yunekit","Number":"7816","RawContent":null,"Title":"sched_yield infinite loop","State":"open","Body":"The sched_yield()==0 infinite loop occurred during the running of the application, causing the process to block and fail to work.","Url":"https://github.com/dotnet/corert/issues/7816","RelatedDescription":"Open issue \"sched_yield infinite loop\" (#7816)"},{"Id":"503145779","IsPullRequest":true,"CreatedAt":"2019-10-06T21:09:25","Actor":"Dotnet-GitSync-Bot","Number":"7815","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7815","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7815)"},{"Id":"503134823","IsPullRequest":true,"CreatedAt":"2019-10-06T19:30:50","Actor":"MichalStrehovsky","Number":"7814","RawContent":null,"Title":"Add support for multithreaded compilation to ILC","State":"closed","Body":"Improves native compilation throughput by about 33%.\r\n\r\nValidated that the output with multithreading enabled (the new default) is byte-by-byte identical with the output produced by `--singlethreaded` (new command line option to ILC that disables multithreading).\r\n\r\nWe still can do a lot more in terms of compilation throughput (virtual method resolution is really slow and runs in one of the single threaded phases, and the object writing phase is pretty slow too and is fully single threaded too).\r\n\r\nContributes to #3925 (what's left is the extra-credit stuff).","Url":"https://github.com/dotnet/corert/pull/7814","RelatedDescription":"Closed or merged PR \"Add support for multithreaded compilation to ILC\" (#7814)"},{"Id":"502963591","IsPullRequest":true,"CreatedAt":"2019-10-06T04:53:29","Actor":"MichalStrehovsky","Number":"7811","RawContent":null,"Title":"Port fixes from CoreCLR","State":"closed","Body":"Skipping dotnet/coreclr#26792 and dotnet/coreclr#26793.","Url":"https://github.com/dotnet/corert/pull/7811","RelatedDescription":"Closed or merged PR \"Port fixes from CoreCLR\" (#7811)"},{"Id":"502974204","IsPullRequest":true,"CreatedAt":"2019-10-05T16:06:41","Actor":"MichalStrehovsky","Number":"7812","RawContent":null,"Title":"Remove global state tracking in DynamicInvokeTemplateDataNode","State":"closed","Body":"DynamicInvokeTemplateDataNode populated _methodToTemplateIndex in `GetIdForMethod` which is pretty bad from multithreading perspective (non-concurrent dictionary + ID that depends on ordering).\r\n\r\nI've moved this tracking into a separate node so that this is more explicit and properly sortable.","Url":"https://github.com/dotnet/corert/pull/7812","RelatedDescription":"Closed or merged PR \"Remove global state tracking in DynamicInvokeTemplateDataNode\" (#7812)"},{"Id":"502974267","IsPullRequest":true,"CreatedAt":"2019-10-05T16:04:50","Actor":"MichalStrehovsky","Number":"7813","RawContent":null,"Title":"Cache helpers used in IL scanner","State":"closed","Body":"We have a cache for these in CorInfoImpl (when compiling), but there's no cache in the scanner. This means we're re-resolving various named helpers in CoreLib. It's a bit of a waste of CPU time. Noticed this when running the compiler under a profiler.","Url":"https://github.com/dotnet/corert/pull/7813","RelatedDescription":"Closed or merged PR \"Cache helpers used in IL scanner\" (#7813)"},{"Id":"502935521","IsPullRequest":true,"CreatedAt":"2019-10-05T12:47:51","Actor":"MichalStrehovsky","Number":"7810","RawContent":null,"Title":"Update ObjWriter","State":"closed","Body":"Picks up #7802.","Url":"https://github.com/dotnet/corert/pull/7810","RelatedDescription":"Closed or merged PR \"Update ObjWriter\" (#7810)"},{"Id":"502780858","IsPullRequest":true,"CreatedAt":"2019-10-05T06:01:27","Actor":"Dotnet-GitSync-Bot","Number":"7809","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @idlerboris @stephentoub","Url":"https://github.com/dotnet/corert/pull/7809","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7809)"},{"Id":"502527358","IsPullRequest":false,"CreatedAt":"2019-10-04T12:27:49","Actor":"kstreichergb","Number":"7808","RawContent":null,"Title":"dotnet.exe hangs during shutdown","State":"closed","Body":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\nThe \"finish\" log in the finally in Main will be seen, but the dotnet.exe process keeps running\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }catch(OperationCanceledException ex)\r\n{\r\n /** ... Reached on CTRL+Z .... **/\r\n}\r\nfinally{\r\n       _iHostApplicationLifetime.StopApplication();\r\n        await _hostLifetime.StopAsync(ct); // clean exit\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n\tProgram.cs \r\n\tpublic static async Task Main(string[] args){\r\n\ttry\r\n\t{\r\n\t\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\t\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t\t{\r\n\t\t\tawait host.RunAsync();\r\n\t\t}\r\n\t}\r\n\t}finally{\r\n\t\tConsole.WriteLine(\"Finished - will be seen. Therefore main exits, but dotnet.exe keeps running\");\r\n\t}\r\n\t}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish.\r\n\r\nUsing visual and break all\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66196903-9ecb0200-e699-11e9-812f-d3773be75aa4.png)\r\n\r\nAnd repeating it shows the Task ID changes, but the structure remains the same\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66197013-cf12a080-e699-11e9-8529-6ee9df7266ee.png)","Url":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Closed issue \"dotnet.exe hangs during shutdown\" (#7808)"},{"Id":"501662946","IsPullRequest":false,"CreatedAt":"2019-10-02T18:48:52","Actor":"RalfKornmannEnvision","Number":"7807","RawContent":null,"Title":"GC thread suspension","State":"open","Body":"Maybe I just got something wrong here and I am looking at the wrong place.\r\n\r\nMy somewhat bigger test code finally runs stable for hours on my ARM64 system without trashing the heap or consuming all the physical memory. But so far it was only a single thread console application. For my use case I would need some threads.\r\n\r\nAs expected the GC need to suspend all managed threads to do a collection. For Windows there is some hijack code but the function for unix only contains a todo. I assume the reason for this is that the necessary os functions are missing. My target system has the same issue as I cannot suspend and resume threads there. As .net core should have the same issue on other posix systems I checked there and noticed that the jit engine has an option to inject gc probes. I assume that this is the only way to get the GC working in a multi thread environment were hijacking is not possible. Or did I missed something?\r\n\r\nIn the case I am right a short check showed me that the ilcompiler doesn't support the flags and callbacks for this yet?\r\n\r\nDo I need to add this to get the GC working with multiple threads or have I looked at the wrong place?\r\n\r\nIf this the right place does it make any sense to aim for the inline version of the gc probe or can this never work with corert and the call variant is the only solution? I already checked the code and noticed that even if the inline variant can work the call needs still be implemented as it is used in more complicated cases.","Url":"https://github.com/dotnet/corert/issues/7807","RelatedDescription":"Open issue \"GC thread suspension\" (#7807)"},{"Id":"501011867","IsPullRequest":true,"CreatedAt":"2019-10-01T18:56:37","Actor":"Dotnet-GitSync-Bot","Number":"7806","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7806","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7806)"},{"Id":"500653866","IsPullRequest":true,"CreatedAt":"2019-10-01T15:25:51","Actor":"Dotnet-GitSync-Bot","Number":"7805","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7805)"},{"Id":"500408911","IsPullRequest":true,"CreatedAt":"2019-10-01T04:22:31","Actor":"Dotnet-GitSync-Bot","Number":"7804","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern","Url":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7804)"},{"Id":"499907137","IsPullRequest":true,"CreatedAt":"2019-09-29T14:16:14","Actor":"MichalStrehovsky","Number":"7803","RawContent":null,"Title":"Delete ReadyToRun portions of the compiler and test tree","State":"closed","Body":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably.","Url":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Closed or merged PR \"Delete ReadyToRun portions of the compiler and test tree\" (#7803)"},{"Id":"499773007","IsPullRequest":true,"CreatedAt":"2019-09-29T11:58:37","Actor":"MichalStrehovsky","Number":"7802","RawContent":null,"Title":"Fix Windows debug information for classes","State":"closed","Body":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n","Url":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Closed or merged PR \"Fix Windows debug information for classes\" (#7802)"},{"Id":"499146410","IsPullRequest":true,"CreatedAt":"2019-09-27T23:17:06","Actor":"Dotnet-GitSync-Bot","Number":"7800","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams","Url":"https://github.com/dotnet/corert/pull/7800","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7800)"},{"Id":"499434828","IsPullRequest":true,"CreatedAt":"2019-09-27T15:09:03","Actor":"am11","Number":"7801","RawContent":null,"Title":"Remove duplicate enum SystemVClassificationType","State":"closed","Body":"Found the duplicate definition at: https://github.com/dotnet/corert/blob/a7ce92678876ba55a1c7a65c464363b51d777b4f/src/JitInterface/src/CorInfoTypes.cs#L1170","Url":"https://github.com/dotnet/corert/pull/7801","RelatedDescription":"Closed or merged PR \"Remove duplicate enum SystemVClassificationType\" (#7801)"},{"Id":"498529328","IsPullRequest":true,"CreatedAt":"2019-09-26T22:29:33","Actor":"Dotnet-GitSync-Bot","Number":"7798","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams @stephentoub","Url":"https://github.com/dotnet/corert/pull/7798","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7798)"},{"Id":"499086023","IsPullRequest":false,"CreatedAt":"2019-09-26T19:57:16","Actor":"jkotas","Number":"7799","RawContent":null,"Title":"CppCodeGen: Implement RVA-backed static fields","State":"open","Body":"E.g. `private static ReadOnlySpan<byte> CategoryForLatin1 => new byte[] { 1, 2, 3, ... };`. CppCodeGen allocates space for these, but does not initialize it.","Url":"https://github.com/dotnet/corert/issues/7799","RelatedDescription":"Open issue \"CppCodeGen: Implement RVA-backed static fields\" (#7799)"},{"Id":"497810701","IsPullRequest":true,"CreatedAt":"2019-09-25T21:17:24","Actor":"Dotnet-GitSync-Bot","Number":"7797","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7797)"},{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"507966389","IsPullRequest":true,"CreatedAt":"2019-10-17T04:25:09","Actor":"dotnet-maestro[bot]","Number":"3758","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.12\r\n- **Date Produced**: 10/17/2019 12:27 AM\r\n- **Commit**: 32085cbc728e1016c9d6a7bc105845f0f9eb6b47\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3758","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3758)"},{"Id":"508207404","IsPullRequest":true,"CreatedAt":"2019-10-17T03:15:10","Actor":"dotnet-maestro[bot]","Number":"3761","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.15\r\n- **Date Produced**: 10/17/2019 2:04 AM\r\n- **Commit**: 5cf43118651b9b8ab3d7e61134a1c0e14ba75e27\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3761","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3761)"},{"Id":"507820459","IsPullRequest":true,"CreatedAt":"2019-10-17T01:38:16","Actor":"dotnet-maestro[bot]","Number":"3757","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 11:22 AM\r\n- **Commit**: f8aac40612d167c5beff554f569897177e786d3a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.1\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3757","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3757)"},{"Id":"508178879","IsPullRequest":false,"CreatedAt":"2019-10-17T01:21:45","Actor":"syndicatedshannon","Number":"3760","RawContent":null,"Title":"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade","State":"open","Body":"Downgrade TargetFramework from netcoreapp3.0 to netcoreapp2.2 causes the following upon build:\r\n\r\n> The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nClean/Rebuild All does not resolve. Deleting bin/obj folders in the specific projects reporting the FrameworkReference error does resolve. This causes unexpected failures when switching branches. Note the project also depends upon .NET Standard 2.1/2.0 projects, which have coincident upgrade/downgrades. However, cleaning those projects did not resolve.\r\n\r\nI can repro and try deleting something specific if it will help pin the problem down further.","Url":"https://github.com/dotnet/sdk/issues/3760","RelatedDescription":"Open issue \"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade\" (#3760)"},{"Id":"507542108","IsPullRequest":true,"CreatedAt":"2019-10-17T00:42:52","Actor":"dotnet-bot","Number":"3754","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754)"},{"Id":"508065740","IsPullRequest":true,"CreatedAt":"2019-10-16T19:57:19","Actor":"swaroop-sridhar","Number":"3759","RawContent":null,"Title":"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"open","Body":"Trying to publish a `.net core 2.1` app as a single file fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n\r\nPublishing apps as a single file is only supported in `.net core 3` and higher.\r\nSo, this change adds a version check in the SDK.\r\n\r\nSimilarly, the check is also added for the `PublishReadyToRun` and `PublishTrimmed` options.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3759","RelatedDescription":"Open PR \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3759)"},{"Id":"507625049","IsPullRequest":true,"CreatedAt":"2019-10-16T08:11:16","Actor":"dotnet-maestro[bot]","Number":"3756","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.16\r\n- **Date Produced**: 10/16/2019 4:22 AM\r\n- **Commit**: 57ce1fec7a023a8e32cc64f8ce2637a0b3cdba35\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19515.16\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3756","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3756)"},{"Id":"507542154","IsPullRequest":true,"CreatedAt":"2019-10-16T00:05:05","Actor":"dotnet-bot","Number":"3755","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755)"},{"Id":"505569280","IsPullRequest":true,"CreatedAt":"2019-10-15T23:41:48","Actor":"dotnet-bot","Number":"3737","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3737","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3737)"},{"Id":"507520224","IsPullRequest":true,"CreatedAt":"2019-10-15T23:32:25","Actor":"nguerrera","Number":"3753","RawContent":null,"Title":"Increase timeout and up ulimit -n","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Closed or merged PR \"Increase timeout and up ulimit -n\" (#3753)"},{"Id":"507453295","IsPullRequest":true,"CreatedAt":"2019-10-15T23:07:25","Actor":"vijayrkn","Number":"3750","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue: \r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk. \r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile. \r\n\r\nImpact: \r\nThis breaks the Sdk based WebJobs publish scenarios. \r\n\r\nThere are 2 parts to this fix: \r\n1. Removing the default publish profile from Netsdk\r\n2. If the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - https://github.com/aspnet/websdk/pull/1006\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3750","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3750)"},{"Id":"505628347","IsPullRequest":true,"CreatedAt":"2019-10-15T22:58:19","Actor":"dotnet-maestro[bot]","Number":"3740","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/11/2019 9:07 PM\r\n- **Commit**: f15311bdc5e9fbf4026a3099c32c5ea6b50d6236\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19511.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3740","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3740)"},{"Id":"505812496","IsPullRequest":true,"CreatedAt":"2019-10-15T22:09:55","Actor":"dotnet-bot","Number":"3741","RawContent":null,"Title":"Merge release/2.1.8xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3741","RelatedDescription":"Closed or merged PR \"Merge release/2.1.8xx to release/2.2.4xx\" (#3741)"},{"Id":"507479665","IsPullRequest":true,"CreatedAt":"2019-10-15T20:59:03","Actor":"vijayrkn","Number":"3752","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"open","Body":"Issue:\r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk.\r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile.\r\n\r\nImpact:\r\nThis breaks the Sdk based WebJobs publish scenarios.\r\n\r\nThere are 2 parts to this fix:\r\n\r\nRemoving the default publish profile from Netsdk\r\nIf the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - aspnet/websdk#1006","Url":"https://github.com/dotnet/sdk/pull/3752","RelatedDescription":"Open PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3752)"},{"Id":"505812663","IsPullRequest":true,"CreatedAt":"2019-10-15T20:17:30","Actor":"dotnet-bot","Number":"3742","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3742","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3742)"},{"Id":"507458154","IsPullRequest":true,"CreatedAt":"2019-10-15T20:12:56","Actor":"nguerrera","Number":"3751","RawContent":null,"Title":"Delete tmp file that was accidentally checked in","State":"open","Body":"Found creeping into master via merge from 3.1\r\n","Url":"https://github.com/dotnet/sdk/pull/3751","RelatedDescription":"Open PR \"Delete tmp file that was accidentally checked in\" (#3751)"},{"Id":"507174167","IsPullRequest":false,"CreatedAt":"2019-10-15T11:09:48","Actor":"mjcheetham","Number":"3749","RawContent":null,"Title":"Incorrect AppHost binary is published for dependant projects","State":"open","Body":"**Version information**\r\n.NET Core SDK 3.0.100\r\n\r\n**Reproduction steps**\r\nOn a Mac...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r win-x64\r\n\r\nor on Windows...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r osx-x64\r\n\r\n**Expected behaviour**\r\nIn the publish directory there exists App2.exe and App1.exe (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\n**Actual behaviour**\r\nIn the publish directory there exists App2.exe and **_App1 (not a Windows PE)_** (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\nOn a Mac publishing win-x64:\r\n```shell\r\n$ dotnet --version\r\n3.0.100\r\n$ pwd\r\n/Users/<user>/scratch/xpublishbug/App2/bin/Debug/netcoreapp3.0/win-x64/publish\r\n$ ls -l App*\r\n-rwxr-xr-x  1 <user>  <group>   80860 15 Oct 12:05 App1\r\n-rw-r--r--  1 <user>  <group>    4608 15 Oct 12:05 App1.dll\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App1.pdb\r\n-rw-r--r--  1 <user>  <group>   30026 15 Oct 12:05 App2.deps.json\r\n-rw-r--r--  1 <user>  <group>    4096 15 Oct 12:05 App2.dll\r\n-rwxr--r--  1 <user>  <group>  158208 15 Oct 12:05 App2.exe\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App2.pdb\r\n-rw-r--r--  1 <user>  <group>      26 15 Oct 12:05 App2.runtimeconfig.json\r\n```\r\n\r\nOn Windows publishing osx-x64:\r\n```powershell\r\nPS> dotnet --version\r\n3.0.100\r\nPS> ls App*\r\n\r\n\r\n    Directory: C:\\Users\\<user>\\scratch\\xpublishtest\\App2\\bin\\Debug\\netcoreapp3.0\\osx-x64\\publish\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       2019-10-15  12:18 PM           4608 App1.dll\r\n-a----       2019-10-15  12:18 PM         159744 App1.exe\r\n-a----       2019-10-15  12:18 PM            444 App1.pdb\r\n-a----       2019-10-15  12:18 PM          80860 App2\r\n-a----       2019-10-15  12:18 PM          27495 App2.deps.json\r\n-a----       2019-10-15  12:18 PM           4096 App2.dll\r\n-a----       2019-10-15  12:18 PM            444 App2.pdb\r\n-a----       2019-10-15  12:18 PM             28 App2.runtimeconfig.json\r\n```","Url":"https://github.com/dotnet/sdk/issues/3749","RelatedDescription":"Open issue \"Incorrect AppHost binary is published for dependant projects\" (#3749)"},{"Id":"507060412","IsPullRequest":false,"CreatedAt":"2019-10-15T07:30:29","Actor":"josefblaha","Number":"3748","RawContent":null,"Title":"Build succeeds although a file was deleted in a referenced project","State":"open","Body":"In a specific situation, when a file is deleted, causing compile error, build still succeedes.\r\n1. Create a new .NET Standard library project ClassLibrary1 with public Class1.\r\n2. Add another library ClassLibrary2 to the solution.\r\n3. Add a project reference from ClassLibrary2 to ClassLibrary1.\r\n4. Create a new class Consumer1 in ClassLibrary2 with a field of type ClassLibrary1.Class1.\r\n5. dotnet build on solution succeeds (as expected).\r\n6. Delete ClassLibrary1.Class1 file.\r\n7. dotnet build on solution still succeeeds (although it shouldn't).\r\n\r\nPrepared solution in state of point 4:\r\n[FileDeleteTest.zip](https://github.com/dotnet/sdk/files/3727846/FileDeleteTest.zip)\r\n\r\ndotnet SDK 3.0.100\r\nVS 16.3.3\r\nWindows 10 1903\r\n","Url":"https://github.com/dotnet/sdk/issues/3748","RelatedDescription":"Open issue \"Build succeeds although a file was deleted in a referenced project\" (#3748)"},{"Id":"506814823","IsPullRequest":true,"CreatedAt":"2019-10-14T21:06:42","Actor":"dsplaisted","Number":"3747","RawContent":null,"Title":"Update branding to 3.1.100-preview2","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3747","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.100-preview2\" (#3747)"},{"Id":"506742575","IsPullRequest":false,"CreatedAt":"2019-10-14T15:59:55","Actor":"mwpowellhtx","Number":"3746","RawContent":null,"Title":"Build pipeline failed to resolve CLI tooling after VS2019 installation","State":"open","Body":"We got errors in our build pipeline related to our internal CLI tooling failing to resolve correctly, in our estimation, following VS2019 installation.\r\n\r\nRunning the latest NuGet: `Version: 5.3.0.6260`\r\n\r\nIf it helps, our `dotnet --info` looks like this:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3746","RelatedDescription":"Open issue \"Build pipeline failed to resolve CLI tooling after VS2019 installation\" (#3746)"},{"Id":"506392857","IsPullRequest":true,"CreatedAt":"2019-10-13T22:49:14","Actor":"wli3","Number":"3745","RawContent":null,"Title":"WIP helix","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3745","RelatedDescription":"Open PR \"WIP helix\" (#3745)"},{"Id":"505951909","IsPullRequest":true,"CreatedAt":"2019-10-11T23:43:10","Actor":"dotnet-maestro[bot]","Number":"3744","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.02\r\n- **Date Produced**: 10/11/2019 3:47 PM\r\n- **Commit**: 19942e71998242599a0b6d4496066eaa38588af5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3744","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3744)"},{"Id":"505950895","IsPullRequest":false,"CreatedAt":"2019-10-11T16:37:45","Actor":"AArnott","Number":"3743","RawContent":null,"Title":"NETSDK1085: SatelliteDllsProjectOutputGroupDependencies causes P2P build during pack","State":"open","Body":"The SatelliteDllsProjectOutputGroupDependencies target results in P2Ps doing a build even when NoBuild=true, as caught by the NETSDK1085 error.\r\n\r\nSimple repro sln: [NETSDK1085Bug.zip](https://github.com/dotnet/sdk/files/3718674/NETSDK1085Bug.zip)\r\n\r\nTo repro:\r\n```\r\ndotnet build\r\ndotnet pack --no-build\r\n```\r\n\r\nScenario: I'm building an analyzer package which includes code fixes in one assembly and analyzers in a P2P reference. I need to gather satellite assemblies from the analyzer project, which is exactly what the `SatelliteDllsProjectOutputGroupDependencies` target is for and what I've been using for years in many projects. But apparently it results in triggering a build in the analyzer project even when I'm using `dotnet pack --no-build`.\r\n\r\nThis came up in my upgrade from .NET Core SDK 2.2.401 to 3.0.100.","Url":"https://github.com/dotnet/sdk/issues/3743","RelatedDescription":"Open issue \"NETSDK1085: SatelliteDllsProjectOutputGroupDependencies causes P2P build during pack\" (#3743)"},{"Id":"505569243","IsPullRequest":true,"CreatedAt":"2019-10-11T04:31:39","Actor":"dotnet-bot","Number":"3736","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3736","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/2.2.4xx\" (#3736)"},{"Id":"505569183","IsPullRequest":true,"CreatedAt":"2019-10-11T03:48:26","Actor":"dotnet-bot","Number":"3735","RawContent":null,"Title":"Merge release/2.1.8xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3735","RelatedDescription":"Closed or merged PR \"Merge release/2.1.8xx to release/2.2.2xx\" (#3735)"},{"Id":"505569308","IsPullRequest":true,"CreatedAt":"2019-10-11T03:30:40","Actor":"dotnet-bot","Number":"3738","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3738","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3738)"},{"Id":"505532879","IsPullRequest":true,"CreatedAt":"2019-10-11T03:30:23","Actor":"nguerrera","Number":"3733","RawContent":null,"Title":"Merge 3.0.1xx to 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3733","RelatedDescription":"Closed or merged PR \"Merge 3.0.1xx to 3.1.1xx\" (#3733)"},{"Id":"505536771","IsPullRequest":true,"CreatedAt":"2019-10-11T01:11:26","Actor":"dotnet-maestro[bot]","Number":"3734","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191010.13\r\n- **Date Produced**: 10/10/2019 9:15 PM\r\n- **Commit**: ee7dbc9e064bf59f822c5310b89e0e996ccc0d58\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3734","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3734)"},{"Id":"505569333","IsPullRequest":true,"CreatedAt":"2019-10-11T00:05:30","Actor":"dotnet-bot","Number":"3739","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3739","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3739)"},{"Id":"505491895","IsPullRequest":true,"CreatedAt":"2019-10-10T21:55:54","Actor":"dotnet-maestro[bot]","Number":"3732","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191010.08\r\n- **Date Produced**: 10/10/2019 7:27 PM\r\n- **Commit**: 903ca49e3ffddc551e12d2f94d7cca95f9a340bf\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3732","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3732)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1184446392829386752","CreatedAt":"2019-10-16T12:30:00+00:00","UserScreenname":"dotnet","Text":"🚀 Coding F# in Visual Studio Code with Ionide 🚀\n\nIn this episode, @_cartermp sits down with @cecilphillip to talk a… https://t.co/5AJoiFdoeK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"1184165499212423168","CreatedAt":"2019-10-15T17:53:50+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 1 https://t.co/HAD1JAsf3j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":188,"FavoriteCount":100,"RawContent":null},{"Id":"1184165405574586368","CreatedAt":"2019-10-15T17:53:28+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.1 Preview 1 https://t.co/Dho82BhBu1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":36,"RawContent":null},{"Id":"1184151270635921408","CreatedAt":"2019-10-15T16:57:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"1182709231746727941","CreatedAt":"2019-10-11T17:27:09+00:00","UserScreenname":"dotnet","Text":"We've been working hard to make IoT development on .NET a great experience.\n\nIn this episode of #OnDotNet… https://t.co/psNXS59gtS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":31,"RawContent":null},{"Id":"1181935602410897408","CreatedAt":"2019-10-09T14:13:01+00:00","UserScreenname":"dotnet","Text":"Hey folks. We'll be building out the WeatherApp from #dotNETConf; from the API and configuration, all the way to bu… https://t.co/zd90XbTV5c","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":42,"FavoriteCount":10,"RawContent":null},{"Id":"1181701006347735040","CreatedAt":"2019-10-08T22:40:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-17T05:30:40.2632831Z","RunDurationInMilliseconds":17345}