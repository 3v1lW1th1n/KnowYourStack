{"Data":{"Blog":{"FeedItems":[{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null},{"Title":"Sharing Configuration in ASP.NET Core SPA Scenarios","PublishedOn":"2017-10-27T15:17:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Mike Rousos ASP.NET Core 2.0 recently released and, with it, came some new templates, including new project templates for single-page applications (SPA) served from an...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/","RawContent":null},{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6816633207","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:18:18","Actor":"bigswede74","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2271","RelatedDescription":"Opened issue \"Predefined type 'System.ValueTuple is not defined or imported\" (#2271) at aspnet/Home","RelatedBody":"ASP.NET Core Web Application targeting .net 4.7.1 cannot use System.ValueTuple.\r\n\r\nRepro:\r\n\r\n1. Create a new ASP.NET Core Web Application that targets .net 4.7.1\r\n2. Add a class that has a tuple\r\n3. Observe errors.\r\n-Cannot define a class or member that utilizes tuples because the compiler required type 'System.Runtime.CompilerServices.TupleElementNamesAttribute' cannot be found. Are you missing a reference?\r\n-Predefined type 'System.ValueTuple`2' is not defined or imported\r\n\r\n"},{"Id":"6815564029","Type":"IssuesEvent","CreatedAt":"2017-11-06T16:39:39","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2268","RelatedDescription":"Closed issue \"Precompiled views not happening for self-contained apps\" (#2268) at aspnet/Home","RelatedBody":"I noticed startup time was absolutely terrible for my self-contained mvc application. I created a empty mvc project to try to repro. \r\n\r\n`dotnet new mvc`\r\n\r\nWhen I `dotnet publish` I get a folder with a PrecompiledViews.dll and the app starts really fast.\r\nWhen I `dotnet publish -r win-x64` I don't see the PrecompiledViews.dll and my app takes 3-4 seconds to start each time.\r\n\r\nWhat do I need to do to get precompiled views for my self contained mvc application?\r\n\r\nI tried adding:\r\n\r\n```\r\n<MvcRazorCompileOnPublish>true</MvcRazorCompileOnPublish>\r\n<PreserveCompilationContext>true</PreserveCompilationContext>\r\n```\r\n\r\nTo my project and that didn't seem to have any effect."},{"Id":"6814266807","Type":"IssuesEvent","CreatedAt":"2017-11-06T12:29:16","Actor":"KalpeshChheda","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2270","RelatedDescription":"Opened issue \"I have Console and NETStandard 2.0 project. Unable to add razor page.\" (#2270) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI am trying to add razor page to NETStandard Project. But i cant find option for that. If I manually add cshtml file it does not generate backing C# file\r\nI want to generate html form cshtml. Is CSHTML/Razor support on netstandard? \r\n\r\nThanks.\r\n"},{"Id":"6813328117","Type":"IssuesEvent","CreatedAt":"2017-11-06T08:50:22","Actor":"ahmetatar","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2269","RelatedDescription":"Opened issue \"StartupLoader\" (#2269) at aspnet/Home","RelatedBody":"When I want to use convention based startup by environment I need to pass the assembly name to the UseStartup method.What is the subtle idea underneath this?Because it could be in another assembly? When I want to use the Generic version of this method, I specify exactly which startup class it should use.But when I was using the convention-based method UseStartup, I would prefer to search in the calling assembly.So I would not have to write a code like this;\r\n\r\n```\r\npublic static IWebHost BuildWebHost(string[] args) => WebHost.CreateDefaultBuilder(args)\r\n        .UseStartup(typeof(Program).Assembly.FullName)\r\n        .Build();\r\n```\r\n\r\nInstead of;\r\n\r\n```\r\npublic static IWebHost BuildWebHost(string[] args) => WebHost.CreateDefaultBuilder(args)\r\n        .UseStartup()\r\n        .Build();\r\n```\r\n\r\nIt may be absurd, but I was really curious :)"},{"Id":"6812438836","Type":"IssuesEvent","CreatedAt":"2017-11-06T03:06:24","Actor":"krystyna93","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2267","RelatedDescription":"Closed issue \"Failing installation of SixLabors.ImageSharp in NuGet VS 15.4.2\" (#2267) at aspnet/Home","RelatedBody":"I have been having issues with the installation of the SixLabors.ImageSharp package.\r\nI have tried to repair VS 15.4.0 but the installation still failed.\r\nI have updated to Visual Studio 15.4.2, but I am still getting the same error\r\nI have also uninstalled the package, rebooted VS and reinstalled the package again numerous time, but to no avail.\r\nI have also uninstalled and reinstalled the Microsoft.NetCoreApp.All package, but that did not work either.\r\n\r\n**ERROR LIST window :**\r\n\r\nError Package restore failed. Rolling back package changes for 'myprojectname'.\r\n\r\n**I am also receiving the following error in my OUTPUT window :**\r\n\r\n    Restoring packages for C:\\Users\\Me\\Source\\Repos\\project\\src\\project\\project.csproj...\r\n    Package SixLabors.ImageSharp 1.0.0-beta0001 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package SixLabors.ImageSharp 1.0.0-beta0001 supports:\r\n\r\n    netstandard1.1 (.NETStandard,Version=v1.1)\r\n    netstandard1.3 (.NETStandard,Version=v1.3)\r\n    Package restore failed. Rolling back package changes for 'project'.\r\n    Time Elapsed: 00:00:01.1947210\r\n    ========== Finished ==========\r\n\r\nI dont know what could be the issue, am I missing some library for it?\r\nCan someone please enlighten me, I cant seem to find a solution to this issue, which has been bugging me all day"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6817615289","Type":"PullRequestEvent","CreatedAt":"2017-11-07T00:19:12","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1095","RelatedDescription":"Opened pull request \"Enabling starting connection without protocol negotiation\" (#1095) at aspnet/SignalR","RelatedBody":"#932 "},{"Id":"6816867970","Type":"IssuesEvent","CreatedAt":"2017-11-06T21:09:55","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1094","RelatedDescription":"Closed issue \"Intermittent error: Cannot access a disposed object\" (#1094) at aspnet/SignalR","RelatedBody":"Hello,\r\n\r\nOur application undergoes automated testing after each commit/build. Once every two or three hundred tests, the testing will fail due to an exception in SignalR. Here is a typical stack trace:\r\n\r\n`Cannot access a disposed object.\r\nObject name: \\u0027LITEWORLD\\u0027.\r\n   at Microsoft.AspNet.SignalR.Messaging.ScaleoutStream.Send(Func2 send, Object state)\r\n   at Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(ConnectionMessage message)\r\n   at Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Outgoing(IHubOutgoingInvokerContext context)\r\n   at Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.\\u003c\\u003ec__DisplayClass6_0.\\u003cBuildOutgoing\\u003eb__0(IHubOutgoingInvokerContext context)\r\n   at Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object\\u0026 result)\r\n   at CallSite.Target(Closure , CallSite , Object , String )\r\n   at E2SSPro.Web.SignalR.DBUpdateHub.SendMessage(String msg, String signalToken) in D:\\\\TeamCity\\\\BuildAgent3\\\\work\\\\b28bc0f3a005363e\\\\E2SSPro.Web\\\\SignalR\\\\DBUpdateHub.cs:line 25\r\n   at E2SSPro.Web.Controllers.DBUpdateController.AddProgressMsg(String message) in D:\\\\TeamCity\\\\BuildAgent3\\\\work\\\\b28bc0f3a005363e\\\\E2SSPro.Web\\\\Controllers\\\\DBUpdateController.cs:line 103\r\n   at E2SSPro.Web.Controllers.DBUpdateController.UpdateStatusDelegate(String message, Boolean messageBox, Boolean logFile) in D:\\\\TeamCity\\\\BuildAgent3\\\\work\\\\b28bc0f3a005363e\\\\E2SSPro.Web\\\\Controllers\\\\DBUpdateController.cs:line 113\r\n   ...`\r\n\r\nBackground: I have a single server vm running 10 copies of our application in IIS. To run a test, a site is chosen, the app pool is shut down, new files are copied in, and the app pool restarted. The system uses a Redis cluster on the back end which handles the SignalR messaging. (I wrote the testing system, not the application, so I will have to ask if more details are needed.) A database update process normally uses SignalR to report status to the user in their browser. However, in the automated testing case, there is no actual browser (only a different app sending requests), and therefore there is no client that is actually listening to any of the messages.\r\n\r\nAs I mentioned, we see this error very infrequently, but it's there, and it never stops happening :). Any ideas what might be going on?\r\n\r\nThanks for your help."},{"Id":"6816855259","Type":"IssuesEvent","CreatedAt":"2017-11-06T21:07:02","Actor":"MisterAcoustic","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1094","RelatedDescription":"Opened issue \"Intermittent error: Cannot access a disposed object\" (#1094) at aspnet/SignalR","RelatedBody":"Hello,\r\n\r\nOur application undergoes automated testing after each commit/build. Once every two or three hundred tests, the testing will fail due to an exception in SignalR. Here is a typical stack trace:\r\n\r\n`Cannot access a disposed object.\r\nObject name: \\u0027LITEWORLD\\u0027.\r\n   at Microsoft.AspNet.SignalR.Messaging.ScaleoutStream.Send(Func2 send, Object state)\r\n   at Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(ConnectionMessage message)\r\n   at Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Outgoing(IHubOutgoingInvokerContext context)\r\n   at Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.\\u003c\\u003ec__DisplayClass6_0.\\u003cBuildOutgoing\\u003eb__0(IHubOutgoingInvokerContext context)\r\n   at Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object\\u0026 result)\r\n   at CallSite.Target(Closure , CallSite , Object , String )\r\n   at E2SSPro.Web.SignalR.DBUpdateHub.SendMessage(String msg, String signalToken) in D:\\\\TeamCity\\\\BuildAgent3\\\\work\\\\b28bc0f3a005363e\\\\E2SSPro.Web\\\\SignalR\\\\DBUpdateHub.cs:line 25\r\n   at E2SSPro.Web.Controllers.DBUpdateController.AddProgressMsg(String message) in D:\\\\TeamCity\\\\BuildAgent3\\\\work\\\\b28bc0f3a005363e\\\\E2SSPro.Web\\\\Controllers\\\\DBUpdateController.cs:line 103\r\n   at E2SSPro.Web.Controllers.DBUpdateController.UpdateStatusDelegate(String message, Boolean messageBox, Boolean logFile) in D:\\\\TeamCity\\\\BuildAgent3\\\\work\\\\b28bc0f3a005363e\\\\E2SSPro.Web\\\\Controllers\\\\DBUpdateController.cs:line 113\r\n   ...`\r\n\r\nBackground: I have a single server vm running 10 copies of our application in IIS. To run a test, a site is chosen, the app pool is shut down, new files are copied in, and the app pool restarted. The system uses a Redis cluster on the back end which handles the SignalR messaging. (I wrote the testing system, not the application, so I will have to ask if more details are needed.) A database update process normally uses SignalR to report status to the user in their browser. However, in the automated testing case, there is no actual browser (only a different app sending requests), and therefore there is no client that is actually listening to any of the messages.\r\n\r\nAs I mentioned, we see this error very infrequently, but it's there, and it never stops happening :). Any ideas what might be going on?\r\n\r\nThanks for your help."},{"Id":"6816726936","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:38:49","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1050","RelatedDescription":"Closed issue \"Registering Client for Page Specific data events\" (#1050) at aspnet/SignalR","RelatedBody":"Not so much an issue but more a question of how to handle something\r\n\r\nI'm building a SignalR microservice that will use Redis as a backplane and all the front end clients will connect to us for page specific events. \r\n\r\n-Private messages\r\n-Group messages on a live chat\r\n-New video feeds coming online. \r\n\r\nBasically depending on what page they are on we will want to send them different events. I wouldnt want to send group message events from Group A when they moved over to Group B or send them messages about new video feeds when they are not on the home page browsing video feeds. \r\n\r\nI guess im mainly confused about the front end implementation of a person moving from page to page and constantly reconnecting on how to handle that. Do we have a sample somewhere that emulated similar behavior?"},{"Id":"6816045468","Type":"IssuesEvent","CreatedAt":"2017-11-06T18:14:23","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1093","RelatedDescription":"Closed issue \"Searching for .NET Core SignalR library returns \"Gray.Microsoft.AspNetCore.SignalR\" instead of \"Microsoft.AspNetCore.SignalR\" in Visual Studio\" (#1093) at aspnet/SignalR","RelatedBody":""},{"Id":"6815978194","Type":"IssuesEvent","CreatedAt":"2017-11-06T17:59:35","Actor":"Giancarlos","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1093","RelatedDescription":"Opened issue \"Searching for .NET Core SignalR library returns \"Gray.Microsoft.AspNetCore.SignalR\" instead of \"Microsoft.AspNetCore.SignalR\" in Visual Studio\" (#1093) at aspnet/SignalR","RelatedBody":""},{"Id":"6814514678","Type":"IssuesEvent","CreatedAt":"2017-11-06T13:26:44","Actor":"cfrets","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1092","RelatedDescription":"Closed issue \"Clients.User IRequest equivalent\" (#1092) at aspnet/SignalR","RelatedBody":"I'm using alpha2 and needs to use Clients.User, but i'm looking for the IRequest equivalent.\r\nI need to get the users claims. How to get these in alpha2?"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6817364944","Type":"IssuesEvent","CreatedAt":"2017-11-06T23:03:16","Actor":"SteveSandersonMS","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4862","RelatedDescription":"Closed issue \"Report good error messages when JSON fails to deserialize\" (#4862) at aspnet/Mvc","RelatedBody":"When the JsonInputFormatter detects an error in deserialising JSON (e.g. required properties) the ModelState.IsValid property is to false and there are ModelError instances to be found, but their ErrorMessage property is empty while their Exception has a perfectly good error message to use.\n"},{"Id":"6817363794","Type":"IssuesEvent","CreatedAt":"2017-11-06T23:02:57","Actor":"SteveSandersonMS","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4607","RelatedDescription":"Closed issue \"JsonInputFormatter, ModelState and error response message.\" (#4607) at aspnet/Mvc","RelatedBody":"I have been digging through the aspnet/mvc issues backlog as well as StackOverflow/Google and I have learned that when a client calls a controller/action that uses `[FromBody]`, the `JsonInputFormatter` is used rather than the MVC Model binding stuff.  This results in `ModelState.IsValid` returning true even when the model state isn't valid, because the _actual_ model validation occurs as part of the input formatter processing, after the `ModelState` is already populated.  This, of course, is problematic because it doesn't align with other properties like `FromRoute` where deserialization/parsing errors are included in the `ModelState`.\n\nI can accept that this is how things work though and move on.  The problem I am now running into is that I can't figure out any way to surface the JSON deserializer error in the `BadRequest` response.  Looking at https://github.com/aspnet/Mvc/blob/master/src/Microsoft.AspNet.Mvc.Formatters.Json/JsonInputFormatter.cs#L105, I can see that the `ModelState` is actually updated (Yay!), unfortunately because the Input Formatter proceeds with surfacing the error through its failure mechanisms as well (https://github.com/aspnet/Mvc/blob/master/src/Microsoft.AspNet.Mvc.Formatters.Json/JsonInputFormatter.cs#L133) there is no opportunity for user code to actually look at the `ModelState` and report the error it has in the usual ways (`HttpBadRequest(ModelState)`).\n\nWhat is the ASP.NET Core 1.0 release plan for this?  Unless I am missing something, it seems that I can't really leverage input formatters unless I am okay with never giving a useful response to my users.  If I want to give them information to help troubleshoot what is wrong with their request I have to take in a `[FromBody] String` and deserialize by hand inside each of my actions, or build my own InputFormatter that doesn't actually return an error on failure and instead just populates the `ModelState` (as `JsonInputFormatter` does), then claim success.\n\nAlso, are there any workarounds short of writing my own input formatter that doesn't behave correctly (always returns success with Model errors)?  I also tried adding an exception filter but it doesn't appear to catch InputFormatter problems, which isn't surprising as the `ExceptionFilter` is much later in the pipeline.\n"},{"Id":"6817361304","Type":"PullRequestEvent","CreatedAt":"2017-11-06T23:02:15","Actor":"SteveSandersonMS","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7015","RelatedDescription":"Merged pull request \"Better JSON deserialization errors. Implementation for #4607\" (#7015) at aspnet/Mvc","RelatedBody":""},{"Id":"6814774845","Type":"IssuesEvent","CreatedAt":"2017-11-06T14:20:13","Actor":"hieudole","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6977","RelatedDescription":"Closed issue \"ASP.Net Core 2.0 AddApplicationPart(assembly) does not work on IIS\" (#6977) at aspnet/Mvc","RelatedBody":"I used the following code to test:\r\n\r\n`public void ConfigureServices(IServiceCollection services)\r\n{var assembly = typeof(Startup).GetTypeInfo().Assembly;\r\n            services.AddMvc().AddApplicationPart(assembly);\r\n}\r\n`\r\n\r\nIt works fine on IIS Express but I got the error 500 on ISS 10.0.\r\nWith the same code, I got no error on ASP.Net 1.1, on both IIS Express & IIS 10.0."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6818347076","Type":"IssuesEvent","CreatedAt":"2017-11-07T04:53:28","Actor":"mkArtak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1496","RelatedDescription":"Opened issue \"[Question] HttpContext?.User?.Identity?.Name casing differs when run on Mac OS vs Windows\" (#1496) at aspnet/Identity","RelatedBody":"Hi.\r\n\r\nI have a controller action, which uses current user's name internally. While running on Windows, I got used to getting the result of HttpContext?.User?.Identity?.Name in uppercase. However, just discovered, that the same API returns the value in lowercase on Mac.\r\n\r\nThe project runs on the latest ASPNET Core framework.\r\n\r\nIs this by design ?\r\n\r\nThanks,\r\nArtak"},{"Id":"6817205366","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:23:45","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1494","RelatedDescription":"Closed issue \"GenerateChangePhoneNumberTokenAsync too long!\" (#1494) at aspnet/Identity","RelatedBody":"I am use identity add a phone number, and generate an token, but when I send sms, the supplier told me the token it's too long! \r\n\r\n![image](https://user-images.githubusercontent.com/20808494/32431720-7f0b35c0-c30f-11e7-8873-d7b637c15451.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20808494/32431770-a8b9438a-c30f-11e7-9f12-9128f52f746d.png)\r\n\r\nCould provide a method it can generate some  number code ?\r\n\r\n\r\n"},{"Id":"6817199822","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:22:26","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1467","RelatedDescription":"Closed issue \"Add alternative ASP.NET Identity RavenDB Provider to the README file\" (#1467) at aspnet/Identity","RelatedBody":"What's the process for adding an alternative provider? There already is a RavenDB Provider listed in the repository description, I'd like to list my package [https://github.com/maqduni/AspNetCore.Identity.RavenDb](https://github.com/maqduni/AspNetCore.Identity.RavenDb) there as well, it's also the most downloaded and complete RavenDB provider.\r\n\r\nShould I list it in parenthesis by the existing link? like,\r\n\r\n- ASP.NET Identity RavenDB Provider ([alternative provider by Maqduni](https://github.com/maqduni/AspNetCore.Identity.RavenDb))"},{"Id":"6817198534","Type":"PullRequestEvent","CreatedAt":"2017-11-06T22:22:08","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1486","RelatedDescription":"Merged pull request \"Add alternative RavenDB provider by maqduni.\" (#1486) at aspnet/Identity","RelatedBody":"There already is a RavenDB Provider listed in the repository description, I'd like to list my package https://github.com/maqduni/AspNetCore.Identity.RavenDb there as well, it's also the most downloaded and complete RavenDB provider.\r\n\r\nRelated issue https://github.com/aspnet/Identity/issues/1467"},{"Id":"6815233098","Type":"IssuesEvent","CreatedAt":"2017-11-06T15:42:45","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1495","RelatedDescription":"Opened issue \"Email Confirmation Checked Before Password Issue\" (#1495) at aspnet/Identity","RelatedBody":"If I require an email to be confirmed before logging in, this check happens before the password is validated, and if the Email is not confirmed then it shortcircuits the password check [here](https://github.com/aspnet/Identity/blob/52dfb0217597ae18efd5958e380fe8e56cde3163/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L138).\r\n\r\nThis has me a little nervous about a small account enumeration risk.  If we have a decent number of users who have not confirmed their email (for who knows what reason), then someone can just start bruteforcing usernames and Identity will return back that the email needs to be confirmed first.  Then the attacker knows that they have a valid user.  Sure they still can't login, until the user confirms their email, but it still lets them grab hold of a valid username.\r\n\r\nWhat I really want to happen is to return that \"Email is not confirmed\" message *only* if the password they entered was correct.  Otherwise, I just want to return back the default \"Invalid Login\" message to not expose the account they hit was a valid user."},{"Id":"6813266293","Type":"IssuesEvent","CreatedAt":"2017-11-06T08:33:36","Actor":"seven1986","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1494","RelatedDescription":"Opened issue \"GenerateChangePhoneNumberTokenAsync too long!\" (#1494) at aspnet/Identity","RelatedBody":"I am use identity add a phone number, and generate an token, but when I send sms, the supplier told me the token it's too long! \r\n\r\n![image](https://user-images.githubusercontent.com/20808494/32431720-7f0b35c0-c30f-11e7-8873-d7b637c15451.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20808494/32431770-a8b9438a-c30f-11e7-9f12-9128f52f746d.png)\r\n\r\nCould provide a method it can generate some  number code ?\r\n\r\n\r\n"},{"Id":"6794038203","Type":"IssuesEvent","CreatedAt":"2017-11-01T10:22:02","Actor":"lurumad","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1493","RelatedDescription":"Opened issue \"ASP.NET Core Identity in multiple ASP.NET Core Applications: Invalid Token\" (#1493) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI have two web applications, an administration app and Identity Server app. In administration app administrators create new users accounts and this app generates a token for email confirmation:\r\n\r\n```csharp\r\nvar token = await userManager.GenerateEmailConfirmationTokenAsync(user);\r\n```\r\nI want to confirm email and reset the password in the identity server app, but I always recieved an InvalidToken error.\r\n\r\nI've configured Identity in both apps:\r\n\r\n```csharp\r\nservices.AddIdentity<User, IdentityRole>()\r\n                .AddEntityFrameworkStores<AdministrationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n```\r\n\r\nIf I generate and confirm the email in the administration app works, but in identity server app always the same error: InvalidToken\r\n\r\nDid I missed something?\r\n\r\nRegards!"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6817642628","Type":"IssuesEvent","CreatedAt":"2017-11-07T00:28:17","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2148","RelatedDescription":"Closed issue \"502.3 An operation was attempted on a nonexistent network connection\" (#2148) at aspnet/KestrelHttpServer","RelatedBody":"hi,\r\nmy application on azure web app is working.\r\nasp.net core 2.0 version.\r\nbut I often encounter the 502.3 error that I do not know why. When I examine the freb logs, \"An operation was attempted on a nonexistent network connection.\r\n  (0x800704cd) \"and\" There was a connection error while trying to route the request.\r\n\"but I have no idea about these faults.\r\nI have checked the previous 502.3 errors and wrote a problem with asp.net core 1.1, but the problem still continues.\r\nThe site is a high hit area.\r\nI would appreciate your help.\r\n\r\n[freblog.txt](https://github.com/aspnet/KestrelHttpServer/files/1447948/freblog.txt)\r\n"},{"Id":"6817167809","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:15:02","Actor":"cinaradem","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2148","RelatedDescription":"Opened issue \"502.3 An operation was attempted on a nonexistent network connection\" (#2148) at aspnet/KestrelHttpServer","RelatedBody":"hi,\r\nmy application on azure web app is working.\r\nasp.net core 2.0 version.\r\nbut I often encounter the 502.3 error that I do not know why. When I examine the freb logs, \"An operation was attempted on a nonexistent network connection.\r\n  (0x800704cd) \"and\" There was a connection error while trying to route the request.\r\n\"but I have no idea about these faults.\r\nI have checked the previous 502.3 errors and wrote a problem with asp.net core 1.1, but the problem still continues.\r\nThe site is a high hit area.\r\nI would appreciate your help.\r\n\r\n[freblog.txt](https://github.com/aspnet/KestrelHttpServer/files/1447948/freblog.txt)\r\n"},{"Id":"6813788941","Type":"IssuesEvent","CreatedAt":"2017-11-06T10:34:56","Actor":"timminata","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2143","RelatedDescription":"Closed issue \"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Request timed out.\" (#2143) at aspnet/KestrelHttpServer","RelatedBody":"Hi,\r\nWe are currently getting a 500 from Kestrel on our net core 2.0 application when a client tries to upload a file and the connection between client and server is terminated (by the client) prematurely. Is this the expected behaviour? Is there a way to prevent it from coming up as a 500 since it is affecting our telemetry/uptime stats. From what I understand it is failing since Kestrel negotiates the file upload (we are using IFormFile) and since the client is disconnecting while the transfer is in progress, it is throwing an error before we hit our controller.\r\n\r\nThanks for any info, I have looked at manually streaming the file (https://docs.microsoft.com/en-us/aspnet/core/mvc/models/file-uploads) but was wondering if it was necessary to go down this route or if I can rather just handle the Kestrel error myself.\r\nThanks"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6817614782","Type":"IssuesEvent","CreatedAt":"2017-11-07T00:19:02","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1750","RelatedDescription":"Closed issue \"Make VisualStudioRzorParser more resilient to Background->Foreground thread dispatching after text buffer disposal\" (#1750) at aspnet/Razor","RelatedBody":"Today we re-dispatch to the foreground thread in several cases; this isn't tolerant of a text buffer being disposed and all its underlying resources being disposed."},{"Id":"6817613893","Type":"PullRequestEvent","CreatedAt":"2017-11-07T00:18:45","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1756","RelatedDescription":"Merged pull request \"Make Foreground dispatchable methods noop if parser is disposed.\" (#1756) at aspnet/Razor","RelatedBody":"- Added tests to validate each of the new noopable methods.\r\n\r\n#1750"},{"Id":"6817564261","Type":"PullRequestEvent","CreatedAt":"2017-11-07T00:02:45","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1756","RelatedDescription":"Opened pull request \"Make Foreground dispatchable methods noop if parser is disposed.\" (#1756) at aspnet/Razor","RelatedBody":"- Added tests to validate each of the new noopable methods.\r\n\r\n#1750"},{"Id":"6817375265","Type":"PullRequestEvent","CreatedAt":"2017-11-06T23:06:08","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1754","RelatedDescription":"Merged pull request \"Ignore - Seeing if appveyor can build.\" (#1754) at aspnet/Razor","RelatedBody":""},{"Id":"6817310637","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:49:38","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1748","RelatedDescription":"Closed issue \"Make VisualStudioRazorParser dispatch document structure changed events on foreground thread.\" (#1748) at aspnet/Razor","RelatedBody":"There's a lot of ceremony that needs to go on when notifying listeners of a document structure changed event, lets own that."},{"Id":"6817309392","Type":"PullRequestEvent","CreatedAt":"2017-11-06T22:49:19","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1752","RelatedDescription":"Merged pull request \"Dispatch DocumentStructureChanged event on foreground thread.\" (#1752) at aspnet/Razor","RelatedBody":"- Had to add extra logic to track document structure changes so listeners could know if an event was on its way or not.\r\n- Added and fixed some tests.\r\n\r\n#1748"},{"Id":"6817261079","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:37:26","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1755","RelatedDescription":"Closed issue \"model intellisense does not find model properties when model is IEnumerable\" (#1755) at aspnet/Razor","RelatedBody":"VS2017 netcoreapp2.0\r\n\r\nv 15.4.2, although happened on previous patch also.\r\n\r\nIn razor page with @model directive as IEnumerable<Type> at top of page, the tag helper methods are not finding my Type properties, but instead finds IEnumerable methods.  Sometimes I can switch between documents in the project and I will see it, then it's gone again.\r\n"},{"Id":"6817085912","Type":"IssuesEvent","CreatedAt":"2017-11-06T21:56:45","Actor":"mjnorman","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1755","RelatedDescription":"Opened issue \"model intellisense does not find model properties\" (#1755) at aspnet/Razor","RelatedBody":"VS2017 netcoreapp2.0\r\n\r\nIn razor page with @model directive as IEnumerable<Type> at top of page, the tag helper methods are not finding my Type properties, but instead finds IEnumerable methods.  Sometimes I can switch between documents in the project and I will see it, then it's gone again.\r\n"},{"Id":"6816673821","Type":"PullRequestEvent","CreatedAt":"2017-11-06T20:26:59","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1754","RelatedDescription":"Opened pull request \"Ignore - Seeing if appveyor can build.\" (#1754) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"},{"Id":"6760767057","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:11","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/490","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#490) at aspnet/Templates","RelatedBody":"The individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n"},{"Id":"6760766431","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:02","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/492","RelatedDescription":"Closed issue \"Add tests to project templates\" (#492) at aspnet/Templates","RelatedBody":"Hi,\n\nTesting is unfortunately a part of most of our jobs. I don't know if it is already planned/done but in visual studio when I create a new ASP.NET MVC 6 (or is it Core 1 ? Not sure) there are no tests. This is particularly annoying for the template including user accounts. I spent a few hours writing tests for the included templates.\n\nI was wondering whether other people would be interested ?\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6762343502","Type":"IssuesEvent","CreatedAt":"2017-10-25T07:30:40","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Opened issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6780432155","Type":"IssuesEvent","CreatedAt":"2017-10-29T14:10:51","Actor":"smitpatel","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Closed issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi @javiercn, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6779929600","Type":"IssuesEvent","CreatedAt":"2017-10-29T07:24:18","Actor":"searus","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6777426880","Type":"IssuesEvent","CreatedAt":"2017-10-27T22:12:32","Actor":"javiercn","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/275","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications\" (#275) at aspnet/Announcements","RelatedBody":"# Improved end to end testing support for MVC applications\r\n\r\nIn this release we have created a new package Microsoft.AspNetCore.Mvc.Testing to help streamline\r\nend to end testing of MVC applications using TestServer.\r\n\r\nThis package takes care of some of the typical pitfalls users run into when trying to test MVC applications\r\nusing TestServer.\r\n* It copies the .deps file from your project into the test assembly bin folder.\r\n* It sets the content root the application's project root so that static files and views can be found.\r\n* It provides a class `WebApplicationTestFixture<TStartup>` that streamlines the bootstrapping of your app on\r\nTestServer.\r\n\r\n## Sample end to end in memory test using xUnit\r\n\r\n```csharp\r\nusing Xunit;\r\n\r\nnamespace MyApplication.FunctionalTests\r\n{\r\n    public class MyApplicationFunctionalTests : IClassFixture<WebApplicationTestFixture<Startup>>\r\n    {\r\n        public TempDataInSessionTest(WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Fact]\r\n        public async Task GetHomePage()\r\n        {\r\n            // Arrange & Act\r\n            var response = await Client.GetAsync(\"/\");\r\n\r\n            // Assert\r\n            Assert.Equal(HttpStatusCodes.OK, response.StatusCode);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Important notes\r\n\r\n### Shadow copying needs to be disabled\r\nFor end to end in-memory tests to work properly, shadow copying needs to be disabled on your test framework of choice, as it causes the tests to execute in a different folder than the output folder.\r\nFor instructions on how to do this on xUnit see https://xunit.github.io/docs/configuring-with-json.html.\r\n\r\n### Your app needs to have a CreateWebHostBuilderMethod on the Program class\r\nBy convention our ```WebApplicationTestFixture<TStartup>``` tries to find a method with the signature ```public static IWebHostBuilder CreateWebHostBuilder(string [] args)``` on the entry point class of the assembly where Startup is located. (Typically your Program class) If you don't have this method ```WebApplicationTestFixture<TStartup>``` won't be able to initialize your app in the same way it is done on a normal run. You can configure the WebHostBuilder yourself by overriding CreateWebHostBuilder on ```WebApplicationTestFixture<TStartup>```.\r\n\r\n### The test infrastructure needs to know the content root of the application under test\r\nTo set the content root for your app, ```WebApplicationTestFixture<TStartup>``` first locate your solution file ```(.sln)``` and then make a guess about where project might be. The Content Root of the application is defined by convention as ```<<SolutionFolder>>/<<ProjectAssemblyName>>```. For example, based on the folder structure defined below, the content root of the application is defined as ```c:\\work\\MyApp```. This is important because if not set correctly to the root folder of your application under test all views and static files will not be found.\r\n\r\n```\r\nc:/work/\r\n    MyApp.sln\r\n    MyApp/MyApp.csproj\r\n    MyApp.FunctionalTests/MyApp.FunctionalTests.csproj\r\n```\r\n\r\nThe process for determining the folder to use as the content root when running the tests is the following:\r\n* ```WebApplicationTestFixture<TStartup>``` starts on the bin folder of the test project, in the example above ```c:/work/MyApp.FunctionalTests/MyApp.FunctionalTests/bin/<<Configuration>>/<<Framework>>```\r\n* It navigates to the parent folder until it finds a ```.sln``` file.\r\n* It appends ```<<AssemblyName>>``` to the folder in which it found the ```.sln``` file and set that as the content root.\r\n\r\nIf you happen to be using a different convention for the layout of your projects, you can inherit from WebApplicationTestFixture and pass in the relative path from your solution to the application under test when calling the constructor. For example ```\"/src/MyApp\"```\r\n\r\n```csharp\r\npublic class MyAppTestFixture<TStartup> : WebApplicationTestFixture<TStartup> where TStartup : class\r\n{\r\n    public MyAppTestFixture(string solutionRelativePath)\r\n        : base(\"/src/MyApp\") { }\r\n}\r\n```"},{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-11-07T05:30:08.9345852Z","RunDurationInMilliseconds":7344}