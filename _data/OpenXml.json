{"Data":{"Sdk":{"Events":[{"Id":"11585025091","Type":"IssuesEvent","CreatedAt":"2020-02-22T20:56:44","Actor":"ScottHaney","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/689","RelatedDescription":"Opened issue \"OpenXmlValidator Throws Incorrect Validation Error\" (#689) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nWhen validating a `CategoryAxis` with an `AxisPosition` child the `OpenXmlValidator` creates a validation error even though the xml is valid according the office xml specification (CT_CatAx has a child EG_AxShared which has an element CT_AxPos on page 4080 of part I of the specification).\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework\r\n- DocumentFormat.OpenXml Version: 2.10\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar categoryAxis = new DocumentFormat.OpenXml.Drawing.Charts.CategoryAxis();\r\ncategoryAxis.AppendChild(new DocumentFormat.OpenXml.Drawing.Charts.AxisPosition() { Val = new EnumValue<DocumentFormat.OpenXml.Drawing.Charts.AxisPositionValues>(DocumentFormat.OpenXml.Drawing.Charts.AxisPositionValues.Bottom) });\r\n\r\nvar validator = new Validation.OpenXmlValidator();\r\nvar errors = validator.Validate(categoryAxis);\r\n``` \r\n\r\n**Observed**\r\n\r\nThe `errors` variable has a single entry with a description of `The element has unexpected child element 'http://schemas.openxmlformats.org/drawingml/2006/chart:axPos.'...`\r\n\r\n**Expected**\r\n\r\nAccording to `CT_CatAx` in part I of the specification (page 4080) there must be child elements `axId`, `scaling`, `axPos`, and `crossAx`. The sample above only has a `axPos` child so I would expect to see three validation errors due to the other three required elements being missing. I would not expect to see a validation error saying that `axPos` is not a valid child since the specification says that it is."},{"Id":"11584786208","Type":"IssuesEvent","CreatedAt":"2020-02-22T19:23:51","Actor":"JordiMola","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/688","RelatedDescription":"Opened issue \"SDK seems to create corrupted workbooks.\" (#688) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nCreating the \"sample minimal\" Excel spreadsheet with the ADK seems to create a corrupted file (Excel doesn't like it). If I add some row data I still get the issue.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core (although I could also repro it with .NET Framework)\r\n- DocumentFormat.OpenXml Version: 2.10.0\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing (SpreadsheetDocument document = SpreadsheetDocument.Create(\"D:\\\\Diff\\\\Sample2\\\\Foo.xlsx\", SpreadsheetDocumentType.Workbook, false))\r\n            {\r\n                // A SpreadsheetDocument must have at least a WorkbookPart and a WorksheetPart\r\n                WorkbookPart workbookPart = document.AddWorkbookPart();\r\n                workbookPart.Workbook = new DocumentFormat.OpenXml.Spreadsheet.Workbook(); // Name ambiguity...\r\n \r\n                WorksheetPart worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\r\n                worksheetPart.Worksheet = new Worksheet(new SheetData());\r\n \r\n                Sheets sheets = workbookPart.Workbook.AppendChild(new Sheets());\r\n \r\n                Sheet sheet = new Sheet() { Id = workbookPart.GetIdOfPart(worksheetPart), SheetId = 1, Name = \"Test\" };\r\n                sheets.Append(sheet);\r\n \r\n                SheetData sheetData = worksheetPart.Worksheet.AppendChild(new SheetData());\r\n \r\n                ////Row row = new Row();\r\n \r\n                ////row.Append(\r\n                ////    ConstructCell(\"Id\", CellValues.String),\r\n                ////    ConstructCell(\"Name\", CellValues.String),\r\n                ////    ConstructCell(\"Birth Date\", CellValues.String),\r\n                ////    ConstructCell(\"Salary\", CellValues.String));\r\n \r\n                ////// Insert the header row to the Sheet Data\r\n                ////sheetData.AppendChild(row);\r\n \r\n                ////uint id = 1;\r\n                ////foreach (Spreadsheet spreadsheet in m_sheets.Values)\r\n                ////{\r\n                ////    Debug.Assert(spreadsheet != null);\r\n \r\n                ////    spreadsheet.SaveToExcel(workbookPart, sheets, id++);\r\n                ////}\r\n \r\n                workbookPart.Workbook.Save();\r\n \r\n                document.Close();\r\n            }\r\n``` \r\n\r\n**Observed**\r\n\r\nExcel complains when trying to open the file, message:\r\n\r\nWe found a problem with some content in 'Foo.xlsx'. Do you want us to try to recover as much as we can? If you trust the source of this workbook, click Yes.\r\n\r\n\r\n**Expected**\r\n\r\nThe workbook opens just fine in Excel.\r\n"},{"Id":"11581874812","Type":"PullRequestEvent","CreatedAt":"2020-02-22T00:10:33","Actor":"tomjebo","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/687","RelatedDescription":"Opened pull request \"Fixes chartSpace and chart element generated code to enable new 2016 chart types\" (#687) at OfficeDev/Open-XML-SDK","RelatedBody":"this should fix/enable #674 "},{"Id":"11580588690","Type":"PullRequestEvent","CreatedAt":"2020-02-21T20:30:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/686","RelatedDescription":"Opened pull request \"Remove state from particle validators\" (#686) at OfficeDev/Open-XML-SDK","RelatedBody":"This makes it non-threadsafe to validate the same element type on different threads, even if it were  from different validation runs."},{"Id":"11569706067","Type":"PullRequestEvent","CreatedAt":"2020-02-20T18:04:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/685","RelatedDescription":"Merged pull request \"East Asia is better term\" (#685) at OfficeDev/Open-XML-SDK","RelatedBody":"Fix for documentation term with update in schema generator."},{"Id":"11569696408","Type":"PullRequestEvent","CreatedAt":"2020-02-20T18:03:26","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/685","RelatedDescription":"Opened pull request \"East Asia is better term\" (#685) at OfficeDev/Open-XML-SDK","RelatedBody":"Fix for documentation term with update in schema generator."},{"Id":"11569392027","Type":"PullRequestEvent","CreatedAt":"2020-02-20T17:27:57","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/684","RelatedDescription":"Merged pull request \"Ensure attributes are initialized when OpenXmlElement is created from outer XML\" (#684) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #683"},{"Id":"11569392009","Type":"IssuesEvent","CreatedAt":"2020-02-20T17:27:56","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/683","RelatedDescription":"Closed issue \"Objects are not correctly initialized when using constructor with OuterXml\" (#683) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nWhen creating SDK objects with OuterXml string, properties which should be set may be uninitialized (null).\r\n\r\n**Information**\r\n\r\n- DocumentFormat.OpenXml Version: 1.10.0\r\n\r\nThe same code works with version 2.9.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar style = new DocumentFormat.OpenXml.Wordprocessing.Style(\"<w:style w:type=\\\"paragraph\\\" w:styleId=\\\"Heading1\\\" xmlns:w=\\\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\\\">\\r\\n  <w:name w:val=\\\"heading 1\\\" />\\r\\n  <w:basedOn w:val=\\\"Normal\\\" />\\r\\n  <w:next w:val=\\\"Normal\\\" />\\r\\n  <w:link w:val=\\\"Heading1Char\\\" />\\r\\n  <w:qFormat />\\r\\n  <w:pPr>\\r\\n    <w:keepNext />\\r\\n    <w:keepLines />\\r\\n    <w:numPr>\\r\\n      <w:numId w:val=\\\"3\\\" />\\r\\n    </w:numPr>\\r\\n    <w:spacing w:before=\\\"320\\\" />\\r\\n    <w:jc w:val=\\\"left\\\" />\\r\\n    <w:outlineLvl w:val=\\\"0\\\" />\\r\\n  </w:pPr>\\r\\n  <w:rPr>\\r\\n    <w:b />\\r\\n    <w:color w:val=\\\"187EC9\\\" />\\r\\n    <w:spacing w:val=\\\"4\\\" />\\r\\n    <w:kern w:val=\\\"32\\\" />\\r\\n    <w:sz w:val=\\\"32\\\" />\\r\\n  </w:rPr>\\r\\n</w:style>\");\r\nAssert.NotNull(style.StyleId); // StyleId is null here, until some operation is done which actually parses the XML\r\n``` \r\n\r\n**Observed**\r\n\r\nParsing of the supplied XML is not performed when accessing certain properties.\r\n\r\n**Expected**\r\n\r\nAll getters should assert that the provided XML has been parsed."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-02-23T05:30:45.9121631Z","RunDurationInMilliseconds":1239}