{"Data":{"Blog":{"FeedItems":[{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8591837355","Type":"IssuesEvent","CreatedAt":"2018-11-14T23:31:18","Actor":"Joe-Sewell-PreEmptive","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2432","RelatedDescription":"Opened issue \"Build error when MainActivity's base class' name is a Java reserved word\" (#2432) at xamarin/xamarin-android","RelatedBody":"C# code that uses a Java reserved word as an identifier for the main activity or the base class thereof will cause a Java compiler error.\r\n\r\nWhile the steps below demonstrate how to most easily see the errors, the issue was brought to my attention by a [StackOverflow question](https://stackoverflow.com/questions/53291247/vague-dotfuscator-error-on-xamarin-android-app) regarding [the Xamarin integration](https://blog.xamarin.com/protecting-xamarin-apps-dotfuscator/) of a protection tool I develop, Dotfuscator. (**Note**: I am filing this issue on behalf of my employer, PreEmptive Solutions, a Xamarin partner.)\r\n\r\nIn this case, Dotfuscator's renaming obfuscation changes the (simple) name of the base class of an activity to `do`. Because Dotfuscator operates on compiled .NET assemblies, this is normally not an issue for non-library projects (`do` is a reserved word in C#, but not in the .NET intermediate language), but Xamarin.Android appears to be creating Java types to match this renamed .NET type, and `do` being a reserved word in Java is causing the build errors.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Android project (the attached reproduction uses the `Visual C# -> Android -> Android App (Xamarin) template`).\r\n2. Add a new class, `do` (escaped as `@do` in C#), which has the base class `Android.Support.V7.App.AppCompatActivity`.\r\n3. Change the base class of `MainActivity` to `@do`.\r\n4. Build.\r\n\r\n[XamarinAndroidKeywords.zip](https://github.com/xamarin/xamarin-android/files/2582998/XamarinAndroidKeywords.zip)\r\n\r\n### Expected Behavior\r\n\r\nThe build succeeds.\r\n\r\n### Actual Behavior\r\n\r\nThe build errors with Java compiler errors, such as the following in the `obj\\Debug\\MonoAndroid81\\android\\src\\md5c30be36ca273ec2d8db66341a5aebd89\\MainActivity.java` file:\r\n\r\n```\r\nerror: <identifier> expected\r\n\textends md5c30be36ca273ec2d8db66341a5aebd89.do\r\nerror: illegal start of type\r\n\timplements\tXamarinAndroidKeywords\r\nerror: ';' expected\r\n\t\tmono.android.IGCUserPeer\r\n```\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA049\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDotfuscator Community Edition   5.38.0.8617-8d4ef2c1e\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.3.3    Build 111.0.20180302.65130\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProject System Tools   1.0\r\nTools for working with C#, VisualBasic, and F# projects.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.8.20822.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.2046\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n[XamarinAndroidKeywords-buildlog.txt](https://github.com/xamarin/xamarin-android/files/2583023/XamarinAndroidKeywords-buildlog.txt)"},{"Id":"8590993570","Type":"PullRequestEvent","CreatedAt":"2018-11-14T20:45:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2421","RelatedDescription":"Merged pull request \"[Xamarin.Android.Tools.BootstrapTasks] RenameTestCases errors\" (#2421) at xamarin/xamarin-android","RelatedBody":"Context: https://gitter.im/xamarin/xamarin-android?at=5be467157326df140ed4fe2b\r\nContext: https://gitter.im/xamarin/xamarin-android?at=5be46a0c7326df140ed51325\r\nContext: https://gitter.im/xamarin/xamarin-android?at=5be46dd37326df140ed527d1\r\n\r\nThe `<RenameTestCases/>` task was added in 385699a5 to update the\r\n`//test-case/@name` attribute value to contain the Configuration from\r\nwhich the test came from.\r\n\r\nAs part of its operation, it would occasionally encounter NUnit XML\r\nfiles which were *invalid*, usually because `nunit-console` crashed;\r\nsee also 0ec00e12, which updated `<RenameTestCases/>` semantics so\r\nthat *if* an NUnit file were invalid, it would generate a \"new\" NUnit\r\nXML file containing a generic error message.\r\n\r\nThe problem is, this attempt at reporting *any* error message is still\r\nfailing.  Take for example [Jenkins build 1257][0], which\r\n[reports *no* unit test failures][1], but the build log contains:\r\n\r\n        error : Unable to process `…/xamarin-android/external/Java.Interop/TestResult-Java.Interop-PerformanceTests.xml`.  Is it empty?  (Did a unit test runner SIGSEGV?)\r\n\r\nThis is *precisely* what 0ec00e12 (and 1db436c6) attempted to address:\r\n*surface* that error so that it's shown in the `testReport` URL.\r\n\r\n[Further investigation][2] suggests that there are (at least?) three\r\nremaining problems around `<RenameTestCases/>`:\r\n\r\n 1. The `<RenameTestCases/>` task ***cannot report errors***.\r\n 2. When the \"generic error\" XML was generated, the *source* file\r\n    was not removed.\r\n 3. The NUnit XML `<RenameTestCases/>` generated was invalid.\r\n\r\nThe `<RenameTestCases/>` task cannot fail -- cannot return `false`\r\nfrom `RenameTestCases.Execute()` -- because it is used within an\r\n[MSBuild Task Batching][3] context, and is thus executed *separately*\r\nfor each `@(_RenameSource)` value.  If one invocation fails, then all\r\nfollowing `@(_RenameSource)` values *are not processed*.\r\n\r\nAdditionally, `<RenameTestCases/>` is *supposed* to delete the source\r\nfile once it has renamed the tests within it.  However, if the source\r\nfile was invalid (*usually* an empty file), the output file was\r\ncreated but the source file was not removed, unlike the \"normal\"\r\nnon-error case.  This results in empty output files later in the unit\r\ntest process.\r\n\r\nFinally, the \"generic error\" `<RenameTestCases/>` generated\r\ndidn't validate against the [NUnit XSD][4]:\r\n\r\n        WARNING: At line 5 of file:…/xamarin-android/TestResult-Java.Interop-PerformanceTests-Debug.xml:cvc-complex-type.4: Attribute 'executed' must appear on element 'test-case'.\r\n\r\nThis is presumably why the `testReport` URL doesn't show these.\r\n\r\nFix all of these problems:\r\n\r\n 1. Update `<RenameTestCases/>` so that instead of reporting errors it\r\n    instead reports *warnings*, and it *always* returns `true` (unless\r\n    there's an unhandled exception elsewhere, which *should* fail).\r\n\r\n    When an \"invalid\" NUnit file is created, it also sets\r\n    `%(_RenameFailed.Invalid)`, so that the `RenameTestCases` target\r\n    can emit an error once all `@(_RenameSource)` files are processed.\r\n\r\n 2. Update `<RenameTestCases/>` so that `RenameTestCases.SourceFile`\r\n    is consistently deleted, by moving the `DeleteSourceFiles` check\r\n    out of `FixupTestResultFile()` and into `Execute()`.\r\n\r\n 3. Update `<RenameTestCases/>` so that the XML it generates will\r\n    validate.\r\n\r\n    To assist in this, `RenameTestCases.cs` now contains a `Main()`\r\n    method, which will exist if it's compiled with `APP` defined.\r\n\r\nThe \"generic error\" XML output can thus be validated, using\r\n`mono-xmltool`:\r\n\r\n        csc build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/RenameTestCases.cs /out:test.exe /d:APP /r:System.Xml.Linq.dll\r\n        mono test.exe test.xml\r\n        curl -o Results.xsd https://nunit.org/docs/files/Results.xsd\r\n        MONO_XMLTOOL_ERROR_DETAILS=yes mono-xmltool  --validate Results.xsd test.xml\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1257\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1257/testReport/\r\n[2]: https://gitter.im/xamarin/xamarin-android?at=5be467157326df140ed4fe2b\r\n[3]: https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-batching?view=vs-2017#task-batching\r\n[4]: https://nunit.org/docs/files/Results.xsd"},{"Id":"8590568937","Type":"PullRequestEvent","CreatedAt":"2018-11-14T19:29:33","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2431","RelatedDescription":"Opened pull request \"[monodroid] Remove dependency on `$(MonoSourceFullPath)/support/{zlib-helper,nl}.c`\" (#2431) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8589633209","Type":"PullRequestEvent","CreatedAt":"2018-11-14T16:53:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2430","RelatedDescription":"Merged pull request \"Bump $(ProductVersion) to 9.1.199\" (#2430) at xamarin/xamarin-android","RelatedBody":"(Commercial) Xamarin.Android v9.1.102 is being tracked in the\r\n[xamarin-android/d16-0-p2](https://github.com/xamarin/xamarin-android/tree/d16-0-p2) branch.\r\n\r\nBump $(ProductVersion) to 9.1.199 to track development progress of\r\nthe next version of Xamarin.Android."},{"Id":"8589490691","Type":"PullRequestEvent","CreatedAt":"2018-11-14T16:33:42","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2430","RelatedDescription":"Opened pull request \"Bump $(ProductVersion) to 9.1.199\" (#2430) at xamarin/xamarin-android","RelatedBody":"(Commercial) Xamarin.Android v9.1.102 is being tracked in the\r\n[xamarin-android/d16-0-p2](https://github.com/xamarin/xamarin-android/tree/d16-0-p2) branch.\r\n\r\nBump $(ProductVersion) to 9.1.199 to track development progress of\r\nthe next version of Xamarin.Android."},{"Id":"8582269849","Type":"IssuesEvent","CreatedAt":"2018-11-13T16:34:40","Actor":"sensboston","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2429","RelatedDescription":"Opened issue \"Can not install NDK\" (#2429) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run \"Visual Studio 2017 Professional edition\"\r\n2. Open menu \"Tools->Android->Android SDK Manager...\"\r\n3. Select tab \"Tools\", check box named \"NDK\", press \"Apply\" button\r\n\r\n### Expected Behavior\r\nAndroid NDK should be downloaded, installed and functional\r\n\r\n### Actual Behavior\r\nAlways (regardless of NDK version selection or repo choice, MS or Google) I always get \"Downloading NDK v17.1.4828580 failed\"\r\n\r\n### Version Information\r\n<details>\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.8.7\r\nVisualStudio.15.Release/15.8.7+28010.2046\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA263\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.30625.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.8.18241.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.5001.4\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.5001.4\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.3\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.5001.4\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.20907.4 Commit Hash:f048d52e417a8902dea9e42828b7fdab92d4aaaa\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nNuGet PackageReference Upgrader   1.0\r\nA VS2017 Extension that helps legacy apps migrate off of packages.config. \r\n\r\nNuGetReferenceSwitcher   1.0\r\nInformation about my package\r\n\r\nPowerShell Pro Tools for Visual Studio   1.0\r\nA set of tools for developing and debugging PowerShell scripts and modules in Visual Studio.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.8.18241.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.8.18241.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.8.18241.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.8.18241.1\r\nProfiling support for Python projects.\r\n\r\nPython - UWP support   15.8.18241.1\r\nProvides templates and integration for the UWP framework.\r\n\r\nPython - VC Project Support   15.8.18116.3\r\nProvides support for launching C++ projects with Python debugging enabled.\r\n\r\nR Tools for Visual Studio   1.3.40517.1016\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.8.20822.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27924.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.27825.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual C++ for Linux Development   1.0.9.27924\r\nVisual C++ for Linux Development\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Spell Check Everywhere   VSSpellCheckEverywhere\r\nAn extension that enables spell checking within any Visual Studio file editor or tool window that uses WPF text boxes.\r\nhttps://GitHub.com/EWSoftware/VSSpellChecker\r\n\r\nVisual Studio Spell Checker   VSSpellChecker\r\nAn editor extension that checks the spelling of comments, strings, and plain text as you type or interactively with tool windows.\r\nhttps://GitHub.com/EWSoftware/VSSpellChecker\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.2046\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.776 (d15-8@1ae9b59d7)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.9 (d000f568b)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.116 (9619170)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.0.0.15 (84552a4)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n</details>\r\n"},{"Id":"8576960502","Type":"PullRequestEvent","CreatedAt":"2018-11-12T22:06:01","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2428","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] move $(AdbTarget) out of build.props\" (#2428) at xamarin/xamarin-android","RelatedBody":"`$(IntermediateOutputPath)build.props`, or\r\n`$(_AndroidBuildPropertiesCache)` is a file used as an `Input` to many\r\nMSBuild targets. We write many *important* properties in this file as\r\na mechanism to trigger most of the build to rerun. So for example, if\r\nyou enabled proguard, the `$(AndroidEnableProguard)` MSBuild property\r\nwould re-run a lot of the build, such as `_CompileJava`,\r\n`_CompileDex`, etc.\r\n\r\nRight now there are two problematic properties in this file:\r\n- `$(AdbTarget)`\r\n- `$(AdbOptions)`\r\n\r\nThis means if you switched from a different Android deploy target:\r\nemulator to device, or just a different device--it would run a full\r\nbuild! `$(AdbTarget)` and `$(AdbOptions)` need to trigger MSBuild\r\ntargets related to \"Fast Deployment\" to re-run, but not everything.\r\nWhat makes matters even worse, is sometimes design-time builds will\r\npass a blank `$(AdbTarget)`. This causes expensive targets to run\r\nagain.\r\n\r\nI've moved these properties to a new file:\r\n- `$(IntermediateOutputPath)adb.props` or\r\n- `$(_AdbPropertiesCache)`\r\n\r\nThen downstream in monodroid, there is a single line that needs to be\r\nchanged from `$(_AdbPropertiesCache)` to `$(_AdbPropertiesCache)`.\r\nThis will re-trigger the APK to be installed when devices change."},{"Id":"8576954313","Type":"PullRequestEvent","CreatedAt":"2018-11-12T22:04:42","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2424","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Aar directory resolution.\" (#2424) at xamarin/xamarin-android","RelatedBody":"Fixed #2408\r\n\r\nAs part of the speed up process when extracting resources\r\nfrom assemblies and Aar files, we dont re-extract if\r\nthe stamp file is newer than the assembly.\r\n\r\nThe problem with that was in the case of Aar files we\r\nwere NOT adding the `res` or `asset` directories to\r\nthe list of resolved directories when we skipped extraction.\r\nAs a result we got less `res` directories on a second\r\nbuild.\r\n\r\nThis commit fixes that."},{"Id":"8576954303","Type":"IssuesEvent","CreatedAt":"2018-11-12T22:04:42","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2408","RelatedDescription":"Closed issue \"Resource directories missed in incremental builds with `AndroidAarLibrary` items\" (#2408) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone `https://github.com/xamarin/Xamarin.Forms.git` and switch to the branch `visual-preview6`\r\n2. `nuget.exe restore Xamarin.Forms.sln` \r\n3. `msbuild Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj /bl /t:rebuild` which builds successfully\r\n4. `msbuild Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj /bl` which now fails:\r\n\r\n```\r\n\"C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj\" (default target) (1) ->\r\n(_UpdateAndroidResgen target) ->\r\n  Resources\\values\\styles.xml(2): error APT0000: Error retrieving parent for item: No resource found that matches the given name 'Theme.MaterialComponents.Light'.\r\n[C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(3): error APT0000: No resource found that matches the given name: attr 'colorAccent'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Control\r\nGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'colorPrimary'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Contro\r\nlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'windowActionBar'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Con\r\ntrolGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: No resource found that matches the given name: attr 'windowActionModeOverlay'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.F\r\norms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'windowNoTitle'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Contr\r\nolGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light.Dialog'. [C\r\n:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: No resource found that matches the given name: attr 'colorAccent'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Control\r\nGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n```\r\nIt looks like the number of directories specified in the call to Aapt is missing a bunch of items in the incremental build vs the rebuild:\r\n![image](https://user-images.githubusercontent.com/271950/48207279-4e8ad900-e33e-11e8-80cc-f7bdef0ea8a8.png)\r\n\r\nThis appears to happen when we use Android Support library nuget packages (in this case `28.0.0-preview6` which have the .aar files directly included in them using the `AndroidAarLibrary` item group type.\r\n\r\nAttaching some binary logs of success/error builds for good measure:\r\n\r\n[binlogs.zip](https://github.com/xamarin/xamarin-android/files/2562283/binlogs.zip)\r\n\r\n "}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8592997680","Type":"IssuesEvent","CreatedAt":"2018-11-15T05:23:14","Actor":"Ngoc-Quang","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4417","RelatedDescription":"Opened issue \"iOS: ListView in TabbedPage make bottom area dead touch\" (#4417) at xamarin/Xamarin.Forms","RelatedBody":"Hello,\r\n\r\nSame as the title: I meeting issue when use listView in Tabbedpage. Bottom area \"dead touch\" about 10% page's height.\r\n\r\nI found issue same as this: https://forums.xamarin.com/discussion/97177/tabbedpage-masterdetailpage-listview-resulting-in-dead-touch-area-on-ios\r\nBut have no solution now.\r\n\r\nMasterDetailPage.Detail > TabbedPage > NavigationPage > ListViewpage > listview\r\n\r\nCould you please help me check and suggest resolution to fix it?\r\nThanks.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0.967583\r\n- Last known good version: Unknown\r\n- Platform Target Frameworks: \r\n  - iOS:  XCode version 9.4\r\n  - Android: good working\r\n\r\n- Affected Devices: emulator and real device \r\n\r\n### Screenshots\r\n\r\n![listview](https://user-images.githubusercontent.com/26499058/48531978-0f75fe00-e8d1-11e8-9fb6-8442d93c073b.PNG)\r\n\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8592996948","Type":"PullRequestEvent","CreatedAt":"2018-11-15T05:23:00","Actor":"shyunMin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4416","RelatedDescription":"Opened pull request \"[Tizen] Fix ToolbarItem\" (#4416) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n<!-- Describe your changes here. -->\r\nThis PR is to fix a ToolbarItem issue\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nThe changes of some properties(Text, IsEnabled, Icon) are applied after page loading. But the changes that affect the order of toolbaritems such as Order and Priority are ignored.\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\n- Before\r\ntb1.IsEnabled is false. But It is not applied when the page is loaded.\r\n![1](https://user-images.githubusercontent.com/20968023/48531470-aea1f200-e8df-11e8-9332-48f43db6521d.png)\r\n\r\n- After\r\ntb1.IsEnabled is false. tb1 is disabled.\r\n![2](https://user-images.githubusercontent.com/20968023/48531475-b2357900-e8df-11e8-916f-24296f0143bb.png)\r\nAfter then, If a user changes tb1.IsEnabeld to true, it will be changed as follow.\r\n![3](https://user-images.githubusercontent.com/20968023/48531478-b3ff3c80-e8df-11e8-973d-3c2ea95176a5.png)\r\n\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8592970647","Type":"IssuesEvent","CreatedAt":"2018-11-15T05:13:30","Actor":"buzzware","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4415","RelatedDescription":"Opened issue \"Enable binding of methods to BindingContext, just like properties\" (#4415) at xamarin/Xamarin.Forms","RelatedBody":"XAML templates currently bind :\r\n1) properties\r\n2) events to code-behind handler methods\r\n3) commands\r\n\r\nCommands are very verbose, typically involving a whole new file and class that must be instantiated and bound to a new property, when all we actually want/need is a single method.\r\nEvent handler methods are convenient, but only possible in the code-behind. Most professional Xamarin developers use MVVM frameworks, but methods in the BindingContext cannot be bound to.\r\n\r\n# PROPOSAL\r\n\r\nEnable binding of event handers and/or commands to simple methods in the BindingContext via some simple syntax in XAML. I'm not sure how exactly is the best way to do it, and there would be many opinions about this. My main concern is that become possible in some form, and the details can be worked out in this issue.\r\n"},{"Id":"8592903285","Type":"PullRequestEvent","CreatedAt":"2018-11-15T04:49:15","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4414","RelatedDescription":"Opened pull request \"[iOS] Implement Snap alignment for CollectionView\" (#4414) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd handling of `SnapPointsAlignment` (`Start`, `Center`, and `End`) and `SnapPointsType` (`None`, `Mandatory`, and `MandatorySingle`) to the CollectionView on the iOS platform.\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nRun Control Gallery, navigate to CollectionView Gallery -> Snap Points Galleries and run the examples there.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8592554539","Type":"IssuesEvent","CreatedAt":"2018-11-15T02:52:46","Actor":"mfeingol","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4413","RelatedDescription":"Opened issue \"DatePicker.MinimumDate misbehaves when data-bound\" (#4413) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen a DataPicker's MinimumDate property is bound to a DateTime property on a page, and that property's value is assigned in code, the DatePicker's Date property is incorrectly assigned the value as well.\r\n\r\nAssigning MinimumDate in code, without a binding, works fine.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Set up a DatePicker with Date bound to property D and MinimumDate bound to property MD\r\n2. Assign D = 11/23/2018\r\n3. Assign MD=11/15/2018\r\n\r\nObserve that D is incorrectly set to 11/15/2018.\r\n\r\n### Expected Behavior\r\n\r\nMinimumDate should only influence Date when less then Date.\r\n\r\n### Actual Behavior\r\n\r\nDate is reset to MinimumDate even when greater than Date.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0.967583\r\n- Last known good version: ?\r\n- IDE: VS 2017 15.9\r\n- Platform Target Frameworks:\r\n  - Android: 9.0\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages: Many\r\n- Affected Devices: Android\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link\r\n\r\nSame issue as https://github.com/xamarin/Xamarin.Forms/issues/3556#issuecomment-432304334\r\n"},{"Id":"8592280509","Type":"IssuesEvent","CreatedAt":"2018-11-15T01:33:30","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4378","RelatedDescription":"Closed issue \"UISearchBar in NavigationPage issue\" (#4378) at xamarin/Xamarin.Forms","RelatedBody":"I have a problem with iOS search implementation in Xamarin Forms in combination with IsPullToRefreshEnabled=\"true\" of ListView: animation is not smooth and the navigation bar doesn't get back to initial position after reload. See [video](https://monosnap.com/file/Hquuzyhk470r5VWelS0ltdH0QPMJpA) and [project](https://github.com/xamarin/Xamarin.Forms/files/2571865/SearchTest.zip) to reproduce.\r\n"},{"Id":"8592139122","Type":"PullRequestEvent","CreatedAt":"2018-11-15T00:53:44","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4412","RelatedDescription":"Opened pull request \"Ignore null context change on UAP\" (#4412) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf you set ListView ItemTemplate property to custom DataTemplateSelector, then while scrolling overridden OnSelectTemplate method will be called with item argument equal to null.\r\nUnable to reproduce issue on Android. It seems that returning null when item == null does not affect ListView elements and everything works as expected.\r\n\r\n### Issues Resolved ### \r\n- fixes #4373 \r\n\r\n### Platforms Affected ### \r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Testing Procedure ###\r\nSee bug\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8592121010","Type":"PullRequestEvent","CreatedAt":"2018-11-15T00:48:44","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4411","RelatedDescription":"Opened pull request \"Add UAP symbols to nuget package\" (#4411) at xamarin/Xamarin.Forms","RelatedBody":"Add UAP symbols to nuget package. Helps when debugging user reproductions. "},{"Id":"8592005969","Type":"IssuesEvent","CreatedAt":"2018-11-15T00:15:24","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4410","RelatedDescription":"Opened issue \"Allow to set a background image for the Flyout\" (#4410) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nI would like to be able to set the background image of the items flyout not just the color. \r\n"},{"Id":"8591653571","Type":"IssuesEvent","CreatedAt":"2018-11-14T22:49:13","Actor":"duncanmak","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4393","RelatedDescription":"Closed issue \"Migrate Forms Signing to use standard Signing Service\" (#4393) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThe current signing step seems to be strictly tied to Xamarin Engineering. This could be changed if the Xamarin Engineering team adopted the use of Oren's [SignService/SignClient](https://github.com/onovotny/SignService). It's already used for a number of .NET Foundation projects including Prism, ReactiveUI, Humanizer, Xunit. The benefit here would be that if an enterprise (or anyone really) wanted to generate a custom build that was still signed, they could do so in a manner that is used among other .NET projects and is very easy to setup. \r\n\r\nUsing something like the following Signing Script would make this highly configurable since anyone generating their own build would simply need to define a few variables and be able to sign their NuGet's, while anyone who doesn't have these variables defined would be able to still get the build without signing.\r\n\r\n```ps1\r\n$currentDirectory = split-path $MyInvocation.MyCommand.Definition\r\n\r\n# See if we have the ClientSecret available\r\nif([string]::IsNullOrEmpty($env:SignClientSecret)){\r\n    Write-Host \"Client Secret not found, not signing packages\"\r\n    return;\r\n}\r\n\r\ndotnet tool install --tool-path . SignClient\r\n\r\n# Setup Variables we need to pass into the sign client tool\r\n\r\n$appSettings = \"$currentDirectory\\appsettings.json\"\r\n$fileList = \"$currentDirectory\\filelist.txt\"\r\n\r\n# GitHub projects will appear as User/Project unless sanitized\r\n$repoName = $env:BUILD_REPOSITORY_NAME -replace \".*/\",\"\"\r\n\r\n$azureAd = @{\r\n    SignClient = @{\r\n        AzureAd = @{\r\n            AADInstance = $env:SignClientAADInstance\r\n            ClientId = $env:SignClientClientId\r\n            TenantId = $env:SignClientTenantId\r\n        }\r\n        Service = @{\r\n            Url = $env:SignServiceUrl\r\n            ResourceId = $env:SignServiceResourceId\r\n        }\r\n    }\r\n}\r\n\r\n$azureAd | ConvertTo-Json -Compress | Out-File $appSettings\r\n\r\n$nupkgs = Get-ChildItem $env:BUILD_ARTIFACTSTAGINGDIRECTORY\\*.nupkg -recurse | Select-Object -ExpandProperty FullName\r\n\r\nforeach ($nupkg in $nupkgs){\r\n    Write-Host \"Submitting $nupkg for signing\"\r\n\r\n    .\\SignClient 'sign' -c $appSettings -i $nupkg -f $fileList -r $env:SignClientUser -s $env:SignClientSecret -n $repoName -d $repoName -u $env:BUILD_REPOSITORY_URI\r\n\r\n    Write-Host \"Finished signing $nupkg\"\r\n}\r\n\r\nWrite-Host \"Sign-package complete\"\r\n```"},{"Id":"8591650839","Type":"IssuesEvent","CreatedAt":"2018-11-14T22:48:35","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4409","RelatedDescription":"Opened issue \"GTK navigation is broken\" (#4409) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nUnable to switch back from the child page \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create navigation page\r\n2. Click on link to child page\r\n\r\n### Expected Behavior\r\nThe navigation bar is visible\r\n\r\n### Actual Behavior\r\nThe navigation bar is missed\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/33021114/48517774-13bdff00-e870-11e8-9ea2-b3b8960b25a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/33021114/48517792-26d0cf00-e870-11e8-8b7b-6c8cfda24ec3.png)\r\n\r\n\r\n"},{"Id":"8591644332","Type":"IssuesEvent","CreatedAt":"2018-11-14T22:47:08","Actor":"davefxy","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4408","RelatedDescription":"Opened issue \"ImageResourceExtension gives an System.PlatformNotSupportedException in UWP release\" (#4408) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nXamarin.Forms sample you can use to recreate the problem is:\r\nhttps://github.com/xamarin/xamarin-forms-samples/XAML/MarkupExtensions\r\nIf you compile and run this sample for UWP release, select Image Resource Demo. You will immediately break with a System.PlatformNotSupportedException. This will happen with any sample using this extension. And this includes any of the Xamarin-Forms-Book-Samples using the ImageResourceExtension.cs.\r\n\r\n### Steps to Reproduce\r\nIf you compile and run the sample described above for UWP release, then select the Image Resource Demo. You will immediately break with a System.PlatformNotSupportedException.\r\nThe error occurs at the following line:\r\nreturn ImageSource.FromResource(assemblyName + \".\" + Source);\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\nI don't know. I discovered the problem while trying to compile a Xamarin.Forms book sample and then again when I tried to compile a Xamarin.forms sample.\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\nXamarin.Forms Version=3.3.0.967583\r\nUWP version : 10.0.17134.0\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8591596995","Type":"IssuesEvent","CreatedAt":"2018-11-14T22:37:16","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4407","RelatedDescription":"Opened issue \"Unable fo use Forms.Init()\" (#4407) at xamarin/Xamarin.Forms","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create project A which has dependency to Xamarin.Forms.Platform.WPF\r\n2. Create GTK project and add project A as dependency\r\n3. in GTK project call Forms.Init();\r\n\r\n### Expected Behavior\r\n\r\nThere should not be any errors\r\n\r\n### Actual Behavior\r\n\r\nCompilation error\r\n\r\n\r\n### The root of the problem\r\n\r\nBecause Forms class has the same namespace, compiler doesn't know which Assembly class to use.\r\n\r\nSo possible solution is to add platform into the namespace (e.g. Xamarin.Forms.GTK.Forms.Init())"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":18,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":22,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":46,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null}]}},"RunOn":"2018-11-15T05:30:54.0258949Z","RunDurationInMilliseconds":3942}