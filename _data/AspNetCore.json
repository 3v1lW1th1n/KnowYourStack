{"Data":{"Blog":{"FeedItems":[{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7147758202","Type":"IssuesEvent","CreatedAt":"2018-01-25T02:31:57","Actor":"rajurh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2823","RelatedDescription":"Opened issue \"Url length\" (#2823) at aspnet/Home","RelatedBody":"Is there a way to set a maxUrlLength configuration value in Asp.Net Core? I see how this is done in web.config in earlier versions of the framework.\r\n\r\nI am trying to incorporate the url encryption due to which its exceeding 260 charc and in that case it give bad request for url length greater than 260.\r\n\r\nHelp on this will be much appreciated."},{"Id":"7147385161","Type":"IssuesEvent","CreatedAt":"2018-01-25T00:27:25","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2822","RelatedDescription":"Closed issue \"Nested sites in Azure app service gives 0x800700b7 \"The specified CGI application encountered an error and the server terminated the process.\"\" (#2822) at aspnet/Home","RelatedBody":"I am trying to host 2 applications on 1 single Azure app service.\r\nOne application on the root / and one in /UI.\r\nThey are both configured as Application in the Application settings for the Azure app service.\r\nFiles are in site\\wwwroot and site\\wwwrootui respectively.\r\n\r\nThe root application works but the nested one gives \"The specified CGI application encountered an error and the server terminated the process.\".\r\n\r\nIf I change it so the root app also runs in a folder instead of the root (so no nesting) then both apps work fine.\r\n\r\nThe detailed error message reveals:\r\n\r\n```\r\nHTTP Error 502.3 - Bad Gateway\r\nThere was a connection error while trying to route the request.\r\nModule\t   AspNetCoreModule\r\nNotification\t   ExecuteRequestHandler\r\nHandler\t   aspNetCore\r\nError Code\t   0x800700b7\r\nRequested URL\t   https://myapp:80/UI/\r\nPhysical Path\t   D:\\home\\site\\wwwrootui\\\r\nLogon Method\t   Anonymous\r\nLogon User\t   Anonymous\r\n```\r\n\r\nRelevant lines in failed request trace:\r\n\r\n\r\n```\r\n87. | NOTIFY_MODULE_START | ModuleName=\"AspNetCoreModule\", Notification=\"EXECUTE_REQUEST_HANDLER\", fIsPostNotification=\"false\" | 23:35:00.587\r\n-- | -- | -- | --\r\n88. | MODULE_SET_RESPONSE_ERROR_STATUSWarning | ModuleName=\"AspNetCoreModule\", Notification=\"EXECUTE_REQUEST_HANDLER\", HttpStatus=\"502\", HttpReason=\"Bad Gateway\", HttpSubStatus=\"3\", ErrorCode=\"Cannot create a file when that file already exists.  (0x800700b7)\", ConfigExceptionInfo=\"\" | 23:35:00.587\r\n89. | SET_RESPONSE_ERROR_DESCRIPTIONWarning | ErrorDescription=\"There was a connection error while trying to route the request.\" | 23:35:00.587\r\n90. | NOTIFY_MODULE_END | ModuleName=\"AspNetCoreModule\", Notification=\"EXECUTE_REQUEST_HANDLER\", fIsPostNotificationEvent=\"false\", NotificationStatus=\"NOTIFICATION_FINISH_REQUEST\" | 23:35:00.587\r\n```\r\n\r\nWeb.config for the root app:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <handlers>\r\n      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\".\\MyApp.exe\" arguments=\"\" stdoutLogEnabled=\"true\" stdoutLogFile=\".\\logs\\stdout\" forwardWindowsAuthToken=\"false\">\r\n      <environmentVariables>\r\n        <environmentVariable name=\"ASPNETCORE_ENVIRONMENT\" value=\"Acc\" />\r\n      </environmentVariables>\r\n    </aspNetCore>\r\n  </system.webServer>\r\n</configuration>\r\n```\r\n\r\nWeb.config for the nested app:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <handlers>\r\n      <remove name=\"aspNetCore\" />\r\n      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\".\\MyApp.UI.exe\" arguments=\"\" stdoutLogEnabled=\"true\" stdoutLogFile=\".\\logs\\stdout\" forwardWindowsAuthToken=\"false\">\r\n      <environmentVariables>\r\n        <environmentVariable name=\"ASPNETCORE_ENVIRONMENT\" value=\"Acc\" />\r\n      </environmentVariables>\r\n    </aspNetCore>\r\n  </system.webServer>\r\n</configuration>\r\n```"},{"Id":"7147274684","Type":"IssuesEvent","CreatedAt":"2018-01-24T23:51:36","Actor":"sdekock","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2822","RelatedDescription":"Opened issue \"Nested sites in Azure app service gives 0x800700b7 \"The specified CGI application encountered an error and the server terminated the process.\"\" (#2822) at aspnet/Home","RelatedBody":"I am trying to host 2 applications on 1 single Azure app service.\r\nOne application on the root / and one in /UI.\r\nThey are both configured as Application in the Application settings for the Azure app service.\r\nFiles are in site\\wwwroot and site\\wwwrootui respectively.\r\n\r\nThe root application works but the nested one gives \"The specified CGI application encountered an error and the server terminated the process.\".\r\n\r\nIf I change it so the root app also runs in a folder instead of the root (so no nesting) then both apps work fine.\r\n\r\nThe detailed error message reveals:\r\n\r\n```\r\nHTTP Error 502.3 - Bad Gateway\r\nThere was a connection error while trying to route the request.\r\nModule\t   AspNetCoreModule\r\nNotification\t   ExecuteRequestHandler\r\nHandler\t   aspNetCore\r\nError Code\t   0x800700b7\r\nRequested URL\t   https://myapp:80/UI/\r\nPhysical Path\t   D:\\home\\site\\wwwrootui\\\r\nLogon Method\t   Anonymous\r\nLogon User\t   Anonymous\r\n```\r\n\r\nRelevant lines in failed request trace:\r\n\r\n\r\n```\r\n87. | NOTIFY_MODULE_START | ModuleName=\"AspNetCoreModule\", Notification=\"EXECUTE_REQUEST_HANDLER\", fIsPostNotification=\"false\" | 23:35:00.587\r\n-- | -- | -- | --\r\n88. | MODULE_SET_RESPONSE_ERROR_STATUSWarning | ModuleName=\"AspNetCoreModule\", Notification=\"EXECUTE_REQUEST_HANDLER\", HttpStatus=\"502\", HttpReason=\"Bad Gateway\", HttpSubStatus=\"3\", ErrorCode=\"Cannot create a file when that file already exists.  (0x800700b7)\", ConfigExceptionInfo=\"\" | 23:35:00.587\r\n89. | SET_RESPONSE_ERROR_DESCRIPTIONWarning | ErrorDescription=\"There was a connection error while trying to route the request.\" | 23:35:00.587\r\n90. | NOTIFY_MODULE_END | ModuleName=\"AspNetCoreModule\", Notification=\"EXECUTE_REQUEST_HANDLER\", fIsPostNotificationEvent=\"false\", NotificationStatus=\"NOTIFICATION_FINISH_REQUEST\" | 23:35:00.587\r\n```\r\n\r\nWeb.config for the root app:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <handlers>\r\n      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\".\\MyApp.exe\" arguments=\"\" stdoutLogEnabled=\"true\" stdoutLogFile=\".\\logs\\stdout\" forwardWindowsAuthToken=\"false\">\r\n      <environmentVariables>\r\n        <environmentVariable name=\"ASPNETCORE_ENVIRONMENT\" value=\"Acc\" />\r\n      </environmentVariables>\r\n    </aspNetCore>\r\n  </system.webServer>\r\n</configuration>\r\n```\r\n\r\nWeb.config for the nested app:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <handlers>\r\n      <remove name=\"aspNetCore\" />\r\n      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\".\\MyApp.UI.exe\" arguments=\"\" stdoutLogEnabled=\"true\" stdoutLogFile=\".\\logs\\stdout\" forwardWindowsAuthToken=\"false\">\r\n      <environmentVariables>\r\n        <environmentVariable name=\"ASPNETCORE_ENVIRONMENT\" value=\"Acc\" />\r\n      </environmentVariables>\r\n    </aspNetCore>\r\n  </system.webServer>\r\n</configuration>\r\n```"},{"Id":"7146739161","Type":"IssuesEvent","CreatedAt":"2018-01-24T21:40:13","Actor":"anurse","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2801","RelatedDescription":"Closed issue \"Update to consume System.Net.WebSockets.Protocol\" (#2801) at aspnet/Home","RelatedBody":"See https://github.com/dotnet/corefx/pull/26250\r\n\r\nThe WebSockets middleware can now use an OOB package that contains the WebSocket protocol logic rather than copying code. 🎉 "},{"Id":"7146738518","Type":"IssuesEvent","CreatedAt":"2018-01-24T21:40:05","Actor":"anurse","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2465","RelatedDescription":"Closed issue \"CoreCLR 2.0 - TODO for resources in error handling\" (#2465) at aspnet/Home","RelatedBody":"_From @stephentoub on Thursday, August 17, 2017 7:22:57 AM_\r\n\r\n_From @ayende on August 17, 2017 14:7_\n\nWhen a web socket connection is broken, I'm getting this:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/29416327-664801fc-836e-11e7-8f58-7ee462a1a644.png)\r\n\r\nI assume that is something that should be fixed :-)\n\n_Copied from original issue: dotnet/coreclr#13425_\r\n\r\n_Copied from original issue: aspnet/WebSockets#198_"},{"Id":"7146736162","Type":"IssuesEvent","CreatedAt":"2018-01-24T21:39:35","Actor":"anurse","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2459","RelatedDescription":"Closed issue \"Update CoreFx Code\" (#2459) at aspnet/Home","RelatedBody":"_From @anurse on Thursday, December 21, 2017 11:55:02 AM_\r\n\r\nWe need to either update our CoreFx code in 2.1 **or** get the `CreateFromStream` API OOBed (https://github.com/dotnet/corefx/issues/21537) so we can use it.\r\n\r\nPing @muratg @Eilon : This should go in 2.1. Probably in preview1 if we can squeeze it in (at least updating the code from CoreFx, it's mostly automated via a script)\r\n\r\n_Copied from original issue: aspnet/WebSockets#214_"},{"Id":"7146091956","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:23:42","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1279","RelatedDescription":"Closed issue \"Mention Azure+Docker images in Linux/Docker section of the getting started docs\" (#1279) at aspnet/Home","RelatedBody":"In the getting started docs related to hosting in a [Docker container](https://docs.asp.net/en/latest/getting-started/installing-on-linux.html#using-docker), we should mention that Azure has Ubuntu images with Docker pre-installed (as described [here](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-docker-ubuntu-quickstart/)). For customers just trying out Docker+ASP.NET for the first time, that can be a convenient way to get started quickly.\n"},{"Id":"7146088412","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:22:56","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1610","RelatedDescription":"Closed issue \"Running on Linux/ARM with Mono finally stopped working with the RTM/preview2 bits\" (#1610) at aspnet/Home","RelatedBody":"I have been following ASP.NET vNext since alpha3 and I was able to use each and every release since then on my Linux/ARM platform with Mono. Now with the introduction of 1.0.0 RTM, this finally stopped working. As of late, my application targets `net452`.\n\nThe problem is the `System.Runtime.InteropServices.RuntimeInformation` nupkg. None of the included dlls is fit for running on Linux/ARM, most notably the IsOSPlatform API doesn't work.\n- The `unix` version expects a native \"System.Native\" library that's obviously not available for ARM, so constructing a `ConsoleLogger` throws.\n- The `win` version succeeds constructing the logger, but then Kestrel tries to use the [the windows code paths](https://github.com/aspnet/KestrelHttpServer/blob/dev/src/Microsoft.AspNetCore.Server.Kestrel/Internal/Networking/Libuv.cs#L192) and throws\n\nIs there any way to get my ASP.NET Core back on Linux/ARM? Can I drop in a purely managed version of the IsOSPlatform API?\n"},{"Id":"7146086639","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:22:34","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1142","RelatedDescription":"Closed issue \"Localization needs a redesign \" (#1142) at aspnet/Home","RelatedBody":"Hi\n\nAt present rc1, the provided localization solution does not provide a good solution for developers. I think the new ASPNET is great, but the new localization solution is really not an improvement. Judging by all the problems in rc1 for localization, this has not really been though through or the different teams don’t seem to work together. \n\nYou can find issues in all the different repos for the following problems, some closed even though the problem still exists.\n-   At present you cannot run a localized application from VS\n-   You cannot use a shared resource from a separate library.\n-   You are forced to use magic class names for the default localization to work.\n-   A shared resource requires an empty class to work per default.\n-   The generated resources are produced as internal classes instead of public classes which don’t work.\n-   No VS template exists for a Json resource instead of resx.\n\nDirect resource dependencies are undesired, as I would like to use the resources using the DI framework.\n\nWould it not be time to reconsider the solution? If the recommended localization is released as it is, you’re just taking away from all the other good parts of ASP.NET 5 and will frustrate many developers. The recommended new localization is not usable for my default application. \n\nGreetings and thanks Damien\n"},{"Id":"7146084208","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:22:04","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1420","RelatedDescription":"Closed issue \"Can we have one chat channel?\" (#1420) at aspnet/Home","RelatedBody":"Today, we have Jabbr, Slack and Gitter chat channels for ASP.NET Core. Can we have only one? Home repo has gitter on its readme but it's spreaded to multiple places now. Would be really good to have an effort to unify this. We only had jabbr before and it was very straight forward.\n\nMy vote would be for Slack that @spboyer organized as its mobile client, search and integrations are really good.\n"},{"Id":"7146083704","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:21:57","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1676","RelatedDescription":"Closed issue \"Update the roadmap\" (#1676) at aspnet/Home","RelatedBody":"Hi,\n\nCan you please update the roadmap?\nWe need to know when will 1.1.0 will be released (and if possible, what will be included).\n\nThanks.\n"},{"Id":"7146082383","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:21:40","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1685","RelatedDescription":"Closed issue \"1.1.0 Planning\" (#1685) at aspnet/Home","RelatedBody":"High level plans for the next minor update.\n- Azure App Service integration\n  - `WebHostBuilder.UseAzureAppService()`\n    - Logging provider (aspnet/Logging#466)\n    - Key Vault configuration provider (aspnet/Configuration#487)\n    - Auto-enable IIS integration\n  - Blob storage DataProtection key storage provider (aspnet/DataProtection#92)\n  - B2C integration (Identity & Authn/z)\n  - Kudu publish time improvements\n- WebListener server (for Service Fabric & public-facing ready self-host without reverse proxy and Windows 10 IoT/UWP support)\n- Startup time improvements\n  - MVC startup time\n  - MVC view pre-compilation\n  - DI startup time (aspnet/DependencyInjection#372)\n  - Reduction of JIT cost from startup via multi-core JIT and/or first-class CrossGen story\n- Runtime performance\n  - Improving all TechEmpower scenarios (beyond Plaintext)\n  - Standard middleware overhead improvements\n    - Security middleware\n    - Buffering middleware\n    - Static files middleware\n- Dev experience improvements\n  - Meta-packages & publish trimming (reduce dependencies version burden)\n  - Improve developer experience compile & startup time\n  - Templates improvement (dotnet new, etc.)\n  - Improve Razor tooling design, e.g. not require a build to get Tag Helper IntelliSense to work\n- Re-enabling missing features & scenarios\n  - Dependency Injection adjustments for better alignment with 3rd party DI containers\n  - SignalR for ASP.NET Core (may target a preview in 1.1 timeframe)\n  - Page-based development model on MVC (aspnet/mvc#494)\n  - MVC view pre-compilation\n  - MVC View Component Tag Helpers\n  - Response caching middleware (aspnet/ResponseCaching#10)\n  - WebSockets middleware\n  - URL rewriting middleware (with mod_rewrite & URL Rewrite import) (aspnet/BasicMiddleware#43)\n- .NET Standard 2.0 alignment\n- DataProtection key ring storage provider (e.g. Redis) (aspnet/DataProtection#169)\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7147400469","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:32:36","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1343","RelatedDescription":"Opened pull request \"rename signalRTokenHeader to access_token\" (#1343) at aspnet/SignalR","RelatedBody":"I actually started this on `release/2.1` because to be honest, it's pretty simple and I feel comfortable taking it in preview 1 if @muratg is OK with that. It's low-hanging fruit, and it's \"public\" API surface (kinda) so front-loading it would be nice. Also, I was reviewing the OAuth spec and noticed that it calls out how to pass access tokens via the query string in the spec (https://tools.ietf.org/html/rfc6750#section-2.3), including the query string name to use, `access_token` (as @PinpointTownes referenced in the issue #1155).\r\n\r\nBrowser functional tests have been updated and run (next up on my plate is to automate those ;)). JwtSample has also been updated and verified. The C# client doesn't ever use the query string, so the only product changes are in the Jwt sample (since we haven't decided what to \"build in\" for this yet) and the TS client.\r\n\r\nAnyway, this PR is on `dev` right now. If @muratg signs off on pulling it up to preview 1, I'll retarget to `release/2.1`"},{"Id":"7147387495","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:28:11","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1342","RelatedDescription":"Opened pull request \"Move logging into class it's associated with\" (#1342) at aspnet/SignalR","RelatedBody":"Gathering feedback on this pattern\r\nhttps://github.com/aspnet/SignalR/issues/1169\r\n\r\nIn `HttpClientFactory` they did it slightly differently\r\n\r\n```c#\r\nclass HttpClientFactory\r\n{\r\n    private ILogger _logger;\r\n\r\n    public HttpClientFactory(ILogger logger)\r\n    {\r\n        _logger = logger;\r\n    }\r\n\r\n    public void CreateThingy()\r\n    {\r\n        Log.LogCreateMessage(_logger);\r\n    }\r\n\r\n    private static class Log\r\n    {\r\n        private static readonly Action<ILogger, Exception> _logCreateMessage = LoggerMessage.Define(LogLevel.Error, 1, \"Creating thingy\");\r\n\r\n        public static void LogCreateMessage(ILogger logger)\r\n        {\r\n            _logCreateMessage(logger, null);\r\n        }\r\n    }\r\n}\r\n```"},{"Id":"7147307859","Type":"IssuesEvent","CreatedAt":"2018-01-25T00:01:55","Actor":"antoinne85","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1341","RelatedDescription":"Closed issue \"Client doesn't receive messages when sent to specific connection ID.\" (#1341) at aspnet/SignalR","RelatedBody":"### Title\r\nClient doesn't receive messages when sent to specific connection ID.\r\n\r\n### Functional impact\r\nI am unable to send messages to a specific client through an `IHubContext<T>`, even if I am in possession of their `connectionId`. \r\n\r\nMore specifically, the following C# code will result in JavaScript clients both receiving and executing code:\r\n```\r\nawait _hub.Clients.All.SendAsync(\"receiveMessage\", \"This is a test message to everyone.\");\r\n```\r\n\r\nHowever, the following C# code will not result in messages being received by JavaScript clients:\r\n```\r\nvar possibleMultipleUsers = _hub.Clients.Users(new List<string> {connectionId});\r\nawait possibleMultipleUsers.SendAsync(\"receiveMessage\", \"This is a test message to specific clients.\");\r\n\r\nvar singleUser = _hub.Clients.User(connectionId);\r\nawait singleUser.SendAsync(\"receiveMessage\", \"This is a test message to exactly one client.\");\r\n```\r\n\r\n### Minimal repro steps\r\nGetting everything set up can be a touch time consuming, so I've created a sample repository that includes a minimum setup.\r\n1. Clone the repository at [antoinne85/SignalRConnectionIdIssue](https://www.github.com/antoinne85/SignalRConnectionIdIssue).\r\n1. Open a terminal and navigate to the `/SignalRConnectionIdIssue` folder.\r\n1. Execute `npm install` to install the `signalr-client` package.\r\n1. Open the solution and run the project.\r\n1. In your browser, navigate to `/home/index`.\r\n1. Open the developer tools and monitor the console output. \r\n1. Click the 'Test' button.\r\n\r\nIf you're uncomfortable with this approach, you can:\r\n1. Override the `OnConnectedAsync` method in a hub to track connection IDs.\r\n1. Connect a client, keeping track of their assigned connection ID.\r\n1. With the client still connected, attempt to send them a message using each of the three techniques listed in the *Functional Impact* section.\r\n\r\n##### Explanation\r\nThe `IssueHub` has an override for `OnConnectedAsync` that passes back the `connectionId` by calling a `setId` method on the client.\r\n\r\nClicking the 'Test' button makes a GET request that is received by the `TestController.Get` method. This request includes the `connectionId` that was passed back when the client first connected.\r\n\r\n`TestController.Get` then attempts to send the three messages using different techniques. The first is sent to all connected clients, the  second two attempt to send a message to the single client that made the request.\r\n\r\n### Expected result\r\nThe console should contain all three messages:\r\n* `\"This is a test message to everyone.\"`\r\n* `\"This is a test message to specific clients.\"`.\r\n* `\"This is a test message to exactly one client.\"`\r\n\r\n### Actual result\r\nThe console only contains `\"This is a test message to everyone.\"`\r\n\r\n### Further technical details\r\nThe web application is using `Microsoft.AspNetCore.SignalR` version `1.0.0-preview1-28153` from `https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json`.\r\n\r\nThe JavaScript client is using `signalr-client` version `1.0.0-preview1-28127` from `https://dotnet.myget.org/f/aspnetcore-dev/npm`."},{"Id":"7147073272","Type":"IssuesEvent","CreatedAt":"2018-01-24T22:55:23","Actor":"antoinne85","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1341","RelatedDescription":"Opened issue \"Client doesn't receive messages when sent to specific connection ID.\" (#1341) at aspnet/SignalR","RelatedBody":"### Title\r\nClient doesn't receive messages when sent to specific connection ID.\r\n\r\n### Functional impact\r\nI am unable to send messages to a specific client through an `IHubContext<T>`, even if I am in possession of their `connectionId`. \r\n\r\nMore specifically, the following C# code will result in JavaScript clients both receiving and executing code:\r\n```\r\nawait _hub.Clients.All.SendAsync(\"receiveMessage\", \"This is a test message to everyone.\");\r\n```\r\n\r\nHowever, the following C# code will not result in messages being received by JavaScript clients:\r\n```\r\nvar possibleMultipleUsers = _hub.Clients.Users(new List<string> {connectionId});\r\nawait possibleMultipleUsers.SendAsync(\"receiveMessage\", \"This is a test message to specific clients.\");\r\n\r\nvar singleUser = _hub.Clients.User(connectionId);\r\nawait singleUser.SendAsync(\"receiveMessage\", \"This is a test message to exactly one client.\");\r\n```\r\n\r\n### Minimal repro steps\r\nGetting everything set up can be a touch time consuming, so I've created a sample repository that includes a minimum setup.\r\n1. Clone the repository at [antoinne85/SignalRConnectionIdIssue](https://www.github.com/antoinne85/SignalRConnectionIdIssue).\r\n1. Open a terminal and navigate to the `/SignalRConnectionIdIssue` folder.\r\n1. Execute `npm install` to install the `signalr-client` package.\r\n1. Open the solution and run the project.\r\n1. In your browser, navigate to `/home/index`.\r\n1. Open the developer tools and monitor the console output. \r\n1. Click the 'Test' button.\r\n\r\n##### Explanation\r\nThe `IssueHub` has an override for `OnConnectedAsync` that passes back the `connectionId` by calling a `setId` method on the client.\r\n\r\nClicking the 'Test' button makes a GET request that is received by the `TestController.Get` method. This request includes the `connectionId` that was passed back when the client first connected.\r\n\r\n`TestController.Get` then attempts to send the three messages using different techniques. The first is sent to all connected clients, the  second two attempt to send a message to the single client that made the request.\r\n\r\n### Expected result\r\nThe console should contain all three messages:\r\n* `\"This is a test message to everyone.\"`\r\n* `\"This is a test message to specific clients.\"`.\r\n* `\"This is a test message to exactly one client.\"`\r\n\r\n### Actual result\r\nThe console only contains `\"This is a test message to everyone.\"`\r\n\r\n### Further technical details\r\nThe web application is using `Microsoft.AspNetCore.SignalR` version `1.0.0-preview1-28153` from `https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json`.\r\n\r\nThe JavaScript client is using `signalr-client` version `1.0.0-preview1-28127` from `https://dotnet.myget.org/f/aspnetcore-dev/npm`."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7147535509","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:17:34","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1593","RelatedDescription":"Merged pull request \"Revert \"Update jquery\"\" (#1593) at aspnet/Identity","RelatedBody":""},{"Id":"7147533199","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:16:46","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1593","RelatedDescription":"Opened pull request \"Revert \"Update jquery\"\" (#1593) at aspnet/Identity","RelatedBody":""},{"Id":"7147532113","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:16:23","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1592","RelatedDescription":"Merged pull request \"Revert \"Update jquery\"\" (#1592) at aspnet/Identity","RelatedBody":"This reverts commit e030d85654d7a545d95b28752f259f03d03d8b2f.\r\n\r\n\r\ncc @mkArtakMSFT "},{"Id":"7147431572","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:43:08","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1592","RelatedDescription":"Opened pull request \"Revert \"Update jquery\"\" (#1592) at aspnet/Identity","RelatedBody":"This reverts commit e030d85654d7a545d95b28752f259f03d03d8b2f.\r\n\r\n\r\ncc @mkArtakMSFT "},{"Id":"7147266427","Type":"PullRequestEvent","CreatedAt":"2018-01-24T23:49:05","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1591","RelatedDescription":"Opened pull request \"Preview2\" (#1591) at aspnet/Identity","RelatedBody":null},{"Id":"7147061755","Type":"IssuesEvent","CreatedAt":"2018-01-24T22:52:27","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1590","RelatedDescription":"Opened issue \"ApplicationUser Inheritance requires discriminator property\" (#1590) at aspnet/Identity","RelatedBody":"Moving from https://github.com/aspnet/EntityFrameworkCore/issues/7035 to investigate as an Identity issue.\r\n\r\nHi everyone,\r\nI am running a standard asp.net core 1.0.1 with EF core 1.0.1 with sapient.EntityFramework.MySql nuget installed. I have 5 users in my application that inherit from ApplicationUser namely student, staff, teacher, guardian and admin. When I run migrations, I get the following error: The entity type 'ApplicationUser' is part of a hierarchy, but does not have a discriminator property configured. Below are snippets of my code:\r\n\r\n``` C#\r\nclass Student : ApplicationUser\r\n{}\r\nclass Guardian : ApplicationUser\r\n{}\r\nclass Staff : ApplicationUser\r\n{}\r\nclass Teacher : ApplicationUser\r\n{}\r\nclass Admin : ApplicationUser\r\n{}\r\n\r\nclass SampleDb : IdentityDbContext<ApplicationUser>\r\n{\r\n    public DbSet<Student> {get; set; }\r\n    ....\r\n    public DbSet<Admin> { get; set; }\r\n}\r\n```\r\n\r\nWhen trying to run the migrations, it gives the error I mentioned. Here is the error it shows:\r\n\r\n> System.InvalidOperationException: The entity type 'ApplicationUser' is part of a hierarchy, but does not have a discriminator property configured.\r\n   at Microsoft.EntityFrameworkCore.Internal.ModelValidator.ShowError(String message)\r\n   at Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.ValidateDiscriminator(IEntityType entityType)\r\n   at Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.ValidateDiscriminatorValues(IEntityType rootEntityType, IReadOnlyList`1 derivedTypes)\r\n   at Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.ValidateInheritanceMapping(IModel model)\r\n   at Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.Validate(IModel model)\r\n   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IModelValidator validator)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel()\r\n   at Microsoft.EntityFrameworkCore.Internal.LazyRef`1.get_Value()\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ScopedCallSite.Invoke(ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.TransientCallSite.Invoke(ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite.Invoke(ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.TransientCallSite.Invoke(ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at Microsoft.EntityFrameworkCore.Design.MigrationsOperations.AddMigration(String name, String outputDir, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Tools.Cli.MigrationsAddCommand.Execute(CommonOptions commonOptions, String name, String outputDir, String context, String environment, Action`1 reporter)\r\n   at Microsoft.EntityFrameworkCore.Tools.Cli.MigrationsAddCommand.<>c__DisplayClass0_0.<Configure>b__0()\r\n   at Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(String[] args)\r\n   at Microsoft.EntityFrameworkCore.Tools.Cli.Program.Main(String[] args)\r\nThe entity type 'ApplicationUser' is part of a hierarchy, but does not have a discriminator property configured.\r\n\r\n\r\n### Further technical details\r\n\r\nEF Core version: \r\ndependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    }\r\n\"Microsoft.AspNetCore.Identity.EntityFrameworkCore\": \"1.0.0\",\r\n\"Microsoft.EntityFrameworkCore.Tools\": {\r\n      \"version\": \"1.0.0-preview2-final\",\r\n      \"type\": \"build\"\r\n    }\r\n\"Microsoft.EntityFrameworkCore\": \"1.0.1\",\r\n    \"Microsoft.EntityFrameworkCore.Relational\": \"1.0.1\",\r\n\"SapientGuardian.EntityFrameworkCore.MySql\": \"7.1.14\"\r\n\"Microsoft.EntityFrameworkCore.Tools\": \"1.0.0-preview2-final\"\r\n\r\nWindows 10 Pro 1607\r\nVisual Studio 2015 Community Edition Update 3\r\n"},{"Id":"7146700934","Type":"PullRequestEvent","CreatedAt":"2018-01-24T21:32:10","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1400","RelatedDescription":"Merged pull request \"House Cleaning - Spell check and grammar.\" (#1400) at aspnet/Identity","RelatedBody":"House Cleaning - Spell check and grammar. :shower:\r\n\r\n:ear_of_rice: :stew: ***[\"Out here in the fields... I fight for my meals... It's only teenage wasteland...\"](https://www.youtube.com/watch?v=IXWNSb4nUDY)***\r\n\r\n"},{"Id":"7146616680","Type":"PullRequestEvent","CreatedAt":"2018-01-24T21:14:44","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1557","RelatedDescription":"Merged pull request \"Fix small typo in method docs\" (#1557) at aspnet/Identity","RelatedBody":""},{"Id":"7146196522","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:44:58","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1450","RelatedDescription":"Closed issue \"Allow two-factor challenges at random intervals\" (#1450) at aspnet/Identity","RelatedBody":"Some sites which use two factor authentication - Steam is a good example - do not challenge the user for the authentication code on every visit. This retains many of the advantages of increased security but is less inconvenient for the user.\r\n\r\nAs far as I can tell, Asp.Net identity does not support this out of the box. I tried to roll my own version:\r\n\r\n```\r\nvar result = await SignInManager.PasswordSignInAsync(model.Email, model.Password, model.RememberMe, shouldLockout: true);\r\nswitch (result)\r\n{\r\n    // other cases\r\n    case SignInStatus.RequiresVerification:\r\n        int challengeFrequency = Convert.ToInt16(ConfigurationManager.AppSettings[\"ChallengeFrequency\"]);\r\n        Random rnd = new Random();\r\n        if (rnd.Next(1, challengeFrequency + 1) == 1)\r\n        {\r\n            return RedirectToAction(\"SendCode\", new { returnUrl = returnUrl });\r\n        }\r\n        else\r\n        {\r\n            var token = await UserManager.GenerateTwoFactorTokenAsync(user.Id, \"Phone Code\");\r\n            await SignInManager.TwoFactorSignInAsync(\"Phone Code\", token, false, false);\r\n            return RedirectToLocal(returnUrl);\r\n        }\r\n}\r\n```\r\n\r\nBut this does not work, for reasons I've been unable to figure out - when triggered this code returns SignInStatus.Failure and puts the user back on the login screen, from where they will be logged on successfully if they submit a second time.\r\n\r\nRegardless of my failures, I still think this would be a useful feature to add to the Identity framework."},{"Id":"7146189314","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:43:34","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1191","RelatedDescription":"Closed issue \"How to combine the aspnetusers table and my current user table?\" (#1191) at aspnet/Identity","RelatedBody":"My understanding is there are two functions for PasswordSignInAsync in SignInManager (sign in the user in using the user name and password): (1) verify the user name and password against the ones saved in the Aspnetusers table; (2) create sign in cookie. \r\n\r\nI have my own user table, users. How to do combine the two tables? What are common practices? "},{"Id":"7146188095","Type":"IssuesEvent","CreatedAt":"2018-01-24T19:43:19","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1283","RelatedDescription":"Closed issue \"Passwordless authentication example with bearer token\" (#1283) at aspnet/Identity","RelatedBody":"### How to implement passwordless authentication with ASP.NET Identity and bearer token \r\nI'd like to add a passwordless authentication to my Web API project so that I can get a bearer token using phone number and one-time code.\r\n\r\nWith that, I also would like to keep login/password token authentication in place (for example, for web).\r\n\r\n### Expected result\r\nWould be great to have a supported and more or less straightforward way to implement that.\r\n\r\n### Actual result\r\nCurrently, only way to get token is to make a HTTP call to token endpoint and provide login/password parameters\r\n\r\nThere are several articles how to implement passwordless authentication with Auth0 and PwdLess. I don't want to use 3rd party frameworks for that."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7147609992","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:42:50","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2267","RelatedDescription":"Merged pull request \"Fix flakiness in address-in-use test\" (#2267) at aspnet/KestrelHttpServer","RelatedBody":"#1927"},{"Id":"7147294398","Type":"IssuesEvent","CreatedAt":"2018-01-24T23:57:55","Actor":"junsaw","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2274","RelatedDescription":"Opened issue \"System.InvalidOperationException: Invalid non-ASCII or control character in header: 0x000D\" (#2274) at aspnet/KestrelHttpServer","RelatedBody":"I am getting the following error, whenever I attempt to perform an HTTP DELETE.  \r\n\r\nMy sample call:\r\n\r\nhttps://<azurewebsite>/api/records/delete/57C8FEC9-DF8E-4E04-BDBA-8FD780BC0470\r\n\r\nNote: I am adding the ID I will like it Guid based and I am adding it to the URI.   Please see error message below.\r\n\r\nAny help will be greatly appreciated.\r\n\r\nThanks A lot \r\nJunior \r\n\r\n\r\n_System.InvalidOperationException: Connection id \"0HLB3EP1CKLVC\", Request id \"0HLB3EP1CKLVC:00000001\": An unhandled exception was thrown by the application.\r\n    at  Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameHeaders.ThrowInvalidHeaderCharacter (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameHeaders.ValidateHeaderCharacters (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameHeaders.ValidateHeaderCharacters (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseHeaders.AddValueFast (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameHeaders.System.Collections.Generic.IDictionary<System.String,Microsoft.Extensions.Primitives.StringValues>.Add (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  StenographerWS.Authentication.BasicAuthMessageHandler+<Invoke>d__11.MoveNext (BasicAuthMessageHandler.cs:169) (StenographerWS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null)\r\n    at  System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n    at  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n    at  Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware+<Invoke>d__11.MoveNext (Microsoft.AspNetCore.Server.IISIntegration, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n    at  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n    at  Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware+<Invoke>d__3.MoveNext (Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n    at  System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n    at  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n    at  Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)_"},{"Id":"7147267871","Type":"PullRequestEvent","CreatedAt":"2018-01-24T23:49:31","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2273","RelatedDescription":"Opened pull request \"Preview2\" (#2273) at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"7147219458","Type":"PullRequestEvent","CreatedAt":"2018-01-24T23:34:58","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2272","RelatedDescription":"Merged pull request \"Mark HTTP/2 as not supported with an AppContext switch override.\" (#2272) at aspnet/KestrelHttpServer","RelatedBody":"Merging back to dev."},{"Id":"7147218354","Type":"PullRequestEvent","CreatedAt":"2018-01-24T23:34:38","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2272","RelatedDescription":"Opened pull request \"Mark HTTP/2 as not supported with an AppContext switch override.\" (#2272) at aspnet/KestrelHttpServer","RelatedBody":"Merging back to dev."},{"Id":"7147214796","Type":"PullRequestEvent","CreatedAt":"2018-01-24T23:33:35","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2265","RelatedDescription":"Merged pull request \"Mark HTTP/2 as not supported with an AppContext switch override.\" (#2265) at aspnet/KestrelHttpServer","RelatedBody":"Alternative to https://github.com/aspnet/KestrelHttpServer/pull/2264. With this approach you can enable HTTP/2 per endpoint and it doesn't mess up non-TLS connections."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"},{"Id":"7106985478","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:22:30","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/557","RelatedDescription":"Closed issue \"Question: Typescript with ASP.NET Core RC2\" (#557) at aspnet/Tooling","RelatedBody":"Is it possible to compile Typescript code directly in Visual Studio 2015 using the ASP.NET Core RC2 project templates?  This used to work in RC1, but since updating to RC2 I can't get Typescript and ASP.NET Core working together simultaneously.  If I create a .NET Core project (e.g., **ASP.NET Core Web Application (.NET Core)** template), then I don't see \"Typescript Build\" properties page in Project Properties (the only property pages available are Application, Build, Debug).  I can create a Typescript project (e.g., **HTML Application with Typescript** template, which uses the csproj format), and Typescript works as expected, but of course I can't use .NET Core in that project.\n\nI have confirmed that my .xproj file does include a reference to Microsoft.DotNet.Web.targets, which I understand is supposed to bring in Typescript support:\n\n```\n<Import Project=\"$(VSToolsPath)\\DotNet.Web\\Microsoft.DotNet.Web.targets\"\n        Condition=\"'$(VSToolsPath)' != ''\" />\n```\n\nIs the built-in Typescript compilation no longer supported with RC2, or am I missing something somewhere?\n"},{"Id":"7065973641","Type":"PullRequestEvent","CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed pull request \"Update migrate-sql-server.md\" (#1062) at aspnet/Tooling","RelatedBody":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7082740966","Type":"IssuesEvent","CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Opened issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286) at aspnet/Announcements","RelatedBody":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229."},{"Id":"7076432273","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:08:19","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0783](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  "},{"Id":"7076428623","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:07:27","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  CVE-2018-0784, which is in the same templates.  ***** TODO: ADD LINK TO OTHER ISSUE ***** \r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  "},{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"955862764530024448","CreatedAt":"2018-01-23T18:00:16+00:00","UserScreenname":"aspnet","Text":"Starting now: #ASPNET Community Standup with Ryan Nowak on HttpClientFactory\n\nhttps://t.co/3dFxSj11IQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"955790962739040256","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"aspnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BDz2cgCTrt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"955640761793495042","CreatedAt":"2018-01-23T03:18:07+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is Jan 23 10 AM PT / 1800 GMT with special guest Ryan Nowak talking about Htt… https://t.co/5a8Ga9AJNL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null},{"Id":"954763537884372997","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"aspnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/0zBt67tqGg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"954724179403837440","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"aspnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/Y02invGhm1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"953279227012542464","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/PfmelAvxS2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"952185961147969537","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"aspnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/H2wBoF77Ri","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"950775244016332800","CreatedAt":"2018-01-09T17:04:17+00:00","UserScreenname":"aspnet","Text":"Join us for the @aspnet Community Standup at 10 AM Pacific / 18:00 UTC today. We've got special guest… https://t.co/o5WiTdUXQC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":18,"RawContent":null},{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":68,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-01-25T05:30:11.8640097Z","RunDurationInMilliseconds":10200}