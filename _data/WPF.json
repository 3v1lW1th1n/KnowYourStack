{"Data":{"GitHub":{"Issues":[{"Id":"430733247","IsPullRequest":true,"CreatedAt":"2019-04-09T03:24:50","Actor":"vatsan-madhavan","Number":"537","RawContent":null,"Title":"Change label for master to preview 5","State":"closed","Body":"Change label for master to preview 5","Url":"https://github.com/dotnet/wpf/pull/537","RelatedDescription":"Closed or merged PR \"Change label for master to preview 5\" (#537)"},{"Id":"430726870","IsPullRequest":true,"CreatedAt":"2019-04-09T02:12:23","Actor":"dotnet-maestro[bot]","Number":"536","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190408.11\r\n- **Date Produced**: 4/9/2019 1:36 AM\r\n- **Commit**: 63787f307be73c00d5c8830896be0e82a944227d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27608-11\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview4.19208.6 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/536","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/core-setup\" (#536)"},{"Id":"430707119","IsPullRequest":true,"CreatedAt":"2019-04-09T00:01:03","Actor":"dotnet-maestro[bot]","Number":"535","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190408.08\r\n- **Date Produced**: 4/8/2019 11:55 PM\r\n- **Commit**: 3f1e51332c9c7ac4d749659ca8fe4e961dafc298\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27608-08\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview4.19208.4 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/535","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/core-setup\" (#535)"},{"Id":"430699970","IsPullRequest":true,"CreatedAt":"2019-04-08T23:23:04","Actor":"vatsan-madhavan","Number":"534","RawContent":null,"Title":"Use RuntimeFrameworkVersion in builds","State":"open","Body":"Adds support for using RuntimeFrameworkVersion in our builds","Url":"https://github.com/dotnet/wpf/pull/534","RelatedDescription":"Open PR \"Use RuntimeFrameworkVersion in builds\" (#534)"},{"Id":"430084155","IsPullRequest":true,"CreatedAt":"2019-04-08T22:19:07","Actor":"stevenbrix","Number":"517","RawContent":null,"Title":"Dev/stevenki/port analyzers and system xaml","State":"closed","Body":"This PR fixes enabling roslyn analyzers and ports the changes made to System.Xaml that we had made in our internal repo out here into the public.\r\n\r\nHere is the thought process on how we should handle suppressing rules:\r\n1. Any rules we want suppressed across all projects, get suppressed in WpfCodeAnaysis.ruleset by setting Action to \"None\"\r\n2. Any rules that are enabled but require certain suppressions on a project level bases, should be suppressed in that projects GlobalSuppressions.cs file.\r\n3. Any suppressions that we want to fix, but won't for the 3.0 release due to compat concerns, should be suppressed inline.","Url":"https://github.com/dotnet/wpf/pull/517","RelatedDescription":"Closed or merged PR \"Dev/stevenki/port analyzers and system xaml\" (#517)"},{"Id":"430660697","IsPullRequest":true,"CreatedAt":"2019-04-08T22:04:24","Actor":"vatsan-madhavan","Number":"531","RawContent":null,"Title":"Preview 4 branch snap into release/3.0","State":"closed","Body":"Snapping master into release/3.0 for Preview 4","Url":"https://github.com/dotnet/wpf/pull/531","RelatedDescription":"Closed or merged PR \"Preview 4 branch snap into release/3.0\" (#531)"},{"Id":"430676148","IsPullRequest":false,"CreatedAt":"2019-04-08T21:55:16","Actor":"onovotny","Number":"533","RawContent":null,"Title":"Inconsistent line endings on fresh clone","State":"open","Body":"Hi,\r\n\r\nOn a fresh clone of the repo, I see this when opening many files:\r\n\r\n![image](https://user-images.githubusercontent.com/1427284/55759397-38855f80-5a27-11e9-94af-c4f4a1d6dc06.png)\r\n\r\nThis particular one is `MarkupCompilePass2.cs`, but it happens on others as well. This could lead to problems with bad PR's and merges down the road.\r\n\r\nCan the line endings be normalized in the repo and the right `.gitattributes` be added?","Url":"https://github.com/dotnet/wpf/issues/533","RelatedDescription":"Open issue \"Inconsistent line endings on fresh clone\" (#533)"},{"Id":"430663074","IsPullRequest":true,"CreatedAt":"2019-04-08T21:27:45","Actor":"dotnet-maestro[bot]","Number":"532","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190408.6\r\n- **Date Produced**: 4/8/2019 9:17 PM\r\n- **Commit**: e0a01a12c2676d69cefa61aa2526a414d7f2dabb\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview4.19208.6\r\n  - **System.CodeDom** -> 4.6.0-preview4.19208.6\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview4.19208.6\r\n  - **System.Reflection.TypeExtensions** -> 4.6.0-preview4.19208.6\r\n  - **System.Security.AccessControl** -> 4.6.0-preview4.19208.6\r\n  - **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19208.6\r\n  - **System.Security.Permissions** -> 4.6.0-preview4.19208.6\r\n  - **System.Security.Principal.Windows** -> 4.6.0-preview4.19208.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview4.19208.6\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19208.6\r\n  - **System.Diagnostics.EventLog** -> 4.6.0-preview4.19208.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/532","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#532)"},{"Id":"430625133","IsPullRequest":true,"CreatedAt":"2019-04-08T20:13:57","Actor":"dotnet-maestro[bot]","Number":"530","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190408.4\r\n- **Date Produced**: 4/8/2019 7:43 PM\r\n- **Commit**: 775c8502fda4a8cc40ba58a9677146ab258fdc59\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview4.19208.4\r\n  - **System.CodeDom** -> 4.6.0-preview4.19208.4\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview4.19208.4\r\n  - **System.Reflection.TypeExtensions** -> 4.6.0-preview4.19208.4\r\n  - **System.Security.AccessControl** -> 4.6.0-preview4.19208.4\r\n  - **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19208.4\r\n  - **System.Security.Permissions** -> 4.6.0-preview4.19208.4\r\n  - **System.Security.Principal.Windows** -> 4.6.0-preview4.19208.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview4.19208.4\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19208.4\r\n  - **System.Diagnostics.EventLog** -> 4.6.0-preview4.19208.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/530","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#530)"},{"Id":"430436341","IsPullRequest":true,"CreatedAt":"2019-04-08T13:02:34","Actor":"dotnet-maestro[bot]","Number":"529","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190407.08\r\n- **Date Produced**: 4/8/2019 5:36 AM\r\n- **Commit**: 1cdd7e42898c0da50beb6adead1de4f1e38583a6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27607-08\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19207.6 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/529","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#529)"},{"Id":"430426246","IsPullRequest":false,"CreatedAt":"2019-04-08T12:35:56","Actor":"alexhost","Number":"528","RawContent":null,"Title":"Column span fails for Pixel columns into Auto columns (under certain conditions)","State":"open","Body":"* .NET Core Version: 3.0.0-preview3-27503-5\r\n* Windows version: (`10.0.17134`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n \r\n **Problem description:**\r\nA Grid column set to Pixel width that is then spanned into an Auto width column to its right gets a bad final size, and in practice ignores the size set on it. If an Auto column is spanned into, it should \"absorb\" the required space, i.e. it should measure the content, subtract what the fixed size says its size is, and the remainder should be the width of the Auto column.\r\n \r\n **Actual behavior:** \r\nThe Pixel width column is unaffected by size (if the size is smaller than the measured size of the child), and ignores its ColumnSpan.\r\n \r\n **Expected behavior:**\r\nThe Pixel width column should span into the Auto column to its right, with the aggregate width for the two columns equaling the desired size for the content, such that the Pixel size gets precisely that width and the Auto column absorbing the rest.\r\n \r\n **Minimal repro:**\r\n```\r\n    <Grid>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width=\"*\" />\r\n            <ColumnDefinition Width=\"5\" />\r\n            <ColumnDefinition Width=\"Auto\" />\r\n        </Grid.ColumnDefinitions>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"Auto\" />\r\n            <RowDefinition Height=\"*\" />\r\n        </Grid.RowDefinitions>\r\n\r\n        <Label Grid.Row=\"0\" Grid.Column=\"1\" Grid.ColumnSpan=\"2\" Content=\"SomeText\"/>\r\n        <Label Grid.Row=\"1\" Grid.Column=\"2\" Content=\"T\" />\r\n    </Grid>\r\n```\r\n\r\nNotice how you can set the width of column with index = 1 to any number smaller than the measured size of its child (\"SomeText\") and nothing happens. It is not spanning into the Auto column to the right, nor does it care what the size is. This seems very wrong to me. A Pixel column + an Auto column should, taken together, be capable of accommodating a child that is spanning across them, and the Auto column should absorb the remaining space.\r\n","Url":"https://github.com/dotnet/wpf/issues/528","RelatedDescription":"Open issue \"Column span fails for Pixel columns into Auto columns (under certain conditions)\" (#528)"},{"Id":"430412632","IsPullRequest":true,"CreatedAt":"2019-04-08T12:10:41","Actor":"dotnet-maestro[bot]","Number":"527","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190407.1\r\n- **Date Produced**: 4/7/2019 12:56 PM\r\n- **Commit**: b1f9e12fe3ee71c48ea60b15968745850ac0a4a7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19207.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19207.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/527","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#527)"},{"Id":"430384492","IsPullRequest":true,"CreatedAt":"2019-04-08T10:55:14","Actor":"thomasclaudiushuber","Number":"526","RawContent":null,"Title":"Clean up code in System.Xaml","State":"open","Body":"This PR cleans up code in different files of System.Xaml.\r\n\r\nMainly\r\n- expression bodied properties for one-line getters\r\n- var where type is obvious from assignment\r\n- nameof instead of string\r\n- Use readonly auto properties where possible","Url":"https://github.com/dotnet/wpf/pull/526","RelatedDescription":"Open PR \"Clean up code in System.Xaml\" (#526)"},{"Id":"430335131","IsPullRequest":true,"CreatedAt":"2019-04-08T09:03:27","Actor":"thomasclaudiushuber","Number":"525","RawContent":null,"Title":"Clean up XmlnsDictionary","State":"open","Body":"Use nameof, var where type is obvious from assignment, and expression bodies properties for one-line getters","Url":"https://github.com/dotnet/wpf/pull/525","RelatedDescription":"Open PR \"Clean up XmlnsDictionary\" (#525)"},{"Id":"430301802","IsPullRequest":false,"CreatedAt":"2019-04-08T07:42:45","Actor":"vsfeedback","Number":"524","RawContent":null,"Title":"Why is WPF PathFigure not filled at certain rotations?","State":"open","Body":"The arrow is supposed to have a red fill but the fill is missing at certain angles of the RotateTransform. It vanishes from ~92° to ~279°\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/519747/why-is-wpf-pathfigure-not-filled-at-certain-rotati.html\nVSTS ticketId: 841039_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/524","RelatedDescription":"Open issue \"Why is WPF PathFigure not filled at certain rotations?\" (#524)"},{"Id":"430211293","IsPullRequest":true,"CreatedAt":"2019-04-08T00:33:17","Actor":"dotnet-maestro[bot]","Number":"523","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190407.5\r\n- **Date Produced**: 4/8/2019 12:28 AM\r\n- **Commit**: c74fcf05bfec0c6bfd3a79c773e61defa6c99275\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview4.19207.5\r\n  - **System.CodeDom** -> 4.6.0-preview4.19207.5\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview4.19207.5\r\n  - **System.Reflection.TypeExtensions** -> 4.6.0-preview4.19207.5\r\n  - **System.Security.AccessControl** -> 4.6.0-preview4.19207.5\r\n  - **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19207.5\r\n  - **System.Security.Permissions** -> 4.6.0-preview4.19207.5\r\n  - **System.Security.Principal.Windows** -> 4.6.0-preview4.19207.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview4.19207.5\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19207.5\r\n  - **System.Diagnostics.EventLog** -> 4.6.0-preview4.19207.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/523","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#523)"},{"Id":"430198510","IsPullRequest":true,"CreatedAt":"2019-04-07T22:17:25","Actor":"dotnet-maestro[bot]","Number":"522","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190407.2\r\n- **Date Produced**: 4/7/2019 10:12 PM\r\n- **Commit**: 0fda12bced7c2e09f69dd34130359753461496d9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview5.19207.2\r\n  - **System.CodeDom** -> 4.6.0-preview5.19207.2\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview5.19207.2\r\n  - **System.Reflection.TypeExtensions** -> 4.6.0-preview5.19207.2\r\n  - **System.Security.AccessControl** -> 4.6.0-preview5.19207.2\r\n  - **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19207.2\r\n  - **System.Security.Permissions** -> 4.6.0-preview5.19207.2\r\n  - **System.Security.Principal.Windows** -> 4.6.0-preview5.19207.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview5.19207.2\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19207.2\r\n  - **System.Diagnostics.EventLog** -> 4.6.0-preview5.19207.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/522","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#522)"},{"Id":"430197039","IsPullRequest":false,"CreatedAt":"2019-04-07T20:37:32","Actor":"ab4d","Number":"521","RawContent":null,"Title":"Problem with WPF's Slider style (and a few thoughts on porting DX11 rendering engine to Core3)","State":"open","Body":"# Issue Title\r\n\r\nWPF's Slider control is not correctly rendered - probably because of a problem with its style.\r\n\r\n# General\r\n\r\nIf the following xaml is used to define the slider:\r\n `       <Slider Minimum=\"0\" Maximum=\"5\" Value=\"4\" IsSnapToTickEnabled=\"True\" TickFrequency=\"1\" TickPlacement=\"BottomRight\"\r\n                Width=\"100\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" />`\r\n\r\nThen the shown slider is cut on the right side and does not align with the ticks (the same happens when setting TickPlacement to Both):\r\n\r\n![image](https://user-images.githubusercontent.com/24918117/55689057-84c99480-5980-11e9-940a-d5acce1d5679.png)\r\n\r\nThis happens on a screen without any DPI scale (I was not able to try it on high DPI screen). This issue exists from the preview1 version.\r\n\r\n\r\nOtherwise, I would like to congratulate you on a great job! I have ported my DirectX 11 rendering engine ([Ab3d.DXEngine](https://www.ab4d.com/DXEngine.aspx)) and WPF 3D toolkit ([Ab3d.PowerToys](https://www.ab4d.com/PowerToys.aspx)) to .Net Core 3 and they work without any problems from Preview1. Except changing the csproj files there were no changes in the code needed. The code is quite complex and uses SharpDX to call DirectX 11 API and it runs without any problems. I also tested the WPF 3D part and this also runs very well. One of the first things that I did, was to check the performance. I have expected a slight performance improvement, but just recompiling the code for .Net Core 3 brings no performance benefits to my rendering engine. Anyway, in the future, I plan to use new options like Slice and SIMD vectors and this should have more impact.","Url":"https://github.com/dotnet/wpf/issues/521","RelatedDescription":"Open issue \"Problem with WPF's Slider style (and a few thoughts on porting DX11 rendering engine to Core3)\" (#521)"},{"Id":"430142860","IsPullRequest":true,"CreatedAt":"2019-04-07T13:01:22","Actor":"dotnet-maestro[bot]","Number":"520","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190406.09\r\n- **Date Produced**: 4/7/2019 8:05 AM\r\n- **Commit**: 42a6743d709c3d74f1cb7a2af8740e3183a022f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27606-09\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19206.5 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/520","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#520)"},{"Id":"430027276","IsPullRequest":true,"CreatedAt":"2019-04-07T12:12:52","Actor":"dotnet-maestro[bot]","Number":"512","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190405.6\r\n- **Date Produced**: 4/5/2019 11:26 PM\r\n- **Commit**: 4217db4a23ffd15abb3771d635b66162994fb9e4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19205.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190406.5\r\n- **Date Produced**: 4/6/2019 5:35 PM\r\n- **Commit**: 9d8abf998866f10bc19d97e1916ff1c0ada3fd42\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19206.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/512","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#512)"},{"Id":"430110271","IsPullRequest":true,"CreatedAt":"2019-04-07T06:25:38","Actor":"hughbe","Number":"519","RawContent":null,"Title":"Make build.sh executable","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/519","RelatedDescription":"Open PR \"Make build.sh executable\" (#519)"},{"Id":"430085559","IsPullRequest":true,"CreatedAt":"2019-04-06T23:08:34","Actor":"stevenbrix","Number":"518","RawContent":null,"Title":"Dev/stevenbrix/enable analyzers for pbt","State":"closed","Body":"Enabling analyzers and running some code-fixers for PBT. Completing this PR is dependent on #517 completing first. I split up the changes here since the System.Xaml changes had already been reviewed, whereas these changes are newer.","Url":"https://github.com/dotnet/wpf/pull/518","RelatedDescription":"Closed or merged PR \"Dev/stevenbrix/enable analyzers for pbt\" (#518)"},{"Id":"430075134","IsPullRequest":true,"CreatedAt":"2019-04-06T22:19:32","Actor":"ryalanms","Number":"515","RawContent":null,"Title":"Public key tokens of .NET core WPF assemblies and .NET Framework WPF assemblies need to match","State":"closed","Body":"This is the public half of a two part change. The original fix (adding StrongNameKeyId=Ecma to WPF assembly projects) was insufficient. After help from @nguerrera and more investigation of which PKTs were contained in which NETFX assemblies, @vatsan-madhavan provided a much more comprehensive fix that also fixed other regressions introduced during Arcade onboarding. @vatsan-madhavan's complete fix is included here. \r\n\r\n- WPF assemblies are incompatible with each other in 3.0.0-alpha-27128-4 #208 (fixes issue #208)\r\n\r\n- Could not find assembly 'System.Xaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' #508 (fixes issue #508)\r\n\r\nThis internal half of this change will be committed after the darc update containing this change reaches dotnet-wpf-int.  Thanks. \r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/515","RelatedDescription":"Closed or merged PR \"Public key tokens of .NET core WPF assemblies and .NET Framework WPF assemblies need to match\" (#515)"},{"Id":"430081695","IsPullRequest":true,"CreatedAt":"2019-04-06T22:18:25","Actor":"stevenbrix","Number":"516","RawContent":null,"Title":"Reverting PR #509","State":"closed","Body":"Reverting #509. While the PR was large, most of the files were already reviewed internally. When I send out again I'll break this PR up into two, one for System.XAML and one for the new changes to PresentationBuildTasks and make sure there is enough time for everyone to review.","Url":"https://github.com/dotnet/wpf/pull/516","RelatedDescription":"Closed or merged PR \"Reverting PR #509\" (#516)"},{"Id":"429977072","IsPullRequest":true,"CreatedAt":"2019-04-06T21:32:34","Actor":"stevenbrix","Number":"509","RawContent":null,"Title":"Dev/stevenbrix/enable analyzers and code cleanup","State":"closed","Body":"Fixes #506 \r\n\r\nWhen I had moved the WpfCodeAnalysis.ruleset file into the WpfArcadeSdk, putting it into a .props file was the wrong thing to do. Moving it into a .targets file allows projects to properly set the `EnableAnalyzers` project flag to begin seeing the issues show up. Most of these changes to System.Xaml had been made in our internal repo while we were working on the SDK, and now I'm moving them out here.  I've also onboarded the analyzers for PresentationBuildTasks.\r\n\r\nBelow is the logic behind how we should suppress rules:\r\n\r\n1. Any rules we want suppressed globally, get suppressed in WpfCodeAnaysis.ruleset by setting Action to \"None\"\r\n2. Any rules that are enabled but require certain suppressions, should be suppressed in GlobalSuppressions.cs\r\n3. Any suppressions that we want to fix, but won't for the 3.0 release due to compat concerns, should be suppressed inline.","Url":"https://github.com/dotnet/wpf/pull/509","RelatedDescription":"Closed or merged PR \"Dev/stevenbrix/enable analyzers and code cleanup\" (#509)"},{"Id":"430046168","IsPullRequest":true,"CreatedAt":"2019-04-06T15:46:27","Actor":"dotnet-maestro[bot]","Number":"514","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190406.2\r\n- **Date Produced**: 4/6/2019 3:41 PM\r\n- **Commit**: 1cba37dd1138040f40165e65998e5e4c2eac5eb5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview4.19206.2\r\n  - **System.CodeDom** -> 4.6.0-preview4.19206.2\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview4.19206.2\r\n  - **System.Reflection.TypeExtensions** -> 4.6.0-preview4.19206.2\r\n  - **System.Security.AccessControl** -> 4.6.0-preview4.19206.2\r\n  - **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19206.2\r\n  - **System.Security.Permissions** -> 4.6.0-preview4.19206.2\r\n  - **System.Security.Principal.Windows** -> 4.6.0-preview4.19206.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview4.19206.2\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19206.2\r\n  - **System.Diagnostics.EventLog** -> 4.6.0-preview4.19206.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/514","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#514)"},{"Id":"430030913","IsPullRequest":true,"CreatedAt":"2019-04-06T12:58:00","Actor":"dotnet-maestro[bot]","Number":"513","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190406.01\r\n- **Date Produced**: 4/6/2019 10:21 AM\r\n- **Commit**: ccdc90de5f757c56e13bf5c095ee5d2aa8ca1aa4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27606-01\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview5.19205.9 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/513","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#513)"},{"Id":"430026947","IsPullRequest":false,"CreatedAt":"2019-04-06T12:00:50","Actor":"KodamaSakuno","Number":"511","RawContent":null,"Title":"Is it possible to manipulate DP value inheritance parents of Content descendants?","State":"open","Body":"Take a simple demo first. Create a ContentControl named \"Example\" and apply the following style:\r\n```xaml\r\n<Style TargetType=\"local:Example\">\r\n    <Setter Property=\"Foreground\" Value=\"Black\" />\r\n\r\n    <Setter Property=\"Template\">\r\n        <Setter.Value>\r\n            <ControlTemplate TargetType=\"local:Example\">\r\n                <ContentPresenter TextElement.Foreground=\"Red\" />\r\n            </ControlTemplate>\r\n        </Setter.Value>\r\n    </Setter>\r\n</Style>\r\n```\r\nAnd then, add the following code to the view:\r\n```xaml\r\n<local:Example>\r\n    <TextBlock Text=\"Am I RED?\" FontSize=\"48\" />\r\n</local:Example>\r\n```\r\n\r\nRun the program, and you'll see **a big BLACK text**, NOT RED.\r\n\r\nI debugged the program and stepped into the place where DependencyProperty.GetValue works. Finally I found that the InheritanceParent property of that TextBlock is its logical parent \"Example\" not its visual parent.\r\n\r\nIt would be a problem to some controls with multiple contents like the following example:\r\n![19040601](https://user-images.githubusercontent.com/4654507/55669006-9ccbe600-58a4-11e9-8ec5-49eab1820f60.png)\r\nI have to solve this problem by wrapping a border with a foreground set to every content element. How dull!\r\n\r\nAt the end. What I expect is that I can manipulate the descendants of ContentPresenter to make them inherit DP value from their visual ancestors.","Url":"https://github.com/dotnet/wpf/issues/511","RelatedDescription":"Open issue \"Is it possible to manipulate DP value inheritance parents of Content descendants?\" (#511)"},{"Id":"429994959","IsPullRequest":false,"CreatedAt":"2019-04-06T04:05:24","Actor":"Berrysoft","Number":"510","RawContent":null,"Title":"Auto generates many temp AssemblyInfo code files","State":"open","Body":"* .NET Core Version: 3.0 Preview3\r\n* Windows version: 10.0.18362\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: **Yes**\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nEach time I build the project, a `AssemblyInfo` code file and a `AssemblyInfoInputs.cache` are generated.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n![image](https://user-images.githubusercontent.com/37586447/55664642-bf89da80-5863-11e9-9b33-c6fcd06bd233.png)\r\n![image](https://user-images.githubusercontent.com/37586447/55664644-d5979b00-5863-11e9-9016-ac6ff2e79fdc.png)\r\n(The C# project is named `temp`)\r\n \r\n **Expected behavior:**\r\nNo these files.\r\n \r\n **Minimal repro:**\r\n ```\r\ndotnet new wpf\r\ndotnet run\r\ndotnet run\r\ndotnet run\r\n```\r\nCheck the `obj\\Debug\\netcoreapp3.0` folder.","Url":"https://github.com/dotnet/wpf/issues/510","RelatedDescription":"Open issue \"Auto generates many temp AssemblyInfo code files\" (#510)"},{"Id":"429964067","IsPullRequest":false,"CreatedAt":"2019-04-05T23:01:40","Actor":"fadimounir","Number":"508","RawContent":null,"Title":"Could not find assembly 'System.Xaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`17763.379`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: I haven't tried\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nUsing the latest core-sdk version, the WPF app from the https://github.com/ridomin/msix-catalog repo no longer builds.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions --> \r\n`Microsoft.WinFX.targets(243,9): error MC1000: Unknown build error, 'Could not find assembly 'System.Xaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. Either explicitly load this assembly using a method such as LoadFromAssemblyPath() or use a MetadataAssemblyResolver that returns a valid assembly.'  [D:\\GIT\\msix-catalog-master\\msix.catalog.app\\msix.catalog.app.core.csproj]`\r\n\r\n **Expected behavior:**\r\nCompilation should work.\r\n \r\n **Minimal repro:**\r\n1) Download https://github.com/ridomin/msix-catalog\r\n2) cd msix-catalog-master\\msix.catalog.app\r\n3) dotnet publish -r win-x64 msix.catalog.app.core.csproj\r\n\r\n\r\nNOTE:\r\nI'm observing that we're now setting _PresentationBuildTaskTfm to netcoreapp2.1 in Microsoft.WinFX.targets:\r\n`<_PresentationBuildTasksTfm Condition=\"'$(MSBuildRuntimeType)' == 'Core'\">netcoreapp2.1</_PresentationBuildTasksTfm>`\r\nIt used to be netcoreapp3.0. Is this intentional?\r\n","Url":"https://github.com/dotnet/wpf/issues/508","RelatedDescription":"Open issue \"Could not find assembly 'System.Xaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\" (#508)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-09T05:30:46.8533102Z","RunDurationInMilliseconds":687}