{"Data":{"GitHub":{"Issues":[{"Id":"367578236","IsPullRequest":true,"CreatedAt":"2018-10-09T02:22:10","Actor":"ThePiranha","Number":"1179","RawContent":null,"Title":"General grammar fix","State":"closed","Body":"General grammar fix and added the missing word\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1179","RelatedDescription":"Closed or merged PR \"General grammar fix\" (#1179)"},{"Id":"368004165","IsPullRequest":true,"CreatedAt":"2018-10-09T01:09:23","Actor":"zeahmed","Number":"1191","RawContent":null,"Title":"Exposed TensorFLow session as TensorFlowModelContext class","State":"open","Body":"This PR fixes #1157 where loaded `TFSession` is wrapped into `TensorFlowModelContext` class.\r\nIn addition to that, the `TensorFlowModelContext` provides following methods to query schema\r\n\r\n- GetModelSchema(): Get all the information in the model as `ISchema` object.\r\n- GetInputSchema(): Get only input related information from the model as `ISchema` object. It is useful for the case when the graph is very large and user cannot locate inputs in such a large graphs.\r\n\r\nPlease see the modified test for more insights.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1191","RelatedDescription":"Open PR \"Exposed TensorFLow session as TensorFlowModelContext class\" (#1191)"},{"Id":"367989943","IsPullRequest":false,"CreatedAt":"2018-10-08T23:43:04","Actor":"Ivanidzo4ka","Number":"1190","RawContent":null,"Title":"What should be our strategy to handle failure in transformer","State":"open","Body":"So pretty much every transformer has a GetGetter delegate which looks on source column, get value from that column and handles it.\r\n```\r\n var getSrc = input.GetGetter<TSrc>(colIndex);\r\nValueGetter<TDst> retVal =\r\n     (ref TDst dst) =>\r\n     {\r\n      getSrc(ref src);\r\n      DoMagic(ref src, ref dst);\r\n    };\r\n```\r\nIn ideal world, that DoMagic procedure would always give us proper results, but unfortunately in real world some cases can't be handled and if we rely on code written by 3rd party we can't even fix it.\r\n\r\nMy question is following, what should be our strategy for that cases?\r\nI see few options:\r\n\r\n1.   Just throw exception if you can't handle it. This is quite straightforward, but in same time I think it not user friendly, especially during scoring for huge file.\r\n\r\n2. Force each transform to handle src ==null case and just set dst to null as well (i'm talking mostly about src is VBuffer<T> class) and in learner/ scorer ignore such rows. I would also add threshold to learner/ scorer to throw in case if percentage/absolute values of such rows exceed it. For me this feels like more user friendly approach. \r\n\r\nAny one willing to discuss? @Zruty0 @TomFinley @markusweimer @shauheen @eerhardt @CESARDELATORRE  @GalOshri @justinormont ","Url":"https://github.com/dotnet/machinelearning/issues/1190","RelatedDescription":"Open issue \"What should be our strategy to handle failure in transformer\" (#1190)"},{"Id":"367980880","IsPullRequest":true,"CreatedAt":"2018-10-08T22:56:42","Actor":"sfilipi","Number":"1189","RawContent":null,"Title":"Adding a sample for Vector<T> ConcatWith<T>(this Scalar<T> me, params ScalarOrVector<T>[] others)","State":"open","Body":"Adding a sample to use in the documentation\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1189","RelatedDescription":"Open PR \"Adding a sample for Vector<T> ConcatWith<T>(this Scalar<T> me, params ScalarOrVector<T>[] others)\" (#1189)"},{"Id":"367972357","IsPullRequest":false,"CreatedAt":"2018-10-08T22:18:13","Actor":"yaeldekel","Number":"1188","RawContent":null,"Title":"Sweeper: ConfigRunner runs ResultProcessor without loading any assemblies into ComponentCatalog","State":"open","Body":"ExeConfigRunner uses ResultProcessor to summarize the metrics of the different runs, however, ResultProcessor needs to find components in the ComponentCatalog, so they should be loaded before calling it.","Url":"https://github.com/dotnet/machinelearning/issues/1188","RelatedDescription":"Open issue \"Sweeper: ConfigRunner runs ResultProcessor without loading any assemblies into ComponentCatalog\" (#1188)"},{"Id":"367969120","IsPullRequest":false,"CreatedAt":"2018-10-08T22:05:26","Actor":"yaeldekel","Number":"1187","RawContent":null,"Title":"Conversion: TryParseKey() throws an exception","State":"open","Body":"The method checks that IsStdMissing() returns false, but it is called without doing that check.\r\nWe should remove this check and return false if IsStdMissing().","Url":"https://github.com/dotnet/machinelearning/issues/1187","RelatedDescription":"Open issue \"Conversion: TryParseKey() throws an exception\" (#1187)"},{"Id":"367967990","IsPullRequest":false,"CreatedAt":"2018-10-08T22:01:04","Actor":"yaeldekel","Number":"1186","RawContent":null,"Title":"ResultProcessor.cs: code under \"#if TLCFULLBUILD\" doesn't build","State":"open","Body":"Old code had result.Trainer.Kind, new syntax is result.TrainerKind.","Url":"https://github.com/dotnet/machinelearning/issues/1186","RelatedDescription":"Open issue \"ResultProcessor.cs: code under \"#if TLCFULLBUILD\" doesn't build\" (#1186)"},{"Id":"367874202","IsPullRequest":true,"CreatedAt":"2018-10-08T21:08:02","Actor":"sfilipi","Number":"1182","RawContent":null,"Title":"adding the functions used to build MlNetMklDeps for 0.0.0.6","State":"closed","Body":"Added the functions used, the nuspec, and the versions of mkl where the custom binaries got built from. \r\nThis complement #1103 by adding the info about how those packages get built. \r\n\r\nAfter checking this in, will follow with the info about 0.0.0.7","Url":"https://github.com/dotnet/machinelearning/pull/1182","RelatedDescription":"Closed or merged PR \"adding the functions used to build MlNetMklDeps for 0.0.0.6\" (#1182)"},{"Id":"367076338","IsPullRequest":true,"CreatedAt":"2018-10-08T20:35:24","Actor":"sfilipi","Number":"1163","RawContent":null,"Title":"Changing the namespace where the trainers live","State":"closed","Body":"Addresses #1162 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/1163","RelatedDescription":"Closed or merged PR \"Changing the namespace where the trainers live\" (#1163)"},{"Id":"367931007","IsPullRequest":true,"CreatedAt":"2018-10-08T19:55:57","Actor":"sfilipi","Number":"1185","RawContent":null,"Title":"skipping the MulticlassTreeFeaturizedLRTest on osx debug","State":"open","Body":"This is the main checking hurtle.. I'll log an issue about dealing with it separately. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1185","RelatedDescription":"Open PR \"skipping the MulticlassTreeFeaturizedLRTest on osx debug\" (#1185)"},{"Id":"367881882","IsPullRequest":true,"CreatedAt":"2018-10-08T17:17:23","Actor":"sfilipi","Number":"1184","RawContent":null,"Title":"sweeping the space of link formats","State":"open","Body":"Trying to correct the link format for the sample referenced from the documentation. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/1184","RelatedDescription":"Open PR \"sweeping the space of link formats\" (#1184)"},{"Id":"367879957","IsPullRequest":false,"CreatedAt":"2018-10-08T17:11:27","Actor":"sfilipi","Number":"1183","RawContent":null,"Title":"The link of the sdca examples is not being populated in the documentation. ","State":"open","Body":"The Sdca regression extension is referencing the code snippet from Microsoft.ML.Samples/Trainers.cs for the example in the documentation, but the documentation website doesn't pull the code.  The format of the link needs to be fixed. \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1183","RelatedDescription":"Open issue \"The link of the sdca examples is not being populated in the documentation. \" (#1183)"},{"Id":"367859715","IsPullRequest":false,"CreatedAt":"2018-10-08T16:11:15","Actor":"Rammohan91","Number":"1181","RawContent":null,"Title":"Unable to Install Microsoft.ML on target framework .NET Framework 4.6.1","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 7\r\n- **.NET Version (eg., dotnet --info)**:  4.6.1\r\n- **Studio Version**: Visual Studio 2015\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nAttempt to install Microsoft.ML v0.6.0.\r\n\r\n- **What happened?**\r\nError message was thrown as: Could not install package 'Microsoft.ML 0.6.0'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.6.1', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\n- **What did you expect?**\r\nPackage should have been installed successfully.\r\n\r\nNote: I have already installed Latest NuGet VSIX for VS 2015 & NET Standard Build Support.\r\n\r\n###Error\t\tCould not install package 'Microsoft.ML 0.6.0'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.6.1', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\t\t\t0\t\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1181","RelatedDescription":"Open issue \"Unable to Install Microsoft.ML on target framework .NET Framework 4.6.1\" (#1181)"},{"Id":"367839462","IsPullRequest":false,"CreatedAt":"2018-10-08T15:19:34","Actor":"ixtreon","Number":"1180","RawContent":null,"Title":"Static Pipeline throws `IndexOutOfRangeException` with multiple column mappings","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro v1803, build 17134.285\r\n- **.NET Version (eg., dotnet --info)**: 2.1.402 @ commit 3599f217f4\r\n\r\n### Issue\r\n\r\n- **What did you do?** Translated an existing pipeline for text classification from the \"legacy\" pipeline builder to the new static API. Starting off with 2 text fields, we'd tokenize them and feed the results into a classifier. The classifier we are using is the FAFM which allows variable number of float vectors to be passed as the input.\r\n\r\n- **What happened?** Code throws a `System.IndexOutOfRangeException` exception during training. Removing the second column from the tokenization **and** from the classifier fixes the issue.\r\n- **What did you expect?** Applying the same operation twice and passing 2 `Vector<float>` inputs to the FAFM classifier should train a model using both of these, not crash.\r\n\r\n### Source code / logs\r\n\r\n```\r\nSystem.IndexOutOfRangeException: 'Index was outside the bounds of the array.'\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetDependencies(Func`2 predicate)\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetRow(IRow input, Func`2 active, Action& disposer)\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetRow(IRow input, Func`2 active, Action& disposer)\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetRow(IRow input, Func`2 active, Action& disposer)\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetRow(IRow input, Func`2 active, Action& disposer)\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetRow(IRow input, Func`2 active, Action& disposer)\r\n   at Microsoft.ML.Runtime.Data.CompositeRowToRowMapper.GetRow(IRow input, Func`2 active, Action& disposer)\r\n   at Microsoft.ML.Runtime.Api.PredictionEngine`2..ctor(IHostEnvironment env, Func`2 makeMapper, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.Runtime.Api.ComponentCreation.CreatePredictionEngine[TSrc,TDst](IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.Runtime.Data.PredictionFunction`2..ctor(IHostEnvironment env, ITransformer transformer)\r\n   at Microsoft.ML.Runtime.Data.PredictionFunctionExtensions.MakePredictionFunction[TSrc,TDst](ITransformer transformer, IHostEnvironment env)\r\n   at OpenRent.ML.Spam2.SpamTrainer.Foo(IList`1 source)\r\n   at OpenRent.Utils.Scripts.Spam.SpamEvaluator.Run() in C:\\OpenRent\\OpenRent\\OpenRent.Utils\\Scripts\\Spam\\SpamEvaluator.cs:line 99\r\n   at OpenRent.Utils.Program.runScript() in C:\\OpenRent\\OpenRent\\OpenRent.Utils\\Program.cs:line 66\r\n   at OpenRent.Utils.Program.Main() in C:\\OpenRent\\OpenRent\\OpenRent.Utils\\Program.cs:line 39\r\n```\r\n\r\n### Proposed Fix\r\n - There is what looks like a typo on L39, in the `CompositeRowToRowMapper.cs` file, in the `Microsoft.ML.Data` project. \r\n - The line reads: `for (int i = _innerMappers.Length - 1; i <= 0; --i)`\r\n - In order to loop through all `_innerMappers` the `<=` comparison should be changed to a `>=` . \r\n - After changing the sign the code compiles, tests pass and training completes as expected.","Url":"https://github.com/dotnet/machinelearning/issues/1180","RelatedDescription":"Open issue \"Static Pipeline throws `IndexOutOfRangeException` with multiple column mappings\" (#1180)"},{"Id":"367494778","IsPullRequest":true,"CreatedAt":"2018-10-06T20:51:18","Actor":"utkarsh-42","Number":"1178","RawContent":null,"Title":"Update LinearClassifierTrainer.cs ","State":"open","Body":"Fix #1069 \r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1178","RelatedDescription":"Open PR \"Update LinearClassifierTrainer.cs \" (#1178)"},{"Id":"367451553","IsPullRequest":true,"CreatedAt":"2018-10-06T12:10:47","Actor":"jwood803","Number":"1177","RawContent":null,"Title":"Update loops in CpuMath to be more efficient","State":"open","Body":"Fixes issue #835 ","Url":"https://github.com/dotnet/machinelearning/pull/1177","RelatedDescription":"Open PR \"Update loops in CpuMath to be more efficient\" (#1177)"},{"Id":"367441694","IsPullRequest":true,"CreatedAt":"2018-10-06T09:48:45","Actor":"girishbaviskar","Number":"1176","RawContent":null,"Title":"renamed LinearClassificationTrainer","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1176","RelatedDescription":"Closed or merged PR \"renamed LinearClassificationTrainer\" (#1176)"},{"Id":"367434528","IsPullRequest":false,"CreatedAt":"2018-10-06T07:55:35","Actor":"HowardvanRooijen","Number":"1175","RawContent":null,"Title":"PROSE SDK","State":"open","Body":"Hi!\r\n\r\nNow with #563 we have Infer.NET integrated into ML.NET and available with a commercial license - can the same be done with PROSE?\r\n\r\nhttps://microsoft.github.io/prose/\r\n\r\nIt currently also has a non-commercial license - but over the last year I've seen dozens of use-cases within our customers who could use PROSE to improve data wrangling (and much more) used to feed ML models etc - but we can't use it because of the non-commercial license.\r\n\r\nIf it were integrated under the ML.NET umbrella - it would be another amazing tool for the .NET ecosystem.\r\n\r\nMany thanks!\r\n\r\nHoward","Url":"https://github.com/dotnet/machinelearning/issues/1175","RelatedDescription":"Open issue \"PROSE SDK\" (#1175)"},{"Id":"367432608","IsPullRequest":true,"CreatedAt":"2018-10-06T07:29:07","Actor":"forcesk","Number":"1174","RawContent":null,"Title":"Spanish Language added.","State":"open","Body":"Spanish MX translation added in readme.","Url":"https://github.com/dotnet/machinelearning/pull/1174","RelatedDescription":"Open PR \"Spanish Language added.\" (#1174)"},{"Id":"367429816","IsPullRequest":true,"CreatedAt":"2018-10-06T07:21:09","Actor":"forcesk","Number":"1173","RawContent":null,"Title":"Spanish Language added.","State":"closed","Body":"Translation to spanish MX added.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1173","RelatedDescription":"Closed or merged PR \"Spanish Language added.\" (#1173)"},{"Id":"367405834","IsPullRequest":true,"CreatedAt":"2018-10-06T00:27:34","Actor":"vaeksare","Number":"1172","RawContent":null,"Title":"Add successful load checks to ImageLoaderTransform","State":"open","Body":"Check to make sure the loaded image Bitmap is valid, and throw an error if it's not. Fixes #1171 ","Url":"https://github.com/dotnet/machinelearning/pull/1172","RelatedDescription":"Open PR \"Add successful load checks to ImageLoaderTransform\" (#1172)"},{"Id":"367403879","IsPullRequest":false,"CreatedAt":"2018-10-06T00:10:47","Actor":"vaeksare","Number":"1171","RawContent":null,"Title":"ImageLoaderTransform can load corrupted images","State":"open","Body":"ImagerLoaderTransform can load corrupted images if the file path of an image it is attempting to load has special characters. Not finding a file also returns a null. In both of these cases, no error messages are propagated to the user until the invalid values cause further issues down the line in other transforms or training.","Url":"https://github.com/dotnet/machinelearning/issues/1171","RelatedDescription":"Open issue \"ImageLoaderTransform can load corrupted images\" (#1171)"},{"Id":"367393047","IsPullRequest":false,"CreatedAt":"2018-10-05T22:56:06","Actor":"danmosemsft","Number":"1170","RawContent":null,"Title":"Add 3.0 to CI","State":"open","Body":"We plan to ship codepaths that are specific to .NET Core 3.0, which will presumably be out in previews when we ship. We have some tests (albeit [incomplete](https://github.com/dotnet/machinelearning/issues/1156)) but they do not run unless the special build is performed locally.\r\n\r\nIt is too early to require contributors to have any build of 3.0 on their machines but it is not too early to add protection for the build and tests at the point of checkin. We should install some version of 3.0 on the CI machines, and add a leg to CI that builds and tests for 3.0. \r\n\r\ncc @eerhardt \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1170","RelatedDescription":"Open issue \"Add 3.0 to CI\" (#1170)"},{"Id":"367386207","IsPullRequest":true,"CreatedAt":"2018-10-05T22:20:00","Actor":"ganik","Number":"1169","RawContent":null,"Title":"Fix TensorFlowScorer duplicate parameter name Model","State":"open","Body":"* Fix TensorFlowScorer duplicate parameter name Model\r\n* Add unit test to detect duplicate parameter names in entrypoints\r\nfixes #1039 \r\n\r\nNew unit test detected duplication of parameter names in following components:\r\nData.DataViewReference\r\nModels.CrossValidator\r\nModels.CrossValidationResultsCombiner\r\nModels.PipelineSweeper\r\nModels.PipelineSweeper\r\nModels.SweepResultExtractor\r\nModels.TrainTestEvaluator\r\nTransforms.TwoHeterogeneousModelCombiner\r\nTransforms.ManyHeterogeneousModelCombiner\r\n\r\nI would like to have a separate PRs to fix these entrypoints. The new unit test will prevent further duplication from now on.","Url":"https://github.com/dotnet/machinelearning/pull/1169","RelatedDescription":"Open PR \"Fix TensorFlowScorer duplicate parameter name Model\" (#1169)"},{"Id":"367370743","IsPullRequest":false,"CreatedAt":"2018-10-05T21:13:58","Actor":"Ivanidzo4ka","Number":"1168","RawContent":null,"Title":"Solution file don't have references for all package projects","State":"open","Body":"https://github.com/dotnet/machinelearning/tree/master/pkg\r\nwe have quite a lot of packages, but solution file has reference only for 3 of them\r\nhttps://github.com/dotnet/machinelearning/blob/d5175899b604d852dab08107e583c78cbe5d6948/Microsoft.ML.sln#L52\r\n\r\nShould we update solution and have policy to add new packages into it, or should we just remove them from solution?\r\n\r\nAny thoughts?","Url":"https://github.com/dotnet/machinelearning/issues/1168","RelatedDescription":"Open issue \"Solution file don't have references for all package projects\" (#1168)"},{"Id":"367370330","IsPullRequest":true,"CreatedAt":"2018-10-05T21:12:28","Actor":"Zruty0","Number":"1167","RawContent":null,"Title":"Converted Schema to a class","State":"open","Body":"Created a Schema class for eager schema.\r\nConverted existing row mappers to use Schema.\r\n\r\nFixes #764","Url":"https://github.com/dotnet/machinelearning/pull/1167","RelatedDescription":"Open PR \"Converted Schema to a class\" (#1167)"},{"Id":"367367769","IsPullRequest":true,"CreatedAt":"2018-10-05T21:03:16","Actor":"sfilipi","Number":"1166","RawContent":null,"Title":"WIP: adding a nuget to package the datasets. ","State":"open","Body":"The samples that appear in our documentation should have code that the user can copy/pate and execute. \r\nFor that purpose packaging the datasets in a NuGet whose namespace we can reference from the samples. \r\n\r\nAddresses #1137 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1166","RelatedDescription":"Open PR \"WIP: adding a nuget to package the datasets. \" (#1166)"},{"Id":"367361346","IsPullRequest":true,"CreatedAt":"2018-10-05T20:40:31","Actor":"AswinPG","Number":"1165","RawContent":null,"Title":"Update README.md","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1165","RelatedDescription":"Open PR \"Update README.md\" (#1165)"},{"Id":"367199869","IsPullRequest":true,"CreatedAt":"2018-10-05T12:57:56","Actor":"theotherjay","Number":"1164","RawContent":null,"Title":"Release/preview","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1164","RelatedDescription":"Closed or merged PR \"Release/preview\" (#1164)"},{"Id":"367073289","IsPullRequest":false,"CreatedAt":"2018-10-05T06:12:41","Actor":"sfilipi","Number":"1162","RawContent":null,"Title":"Trainer extensions should be in the Microsoft.ML.Trainers namespace","State":"open","Body":"We moved the trainers from the Microsoft.Ml.Trainers namespace, to the Microsoft.Ml.StaticPipe namespace, so that they display on Ctrl+Space of the trainingContext object. We chose this namespace since we are suggesting the users to opt in to this namespace for Pigsty Api usage. \r\n\r\nBut the docs.microsoft.com site is hard to navigate this way; where users starts from namespaces. \r\nThat namespace is not intuitive, as a placeholder for the list of trainers, and it also contains a bunch of other unrelated utilities. Revert back and add a note to the cookbook.  ","Url":"https://github.com/dotnet/machinelearning/issues/1162","RelatedDescription":"Open issue \"Trainer extensions should be in the Microsoft.ML.Trainers namespace\" (#1162)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-09T05:30:36.2181964Z","RunDurationInMilliseconds":1099}