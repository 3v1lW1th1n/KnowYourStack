{"Data":{"Blog":{"FeedItems":[{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null},{"Title":"Find Local Xamarin and .NET Developer Events This April","PublishedOn":"2018-04-02T18:42:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Spring into action this April by finding a Xamarin or .NET user group hosting Xamarin (and related technology) events near you! Get the latest news on exciting releases, tooling, and updates all month...","Href":"https://blog.xamarin.com/xamarin-developer-community-events-april/","RawContent":null},{"Title":"Update to Xamarin.Forms 3.0 Pre-Release Available Today!","PublishedOn":"2018-03-30T19:02:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that the latest update to the Xamarin.Forms 3.0 Pre-release is now available! Help us make this our best Xamarin.Forms release ever by updating today and giving it a...","Href":"https://blog.xamarin.com/update-to-xamarin-forms-3-0-pre-release-available-today/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 2 – Xamarin.iOS","PublishedOn":"2018-03-28T19:17:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the second part in a four-part series. In the first post, we covered building Xamarin.Forms from the source and then stepping into and debugging that code. In this post, we&#8217;ll explore...","Href":"https://blog.xamarin.com/debugging-xamarin-ios/","RawContent":null},{"Title":"New Xamarin.Android and Xamarin.iOS Project Templates Now Available","PublishedOn":"2018-03-26T18:31:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Whether you&#8217;re new or a seasoned Xamarin developer, project templates are an important part of the app building journey. They should be easy to find and set you up for success from the start. As...","Href":"https://blog.xamarin.com/new-xamarin-android-ios-templates/","RawContent":null},{"Title":"Performing Geospatial Calculations with Azure CosmosDB","PublishedOn":"2018-03-23T15:56:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure CosmosDB is a multi-model, globally distributed database, as well as a geospatial calculation powerhouse. It can calculate the distance between two points, determine whether a road runs through...","Href":"https://blog.xamarin.com/performing-geospatial-calculations-azure-cosmosdb/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 1 – Xamarin.Forms","PublishedOn":"2018-03-21T18:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At some point, while working with Xamarin to build awesome mobile apps, you may have received an exception or error notification from the Xamarin framework code, Mono runtime, or Base Class Library...","Href":"https://blog.xamarin.com/debugging-xamarin-forms/","RawContent":null},{"Title":"Creating Cloud-Connected Mobile Apps with Xamarin + Azure","PublishedOn":"2018-03-19T17:56:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Case You Missed It A few weeks ago, we announced “Your Guide to Azure Services for Apps Built with Xamarin” on the Visual Studio blog to help you identify which cloud-connected services in Azure...","Href":"https://blog.xamarin.com/cloud-connected-apps-xamarin-azure/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7509873121","Type":"PullRequestEvent","CreatedAt":"2018-04-10T21:50:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1538","RelatedDescription":"Merged pull request \"[tests] Run locale test again\" (#1538) at xamarin/xamarin-android","RelatedBody":"Looks like https://github.com/xamarin/xamarin-android/commit/c4e81655a\r\nomitted the locale test and thus we didn't run it anymore.\r\n\r\nAdded `TestApkInstrumentation` item, so that the test is run again."},{"Id":"7509611666","Type":"IssuesEvent","CreatedAt":"2018-04-10T20:55:57","Actor":"bratsche","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1535","RelatedDescription":"Closed issue \"Could not load file or assembly 'Ionic.zip, Version=1.9.3.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\" (#1535) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update Visual Studio for Mac to Version 7.4.2 (build 12)\r\n2. Archive Xamarin.Android project\r\n3. Press \"Sign and Distribute...\"\r\n4. Select Android Distribution Channel (any of them)\r\n5. Select keystore, insert password\r\n\r\n### Expected Behavior\r\nGenerate Android APK / Start publishing app on Google Play.\r\n\r\n### Actual Behavior\r\nERROR:System.IO.FileNotFoundException: Could not load file or assembly 'Ionic.Zip, Version=1.9.3.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. \r\n\r\n### Version Information\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.4.2 (build 12)\r\nInstallation UUID: ccf2a17b-25b8-4c0e-82b0-9d2746789925\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/brunoserrano/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 25.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_111\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.28 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Enterprise)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704020012\r\nGit revision: 0d8e3f0a4d683771f17959739956fa09c7ba21e3\r\nBuild date: 2018-03-30 10:45:17-04\r\nXamarin addins: 958839ea56ab1e331caf7c92b6ad50fb9e6ee9d2\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\n\r\n### Log File\r\n\r\n--------------------------------------------------\r\n\r\n> Begining distribution, 4/10/2018 12:42:58 PM\r\n> Channel: Ad Hoc\r\n> App Bundle Id: br.com.cartaomagnus.magnusempresario, Version: 2.0.0\r\n> Publishing Ad Hoc to /Users/brunoserrano/Downloads/br.com.cartaomagnus.magnusempresario.apk\r\n> Signing packages...\r\n> Detected signing algorithm as : RSA\r\n> ERROR:Signing Failed\r\n> ERROR:System.IO.FileNotFoundException: Could not load file or assembly 'Ionic.Zip, Version=1.9.3.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\r\n> File name: 'Ionic.Zip, Version=1.9.3.0, Culture=neutral, PublicKeyToken=null'\r\n>   at MonoDevelop.MonoDroid.AndroidPublisher+<>c__DisplayClass59_0.<SignPackagesAsync>b__1 (System.Threading.Tasks.Task st) [0x00019] in /Users/builder/data/lanes/5810/0d8e3f0a/source/md-addins/MonoDevelop.MonoDroid/MonoDevelop.MonoDroid/Archival/AndroidPublisher.cs:274 \r\n>   at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () [0x00024] in /Users/builder/data/lanes/5533/mono-mac-sdk/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/TaskContinuation.cs:111 \r\n>   at System.Threading.Tasks.Task.Execute () [0x00010] in /Users/builder/data/lanes/5533/mono-mac-sdk/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \r\n> Saving state back to archive\r\n> Finshed\r\n\r\n--------------------------------------------------\r\n\r\n> Begining distribution, 4/10/2018 12:43:22 PM\r\n> Channel: Google Play\r\n> App Bundle Id: br.com.cartaomagnus.magnusempresario, Version: 2.0.0\r\n> Publishing to GooglePlay\r\n> Signing packages...\r\n> Detected signing algorithm as : RSA\r\n> ERROR:Signing Failed\r\n> ERROR:System.IO.FileNotFoundException: Could not load file or assembly 'Ionic.Zip, Version=1.9.3.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\r\n> File name: 'Ionic.Zip, Version=1.9.3.0, Culture=neutral, PublicKeyToken=null'\r\n>   at MonoDevelop.MonoDroid.AndroidPublisher+<>c__DisplayClass59_0.<SignPackagesAsync>b__1 (System.Threading.Tasks.Task st) [0x00019] in /Users/builder/data/lanes/5810/0d8e3f0a/source/md-addins/MonoDevelop.MonoDroid/MonoDevelop.MonoDroid/Archival/AndroidPublisher.cs:274 \r\n>   at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () [0x00024] in /Users/builder/data/lanes/5533/mono-mac-sdk/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/TaskContinuation.cs:111 \r\n>   at System.Threading.Tasks.Task.Execute () [0x00010] in /Users/builder/data/lanes/5533/mono-mac-sdk/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \r\n> Saving state back to archive\r\n> Finshed\r\n> \r\n\r\n![screen shot 2018-04-10 at 09 39 17](https://user-images.githubusercontent.com/2973295/38567629-1d33bab6-3cbd-11e8-9ef2-011b68d05439.png)\r\n[Ide.2018-04-10__12-41-14.log](https://github.com/xamarin/xamarin-android/files/1895292/Ide.2018-04-10__12-41-14.log)\r\n[Publishing.2018-04-10__12-41-14.log](https://github.com/xamarin/xamarin-android/files/1895330/Publishing.2018-04-10__12-41-14.log)\r\n"},{"Id":"7509332650","Type":"PullRequestEvent","CreatedAt":"2018-04-10T20:00:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1539","RelatedDescription":"Opened pull request \"[libzip, mono-runtimes, monodroid] Build with msbuild\" (#1539) at xamarin/xamarin-android","RelatedBody":"Like e3abe4b8, but different: we had another `xbuild`-ism that\r\n`msbuild` doesn't like: the \"intermixing\" of \"strings\" and item\r\nmetdata within *top-level* item groups.\r\n\r\nFor example:\r\n\r\n\t<_MonoCrossRuntimeIntermediateOutput Include=\"$(IntermediateOutputPath)\\%(_MonoCrossRuntime.Identity)\\mono\\mini\\mono-sgen%(_MonoCrossRuntime.ExeSuffix)\" />\r\n\r\nThe above uses item metadata, e.g. `%(_MonoCrossRuntime.Identity)`,\r\n*outside* of a `@(_MonoCrossRuntime->'...')` context, at top-level\r\nscope. The result is a [build break][0]\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-msbuild/857/\r\n\r\n\tsrc/mono-runtimes/mono-runtimes.targets(818,5): error MSB3375:\r\n\tThe file \"obj/Debug//%(_MonoCrossRuntime.Identity)/mono/mini/mono-sgen%(_MonoCrossRuntime.ExeSuffix)\" does not exist.\r\n\r\nNote that the item metadata wasn't actually replaced, and instead was\r\nused literally.\r\n\r\nThe fix is to replace the above \"intermixing\" with `@(Foo->...)`:\r\n\r\n\t<_MonoCrossRuntimeIntermediateOutput  Include=\"@(_MonoCrossRuntime->'$(IntermediateOutputPath)\\%(Identity)\\mono\\mini\\mono-sgen%(ExeSuffix)')\" />\r\n\r\nThis appeases MSBuild, allowing things to build.\r\n\r\nReview matches for:\r\n\r\n\t$ git grep '<.*Include=\"\\$.*%'\r\n\r\nand fix any top-level `<ItemGroup/>` matches."},{"Id":"7509200819","Type":"PullRequestEvent","CreatedAt":"2018-04-10T19:35:00","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1538","RelatedDescription":"Opened pull request \"[tests] Run locale test again\" (#1538) at xamarin/xamarin-android","RelatedBody":"Looks like https://github.com/xamarin/xamarin-android/commit/c4e81655a\r\nomitted the locale test and thus we didn't run it anymore.\r\n\r\nAdded `TestApkInstrumentation` item, so that the test is run again."},{"Id":"7509012621","Type":"PullRequestEvent","CreatedAt":"2018-04-10T18:57:24","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1537","RelatedDescription":"Opened pull request \"[Java.Interop] Add JavaTypeManager class based on JavaObject\" (#1537) at xamarin/xamarin-android","RelatedBody":"And use it from Java side in place of the old\r\n`Java.Interop.TypeManager` and its `Activate` method. As it is based\r\non `JavaObject`, it will work nicely with the *jnimarshalmethod-gen*."},{"Id":"7508696817","Type":"PullRequestEvent","CreatedAt":"2018-04-10T17:58:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1518","RelatedDescription":"Closed pull request \"build fix: do not generate API XML definitions every time.\" (#1518) at xamarin/xamarin-android","RelatedBody":"https://github.com/xamarin/xamarin-android/pull/1491 broke build caching.\r\nNow api-\\*.xml.in is generated EVERY TIME, which adds tremendous amount of\r\nbuild time. And this build happens every time anything that depends on\r\napi-\\*.xml.in and all its subsequent dependencies.\r\nFor example, Xamarin.Android.Build.Tasks build is suffered from it.\r\n\r\nThe cause of the problem is this:\r\n\r\n\tInputs=\"@(_ApiParameterDescription)\"\r\n\r\nwhich is expanded as follows:\r\n\r\n\t/sources/xamarin-android/build-tools/api-xml-adjuster/../../src/Mono.Android/Profiles/api-4.params.txt;/sources/xamarin-android/build-tools/api-xml-adjuster/../../src/Mono.Android/Profiles/api-5.params.txt; ...\r\n\r\nNote that many of those (e.g. API Level 4-9) do not exist.\r\nFor non-existent inputs, MSBuild targets always execute.\r\n\r\nTo fix the issue, add another build task that returns only existent files\r\nand use it to determine the actual targets.\r\n\r\nThis is sadly a compromised solution that updates on ANY API level will\r\ntrigger generation of ALL API levels (but must be applied IMMEDIATELY\r\nwithout excuse for \"better solution\". It's a BLOCKER for development.\r\nNo one can work on MSBuild tasks if this bug remains)."},{"Id":"7508694817","Type":"PullRequestEvent","CreatedAt":"2018-04-10T17:58:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1531","RelatedDescription":"Merged pull request \"[api-xml-adjuster] Don't needlessly rebuild XML\" (#1531) at xamarin/xamarin-android","RelatedBody":"Commit e3abe4b8 broke caching of the\r\n`bin/Build$(Configuration)/api/api-*.xml.*` files, reintroducing the\r\nscenario that commit 5c46ee39 fixed. The result is that *minutes* may\r\nbe spent needlessly re-generating API XML.\r\n\r\nThe cause of the breakage is that `@(_ApiParameterDescription)`\r\n(introduced in e3abe4b8) will contain entries that we don't care\r\nabout, e.g. API-4, for which no longer generate bindings. As such, the\r\n`_ClassParse` target Inputs were looking for files which will never\r\nexist, thus causing the `_ClassParse` target to always execute.\r\n\r\nThis *could* be fixed by making `@(_ApiParameterDescription)`/etc.\r\nentries conditional on on the file\r\n`%(_ApiParameterDescription.ParameterDescription)` refers to actually\r\nexisting, a'la:\r\n\r\n\t<ItemGroup>\r\n\t  <_ApiParameterDescription\r\n\t      Condition=\"Exists('%(ApiFileDefinition.ParameterDescription)')\"\r\n\t      Include=\"%(ApiFileDefinition.ParameterDescription)\"\r\n\t  />\r\n\t</ItemGroup>\r\n\r\nHowever, this is suboptimal, as it means everything must still be\r\nrebuilt if only one file changes:\r\n\r\n\t$ touch src/Mono.Android/Profiles/api-27.params.txt\r\n\t$ (cd build-tools/api-xml-adjuster ; time msbuild )\r\n\treal    2m20.205s\r\n\t# eep!\r\n\r\nWhat we really want is [MSBuild Target Batching][0], but our use of\r\nitem groups *without* item metadata prevents target batching!\r\n\r\n[0]: https://msdn.microsoft.com/en-us/library/ms171473.aspx\r\n\r\nWhich leads to a realization: the rationalization for commit e3abe4b8\r\nwas incomplete: The problem wasn't using metadata within Target Inputs\r\nand Outputs; the problem was intermixing strings with metadata.\r\n\r\nMeaning the pre-e3abe4b8 `api-xml-adjuster.targets` was *correct*\r\n(except for the bit about it mentioning files which didn't exist,\r\ncausing needless rebuilds):\r\n\r\n\t<!-- Good! Permits Target Batching -->\r\n\t<Target Name=\"_ClassParse\"\r\n\t    Inputs=\"%(ApiFileDefinition.ParameterDescription)\"\r\n\t    Outputs=\"%(ApiFileDefinition.ApiAdjustedXml)\"\r\n\t  ...\r\n\r\nvs. what e3abe4b8 was attempting to fix:\r\n\r\n\t<!-- BAD! Intermixes metadata with strings -->\r\n\t<Target Name=\"_Make\"\r\n\t    Inputs=\"$(IntermediateOutputPath)\\%(_LibZipTarget.Identity)\\Makefile\"\r\n\t  ...\r\n\r\nReviewing e3abe4b8, `api-xml-adjuster.targets` is the only file that\r\nwas *already* properly using item medata within Target Inputs & Outputs.\r\n\r\nFix `class-parse.exe` and `api-xml-adjuster.exe` rebuilds by properly\r\nusing MSBuild Target Batching, *and* by *filtering*\r\n`@(ApiFileDefinition)` so that it only contains values for which we\r\nhave a `src/Mono.Android/Profiles/api-*.params.txt` file.\r\n\r\nWith these changes in place, single-file rebuilds are much faster:\r\n\r\n\t$ touch src/Mono.Android/Profiles/api-27.params.txt\r\n\t$ (cd build-tools/api-xml-adjuster ; time msbuild )\r\n\treal    0m26.662s\r\n"},{"Id":"7508648403","Type":"PullRequestEvent","CreatedAt":"2018-04-10T17:49:56","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1527","RelatedDescription":"Merged pull request \"Bump to java.interop/master/4c965c9\" (#1527) at xamarin/xamarin-android","RelatedBody":"Doing this so I can finish up:\r\n\r\nhttps://github.com/xamarin/java.interop/pull/285\r\n\r\n_We are also behind 14 commits, since about March 22_"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7510993421","Type":"PullRequestEvent","CreatedAt":"2018-04-11T03:57:35","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2419","RelatedDescription":"Opened pull request \"add debug type full property to control gallery netstandard library so break points are hit\" (#2419) at xamarin/Xamarin.Forms","RelatedBody":"https://developercommunity.visualstudio.com/content/problem/29331/pdbs-are-not-generated-when-building-a-uwp-app-tha.html\r\n\r\nAdding debugtype pdbonly or full to the NetStandard library causes the break points to start working in the Control Gallery project.\r\n\r\nReading around I'm still not quite clear whether this is a tooling bug or expected behavior "},{"Id":"7510177545","Type":"PullRequestEvent","CreatedAt":"2018-04-10T23:12:42","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2418","RelatedDescription":"Closed pull request \"[UWP] Restore ShowAsyncQueue method for dialogs\" (#2418) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis problem was originally fixed in https://github.com/xamarin/Xamarin.Forms/pull/347, but the fix was lost somewhere along the way. This change restores the method and updates it to work with the changes from https://github.com/xamarin/Xamarin.Forms/pull/881.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2369 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7510073540","Type":"PullRequestEvent","CreatedAt":"2018-04-10T22:42:41","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2418","RelatedDescription":"Opened pull request \"Restore ShowAsyncQueue method \" (#2418) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis problem was originally fixed in https://github.com/xamarin/Xamarin.Forms/pull/347, but the fix was lost when WinRT was removed in https://github.com/xamarin/Xamarin.Forms/pull/1267. This change restores the method and updates it to work with the changes from https://github.com/xamarin/Xamarin.Forms/pull/881.\r\n\r\n### Bugs Fixed ###\r\n\r\n- #2369 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7510036029","Type":"PullRequestEvent","CreatedAt":"2018-04-10T22:32:11","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2417","RelatedDescription":"Opened pull request \"Update CONTRIBUTING.md\" (#2417) at xamarin/Xamarin.Forms","RelatedBody":"CLA url is no long valid. Updated the link and tweaked the instructions.\r\n\r\n### Description of Change ###\r\n\r\nDescribe your changes here.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7509844496","Type":"IssuesEvent","CreatedAt":"2018-04-10T21:44:11","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2415","RelatedDescription":"Opened issue \"Xamarin.Forms.MaterialShell Spec\" (#2415) at xamarin/Xamarin.Forms","RelatedBody":"# Xamarin.Forms Shell Spec\r\nMake it simple and straightforward for new developers to get a complete app experience that is properly structured, uses the right elements, with very little effort and a clear path to being good by default.\r\n\r\nMaterialShell is an opinionated API at points, it does not always default every value to some .Default which may change based on the running platform. Instead it may set a value which is then respected across all platforms regardless what the platform default is.\r\n\r\n\r\n# Visual Treatment\r\n\r\n\r\n# Bottom Sheet & Search Handler Precedence\r\n\r\nBottom sheets can be set on any `TemplatedPage`, `ShellTabItem`, or `ShellItem` by using the BottomSheetProperty on MaterialShell. If a Bottom Sheet is set on both a ShellItem and a TemplatedPage, the item further from the root of the hierarchy takes precedence.\r\n\r\nThe same principle holds true for search handlers.\r\n\r\n# Navigation Model\r\n## Push Navigation\r\n\r\nAll navigation is based on the View’s .Navigation property. Pushes go into the current Page that is logically displayed. What happens to the tab bar is wholly dependent upon its location. Top tab bars go away on a push (they are in effect pushed away). Inversely bottom tab bars result in the push happening within the tab. This means changing bar position may change its visibility.\r\n\r\n## Myths\r\n\r\nLike stories, but not as well fleshed out, just enough to give you a flavor of what this is driving at.\r\n\r\n**User wants to push a new page**\r\nAssuming the following application\r\n\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <ShellItem>\r\n        <local:MyFirstPage x:Name=\"Page1\" />\r\n        <local:MySecondPage x:Name=\"Page2\" />\r\n        <local:MyThirdPage x:Name=\"Page3\" />\r\n      </ShellItem>\r\n    </MaterialShell>\r\n```\r\n\r\nIf `Page1` is the currently selected page:\r\n\r\n| User Action                    | Result                                                                                                                                                         |\r\n| ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| Page1.Navigation.Push (page4); | `page4` Displayed, tabs disappear during animation. Back button will cause navigation back to `Page1`. User can NOT use tabs or swipe to change to other tabs. |\r\n| Page2.Navigation.Push (page4); | No visible change, when switching to tab 1 `page4` is displayed, a warning is logged                                                                           |\r\n| Page3.Navigation.Push (page4); | No visible change, when switching to tab 1 `page4` is displayed, a warning is logged                                                                           |\r\n\r\nIf `TabLocation` of the `ShellItem` is set to Bottom:\r\n\r\n| User Action                    | Result                                                                                                                                 |\r\n| ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------- |\r\n| Page1.Navigation.Push (page4); | `page4` Displayed, tabs remain. Back button will cause navigation back to `Page1`. User can use tabs or swipe to change to other tabs. |\r\n| Page2.Navigation.Push (page4); | No visible change, when switching to tab 1 `page4` is displayed                                                                        |\r\n| Page3.Navigation.Push (page4); | No visible change, when switching to tab 1 `page4` is displayed                                                                        |\r\n\r\n# Handling the Back Button\r\n\r\nSince MaterialShell will be in the enviable position of not having to use native controls, all forms of back button overriding can and should be supported.\r\n\r\nProper handling of the back button needs to support the following features:\r\n\r\n\r\n- Intercepting interactions and stopping them\r\n- Replacing the back button with something else\r\n- Hiding the back button entirely when desired\r\n- Work for software and hardware buttons\r\n\r\nThe API needs to be granular to the page level for ease of use, but also be able to be handled further up the stack in a more general level.\r\n\r\n# Theming\r\n\r\nTo make MaterialShell work it not only needs a shell which appears to be material design, but all of its contents also should be material design. Today that means Custom Renderers. This is heavy and undesired from a user work perspective. Instead a better approach is required.\r\n\r\n## Simple drawing API sample\r\n```xaml\r\n    <Button x:Class=\"Local.MyButton\">\r\n      <Button.Template>\r\n        <DrawingTemplate>\r\n          <Drawing>\r\n            <Grid>\r\n              <RoundedRectangle Background=\"{x:Bind BackgroundColor}\" />\r\n              <Ellipse x:Name=\"TouchFeedback\" Opacity=\"0\" />\r\n              <Text Content=\"{x:Bind Text}\" />\r\n            </Grid>\r\n          </Drawing>\r\n        </DrawingTemplate>\r\n      </Button>\r\n    </Button>\r\n```\r\nView templates, at least for now, must be a `DrawingTemplate`. The first child of a `DrawingTemplate` is always a `Drawing`. Inside of a `Drawing` you may use Layouts and drawing primitives.\r\n\r\nDrawing primitives may be x:named and looked up by name and manipulated in code behind as any other `View`. In effect a drawing primitive is simply a view who has no renderer but rather must be inside a `Drawing` in order to work. `Drawing` is limited to children it can support as all are collapsed into simple drawing commands.\r\n\r\nDrawing primative objects may use a Brush type rather than a Color type for providing colors/backgrounds/etc.\r\n\r\nWhen using a MaterialShell, all relevant controls will receive a default `Template` which themes them according to the Material design guidelines and unifies their look and feel across platform. This theme can be overridden at any layer of the hierarchy simply by blocking its propagation in resource dictionaries.\r\n\r\nOnce realized a Control may not have its Template changed as DrawingTemplated controls may at times require different renderers.\r\n\r\n## Types\r\n\r\n**DrawingTemplate**\r\nThis is mostly a marker type. In the future we will eliminate the requirement that Templates be DrawingTemplates.\r\n```csharp\r\n    public class DrawingTemplate : ElementTemplate {}\r\n```\r\n**Drawing**\r\nA View which has no renderer and is instead consumed by its parent view as a native drawing.\r\n```csharp\r\n    public class Drawing : Layout<View>\r\n    {\r\n    }\r\n```\r\n**Drawing Primitives**\r\nThere will be a need for a large number of drawing primitives with associated properties. This document does not attempt to define all of them, just note some of the obvious ones that will need to exist. The drawing primitive API is not intended to be a wholesale replacement for SkiaSharp. It is however intended to be agnostic to the usage of Skia or native drawing backends for the paltform.\r\n\r\nA good path forward for Skia would be to add a SkiaDrawing element that would instruct the Drawing to be rendered via Skia. Skia could then render all the stock primitives as well as provide a Skia drawing element which allows for coded drawing.\r\n\r\n\r\n- Line\r\n  - Drawn line, not to be confused with a BoxView\r\n  - LineStyle\r\n  - Thickness\r\n  - Start, End (this is actually really interesting due to the way it interacts with layouts)\r\n    - Probably should actually be something like start/end corners so the line draws from one edge of a box to another\r\n- Text\r\n  - Drawn text, not to be confused with a label\r\n  - Font properties\r\n  - Size to fit property\r\n  - Needs to support measure\r\n- Rectangle\r\n  - A rectangle\r\n  - Border\r\n  - BorderWidth\r\n  - Colors\r\n- RoundedRectangle\r\n  - A well-weathered rectangle\r\n- Ellipse\r\n  - A squishy circle\r\n- Circle\r\n  - A circle\r\n- BezierCurve\r\n  - A nice curvy line\r\n- Arc\r\n  - Part of a circle\r\n- Path\r\n  - Fill\r\n  - ShouldClose\r\n  - Series of points with optional control points\r\n# Code Samples and API\r\n## Samples\r\n```xaml\r\n    <MaterialShell>\r\n      <Shell.FlyoutHeaderTemplate>\r\n        <DataTemplate>\r\n          <Grid>\r\n            <Label Text=\"{x:Bind HeaderText}\" />\r\n          </Grid>\r\n        </DataTemplate>\r\n      </Shell.FlyoutHeaderTemplate>\r\n      \r\n      // Flyout Item 1\r\n      <ShellItem Title=\"My music\" ItemsSource=\"{x:Bind MyMusicModels}\" TabLocation=\"Bottom\">\r\n        <ShellItem.ItemTemplate>\r\n          <local:MyMusicItemTemplateSelection />\r\n        </ShellItem.ItemTemplate>\r\n      </ShellItem>\r\n      \r\n      // Flyout Item 2\r\n      <ShellItem Title=\"Home\" Icon=\"home.png\" GroupBehavior=\"ShowTabs\">\r\n        <ShellTabItem Title=\"My Friends\">\r\n          <local:FriendsPage />\r\n        </ShellTabItem>\r\n        <local:FeedPage />\r\n        <local:ProfilePage />\r\n      </ShellItem>\r\n      \r\n      // Flyout Item 3\r\n      <local:SettingsPage />\r\n      \r\n      // Flyout Item 4\r\n      <MenuItem Text=\"Log Out\" Command=\"{x:Bind LogOutCommand}\" />\r\n    </MaterialShell>\r\n```\r\n**Single Page App using Shell**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <local:MyPage />\r\n    </MaterialShell>\r\n```\r\n**Single Group of Tabs app (no Flyout)**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <ShellItem>\r\n        <local:MyPage />\r\n        <local:MySecondPage />\r\n        <local:MyThirdPage />\r\n      </ShellItem>\r\n    </MaterialShell>\r\n```\r\n**Multiple pages in flyout with no tabs**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <local:MyPage />\r\n      <local:MySecondPage />\r\n      <local:MyThirdPage />\r\n    </MaterialShell>\r\n```\r\n**Single Page app with Floating Action Button**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <local:MyPage>\r\n        <MaterialShell.FloatingMenu>\r\n          <FloatingMenu>\r\n            <MenuItem Text=\"+\" Command=\"{x:Bind AddCommand}\" />\r\n          </FloatingMenu>\r\n        </MaterialShell.FloatingMenu>\r\n      </local:MyPage>\r\n    </MaterialShell>\r\n```\r\n**Single Page app with Floating Action Menu**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <local:MyPage>\r\n        <MaterialShell.FloatingMenu>\r\n          <FloatingMenu>\r\n            <Menu Text=\"+\">\r\n              <MenuItem Text=\"Add\" Command=\"{x:Bind AddCommand}\" />\r\n              <MenuItem Text=\"Cancel\" Command=\"{x:Bind CancelCommand}\" />\r\n            </Menu>\r\n          </FloatingMenu>\r\n        </MaterialShell.FloatingMenu>\r\n      </local:MyPage>\r\n    </MaterialShell>\r\n```\r\n**Single Page App with Bottom Sheet**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <local:MyPage>\r\n        <MaterialShell.BottomSheet>\r\n          <BottomSheet SheetBehavior=\"ShowOnScrollUp\">\r\n            <BottomSheet.Header>\r\n              <Grid>\r\n                <Label Text=\"Drag to show warnings\" />\r\n              </Grid>\r\n            </BottomSheet.Header>\r\n            <Label Text=\"{x:Bind WarningText}\" HorizontalAlignment=\"Center\" />\r\n          </BottomSheet>\r\n        </MaterialShell.BottomSheet>\r\n      </local:MyPage>\r\n    </MaterialShell>\r\n```\r\n**Single Page Searchable App**\r\n```xaml\r\n    <MaterialShell FlyoutVisibility=\"Disabled\">\r\n      <local:MyPage />\r\n    </MaterialShell>\r\n```\r\n```csharp\r\n    public class MyPage : ContentPage, ISearchHandler\r\n    {\r\n      public MyPage ()\r\n      {\r\n        MaterialShell.SetSearchHandler (this, this);\r\n      }\r\n      \r\n      public bool IsSearchable { get; } => true;\r\n      public bool IsSearchEnabled { get; } => true;\r\n      public bool IsSearching { get; private set; }\r\n      public string Placeholder { get; } => \"Search me!\"\r\n      \r\n      public async void OnSearchConfirmed (string query)\r\n      {\r\n        IsSearching = true;\r\n        \r\n        await PerformSearch (query);\r\n        UpdateResults ();\r\n        \r\n        IsSearching = false;\r\n      }\r\n      \r\n      public void OnSearchChanged (string oldValue, string newValue)\r\n      {\r\n        // Do nothing, we will wait for confirmation\r\n      }\r\n      \r\n      public void OnSearchCleared ()\r\n      {\r\n        if (IsSearching)\r\n        {\r\n          IsSearching = false;\r\n          CancelSearch ();\r\n        }\r\n      }\r\n    }\r\n```\r\n## API Definition\r\n\r\n**MaterialShell**\r\nThis is the primary class for MaterialShell, it is a Page which at the time of this definition can only itself contain TemplatedPage’s as children. This prevents odd interactions with other navigation style pages.\r\n\r\n```csharp\r\n    public class MaterialShell : Page\r\n    {\r\n    // Attached Properties\r\n      public static readonly BindableProperty FloatingMenuProperty;\r\n      public static IList<MenuItem> GetFloatingMenu (BindableObject object);\r\n      public static void SetFloatingMenu (BindableObject object, FloatingMenu value);\r\n      \r\n      public static readonly BindableProperty SearchHandlerProperty;\r\n      public static ISearchHandler GetSearchHandler (BindableObject object);\r\n      public static void SetSearchHandler (BindableObject object, ISearchHandler handler);\r\n      \r\n      public static readonly BindableProperty BottomSheetProperty;\r\n      public static BottomSheet GetBottomSheet (BindableObject object);\r\n      public static void SetBottomSheet (BindableObject object, BottomSheet sheet);\r\n    \r\n    // Public API\r\n      public static readonly BindableProperty ChildrenProperty;\r\n      [Content]\r\n      public IList<ShellItem> Children { get; }\r\n      \r\n      public static readonly BindableProperty MenuItemsProperty;\r\n      public IList<MenuItem> MenuItems { get; }\r\n      \r\n      public static readonly BindableProperty MenuItemsSourceProperty;\r\n      public IList MenuItemsSource { get; set; }\r\n      \r\n      public static readonly BindableProperty MenuItemTemplateProperty;\r\n      public DataTemplate MenuItemTemplate { get; set; }\r\n      \r\n      public static readonly BindableProperty FlyoutHeaderProperty;\r\n      public object FlyoutHeader { get; set; }\r\n      \r\n      public static readonly BindableProperty FlyoutHeaderTemplateProperty;\r\n      public View FlyoutHeaderTemplate { get; set; }\r\n      \r\n      public static readonly BindableProperty FlyoutBehavior;\r\n      public FlyoutBehavior FlyoutBehavior { get; set; }\r\n      \r\n      public static readonly BindableProperty FlyoutHeaderBehaviorProperty;\r\n      public FlyoutHeaderBehavior FlyoutHeaderBehavior { get; set; }\r\n      \r\n      public Task ShowMessage (string message, string actionText, Action callback);\r\n      \r\n      public Task ShowMessage (string message, MaterialMessageStyle style);\r\n    }\r\n```\r\n**ShellItem**\r\n```csharp\r\n    public class ShellItem : BindableObject\r\n    {\r\n      public static readonly BindableProperty ItemsProperty;\r\n      [Content]\r\n      public IList<ShellTabItem> Items { get; }\r\n      \r\n      public static readonly BindableProperty CurrentItemProperty;\r\n      public object CurrentItem { get; }\r\n      \r\n      public static readonly BindableProperty ItemsSourceProperty;\r\n      public IList ItemsSource { get; set; }\r\n      \r\n      public static readonly BindableProperty ItemTemplateProperty;\r\n      public DataTemplate ItemTemplate { get; set; }\r\n      \r\n      public static readonly BindableProperty TitleProperty;\r\n      public string Title { get; set; }\r\n      \r\n      public static readonly BindableProperty IconProperty;\r\n      public ImageSource Icon { get; set; }\r\n      \r\n      public static readonly BindableProperty GroupBehaviorProperty;\r\n      public ShellItemGroupBehavior GroupBehavior { get; set; }\r\n      \r\n      public static readonly BindableProperty RibbonProperty;\r\n      public ShellRibbon Ribbon { get; set; }\r\n      \r\n      public static readonly BindableProperty IsEnabledProperty;\r\n      public bool IsEnabled { get; set; }\r\n      \r\n      public static implicit operator ShellItem (TemplatedPage page);\r\n      \r\n      public static implicit operator ShellItem (MenuItem menuItem);\r\n    }\r\n```\r\nWhen ItemsSource is set, Items becomes a readonly projection of the ItemsSource through the ItemTemplate. If Items is not empty when ItemsSource is set an exception should be thrown. CurrentItem is either the ShellTabItem which is selected, or if ItemsSource is set, the item from the ItemsSource.\r\n\r\n**ShellRibbon**\r\nThis type is a data only type which represents all the properties used for controlling how the Ribbon should look and behave when a particular ShellItem is displayed.\r\n```csharp\r\n    public class ShellRibbon : BindableObject\r\n    {\r\n      public static readonly BindableProperty NavBarCollapseStyleProperty;\r\n      public BarCollapseStyle NavBarCollapseStyle { get; set; }\r\n      \r\n      public static readonly BindableProperty TabBarCollapseProperty;\r\n      public BarCollapseStyle TabBarCollapseStyle { get; set; }\r\n      \r\n      public static readonly BindableProperty TabBarLocationProperty;\r\n      public TabBarLocation TabBarLocation { get; set; } = TabBarLocation.Top;\r\n    }\r\n```\r\n**BottomSheet**\r\n```csharp\r\n    public class BottomSheet : View\r\n    {\r\n      public static readonly BindableProperty HeaderProperty;\r\n      public View Header { get; set; }\r\n      \r\n      [Content]\r\n      public static readonly BindableProperty ContentProperty;\r\n      public View Content { get; set; }\r\n      \r\n      public static readonly BindableProperty SheetBehaviorProperty;\r\n      public BottomSheetBehavior SheetBehavior { get; set; }\r\n      \r\n      public static readonly BindableProperty SheetState;\r\n      public BottomSheetState SheetState { get; set; }\r\n    }\r\n```\r\n**BottomSheetBehavior**\r\n```csharp\r\n    public enum BottomSheetBehavior\r\n    {\r\n      Default = 0,\r\n      Hideable = 1 << 0,\r\n      ShowOnScrollUp = 1 << 1,\r\n    }\r\n```\r\n**BottomSheetState**\r\n```csharp\r\n    public enum BottomSheetState\r\n    {\r\n      Hidden,\r\n      Partial,\r\n      Visible\r\n    }\r\n```\r\n**ShellTabItem**\r\n```csharp\r\n    public class ShellTabItem : BindableObject \r\n    {\r\n      [Content]\r\n      public TemplatedPage Content { get; set; }\r\n      \r\n      public string Name { get; set; }\r\n      \r\n      public ImageSource Icon { get; set; }\r\n      \r\n      public bool IsEnabled { get; set; } // proxy to contained page IsEnabled\r\n      \r\n      public static implicit operator ShellTabItem (TemplatedPage page);\r\n    }\r\n```\r\n**ISearchHandler**\r\n```csharp\r\n    public interface ISearchHandler : INotifyPropertyChanged\r\n    {\r\n      bool IsSearchable { get; } // Controls visiblity of search box\r\n      bool IsSearchEnabled { get; } // Controls enabled state of search box\r\n      bool IsSearching { get; } // Indicates search progress in header\r\n      string Placeholder { get; } // Placeholder for search box\r\n      \r\n      void OnSearchConfirmed (); // User pressed enter\r\n      void OnSearchChanged (string oldValue, string newValue); // User typed\r\n      void OnSearchCleared (); // User pressed the clear button or deleted all text\r\n    }\r\n```\r\n**FloatingMenu**\r\n```csharp\r\n    public interface FloatingMenu : BindableObject\r\n    {\r\n      public Corner SourceCorner { get; set; } = Corner.BottomRight;\r\n      public Corner TargetCorner { get; set; } = Corner.BottomRight;\r\n      public Point Offset { get; set; } = new Point (100, 100);\r\n      public VisualElement RelativeTo { get; set; } // null == current page\r\n      \r\n      [Content]\r\n      public MenuItem Content { get; }\r\n    }\r\n```\r\n**Corner**\r\n```csharp\r\n    public enum Corner\r\n    {\r\n      TopLeft,\r\n      TopRight,\r\n      BottomLeft,\r\n      BottomRight\r\n    }\r\n```\r\n**BarCollapseStyle**\r\nControls the general collapse behavior when a scrollable region is scrolled. Shitty description…\r\n```csharp\r\n    public enum BarCollapseStyle\r\n    {\r\n      Default,\r\n      Partial,\r\n      Full\r\n    }\r\n```\r\n**TabBarLocation**\r\nControls the location of the TabBar\r\n```csharp\r\n    public enum TabBarLocation\r\n    {\r\n      Top,\r\n      Bottom,\r\n    }\r\n```\r\n**ShellItemGroupBehavior**\r\nDetermines how the ShellItem should display in the FlyoutMenu.\r\n```csharp\r\n    public enum ShellItemGroupBehavior {\r\n      HideTabs, // Only the group itself is shown in the flyout\r\n      ShowTabs, // The group is shown as a section in the flyout, with each tab having its own entry that causes the tab layout to switch to that tab\r\n    }\r\n```\r\n**FlyoutHeaderBehavior**\r\nControls the behavior of the FlyoutHeader when scrolling.\r\n```csharp\r\n    public enum FlyoutHeaderBehavior {\r\n      Default, // Perform default behavior, likely CollapseOnScroll\r\n      Fixed, // Header remains visible and unchanged at all times\r\n      Scroll, // Header scrolls out of view as user scrolls menu\r\n      CollapseOnScroll, // Header collapses to title only as user scrolls\r\n    }\r\n```\r\n**MaterialMessageStyle**\r\n```csharp\r\n    public enum MaterialMessageStyle\r\n    {\r\n      Snackbar,\r\n      Toast,\r\n    }\r\n```\r\n**FlyoutVisibility**\r\n```csharp\r\n    public enum FlyoutBehavior\r\n    {\r\n      SplitOnLandscape,\r\n      Split,\r\n      Popover,\r\n      SplitOnPortrait,\r\n      Disabled,\r\n    }\r\n```\r\n## Odds and Ends\r\n\r\n**What happens when you select a tab in Flyout which has been pushed to?**\r\nThis is the equivalent of focusing the tab and calling PopToRoot on it.\r\n\r\n# TODO\r\n[x] Add API for drawing\r\n[x] Add API for search box\r\n[ ] Add API for ContentSafeArea handling\r\n[x] Add API for floating menu\r\n[x] Add API for window menu items\r\n[x] Add API for snackbar\r\n[ ] Add API for navigation interruption\r\n[x] Add API for bottom sheet\r\n[ ] Fill out brush API\r\n[x] Add API to position FAB\r\n[ ] Add API to replace back button behaviors\r\n[ ] Add stories to make navigation ideas clearer (partially done)\r\n[ ] Add LeftBarButton style API\r\n\r\n"},{"Id":"7509664370","Type":"IssuesEvent","CreatedAt":"2018-04-10T21:06:14","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2099","RelatedDescription":"Closed issue \"ListView header still visible after set to null\" (#2099) at xamarin/Xamarin.Forms","RelatedBody":"1. Create a ListView with HasUnevenRows=\"True\" IsGroupingEnabled=\"True\" and with a header that contains a label.\r\n2. Sometime after the ListView has been rendered, set the header to null.\r\n\r\nThe header will still be displayed on UWP. Not sure about iOS and Android. Xamarin.Forms 2.5.0.280555."},{"Id":"7508899101","Type":"IssuesEvent","CreatedAt":"2018-04-10T18:35:45","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2317","RelatedDescription":"Closed issue \"[Android] Object name: 'Android.Graphics.Bitmap' System.ObjectDisposedException: Cannot access a disposed object.\" (#2317) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nBugzilla bug https://bugzilla.xamarin.com/show_bug.cgi?id=57789. I didn't submit the original bug, but it has just started happening to me (although with newer versions of Xamarin Forms).\r\n\r\nTapping a button sometimes triggers an `ObjectDisposedException` in either `ButtonDrawable.Draw` or `ButtonDrawable.Reset`. This is on Android AppCompat with fast renderers enabled. The buttons in question trigger navigation.\r\n\r\n### Steps to Reproduce\r\n\r\nUnclear. The only significant change between it not happening and it happening (for me at least) was moving the content with the buttons inside a CarouselViewControl. This is the one by alexrainman, and I'm still referencing his Nuget package.\r\n\r\nSadly, I cannot as yet produce a small reproducible sample, but I will see what I can come up with.\r\n\r\n### Expected Behavior\r\n\r\nNo exception.\r\n\r\n### Actual Behavior\r\n\r\nObject name: 'Android.Graphics.Bitmap' System.ObjectDisposedException: Cannot access a disposed object.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.392594-pre3 - 2.5.1.444934 \r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n- Android Support Library Version: 26.0.2\r\n\r\n### Stack trace for ButtonDrawable.Draw case\r\n\r\n```\r\nFATAL EXCEPTION: ControllerMessenger\r\nandroid.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Android.Graphics.Bitmap'.\r\n  at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <f866b6cd018644318f402b6eff2ef567>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualInt32Method (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <f866b6cd018644318f402b6eff2ef567>:0 \r\n  at Android.Graphics.Bitmap.get_Height () [0x0000a] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.ButtonDrawable.Draw (Android.Graphics.Canvas canvas) [0x00029] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Android.Graphics.Drawables.Drawable.n_Draw_Landroid_graphics_Canvas_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_canvas) [0x0000f] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at (wrapper dynamic-method) System.Object.310e6f61-0a59-4976-8037-aa9560b7943e(intptr,intptr,intptr)\r\n\tat md5b60ffeb829f638581ab2bb9b1a7f4f3f.ButtonDrawable.n_draw(Native Method)\r\n\tat md5b60ffeb829f638581ab2bb9b1a7f4f3f.ButtonDrawable.draw(ButtonDrawable.java:50)\r\n\tat android.graphics.drawable.RippleDrawable.drawContent(RippleDrawable.java:841)\r\n\tat android.graphics.drawable.RippleDrawable.draw(RippleDrawable.java:698)\r\n\tat android.view.View.getDrawableRenderNode(View.java:19377)\r\n\tat android.view.View.drawBackground(View.java:19313)\r\n\tat android.view.View.draw(View.java:19110)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18069)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4198)\r\n\tat android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4178)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18028)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18060)\r\n\tat android.view.View.draw(View.java:18847)\r\n\tat android.view.ViewGroup.drawChild(ViewGroup.java:4214)\r\n\tat android.view.ViewGroup.dispatchDraw(ViewGroup.java:4000)\r\n\tat android.view.View.draw(View.java:19122)\r\n\tat com.android.internal.policy.DecorView.draw(DecorView.java:785)\r\n\tat android.view.View.updateDisplayListIfDirty(View.java:18069)\r\n\tat android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:643)\r\n\tat android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:649)\r\n\tat android.view.ThreadedRenderer.draw(ThreadedRenderer.java:757)\r\n\tat android.view.ViewRootImpl.draw(ViewRootImpl.java:2980)\r\n\tat android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2794)\r\n\tat android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2347)\r\n\tat android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1386)\r\n\tat android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6733)\r\n\tat android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)\r\n\tat android.view.Choreographer.doCallbacks(Choreographer.java:723)\r\n\tat android.view.Choreographer.doFrame(Choreographer.java:658)\r\n\tat android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)\r\n\tat android.os.Handler.handleCallback(Handler.java:789)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.support.test.espresso.base.Interrogator.loopAndInterrogate(Interrogator.java:148)\r\n\tat android.support.test.espresso.base.UiControllerImpl.loopUntil(UiControllerImpl.java:465)\r\n\tat android.support.test.espresso.base.UiControllerImpl.loopUntil(UiControllerImpl.java:421)\r\n\tat android.support.test.espresso.base.UiControllerImpl.injectMotionEvent(UiControllerImpl.java:235)\r\n\tat android.support.test.espresso.action.MotionEvents.sendUp(MotionEvents.java:140)\r\n\tat android.support.test.espresso.action.MotionEvents.sendUp(MotionEvents.java:123)\r\n\tat android.support.test.espresso.action.Tap.sendSingleTap(Tap.java:170)\r\n\tat android.support.test.espresso.action.Tap.access$100(Tap.java:31)\r\n\tat android.support.test.espresso.action.Tap$1.sendTap(Tap.java:47)\r\n\tat android.support.test.espresso.action.GeneralClickAction.perform(GeneralClickAction.java:136)\r\n\tat android.support.test.espresso.ViewInteraction$SingleExecutionViewAction.perform(ViewInteraction.java:356)\r\n\tat android.support.test.espresso.ViewInteraction.doPerform(ViewInteraction.java:248)\r\n\tat android.support.test.espresso.ViewInteraction.access$100(ViewInteraction.java:63)\r\n\tat android.support.test.espresso.ViewInteraction$1.call(ViewInteraction.java:153)\r\n\tat android.support.test.espresso.ViewInteraction$1.call(ViewInteraction.java:150)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat android.os.Handler.handleCallback(Handler.java:789)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:164)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:6541)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)\r\n```\r\n\r\n### Stack trace for ButtonDrawable.Reset case\r\n\r\n```\r\nFATAL EXCEPTION: ControllerMessenger\r\nandroid.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Android.Graphics.Bitmap'.\r\n  at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <f866b6cd018644318f402b6eff2ef567>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeAbstractVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <f866b6cd018644318f402b6eff2ef567>:0 \r\n  at Android.Graphics.Bitmap.Recycle () [0x0000a] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.ButtonDrawable.Reset () [0x00008] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Xamarin.Forms.Platform.Android.ButtonDrawable.Dispose (System.Boolean disposing) [0x00013] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.ButtonBackgroundTracker.Dispose (System.Boolean disposing) [0x00015] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Xamarin.Forms.Platform.Android.ButtonBackgroundTracker.Dispose () [0x00000] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Xamarin.Forms.Platform.Android.FastRenderers.ButtonRenderer.Dispose (System.Boolean disposing) [0x00057] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].Dispose (System.Boolean disposing) [0x0007b] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.FastRenderers.FrameRenderer.Dispose (System.Boolean disposing) [0x0006d] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].Dispose (System.Boolean disposing) [0x0007b] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].Dispose (System.Boolean disposing) [0x0007b] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].Dispose (System.Boolean disposing) [0x0007b] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Xamarin.Forms.Platform.Android.PageRenderer.Dispose (System.Boolean disposing) [0x00011] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Java.Lang.Object.Dispose () [0x00000] in <a5a2b49c08aa41daafa07f33a46747ba>:0 \r\n  at Xamarin.Forms.Platform.Android.AppCompat.FragmentContainer.OnDestroyView () [0x0003c] in <fa196d4afd1b4356b38d6cf3bb1e4df8>:0 \r\n  at Android.Support.V4.App.Fragment.n_OnDestroyView (System.IntPtr jnienv, System.IntPtr native__this) [0x00008] in <575255b84b4942aa8ea338ee45ed50f6>:0 \r\n  at (wrapper dynamic-method) System.Object.5b9d693b-68e1-4728-806f-455ac3923dce(intptr,intptr)\r\n\tat md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onDestroyView(Native Method)\r\n\tat md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onDestroyView(FragmentContainer.java:41)\r\n\tat android.support.v4.app.Fragment.performDestroyView(Fragment.java:2575)\r\n\tat android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1503)\r\n\tat android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1740)\r\n\tat android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:794)\r\n\tat android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2580)\r\n\tat android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2367)\r\n\tat android.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute(FragmentManager.java:2322)\r\n\tat andr\r\n```"},{"Id":"7508766105","Type":"PullRequestEvent","CreatedAt":"2018-04-10T18:11:08","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2414","RelatedDescription":"Opened pull request \"Disable long press detection so it doesn't prevent pans in TapAndPanGestureDetector\" (#2414) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDisables long press detection in TapAndPanGestureDetector; the long press firing prevents the scroll from initiating.\r\n\r\n### Bugs Fixed ###\r\n\r\n- #2324 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7509890721","Type":"PullRequestEvent","CreatedAt":"2018-04-10T21:54:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3918","RelatedDescription":"Opened pull request \"[xharness] Fix creation of html reports for NUnit tests.\" (#3918) at xamarin/xamarin-macios","RelatedBody":"Make sure to override all required TextWriter methods so that the LogFile gets\nall the output any writers (such as the XmlWriter that is used to create the\nhtml report for NUnit tests by applying an XSLT transform to the xml results)\nwrites."},{"Id":"7509888206","Type":"PullRequestEvent","CreatedAt":"2018-04-10T21:54:18","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3917","RelatedDescription":"Opened pull request \"[xharness] Show html as html by serving the right mime type.\" (#3917) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7508935880","Type":"PullRequestEvent","CreatedAt":"2018-04-10T18:42:43","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3914","RelatedDescription":"Merged pull request \"[msbuild] Fix AOT options from IDE\" (#3914) at xamarin/xamarin-macios","RelatedBody":"- AOT options set from the IDE were not honored in msbuild and did nothing"},{"Id":"7508907260","Type":"PullRequestEvent","CreatedAt":"2018-04-10T18:37:17","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3916","RelatedDescription":"Opened pull request \"[d15-7][msbuild] Fix AOT options from IDE\" (#3916) at xamarin/xamarin-macios","RelatedBody":"- Cherry pick of https://github.com/xamarin/xamarin-macios/pull/3914"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"983738884319334400","CreatedAt":"2018-04-10T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build Xamarin.iOS from the source code in the second part of our four-part series on debugging… https://t.co/uVkITyoInQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"983374729166934016","CreatedAt":"2018-04-09T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/O4ILyulYAJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":23,"RawContent":null},{"Id":"983104477468266496","CreatedAt":"2018-04-08T22:09:07+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your Xamarin apps with Azure CosmosDB: https://t.co/acrN8gdJdS https://t.co/7dgtdHbqn9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":13,"RawContent":null},{"Id":"982728475831390208","CreatedAt":"2018-04-07T21:15:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/FGw0WVLZMU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":20,"RawContent":null},{"Id":"982351517544996870","CreatedAt":"2018-04-06T20:17:07+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/0hyFj6caS2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":27,"RawContent":null},{"Id":"982287570737315842","CreatedAt":"2018-04-06T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/jQc7aGUfzQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"981917376756232193","CreatedAt":"2018-04-05T15:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"981605676123344896","CreatedAt":"2018-04-04T18:53:25+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/eB7EyBcngh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":14,"RawContent":null},{"Id":"981383112331493377","CreatedAt":"2018-04-04T04:09:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ https://t.co/pKafHtrM4C","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":26,"RawContent":null},{"Id":"981202163941761024","CreatedAt":"2018-04-03T16:10:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to merge multiple resource dictionaries in the most recent stable release of #XamarinForms for even great… https://t.co/Kg5Dh5x1pO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":22,"RawContent":null},{"Id":"980881805221007371","CreatedAt":"2018-04-02T18:57:00+00:00","UserScreenname":"xamarinhq","Text":"Jump into #Xamarin with an event near you this April: https://t.co/Tg8HHIbUDA https://t.co/OJW7RynVmV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"980838018474020864","CreatedAt":"2018-04-02T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/gY8s2v6cYg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":18,"RawContent":null},{"Id":"980547128639541254","CreatedAt":"2018-04-01T20:47:07+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/y4p0bmVENZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":19,"RawContent":null},{"Id":"979799673417424907","CreatedAt":"2018-03-30T19:17:00+00:00","UserScreenname":"xamarinhq","Text":"The #XamarinForms 3.0 pre-release is now available! Download and get started today: https://t.co/oMrz45f2XW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":151,"FavoriteCount":109,"RawContent":null},{"Id":"979752111947722753","CreatedAt":"2018-03-30T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/cS0ZDvkieM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":28,"RawContent":null},{"Id":"979078173127331841","CreatedAt":"2018-03-28T19:30:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/2os3iP5NYD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":85,"FavoriteCount":31,"RawContent":null},{"Id":"979020041961328647","CreatedAt":"2018-03-28T15:39:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/ytWxQJabcG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-04-11T05:30:39.7219293Z","RunDurationInMilliseconds":3936}