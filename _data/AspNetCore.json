{"Data":{"Blog":{"FeedItems":[{"Title":"Publish Improvements in Visual Studio 2017 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including:...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7556763071","Type":"IssuesEvent","CreatedAt":"2018-04-19T16:36:40","Actor":"rr222cy","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3076","RelatedDescription":"Opened issue \"Cannot access a disposed object - DI Service Provider\" (#3076) at aspnet/Home","RelatedBody":"Hi all!\r\n\r\nI've just started moving a application from ASP.NET Core 2.0, to Core 2.1. Everything went smooth and is working fine, except a quite important function that I had to disable for now to make the app run.\r\n\r\nI use SignalR in this project, and have implemented a HeartBeat method, to keep the connection alive (running the app behind IIS). The solution I have implemented is following this thread on StackOverflow: https://stackoverflow.com/questions/47208844/net-core-signalr-connection-timeout-heartbeat-timer-connection-state-chan\r\n\r\nThis has been working great when running the app on .NET Core 2.0.x, but now throws the following error:\r\n```\r\nSystem.ObjectDisposedException\r\n  HResult=0x80131622\r\n  Message=Cannot access a disposed object.\r\n  Source=Microsoft.Extensions.DependencyInjection\r\n  StackTrace:\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ThrowHelper.ThrowObjectDisposedException()\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at WebApplication.Startup.<>c__DisplayClass5_0.<<Configure>b__3>d.MoveNext() in C:\\Users\\MyPath\\DotNetCoreTest2\\Startup.cs:line 160\r\n```\r\nThe part of the code throwing this error is as described above, the HeartBeat method, that looks like this\r\n\r\n```\r\nTimerCallback SignalRHeartBeat = async (x) => {   \r\n    await serviceProvider.GetService<IHubContext<TheHubClass>>().Clients.All.InvokeAsync(\"Heartbeat\", DateTime.Now); };\r\n    var timer = new Timer(SignalRHeartBeat).Change(TimeSpan.FromSeconds(0), TimeSpan.FromSeconds(30));\r\n```\r\nAnd is placed in Startup.cs under the `Configure()` method, The `serviceProvider` is injected with DI using `IServiceProvider serviceProvider` like this `public void Configure(IApplicationBuilder app, IHostingEnvironment env, IServiceProvider serviceProvider)`\r\n\r\nHas something changed in .NET Core 2.1 causing this?"},{"Id":"7554176660","Type":"IssuesEvent","CreatedAt":"2018-04-19T09:01:35","Actor":"chassq","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3075","RelatedDescription":"Closed issue \"ConfigurationChangeTokenSource missing from 2.1 preview 2?\" (#3075) at aspnet/Home","RelatedBody":"Cannot seem to locate ConfigurationChangeTokenSource in Microsoft.Extensions.Options? Has it been relocated perhaps?\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.options.configurationchangetokensource-1.-ctor?view=aspnetcore-2.0&viewFallbackFrom=aspnetcore-2.1](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.options.configurationchangetokensource-1.-ctor?view=aspnetcore-2.0&viewFallbackFrom=aspnetcore-2.1)\r\n\r\n"},{"Id":"7554112939","Type":"IssuesEvent","CreatedAt":"2018-04-19T08:50:03","Actor":"chassq","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3075","RelatedDescription":"Opened issue \"ConfigurationChangeTokenSource missing from 2.1 preview 2?\" (#3075) at aspnet/Home","RelatedBody":"Cannot seem to locate ConfigurationChangeTokenSource in Microsoft.Extensions.Options? Has it been relocated perhaps?\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.options.configurationchangetokensource-1.-ctor?view=aspnetcore-2.0&viewFallbackFrom=aspnetcore-2.1](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.options.configurationchangetokensource-1.-ctor?view=aspnetcore-2.0&viewFallbackFrom=aspnetcore-2.1)\r\n\r\n"},{"Id":"7552053306","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:19:40","Actor":"mikeharder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3062","RelatedDescription":"Closed issue \"AutobahnTester should use dynamic port \"0\" with Kestrel\" (#3062) at aspnet/Home","RelatedBody":"Changes should be made to `AutobahnTester` and/or `SelfHostDeployer` to use dynamic port \"0\" for `ServerType.Kestrel`.  Currently, it uses the less-reliable `GetNextPort()` method.\r\n\r\nThis is somewhat complicated since `AutobahnTester` requires HTTPS, which is currently only supported in `SelfHostDeployer` when `DeploymentParameters.ApplicationBaseUriHint` is set, but dynamic port \"0\" is only used when `ApplicationBaseUriHint` is **not** set.  So, there are two options (in my order of preference):\r\n\r\n1. Add an `Ssl` parameter to `DeploymentParameters`, then change `AutobahnTester` to set `DeploymentParameters.Ssl` instead of `DeploymentParameters.ApplicationBaseUriHint`.  This will use dynamic port \"0\" for ServerType.Kestrel (both HTTP and HTTPS), and `GetNextPort()` for ServerType.WebListener (since dynamic port \"0\" is not supported).\r\n\r\n2. Change `SelfHostDeployer` to use dynamic port \"0\" when `ApplicationBaseUriHint` is set to either \"127.0.0.1:0\" or \"[::1]:0\".  Dynamic port \"0\" is not supported on other hostnames which try to bind both IPv4 and IPv6, like \"localhost\".  Then change `AutobahnTester` to use \"http[s]://127.0.0.1:0\" instead of \"http[s]://localhost:0\".\r\n\r\nhttps://github.com/aspnet/WebSockets/blob/612db427725b3bdac3d6851288c93051bfe69621/test/Microsoft.AspNetCore.WebSockets.ConformanceTest/Autobahn/AutobahnTester.cs#L132\r\n\r\nRelated: https://github.com/aspnet/Hosting/issues/1296"},{"Id":"7552044084","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:17:11","Actor":"mikeharder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3074","RelatedDescription":"Opened issue \"WebSockets AutobahnTester frequently fails in Travis\" (#3074) at aspnet/Home","RelatedBody":"```\r\n$ ./build/setup-wstest.sh\r\n/opt/pyenv/shims/python\r\nPython 2.7.6\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   122  100   122    0     0   9013      0 --:--:-- --:--:-- --:--:--  9384\r\ntar: This does not look like a tar archive\r\ngzip: stdin: not in gzip format\r\ntar: Child returned status 1\r\ntar: Error is not recoverable: exiting now\r\npython: can't open file './.python/virtualenv-15.1.0/virtualenv.py': [Errno 2] No such file or directory\r\n./build/setup-wstest.sh: line 22: .virtualenv/bin/python: No such file or directory\r\n```\r\n\r\nhttps://travis-ci.org/aspnet/WebSockets/jobs/368372668\r\n"},{"Id":"7551732067","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:06:10","Actor":"mikeharder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3063","RelatedDescription":"Closed issue \"StaticFileMiddlewareTests should use dynamic ports\" (#3063) at aspnet/Home","RelatedBody":"`StaticFileMiddlewareTests` should use dynamic ports rather than hardcoding port `12345`.  For `ServerType.Kestrel`, the app should bind to dynamic port \"0\" and query the app to find the assigned port, since this is 100% reliable.  For `ServerType.WebListener`, the app should use `GetNextPort()` which is less reliable than directly binding to \"0\", but should be more reliable than a hardcoded port.\r\n\r\nhttps://github.com/aspnet/StaticFiles/blob/5d2b1000f19dc3e892611f387b46cd519976a9f0/test/Microsoft.AspNetCore.StaticFiles.FunctionalTests/StaticFileMiddlewareTests.cs#L181"},{"Id":"7551407893","Type":"IssuesEvent","CreatedAt":"2018-04-18T20:02:14","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/2537","RelatedDescription":"Reopened issue \"Support GetFileInfo for directories\" (#2537) at aspnet/Home","RelatedBody":"_From @stilettk on Friday, November 3, 2017 2:56:28 AM_\r\n\r\nCurrently `GetFileInfo` supports only files: when called on a path that points to a directory it returns `PhysicalFileInfo` which has `IsDirectory == false`. \r\n\r\nSo, when given a path, how to decide what to do: to call `GetFileInfo` (if it's a file) or call `GetDirectoryContents` (if it's a folder)? Currently the only way I found isn't very intuitive:\r\n`bool isDirectory = fileProvider.GetDirectoryContents(myPath).Exists`\r\n\r\nMy suggestion:\r\n`new PhysicalFileProvider(myPath).GetFileInfo(\"data\")` \r\nExpected:\r\n`PhysicalDirectoryInfo`\r\nActual:\r\n`PhysicalFileInfo`\r\n\r\n_Copied from original issue: aspnet/FileSystem#298_"},{"Id":"7550646369","Type":"IssuesEvent","CreatedAt":"2018-04-18T17:34:13","Actor":"ssougnez","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3072","RelatedDescription":"Opened issue \"ASP.NET Core Runtime extensions not in 2.1.0-preview2 on Azure\" (#3072) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nwhen 2.1.0-preview1 has been officially released, it also has been announced that it was possible to use it via the site extensions. I followed the article \"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/\" and it worked.\r\n\r\nI just tried it for preview2, however, the extension \"ASP.NET Core Runtime Extensions\" are still in preview1 version (while \"ASP.NET Core Runtime\" is in preview2).\r\n\r\nIs it normal? If so, when is \"preview2\" supposed to be available on Azure ?"},{"Id":"7550184401","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:08:19","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3066","RelatedDescription":"Closed issue \"DataProtectionProvider.Create() throws an exception during certificate protected key encryption when Fips is enabled\" (#3066) at aspnet/Home","RelatedBody":"### Title\r\nDataProtectionProvider.Create() throws an exception during certificate protected key encryption when Fips is enabled.\r\n\r\n### Functional impact\r\nShared cookie authentication does not work on systems with Fips enabled\r\n\r\n### Minimal repro steps\r\n1. Enable Fips compliant algorithms on the system running the MVC app\r\n2. Download and compile the following MVC solution at https://github.com/bszarko/Study/\r\n3. Deploy to IIS 7.5\r\n4. Import Dev.SharedCookieTest.Cert02.pfx into cert store localmachine, my\r\n5. Give AppPool identity permissions to the certificate's private key\r\n6. Open a desktop browser and navigate to the application\r\n\r\n### Expected result\r\nA key should be generated and encrypted (protected by certificate) using a Fips compliant algorithm. \r\n\r\n### Actual result\r\nException\r\n\"This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms\"\r\n\r\n### Further technical details\r\nWhens Fips is disabled this setup works but throws an exception when Fips is enabled.\r\n\r\n// Test project\r\nhttps://github.com/bszarko/Study/\r\n\r\nTests:\r\nOS: Windows & & Windows 2008 R2 SP1\r\nIIS 7.5.7600, AppPool using a Service Account\r\nFrameworks: 4.6.1, 4.6.2, 4.7.1, netstandard 2.0\r\nVisual Studio 2015 Enterprise & Visual Studio 2017 Community\r\n\r\nI also tried adding crypto mappings to the machine.config in hopes that something other than RijndaelManaged was used.\r\n\r\n\"This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms\"\r\n\r\n[InvalidOperationException: This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms.]\r\n   System.Security.Cryptography.RijndaelManaged..ctor() +5256144\r\n   System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement inputElement, X509Certificate2 certificate) +477\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Microsoft.AspNetCore.DataProtection.XmlEncryption.IInternalCertificateXmlEncryptor.PerformEncryption(EncryptedXml encryptedXml, XmlElement elementToEncrypt) +200\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.EncryptElement(XElement plaintextElement) +394\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Encrypt(XElement plaintextElement) +47\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element) +407\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate) +1402\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate) +136\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded) +599\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now) +12\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow) +513\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) +84\r\n\r\n[CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.]\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) +821\r\n   Microsoft.Owin.Security.DataHandler.SecureDataFormat`1.Protect(TData data) +92\r\n   Microsoft.Owin.Security.Cookies.<ApplyResponseGrantAsync>d__b.MoveNext() +1334\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<ApplyResponseCoreAsync>d__b.MoveNext() +218\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<ApplyResponseAsync>d__8.MoveNext() +475\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<TeardownAsync>d__5.MoveNext() +215\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<Invoke>d__0.MoveNext() +968\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.<RunApp>d__5.MoveNext() +194\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.<DoFinalWork>d__2.MoveNext() +184\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.StageAsyncResult.End(IAsyncResult ar) +117\r\n   System.Web.AsyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +365\r\n   System.Web.HttpApplication.ExecuteStepImpl(IExecutionStep step) +195\r\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +128\r\n\r\nOwin Startup\r\n\r\npublic void ConfigureAuth(IAppBuilder app)\r\n\t\t{\r\n\t\t\t// these don't seem to change the behavior\r\n\t\t\tif (CryptoConfig.AllowOnlyFipsAlgorithms)\r\n\t\t\t{\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(AesCryptoServiceProvider),\r\n\t\t\t\t\t\"AES\",\r\n\t\t\t\t\t\"AesCryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.AesCryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.AES\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(SHA256CryptoServiceProvider),\r\n\t\t\t\t\t\"SHA256\",\r\n\t\t\t\t\t\"SHA256CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA256CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA256\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(SHA256CryptoServiceProvider),\r\n\t\t\t\t\t\"SHA512\",\r\n\t\t\t\t\t\"SHA512CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA512CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA512\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tvar encryptionSettings = new AuthenticatedEncryptorConfiguration()\r\n\t\t\t{\r\n\t\t\t\tEncryptionAlgorithm = EncryptionAlgorithm.AES_256_CBC,\r\n\t\t\t\tValidationAlgorithm = ValidationAlgorithm.HMACSHA256\r\n\t\t\t};\r\n\r\n\t\t\t// apply AppPool identity or service account permissions to registry path\r\n\t\t\tvar regPath = @\"SOFTWARE\\SharedCookieTest\\Keys\";\r\n\t\t\tRegistry.LocalMachine.CreateSubKey(regPath, true);\r\n\r\n\t\t\t/*\r\n\t\t\t * Certificate Thumbprints\r\n\t\t\t * 6bee3f190055703c0dcd01e7c433462069549762 - dev.sharedcookietest.cert02\r\n\t\t\t * d74e3a5413047996a10bda4661d296ca7f741ff8 - Dev.SharedCookieTest.Cert01\r\n\t\t\t*/\r\n\r\n\t\t\tvar store = new X509Store(StoreName.My, StoreLocation.LocalMachine);\r\n\t\t\tstore.Open(OpenFlags.OpenExistingOnly);\r\n\t\t\tvar cert = store.Certificates\r\n\t\t\t\t.OfType<X509Certificate2>()\r\n\t\t\t\t.FirstOrDefault(c => c.Thumbprint.Equals(\"6bee3f190055703c0dcd01e7c433462069549762\", StringComparison.CurrentCultureIgnoreCase));\r\n\r\n\t\t\tvar protectionProvider = DataProtectionProvider.Create(\r\n\t\t\t\tnew DirectoryInfo($@\"{HostingEnvironment.MapPath(\"~\")}\\keys\"),\r\n\t\t\t\toptions =>\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\t\t\t\t\toptions.UseCryptographicAlgorithms(encryptionSettings);\r\n\r\n\t\t\t\t\t//options.UseCustomCryptographicAlgorithms(\r\n\t\t\t\t\t//\tnew CngCbcAuthenticatedEncryptorConfiguration()\r\n\t\t\t\t\t//\t{\r\n\t\t\t\t\t//\t\tEncryptionAlgorithm = \"AES\",\r\n\t\t\t\t\t//\t\t//EncryptionAlgorithmProvider = WhatShouldThisBe?,//\"Advanced Encryption Standard\",//\"ECDiffieHellmanCng\",//\"BCryptCloseAlgorithmProvider\",//\"MS_ENH_RSA_AES_PROV\",\r\n\t\t\t\t\t//\t\tEncryptionAlgorithmKeySize = 256,\r\n\t\t\t\t\t//\t\tHashAlgorithm = \"SHA256\"\r\n\t\t\t\t\t//\t\t//HashAlgorithmProvider = WhatShouldThisBe?//null//\"SHA256CryptoServiceProvider\"//\"Microsoft Enhanced RSA and AES Cryptographic Provider\"\r\n\t\t\t\t\t//\t});\r\n\r\n\t\t\t\t\toptions.PersistKeysToRegistry(Registry.LocalMachine.OpenSubKey(regPath, true));\r\n\t\t\t\t\toptions.ProtectKeysWithCertificate(cert);\r\n\t\t\t\t});\r\n\r\n\t\t\tvar dataProtector = protectionProvider.CreateProtector(\r\n\t\t\t\t\"CookieAuthenticationMiddleware\",\r\n\t\t\t\t\"Cookie\",\r\n\t\t\t\t\"v2\");\r\n\r\n\t\t\t// Enable the application to use a cookie to store information for the signed in user\r\n\t\t\t// and to use a cookie to temporarily store information about a user logging in with a third party login provider\r\n\t\t\t// Configure the sign in cookie\r\n\t\t\tapp.UseCookieAuthentication(new CookieAuthenticationOptions\r\n\t\t\t{\r\n\t\t\t\tTicketDataFormat = new AspNetTicketDataFormat(new DataProtectorShim(dataProtector)),\r\n\t\t\t\tAuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,\r\n\t\t\t\tAuthenticationMode = Microsoft.Owin.Security.AuthenticationMode.Active,\r\n\t\t\t\tCookieDomain = \"localhost\",\r\n\t\t\t\tCookieName = \".AspNet.SharedCookie\",\r\n\t\t\t\tCookiePath = \"/\",\r\n\t\t\t\tCookieSecure = CookieSecureOption.SameAsRequest\r\n\t\t\t});\r\n\t\t}"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7559364681","Type":"PullRequestEvent","CreatedAt":"2018-04-20T03:30:30","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2106","RelatedDescription":"Opened pull request \"[WIP] Initial XML documentation-ing\" (#2106) at aspnet/SignalR","RelatedBody":"Proofread my dyslexic documentation."},{"Id":"7559259597","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:53:20","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2105","RelatedDescription":"Opened pull request \"privatize IConnection and HttpConnection\" (#2105) at aspnet/SignalR","RelatedBody":"Makes HttpConnection private. We're not able to get the API into the shape we want and it's only necessary for accessing ConnectionHandlers directly, so we'll make it private until we can tidy up the API."},{"Id":"7559150287","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:14:40","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2099","RelatedDescription":"Merged pull request \"fix #2097 by adding GetHttpContext to HubConnectionContext\" (#2099) at aspnet/SignalR","RelatedBody":"Also added some tests for `IUserIdProvider` that were missing, see comments inline."},{"Id":"7558781720","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:59:21","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2084","RelatedDescription":"Closed issue \"A client can easily overwhelm the servers memory by constantly sending to a broadcast hub method\" (#2084) at aspnet/SignalR","RelatedBody":"We currently fire-and-forget hub invocations\r\nhttps://github.com/aspnet/SignalR/blob/9a0c190f487b9f48eaaa83fb4f3c1675ee21bdc0/src/Microsoft.AspNetCore.SignalR.Core/HubConnectionHandler.cs#L187\r\nThis can cause high lock contention and quickly grow the servers memory when many invocations are trying to write to the same connection. A quick test where we await the invocations shows stable low memory without affecting RPS in the load test that found this.\r\n\r\n**Server Hub**\r\n\r\n```c#\r\npublic class BroadcastHub : Hub\r\n{\r\n    public Task Broadcast(string message)\r\n    {\r\n        return Clients.All.SendAsync(message);\r\n    }\r\n}\r\n```\r\n\r\n**Client**\r\n\r\n```c#\r\nwhile (true)\r\n{\r\n    hubConnection.SendAsync(\"Broadcast\", \"flood server\");\r\n}\r\n```"},{"Id":"7558781116","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:59:07","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2086","RelatedDescription":"Merged pull request \"Run hub invocations serially\" (#2086) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/2084"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7559533501","Type":"IssuesEvent","CreatedAt":"2018-04-20T04:38:14","Actor":"pthorsley","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7691","RelatedDescription":"Opened issue \"Controller Generator Failure\" (#7691) at aspnet/Mvc","RelatedBody":"Getting this error when trying to create a new controller of any type (mvc or api).\r\n\r\n\"There was an error running the selected code generator:\r\n'There was an error running the template C:\\Users\\<username>\\.nuget\\packages\\microsoft.visualstudio.web.codegenerators.mvc\\2.1.0-preview2-final\\Templates\\ControllerGenerator\\ApiEmptyController.cshtml: Template Processing Failed:(4,47): error CS0234: The type or namespace name 'Hosting' does not exist in the namespace 'Microsoft.AspNetCore.Razor' ( are you missing an assembly reference?) \r\n(10,41): error CS0234: The Type or namespace 'Hosting' does not exist in the namespace 'Microsoft.AspNetCore.Razor' ( are you missing an assembly reference?)' \r\n\r\nI have two projects in this solution:\r\n1. Project One is a .Net Core React project based on Core not .Net Framework.\r\n2. Project Two is a .Net Core Class Library project based on Core that controls the data access. \r\n\r\nHEY HAVE FOUND WORK AROUND BY CHANGING LIBRARIES!!!!!\r\n\r\nSo I went to project two and went back a version these two libraries:\r\nMicrosoft.VisualStudio.Web.CodeGeneration.Design   Now: 2.0.2   Was: 2.1.0-preview2-final\r\nMicrosoft.EntityFrameworkCore.Tools  Now: 2.0.2  Was: 2.1.0-preview2-final\r\n\r\nFixed for now, "},{"Id":"7558750022","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:47:56","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7690","RelatedDescription":"Opened pull request \"Added nuspec file to Mvc.Analyzers assembly\" (#7690) at aspnet/Mvc","RelatedBody":"Part of aspnet/Universe#1083"},{"Id":"7558710325","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:34:07","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7689","RelatedDescription":"Opened pull request \"Introduce BindPropertiesAttribute\" (#7689) at aspnet/Mvc","RelatedBody":"* Allow controller and Razor Page models to be annotated with BindPropertiesAttribute\r\n* Disallow BindPropertyAttribute from being declared on types.\r\n* Do not allow arbitrary binding attributes to be applied to Razor Page models.\r\n\r\nFixes #7686"},{"Id":"7558506605","Type":"IssuesEvent","CreatedAt":"2018-04-19T22:31:09","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7688","RelatedDescription":"Opened issue \"BindPropertyAttribute.SupportsGet should work on HEAD requests when fuzzy matching is enabled\" (#7688) at aspnet/Mvc","RelatedBody":"As part of https://github.com/aspnet/Mvc/pull/7510, we made page selectors support HEAD requests when a GET request appears. However, `BindPropertyAttribute.SupportsGet` continues to be limited to HEAD requests. "},{"Id":"7558299938","Type":"IssuesEvent","CreatedAt":"2018-04-19T21:40:06","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7634","RelatedDescription":"Closed issue \"WebApplicationTestFixture missing  when preview1 => preview2\" (#7634) at aspnet/Mvc","RelatedBody":"after updating to preview2  I now get type or namespace not found `WebApplicationTestFixture` Has it been moved, renamed or deprecated?\r\n"},{"Id":"7558283028","Type":"IssuesEvent","CreatedAt":"2018-04-19T21:36:19","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7687","RelatedDescription":"Closed issue \"IgnoreAntiforgeryToken does not work with RazorPages\" (#7687) at aspnet/Mvc","RelatedBody":"Found this while investigating an issue where I had to test if `BindRequired` works on PageModels.\r\n\r\nI have the following:\r\n```c#\r\n[IgnoreAntiforgeryToken]\r\npublic class TestModel : PageModel\r\n{\r\n    [BindProperty]\r\n    [BindRequired]\r\n    public string Name { get; set; }\r\n\r\n    public IActionResult OnPost()\r\n    {\r\n        if (!ModelState.IsValid)\r\n        {\r\n            return new JsonResult(ModelState);\r\n        }\r\n\r\n        return Page();\r\n    }\r\n}\r\n```\r\nMy idea was to use Fiddler to do a post to the above action to see if _not_ having `Name` in the posted data would trigger the `BindRequired` logic, but when I do this, I still see Antiforgery check happening. Its expected that the `IgnoreAntiforgeryToken` filter's policy the nearest policy to the method/action and so is effective, which happens in MVC but not here.\r\n\r\nSome interesting things I found while investigating this:\r\n1. `AutoValidateAntiforgeryPageApplicationModelProvider` (which adds the `AutoValidateAntiforgeryTokenAttribute` filter) runs after `DefaultPageApplicationModelProvider`(which adds the `IgnoreAntiforgeryTokenAttribute` filter). Both these filters have the same order 1000.\r\n2. The following code categorizes both the above filters's scope as `Action` (ideally the `AutoValidateAntiforgeryTokenAttribute` filter should be scoped to `Global`)\r\n```C#\r\npublic static CompiledPageActionDescriptor Build(\r\n    PageApplicationModel applicationModel,\r\n    FilterCollection globalFilters)\r\n{\r\n    var boundProperties = CreateBoundProperties(applicationModel);\r\n    var filters = Enumerable.Concat(\r\n            globalFilters.Select(f => new FilterDescriptor(f, FilterScope.Global)),\r\n            applicationModel.Filters.Select(f => new FilterDescriptor(f, FilterScope.Action)))\r\n        .ToArray();\r\n    var handlerMethods = CreateHandlerMethods(applicationModel);\r\n```\r\n\r\nI believe users in general would like to disable antiforgery token validation when they use Bearer tokens (in header) as antiforgery check is not required."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7558288911","Type":"IssuesEvent","CreatedAt":"2018-04-19T21:37:36","Actor":"benrhere","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1757","RelatedDescription":"Closed issue \"ASP.NET Identity Core 2.0: Custom usermanager causing problems with security stamp?\" (#1757) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI'm generating custom claims with the following method:\r\n\r\n        protected override async Task<ClaimsIdentity> GenerateClaimsAsync(TUser user)\r\n        {\r\n            var id = await base.GenerateClaimsAsync(user);\r\n            var myOrgs = user.OrganizationMemberships;\r\n            var myAdminOrgs = myOrgs?.Where(om => om.Role == Data.Enums.OrganizationMembershipRole.Admin || om.Role == Data.Enums.OrganizationMembershipRole.SecondaryAdmin).Select(org=>org.Id).ToList();\r\n            var myPlayerOrgs = myOrgs?.Where(om => om.Role == Data.Enums.OrganizationMembershipRole.Athlete || om.Role == Data.Enums.OrganizationMembershipRole.Admin || om.Role == Data.Enums.OrganizationMembershipRole.SecondaryAdmin).Select(org=>org.Id).ToList();\r\n            if (myAdminOrgs!= null && myAdminOrgs.Count > 0)\r\n            {\r\n                var adminOrgStrings = String.Join(\",\", myAdminOrgs);\r\n                id.AddClaim(new Claim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgAdmin, adminOrgStrings));\r\n            }\r\n            if (myPlayerOrgs != null && myPlayerOrgs.Count > 0)\r\n            {\r\n                var playerOrgStrings = String.Join(\",\", myPlayerOrgs);\r\n                id.AddClaim(new Claim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgMember, playerOrgStrings));\r\n            }\r\n            return id;\r\n        }\r\n\r\nThe important thing to note is that I'm referencing a table related to the users table, so I need to explicitly load it. To achieve that, I've created a custom UserManager which pulls the additional needed data:\r\n\r\npublic class MyDotNetCoreAppUserManager : UserManager<MyDotNetCoreAppUser>\r\n    {\r\n\r\n        public MyDotNetCoreAppUserManager(IUserStore<MyDotNetCoreAppUser> store, IOptions<IdentityOptions> optionsAccessor,\r\n        IPasswordHasher<MyDotNetCoreAppUser> passwordHasher, IEnumerable<IUserValidator<MyDotNetCoreAppUser>> userValidators,\r\n        IEnumerable<IPasswordValidator<MyDotNetCoreAppUser>> passwordValidators, ILookupNormalizer keyNormalizer,\r\n        IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<MyDotNetCoreAppUser>> logger)\r\n        : base(store,optionsAccessor,passwordHasher,userValidators,passwordValidators,keyNormalizer,errors,services,logger)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Gets all users\r\n        /// </summary>\r\n        /// <param name=\"includes\">Optional parameter for eager loading related entities</param>\r\n        /// <returns>An list of users</returns>\r\n        public async Task<MyDotNetCoreAppUser> GetAll(string userName, params string[] includes)\r\n        {\r\n\r\n            // Get our User DbSet\r\n            var users = base.Users.Where(u=>u.UserName == userName);\r\n\r\n            // For each include, include in the query\r\n            foreach (var include in includes)\r\n                users = users.Include(include);\r\n\r\n            // Return our result\r\n            return await users.FirstOrDefaultAsync();\r\n        }\r\n\r\n\r\n        //This is called on initial login and is necessary to pull additional related user data\r\n        //used in claim generation. But overriding this causes sescurity stamp validation to fail!\r\n        public override Task<MyDotNetCoreAppUser> FindByNameAsync(string userName)\r\n        {\r\n            var fetchTask = GetAll(userName, \"OrganizationMemberships\");\r\n            return fetchTask;\r\n        }\r\n\r\n        //When it's time to validate the security stamp, a call is made into here for some reason.\r\n        //If I comment this override out, it successfully regenerates claims, and\r\n        //regenerates a login cookie (and I stay logged in)\r\n        //but the claims generation misses the needed related data.\r\n        //But if I enable this override, it just logs the user out after calling into here. (Doesn't\r\n        //fire GenerateClaimsAsync)\r\n        public override Task<MyDotNetCoreAppUser> FindByIdAsync(string userId)\r\n        {\r\n            return GetAll(userId, \"OrganizationMemberships\");\r\n        }\r\n    }\r\n\r\nBut please see above comments in this code. The problem is that after 30 minutes, when it's time to revalidate the security stamp and the user refreshes, one of two things happens:\r\n\r\n-If I do NOT override FindByIdAsync, it somewhat works, meaning the user stays logged in and claims are generated - however, the user object passed ot GenerateClaimsAsync does NOT contain the required OrganizationMemberships property populated.\r\n-If I DO override FindByIdAsync, I hit that breakpoint when I refresh the page after the security stamp timeout expires. However, after I continue, I don't hit the ClaimsGeneration method. Instead, I'm logged out and redirected to the login page.\r\n\r\nAlso maybe relevant:\r\n\r\n           services.AddIdentity<MyDotNetCoreAppUser, MyDotNetCoreAppRole>(opt =>\r\n            {\r\n                opt.Password.RequireNonAlphanumeric = false;\r\n                opt.Password.RequireUppercase = false;\r\n            })\r\n                .AddEntityFrameworkStores<MyDotNetCoreAppDbContext>()\r\n                .AddUserManager<MyDotNetCoreAppUserManager>()\r\n                .AddSignInManager<MyDotNetCoreAppSignInManager>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthorization(opt =>\r\n            {\r\n                opt.AddPolicy(\"OrgAdmin\", policy => policy.RequireClaim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgAdmin));\r\n                opt.AddPolicy(\"OrgMember\", policy => policy.RequireClaim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgMember));\r\n            });\r\n            services.Configure<SecurityStampValidatorOptions>(options =>\r\n            {\r\n                // enables immediate logout, after updating the user's stat.\r\n                options.ValidationInterval = TimeSpan.FromSeconds(6);\r\n            });\r\n\r\n(I set the validation interval to 6 seconds to be able to debug the security stamp validation more easily.)\r\n\r\nAppreciative of any thoughts on this. Thanks..."},{"Id":"7557466990","Type":"IssuesEvent","CreatedAt":"2018-04-19T18:51:22","Actor":"ngohungphuc","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1764","RelatedDescription":"Opened issue \"LockoutEnabled not enable after fail login attempt\" (#1764) at aspnet/Identity","RelatedBody":"I have turn on user login attempt in controller\r\n```cs\r\n  var result = await _signInManager.PasswordSignInAsync(model.Username, model.Password,model.RememberMe, true);\r\n```\r\n\r\nStartup\r\n```cs\r\n services\r\n                .AddIdentity<User, ApplicationRole>(options =>\r\n                {\r\n                    options.Password.RequireDigit = false;\r\n                    options.Password.RequiredLength = 4;\r\n                    options.Password.RequireLowercase = false;\r\n                    options.Password.RequireNonAlphanumeric = false;\r\n                    options.Password.RequireUppercase = false;\r\n\r\n                    //lock out attempt\r\n                    options.Lockout.AllowedForNewUsers = true;\r\n                    options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(30);\r\n                    options.Lockout.MaxFailedAccessAttempts = 2;\r\n                 })\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n```\r\n\r\nBut when user login fail only the LockoutEnd have data. The LockoutEnabled column is always false so user can keep login back again. Any idea about this. Thank you"},{"Id":"7556975739","Type":"PullRequestEvent","CreatedAt":"2018-04-19T17:17:29","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1761","RelatedDescription":"Merged pull request \"Fix build break\" (#1761) at aspnet/Identity","RelatedBody":"* Use Razor.Sdk package to not perform runtime compilation\r\n* Use Mvc with PageResult fix (https://github.com/aspnet/Mvc/issues/7665)"},{"Id":"7553229172","Type":"IssuesEvent","CreatedAt":"2018-04-19T05:07:07","Actor":"p2atran","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1763","RelatedDescription":"Opened issue \"UserManager.FindByNameAsync doesn't get roles [QUESTION]\" (#1763) at aspnet/Identity","RelatedBody":"I recently just migrated my .NET Core 1.1.4 app over to .NET Core 2. Everything builds and compiles, but my identity stuff are all messed up. When I do a call to `UserManage.FindByNameAsync(email)`, The correct user is found. However, his role count is 0.\r\n\r\nI read somewhere that Net Core 2 no longer eager/lazy loads. I'm still new to .NET Core environment and have been put in the deep end. How would I work around this to get the UserManager to work again? It used to work fine in .NET Core 1.1"},{"Id":"7551065521","Type":"IssuesEvent","CreatedAt":"2018-04-18T18:53:55","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1762","RelatedDescription":"Opened issue \"External login provider is not accessible when using global authorize filter\" (#1762) at aspnet/Identity","RelatedBody":"When an external login provider is configured, and a global authorize filter is applied, clicking the button to navigate to the provider (say Twitter sign in) redirects back to the current Login page.\r\n\r\nTo allow anonymous users to log in to an external provider while using a global authorize filter, the user can scaffold the `ExternalLogin.cshtml.cs` page and add the `AllowAnonymous` attribute to the `ExternalLoginModel`.\r\n\r\nPlease note, a corresponding change must also be made in aspnet/Scaffolding repo."},{"Id":"7550341310","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:36:14","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1746","RelatedDescription":"Closed issue \"loop to change user\" (#1746) at aspnet/Identity","RelatedBody":"foreach (var item in list)\r\n            {\r\n                var model = new {headimgurl = \"\", nickname = \"\"};\r\n                item.WxAvatar = model.headimgurl;\r\n                item.WxName = model.nickname;\r\n                await userManager.UpdateAsync(item);\r\n            }\r\n\r\nSystem.InvalidOperationException: Invalid operation. The connection is closed.\r\n"},{"Id":"7545824261","Type":"IssuesEvent","CreatedAt":"2018-04-17T23:22:03","Actor":"mkArtakMSFT","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1737","RelatedDescription":"Closed issue \"[Preview2-Validation] Pages under Account/Manage loose the 'Title' information from ViewData\" (#1737) at aspnet/Identity","RelatedBody":"For example, when we go to `Manage` page, we should see the title of the html page to be like `Profile - <application-name>` but we only get ` - <application-name>`.\r\n\r\n@pranavkm and I debugged through this and think that the cause of this issue could be with how Identity UI uses a model type(abstract) on the view versus the actual type(implementation). Following line of code is a suspect:\r\nhttps://github.com/aspnet/Mvc/commit/7127bb5dbbb07eb325a2852ac9a91be0cf443205#diff-0901f55a5e636aeef89b9663dafcb625R171"},{"Id":"7545562789","Type":"PullRequestEvent","CreatedAt":"2018-04-17T22:07:24","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1761","RelatedDescription":"Opened pull request \"Fix build break\" (#1761) at aspnet/Identity","RelatedBody":"* Use Razor.Sdk package to not perform runtime compilation\r\n* Use Mvc with PageResult fix (https://github.com/aspnet/Mvc/issues/7665)"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7558889800","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:39:28","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2507","RelatedDescription":"Opened issue \"Flaky Test: ResponseTests.Sending100ContinueDoesNotStartResponse\" (#2507) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7552430386","Type":"PullRequestEvent","CreatedAt":"2018-04-19T00:14:53","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2505","RelatedDescription":"Merged pull request \"Enable xUnit diagnostic messages\" (#2505) at aspnet/KestrelHttpServer","RelatedBody":"- Required to log long-running tests\r\n- Will help investigate https://github.com/aspnet/KestrelHttpServer/issues/2503\r\n"},{"Id":"7552423445","Type":"IssuesEvent","CreatedAt":"2018-04-19T00:12:25","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2506","RelatedDescription":"Opened issue \"Test failures on Ubuntu Jenkins\" (#2506) at aspnet/KestrelHttpServer","RelatedBody":"Several tests failed on a recent Ubuntu Jenkins run.  I'm not sure if they're flaky or fail consistently on Jenkins.\r\n\r\n# RegisterAddresses_HostName_Success\r\n```\r\n16:54:35    [xUnit.net 00:00:03.7981166]     RegisterAddresses_HostName_Success [FAIL]\r\n16:54:35    Failed   RegisterAddresses_HostName_Success\r\n16:54:35  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:54:35     System.Net.Sockets.SocketException : No such device or address\r\n16:54:35    Stack Trace:\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetSocket(Uri requestUri)\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStream(Uri requestUri, Boolean validateCertificate)\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(Uri requestUri, Boolean validateCertificate)\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(String requestUri, Boolean validateCertificate)\r\n16:54:35       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.RegisterAddresses_Success(String addressInput, String[] testUrls, Int32 testPort) in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 170\r\n16:54:35       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.RegisterAddresses_HostName_Success() in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 39\r\n16:54:35    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n# ListenAnyIP_HostName_Success\r\n```\r\n16:54:37    [xUnit.net 00:00:05.9554544]     ListenAnyIP_HostName_Success [FAIL]\r\n16:54:37    Log Critical[0]: Unable to start Kestrel. System.IO.IOException: Failed to bind to address http://[::1]:46742: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use ---> System.Net.Sockets.SocketException: Address already in use\r\n16:54:37       at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n16:54:37       at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n16:54:37       at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 93\r\n16:54:37       --- End of inner exception stack trace ---\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 97\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext() in /_/src/Kestrel.Core/KestrelServer.cs:line 155\r\n16:54:37    --- End of stack trace from previous location where exception was thrown ---\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 104\r\n16:54:37       --- End of inner exception stack trace ---\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 108\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/ListenOptions.cs:line 190\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n16:54:37    Failed   ListenAnyIP_HostName_Success\r\n16:54:37  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:54:37     System.Net.Sockets.SocketException : No such device or address\r\n16:54:37    Stack Trace:\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetSocket(Uri requestUri)\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStream(Uri requestUri, Boolean validateCertificate)\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(Uri requestUri, Boolean validateCertificate)\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(String requestUri, Boolean validateCertificate)\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.ListenAnyIP_Success(String[] testUrls, Int32 testPort) in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 326\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.ListenAnyIP_HostName_Success() in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 307\r\n16:54:37    --- End of stack trace from previous location where exception was thrown ---\r\n16:54:37    Log Critical[0]: Unable to start Kestrel. System.InvalidOperationException: Dynamic port binding is not supported when binding to localhost. You must either bind to 127.0.0.1:0 or [::1]:0, or both.\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions..ctor(Int32 port) in /_/src/Kestrel.Core/LocalhostListenOptions.cs:line 22\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 141\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n```\r\n\r\n# Sending100ContinueDoesNotStartResponse\r\n```\r\n16:54:41    [xUnit.net 00:00:09.3892916]     Sending100ContinueDoesNotStartResponse [FAIL]\r\n16:54:42    Failed   Sending100ContinueDoesNotStartResponse\r\n16:54:42  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:54:42     Assert.Contains() Failure\r\n16:54:42    Not found: (filter expression)\r\n16:54:42    In value:  ConcurrentQueue<LogMessage> [LogMessage { EventId = 3, Exception = null, LogLevel = Debug, Message = \"Hosting starting\" }, LogMessage { EventId = 4, Exception = null, LogLevel = Debug, Message = \"Hosting started\" }, LogMessage { EventId = 0, Exception = null, LogLevel = Debug, Message = \"Loaded hosting startup assembly Sockets.Functional\"... }, LogMessage { EventId = ConnectionStart, Exception = null, LogLevel = Debug, Message = \"Connection id \\\"0HLD5GUTSSB33\\\" started.\" }, LogMessage { EventId = 1, Exception = null, LogLevel = Information, Message = \"Request starting HTTP/1.1 POST http:///  \" }, ...]\r\n16:54:42    Stack Trace:\r\n16:54:42       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.Sending100ContinueDoesNotStartResponse() in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 1685\r\n16:54:42    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n# UpgradedConnectionsCountsAgainstDifferentLimit\r\n```\r\n16:57:17    [xUnit.net 00:00:04.4029017]     UpgradedConnectionsCountsAgainstDifferentLimit [FAIL]\r\n16:57:17    Failed   UpgradedConnectionsCountsAgainstDifferentLimit\r\n16:57:17  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:57:17     System.IO.IOException : Expected connection close, received data instead: \"HTTP/1.1 200 OK\r\n16:57:17    Date: Wed, 18 Apr 2018 23:57:14 GMT\r\n16:57:17    Content-Length: 0\r\n16:57:17    \r\n16:57:17    \"\r\n16:57:17    Stack Trace:\r\n16:57:17       at Microsoft.AspNetCore.Testing.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout, String filePath, Int32 lineNumber)\r\n16:57:17       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ConnectionLimitTests.UpgradedConnectionsCountsAgainstDifferentLimit() in /_/test/Kestrel.FunctionalTests/ConnectionLimitTests.cs:line 89\r\n16:57:17    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n# UsesProvidedServerCertificateSelectorEachTime \r\n```\r\n16:57:17    [xUnit.net 00:00:04.4106802]     UsesProvidedServerCertificateSelectorEachTime [FAIL]\r\n16:57:17    Failed   UsesProvidedServerCertificateSelectorEachTime\r\n16:57:17  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:57:17     System.IO.IOException : Unable to read data from the transport connection: Invalid argument.\r\n16:57:17    ---- System.Net.Sockets.SocketException : Invalid argument\r\n16:57:17    Stack Trace:\r\n16:57:17       at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\r\n16:57:17       at System.Net.Security.SslState.ThrowIfExceptional()\r\n16:57:17       at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n16:57:17       at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n16:57:17       at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n16:57:17       at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__46_2(IAsyncResult iar)\r\n16:57:17       at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n16:57:17    --- End of stack trace from previous location where exception was thrown ---\r\n16:57:17       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.HttpsConnectionAdapterTests.UsesProvidedServerCertificateSelectorEachTime() in /_/test/Kestrel.FunctionalTests/HttpsConnectionAdapterTests.cs:line 229\r\n16:57:17    --- End of stack trace from previous location where exception was thrown ---\r\n16:57:17    ----- Inner Stack Trace -----\r\n```\r\n\r\n# AcceptsRequestWithNoContentLengthAndUpgrade \r\n```\r\n16:58:34    [xUnit.net 00:01:14.3683030]     AcceptsRequestWithNoContentLengthAndUpgrade [FAIL]\r\n16:58:34    Failed   AcceptsRequestWithNoContentLengthAndUpgrade\r\n16:58:34  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:58:34     System.TimeoutException : The operation at /_/test/shared/TestConnection.cs:129 timed out after reaching the limit of 60000ms.\r\n16:58:34    Stack Trace:\r\n16:58:34       at Microsoft.AspNetCore.Testing.TaskExtensions.TimeoutAfter[T](Task`1 task, TimeSpan timeout, String filePath, Int32 lineNumber)\r\n16:58:34       at Microsoft.AspNetCore.Testing.TestConnection.Receive(String[] lines) in /_/test/shared/TestConnection.cs:line 131\r\n16:58:34       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.UpgradeTests.AcceptsRequestWithNoContentLengthAndUpgrade() in /_/test/Kestrel.FunctionalTests/UpgradeTests.cs:line 190\r\n16:58:34    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nhttps://ci3.dot.net/job/aspnet_KestrelHttpServer/job/dev/job/linux-Configuration_Release_prtest/111/timestamps/?time=HH:mm:ss&appendLog&locale=en_US"},{"Id":"7552345468","Type":"PullRequestEvent","CreatedAt":"2018-04-18T23:46:11","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2505","RelatedDescription":"Opened pull request \"Enable xUnit diagnostic messages\" (#2505) at aspnet/KestrelHttpServer","RelatedBody":"- Required to log long-running tests"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7558867355","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:30:59","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2290","RelatedDescription":"Opened issue \"Build server pid files should be properly cleaned up when the process is killed on Unix\" (#2290) at aspnet/Razor","RelatedBody":"More context here https://github.com/aspnet/Razor/pull/2285#discussion_r182893605"},{"Id":"7558124074","Type":"IssuesEvent","CreatedAt":"2018-04-19T21:02:08","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2280","RelatedDescription":"Reopened issue \".Net Core 2.0 mvc.razor.viewcompilation.rsp build exception MSB3073 exited with code -2147450751\" (#2280) at aspnet/Razor","RelatedBody":"_From @DenisKot on April 15, 2018 17:46_\n\nBuild solution fails with strange error:\r\n\r\n> Error\tMSB3073\tThe command \"\"dotnet\" exec --runtimeconfig \"F:\\TrackTubeNew\\Src\\TreckTube\\bin\\Debug\\netcoreapp2.0\\TreckTube.Web.runtimeconfig.json\" --depsfile \"F:\\TrackTubeNew\\Src\\TreckTube\\bin\\Debug\\netcoreapp2.0\\TreckTube.Web.deps.json\" \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.dll\" @\"obj\\Debug\\netcoreapp2.0\\microsoft.aspnetcore.mvc.razor.viewcompilation.rsp\"\" exited with code -2147450751.\tTreckTube.Web\tC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.targets\t60\t\r\n\r\nIf double click on error VS opens up file:\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.targets\r\n\r\nAt line:\r\n`<Exec Command=\"$(ExecArgs)\" WorkingDirectory=\"$(MSBuildProjectDirectory)\" />`\r\n\r\nTo fix it I've tried to update .net core libraries from version 2.0.0. to 2.0.6, have been update visual studio 2017 to 17.6.6, even revret my changes but nothing is helping.\r\n\r\nHow to fix it?\n\n_Copied from original issue: dotnet/corefx#29125_"},{"Id":"7552098119","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:31:49","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2248","RelatedDescription":"Closed issue \"Build server should write the process and pipe information to a file\" (#2248) at aspnet/Razor","RelatedBody":"This makes it easier to discover all the running build servers which is needed for implementing the `dotnet buildserver shutdown` command. "},{"Id":"7551969326","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:58:23","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2035","RelatedDescription":"Closed issue \"VS code block indent lines off by one character\" (#2035) at aspnet/Razor","RelatedBody":"Not sure if this should be opened here or on the VS feedback tracker, let me know.\r\n\r\nI'm on the latest version of everything, so VS 15.5.6, ASP.NET Core 2.0, .NET Core SDK 2.1.4. This has been a problem for months now, I don't remember exactly when it started and I couldn't find another issue here when I searched. Most indent lines in VS Razor views are off by one character, but not all of them.\r\n\r\n`if` is off by one, but the `else` is correct.\r\n![image](https://user-images.githubusercontent.com/771134/35974790-741e1e7e-0ca8-11e8-9c4f-2a37630f6b9f.png)\r\n\r\nBoth `foreach` and `for` are off.\r\n![image](https://user-images.githubusercontent.com/771134/35975161-bce116b0-0ca9-11e8-9929-6b486af3f147.png)\r\n\r\n`do`/`while` is off.\r\n![image](https://user-images.githubusercontent.com/771134/35975250-0e5d819a-0caa-11e8-8bce-adb6947b4925.png)"},{"Id":"7551796124","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:19:28","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2282","RelatedDescription":"Closed issue \"Update Razor runtime package references to Microsoft.CodeAnalysis and Microsoft.CodeAnalysis.CSharp\" (#2282) at aspnet/Razor","RelatedBody":"Right now we're referencing 2.6.1, which means that runtime compilation won't work at all with C# 7.2 or 7.3 unless the user takes steps to get newer packages."},{"Id":"7551779811","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:15:56","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2243","RelatedDescription":"Closed issue \"Razor SDK switch issues\" (#2243) at aspnet/Razor","RelatedBody":"<EnableDefaultContentItems>false</EnableDefaultContentItems> doesn't seem to work on netcoreapp projects.\r\n\r\n1. Clone ryanbrandenburg/RazorPageLibrary\r\n2. Add `<EnableDefaultContentItems>false</EnableDefaultContentItems>` to App.csproj's propertyGroup\r\n3. Build and run the app in VS and find that it still found the views."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":239,"FavoriteCount":143,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2018-04-20T05:30:12.9605643Z","RunDurationInMilliseconds":8170}