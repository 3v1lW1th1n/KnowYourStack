{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10838599442","Type":"PullRequestEvent","CreatedAt":"2019-11-12T01:41:02","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7693","RelatedDescription":"Opened pull request \"Allow to specify KeyVault cert store and location.\" (#7693) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/1912.\r\n\r\nAdded two new optional configuration settings:\r\n* KeyVault.StoreName\r\n* KeyVault.StoreLocation\r\n\r\nAllows to override the default LocalMachine/My store for keyvault cert."},{"Id":"10838498289","Type":"PullRequestEvent","CreatedAt":"2019-11-12T01:17:56","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7692","RelatedDescription":"Opened pull request \"Allow admins to see users' MFA setting on profile page\" (#7692) at NuGet/NuGetGallery","RelatedBody":"As requested by @karann-msft \r\n\r\n![image](https://user-images.githubusercontent.com/18014088/68633547-211fc080-04a7-11ea-96e9-74703a3c29ce.png)\r\n"},{"Id":"10838465350","Type":"PullRequestEvent","CreatedAt":"2019-11-12T01:10:26","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7691","RelatedDescription":"Opened pull request \"Newly pushed packages that are vulnerable should be marked vulnerable on upload/push (to DEV)\" (#7691) at NuGet/NuGetGallery","RelatedBody":"Accidentally merged https://github.com/NuGet/NuGetGallery/pull/7679 to master, so need to pull it into dev...woops!"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10839428648","Type":"IssuesEvent","CreatedAt":"2019-11-12T05:02:06","Actor":"goyzhang","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8808","RelatedDescription":"Opened issue \"Add \"latest\" option for -MSBuildVersion \" (#8808) at NuGet/Home","RelatedBody":"Currently we can only specify the version in order to use this argument like:\r\n> nuget restore a.sln -MSBuildVersion 16.3\r\n\r\n**Why?**\r\nIt should be the latest by default. However, in some cases the PATH value overwrites this behaviour. e.g. if we have MSbuild14 in the PATH. There is currently no way to specify using the latest version of MSBuild. Is it possible to add this feature to `-MSBuildVersion` ?"},{"Id":"10839280652","Type":"IssuesEvent","CreatedAt":"2019-11-12T04:23:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8801","RelatedDescription":"Closed issue \"Insertion of NuGet 5.4.0-preview5.6292\" (#8801) at NuGet/Home","RelatedBody":"VS:\r\n * [x] https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/213197\r\n\r\n.NET Core\r\n* [x] CLI https://github.com/dotnet/cli/pull/13042\r\n* [x] SDK https://github.com/dotnet/sdk/pull/3883\r\n* [x] Toolset https://github.com/dotnet/toolset/pull/3512\r\n"},{"Id":"10838186789","Type":"IssuesEvent","CreatedAt":"2019-11-12T00:06:26","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8807","RelatedDescription":"Opened issue \"Enable a test when cross platform is implemented \" (#8807) at NuGet/Home","RelatedBody":"The existing test ExecuteCommandAsync_WithMultiplePackagesAndInvalidCertificate_RaisesErrorsOnceAsync is enabled cross platform before. It's disabled as the test will call Signing APIs  which is not yet implemented.\r\n\r\nWe should enable this test cross platform when signing APIs are enabled cross platform."},{"Id":"10838078160","Type":"IssuesEvent","CreatedAt":"2019-11-11T23:42:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8720","RelatedDescription":"Closed issue \"Release notes for 5.3.1 when published\" (#8720) at NuGet/Home","RelatedBody":"fyi @karann-msft @rrelyea "},{"Id":"10838029585","Type":"IssuesEvent","CreatedAt":"2019-11-11T23:31:43","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8806","RelatedDescription":"Opened issue \"Backward slash no longer works for PackagePath Ubuntu\" (#8806) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\nAfter updating to 3.0.100, we get this in the [CI]. It is fine on mac and Windows (https://dev.azure.com/dnceng/public/_build/results?buildId=422893)\r\n\r\n```\r\n/usr/share/dotnet/sdk/3.0.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(198,5): error NU5129: - At least one .targets file was found in 'build/netstandard2.0//', but 'build/netstandard2.0/System.CommandLine.DragonFruit.targets' was not. [/home/vsts/work/1/s/src/System.CommandLine.DragonFruit/System.CommandLine.DragonFruit.csproj]\r\n/usr/share/dotnet/sdk/3.0.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(198,5): error NU5129: - At least one .props file was found in 'build/netstandard2.0//', but 'build/netstandard2.0/System.CommandLine.DragonFruit.props' was not. [/home/vsts/work/1/s/src/System.CommandLine.DragonFruit/System.CommandLine.DragonFruit.csproj]\r\n/usr/share/dotnet/sdk/3.0.100/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(198,5): error NU5129:  [/home/vsts/work/1/s/src/System.CommandLine.DragonFruit/System.CommandLine.DragonFruit.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nAnd [this ](https://github.com/dotnet/command-line-api/pull/680/files) fixed it. Looks like PackagePath no longer tolerate backward slash on ubuntu\r\n\r\n## Details about Problem\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\n"},{"Id":"10837812689","Type":"IssuesEvent","CreatedAt":"2019-11-11T22:49:50","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8733","RelatedDescription":"Closed issue \"protocol diagnostics: http instrumentation\" (#8733) at NuGet/Home","RelatedBody":""},{"Id":"10837162555","Type":"IssuesEvent","CreatedAt":"2019-11-11T21:06:44","Actor":"scalablecory","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8805","RelatedDescription":"Opened issue \"error : Unable to load the service index for source https://api.nuget.org/v3/index.json.\" (#8805) at NuGet/Home","RelatedBody":"_From @Meai1 on Saturday, October 26, 2019 9:54:55 AM_\r\n\r\n```\r\npc@debian:~/test/blazor-samples/samples/aspnetcore/blazor/FlightFinder$ dotnet build ./FlightFinder.sln\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/home/pc/workarea/software/dotnet/sdk/3.0.100/NuGet.targets(123,5): error : Unable to load the service index for source https://api.nuget.org/v3/index.json. [/home/pc/test/blazor-samples/samples/aspnetcore/blazor/FlightFinder/FlightFinder.sln]\r\n/home/pc/workarea/software/dotnet/sdk/3.0.100/NuGet.targets(123,5): error :   The SSL connection could not be established, see inner exception. [/home/pc/test/blazor-samples/samples/aspnetcore/blazor/FlightFinder/FlightFinder.sln]\r\n/home/pc/workarea/software/dotnet/sdk/3.0.100/NuGet.targets(123,5): error :   The remote certificate is invalid according to the validation procedure. [/home/pc/test/blazor-samples/samples/aspnetcore/blazor/FlightFinder/FlightFinder.sln]\r\n\r\nBuild FAILED.\r\n\r\n```\r\n\r\nBtw this happens for every project, I just used the sample project for illustration. And for some reason it works if I do the build via Jetbrains Rider IDE.\r\nBefore you point me to links like this: https://stackoverflow.com/questions/41185443/nuget-connection-attempt-failed-unable-to-load-the-service-index-for-source ...\r\nPlease notice that I consider this a bug whether there is a manual workaround or not because I can access that given url in the browser perfectly fine. If it works from the browser, it has to work from inside dotnet executables too. This should not be up to me to solve.\r\n\r\n_Copied from original issue: dotnet/core#3701_"},{"Id":"10836722768","Type":"IssuesEvent","CreatedAt":"2019-11-11T20:02:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7062","RelatedDescription":"Closed issue \".Netstandard lib is not added as a reference to the project? Not sure why?\" (#7062) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWhen add my package, my .netstandard lib is not added as a reference to the project? Not sure why?\r\nMy package is: Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4\r\n\r\nNuget Package Manager 4.6.0\r\nVisual Studio 15.7.4\r\nWindows 10 Pro\r\n\r\nWorked before? Not that I'm aware of\r\n\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create new .net 4.6.1 class library project. \r\n\r\n1.5. You must save the project first.\r\n\r\n2. Use Nuget manager to add package \"Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4\"\r\n\r\n...\r\n\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nCould not get \"Verbosity\" working, could not find docs on proper usage.\r\n\r\nAttempting to gather dependency information for package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4' with respect to project 'ClassLibrary1', targeting '.NETFramework,Version=v4.6.1'\r\nGathering dependency information took 382.8 ms\r\nAttempting to resolve dependencies for package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4' with DependencyBehavior 'Lowest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4'\r\nResolved actions to install package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4'\r\nRetrieving package 'Symbiotic_Micro_ORM_Net_Standard_x64 2.0.4' from 'nuget.org'.\r\nRetrieving package 'System.Data.Common 4.3.0' from 'nuget.org'.\r\nAdding package 'System.Data.Common.4.3.0' to folder 'C:\\Users\\eric.Schneider\\source\\repos\\ClassLibrary1\\packages'\r\nAdded package 'System.Data.Common.4.3.0' to folder 'C:\\Users\\eric.Schneider\\source\\repos\\ClassLibrary1\\packages'\r\nAdded package 'System.Data.Common.4.3.0' to 'packages.config'\r\nSuccessfully installed 'System.Data.Common 4.3.0' to ClassLibrary1\r\nAdding package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4' to folder 'C:\\Users\\eric.Schneider\\source\\repos\\ClassLibrary1\\packages'\r\nAdded package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4' to folder 'C:\\Users\\eric.Schneider\\source\\repos\\ClassLibrary1\\packages'\r\nAdded package 'Symbiotic_Micro_ORM_Net_Standard_x64.2.0.4' to 'packages.config'\r\nSuccessfully installed 'Symbiotic_Micro_ORM_Net_Standard_x64 2.0.4' to ClassLibrary1\r\nExecuting nuget actions took 3.61 sec\r\nTime Elapsed: 00:00:04.2011994\r\n========== Finished ==========\r\n\r\n\r\n\r\n"},{"Id":"10836702441","Type":"IssuesEvent","CreatedAt":"2019-11-11T19:59:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7354","RelatedDescription":"Closed issue \"VS Package Manager does not request credentials if feed responds with HTTP 401\" (#7354) at NuGet/Home","RelatedBody":"VS: 15.6.3\r\nNuGet package manager: 4.6.0\r\nOS version: win10 v1803\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Add private nuget feed, fill in credentials and enable \"Remember password\" option\r\n2. Change user password for stored credentials\r\n3. Browse packages from private nuget feed\r\n\r\n### Actual Result:\r\nPackage manager writes in the console:\r\n```\r\nFailed to retrieve metadata from source 'http://host/httpAuth/app/nuget/feed/_Root/default/v3/query?q=&skip=0&take=26&prerelease=false&semVerLevel=2.0.0'.\r\n  Response status code does not indicate success: 401 ().\r\n```\r\n\r\n### Expected result\r\n\r\nVS shows credentials prompt the same as in the step 1.\r\n\r\n## Consequences\r\n\r\nSince VS Package manager requests to feed very often it could cause lock out of user accounts."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"},{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-11-12T05:30:43.9744972Z","RunDurationInMilliseconds":2319}