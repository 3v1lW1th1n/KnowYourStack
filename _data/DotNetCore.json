{"Data":{"Blog":{"FeedItems":[{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7348129190","Type":"PullRequestEvent","CreatedAt":"2018-03-08T04:32:12","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16821","RelatedDescription":"Merged pull request \"Update BuildTools, CoreFx to preview2-02607-03, preview2-26308-02, respectively (master)\" (#16821) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7348066709","Type":"PullRequestEvent","CreatedAt":"2018-03-08T04:06:38","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16831","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#16831) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7347783887","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:21:23","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16829","RelatedDescription":"Opened pull request \"RemoveRelativeSegments moved from path to pathinternal\" (#16829) at dotnet/coreclr","RelatedBody":"We are moving this in order to be able to write tests for this function. I tested it using these tests\r\n\r\nGetFullPathTest PR  - https://github.com/dotnet/corefx/pull/27085\r\nCommon Test PR - https://github.com/dotnet/corefx/pull/27844\r\n"},{"Id":"7347768260","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:18:11","Actor":"mmitche","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16828","RelatedDescription":"Opened pull request \"Workaround coreclr issue\" (#16828) at dotnet/coreclr","RelatedBody":"VSTS does not seem to be correctly honoring the working directory for batch script steps.  Explicitly qualify the setup_vs_env.cmd path"},{"Id":"7347762779","Type":"IssuesEvent","CreatedAt":"2018-03-08T03:17:39","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16462","RelatedDescription":"Closed issue \"dotnet core application aborts without exceptions\" (#16462) at dotnet/coreclr","RelatedBody":"@pavlexander commented on [Wed Feb 14 2018](https://github.com/dotnet/core/issues/1268)\n\n# Issue Title\r\n\r\n.net core 2 console application stops execution and quits without providing any kind of exception messages, except short notice \"**Aborted**\"\r\n\r\n# General\r\n\r\nThe issue is only reproducible on Linux, but not Windows.\r\n\r\nSystem:\r\n\r\n- Linux: **Debian 9, x64 bits**\r\n- dotnet --version: **2.1.3**\r\n- compiled on Windows 10 x64 with command: **dotnet publish -c release -r debian-x64**\r\n- thread on [StackoverFlow ](https://stackoverflow.com/questions/48773208/json-deserialization-causes-dotnet-core-application-to-abort-no-exceptions-are/48790722#48790722)\r\n- bug report on [git](https://github.com/sonvister/Binance/issues/60)\r\n\r\n# Description\r\n\r\nDuring the deserialization (or initialization) of objects of a certain type - application crashes on Linux environment immediately.\r\n\r\nA sample code for issue reproduction is:\r\n\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n     var symbol = Symbol.ONE;\r\n     // if real library is used then Symbol.BNB_BTC or (Symbol)\"BNBBTC\" will do\r\n}\r\n```\r\n\r\nThe `Symbol` class is implemented with a type-safe Enum pattern:\r\n\r\n```\r\npublic sealed class Symbol\r\n{\r\n    public static readonly Symbol ONE = new Symbol(new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit });\r\n    public static readonly Symbol TWO = new Symbol(new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit });\r\n    public static readonly Symbol THREE = new Symbol(new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit });\r\n    // 264 such lines in total\r\n\r\n    public Symbol(IEnumerable<OrderType> orderTypes)\r\n    {\r\n\r\n    }\r\n}\r\n```\r\nIn the example above, upon initialization of `Symbol` type object - application would abort at rate 1/5 (or more often/rarely):\r\n\r\n# Testing\r\n\r\n> while sleep 0.5 ; do dotnet ConsoleApp1.dll ; done\r\n\r\nThe linux command will execute dotnet application once in half-a-second time. Therefore, if at least one \"Aborted\" is printed within 20 second interval - you can consider the test as not passed.\r\n\r\n# Fix\r\n\r\nI was able to come up with a temporary solution which seems to be working at the moment.\r\n\r\nIf we change an anonymous type of object in constructor parameter list to `List` - then that will work nicely.\r\n\r\nInstead of this:\r\n\r\n`new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit }`\r\n\r\nuse this:\r\n\r\n`new List<OrderType> { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit }`\r\n\r\nAlso, it was confirmed, that `OrderType[]` type of object yields absolutely the same result as `new[]`\r\nAlso, it was confirmed (on my machine), that if the number of static properties is halved, then the issue is gone, therefore, for better effect - test the solution when more than 200 `Symbol`s are defined in `Symbol` class.\r\n\r\n# Steps to reproduce\r\n\r\nThe easiest steps to reproduce the issue is to:\r\n1. Download the same library as I did [here](https://github.com/sonvister/Binance).\r\n2. Change the source for the `Symbol` class, so that anonymous object is used (author recently applied a fix, per my request)\r\n3. add new console application (see description section)\r\n4. compile and then run on Linux (see testing section)\r\n\r\nIf you see the \"Aborted\" message after some time, then that's the issue.\r\n\r\n# Suggested fix\r\n\r\nI would appreciate to \r\n1. see some kind of exception message when such errors are thrown\r\n2. issue to be fixed\r\n\r\nRest is up to you. Good luck.\n\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7348263164","Type":"PullRequestEvent","CreatedAt":"2018-03-08T05:28:00","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8736","RelatedDescription":"Merged pull request \"Updating the dotnet --info message.\" (#8736) at dotnet/cli","RelatedBody":"Fixes https://github.com/dotnet/cli/issues/8669\r\n\r\ncc @KathleenDollard @steveharter "},{"Id":"7348263162","Type":"IssuesEvent","CreatedAt":"2018-03-08T05:27:59","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8669","RelatedDescription":"Closed issue \"Improve --info output\" (#8669) at dotnet/cli","RelatedBody":"This is for the CLI side of issue: https://github.com/dotnet/core-setup/issues/3502\r\n\r\nWe'd like to get these changes into 2.1.\r\n\r\nCurrent:\r\n```\r\n.NET Command Line Tools (2.1.300-preview2-008210)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview2-008210\r\n Commit SHA-1 hash:  f6065dcc62\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008210\\\r\n```\r\nProposed (per Kathleen)\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n  Version: 2.1.300-preview2-008210\r\n  Commit:  f6065dcc62\r\n\r\nRuntime environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008210\\\r\n```\r\n\r\ncc @KathleenDollard @livarcocc "},{"Id":"7348014493","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:50:48","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8739","RelatedDescription":"Merged pull request \"when process has not env, but future will, show the instruction\" (#8739) at dotnet/cli","RelatedBody":"The detection of needing to reopen CMD windows is wrong. Corrected it. I hope the if else is self explanatory \r\n\r\nSince it is windows env. It is hard to test. Test by hand\r\n\r\n![image](https://user-images.githubusercontent.com/6993335/37126453-00bec346-2226-11e8-85d5-54c565f37e41.png)\r\n\r\nfix https://github.com/dotnet/cli/issues/8368\r\n"},{"Id":"7348001947","Type":"IssuesEvent","CreatedAt":"2018-03-08T03:49:23","Actor":"richlander","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8741","RelatedDescription":"Opened issue \"File-in-use issues with .NET Core 2.1 Preview 2\" (#8741) at dotnet/cli","RelatedBody":"I am running into file-in-use issues with .NET Core 2.1 Preview 2. The following is just one example. Didn't see this with preview 1.\r\n\r\nC:\\git\\dotnet-docker\\samples\\dotnetapp\\dotnetapp>dotnet run\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008308\\NuGet.targets(114,5): error : Access to the path 'C:\\git\\dotnet-docker\\samples\\dotnetapp\\utils\\obj\\project.assets.json' is denied. [C:\\git\\dotnet-docker\\samples\\dotnetapp\\dotnetapp\\dotnetapp.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n"},{"Id":"7347951717","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:43:55","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8731","RelatedDescription":"Merged pull request \"Update CoreSetup to preview2-26306-04 (master)\" (#8731) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7347821960","Type":"IssuesEvent","CreatedAt":"2018-03-08T03:29:27","Actor":"richlander","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8740","RelatedDescription":"Opened issue \"dotnet watch test doesn't work on .NET Core 2.1 preview 2\" (#8740) at dotnet/cli","RelatedBody":"`dotnet watch test` doesn't restart upon file changes. `dotnet watch run` works as expected."},{"Id":"7347443319","Type":"PullRequestEvent","CreatedAt":"2018-03-08T01:21:25","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8739","RelatedDescription":"Opened pull request \"when process has not env, but future will, show the instruction\" (#8739) at dotnet/cli","RelatedBody":"The detection of needing to reopen CMD windows is wrong. Corrected it. I hope the if else is self explanatory \r\n\r\nSince it is windows env. It is hard to test. Test by hand\r\n\r\n![image](https://user-images.githubusercontent.com/6993335/37126453-00bec346-2226-11e8-85d5-54c565f37e41.png)\r\n\r\nfix https://github.com/dotnet/cli/issues/8368\r\n"},{"Id":"7347356940","Type":"IssuesEvent","CreatedAt":"2018-03-08T00:42:31","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8738","RelatedDescription":"Opened issue \"dotnet-install.sh fails to install SDK on Alpine Linux\" (#8738) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-runtime-deps-alpine\r\nWORKDIR /code/build\r\n\r\nRUN apk add --no-cache \\\r\n        bash \\\r\n        wget \\\r\n        curl \\\r\n        icu-libs \\\r\n        openssl\r\n\r\nRUN wget https://raw.githubusercontent.com/dotnet/cli/release/2.1.3xx/scripts/obtain/dotnet-install.sh \\\r\n    && chmod +x dotnet-install.sh \\\r\n    && ./dotnet-install.sh --version 2.1.300-preview2-008251\r\n```\r\n\r\n`docker build . -t test`\r\n\r\n## Expected  behavior\r\nDownload and extract https://dotnetcli.blob.core.windows.net/dotnet/Sdk/2.1.300-preview2-008251/dotnet-sdk-2.1.300-preview2-008251-alpine.3.6-x64.tar.gz\r\n\r\n## Actual behavior\r\n```\r\n# ./dotnet-install.sh --version 2.1.300-preview2-008251\r\ndotnet_install: Error: Unable to locate libunwind. Install libunwind to continue\r\ndotnet_install: Error: Unable to locate libssl. Install libssl to continue\r\ndotnet_install: Error: Unable to locate libicu. Install libicu to continue\r\ndotnet_install: Error: Unable to locate libcurl. Install libcurl to continue\r\n```\r\n\r\nYou can disable pre-req check..\r\n```\r\nexport DOTNET_INSTALL_SKIP_PREREQS=1\r\n```\r\nbut then this fails because `cp -n` is not supported in Alpine\r\n```\r\ncp: unrecognized option: n\r\n```"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7339905933","Type":"IssuesEvent","CreatedAt":"2018-03-06T19:47:00","Actor":"molinch","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/668","RelatedDescription":"Opened issue \"Adding .NET Standard 2 dll breaks build\" (#668) at dotnet/standard","RelatedBody":"Hi all,\r\n\r\nI know there are a couple of already opened issues with a similar topic, but in my case it looks slightly different. The issue is with a web application.\r\n\r\nI have some projects that use Microsoft.CodeAnalysis.CSharp.Scripting and Ben.Demystify.\r\nSince they need a different System.IO. I ended up with binding redirects, so I use System.IO 4.1.1.0.\r\nThis used to work great, and System.IO used to be copied automatically to the web application bin/ folder. The System.IO comes from the nuget package.\r\n\r\nNow I just added to another project the package SixLabors.ImageSharp, it references .NET Standard 2, 1.3 and 1. For that project System.IO comes from C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib\\System.IO.dll\r\nThe issue is that System.IO and some other dlls are no longer copied to the web application bin/ folder. Because of that the app fails to run, it requires System.IO 4.1.1.0 to be there in the bin\\ since I have a binding redirect for it.\r\n\r\nIt seems somehow related to: https://github.com/dotnet/corefx/issues/25773#issuecomment-350000563\r\n\r\nDo you have any work around?\r\n\r\n"},{"Id":"7339806877","Type":"IssuesEvent","CreatedAt":"2018-03-06T19:27:58","Actor":"JBildstein","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/666","RelatedDescription":"Closed issue \"netstandard.xml is malformed\" (#666) at dotnet/standard","RelatedBody":"I'm trying to do some analysis of xml comments in C# code with roslyn and this works all fine until I try to get a comment from a framework type.\r\n\r\nAfter some searching I found that the netstandard.xml file is malformed and trying to parse it with XElement.Parse throws an exception.\r\nFor example, the first occurrence is at line 652:\r\n```\r\n<returns><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\"><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">A signed integer that indicates the relative values of <code data-dev-comment-type=\"paramref\">a</code> and <code data-dev-comment-type=\"paramref\">b</code>, as shown in the following table.  </p>\r\n <table><thead><tr><th> Value  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\"> </th><th> Meaning  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"6\"> </th></tr></thead><tbody><tr><td> Less than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is less than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\"> </td></tr><tr><td> Zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> equals <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\"> </td></tr><tr><td> Greater than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is greater than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"> </td></tr></tbody></table></p>\r\n</returns>\r\n```\r\nand it looks like all of the errors are related to elements containing \"netstandard.yml\"\r\n\r\nAlso, for some reason the root node is \"span\" and not \"doc\" as usual. i.e.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><span>\r\n<doc>\r\n...\r\n</doc></span>\r\n```\r\nOnce I fixed those errors by removing them in my local copy, I am able to retrieve the xml comments with roslyn.\r\n\r\nI checked NETStandard.Library version 2.0.0 and 2.0.1 from nuget."},{"Id":"7339400219","Type":"IssuesEvent","CreatedAt":"2018-03-06T18:09:24","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/665","RelatedDescription":"Closed issue \"Build Failure: Official master builds failing due to duplicate refName IDs\" (#665) at dotnet/standard","RelatedBody":"These need to be either unique, or removed (so that VSTS can generate them):\r\n\r\nhttps://github.com/dotnet/standard/blob/9675a2eea8d55756780c8e6f4a3215c932a23e63/buildpipeline/dotnet-standard-win.json#L102\r\n\r\nhttps://github.com/dotnet/standard/blob/9675a2eea8d55756780c8e6f4a3215c932a23e63/buildpipeline/dotnet-standard-win.json#L123\r\n\r\n/cc @weshaggard "},{"Id":"7339305157","Type":"IssuesEvent","CreatedAt":"2018-03-06T17:51:28","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/667","RelatedDescription":"Opened issue \"Root package was specified but was not found in PackageDependencies\" (#667) at dotnet/standard","RelatedBody":"I have this in `Common.props` which is imported into the top of most of the csprojs:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"SourceLink.Embed.AllSourceFiles\" Version=\"2.7.4\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n```\r\n\r\nThe csproj has `<TrimUnusedDependencies>true</TrimUnusedDependencies>` and `<PackageReference Include=\"Microsoft.Packaging.Tools.Trimming\" Version=\"1.1.0-preview1-25818-01\" />`.\r\n\r\nThe build fails:\r\n\r\n> Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: The \"TrimFiles\" task failed unexpectedly.\r\n> System.Exception: Root package SourceLink.Embed.AllSourceFiles was specified but was not found in PackageDependencies\r\n>    at Microsoft.DotNet.Build.Tasks.TrimFiles.GetPackageRoots(IDictionary`2 packages, Trimmable trimmable)\r\n>    at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute()\r\n>    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n>    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nIs this expected to work?"},{"Id":"7339177599","Type":"IssuesEvent","CreatedAt":"2018-03-06T17:27:47","Actor":"JBildstein","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/666","RelatedDescription":"Opened issue \"netstandard.xml is malformed\" (#666) at dotnet/standard","RelatedBody":"I'm trying to do some analysis of xml comments in C# code with roslyn and this works all fine until I try to get a comment from a framework type.\r\n\r\nAfter some searching I found that the netstandard.xml file is malformed and trying to parse it with XElement.Parse throws an exception.\r\nFor example, the first occurrence is at line 652:\r\n```\r\n<returns><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\"><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">A signed integer that indicates the relative values of <code data-dev-comment-type=\"paramref\">a</code> and <code data-dev-comment-type=\"paramref\">b</code>, as shown in the following table.  </p>\r\n <table><thead><tr><th> Value  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\"> </th><th> Meaning  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"6\"> </th></tr></thead><tbody><tr><td> Less than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is less than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\"> </td></tr><tr><td> Zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> equals <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\"> </td></tr><tr><td> Greater than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is greater than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"> </td></tr></tbody></table></p>\r\n</returns>\r\n```\r\nand it looks like all of the errors are related to elements containing \"netstandard.yml\"\r\n\r\nAlso, for some reason the root node is \"span\" and not \"doc\" as usual. i.e.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><span>\r\n<doc>\r\n...\r\n</doc></span>\r\n```\r\nOnce I fixed those errors by removing them in my local copy, I am able to retrieve the xml comments with roslyn.\r\n\r\nI checked NETStandard.Library version 2.0.0 and 2.0.1 from nuget."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7348161108","Type":"PullRequestEvent","CreatedAt":"2018-03-08T04:45:48","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27832","RelatedDescription":"Merged pull request \"Add missing IInternalConfigHost method\" (#27832) at dotnet/corefx","RelatedBody":"The intital implementation of ConfigurationManager predated the Core impl of Security.\r\n\r\nSee https://github.com/dotnet/corefx/pull/19224#pullrequestreview-102082480.\r\n\r\ncc: @danmosemsft, @joperezr, @weshaggard "},{"Id":"7347783232","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:20:58","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27844","RelatedDescription":"Opened pull request \"Tests for remove relative segments [WIP]\" (#27844) at dotnet/corefx","RelatedBody":"Coreclr PR :- https://github.com/dotnet/coreclr/pull/16829\r\nRemove Relative Segments have been moved to PathIntenal in the coreclr PR. So this pr contaitns the tests for it\r\nWill revert the change containing the move of RemoveRelativeSegments function. (After the Mirror coreclr<-> corefx mirror)\r\nThe change containing the move is done in coreclr to avoid failures during the mirroring.\r\nStill Need To add tests for unix\r\n\r\n"},{"Id":"7347768093","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:18:11","Actor":"VSadov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27533","RelatedDescription":"Merged pull request \"Don't look at base classes for interfaces in Microsoft.CSharp\" (#27533) at dotnet/corefx","RelatedBody":"Since the interface list obtained through reflection already includes those inherited from base classes the first pass contains all the interfaces and the later passes are redundant.\r\n\r\nSince only `AggregateType` would have any results in the removed `AllPossibleInterfaces` just include testing for that as part of seeing if there is a matching interface."},{"Id":"7347748273","Type":"PullRequestEvent","CreatedAt":"2018-03-08T03:14:36","Actor":"VSadov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/27797","RelatedDescription":"Closed pull request \"[WIP] ignore static target type in restrictions\" (#27797) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7347632667","Type":"IssuesEvent","CreatedAt":"2018-03-08T02:56:38","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23278","RelatedDescription":"Closed issue \"Adding a dammit operator can hang Visual Studio\" (#23278) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 15.5 Preview 4 with the Nullable Reference Types Preview 11152017\r\n\r\n**Steps to Reproduce**:\r\n```csharp\r\nusing System.Threading;\r\nclass bar\r\n{\r\n  bar()\r\n  {\r\n    var foo = new Timer(callback); // Shows CS8622 for callback\r\n  }\r\n  private static void callback(object? _) { }\r\n}\r\n```\r\nWhen you add a `!` after callback in `Timer`'s constructor VS hangs / crashes.\r\n\r\n"},{"Id":"7347628431","Type":"IssuesEvent","CreatedAt":"2018-03-08T02:56:11","Actor":"Neme12","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25337","RelatedDescription":"Opened issue \"Incorrect 'default expression can be simplified' in switch case\" (#25337) at dotnet/roslyn","RelatedBody":"```c#\r\nswitch (true)\r\n{\r\n    case default(bool):\r\n        break;\r\n}\r\n```\r\n`(bool)` is greyed out with an offered fix to simplify. Applying the fix results in an error (CS8313 A default literal 'default' is not valid as a case constant.)"},{"Id":"7347594011","Type":"IssuesEvent","CreatedAt":"2018-03-08T02:51:31","Actor":"Neme12","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25336","RelatedDescription":"Opened issue \"Missing completion for 'else' after nested if with else\" (#25336) at dotnet/roslyn","RelatedBody":"```c#\r\nif (true)\r\n    if (true)\r\n        Console.WriteLine();\r\n    else\r\n        Console.WriteLine();\r\n$$ // 'else' is not in the completion list\r\n```"},{"Id":"7347568954","Type":"IssuesEvent","CreatedAt":"2018-03-08T02:48:05","Actor":"alrz","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25267","RelatedDescription":"Closed issue \"Introduce variable inside string literals\" (#25267) at dotnet/roslyn","RelatedBody":"```cs\r\nstring x = \"a string\";\r\n              `----- selection\r\n```\r\n->\r\n```cs\r\nstring v1 = \"string\";\r\nstring x = $\"a {v1}\";\r\n```"},{"Id":"7347535675","Type":"PullRequestEvent","CreatedAt":"2018-03-08T02:37:00","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25335","RelatedDescription":"Opened pull request \"Finalize fixes for semantic model and IDE support for merging\" (#25335) at dotnet/roslyn","RelatedBody":"This PR should clean up the outstanding required compiler tests for merging, as well as IDE support. The required part of the IDE checklist is as follows:\r\n\r\n![image](https://user-images.githubusercontent.com/515774/37127161-519228a0-2229-11e8-8f15-38c80317a4f5.png)\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7348060496","Type":"PullRequestEvent","CreatedAt":"2018-03-08T04:04:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5512","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5512) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7347551489","Type":"PullRequestEvent","CreatedAt":"2018-03-08T02:45:47","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5512","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5512) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7346885819","Type":"PullRequestEvent","CreatedAt":"2018-03-07T22:17:40","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5511","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5511) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7346029166","Type":"PullRequestEvent","CreatedAt":"2018-03-07T19:20:27","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5510","RelatedDescription":"Opened pull request \"ILVerification NuGet package\" (#5510) at dotnet/corert","RelatedBody":"To be consumed by Roslyn. In Helix builds we only build this along with the TargetingPack under Windows.\r\n@jcouv , could you take a look at this?\r\ncc @sergiy-k "},{"Id":"7344610647","Type":"PullRequestEvent","CreatedAt":"2018-03-07T15:09:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5443","RelatedDescription":"Merged pull request \"Add tests for building native shared and static libraries\" (#5443) at dotnet/corert","RelatedBody":"This PR tests the functionality of building native shared (.dll, .dylib, .so) and static (.lib, .a) libraries using CoreRT.\r\n\r\nThe static library tests pass on Windows, macOS and Ubuntu, shared library tests pass on Windows and macOS, Ubuntu won't pass until #4988 is fixed\r\n\r\nFixes #4985 "},{"Id":"7344610628","Type":"IssuesEvent","CreatedAt":"2018-03-07T15:09:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4985","RelatedDescription":"Closed issue \"Tests for building native libraries\" (#4985) at dotnet/corert","RelatedBody":"Unit tests need to be added for building native libraries with CoreRT. Both shared and static libraries should be tested.\r\n\r\nParent issue: #1285"},{"Id":"7341858816","Type":"PullRequestEvent","CreatedAt":"2018-03-07T04:34:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5416","RelatedDescription":"Merged pull request \"[ILVerify] Fix include/exclude pattern matching by using fully qualified method name and added some verbose output\" (#5416) at dotnet/corert","RelatedBody":"I saw that include/exclude pattern matching was not working anymore, because only the method name and not the fully qualified name was used.\r\n\r\nI also added some verbose output to see what input files, reference files, include and exclude patterns are used and if a method was verified or skipped."},{"Id":"7341695098","Type":"PullRequestEvent","CreatedAt":"2018-03-07T03:31:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5509","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5509) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7347358080","Type":"PullRequestEvent","CreatedAt":"2018-03-08T00:42:55","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2028","RelatedDescription":"Opened pull request \"WIP: Include SourceRevisionId to InformationalVersion\" (#2028) at dotnet/sdk","RelatedBody":"See https://github.com/tmat/repository-info/blob/master/docs/Readme.md and https://github.com/Microsoft/msbuild/pull/3063 for details."},{"Id":"7347158850","Type":"IssuesEvent","CreatedAt":"2018-03-07T23:23:11","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2024","RelatedDescription":"Closed issue \"File.cs.cshtml cannot become EmbeddedResource\" (#2024) at dotnet/sdk","RelatedBody":"_From @abpiskunov on March 2, 2018 6:17_\n\n1. Create a new core Web app\r\n2. in File Explorer find some cshtml page (Error.cshtml and rename it to Error.cs.cshtml.\r\n3. In VS change type of Error.cs.cshtml to EmbeddedResource (notice it will be removed from Content in csproj)\r\n4. Build\r\n5. Open assembly manifest and see - no embedded resources\r\n6. When rename file to Error.cshtml , build, assembly manifest does contain EmbeddedResource.\r\n\r\nSee this issue opened by customer originally : https://github.com/aspnet/Tooling/issues/1066#issuecomment-369131680 \r\n\r\n\r\n\n\n_Copied from original issue: dotnet/project-system#3336_"},{"Id":"7347075636","Type":"PullRequestEvent","CreatedAt":"2018-03-07T23:01:24","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2026","RelatedDescription":"Merged pull request \"Updating the preview message link\" (#2026) at dotnet/sdk","RelatedBody":"Updating the preview message link to one that uses a language neutral forward link.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/2019."},{"Id":"7347075632","Type":"IssuesEvent","CreatedAt":"2018-03-07T23:01:24","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2019","RelatedDescription":"Closed issue \"Preview warning should use aka.ms and redirect to language neutral URL\" (#2019) at dotnet/sdk","RelatedBody":"We should use an aka.ms (like in other messages we have) so that we can point to a different page without servicing the product.\r\n\r\nAlso, we should remove the /en-US/ from the redirect to docs.microsoft.com to let docs.microsoft.com choose the appropriate language based on the user's web client."},{"Id":"7347073703","Type":"PullRequestEvent","CreatedAt":"2018-03-07T23:00:56","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2027","RelatedDescription":"Opened pull request \"Replaced NetSdkMessage with a ShowPreviewMessage\" (#2027) at dotnet/sdk","RelatedBody":"Replaced NetSdkMessage with a ShowPreviewMessage, that is super specific to the preview message scenario. Changed to this new task because it handles displaying the message only once per build per node, instead of spamming folks with it.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/2018\r\n\r\ncc @rainersigwald "},{"Id":"7345646580","Type":"PullRequestEvent","CreatedAt":"2018-03-07T18:04:14","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2022","RelatedDescription":"Merged pull request \"Fix PackTool nuspec has p2p dependencies\" (#2022) at dotnet/sdk","RelatedBody":"Fix https://github.com/dotnet/cli/issues/8724"},{"Id":"7345599555","Type":"PullRequestEvent","CreatedAt":"2018-03-07T17:55:18","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2026","RelatedDescription":"Opened pull request \"Updating the preview message link\" (#2026) at dotnet/sdk","RelatedBody":"Updating the preview message link to one that uses a language neutral forward link.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/2019."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"969672659385700354","CreatedAt":"2018-03-02T20:35:52+00:00","UserScreenname":"dotnet","Text":"It's not too late... Happening now: Miguel de Icaza's Developer Tools Reddit AMA. Ask him anything ab out what we'v… https://t.co/Ct6QA3l0FL","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":22,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-03-08T05:30:19.3592973Z","RunDurationInMilliseconds":7767}