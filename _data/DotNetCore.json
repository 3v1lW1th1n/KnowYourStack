{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null},{"Title":"Announcing ‘Machine Learning .NET’ 0.5","PublishedOn":"2018-09-12T18:55:34+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, coinciding with the .NET Conf 2018, we&#8217;re announcing the release of ML.NET 0.5. It’s been a few months already since we released ML.NET 0.1 at //Build 2018, a cross-platform, open source...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-ml-net-0-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 2 and the preview of the Cosmos DB provider and spatial extensions for EF Core","PublishedOn":"2018-09-12T17:04:13+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 2 available, together with a preview of our data provider for Cosmos DB and new spatial extensions for our SQL Server and in-memory providers. Obtaining the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-entity-framework-core-2-2-preview-2/","RawContent":null},{"Title":"A (Belated) Welcome to C# 7.3","PublishedOn":"2018-09-12T17:00:52+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"A (Belated) Welcome to C# 7.3 Better late than never! Some of you may have noticed that C# 7.3 already shipped, back in Visual Studio 2017 update 15.7. Some of you may even be using the features...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/a-belated-welcome-to-c-7-3/","RawContent":null},{"Title":".NET Framework September 2018 Security and Quality Rollup","PublishedOn":"2018-09-11T18:36:50+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Updated: September 21, 2018 SharePoint workflows may stop working after installing this update.  See SharePoint workflows stop working after you install .NET security updates for CVE-2018-8421 for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core September 2018 Update","PublishedOn":"2018-09-11T17:00:36+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core September 2018 Update. This update includes .NET Core 2.1.4 and .NET Core SDK 2.1.402 and contains important reliability fixes. Security CVE-2018-8409: .NET Core...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-core-september-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7951838452","Type":"IssuesEvent","CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/107","RelatedDescription":"Opened issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107) at dotnet/home","RelatedBody":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS."},{"Id":"7948314683","Type":"IssuesEvent","CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/106","RelatedDescription":"Opened issue \"Updates are not requested from local WSUS\" (#106) at dotnet/home","RelatedBody":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"},{"Id":"8247970519","Type":"IssuesEvent","CreatedAt":"2018-09-11T17:00:56","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](***TDB***).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n"},{"Id":"8220412616","Type":"IssuesEvent","CreatedAt":"2018-09-05T20:56:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Opened issue \".NET Core Runtime ARM64 Status\" (#82) at dotnet/announcements","RelatedBody":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\n## Current Status\r\n\r\nARM64 is currently broken in .NET Core 3.0 builds. See:\r\n\r\n* [dotnet/coreclr #19805](https://github.com/dotnet/coreclr/issues/19805)\r\n* [dotnet/coreclr #19822](https://github.com/dotnet/coreclr/issues/19822)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)"},{"Id":"8152375982","Type":"IssuesEvent","CreatedAt":"2018-08-22T18:23:02","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80) at dotnet/announcements","RelatedBody":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8365153719","Type":"PullRequestEvent","CreatedAt":"2018-10-04T03:16:29","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20235","RelatedDescription":"Merged pull request \"Disable GitHub_19361 for Linux arm64\" (#20235) at dotnet/coreclr","RelatedBody":"Tracking: #20232"},{"Id":"8365051730","Type":"PullRequestEvent","CreatedAt":"2018-10-04T02:38:13","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20241","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup, IbcData, PgoData to preview1-27003-01, preview1-27003-02, preview1-27003-01, master-20181003-0045, master-20181003-0040, respectively (master)\" (#20241) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"8364530316","Type":"IssuesEvent","CreatedAt":"2018-10-03T23:31:15","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20253","RelatedDescription":"Opened issue \"JIT: Support object stack allocation\" (#20253) at dotnet/coreclr","RelatedBody":"This issue will track work on supporting object stack allocation in the jit. See #20251 for the document describing the work.\r\n\r\nThe initial goal is to be able to remove heap allocation in a simple example like this:\r\n\r\n```\r\nclass Foo\r\n{\r\n    public int f1;\r\n    public int f2;\r\n    public Foo(int f1, int f2)\r\n    {\r\n        this.f1 = f1;\r\n        this.f2 = f2;\r\n    }\r\n}\r\n\r\nclass Test\r\n{\r\n    static int f1;\r\n    static int f2;\r\n    public static int Main()\r\n    {\r\n         Foo foo = new Foo(f1, f2);\r\n         return foo.f1 + foo.f2;\r\n    }\r\n}\r\n```\r\n\r\nand then in a similar example where the class has gc fields.\r\n\r\nProposed  initial steps are:\r\n- [ ] add getHeapClassSize jit interface method and its implementations\r\n- [ ] add classHasFinalizer jit interface method and its implementations\r\n- [ ] add getObjHeaderSize jit interface method and its implementations\r\n- [ ] modify getClassGCLayout jit interface method to work on reference types\r\n- [ ] add COMPlus_JitObjectStackAllocation environment variable to control this optimization (off by default)\r\n- [ ] move ObjectAllocator phase to be closer to inlining\r\n- [ ] modify lvaSetStruct to allow creating locals corresponding to stack-allocated classes\r\n- [ ] modify gc reporting to properly report gc fields of stack-allocated objects\r\n- [ ] modify gc writebarrier logic to apply appropriate barriers when assigning to fields of (possibly) stack-allocated objects\r\n- [ ] modify gc code that asserts that all objects live on the heap\r\n- [ ] add simple conservative escape analysis sufficient for the example above\r\n- [ ] make the analysis more sophisticated to handle increasingly more complex examples\r\n\r\nI will be modifying and extending this list as the work progresses.\r\n\r\ncc @dotnet/jit-contrib "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8365430052","Type":"PullRequestEvent","CreatedAt":"2018-10-04T05:05:20","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10097","RelatedDescription":"Opened pull request \" WIP Move command creating to dotnetdll\" (#10097) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"8364856713","Type":"IssuesEvent","CreatedAt":"2018-10-04T01:25:11","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10096","RelatedDescription":"Opened issue \"Consume assets from runtime pack for self-contained publish\" (#10096) at dotnet/cli","RelatedBody":"For .NET Core 3.0, we plan to use [runtime packs](https://github.com/dotnet/cli/issues/10007) to deliver runtime assets for self-contained publish.\r\n\r\nWe expect to use [\"download only\" packages](https://github.com/NuGet/Home/issues/7339) to acquire the appropriate runtime pack.  This means that the runtime assets will no longer be in the assets file.  So we will need an alternate way of consuming these assets.  They will also need to flow through conflict resolution."},{"Id":"8364823272","Type":"IssuesEvent","CreatedAt":"2018-10-04T01:12:41","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10095","RelatedDescription":"Opened issue \"Resolve runtime pack to use for self-contained publish (including RID)\" (#10095) at dotnet/cli","RelatedBody":"For .NET Core 3.0, we plan to use [runtime packs](https://github.com/dotnet/cli/issues/10007) to deliver runtime assets for self-contained publish.\r\n\r\nWe expect to use [\"download only\" packages](https://github.com/NuGet/Home/issues/7339) to acquire the appropriate runtime pack.  This means that the SDK will need to select the correct runtime pack.\r\n\r\nWe can use a naming convention or a table of packages in the .NET Core SDK to help select the runtime pack.  However, we still need to determine which RID to use.  This may not be an exact match with the RID used for publish, for example we will want to use the Linux portable (linux-x64) RID for the runtime pack, even if the publish RID is more specific.\r\n\r\nTo do this, we may want to include the RID graph as part of the SDK, as well as a list of RIDs that there are runtime packs for.  Then we can walk the graph to find the best match of available runtime packs to the publish RID.\r\n\r\nWe should also have some way of opting into a runtime pack for a RID that wasn't in the list of available runtime packs.\r\n"},{"Id":"8364352962","Type":"IssuesEvent","CreatedAt":"2018-10-03T22:39:16","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/1629","RelatedDescription":"Closed issue \"dotnet-custom cli\" (#1629) at dotnet/cli","RelatedBody":"Question. How to build custom dotnet cli?\n\nFollowed the `custom-dnx` steps to build `dotnet custom cli`.\n1. Clone and build coreclr repository\n2. Copy `coreclr\\bin\\Product\\Windows_NT.x64.Release\\*.dll` to `dotnet\\bin`\n3. Delete `*.ni.dll` in `dotnet\\bin`\n4. Restore, build and publish MyConsoleApp\n5. Use symbols from `coreclr\\bin\\Product\\Windows_NT.x64.Release\\PDB`\n\nI can run the app but symbols are not matching in WPF.\n"},{"Id":"8364343951","Type":"IssuesEvent","CreatedAt":"2018-10-03T22:36:48","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/6928","RelatedDescription":"Closed issue \"Allow option to skip unsupported frameworks when building a solution\" (#6928) at dotnet/cli","RelatedBody":"It's much more convenient to build a solution file than each individual project file.\r\n\r\nThat's great when all the projects *can* be built in all framework versions, but it fails when some or all projects only work for some environments.\r\n\r\nThe obvious example of this is when some projects target (say) `net45` and `netstandard1.3` (as Noda Time does). On my Linux CI machine, I'd like to *only* build the .NET Core versions - `net45` isn't going to work because I don't have all the relevant bits installed for desktop reference assemblies. (And even if I did, I wouldn't be able to run them without getting Mono set up.)\r\n\r\nAs a result, I have to build each individual project, specifying the target framework that will work for that environment - and that gets old really quickly. It would be nice if I could run\r\n\r\n```sh\r\ndotnet restore src/NodaTime-All.sln\r\ndotnet build src/NodaTime-All.sln --skip-unsupported-frameworks\r\n```\r\n\r\n(or similar)"},{"Id":"8364296241","Type":"IssuesEvent","CreatedAt":"2018-10-03T22:24:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7023","RelatedDescription":"Closed issue \"Enable building .NET Framework and PCL projects\" (#7023) at dotnet/cli","RelatedBody":"Goal: Enable building .NET Framework and PCL projects with the .NET Core SDK.\r\n\r\nThis should enable:\r\n\r\n- All .NET Framework versions.\r\n- All PCL profiles (if some pull in WinRT or have exceedingly low usage, we can skip those and wait for demand).\r\n\r\nThere are many things that you might need to building a .NET Framework projects. The .NET Core SDK should handle the case where reference assemblies are needed. If a project needs WSDL generation, WinMDs or an MSI-delivered SDK, then that will need to happen on Windows with potentially  VS install. The simple case where only reference assemblies are needed should work fine on Windows, macOS and Linux, using the .NET Core SDK.\r\n\r\nHere is an example request: https://github.com/Microsoft/dotnet/issues/432. This request is with msbuild and not the .NET Core SDK and is presumably not using sdk style projects.\r\n\r\nDupe of #191"},{"Id":"8364139088","Type":"IssuesEvent","CreatedAt":"2018-10-03T21:47:33","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9562","RelatedDescription":"Closed issue \"[release/2.1.2xx] Unit test failing: ItPublishesARidSpecificAppSettingSelfContainedToFalse missing  'Microsoft.NETCore.App' version '2.0.9'\" (#9562) at dotnet/cli","RelatedBody":"Hi,\r\n\r\nI am trying to build the cli and having one unit test failing, referencing  'Microsoft.NETCore.App' version '2.0.9'\r\n\r\n## Steps to reproduce\r\nCheck out release/2.1.2xx and build it on Amazon Linux:\r\n./build.sh --linux-portable --configuration Release\r\n\r\n## Expected  behavior\r\nUnit tests should pass.\r\nLast successful build on my end:  Jun 14, 2018 12:00 AM\r\n\r\n## Actual behavior\r\nOne unit tests is failing\r\n218 Warning(s)\r\n1 Error(s)\r\n\r\nContent of the .trx file:\r\n\r\n```\r\n> Failed   Microsoft.DotNet.Cli.Publish.Tests.GivenDotnetPublishPublishesProjects.ItPublishesARidSpecificAppSettingSelfContainedToFalse\r\n>     15>DOTNETTEST : error Message:  [/build/cli/build/test/RunTest.proj]\r\n>           Expected command to pass but it did not.\r\n>          File Name: /build/cli/artifacts/linux-x64/stage2/dotnet\r\n>          Arguments: /build/cli/test/dotnet-publish.Tests/bin/Release/netcoreapp2.0/PublishesSelfContainedFalse/MSBuildTestApp/bin/Release/netcoreapp2.0/linux-x64/publish/MSBuildTestApp.dll\r\n>          WorkingDir:: \r\n>          Exit Code: 131\r\n>          StdOut:\r\n>          \r\n>          StdErr:\r\n>          It was not possible to find any compatible framework version\r\n>          The specified framework 'Microsoft.NETCore.App', version '2.0.9' was not found.\r\n>            - Check application dependencies and target a framework version installed at:\r\n>                /\r\n>            - Alternatively, install the framework version '2.0.9'.\r\n>          \r\n>          Stack Trace:\r\n>             at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)\r\n>             at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)\r\n>             at Microsoft.DotNet.Tools.Test.Utilities.CommandResultAssertions.Pass() in /build/cli/test/Microsoft.DotNet.Tools.Tests.Utilities/Assertions/CommandResultAssertions.cs:line 32\r\n>             at Microsoft.DotNet.Cli.Publish.Tests.GivenDotnetPublishPublishesProjects.ItPublishesARidSpecificAppSettingSelfContainedToFalse() in /build/cli/test/dotnet-publish.Tests/GivenDotnetPublishPublishesProjects.cs:line 176\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8364127338","Type":"IssuesEvent","CreatedAt":"2018-10-03T21:45:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9138","RelatedDescription":"Closed issue \"Uninstalling .NET Core removes dotnet directory from path\" (#9138) at dotnet/cli","RelatedBody":"I had nearly 20 versions of .NET Core installed. I decided to uninstall them all but one (2.1.300-preview2). After that, \"dotnet\" didn't work anymore since the PF directory was removed from the path. Do we have any testing on this?\r\n\r\nI decided to uninstall this last version, too, to see what was left. I assume that the 1.0.0 folder was a bug that is no longer interesting. It does seem like there is no automatic cleanup mechanism for the NuGetFallbackFolder. It seems like there should be. Thoughts?\r\n\r\n```console\r\nC:\\Users\\rlander>dir \"\\Program Files\"\\dotnet\\sdk\r\n Volume in drive C is Windows\r\n Volume Serial Number is 384B-0B6E\r\n\r\n Directory of C:\\Program Files\\dotnet\\sdk\r\n\r\n04/25/2018  08:59 AM    <DIR>          .\r\n04/25/2018  08:59 AM    <DIR>          ..\r\n04/24/2018  02:47 PM    <DIR>          1.0.0\r\n04/25/2018  08:50 AM    <DIR>          NuGetFallbackFolder\r\n               0 File(s)              0 bytes\r\n               4 Dir(s)  151,898,918,912 bytes free\r\n```"},{"Id":"8364123889","Type":"IssuesEvent","CreatedAt":"2018-10-03T21:44:27","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9181","RelatedDescription":"Closed issue \"Nuget Dependency Insanity - Conflicting Dependency resolved yet still gives an error.\" (#9181) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n- Create two distinctly named nuget packages which contain the same old version of a Newtonsoft.Json DLL in the lib folder.\r\n- Create a new project which references both of the previously created nuget packages.\r\n- Add a reference to the latest Newtonsoft.Json package in the newly created project.\r\n- Use that reference for something. e.g. serialize something  `string stuff = JsonConvert.SerializeObject(\"world\");`\r\n- Build\r\n\r\n## Expected  behavior\r\n- I expect it to use the latest version of Newtonsoft.Json and automatically redirect references to previous versions.\r\n- I expect it to successfully build.\r\n\r\n## Actual behavior\r\n- Build fails with a warning followed by a seemingly paradoxical error:\r\n`C:\\Program Files\\dotnet\\sdk\\2.1.105\\Microsoft.Common.CurrentVersion.targets(2052,5): warning MSB3243: No way to resolve\r\nconflict between \"Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\" and \"Newtonsoft.J\r\nson, Version=9.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\". Choosing \"Newtonsoft.Json, Version=11.0.0.0, Cu\r\nlture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\" arbitrarily. [E:\\Projects\\crsl\\Standard.Service\\Standard.Service.csproj]\r\n\r\nSiteSettingsService.cs(156,20): error CS0433: The type 'JsonConvert' exists in both 'Newtonsoft.Json, Version=9.0.0.0, C\r\nulture=neutral, PublicKeyToken=30ad4fe6b2a6aeed' and 'Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken\r\n=30ad4fe6b2a6aeed' [E:\\Projects\\crsl\\Standard.Service\\Standard.Service.csproj]`\r\n\r\nImportant to note: \r\n- If I remove a reference to either one of the packages the project then successfully builds. It doesn't matter which one I select as long as I remove one of them. \r\n- If I downgrade one of the packages so it's using an even older version of Newtonsoft.Json the project successfully builds. It only seems to fail when there are two nuget packages referenced containing the same version of a Newtonsoft.Json dll in the lib folder.\r\n- If I reference the same version of Newtonsoft.Json in the afforementioned project as is inside both nuget packages the build succeeds.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.1.105)\r\n\r\nProduct Information:\r\n Version:            2.1.105\r\n Commit SHA-1 hash:  141cc8d976\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.105\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8360653671","Type":"PullRequestEvent","CreatedAt":"2018-10-03T12:15:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/888","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181002.4 of https://github.com/dotnet/arcade\" (#888) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18502.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18502.4.symbols.nupkg - 2.2.0-beta.18502.4\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18502.4.symbols.nupkg - 2.4.0-beta.18502.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18502.4\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18502.4\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18502.4\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18502.4\n- Microsoft.DotNet.Darc - 1.0.0-beta.18502.4\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18502.4\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18502.4\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18502.4\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18502.4"},{"Id":"8360574130","Type":"PullRequestEvent","CreatedAt":"2018-10-03T12:00:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/888","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181002.4 of https://github.com/dotnet/arcade\" (#888) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18502.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18502.4.symbols.nupkg - 2.2.0-beta.18502.4\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18502.4.symbols.nupkg - 2.4.0-beta.18502.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18502.4.symbols.nupkg - 1.0.0-beta.18502.4\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18502.4\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18502.4\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18502.4\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18502.4\n- Microsoft.DotNet.Darc - 1.0.0-beta.18502.4\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18502.4\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18502.4\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18502.4\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18502.4\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18502.4"},{"Id":"8360349217","Type":"IssuesEvent","CreatedAt":"2018-10-03T11:14:18","Actor":"GSPP","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/887","RelatedDescription":"Opened issue \"\"Could not load System.Runtime.dll\" because it was not copied to the output folder\" (#887) at dotnet/standard","RelatedBody":"I will attach a repro solution that I have created as follows:\r\n\r\n1. New web application targeting 4.7.1\r\n2. Add a class library\r\n3. Reference the library from the web app and call code in it\r\n4. In the class library add Microsoft Unity and use it\r\n5. Add the System.Net.Http package to both projects\r\n\r\nWhen this application is started it immediately crashes:\r\n\r\n```\r\n[FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.]\r\n\r\n[FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.]\r\n   NuGetUnityRepro.Library.Class1.Run() in ...\\NuGetUnityRepro\\NuGetUnityRepro.Library\\Class1.cs:15\r\n   NuGetUnityRepro.MvcApplication.Application_Start() in ...\\NuGetUnityRepro\\NuGetUnityRepro\\Global.asax.cs:21\r\n\r\n[HttpException (0x80004005): Could not load file or assembly 'System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.]\r\n   System.Web.HttpApplicationFactory.EnsureAppStartCalledForIntegratedMode(HttpContext context, HttpApplication app) +476\r\n   System.Web.HttpApplication.RegisterEventSubscriptionsWithIIS(IntPtr appContext, HttpContext context, MethodInfo[] handlers) +118\r\n   System.Web.HttpApplication.InitSpecial(HttpApplicationState state, MethodInfo[] handlers, IntPtr appContext, HttpContext context) +176\r\n   System.Web.HttpApplicationFactory.GetSpecialApplicationInstance(IntPtr appContext, HttpContext context) +220\r\n   System.Web.Hosting.PipelineRuntime.InitializeApplication(IntPtr appContext) +303\r\n\r\n[HttpException (0x80004005): Could not load file or assembly 'System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.]\r\n   System.Web.HttpRuntime.FirstRequestInit(HttpContext context) +657\r\n   System.Web.HttpRuntime.EnsureFirstRequestInit(HttpContext context) +89\r\n   System.Web.HttpRuntime.ProcessRequestNotificationPrivate(IIS7WorkerRequest wr, HttpContext context) +188\r\n```\r\n\r\nCopying text from my [other comment](https://github.com/dotnet/standard/issues/567#issuecomment-426305310):\r\n\r\n> So Unity now wants to use System.Runtime. Unfortunately, it was not copied to the bin directory.\r\n> I'm unsure about how to fix this. Deleting the binding redirect in web.config works but I'm hesitant to modify what the NuGet package automatically did.\r\n\r\n> This seems to be a tooling bug. Should this not just work?\r\n\r\n[NuGetUnityRepro.zip](https://github.com/dotnet/standard/files/2441760/NuGetUnityRepro.zip)\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8365465952","Type":"PullRequestEvent","CreatedAt":"2018-10-04T05:18:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32609","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27004-00, beta-27004-00, respectively (master)\" (#32609) at dotnet/corefx","RelatedBody":""},{"Id":"8365372130","Type":"PullRequestEvent","CreatedAt":"2018-10-04T04:42:19","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32607","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-27004-01, preview1-27004-01, preview1-27003-04, respectively (master)\" (#32607) at dotnet/corefx","RelatedBody":""},{"Id":"8365287368","Type":"IssuesEvent","CreatedAt":"2018-10-04T04:08:59","Actor":"donnyv","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32608","RelatedDescription":"Opened issue \"Issue with sending commands using process.StandardInput.Write on MacOS\" (#32608) at dotnet/corefx","RelatedBody":"I'm having a weird problem where once a Terminal process is launched it will not accept anymore commands.\r\nhttps://stackoverflow.com/questions/52638733/process-standardinput-write-is-not-writing-to-the-terminal-on-macos-using-net-c"},{"Id":"8364783205","Type":"PullRequestEvent","CreatedAt":"2018-10-04T00:58:08","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32607","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-27004-01, preview1-27003-04, respectively (master)\" (#32607) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8365225568","Type":"IssuesEvent","CreatedAt":"2018-10-04T03:44:13","Actor":"zezba9000","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/30307","RelatedDescription":"Opened issue \"Rolsyn 2.9.0 very broken or is it me?\" (#30307) at dotnet/roslyn","RelatedBody":"**Version Used**: Works in 2.8.2 but broken in 2.9.0\r\n\r\n**Steps to Reproduce**:\r\nNOTE: Two bugs here.\r\n\r\n1. Update this proj on GitHub to 2.9.0: https://github.com/zezba9000/CSharpTranspiler\r\n2. Install other missing packages: Microsoft.CodeAnalysis.Workspaces.MSBuild & Microsoft.Build.Runtime\r\n3. Put a break-point on line 29 in file \"CSharpTranspiler/Program.cs\"\r\n4. Run and you will get a broken \"System.Runtime\" exception.\r\n5. Resolve the issue by deleting the \"App.config\" file\r\n6. Run again and Roslyn's \"CSharpParseOptions.ParseOptions.LanguageVersion\" thinks what should be a \".NET 2.0 + C# 3.0\" proj is C# 7.x\r\n\r\n**Expected Behavior**:\r\nShould work like 2.8.2 does.\r\n\r\n**Actual Behavior**:\r\nFails to resolve dependencies correctly.\r\n\r\n**Other Info**\r\nMicrosoft Visual Studio Community 2017 Version 15.8.6\r\nTargeting .NET framework 4.7.2 + C# 7.3\r\nRoslyn trying to load a proj with .NET 2.0 + C# 3.0"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8364399504","Type":"PullRequestEvent","CreatedAt":"2018-10-03T22:52:13","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6422","RelatedDescription":"Opened pull request \"Fix ETW harness name handling around generics\" (#6422) at dotnet/corert","RelatedBody":"Generic type markers in the ETW events used by the ready-to-run harness messed up the name mangling. Don't consider any generic arguments as part of the name when formatting the method to remove namespaces so we don't mistake a period in the generic type for part of the method's type's namespace."},{"Id":"8361367831","Type":"IssuesEvent","CreatedAt":"2018-10-03T14:11:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6421","RelatedDescription":"Opened issue \"GetGenerationWR test fails intermittently\" (#6421) at dotnet/corert","RelatedBody":""},{"Id":"8361359417","Type":"PullRequestEvent","CreatedAt":"2018-10-03T14:09:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6418","RelatedDescription":"Merged pull request \"Fix spurious assert in getFieldType\" (#6418) at dotnet/corert","RelatedBody":"Missed this when I was changing `structType` from being a ref to being a pointer."},{"Id":"8361339388","Type":"PullRequestEvent","CreatedAt":"2018-10-03T14:07:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6420","RelatedDescription":"Merged pull request \"Emphasize necessary CSPROJ changes\" (#6420) at dotnet/corert","RelatedBody":"Related to #6419."},{"Id":"8361153243","Type":"IssuesEvent","CreatedAt":"2018-10-03T13:40:19","Actor":"Jake-Shadle","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6419","RelatedDescription":"Closed issue \"`$(TargetName)` not available in Microsoft.NETCore.Native.targets\" (#6419) at dotnet/corert","RelatedBody":"It seems that the `NativeObject` and `NativeBinary` properties are not being calculated correcty due to the `$(TargetName)` macro evaluating to an empty string, resulting in the `LinkNative` target failing with something like the following error\r\n\r\n```\r\n$ dotnet publish -c Release -r linux-x64 --verbosity d\r\n# Much more output...\r\n   1:7>Target \"IlcCompile\" in file \"/home/jshadle/code/corert/bin/Linux.x64.Release/build/Microsoft.NETCore.Native.targets\" from project \"/home/jshadle/code/ddc/ddc/Ddc.csproj\" (target \"LinkNative\" depends on it):\r\n       Skipping target \"IlcCompile\" because all output files are up-to-date with respect to the input files.\r\n       Input files: obj/Release/netcoreapp2.1/linux-x64/Ddc.dll\r\n       Output files: native/Ddc.o\r\n   1:7>Done building target \"IlcCompile\" in project \"Ddc.csproj\".\r\n   1:7>Target \"LinkNative\" in file \"/home/jshadle/code/corert/bin/Linux.x64.Release/build/Microsoft.NETCore.Native.targets\" from project \"/home/jshadle/code/ddc/ddc/Ddc.csproj\" (target \"ComputeLinkedFilesToPublish\" depends on it):\r\n       Building target \"LinkNative\" completely.\r\n       Output file \"native/\" does not exist.\r\n       Task \"MakeDir\"\r\n       Done executing task \"MakeDir\".\r\n       Task \"Exec\"\r\n         clang \"native/.o\" -o \"native/\" /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libbootstrapper.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libRuntime.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.CoreLib.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.TypeLoader.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Globalization.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.IO.Compression.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Http.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Security.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\r\n   1:7>clang-6.0 : error : no such file or directory: 'native/.o' [/home/jshadle/code/ddc/ddc/Ddc.csproj]\r\n   1:7>/home/jshadle/code/corert/bin/Linux.x64.Release/build/Microsoft.NETCore.Native.targets(247,5): error MSB3073: The command \"clang \"native/.o\" -o \"native/\" /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libbootstrapper.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libRuntime.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.CoreLib.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.TypeLoader.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Globalization.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.IO.Compression.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Http.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Security.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\" exited with code 1. [/home/jshadle/code/ddc/ddc/Ddc.csproj]\r\n```\r\n\r\nSome additional context that leads up to this, in case it helps....\r\n\r\nI'm on Fedora 28 which currently packages clang 6.0.1, so the basic instructions for getting [setup](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md) needed the [additional steps](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-ObjectWriter.md) to get a working `libobjwriter`. Then I modified the `/build/Microsoft.NETCore.Native.Unix.props` to just point to *clang* instead of *clang-3.9*. This got me to the above error message by invoking `dotnet publish -c Release -r linux-x64 --verbosity d`.\r\n\r\nI'm able to hardcode the name of the binary I am building into the `build/Microsoft.NETCore.Native.targets` file\r\n\r\n```diff\r\n+ <NativeObject>$(NativeIntermediateOutputPath)Ddc$(NativeObjectExt)</NativeObject>\r\n+ <NativeBinary>$(NativeOutputPath)Ddc$(NativeBinaryExt)</NativeBinary>\r\n- <NativeObject>$(NativeIntermediateOutputPath)$(TargetName)$(NativeObjectExt)</NativeObject>\r\n- <NativeBinary>$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)</NativeBinary>\r\n```\r\n\r\nwhich results in a successful build/publish.\r\n\r\n![image](https://user-images.githubusercontent.com/2316028/46412365-a66e6880-c71e-11e8-8c00-8423c3f3d9c1.png)\r\n\r\nConsidering that `$(TargetName)` seems to be a pretty frequently used macro in MSBuild I figured I was doing something wrong somehow, but I'm really not sure what due to my unfamiliarity with MSBuild and .NET in general.\r\n"},{"Id":"8361143251","Type":"PullRequestEvent","CreatedAt":"2018-10-03T13:38:51","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6420","RelatedDescription":"Opened pull request \"Emphasize necessary CSPROJ changes\" (#6420) at dotnet/corert","RelatedBody":"Related to #6419."},{"Id":"8361011941","Type":"IssuesEvent","CreatedAt":"2018-10-03T13:18:31","Actor":"Jake-Shadle","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6419","RelatedDescription":"Opened issue \"`$(TargetName)` not available in Microsoft.NETCore.Native.targets\" (#6419) at dotnet/corert","RelatedBody":"It seems that the `NativeObject` and `NativeBinary` properties are not being calculated correcty due to the `$(TargetName)` macro evaluating to an empty string, resulting in the `LinkNative` target failing with something like the following error\r\n\r\n```\r\n$ dotnet publish -c Release -r linux-x64 --verbosity d\r\n# Much more output...\r\n   1:7>Target \"IlcCompile\" in file \"/home/jshadle/code/corert/bin/Linux.x64.Release/build/Microsoft.NETCore.Native.targets\" from project \"/home/jshadle/code/ddc/ddc/Ddc.csproj\" (target \"LinkNative\" depends on it):\r\n       Skipping target \"IlcCompile\" because all output files are up-to-date with respect to the input files.\r\n       Input files: obj/Release/netcoreapp2.1/linux-x64/Ddc.dll\r\n       Output files: native/Ddc.o\r\n   1:7>Done building target \"IlcCompile\" in project \"Ddc.csproj\".\r\n   1:7>Target \"LinkNative\" in file \"/home/jshadle/code/corert/bin/Linux.x64.Release/build/Microsoft.NETCore.Native.targets\" from project \"/home/jshadle/code/ddc/ddc/Ddc.csproj\" (target \"ComputeLinkedFilesToPublish\" depends on it):\r\n       Building target \"LinkNative\" completely.\r\n       Output file \"native/\" does not exist.\r\n       Task \"MakeDir\"\r\n       Done executing task \"MakeDir\".\r\n       Task \"Exec\"\r\n         clang \"native/.o\" -o \"native/\" /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libbootstrapper.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libRuntime.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.CoreLib.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.TypeLoader.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Globalization.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.IO.Compression.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Http.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Security.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\r\n   1:7>clang-6.0 : error : no such file or directory: 'native/.o' [/home/jshadle/code/ddc/ddc/Ddc.csproj]\r\n   1:7>/home/jshadle/code/corert/bin/Linux.x64.Release/build/Microsoft.NETCore.Native.targets(247,5): error MSB3073: The command \"clang \"native/.o\" -o \"native/\" /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libbootstrapper.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libRuntime.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.CoreLib.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/sdk/libSystem.Private.TypeLoader.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Globalization.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.IO.Compression.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Http.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Net.Security.Native.a /home/jshadle/code/corert/bin/Linux.x64.Release/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lcurl -lz -lgssapi_krb5 -lrt\" exited with code 1. [/home/jshadle/code/ddc/ddc/Ddc.csproj]\r\n```\r\n\r\nSome additional context that leads up to this, in case it helps....\r\n\r\nI'm on Fedora 28 which currently packages clang 6.0.1, so the basic instructions for getting [setup](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md) needed the [additional steps](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-ObjectWriter.md) to get a working `libobjwriter`. Then I modified the `/build/Microsoft.NETCore.Native.Unix.props` to just point to *clang* instead of *clang-3.9*. This got me to the above error message by invoking `dotnet publish -c Release -r linux-x64 --verbosity d`.\r\n\r\nI'm able to hardcode the name of the binary I am building into the `build/Microsoft.NETCore.Native.targets` file\r\n\r\n```diff\r\n+ <NativeObject>$(NativeIntermediateOutputPath)Ddc$(NativeObjectExt)</NativeObject>\r\n+ <NativeBinary>$(NativeOutputPath)Ddc$(NativeBinaryExt)</NativeBinary>\r\n- <NativeObject>$(NativeIntermediateOutputPath)$(TargetName)$(NativeObjectExt)</NativeObject>\r\n- <NativeBinary>$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)</NativeBinary>\r\n```\r\n\r\nwhich results in a successful build/publish.\r\n\r\n![image](https://user-images.githubusercontent.com/2316028/46412365-a66e6880-c71e-11e8-8c00-8423c3f3d9c1.png)\r\n\r\nConsidering that `$(TargetName)` seems to be a pretty frequently used macro in MSBuild I figured I was doing something wrong somehow, but I'm really not sure what due to my unfamiliarity with MSBuild and .NET in general.\r\n"},{"Id":"8360351511","Type":"PullRequestEvent","CreatedAt":"2018-10-03T11:14:45","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6418","RelatedDescription":"Opened pull request \"Fix spurious assert in getFieldType\" (#6418) at dotnet/corert","RelatedBody":"Missed this when I was changing `structType` from being a ref to being a pointer."},{"Id":"8358709790","Type":"PullRequestEvent","CreatedAt":"2018-10-03T04:42:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6398","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6398) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8364306000","Type":"IssuesEvent","CreatedAt":"2018-10-03T22:26:39","Actor":"AArnott","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2568","RelatedDescription":"Opened issue \"System.ValueTuple is copied locally for net472 targeted apps\" (#2568) at dotnet/sdk","RelatedBody":"Given this project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net472;net46</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"StreamJsonRpc\" Version=\"2.0.79-alpha\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nWhy does building it copy System.ValueTuple.dll into the app's bin folder if net472 guarantees that System.ValueTuple.dll is already in the GAC?"},{"Id":"8363610764","Type":"PullRequestEvent","CreatedAt":"2018-10-03T20:14:26","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2567","RelatedDescription":"Opened pull request \"Run the SDK performance tests daily.\" (#2567) at dotnet/sdk","RelatedBody":"Run the SDK performance tests daily.\r\n\r\n@jorive \r\n"},{"Id":"8362911849","Type":"PullRequestEvent","CreatedAt":"2018-10-03T18:12:47","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2566","RelatedDescription":"Opened pull request \"Merge release/2.1.4xx to release/2.1.5xx\" (#2566) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":56,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":19,"RawContent":null},{"Id":"1047257170482536454","CreatedAt":"2018-10-02T22:49:01+00:00","UserScreenname":"dotnet","Text":"Hey developers! Let us help you on your journey to Azure. Check out these resources, e-books, and apply for assista… https://t.co/1QzIe9tWvn","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":72,"FavoriteCount":40,"RawContent":null},{"Id":"1045845137627086848","CreatedAt":"2018-09-29T01:18:06+00:00","UserScreenname":"dotnet","Text":"POSTED: .NET Foundation September Update\nhttps://t.co/oflTRykrTK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-10-04T05:30:32.9122168Z","RunDurationInMilliseconds":8810}