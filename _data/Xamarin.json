{"Data":{"Blog":{"FeedItems":[{"Title":"Delivering Rich Media Experiences with the Xamarin.Forms Video Player","PublishedOn":"2018-01-09T18:42:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Adam Fisher. Adam is the founder of Octane Software, focused on the creation of consumer Internet products. You can find Adam on Twitter at @adamgfisher and on Github at...","Href":"https://blog.xamarin.com/delivering-rich-media-experiences-xamarin-forms-video-player/","RawContent":null},{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7078383922","Type":"PullRequestEvent","CreatedAt":"2018-01-10T03:27:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1172","RelatedDescription":"Merged pull request \"Bump to mono/2017-10/3f5fd428\" (#1172) at xamarin/xamarin-android","RelatedBody":"Implements a couple of `SocketAsyncEventArgs` methods.\r\nSets exception on `Finish*Failure()` in `SocketAsyncEventArgs`."},{"Id":"7078383158","Type":"PullRequestEvent","CreatedAt":"2018-01-10T03:26:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1174","RelatedDescription":"Merged pull request \"Preparation for the new test runner\" (#1174) at xamarin/xamarin-android","RelatedBody":"PR https://github.com/xamarin/xamarin-android/pull/1075 keeps rebuilding all the\r\nMono runtimes because the two files in this commit are part of the logic to\r\ndetermine whether to use cached Mono or not. The result isn't cached, because\r\nit's a PR builder, and so we keep waiting for 7h+ each time a smallest change is\r\nmade. This commit will cause Mono to be rebuilt and cached and, in turn, speed\r\nup round-trip time for PR 1075"},{"Id":"7078320962","Type":"PullRequestEvent","CreatedAt":"2018-01-10T03:00:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1176","RelatedDescription":"Opened pull request \"[build] Set `$(JI_MAX_JDK)` for Java.Interop\" (#1176) at xamarin/xamarin-android","RelatedBody":"Update the `make prepare` step so that we pass `JI_MAX_JDK=8` to\r\nJava.Interop's `make prepare` step. This prevents us from using JDK 9\r\nif it is installed on the machine.\r\n\r\nInternal VSTS builds are failing *seemingly* because JDK 9 is\r\ninstalled and used by default on the build machine, with `gradelw`\r\nbailing out with:\r\n\r\n\tCaused by: java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema\r\n\r\nThis previously worked with JDK 8, so we're hoping that the use of\r\nJDK 9 is the cause, and by *excluding* JDK 9 from being used we'll be\r\nable to build on VSTS again."},{"Id":"7078173874","Type":"PullRequestEvent","CreatedAt":"2018-01-10T02:02:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1175","RelatedDescription":"Opened pull request \"Bump to xamarin-android-tools/master/09a6eccb\" (#1175) at xamarin/xamarin-android","RelatedBody":"Adds members to `Xamarin.Android.Tools.AndroidSdk.dll` to improve\r\ncompatibility with `androidtools`; needed for future commercial\r\nXamarin.Android support."},{"Id":"7077841812","Type":"PullRequestEvent","CreatedAt":"2018-01-09T23:58:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1169","RelatedDescription":"Merged pull request \"Better report on location of an Activity without default constructor\" (#1169) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1151\r\n\r\nEach Activity must have a default constructor or it won't be possible to\r\ninstantiate it from the android manifest. Should the constructor be missing we\r\ncurrently report the fact in a way that doesn't tell the developer where the\r\nerror occured. This is not very helpful.\r\n\r\nThis commit adds code to add the location of the offending source code, if\r\navailable, as well as changes the way we report the error - we no longer throw\r\nan exception but instead define a new error code, XA4213, and report it using\r\nthe standard MSBuild logger."},{"Id":"7077841811","Type":"IssuesEvent","CreatedAt":"2018-01-09T23:58:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1151","RelatedDescription":"Closed issue \"I can't compile this code.\" (#1151) at xamarin/xamarin-android","RelatedBody":"In Xamarin.android I am trying to compile \r\n\r\n```\r\n   public ArticleActivity(string path) : base()\r\n        {\r\n            _path = path;\r\n        }\r\n```\r\nor   \r\n```\r\n public ArticleActivity(string path)\r\n        {\r\n            _path = path;\r\n        }\r\n```\r\nNone of both compiling. The error is GenerateJavaSubs. This thing can be improved in visual studio tooling. At the first place it's not showing detail until I click on detail in errors. It could be better if It's show error on the same code where it's have issue.\r\n\r\n"},{"Id":"7077840261","Type":"PullRequestEvent","CreatedAt":"2018-01-09T23:58:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1173","RelatedDescription":"Merged pull request \"Bump to mono/2017-10/3f5fd428\" (#1173) at xamarin/xamarin-android","RelatedBody":"Implements a couple of `SocketAsyncEventArgs` methods.\r\nSets exception on `Finish*Failure()` in `SocketAsyncEventArgs`."},{"Id":"7077453257","Type":"PullRequestEvent","CreatedAt":"2018-01-09T22:06:07","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1174","RelatedDescription":"Opened pull request \"Preparation for the new test runner\" (#1174) at xamarin/xamarin-android","RelatedBody":"PR https://github.com/xamarin/xamarin-android/pull/1075 keeps rebuilding all the\r\nMono runtimes because the two files in this commit are part of the logic to\r\ndetermine whether to use cached Mono or not. The result isn't cached, because\r\nit's a PR builder, and so we keep waiting for 7h+ each time a smallest change is\r\nmade. This commit will cause Mono to be rebuilt and cached and, in turn, speed\r\nup round-trip time for PR 1075"},{"Id":"7077125047","Type":"PullRequestEvent","CreatedAt":"2018-01-09T20:49:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1173","RelatedDescription":"Opened pull request \"Bump to mono/2017-10/3f5fd428\" (#1173) at xamarin/xamarin-android","RelatedBody":"Implements a couple of `SocketAsyncEventArgs` methods.\r\nSets exception on `Finish*Failure()` in `SocketAsyncEventArgs`."},{"Id":"7077114582","Type":"PullRequestEvent","CreatedAt":"2018-01-09T20:47:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1172","RelatedDescription":"Opened pull request \"Bump to mono/2017-10/3f5fd428\" (#1172) at xamarin/xamarin-android","RelatedBody":"Implements a couple of `SocketAsyncEventArgs` methods.\r\nSets exception on `Finish*Failure()` in `SocketAsyncEventArgs`."},{"Id":"7077069000","Type":"IssuesEvent","CreatedAt":"2018-01-09T20:36:26","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1171","RelatedDescription":"Opened issue \"Warning [ObsoleteSdkInt] displayed when enabling lint checks in simple XA app\" (#1171) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Build a simple \"Hello World\" type application with /p:AndroidLintEnabled=true /p:AndroidUseLatestPlatformSdk=true\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nXamarin Android lint checks produce no warnings or errors for a simple 'template' style project.\r\n\r\n### Actual Behavior\r\nXA Lint checks now produce the following warning:\r\n```\r\n(_LintChecks target) -> \r\n  obj/Debug/android/src/mono/MonoPackageManager.java(85,6): warning XA0102:  Unnecessary; SDK_INT is always >= 10 [ObsoleteSdkInt] [/Users/petercollins/git/monodroid-samples/HelloWorld/HelloWorld.csproj]\r\n```\r\n\r\n### Version Information\r\n\r\nXA Version: 8.2.0.4\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.2\r\n\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-e3357168d0154e319154eb4c64863316.txt\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7076484185","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:20:07","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1170","RelatedDescription":"Opened issue \"No longer able to access `Android.Widget.AbsListView.ChoiceMode` when compiling against v2.3 in d15-6\" (#1170) at xamarin/xamarin-android","RelatedBody":"It appears that the ChoiceMode property of `Android.Widget.AbsListView` https://developer.android.com/reference/android/widget/AbsListView.html#setChoiceMode(int) is no longer accessible when comping against v2.3. This appears to be a regression introduced in d15-6.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the AccessoryViews monodroid sample - https://github.com/xamarin/monodroid-samples/tree/master/AccessoryViews\r\n2. Ensure you have SDK Platform Version 10 (2.3) installed, and attempt to build the project. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project builds without error when targeting v2.3. This succeeds using d15-5 builds:\r\nhttps://gist.githubusercontent.com/pjcollins/22ca1e9064404355a0d88e72bb25d929/raw/3d07327d36390d523ac74e1b7d32af4fc63c73f5/15.5%2520Output\r\n\r\n### Actual Behavior\r\nThe project fails to build against monodroid/d15-6:\r\nhttp://xqa.blob.core.windows.net/gist/report-c995421b88984113bef0729590cdf1cf.txt\r\n```\r\n(CoreCompile target) -> \r\n  HomeScreen.cs(31,16): error CS1061: 'ListView' does not contain a definition for 'ChoiceMode' and no extension method 'ChoiceMode' accepting a first argument of type 'ListView' could be found (are you missing a using directive or an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n  HomeScreen.cs(31,29): error CS0234: The type or namespace name 'ChoiceMode' does not exist in the namespace 'Android.Widget' (are you missing an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n```\r\nInterestingly enough, if I update the Target Framework version of my project to v4.0.3 or higher, the type can be resolved and the project builds successfully.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttps://gist.github.com/pjcollins/03e44af172a79acd68ccf2d25dd129ae\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7076345265","Type":"PullRequestEvent","CreatedAt":"2018-01-09T17:48:50","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1169","RelatedDescription":"Opened pull request \"Better report on location of an Activity without default constructor\" (#1169) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1151\r\n\r\nEach Activity must have a default constructor or it won't be possible to\r\ninstantiate it from the android manifest. Should the constructor be missing we\r\ncurrently report the fact in a way that doesn't tell the developer where the\r\nerror occured. This is not very helpful.\r\n\r\nThis commit adds code to add the location of the offending source code, if\r\navailable, as well as changes the way we report the error - we no longer throw\r\nan exception but instead define a new error code, XA4213, and report it using\r\nthe standard MSBuild logger."},{"Id":"7076303956","Type":"IssuesEvent","CreatedAt":"2018-01-09T17:39:57","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1134","RelatedDescription":"Reopened issue \"New APT0000 msbuild errors are being reported from aapt output parsing\" (#1134) at xamarin/xamarin-android","RelatedBody":"This was previously discussed, however there still appear to be some corner cases that weren't addressed by the latest relevant change in commit https://github.com/xamarin/xamarin-android/commit/2135856e.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/Xamarin.Android.JcwGen-Tests.csproj with msbuild.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild should succeed without incorrectly reporting aapt warnings as msbuild errors.\r\n\r\n### Actual Behavior\r\nBuild fails with the following:\r\n```\r\nExecuting package -f -m -M /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl/manifest/AndroidManifest.xml -J /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl --custom-package xamarin.android.jcwgen_tests -F /Users/xamarinqa/agent/_work/_temp/r0o3reuu.zcl/resources.apk.bk -S obj/Release/res/ -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/lp/3/jl/res -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/lp/5/jl/res -S /Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/obj/Release/resourcecache/6ECC701C56CAE8576696DE7B3605BB4A/res -j obj/Release/lp/4/jl/__reference__empty-1.jar -j obj/Release/lp/4/jl/__reference__empty-2.jar -j obj/Release/lp/4/jl/xamarin-test.jar -I /Users/xamarinqa/Library/Developer/Xamarin/android-sdk-macosx/platforms/android-10/android.jar --auto-add-overlay --max-res-version 10 (TaskId:1230)\r\naapt : error APT0000: max res 10, skipping values-sw720dp-land-v13 \"max res 10, skipping values-sw720dp-land-v13\". [/Users/xamarinqa/agent/_work/r5/a/xamarin-android/tests/CodeGen-Binding/Xamarin.Android.JcwGen-Tests/Xamarin.Android.JcwGen-Tests.csproj]\r\nDone executing task \"Aapt\" -- FAILED. (TaskId:1230)\r\n```\r\n\r\n### Version Information\r\nXA 8.2.0.0.\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-f69375a71be042929c3d54c25ecfd34b.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7077937619","Type":"IssuesEvent","CreatedAt":"2018-01-10T00:33:53","Actor":"kentcb","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1544","RelatedDescription":"Opened issue \"StackLayout with zero spacing is not always zero spacing\" (#1544) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nA `StackLayout` with `Spacing=\"0\"` will not always honor that spacing if it contains controls of certain heights.\r\n\r\n### Steps to Reproduce\r\n\r\n```XML\r\n    <StackLayout Spacing=\"0\">\r\n        <Label\r\n            HeightRequest=\"55.7\"/>\r\n\r\n        <BoxView\r\n            BackgroundColor=\"#433DBA\"\r\n            HeightRequest=\"10\"/>\r\n        <BoxView\r\n            BackgroundColor=\"#6461B7\"\r\n            HeightRequest=\"10\"/>\r\n        <BoxView\r\n            BackgroundColor=\"#433DBA\"\r\n            HeightRequest=\"10\"/>\r\n        <BoxView\r\n            BackgroundColor=\"#6461B7\"\r\n            HeightRequest=\"10\"/>\r\n        ...\r\n    </StackLayout>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nEach `BoxView` should be right up against the previous `BoxView` with no gaps.\r\n\r\n### Actual Behavior\r\n\r\nThere are gaps periodically in the children following the `Label` with height `55.7` (I am sure there are other heights that trigger the same behavior, but I didn't bother looking for them).\r\n\r\n### Basic Information\r\n\r\n- Version with issue: `2.5.0.121934`\r\n- Last known good version: N/A\r\n- IDE: VS\r\n- Platform Target Frameworks:\r\n  - Android: 8.0\r\n\r\n### Screenshots\r\n\r\n![screenshot_20180110-102148](https://user-images.githubusercontent.com/1901832/34750047-736371e2-f5f0-11e7-97bd-a5f570903649.png)\r\n\r\n### Reproduction Link\r\n\r\n[XFTestBed.zip](https://github.com/xamarin/Xamarin.Forms/files/1617115/XFTestBed.zip)\r\n"},{"Id":"7077102420","Type":"IssuesEvent","CreatedAt":"2018-01-09T20:44:19","Actor":"czuvich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1543","RelatedDescription":"Opened issue \"[iOS] Specified Cast Exception on TableView Scrolling\" (#1543) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nInvalidCastException is getting thrown when I create a TableView with various height cells that creates enough content to be scrolled. \r\n\r\n### Steps to Reproduce\r\n\r\nI've attached a repro project.\r\n\r\n1.  Just run the project on an iOS simulator/device\r\n2.  Scroll down to the bottom of the content quickly. Then quickly scroll back up to the top of the page.  \r\n3.  Repeat a few times until the top cell is dequeued.  It should throw the exception documented below.\r\n\r\n### Expected Behavior\r\n\r\nNo exception\r\n\r\n### Actual Behavior\r\n\r\nSystem.InvalidCastException: Specified cast is not valid.\r\n  at at (wrapper castclass) System.Object:__castclass_with_cache (object,intptr,intptr)\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.RendererPool.UpdateRenderers (Xamarin.Forms.Element newElement) [0x0008c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.RendererPool.UpdateNewElement (Xamarin.Forms.VisualElement newElement) [0x00080] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.SetElement (Xamarin.Forms.VisualElement oldElement, Xamarin.Forms.VisualElement newElement) [0x00050] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnRendererElementChanged (System.Object sender, Xamarin.Forms.Platform.iOS.VisualElementChangedEventArgs args) [0x0001c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x0002c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x00118] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ViewCellRenderer+ViewTableCell.UpdateCell (Xamarin.Forms.ViewCell cell) [0x000e5] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ViewCellRenderer+ViewTableCell.set_ViewCell (Xamarin.Forms.ViewCell value) [0x0000a] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ViewCellRenderer.GetCell (Xamarin.Forms.Cell item, UIKit.UITableViewCell reusableCell, UIKit.UITableView tv) [0x0004d] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.CellTableViewCell.GetNativeCell (UIKit.UITableView tableView, Xamarin.Forms.Cell cell, System.Boolean recycleCells, System.String templateId) [0x00080] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.TableViewModelRenderer.GetCell (UIKit.UITableView tableView, Foundation.NSIndexPath indexPath) [0x0001d] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n  at TestTableViewScroll.iOS.Application.Main (System.String[] args) [0x00001] in /Users/Clay/Media/work/centroid/scm/svn/vectortrax-mobile/trunk/mobile-app/xamarin_bugs/TestTableViewScroll/iOS/Main.cs:14\r\n\r\n\r\n### Basic Information\r\n\r\n- Forms 2.5.0.122203\r\n- Last known good version:  Forms 2.3 (I think) \r\n- IDE:  Visual Studio Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n\r\n### Screenshots\r\n\r\nNone\r\n\r\n### Reproduction Link\r\n\r\n[Repo.zip](https://github.com/xamarin/Xamarin.Forms/files/1616615/Repo.zip)\r\n"},{"Id":"7077026304","Type":"IssuesEvent","CreatedAt":"2018-01-09T20:26:13","Actor":"grammatn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1542","RelatedDescription":"Opened issue \"ListView update through another view throws exception\" (#1542) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nFoundation.MonoTouchException: Objective-C exception thrown.  Name: NSInternalInconsistencyException Reason: Invalid update: invalid number of rows in section 0.  The number of rows contained in an existing section after the update (1) must be equal to the number of rows contained in that section before the update (1), plus or minus the number of rows inserted or deleted from that section (0 inserted, 1 deleted) and plus or minus the number of rows moved into or out of that section (0 moved in, 0 moved out).\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x000000010f4cf12b __exceptionPreprocess + 171\r\n\t1   libobjc.A.dylib                     0x0000000110338f41 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x000000010f4d42f2 +[NSException raise:format:arguments:] + 98\r\n\t3   Foundation                          0x000000010cd6ad69 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 193\r\n\t4   UIKit                               0x0000000109e5e209 -[UITableView _endCellAnimationsWithContext:] + 19416\r\n\t5   UIKit                               0x0000000109e79075 -[UITableView endUpdates] + 75\r\n\t6   MyPasswords.iOS                     0x00000001098739b9 xamarin_dyn_objc_msgSend + 217\r\n\t7   ???                                 0x0000000127bb38c2 0x0 + 4961548482\r\n\r\n  at ObjCRuntime.Runtime.ThrowNSException (System.IntPtr ns_exception) [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/ObjCRuntime/Runtime.cs:362\r\n  at ObjCRuntime.Runtime.throw_ns_exception (System.IntPtr exc) [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/runtime/Delegates.generated.cs:130\r\n  at at (wrapper native-to-managed) ObjCRuntime.Runtime:throw_ns_exception (intptr)\r\n  at at (wrapper managed-to-native) ObjCRuntime.Messaging:void_objc_msgSend (intptr,intptr)\r\n  at UIKit.UITableView.EndUpdates () [0x00008] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/build/ios/native/UIKit/UITableView.g.cs:294\r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer.UpdateItems (System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Int32 section, System.Boolean resetWhenGrouped) [0x0015c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:771\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Boolean fixWindows) [0x0001a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:981\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:968\r\n  at Xamarin.Forms.ListProxy.OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:233\r\n  at Xamarin.Forms.ListProxy+<>c__DisplayClass33_0.<OnCollectionChanged>b__0 () [0x00018] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:206\r\n  at Xamarin.Forms.ListProxy.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x000a0] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:225\r\n  at Xamarin.Forms.ListProxy+WeakNotifyProxy.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00031] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:394\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000f] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:288\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:351\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].RemoveItem (System.Int32 index) [0x0002b] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:205\r\n  at System.Collections.ObjectModel.Collection`1[T].Remove (T item) [0x00027] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/collections/objectmodel/collection.cs:113\r\n  at MyPasswords.ViewModels.EntryViewModel+<VerifyIsFavorite>d__60.MoveNext () [0x00038] in /Users/XXX/Projects/MyPasswords/MyPasswords/ViewModels/EntryViewModel.cs:247\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152\r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018\r\n  at UIKit.UIKitSynchronizationContext+<Post>c__AnonStorey0.<>m__0 () [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIKitSynchronizationContext.cs:24\r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/Foundation/NSAction.cs:163\r\n  at at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n  at MyPasswords.iOS.Application.Main (System.String[] args) [0x00001] in /Users/XXX/Projects/MyPasswords/iOS/Main.cs:12\r\n\r\n### Steps to Reproduce\r\n\r\nI have A tabbed page and I have the same view in both of them with different data binding source (AllData and Favorites)\r\n\r\nI do two tests and one fails:\r\n\r\n1)\r\n\r\n- Open the app\r\n- Make directly a change from the alldata listview to the favorites listvew (click on the add to favorites button)\r\n\r\nThis one CRUSHES\r\n\r\n2) \r\n\r\n- Open the app\r\n- Click on the favorites tab\r\n- Click back on the alldata tab\r\n- Make a change as previous.\r\n\r\nThis one works and I don't understand why. I have saved the two objects in App and I use the App class to update the objects.\r\n\r\n### Expected Behavior\r\n\r\nTo update the Favorites listview\r\n\r\n### Actual Behavior\r\n\r\nThe app crushes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: > 2.3.4.270\r\n- Last known good version: 2.3.4.270 \r\n- IDE: Xamarin Studio\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7076107484","Type":"IssuesEvent","CreatedAt":"2018-01-09T16:59:03","Actor":"cmartino95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1540","RelatedDescription":"Opened issue \"Issue with ListView GroupHeaders on iOS\" (#1540) at xamarin/Xamarin.Forms","RelatedBody":"When creating a ListView with a custom GroupHeaderTemplate, even with separators turned off:\r\n\r\n` \r\nSeparatorColor=\"Transparent\"\r\nSeparatorVisibility=\"None\"   \r\n`\r\n\r\nA faint grey separator is visible below the group header separator, regardless of how you try remove it on iOS 11.\r\n\r\nThis is present on version 2.5.0.121934 of Xamarin.Forms.\r\n\r\nTo repo this issue, create a ListView with a custom GroupHeaderTemplate, then set the ListView background colour to a black/dark grey.\r\n\r\nThen create the following ListView structure;\r\n\r\nHeader\r\nListview item\r\nListview item\r\nHeader\r\nListview item\r\nListview item"},{"Id":"7075465237","Type":"IssuesEvent","CreatedAt":"2018-01-09T15:03:39","Actor":"gramland","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1539","RelatedDescription":"Opened issue \"SwitchRenderer - IF and ELSE IF evaluating the same condition\" (#1539) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIF and ELSE IF seems evaluating the same condition in class **SwitchRenderer**. \r\n\r\n### Steps to Reproduce\r\nIn file:\r\nXamarin.Forms/Xamarin.Forms.Platform.Android/Renderers/SwitchRenderer.cs\r\n\r\nAt line 26 inside method:\r\n`public override SizeRequest GetDesiredSize(int widthConstraint, int heightConstraint)`\r\n\r\nIt seems that Lines 33 and 36 are evaluating the same condition: \r\n**widthConstraint <= 0**\r\n\r\n```\r\nif (widthConstraint <= 0)\r\n    width = (int)Context.GetThemeAttributeDp(global::Android.Resource.Attribute.SwitchMinWidth);\r\nelse if (widthConstraint <= 0)\r\n    width = 100;\r\n```\r\n\r\nSince **widthConstraint** is not a function (that could return different values when called) \r\nbut a local variable, it will have the same value in both cases. Am I missing something?\r\n\r\nWhat is the original intention behind this?\r\nShould the second condition be changed?\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7078546649","Type":"PullRequestEvent","CreatedAt":"2018-01-10T04:39:46","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3192","RelatedDescription":"Opened pull request \"[SceneKit] Add AddAnimation overload that takes an ISCNAnimationProtocol\" (#3192) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3166\r\n\r\nApple broke `addAnimation:forKey:` API by changing `CAAnimation` parameter into a\r\n`ISCNAnimationProtocol` that was introduced in Xcode 9 (iOS 11 and company).\r\n\r\nWe can't break the existing API but we can add an overload that\r\nreuses the same selector with an sligthly twist in order to avoid\r\nAPI ambiguity (because `CAAnimation` conforms to `SCNAnimation`) the\r\n`key` parameter is being exposed as `string` and also being fixed\r\nin XAMCORE_4_0 this way. `key` being a string instead of a `NSSrring`\r\nmakes sense because the `key` is just an identifier for the animation\r\nand can be set to null so having a NET string vs a `NSString` should\r\nmake using this API a lot easier from a NET context.\r\n\r\nThe `new void AddAnimation` is used to force the generator\r\nto generate (^.^) the `CAAnimation, NSString` overload in the\r\nobjects that implement `ISCNAnimationProtocol` else you would get\r\na CS0535."},{"Id":"7078425880","Type":"PullRequestEvent","CreatedAt":"2018-01-10T03:44:46","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3191","RelatedDescription":"Opened pull request \"[tests][macos] Enable more tests to be executed on macOS (XM)\" (#3191) at xamarin/xamarin-macios","RelatedBody":"Largely related to somewhat recent frameworks/API additions to XM"},{"Id":"7078231981","Type":"PullRequestEvent","CreatedAt":"2018-01-10T02:25:29","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3190","RelatedDescription":"Opened pull request \"[macos][gameplaykit] Add missing 'unapplyGameModelUpdate:' API for XM\" (#3190) at xamarin/xamarin-macios","RelatedBody":"xtro data updated"},{"Id":"7078036523","Type":"IssuesEvent","CreatedAt":"2018-01-10T01:10:43","Actor":"lobrien","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3189","RelatedDescription":"Opened issue \"UIView.DisplayLayer(CALayer) is (correctly) an unrecognized selector\" (#3189) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xam.iOS app\r\n2. In `ViewController.ViewDidLoad` add:\r\n```\r\n    var l = new CALayer();\r\n    this.View.DisplayLayer(l);\r\n```\r\n\r\n3. Run and receive an `NSInvalidArgumentException` with Reason \"Unrecognized selector\" `UIView displayLayer:` \r\n\r\n### Expected Behavior\r\n\r\nNo exception. BUT I actually think this is a binding mistake and `DisplayLayer(CALayer)` should not be in `UIView`, as there is not a corresponding Obj-C / Swift method. (There _is_ such a method in `CALayerDelegate`). \r\n\r\n### Actual Behavior\r\n\r\nException thrown\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: 6b94f136-026d-4a5a-bf6d-af2c0d8dc019\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.3/Sdks\r\nSDK Versions:\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13768)\r\nBuild 9C34b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/larryobrien/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 25.0.3\r\nSDK Build Tools Version: 26.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_144\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_144-b01)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0-rc1\r\nHash: 7f3bf81\r\nBranch: master\r\nBuild date: Fri, 22 Dec 2017 22:04:38 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703020012\r\nGit revision: 7d0c9d7ad46b125cf4b7bbf9532c0531b6433ce6\r\nBuild date: 2017-12-12 14:03:18-05\r\nXamarin addins: 6dddaa49fbecb2695fcdcd6b712eb269e288518c\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n[UIView0.zip](https://github.com/xamarin/xamarin-macios/files/1617187/UIView0.zip)\r\n\r\n"},{"Id":"7077517854","Type":"PullRequestEvent","CreatedAt":"2018-01-09T22:21:51","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3188","RelatedDescription":"Merged pull request \"Revert \"[macos] Fix pdb mismatch when saving assemblies processed by mmp (#2901)\"\" (#3188) at xamarin/xamarin-macios","RelatedBody":"This reverts commit 91ded43b0b13025f4d6583e4571f1af002517348.\n\nDiscussed in https://bugzilla.xamarin.com/show_bug.cgi?id=60923"},{"Id":"7077348459","Type":"PullRequestEvent","CreatedAt":"2018-01-09T21:42:10","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3186","RelatedDescription":"Merged pull request \"bump for preview 3\" (#3186) at xamarin/xamarin-macios","RelatedBody":"Commit list for xamarin/Xamarin.MacDev:\n\n* xamarin/Xamarin.MacDev@e08b3ad D15 6 entitlements (#21)\n\nDiff: https://github.com/xamarin/Xamarin.MacDev/compare/2cff0d741273341d156de6ce6095808126effd3b...e08b3ad722f9c0999398ba72a0b309b4f8e2181c\n\nCommit list for mono/mono:\n\n* mono/mono@3f5fd4287be [System] Set exception on Finish*Failure in SocketAsyncEventArgs (#6462)\n* mono/mono@253f2e9b27e Implement a couple of SocketAsyncEventArgs methods\n\nDiff: https://github.com/mono/mono/compare/e70439f1868fc29e5b649c89222829f02fc886d3...3f5fd4287be28a32314262a6f8dcb5bdde86e0b1"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"950803363595243521","CreatedAt":"2018-01-09T18:56:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/V8JfqCj42s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":20,"RawContent":null},{"Id":"950774673335341058","CreatedAt":"2018-01-09T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/G6BluXZvLM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":58,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":18,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":105,"FavoriteCount":47,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"949323858972233734","CreatedAt":"2018-01-05T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":21,"RawContent":null},{"Id":"948981959132368901","CreatedAt":"2018-01-04T18:18:24+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/VAkrZo84pP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":39,"RawContent":null},{"Id":"948961974766972934","CreatedAt":"2018-01-04T16:59:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":16,"RawContent":null},{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":6,"RawContent":null},{"Id":"948604119945760768","CreatedAt":"2018-01-03T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/tuqMBJJWpq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"948294578192437248","CreatedAt":"2018-01-02T20:47:00+00:00","UserScreenname":"xamarinhq","Text":"Did your favorite make the cut? Get the full list of the top #Xamarin blog posts of 2017, and see the top post of t… https://t.co/dVcXEnCo7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"947216981937319938","CreatedAt":"2017-12-30T21:25:01+00:00","UserScreenname":"xamarinhq","Text":"The countdown is winding down! Post No. 2 in the #12DaysofXamarin walks you through implementing push notifications… https://t.co/uiyyYhL6zW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"946830183532724235","CreatedAt":"2017-12-29T19:48:01+00:00","UserScreenname":"xamarinhq","Text":"Just getting started with #XamarinForms? Let PM @davidortinau show you how to beat the learning curve in post No. 3… https://t.co/0y63QrYo5f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":20,"RawContent":null},{"Id":"946788653736583169","CreatedAt":"2017-12-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":15,"RawContent":null},{"Id":"946472572895588353","CreatedAt":"2017-12-28T20:07:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with C# 7 with @jamesmontemagno in the 4th post in our #12DaysofXamarin countdown: https://t.co/nWuAmDsr0R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":31,"RawContent":null},{"Id":"946430293401067521","CreatedAt":"2017-12-28T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/VlbopDlbd6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":21,"RawContent":null},{"Id":"946110438961541121","CreatedAt":"2017-12-27T20:08:01+00:00","UserScreenname":"xamarinhq","Text":"Our eBook on building \"Enterprise Application Patterns using #XamarinForms\" takes the 5th spot in our… https://t.co/HPidr9WU7g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":56,"RawContent":null},{"Id":"946049788914683905","CreatedAt":"2017-12-27T16:07:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/YpY9vtHgsp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":17,"RawContent":null}]}},"RunOn":"2018-01-10T05:30:38.5020095Z","RunDurationInMilliseconds":4004}