{"Data":{"GitHub":{"Issues":[{"Id":"515426229","IsPullRequest":true,"CreatedAt":"2019-11-03T23:36:01","Actor":"VPeruS","Number":"2255","RawContent":null,"Title":"Remove assignment duplication","State":"closed","Body":"\r\n## Proposed changes\r\n\r\n-  Removes second assignment to _formattingEnabled which duplicates [this one](https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms/src/System/Windows/Forms/Binding.cs#L82)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2255)","Url":"https://github.com/dotnet/winforms/pull/2255","RelatedDescription":"Closed or merged PR \"Remove assignment duplication\" (#2255)"},{"Id":"516257569","IsPullRequest":true,"CreatedAt":"2019-11-03T23:22:42","Actor":"gpetrou","Number":"2267","RawContent":null,"Title":"Add GW enum and GetWindow methods to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add GW enum in User32.\r\n- Add GetWindow methods in User32.\r\n- Remove obsolete constants and methods from NativeMethods.cs and UnsafeNativeMethods.cs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2267)","Url":"https://github.com/dotnet/winforms/pull/2267","RelatedDescription":"Closed or merged PR \"Add GW enum and GetWindow methods to Interop User32\" (#2267)"},{"Id":"516557148","IsPullRequest":true,"CreatedAt":"2019-11-03T23:17:29","Actor":"gpetrou","Number":"2269","RawContent":null,"Title":"Remove unused DeviceContextLayout enum and LAYOUT constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove unused DeviceContextLayout enum.\r\n- Remove unused LAYOUT constants.\r\n- Looking at the codebase there are no native methods that use these constants such as SetProcessDefaultLayout or SetLayout.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2269)","Url":"https://github.com/dotnet/winforms/pull/2269","RelatedDescription":"Closed or merged PR \"Remove unused DeviceContextLayout enum and LAYOUT constants\" (#2269)"},{"Id":"516566738","IsPullRequest":true,"CreatedAt":"2019-11-03T23:16:29","Actor":"hughbe","Number":"2270","RawContent":null,"Title":"Don't recreate the handle twice in TabControl.Alignment setter","State":"closed","Body":"## Proposed Changes\r\n- The setter for `Multiline` calls `RecreateHandle`\r\n\r\n```cs\r\npublic bool Multiline\r\n{\r\n    get => GetState(State.Multiline);\r\n    set\r\n    {\r\n        if (Multiline != value)\r\n        {\r\n            SetState(State.Multiline, value);\r\n            if (Multiline == false && (_alignment == TabAlignment.Left || _alignment == TabAlignment.Right))\r\n            {\r\n                _alignment = TabAlignment.Top;\r\n            }\r\n\r\n            RecreateHandle();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut the setter for `Alignment` does this too\r\n```cs\r\n[\r\nSRCategory(nameof(SR.CatBehavior)),\r\nLocalizable(true),\r\nDefaultValue(TabAlignment.Top),\r\nRefreshProperties(RefreshProperties.All),\r\nSRDescription(nameof(SR.TabBaseAlignmentDescr))\r\n]\r\npublic TabAlignment Alignment\r\n{\r\n    get\r\n    {\r\n        return _alignment;\r\n    }\r\n\r\n    set\r\n    {\r\n        if (_alignment != value)\r\n        {\r\n            //valid values are 0x0 to 0x3\r\n            if (!ClientUtils.IsEnumValid(value, (int)value, (int)TabAlignment.Top, (int)TabAlignment.Right))\r\n            {\r\n                throw new InvalidEnumArgumentException(nameof(value), (int)value, typeof(TabAlignment));\r\n            }\r\n\r\n            _alignment = value;\r\n            if (_alignment == TabAlignment.Left || _alignment == TabAlignment.Right)\r\n            {\r\n                SetState(State.Multiline, true);\r\n            }\r\n\r\n            RecreateHandle();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAvoid recreating the handle twice\r\n\r\nFixes #2047\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2270)","Url":"https://github.com/dotnet/winforms/pull/2270","RelatedDescription":"Closed or merged PR \"Don't recreate the handle twice in TabControl.Alignment setter\" (#2270)"},{"Id":"516080318","IsPullRequest":true,"CreatedAt":"2019-11-03T21:45:15","Actor":"dotnet-maestro[bot]","Number":"2264","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191102.7\r\n- **Date Produced**: 11/3/2019 5:13 AM\r\n- **Commit**: c44971014fde97523f6511b4fadb8c1f2c105a44\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19552.7\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19552.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19552.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2264)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2264","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2264)"},{"Id":"516867801","IsPullRequest":false,"CreatedAt":"2019-11-03T18:18:16","Actor":"hughbe","Number":"2275","RawContent":null,"Title":"TabPageCollection.Clear forces Handle creation","State":"open","Body":"```cs\r\n        protected void RemoveAll()\r\n        {\r\n            Controls.Clear();\r\n\r\n            SendMessage(NativeMethods.TCM_DELETEALLITEMS, 0, 0);\r\n            _tabPages = null;\r\n            _tabPageCount = 0;\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/2275","RelatedDescription":"Open issue \"TabPageCollection.Clear forces Handle creation\" (#2275)"},{"Id":"516595041","IsPullRequest":true,"CreatedAt":"2019-11-03T13:58:27","Actor":"hughbe","Number":"2271","RawContent":null,"Title":"Remove dead code from Control.PerformLayout","State":"closed","Body":"## Proposed Changes\r\n- Remove `args != null` check\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2271)","Url":"https://github.com/dotnet/winforms/pull/2271","RelatedDescription":"Closed or merged PR \"Remove dead code from Control.PerformLayout\" (#2271)"},{"Id":"516071837","IsPullRequest":true,"CreatedAt":"2019-11-03T13:51:51","Actor":"dotnet-maestro[bot]","Number":"2263","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 12:43 PM\r\n- **Commit**: bfa46e9e624cc148bd5c6b7af63f52f6e1d48c8d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19552.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2263)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2263","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2263)"},{"Id":"516764329","IsPullRequest":true,"CreatedAt":"2019-11-03T06:17:53","Actor":"dotnet-maestro[bot]","Number":"2274","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.1.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.1.0-preview3.19531.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.1.0-preview3.19531.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2274)","Url":"https://github.com/dotnet/winforms/pull/2274","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#2274)"},{"Id":"516652867","IsPullRequest":true,"CreatedAt":"2019-11-02T16:46:57","Actor":"hughbe","Number":"2273","RawContent":null,"Title":"Add ControlCollection tests","State":"open","Body":"## Proposed Changes\r\n- Add `ControlCollection` tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2273)","Url":"https://github.com/dotnet/winforms/pull/2273","RelatedDescription":"Open PR \"Add ControlCollection tests\" (#2273)"},{"Id":"516631064","IsPullRequest":true,"CreatedAt":"2019-11-02T15:34:13","Actor":"hughbe","Number":"2272","RawContent":null,"Title":"Cleanup GetParent interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup GetParent interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2272)","Url":"https://github.com/dotnet/winforms/pull/2272","RelatedDescription":"Open PR \"Cleanup GetParent interop\" (#2272)"},{"Id":"516329021","IsPullRequest":true,"CreatedAt":"2019-11-01T20:26:01","Actor":"gpetrou","Number":"2268","RawContent":null,"Title":"Add TVHT enum in Interop ComCtl32 and remove corresponding constants …","State":"open","Body":"…from NativeMethods.cs\r\n\r\n## Proposed changes\r\n\r\n- Add TVHT enum.\r\n- Remove TVHT constants and replaces their usages with the above enum.\r\n- Update TV_HITTESTINFO definition.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2268)","Url":"https://github.com/dotnet/winforms/pull/2268","RelatedDescription":"Open PR \"Add TVHT enum in Interop ComCtl32 and remove corresponding constants …\" (#2268)"},{"Id":"516236000","IsPullRequest":true,"CreatedAt":"2019-11-01T17:04:47","Actor":"gpetrou","Number":"2266","RawContent":null,"Title":"Move KeyboardLayout methods to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Move KeyboardLayout methods to Interop User32 and update their usages.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2266)","Url":"https://github.com/dotnet/winforms/pull/2266","RelatedDescription":"Open PR \"Move KeyboardLayout methods to Interop User32\" (#2266)"},{"Id":"516135399","IsPullRequest":true,"CreatedAt":"2019-11-01T14:09:35","Actor":"M-Lipin","Number":"2265","RawContent":null,"Title":"Porting ToolStripCollectionEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1282 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Ported ToolStripCollectionEditor.\r\n- Moved majority of collection editors from Design.Editors to Design project due to referencing internal classes.\r\n- Moving resources Design.Editors to Design project.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Users will be able to edit ToolStripItem collection via ToolStripCollectionEditor in .NET Core WinForms.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nUser can see only object collection editor when editing the list of ToolStripItems.\r\n\r\n### After\r\n\r\nUser can see ToolStripCollectionEditor when editing the list of ToolStripItems.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit testing (to be implemented);\r\n- UI Automation tests (to be implemented, run).\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\nNet Core version: 3.1.0-preview1.19458.7\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2265)","Url":"https://github.com/dotnet/winforms/pull/2265","RelatedDescription":"Open PR \"Porting ToolStripCollectionEditor\" (#2265)"},{"Id":"516066234","IsPullRequest":true,"CreatedAt":"2019-11-01T11:48:41","Actor":"chenxinyanc","Number":"2262","RawContent":null,"Title":"Check for the return value of native SetParent calls in Control class","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2163\r\n\r\n\r\n## Proposed changes\r\n* Check for the return value and GetLastError in `RecreateHandleCore` and `SetParentHandle` methods.\r\n* Did not add the UT for this yet, because when `Control.CreateHandle` calls `Application.ParkHandle`, it does not specify the DPI awareness (`DPI_AWARENESS_CONTEXT_UNSPECIFIED`), so `ParkHandle` will choose a parking window for `UNSPECIFIED` awareness context. When constructing the parking window for `UNSPECIFIED` context, the DPI awareness of current thread will be used (e.g. PerMonitorV2). This will causes the subsequently **parked** window uses the very same DPI awareness setting, regardless of their owning thread's current DPI awareness at the point of control instance / handle construction.\r\n    * I'm not sure whether it's by design or not, but perhaps we need to specify the DPI awareness explicitly when calling `ParkHandle` in `CreateHandle` method.\r\n    * Nevertheless, I've tested the behavior with https://github.com/chenxinyanc/WinFormSetParentTest and it throws `Win32Exception` accordingly.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2262)","Url":"https://github.com/dotnet/winforms/pull/2262","RelatedDescription":"Open PR \"Check for the return value of native SetParent calls in Control class\" (#2262)"},{"Id":"515237632","IsPullRequest":true,"CreatedAt":"2019-11-01T11:21:52","Actor":"gpetrou","Number":"2250","RawContent":null,"Title":"Add DFC and DFCS enums, remove corresponding constants and move DrawFrameControl to User32 Interop","State":"closed","Body":"## Proposed changes\r\n\r\n- Add DFC and DFCS enums.\r\n- Remove DFC and DFCS constants and replace their usages with the above enums.\r\n- Move DrawFrameControl to User32 Interop.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2250)","Url":"https://github.com/dotnet/winforms/pull/2250","RelatedDescription":"Closed or merged PR \"Add DFC and DFCS enums, remove corresponding constants and move DrawFrameControl to User32 Interop\" (#2250)"},{"Id":"514820109","IsPullRequest":true,"CreatedAt":"2019-11-01T10:28:33","Actor":"hughbe","Number":"2246","RawContent":null,"Title":"Cleanup IOleInPlaceSite","State":"closed","Body":"## Proposed Changes\r\n- Cleanup IOleInPlaceSite\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2246)","Url":"https://github.com/dotnet/winforms/pull/2246","RelatedDescription":"Closed or merged PR \"Cleanup IOleInPlaceSite\" (#2246)"},{"Id":"515367433","IsPullRequest":true,"CreatedAt":"2019-11-01T10:26:16","Actor":"hughbe","Number":"2251","RawContent":null,"Title":"Structify more ListView messages","State":"closed","Body":"## Proposed Changes\r\n- Structify NMLVKEYDOWN\r\n- Structify NMLVCACHEHINT\r\n- Cleanup NMLVODSTATECHANGE\r\n- Structify NMLVGETINFOTIPW\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2251)","Url":"https://github.com/dotnet/winforms/pull/2251","RelatedDescription":"Closed or merged PR \"Structify more ListView messages\" (#2251)"},{"Id":"515396614","IsPullRequest":true,"CreatedAt":"2019-11-01T10:23:18","Actor":"hughbe","Number":"2254","RawContent":null,"Title":"Cleanup IsChild interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup IsChild interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2254)","Url":"https://github.com/dotnet/winforms/pull/2254","RelatedDescription":"Closed or merged PR \"Cleanup IsChild interop\" (#2254)"},{"Id":"515539841","IsPullRequest":true,"CreatedAt":"2019-11-01T10:17:33","Actor":"hughbe","Number":"2259","RawContent":null,"Title":"Structify LOGPALETTE","State":"closed","Body":"## Proposed Changes\r\n- Structify LOGPALETTE\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2259)","Url":"https://github.com/dotnet/winforms/pull/2259","RelatedDescription":"Closed or merged PR \"Structify LOGPALETTE\" (#2259)"},{"Id":"515996710","IsPullRequest":true,"CreatedAt":"2019-11-01T09:15:04","Actor":"gpetrou","Number":"2261","RawContent":null,"Title":"[WIP] Consolidate PARAM methods","State":"open","Body":"##  Proposed changes\r\n\r\n- Consolidate PARAM methods\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2261)","Url":"https://github.com/dotnet/winforms/pull/2261","RelatedDescription":"Open PR \"[WIP] Consolidate PARAM methods\" (#2261)"},{"Id":"515376124","IsPullRequest":true,"CreatedAt":"2019-11-01T04:53:23","Actor":"dotnet-maestro[bot]","Number":"2252","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191030.15\r\n- **Date Produced**: 10/31/2019 12:30 AM\r\n- **Commit**: 35c10b82920baacbb3945fd952a0e49c4caec708\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19530.15\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2252)","Url":"https://github.com/dotnet/winforms/pull/2252","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2252)"},{"Id":"515840225","IsPullRequest":true,"CreatedAt":"2019-11-01T00:40:58","Actor":"chcosta","Number":"2260","RawContent":null,"Title":"Validate disable bootstrap changes","State":"closed","Body":"Validating https://github.com/dotnet/arcade/pull/4265, is non breaking for this repo, no intention of merging.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2260)","Url":"https://github.com/dotnet/winforms/pull/2260","RelatedDescription":"Closed or merged PR \"Validate disable bootstrap changes\" (#2260)"},{"Id":"514832913","IsPullRequest":true,"CreatedAt":"2019-10-31T23:33:38","Actor":"M-Lipin","Number":"2247","RawContent":null,"Title":"DataGridViewEditingControl: Adding null reference check for parent DataGridView control","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2138 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding null reference check to DataGridView editing controls (DataGridViewComboBoxEditingControl, DataGridViewTextBoxEditingControl) to their OnHandleCreated method to prevent throwing null reference exception when the controls are outside of DataGridView control (developers potentially may put these controls anywhere on the Form)\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Users will not experience the exception in case DataGridView editing controls are outside the DataGridView control.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n  at System.Windows.Forms.DataGridViewComboBoxEditingControl.OnHandleCreated(EventArgs e) in /_/src/System.Windows.Forms/src/System/Windows/Forms/DataGridViewComboBoxEditingControl.cs:line 164\r\n   at System.Windows.Forms.Control.WmCreate(Message& m) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs:line 12452\r\n   at System.Windows.Forms.Control.WndProc(Message& m) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs:line 13486\r\n   at System.Windows.Forms.ComboBox.WndProc(Message& m) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ComboBox.cs:line 4051\r\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Control.ControlNativeWindow.cs:line 65\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Control.ControlNativeWindow.cs:line 113\r\n   at System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam) in /_/src/System.Windows.Forms/src/System/Windows/Forms/NativeWindow.cs:line 626\r\n```\r\n\r\n### After\r\n\r\nNo exception\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI Automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\nNet Core version: 3.1.0-preview1.19458.7\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2247)","Url":"https://github.com/dotnet/winforms/pull/2247","RelatedDescription":"Closed or merged PR \"DataGridViewEditingControl: Adding null reference check for parent DataGridView control\" (#2247)"},{"Id":"514849995","IsPullRequest":true,"CreatedAt":"2019-10-31T23:32:56","Actor":"M-Lipin","Number":"2248","RawContent":null,"Title":"Fixing UI and accessibility regression in DataGridView editing cell","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2036 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Prevented accessible restructuring for the editing controls with custom accessible hierarchy (like masked editing control or IP editing control which may have several children under the cell) - in this case control WM processing can be broken on recreating handle.\r\n- Added check for known editing controls (ComboBox and TextBox) - these controls' and DataGridView cell hierarchy should be updated in case there are multiple columns of the same type in the DataGridView.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- User will experience correct accessibility hierarchy of DataGridView cell and will not experience issues with incorrect handling of Window messages related to incorrect accessibility restructuring.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n- Incorrect accessibility hierarchy and broken visual representation of some custom editing controls.\r\n\r\n### After\r\n\r\n- Correct hierarchy and no UI issues.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\nNet Core version: 3.1.0-preview1.19458.7\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2248)","Url":"https://github.com/dotnet/winforms/pull/2248","RelatedDescription":"Closed or merged PR \"Fixing UI and accessibility regression in DataGridView editing cell\" (#2248)"},{"Id":"515389521","IsPullRequest":true,"CreatedAt":"2019-10-31T23:32:06","Actor":"dotnet-maestro[bot]","Number":"2253","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.10\r\n- **Date Produced**: 10/31/2019 8:47 AM\r\n- **Commit**: d7830341bb37df45e96f3677e2e4c74d4869fc35\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19530.10\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.19530.13 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2253)","Url":"https://github.com/dotnet/winforms/pull/2253","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2253)"},{"Id":"515504999","IsPullRequest":true,"CreatedAt":"2019-10-31T15:03:59","Actor":"hughbe","Number":"2258","RawContent":null,"Title":"Structify TCITEM","State":"open","Body":"## Proposed Changes\r\n- Make blittable\r\n- Structify\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2258)","Url":"https://github.com/dotnet/winforms/pull/2258","RelatedDescription":"Open PR \"Structify TCITEM\" (#2258)"},{"Id":"515490744","IsPullRequest":true,"CreatedAt":"2019-10-31T14:45:29","Actor":"hughbe","Number":"2257","RawContent":null,"Title":"Cleanup WC_ constants","State":"open","Body":"## Proposed Changes\r\n- Cleanup WC_ constants\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2257)","Url":"https://github.com/dotnet/winforms/pull/2257","RelatedDescription":"Open PR \"Cleanup WC_ constants\" (#2257)"},{"Id":"515490191","IsPullRequest":true,"CreatedAt":"2019-10-31T14:44:46","Actor":"hughbe","Number":"2256","RawContent":null,"Title":"Cleanup TCS_ constants","State":"open","Body":"## Proposed Changes\r\nCleanup TCS_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2256)","Url":"https://github.com/dotnet/winforms/pull/2256","RelatedDescription":"Open PR \"Cleanup TCS_ constants\" (#2256)"},{"Id":"514937822","IsPullRequest":true,"CreatedAt":"2019-10-31T00:25:48","Actor":"hughbe","Number":"2249","RawContent":null,"Title":"Structify NMCUSTOMDRAW and dependencies","State":"closed","Body":"## Proposed Changes\r\n- Cleanup `NMCUSTOMDRAW` (including `CDDS_`, `CDIS_` and `CDRF_` constants)\r\n- Cleanup `NMLVCUSTOMDRAW` (including `LVCDI_` and `LVGA_` constants)\r\n- Structify `NMTVCUSTOMDRAW`\r\n- Structify `LVGROUP` (including `LVGF_` and `LVGS_` constants)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2249)","Url":"https://github.com/dotnet/winforms/pull/2249","RelatedDescription":"Closed or merged PR \"Structify NMCUSTOMDRAW and dependencies\" (#2249)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-04T05:30:55.188441Z","RunDurationInMilliseconds":739}