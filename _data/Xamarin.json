{"Data":{"Blog":{"FeedItems":[{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9565530022","Type":"PullRequestEvent","CreatedAt":"2019-05-05T13:15:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3025","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] first styleable resource id is always incorrect\" (#3025) at xamarin/xamarin-android","RelatedBody":"Fixes #3049\r\n\r\nThis commit also reworks the id generation of the\r\n`ManagedResourceParser` to try replicate the\r\nids which `aapt2` produces. As a result if the managed\r\nparser generates the code from the `R.txt` file or\r\ndirectly from the resources, the resulting designer.cs\r\nfile will be identical most of the time. There does seem\r\nto be an odd ordering issue where the R.txt file does\r\nnot seem to order the items by name as the Id's are \r\nsometimes switched. "},{"Id":"9565530018","Type":"IssuesEvent","CreatedAt":"2019-05-05T13:15:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3049","RelatedDescription":"Closed issue \"[AAPT2] first styleable resource id is always incorrect\" (#3049) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new android project. Android Options: \r\n- shared runtime + fast deployment\r\n- multi dex on\r\n- dex compiler d8\r\n- code shrinker proguard (i'm unable to run any app when using r8 even in debug mode)\r\n- enable debugger\r\n- use concurrent garbage collector\r\n- linking none\r\n- compile with android 9\r\n2. Create a simple android custom control, add a styleable android resource, and use the custom control in the android layout, specifying one of the styleable resource in its attributes.\r\n```xml\r\nEx using the custom \"MvxBind\" styleable attribute.\r\n\r\n        <TextView\r\n            app:MvxBind=\"VisibilityNoAnim InvertedBool(IsInternetAvailable)\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"InternetDisconnected\"\r\n />\r\n```\r\n3. Compile and debug\r\n\r\n```xml\r\n<resources>\r\n  <declare-styleable name=\"MvxImageView2\">\r\n    <attr name=\"throttle\" format=\"integer\"/>\r\n    <attr name=\"imageUrl\" format=\"string\"/>\r\n    <attr name=\"imageViewTraceEnabled\" format=\"boolean\"/>\r\n    <attr name=\"throttleSvg\" format=\"string\"/>\r\n  </declare-styleable>\r\n</resources>\r\n```\r\n\r\n```csharp\r\n        using R = ReproApp.Resource;\r\n\r\n...\r\n\r\n        [Android.Runtime.Preserve]\r\n        public MvxImageView2(Context context, IAttributeSet attrs, int defStyleAttr, int defStyleRes) : base(context, attrs, defStyleAttr, defStyleRes)\r\n        {\r\n            if (attrs != null)\r\n            {\r\n                using (var a = context.ObtainStyledAttributes(attrs, R.Styleable.MvxImageView2, defStyleAttr, defStyleRes))\r\n                {\r\n                    TraceEnabled = a.GetBoolean(R.Styleable.MvxImageView2_imageViewTraceEnabled, TraceEnabled);\r\n                    ImageLoadThrottleMilliseconds = a.GetInt(R.Styleable.MvxImageView2_throttle, ImageLoadThrottleMilliseconds);\r\n                    ImageUrl = a.GetString(R.Styleable.MvxImageView2_imageUrl) ?? ImageUrl;\r\n                    throttleSvg = a.GetString(R.Styleable.MvxImageView2_throttleSvg);\r\n                    a.Recycle();\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n```xml\r\n\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n        <MvxImageView2\r\n            app:traceEnabled=\"false\"\r\n            android:src=\"@android:drawable/ic_menu_gallery\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n />\r\n\r\n...\r\n```\r\n\r\n### Expected Behavior\r\n\r\nR.Styleable.MvxImageView2_imageViewTraceEnabled and all other constants except  R.Styleable.MvxImageView should have a value from between 0 and 3.\r\n\r\n### Actual Behavior\r\n\r\nAll the custom styleable constants (except  R.Styleable.MvxImageView) have a value between 0 and 3 except one whose value is negative (if it was an uint, it would be over 2147483648).\r\n\r\nThus the constant is never found in the typedarray and the call crash the app with an ArrayIndexOutOfBoundsException.\r\n\r\nI have reproduce the issue with the custom attributes of mvvmcross, with XamSvg, and a custom image control.\r\n\r\nThe workaround is to disable AAPT2.\r\n\r\n### Version Information\r\n\r\nVS2019 16.1.0 preview 2\r\n\r\n[versioninfo.txt](https://github.com/xamarin/xamarin-android/files/3132418/versioninfo.txt)\r\n\r\n### Log File\r\n\r\n```\r\n04-30 11:50:11.080 19485 19485 I mono-stdout: (MvxBind) #1/L18:Error:java.lang.ArrayIndexOutOfBoundsException: length=726; index=-100260048\r\n04-30 11:50:11.080 19485 19485 I mono-stdout: (MvxBind) #1/L19:Error:   at android.content.res.TypedArray.getString(TypedArray.java:198)\r\n```\r\n"},{"Id":"9562296519","Type":"PullRequestEvent","CreatedAt":"2019-05-04T07:41:13","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3069","RelatedDescription":"Closed pull request \"[tests] Kill adb server before test instrumentation\" (#3069) at xamarin/xamarin-android","RelatedBody":"This will force adb to restart the server, so we should have fresh adb\r\nfor `adb shell am instrument ...`. Hopefully it will help with crashes\r\nof `Mono.Android_Tests` test, we are seeing frequently on Jenkins."},{"Id":"9561861833","Type":"PullRequestEvent","CreatedAt":"2019-05-04T02:54:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3071","RelatedDescription":"Merged pull request \"[tests] Increase the emulator RAM size to 3GB\" (#3071) at xamarin/xamarin-android","RelatedBody":"Recently some/many of the tests run out of memory on Jenkins. So lets\r\ntry to increase the emulator memory size to see whether it will help.\r\n\r\nThe emulator is created for every build on CI, like this:\r\n\r\n    Using \"CreateAndroidEmulator\" task from assembly \"/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/../../bin/BuildRelease/Xamarin.Android.Tools.BootstrapTasks.dll\".\r\n    Task \"CreateAndroidEmulator\" (TaskId:110)\r\n      Task Parameter:AndroidAbi=x86 (TaskId:110)\r\n      Task Parameter:AndroidSdkHome=/Users/builder/android-toolchain/sdk (TaskId:110)\r\n      Task Parameter:SdkVersion=28 (TaskId:110)\r\n      Task Parameter:ImageName=XamarinAndroidTestRunner (TaskId:110)\r\n      Task Parameter:ToolExe=avdmanager (TaskId:110)\r\n      Task Parameter:ToolPath=/Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Task Parameter:RamSizeMB=2048 (TaskId:110)\r\n      Task Parameter:DataPartitionSizeMB=4096 (TaskId:110)\r\n      Task CreateAndroidEmulator (TaskId:110)\r\n        AndroidAbi: x86 (TaskId:110)\r\n        AndroidSdkHome: /Users/builder/android-toolchain/sdk (TaskId:110)\r\n        JavaSdkHome:  (TaskId:110)\r\n        ImageName: XamarinAndroidTestRunner (TaskId:110)\r\n        SdkVersion: 28 (TaskId:110)\r\n        TargetId: system-images;android-28;default;x86 (TaskId:110)\r\n        ToolExe: avdmanager (TaskId:110)\r\n        ToolPath: /Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Tool /Users/builder/android-toolchain/sdk/tools/bin/avdmanager execution started with arguments: create avd --abi x86 -f -n XamarinAndroidTestRunner --package \"system-images;android-28;default;x86\" (TaskId:110)\r\n      Environment variables being passed to the tool: (TaskId:110)\r\n            ANDROID_SDK_HOME=\"/Users/builder/android-toolchain/sdk\" (TaskId:110)\r\n    Done executing task \"CreateAndroidEmulator\". (TaskId:110)\r\n\r\nExample out of memory test run:\r\n\r\n    I xUnit   : Test collection finished (TaskId:51)\r\n    I xUnit   :    Time: 0 (TaskId:51)\r\n    I xUnit   :    Total tests run: 0 (TaskId:51)\r\n    I xUnit   :    Skipped tests: 0 (TaskId:51)\r\n    I xUnit   :    Failed tests: 0 (TaskId:51)\r\n    I xUnit   :    Test collection: Test collection for System.Numerics.Tests.op_orTest (TaskId:51)\r\n    V xUnit   :    Associated test case: System.Numerics.Tests.op_orTest.RunOrTests (TaskId:51)\r\n    E mono    :  (TaskId:51)\r\n    E mono    : Unhandled Exception: (TaskId:51)\r\n    E mono    : System.OutOfMemoryException: Insufficient memory to continue the execution of the program. (TaskId:51)\r\n    E mono    :   at (wrapper alloc) System.Object.AllocVector(intptr,intptr) (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].set_Capacity (System.Int32 value) [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].EnsureCapacity (System.Int32 min) [0x00036] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].AddEnumerable (System.Collections.Generic.IEnumerable`1[T] enumerable) [0x0002e] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) [0x00062] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <f506283258c042f6b92c6d09a3e02728>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyMessage..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly) [0x0000d] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyFinished..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly, System.Decimal executionTime, System.Int32 testsRun, System.Int32 testsFailed, System.Int32 testsSkipped) [0x00000] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyRunner`1[TTestCase].RunAsync () [0x00251] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.IMessageSink executionMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions executionOptions) [0x00094] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__7_1 (System.Object state) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) [0x00007] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ThreadPoolWorkQueue.Dispatch () [0x00074] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)"},{"Id":"9560908482","Type":"PullRequestEvent","CreatedAt":"2019-05-03T21:04:24","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3071","RelatedDescription":"Opened pull request \"[tests] Increase the emulator RAM size to 3GB\" (#3071) at xamarin/xamarin-android","RelatedBody":"Recently some/many of the tests run out of memory on Jenkins. So lets\r\ntry to increase the emulator memory size to see whether it will help.\r\n\r\nThe emulator is created for every build on CI, like this:\r\n\r\n    Using \"CreateAndroidEmulator\" task from assembly \"/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/../../bin/BuildRelease/Xamarin.Android.Tools.BootstrapTasks.dll\".\r\n    Task \"CreateAndroidEmulator\" (TaskId:110)\r\n      Task Parameter:AndroidAbi=x86 (TaskId:110)\r\n      Task Parameter:AndroidSdkHome=/Users/builder/android-toolchain/sdk (TaskId:110)\r\n      Task Parameter:SdkVersion=28 (TaskId:110)\r\n      Task Parameter:ImageName=XamarinAndroidTestRunner (TaskId:110)\r\n      Task Parameter:ToolExe=avdmanager (TaskId:110)\r\n      Task Parameter:ToolPath=/Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Task Parameter:RamSizeMB=2048 (TaskId:110)\r\n      Task Parameter:DataPartitionSizeMB=4096 (TaskId:110)\r\n      Task CreateAndroidEmulator (TaskId:110)\r\n        AndroidAbi: x86 (TaskId:110)\r\n        AndroidSdkHome: /Users/builder/android-toolchain/sdk (TaskId:110)\r\n        JavaSdkHome:  (TaskId:110)\r\n        ImageName: XamarinAndroidTestRunner (TaskId:110)\r\n        SdkVersion: 28 (TaskId:110)\r\n        TargetId: system-images;android-28;default;x86 (TaskId:110)\r\n        ToolExe: avdmanager (TaskId:110)\r\n        ToolPath: /Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Tool /Users/builder/android-toolchain/sdk/tools/bin/avdmanager execution started with arguments: create avd --abi x86 -f -n XamarinAndroidTestRunner --package \"system-images;android-28;default;x86\" (TaskId:110)\r\n      Environment variables being passed to the tool: (TaskId:110)\r\n            ANDROID_SDK_HOME=\"/Users/builder/android-toolchain/sdk\" (TaskId:110)\r\n    Done executing task \"CreateAndroidEmulator\". (TaskId:110)\r\n\r\nExample out of memory test run:\r\n\r\n    I xUnit   : Test collection finished (TaskId:51)\r\n    I xUnit   :    Time: 0 (TaskId:51)\r\n    I xUnit   :    Total tests run: 0 (TaskId:51)\r\n    I xUnit   :    Skipped tests: 0 (TaskId:51)\r\n    I xUnit   :    Failed tests: 0 (TaskId:51)\r\n    I xUnit   :    Test collection: Test collection for System.Numerics.Tests.op_orTest (TaskId:51)\r\n    V xUnit   :    Associated test case: System.Numerics.Tests.op_orTest.RunOrTests (TaskId:51)\r\n    E mono    :  (TaskId:51)\r\n    E mono    : Unhandled Exception: (TaskId:51)\r\n    E mono    : System.OutOfMemoryException: Insufficient memory to continue the execution of the program. (TaskId:51)\r\n    E mono    :   at (wrapper alloc) System.Object.AllocVector(intptr,intptr) (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].set_Capacity (System.Int32 value) [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].EnsureCapacity (System.Int32 min) [0x00036] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].AddEnumerable (System.Collections.Generic.IEnumerable`1[T] enumerable) [0x0002e] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) [0x00062] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <f506283258c042f6b92c6d09a3e02728>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyMessage..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly) [0x0000d] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyFinished..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly, System.Decimal executionTime, System.Int32 testsRun, System.Int32 testsFailed, System.Int32 testsSkipped) [0x00000] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyRunner`1[TTestCase].RunAsync () [0x00251] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.IMessageSink executionMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions executionOptions) [0x00094] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__7_1 (System.Object state) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) [0x00007] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ThreadPoolWorkQueue.Dispatch () [0x00074] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)"},{"Id":"9560774965","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:39:31","Actor":"monojenkins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3070","RelatedDescription":"Opened pull request \"[d16-2] Add support for deferred builds when the IDE supports them\" (#3070) at xamarin/xamarin-android","RelatedBody":"In order to take the most expensive target in a DTB (`UpdateAndroidResources`) out\r\nof the DTB, the IDE can monitor design-time builds and schedule a deferred build\r\nto run after the DTB finishes.\r\n\r\nWhen the IDE supports deferred builds, the  `DeferredBuildSupported` will be\r\ntrue, and in that case, the `DeferredBuild` target will run after the DTB finishes. To\r\nschedule targets to run as part of that deferred build, they need to be added to\r\nthe `DeferredBuildDependsOn` property.\r\n\r\nTargets can selectively disable themselves on DTBs when the deferred build is\r\nsupported by checking for both `'$(DeferredBuildSupported)' == 'true'` and the\r\n`'$(DeferredBuild)' == 'true'` property, which is set for those builds.\r\n\r\nThe deferred build queuing will be based on the following condition: a regular design\r\ntime build was triggered and the targets run were either \"Compile\" or any target\r\nthat contains \"DesignTime\" in its name (this excludes queuing a deferred build\r\nwhen a target like `GetFrameworkPaths` or `GetTargetPath` is run in a DTB, for\r\nexample).\r\n\r\nNote that `Inputs`/`Outputs` on the targets, as well as any `DependsOnTargets`\r\nspecified remain the same as before. The effect is that expensive targets that caused\r\na slow DTB before, can now be scheduled to run *after* the build finishes (this is\r\nwhen the deferred build is queued).\r\n\r\nIt's entirely opt-in (if no targets are specified for `DeferredBuildDependsOn`\r\nit will be essentially a no-op run).\r\n\r\nFinally, when a regular build starts, the existing deferred build will be waited for\r\ncompletion before continuing, to ensure no concurrency happens.\r\n\r\nThe initial `Compile` target is run by the DTB in VS while\r\nskipping the compiler call, at which point the UpdateAndroidResources\r\nshould also be skipped when the `DeferredBuildSupported` is `True`.\r\n\r\nSubsequently, we run the `DeferredBuild` (or rather, the `UpdateAndroidResources`\r\nwhich would be run by the `DeferredBuildDependsOn` we append it to)\r\nwhich should also succeed (it's run with the same global parameters/\r\nproperties as the initial DTB).\r\n\r\nFinally, we run the normal build, at which point everything should\r\nsucceed like before.\r\n\r\nIf an XVS version that supports this feature is installed, you can turn it on\r\nby setting an environment variable `DeferredBuildSupported=true`. An A/B experiment\r\nor remote setting can also set this value.\n\nBackport of #2636.\n\n/cc @kzu "},{"Id":"9560629629","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:12:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2636","RelatedDescription":"Merged pull request \"Add support for deferred builds when the IDE supports them\" (#2636) at xamarin/xamarin-android","RelatedBody":"In order to take the most expensive target in a DTB (`UpdateAndroidResources`) out\r\nof the DTB, the IDE can monitor design-time builds and schedule a deferred build\r\nto run after the DTB finishes.\r\n\r\nWhen the IDE supports deferred builds, the  `DeferredBuildSupported` will be\r\ntrue, and in that case, the `DeferredBuild` target will run after the DTB finishes. To\r\nschedule targets to run as part of that deferred build, they need to be added to\r\nthe `DeferredBuildDependsOn` property.\r\n\r\nTargets can selectively disable themselves on DTBs when the deferred build is\r\nsupported by checking for both `'$(DeferredBuildSupported)' == 'true'` and the\r\n`'$(DeferredBuild)' == 'true'` property, which is set for those builds.\r\n\r\nThe deferred build queuing will be based on the following condition: a regular design\r\ntime build was triggered and the targets run were either \"Compile\" or any target\r\nthat contains \"DesignTime\" in its name (this excludes queuing a deferred build\r\nwhen a target like `GetFrameworkPaths` or `GetTargetPath` is run in a DTB, for\r\nexample).\r\n\r\nNote that `Inputs`/`Outputs` on the targets, as well as any `DependsOnTargets`\r\nspecified remain the same as before. The effect is that expensive targets that caused\r\na slow DTB before, can now be scheduled to run *after* the build finishes (this is\r\nwhen the deferred build is queued).\r\n\r\nIt's entirely opt-in (if no targets are specified for `DeferredBuildDependsOn`\r\nit will be essentially a no-op run).\r\n\r\nFinally, when a regular build starts, the existing deferred build will be waited for\r\ncompletion before continuing, to ensure no concurrency happens.\r\n\r\nThe initial `Compile` target is run by the DTB in VS while\r\nskipping the compiler call, at which point the UpdateAndroidResources\r\nshould also be skipped when the `DeferredBuildSupported` is `True`.\r\n\r\nSubsequently, we run the `DeferredBuild` (or rather, the `UpdateAndroidResources`\r\nwhich would be run by the `DeferredBuildDependsOn` we append it to)\r\nwhich should also succeed (it's run with the same global parameters/\r\nproperties as the initial DTB).\r\n\r\nFinally, we run the normal build, at which point everything should\r\nsucceed like before.\r\n\r\nIf an XVS version that supports this feature is installed, you can turn it on\r\nby setting an environment variable `DeferredBuildSupported=true`. An A/B experiment\r\nor remote setting can also set this value."},{"Id":"9560618646","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:21","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3069","RelatedDescription":"Opened pull request \"[tests] Kill adb server before test instrumentation\" (#3069) at xamarin/xamarin-android","RelatedBody":"This will force adb to restart the server, so we should have fresh adb\r\nfor `adb shell am instrument ...`. Hopefully it will help with crashes\r\nof `Mono.Android_Tests` test, we are seeing frequently on Jenkins."},{"Id":"9560421290","Type":"IssuesEvent","CreatedAt":"2019-05-03T19:34:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2873","RelatedDescription":"Closed issue \"F# records are broken when building with Link SDK and User Assemblies in Debug mode\" (#2873) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Define an F# record type\r\n2. Set the Linking option to SDK and User Assemblies\r\n3. Try to create an instance of the record\r\n\r\nIf you try this sample out you can see it happening. Click the FAB. \r\n\r\nWhen set to Link SDK Assemblies Only or None, you will see the record printed in the debug console.\r\n\r\nWhen set to link User Assemblies, it will throw an exception.\r\n\r\nI have tried adding the standard Preserve attribute but it hasn't helped.\r\nI also saw errors in my production app that suggested union case constructors were being removed.\r\n\r\nRemember to clean / rebuild between runs.\r\n\r\n[Test.zip](https://github.com/xamarin/xamarin-android/files/3014145/Test.zip)\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe record should be constructed normally.\r\n\r\n### Actual Behavior\r\n\r\nThe record crashes the application when trying to access its values.\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9566397040","Type":"PullRequestEvent","CreatedAt":"2019-05-05T19:43:19","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6099","RelatedDescription":"Opened pull request \"Apply round corners shape based on radius\" (#6099) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nApply shape treatment with corner radius settings\r\n\r\n### Issues Resolved ### \r\n- fixes #5544\r\n\r\n\r\n### Before/After Screenshots ### \r\n![image](https://user-images.githubusercontent.com/5375137/57199334-f3c3ea00-6f3a-11e9-9c80-0e2a6f6d6b44.png)\r\n\r\n\r\n### Testing Procedure ###\r\nCheck visual gallery. I modified two of the frames to demonstrate different corner radiuses\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard"},{"Id":"9566330787","Type":"IssuesEvent","CreatedAt":"2019-05-05T19:11:58","Actor":"markti","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6098","RelatedDescription":"Opened issue \"[Bug] ShellContent navigation not triggering OnAppearing / OnDisappearing overrides when displayed / hidden\" (#6098) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n4.0.0.394984-pre10\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Override the onappearing method of a contentpage\r\n2. Set that content page inside a shellitem/shellsection using the ContentTemplate=\"{DataTemplate local:MyPage\" trick\r\n3. Use shell UI to navigate to MyPage and \r\n\r\n### Expected Behavior\r\nnotice that onappearing does not fire...\r\n\r\n\r\n### Actual Behavior\r\nexpect to see the override OnAppearing would be triggered...\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9566186183","Type":"IssuesEvent","CreatedAt":"2019-05-05T18:03:46","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6097","RelatedDescription":"Opened issue \"[Material]: `Xamarin.Forms.Material.Android` is missing from the Android Solution \" (#6097) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe `Xamarin.Forms.Material.Android` is missing from the Android specific solution:\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/.Xamarin.Forms.Android.sln\r\nThis causes the build to fail to build because it can't find it.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open `Xamarin.Forms.Material.Android.sln` from a clean build\r\n2. Build\r\n3. Observe build error\r\n\r\n### Expected Behavior\r\nNewly cloned repo builds on first try\r\n\r\n### Actual Behavior\r\nBuild output:\r\n```\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018: System.IO.FileNotFoundException: Could not load assembly 'Xamarin.Forms.Material, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018: File name: 'Xamarin.Forms.Material.dll'\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(String fullName)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract(DirectoryAssemblyResolver res, ICollection`1 jars, ICollection`1 resolvedResourceDirectories, ICollection`1 resolvedAssetDirectories, ICollection`1 resolvedEnvironments)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute()\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Master branch\r\n- Last known good version: ?\r\n- IDE: VS2019\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n"},{"Id":"9566009188","Type":"IssuesEvent","CreatedAt":"2019-05-05T16:41:57","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6093","RelatedDescription":"Closed issue \"[Bug, Shell] RouteHost with capital letter throws exception\" (#6093) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am not sure whether this is a bug or feature request. I spend lots of time on fixing a bug. It turns out that the RouteHost name in my project has capital letters. The error message is:\r\n\r\n**System.InvalidOperation Exception has been thrown\r\nShell CurrentItem should not be null**\r\n\r\nThe error message is not at all helpful in pointing to the code causing the error. It will be helpful if the xaml editor shows the error during write time. Or compiler point to the actual code in error message at compile time.\r\nOtherwise there could be a way to allow the developers to define RouteHost in any Case.\r\n\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms-pre10\r\n- IDE: Visual Studio for Mac\r\n\r\n- Affected Devices:iOS and Android\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9567660446","Type":"PullRequestEvent","CreatedAt":"2019-05-06T05:28:55","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5987","RelatedDescription":"Merged pull request \"[d16-2] Add more details to MSBuild errors for provisioning profiles\" (#5987) at xamarin/xamarin-macios","RelatedBody":"A lot of apps get renamed during the build process. E.g. most of our apps have an alpha or a beta version and they have separate bundle names so that you can install them side-by-side.\r\n\r\nI usually don't know if there is an error in my build script or if the provisioning profile is really missing on the machine I'm building on. By displaying the name, the user might notice incorrect bundle names.\n\nBackport of #5984.\n\n/cc @spouliot @SamuelDebruyn"},{"Id":"9567657799","Type":"PullRequestEvent","CreatedAt":"2019-05-06T05:27:57","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5966","RelatedDescription":"Merged pull request \"[d16-2] Fix/improve marshalling of out/ref parameters, arrays, Classes and Selectors. Fixes #5171.\" (#5966) at xamarin/xamarin-macios","RelatedBody":"* Share much more marshalling code between the dynamic and static registrar\r\n  (by refactoring code into separate functions used by both).\r\n* Fix an issue with multiple out/ref parameters in the dynamic registrar.\r\n* Throw an error instead of silently ignoring out/ref parameter types we don't\r\n  completely understand in the dynamic registrar.\r\n* Fix returning Class/SEL out/ref parameters in the static registrar.\r\n* Fix returning NSString out/ref parameters in the dynamic registrar.\r\n* Add/fix support for out/ref arrays everywhere.\r\n* Fix support for the various supported out/ref parameter types in the\r\n  generator.\r\n* Add lots of tests.\r\n\r\nFixes https://github.com/xamarin/xamarin-macios/issues/5171.\r\n\r\nThis pull request is best reviewed commit-by-commit.\n\nBackport of #5963.\n\n/cc @rolfbjarne "},{"Id":"9567654956","Type":"PullRequestEvent","CreatedAt":"2019-05-06T05:26:55","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5986","RelatedDescription":"Merged pull request \"[registrar] Fix marshalling of structs with a single member.\" (#5986) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9567652046","Type":"PullRequestEvent","CreatedAt":"2019-05-06T05:25:50","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5989","RelatedDescription":"Merged pull request \"[runtime] Fix crash in the x86_64 dynamic registrar.\" (#5989) at xamarin/xamarin-macios","RelatedBody":"In [this][1] innocuous-looking commit I made the x86_64 dynamic registrar\ncrash when TRACE is defined. The underlying problem is that CallState's rsi\nfield is re-used as rax upon exit of the trampoline. This means that the\nCallState.sel () function that gets the selector, will instead get the return\nvalue upon exit. When TRACE is defined, we try to print the selector upon\nexiting the trampoline, and since the rsi field is now the rax field, we end\nup trying to print the return value as if it were a selector, and things go\nslightly sideways.\n\n[1]: https://github.com/xamarin/xamarin-macios/commit/464882d14a83"},{"Id":"9567609047","Type":"IssuesEvent","CreatedAt":"2019-05-06T05:09:36","Actor":"peppy","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5994","RelatedDescription":"Opened issue \"Native assert (GC)\" (#5994) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run project\r\n2. Note crash at certain point\r\n\r\n### Expected Behavior\r\n\r\nNormal execution\r\n\r\n### Actual Behavior\r\n\r\n- On stable xamarin.ios (12.8.0.2): Crash\r\n- On preview xamarin.ios (12.10.0.147): Freeze\r\n\r\nTested against mono 5.18.1.3 and 5.20.1.19 (wanted to try 6.0.0.209 but does not seem to build xamarin projects any more).\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.0.5 (build 9)\r\nInstallation UUID: 55c070ac-3b95-472e-87fd-3aee80380cd3\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518010003\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.3 (2018-08/fdb26b0a445) (64-bit)\r\n\tPackage version: 518010003\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.2.5835\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0-preview1-26913-02\r\n\t2.2.0\r\n\t2.1.5\r\n\t2.1.2\r\n\t2.1.0\r\n\t2.0.5\r\n\t2.0.3\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/3.0.100-alpha1-009460/Sdks\r\nSDK Versions:\r\n\t3.0.100-alpha1-009460\r\n\t2.2.101\r\n\t2.1.403\r\n\t2.1.302\r\n\t2.1.300\r\n\t2.1.4\r\n\t2.0.3\r\n\t1.0.1\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: Not Found\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.14\r\nHash: 86df26f\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-05 16:58:56 UTC\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.418\r\nHash: 3d086e814\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-01 09:20:10 UTC\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2 (14490.120)\r\nBuild 10E125\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.10.0.147 (Visual Studio Community)\r\nHash: a5f2633f\r\nBranch: d16-1\r\nBuild date: 2019-04-10 09:42:19-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800050009\r\nGit revision: d9d7eed60cb59740ba55c04bfe9c39ac57014c12\r\nBuild date: 2019-04-26 10:08:19+00\r\nBuild branch: master\r\nXamarin extensions: 5efedb990d786142d3b54351c01ce867af7b7680\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Build Logs\r\n\r\nCan provide if necessary\r\n\r\n### Example Project (If Possible)\r\n\r\nCan provide is necessary (closed source currently).\r\n\r\nThis report may be misplaced and need to end up at mono's end, but I thought I'd post it here as it's specifically happening on iOS for me.\r\n"},{"Id":"9566905676","Type":"IssuesEvent","CreatedAt":"2019-05-06T00:07:26","Actor":"bandral0","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5993","RelatedDescription":"Opened issue \"Native Linking Failed\" (#5993) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n\r\n\r\n### Build Logs\r\n\r\n<!--\r\n\r\nBuilding AnyList2018.iOS (Debug|iPhone)\r\nBuild started 5/5/2019 8:03:20 PM.\r\n__________________________________________________\r\nProject \"/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/AnyList2018.iOS/AnyList2018.iOS.csproj\" (Build target(s)):\r\n\r\nTarget _BeforeCoreCompileInterfaceDefinitions:\r\n  Skipping target \"_BeforeCoreCompileInterfaceDefinitions\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreCompileInterfaceDefinitions:\r\n  Skipping target \"_CoreCompileInterfaceDefinitions\" because all output files are up-to-date with respect to the input files.\r\nTarget _BeforeCoreCompileImageAssets:\r\n  Skipping target \"_BeforeCoreCompileImageAssets\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreCompileImageAssets:\r\n  Skipping target \"_CoreCompileImageAssets\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreCompileColladaAssets:\r\n  Skipping target \"_CoreCompileColladaAssets\" because it has no inputs.\r\nTarget _BeforeCoreCompileSceneKitAssets:\r\n  Skipping target \"_BeforeCoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _BeforeCoreCompileSceneKitAssets:\r\n  Skipping target \"_BeforeCoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _BeforeCoreCompileSceneKitAssets:\r\n  Skipping target \"_BeforeCoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _CoreCompileSceneKitAssets:\r\n  Skipping target \"_CoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _BeforeCompileTextureAtlases:\r\n  Skipping target \"_BeforeCompileTextureAtlases\" because it has no inputs.\r\nTarget _BeforeCompileTextureAtlases:\r\n  Skipping target \"_BeforeCompileTextureAtlases\" because it has no inputs.\r\nTarget _BeforeCompileTextureAtlases:\r\n  Skipping target \"_BeforeCompileTextureAtlases\" because it has no inputs.\r\nTarget _CoreCompileTextureAtlases:\r\n  Skipping target \"_CoreCompileTextureAtlases\" because it has no inputs.\r\nTarget _BeforeCompileCoreMLModels:\r\n  Skipping target \"_BeforeCompileCoreMLModels\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreCompileCoreMLModels:\r\n  Skipping target \"_CoreCompileCoreMLModels\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreOptimizePngImages:\r\n  Skipping target \"_CoreOptimizePngImages\" because it has no outputs.\r\nTarget _CoreOptimizePropertyLists:\r\n  Skipping target \"_CoreOptimizePropertyLists\" because it has no inputs.\r\nTarget _CoreOptimizeLocalizationFiles:\r\n  Skipping target \"_CoreOptimizeLocalizationFiles\" because it has no inputs.\r\nTarget ResolveAssemblyReferences:\r\n    No way to resolve conflict between \"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Collections, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Runtime.Extensions, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Runtime.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Runtime.Extensions, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Globalization, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Globalization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Globalization, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Reflection, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Reflection, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Reflection, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Linq.Expressions, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Linq.Expressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Linq.Expressions, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Diagnostics.Debug, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" and \"System.Threading, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". Choosing \"System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" arbitrarily.\r\n    No way to resolve conflict between \"System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" and \"System.Numerics, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\". Choosing \"System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" arbitrarily.\r\n    Consider app.config remapping of assembly \"System.Runtime, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.20.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Collections, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Collections.dll] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Runtime.Extensions, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Globalization, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Globalization.dll] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Reflection, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Linq.Expressions, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Diagnostics.Debug, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.Debug.dll] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Threading, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.0.0\" [] to Version \"4.0.10.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.dll] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Numerics, Culture=neutral, PublicKeyToken=b77a5c561934e089\" from Version \"2.0.5.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Numerics.dll] to Version \"4.0.0.0\" [/Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/gac/System.Numerics/4.0.0.0__b77a5c561934e089/System.Numerics.dll] to solve conflict and get rid of warning.\r\n    /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2130,5): warning MSB3276: Found conflicts between different versions of the same dependent assembly. Please set the \"AutoGenerateBindingRedirects\" property to true in the project file. For more information, see http://go.microsoft.com/fwlink/?LinkId=294190.\r\nDone building target \"ResolveAssemblyReferences\" in project \"AnyList2018.iOS.csproj\".\r\nTarget GenerateTargetFrameworkMonikerAttribute:\r\n  Skipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nTarget XamlG:\r\n  Skipping target \"XamlG\" because all output files are up-to-date with respect to the input files.\r\nTarget CssG:\r\n  Skipping target \"CssG\" because it has no outputs.\r\nTarget CssG:\r\n  Skipping target \"CssG\" because it has no outputs.\r\nTarget CoreCompile:\r\n  Skipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\nTarget XamlC:\r\n  Skipping target \"XamlC\" because all output files are up-to-date with respect to the input files.\r\nTarget _CopyFilesMarkedCopyLocal:\r\n    Touching \"/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/AnyList2018.iOS/obj/iPhone/Debug/AnyList2018.iOS.csproj.CopyComplete\".\r\nTarget CopyFilesToOutputDirectory:\r\n    AnyList2018.iOS -> /Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/AnyList2018.iOS/bin/iPhone/Debug/AnyList2018.iOS.exe\r\nTarget _DetectSigningIdentity:\r\n    Detected signing identity:\r\n      Code Signing Key: \"iPhone Developer: Govind Bandral (P5F32GY7H2)\" (C24BC004DB948546240D784FEA6125C7B03BACC5)\r\n      Provisioning Profile: \"VS: WildCard Development\" (80a22487-6a83-46d3-97e6-cebaf6f45885)\r\n      Bundle Id: bandral0\r\n      App Id: 64DQ9SJSF2.bandral0\r\nTarget _CopyResourcesToBundle:\r\n  Skipping target \"_CopyResourcesToBundle\" because all output files are up-to-date with respect to the input files.\r\nTarget _DetectDebugNetworkConfiguration:\r\n      DebugIPAddresses: \r\nTarget _CompileAppManifest:\r\n  Skipping target \"_CompileAppManifest\" because all output files are up-to-date with respect to the input files.\r\nTarget _ParseExtraMtouchArgs:\r\n      NoSymbolStrip Output: False\r\n      NoDSymUtil Output: false\r\nTarget _ResolveAppExtensionReferences:\r\n    __________________________________________________\r\n    Project \"/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/AnyList2018.iOS/AnyList2018.iOS.csproj\" is building \"/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/OSAnyListNotificationServiceExtension/OSAnyListNotificationServiceExtension.csproj\" (GetBundleTargetPath target(s)):\r\n\r\n    Target _DetectSigningIdentity:\r\n        Detected signing identity:\r\n          Code Signing Key: \"iPhone Developer: Govind Bandral (P5F32GY7H2)\" (C24BC004DB948546240D784FEA6125C7B03BACC5)\r\n          Provisioning Profile: \"VS: WildCard Development\" (80a22487-6a83-46d3-97e6-cebaf6f45885)\r\n          Bundle Id: bandral0.OSAnyListNotificationServiceExtension\r\n          App Id: 64DQ9SJSF2.bandral0.OSAnyListNotificationServiceExtension\r\nTarget _CompileToNative:\r\n    /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch \"@/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/AnyList2018.iOS/obj/iPhone/Debug/device-builds/ipad6.3-12.2/response-file.rsp\" \r\n    MTOUCH : warning MT0113: Native code sharing has been disabled for the extension 'OSAnyListNotificationServiceExtension' because the --assembly-build-target options are different between the container app () and the extension (--assembly-build-target:@all=dynamiclibrary).\r\n    Process exited with code 1, command:\r\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang  -framework SystemConfiguration -framework UserNotifications -F /Library/Frameworks/Xamarin.iOS.framework/Versions/12.8.0.2/SDKs/MonoTouch.iphoneos.sdk/Frameworks -framework Mono -framework Foundation -weak_framework CFNetwork -Xlinker -rpath -Xlinker @executable_path/Frameworks -Xlinker -rpath -Xlinker @executable_path/../../Frameworks -Xlinker -rpath -Xlinker @executable_path -Xlinker -rpath -Xlinker @executable_path/../.. '/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/OSAnyListNotificationServiceExtension/obj/iPhone/Debug/device-builds/ipad6.3-12.2/mtouch-cache/arm64/OneSignal.iOS.Binding.dll.o' /Library/Frameworks/Xamarin.iOS.framework/Versions/12.8.0.2/SDKs/MonoTouch.iphoneos.sdk/usr/lib/libxamarin-debug.dylib -force_load '/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/OSAnyListNotificationServiceExtension/obj/iPhone/Debug/device-builds/ipad6.3-12.2/mtouch-cache/OneSignal.a' -lz -liconv -gdwarf-2 -std=c99 -I/Library/Frameworks/Xamarin.iOS.framework/Versions/12.8.0.2/SDKs/MonoTouch.iphoneos.sdk/usr/include -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.2.sdk -Qunused-arguments -miphoneos-version-min=10.2 -arch arm64 -shared -install_name @rpath/libOneSignal.iOS.Binding.dll.dylib -fapplication-extension -o '/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/OSAnyListNotificationServiceExtension/obj/iPhone/Debug/device-builds/ipad6.3-12.2/mtouch-cache/arm64/libOneSignal.iOS.Binding.dll.dylib' -DDEBUG -u '_OBJC_CLASS_$_OneSignal' -u '_OBJC_CLASS_$_OSNotification' -u '_OBJC_CLASS_$_OSNotificationAction' -u '_OBJC_CLASS_$_OSNotificationOpenedResult' -u '_OBJC_CLASS_$_OSNotificationPayload'\r\n    Undefined symbols for architecture arm64:\r\n      \"_OBJC_CLASS_$_UIActivityIndicatorView\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n      \"_OBJC_CLASS_$_UIAlertAction\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalDialogController.o)\r\n      \"_OBJC_CLASS_$_UIAlertController\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalDialogController.o)\r\n      \"_OBJC_CLASS_$_UIAlertView\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalAlertViewDelegate.o)\r\n          objc-class-ref in OneSignal.a(OneSignalDialogController.o)\r\n      \"_OBJC_CLASS_$_UIApplication\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignal.o)\r\n          l_OBJC_$_CATEGORY_UIApplication_$_OneSignal in OneSignal.a(OneSignal.o)\r\n          objc-class-ref in OneSignal.a(OneSignalNotificationSettingsIOS8.o)\r\n          objc-class-ref in OneSignal.a(OneSignalJailbreakDetection.o)\r\n          objc-class-ref in OneSignal.a(OneSignalHelper.o)\r\n          objc-class-ref in OneSignal.a(UNUserNotificationCenter+OneSignal.o)\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n          ...\r\n      \"_OBJC_CLASS_$_UIBarButtonItem\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n      \"_OBJC_CLASS_$_UIColor\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n      \"_OBJC_CLASS_$_UIDevice\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignal.o)\r\n          objc-class-ref in OneSignal.a(OneSignalHelper.o)\r\n          objc-class-ref in OneSignal.a(OneSignalLocation.o)\r\n      \"_OBJC_CLASS_$_UILocalNotification\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalHelper.o)\r\n      \"_OBJC_CLASS_$_UIMutableUserNotificationAction\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalHelper.o)\r\n      \"_OBJC_CLASS_$_UIMutableUserNotificationCategory\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalHelper.o)\r\n      \"_OBJC_CLASS_$_UINavigationController\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n      \"_OBJC_CLASS_$_UIUserNotificationSettings\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalNotificationSettingsIOS8.o)\r\n          objc-class-ref in OneSignal.a(OneSignalHelper.o)\r\n      \"_OBJC_CLASS_$_UIViewController\", referenced from:\r\n          _OBJC_CLASS_$_OneSignalWebView in OneSignal.a(OneSignalWebView.o)\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n      \"_OBJC_CLASS_$_UIWebView\", referenced from:\r\n          objc-class-ref in OneSignal.a(OneSignalWebView.o)\r\n      \"_OBJC_METACLASS_$_UIViewController\", referenced from:\r\n          _OBJC_METACLASS_$_OneSignalWebView in OneSignal.a(OneSignalWebView.o)\r\n      \"_UIApplicationLaunchOptionsRemoteNotificationKey\", referenced from:\r\n          +[OneSignal initWithLaunchOptions:appId:handleNotificationReceived:handleNotificationAction:settings:] in OneSignal.a(OneSignal.o)\r\n      \"_UIApplicationOpenSettingsURLString\", referenced from:\r\n          +[OneSignal presentAppSettings] in OneSignal.a(OneSignal.o)\r\n      \"_UIBackgroundTaskInvalid\", referenced from:\r\n          +[OneSignalHelper endBackgroundMediaTask] in OneSignal.a(OneSignalHelper.o)\r\n          +[OneSignalTracker endBackgroundFocusTask] in OneSignal.a(OneSignalTracker.o)\r\n          +[OneSignalLocation endTask] in OneSignal.a(OneSignalLocation.o)\r\n      \"_UILocalNotificationDefaultSoundName\", referenced from:\r\n          +[OneSignalHelper prepareUILocalNotification:] in OneSignal.a(OneSignalHelper.o)\r\n      \"_UIUserNotificationActionResponseTypedTextKey\", referenced from:\r\n          +[OneSignalUNUserNotificationCenter callLegacyAppDeletegateSelector:isTextReply:actionIdentifier:userText:fromPresentNotification:withCompletionHandler:] in OneSignal.a(UNUserNotificationCenter+OneSignal.o)\r\n    ld: symbol(s) not found for architecture arm64\r\n    clang : error : linker command failed with exit code 1 (use -v to see invocation)\r\n    \r\n    MTOUCH : error MT5216: Native linking failed for '/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/OSAnyListNotificationServiceExtension/obj/iPhone/Debug/device-builds/ipad6.3-12.2/mtouch-cache/arm64/libOneSignal.iOS.Binding.dll.dylib'. Please file a bug report at https://github.com/xamarin/xamarin-macios/issues/new\r\nDone building target \"_CompileToNative\" in project \"AnyList2018.iOS.csproj\" -- FAILED.\r\n\r\nDone building project \"AnyList2018.iOS.csproj\" -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n/Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2130,5): warning MSB3276: Found conflicts between different versions of the same dependent assembly. Please set the \"AutoGenerateBindingRedirects\" property to true in the project file. For more information, see http://go.microsoft.com/fwlink/?LinkId=294190.\r\nMTOUCH : warning MT0113: Native code sharing has been disabled for the extension 'OSAnyListNotificationServiceExtension' because the --assembly-build-target options are different between the container app () and the extension (--assembly-build-target:@all=dynamiclibrary).\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation)\r\nMTOUCH : error MT5216: Native linking failed for '/Users/govindbandral/Library/Mobile Documents/com~apple~CloudDocs/Developmet 2018/AnyList2018/OSAnyListNotificationServiceExtension/obj/iPhone/Debug/device-builds/ipad6.3-12.2/mtouch-cache/arm64/libOneSignal.iOS.Binding.dll.dylib'. Please file a bug report at https://github.com/xamarin/xamarin-macios/issues/new\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:02:01.06\r\n\r\n========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========\r\n\r\nBuild: 2 errors, 2 warnings\r\n-->\r\n\r\n"},{"Id":"9560838277","Type":"IssuesEvent","CreatedAt":"2019-05-03T20:51:21","Actor":"mhughey-vent","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5992","RelatedDescription":"Opened issue \"I'm having an timeout issue, specifically a WebException.\" (#5992) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\nSo the issue I'm running into is a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute.\r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins to complete and we got data, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\n(The TLS 1.2 is a requirement)\r\n\r\n_:: Extra Info That May Be Helpful ::\r\nIt looks as though NSUrlSession (iOS 7+) setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)_\r\n\r\nThis was cross posted at Xamarin.Forms before I new where to post.\r\n\r\n### Expected Behavior\r\nA HTTP response, specifically a  file (size may vary)\r\n\r\n### Actual Behavior\r\nI get a WebException (Request timeout)\r\n\r\n### Environment\r\nMac OS\r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows\r\n- Xamarin 4.6.3.4\r\n- Xamarin.IOS 10.12.3.3\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2015\r\nVersion 14.0.25420.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nLightSwitch for Visual Studio 2015   00325-60003-96533-AA506\r\nMicrosoft LightSwitch for Visual Studio 2015\r\n\r\nVisual Basic 2015   00325-60003-96533-AA506\r\nMicrosoft Visual Basic 2015\r\n\r\nVisual C# 2015   00325-60003-96533-AA506\r\nMicrosoft Visual C# 2015\r\n\r\nVisual C++ 2015   00325-60003-96533-AA506\r\nMicrosoft Visual C++ 2015\r\n\r\nVisual F# 2015   00325-60003-96533-AA506\r\nMicrosoft Visual F# 2015\r\n\r\nWindows Phone SDK 8.0 - ENU   00325-60003-96533-AA506\r\nWindows Phone SDK 8.0 - ENU\r\n\r\nApplication Insights Tools for Visual Studio Package   7.0.20622.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0\r\nASP.NET and Web Tools 2015.1 (Beta8)\r\n\r\nASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0\r\nFor additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563\r\n\r\nASP.NET Web Frameworks and Tools 2013   5.2.40314.0\r\nFor additional information, visit http://www.asp.net/\r\n\r\nClang with Microsoft CodeGen   14.0.25516\r\nClang with Microsoft CodeGen\r\n\r\nCommon Azure Tools   1.8\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub.VisualStudio   2.9.0.7614\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nKofePackagePackage Extension   1.0\r\nKofePackagePackage Visual Studio Extension Detailed Info\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Mobile Services Tools   1.4\r\nMicrosoft Azure Mobile Services Tools\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.6.8-pre (ec7034f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   3.4.4\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOffice Developer Tools for Visual Studio 2015 ENU   14.0.23025\r\nMicrosoft Office Developer Tools for Visual Studio 2015 ENU\r\n\r\nPreEmptive Analytics Visualizer   1.2\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nPython Tools for Visual Studio   2.2.50113.00\r\nPython Tools for Visual Studio provides IntelliSense, projects, templates, Interactive windows, and other support for Python developers.\r\n\r\nPython Tools for Visual Studio - Django Integration   2.2.50113.00\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython Tools for Visual Studio - Profiling Support   2.2.50113.00\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   14.0.60519.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript   1.8.34.0\r\nTypeScript tools for Visual Studio\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   14.0.25401.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   14.0.25401.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual Studio Tools for Apache Cordova   Update 10\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for Universal Windows Apps   14.0.25527.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   4.6.3.4 (0841c2aaf)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android   7.4.3.1 (18558b4)\r\nVisual Studio extension to enable development for Xamarin.Android.\r\n\r\nXamarin.iOS   10.12.3.3 (8a39106)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9560651750","Type":"IssuesEvent","CreatedAt":"2019-05-03T20:16:31","Actor":"gdignard","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5991","RelatedDescription":"Opened issue \"VisualStudio constantly changes CFBundleIdentifier for Extensions\" (#5991) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create an Extension with the CFBundleDisplayName \"My Uploader\"\r\n2. Set the CGBundleIdentifier to \"com.domain.project.uploader\"\r\n3. Save and Close the Solution\r\n4. Open the Solution\r\n5. Open the Extension's Info.plist\r\n\r\n### Expected Behavior\r\n\r\nThe CFBundleIdentifier value is \"com.domain.project.uploader\"\r\n\r\n### Actual Behavior\r\n\r\nThe CFBundleIdentifier value is \"com.domain.project.My Uploader\"\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2019\r\nVersion 16.0.3\r\nVisualStudio.16.Release/16.0.3+28803.352\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2019   00435-60000-00000-AA091\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20409.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12313.64372\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.0.12313.64372\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.0.12313.64372\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.7000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.0.12313.64372\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.7000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.0.0-beta4-19218-01+18b0cfb66884840b40491fa0896a8854d68b3959\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.9.0.7614\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.7000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.7000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.5\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.7000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61903.25110\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19218-01+18b0cfb66884840b40491fa0896a8854d68b3959\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.521 (d16-0@7b060b3b9)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.419 (remotes/origin/d16-0@c5f131be7)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.47 (31f664d)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.2.3.0 (HEAD/9f6426ab2)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08-rc@5ac37ccd385\r\n    Java.Interop: xamarin/java.interop/d16-0@c987483\r\n    LibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.26.0@325e91a\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.8.0.2 (f2248ae)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null}]}},"RunOn":"2019-05-06T05:30:54.1297247Z","RunDurationInMilliseconds":2664}