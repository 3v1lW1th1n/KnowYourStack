{"Data":{"Sdk":{"Events":[{"Id":"6761724270","Type":"IssuesEvent","CreatedAt":"2017-10-25T03:39:41","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/272","RelatedDescription":"Opened issue \"Opening a package with a non-writeable stream throws different exceptions on .NET Core and .NET Framework\" (#272) at OfficeDev/Open-XML-SDK","RelatedBody":"See, for instance, the test at: https://github.com/OfficeDev/Open-XML-SDK/blob/vNext/DocumentFormat.OpenXml.Tests/OpenXmlDomTest/AutoSaveTestClass.cs#L14. All the tests in this file that use `Assert.ThrowsAny<Exception>` throw an `IOException` in .NET Framework and `ArgumentException` in .NET Core"},{"Id":"6761718124","Type":"PullRequestEvent","CreatedAt":"2017-10-25T03:37:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/271","RelatedDescription":"Merged pull request \"Use InlineData for auto-save tests\" (#271) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6760880759","Type":"PullRequestEvent","CreatedAt":"2017-10-24T22:22:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/271","RelatedDescription":"Opened pull request \"Use InlineData for auto-save tests\" (#271) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6750616095","Type":"IssuesEvent","CreatedAt":"2017-10-23T06:12:37","Actor":"TimYi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/119","RelatedDescription":"Closed issue \"A paragraph is inside a run\" (#119) at OfficeDev/Open-XML-SDK","RelatedBody":"I paste pictures into word document. And the pictures can't be recognized by OpenXml SDK.\r\nInside my docx file, I found some abnormal structure:\r\n```\r\n<w:r>\r\n<w:p xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\" xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\">\r\n<w:r>\r\n<w:drawing>\r\n<wp:anchor distT=\"0\" distB=\"0\" distL=\"114300\" distR=\"114300\" simplePos=\"0\" relativeHeight=\"251658240\" behindDoc=\"0\" locked=\"0\" layoutInCell=\"1\" allowOverlap=\"1\">\r\n<wp:simplePos x=\"0\" y=\"0\"/>\r\n<wp:positionH relativeFrom=\"column\">\r\n<wp:align>center</wp:align>\r\n</wp:positionH>\r\n<wp:positionV relativeFrom=\"paragraph\">\r\n<wp:posOffset>2540</wp:posOffset>\r\n</wp:positionV>\r\n<wp:extent cx=\"5352176\" cy=\"1837188\"/>\r\n<wp:wrapTopAndBottom/>\r\n<wp:docPr id=\"9\" name=\"media/GIUACAFYtDB.png\"/>\r\n<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\r\n<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\r\n<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\r\n<pic:nvPicPr>\r\n<pic:cNvPr id=\"0\" name=\"media/GIUACAFYtDB.png\"/>\r\n<pic:cNvPicPr/>\r\n</pic:nvPicPr>\r\n<pic:blipFill>\r\n<a:blip r:embed=\"rId9\"/>\r\n<a:stretch>\r\n<a:fillRect/>\r\n</a:stretch>\r\n</pic:blipFill>\r\n<pic:spPr>\r\n<a:xfrm>\r\n<a:off x=\"0\" y=\"0\"/>\r\n<a:ext cx=\"5352176\" cy=\"1837188\"/>\r\n</a:xfrm>\r\n<a:prstGeom prst=\"rect\"/>\r\n</pic:spPr>\r\n</pic:pic>\r\n</a:graphicData>\r\n</a:graphic>\r\n</wp:anchor>\r\n</w:drawing>\r\n</w:r>\r\n</w:p>\r\n</w:r>\r\n```\r\nA paragraph with picture is inside a run. Can I read the picture using OpenXml SDK in such condition?"},{"Id":"6740966756","Type":"PullRequestEvent","CreatedAt":"2017-10-19T21:57:17","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/270","RelatedDescription":"Closed pull request \"Turn on SA1518: Require newline at end of files\" (#270) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6740948386","Type":"PullRequestEvent","CreatedAt":"2017-10-19T21:52:25","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/270","RelatedDescription":"Opened pull request \"Turn on SA1518: Require newline at end of files\" (#270) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6740891007","Type":"PullRequestEvent","CreatedAt":"2017-10-19T21:37:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/269","RelatedDescription":"Merged pull request \"Merge test changes into Office2016\" (#269) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"6714628860","Type":"PullRequestEvent","CreatedAt":"2017-10-13T17:42:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/148","RelatedDescription":null,"RelatedBody":"As part of being able to support .NET Core, this change does the following:\r\n\r\n- Update to the latest NuGet of DocumentFormat.OpenXml\r\n- Convert projects to use the new csproj format (will allow .NET Standard targeting at a later point)\r\n- Consolidates solution files into one file that has the tool, cmdlet, tests, and examples\r\n- Adds a powershell project. This is an msbuild based project but helps organize loose files. The bin folder of this project has everything needed for a module\r\n\r\nInitial support for #116"},{"Id":"6644112338","Type":"IssuesEvent","CreatedAt":"2017-09-27T13:47:58","Actor":"kaviyarasanaspire","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/186","RelatedDescription":"Opened issue \"While applying background color in the html theme is applied in the wml file\" (#186) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"While applying background color for the text before the image with different font the theme is applied in the wml file and assigning different font.\r\n <w:rFonts w:asciiTheme=\"minorHAnsi\" w:eastAsiaTheme=\"minorHAnsi\" w:hAnsiTheme=\"minorHAnsi\" w:cstheme=\"minorBidi\" />\r\n\r\nCan anyone please give me the solution for this.\r\n"},{"Id":"6638589438","Type":"IssuesEvent","CreatedAt":"2017-09-26T14:07:27","Actor":"ben-demotic","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/185","RelatedDescription":"Opened issue \"DocumentAssembler - vNext line 558 - p.Elements().Count()\" (#185) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi Eric\r\n\r\nThanks for the great library.  I just discovered OpenXmlPowerTools recently and am using it to replace my old RTF based token replacement with DOCX to really save on those storage costs!\r\n\r\nAnyway, while working with some multi-line address data, delimited by '\\n', I had a problem whereby not all of the <br/> elements were being inserted.\r\n\r\nFor example, say I have this text:\r\n\r\n17 Shire Oak Road\\nSaxlingham\\nNR15 5TR\r\n\r\nI have 2 documents where I am attempting to insert this data formatted with new lines as an address.  The first document, the token is replaced by the following which correctly contains a <br/> inserted before the 2nd and 3rd elements:\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n   <p xmlns=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n      <pPr>\r\n         <pStyle xmlns:p3=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" \r\n              p3:val=\"NoSpacing\"/>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n      </pPr>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <t>17 Shire Oak Road</t>\r\n      </r>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <br/>\r\n         <t>Saxlingham</t>\r\n      </r>\r\n      <r>\r\n         <rPr>\r\n            <bCs/>\r\n         </rPr>\r\n         <br/>\r\n         <t>NR15 5TR</t>\r\n      </r>\r\n   </p>\r\n```\r\nThe second document does not have the extra <rPr><bCs/><rPr> of the first and if you look you can see that it has not put the <br/> before the second element.\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n   <p xmlns=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n      <r>\r\n         <t>17 Shire Oak Road</t>\r\n      </r>\r\n      <r>\r\n         <t>Saxlingham</t>\r\n      </r>\r\n      <r>\r\n         <br/>\r\n         <t>NR15 5TR</t>\r\n      </r>\r\n   </p>\r\n```\r\n\r\nAm I right in saying that their is a bug here in that the test for p.Elements().Count() on line 558 should test for > 0 not > 1 ??  And that the only reason why it works in the first case is because of the extra guff which is present artificially increasing p.Elements().Count()?  And that it should test only for a count of the <W:r> element?  Should it in fact show:\r\n\r\n(p.Elements(W.r).Count() > 0)\r\n\r\nThis seems to work in my use case.\r\n\r\nCheers\r\n\r\nBen\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-25T05:30:28.7123844Z","RunDurationInMilliseconds":1506}