{"Data":{"GitHub":{"Issues":[{"Id":"382479455","IsPullRequest":true,"CreatedAt":"2018-11-20T03:00:58","Actor":"Zruty0","Number":"1680","RawContent":null,"Title":"First round of Schema final polish","State":"open","Body":"Contributes to #1500 \r\n\r\nAdded Schema.DetachedColumn for columns that are not bound to schema\r\nMoved Schema to Data namespace\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1680","RelatedDescription":"Open PR \"First round of Schema final polish\" (#1680)"},{"Id":"382454170","IsPullRequest":false,"CreatedAt":"2018-11-20T00:56:09","Actor":"rogancarr","Number":"1679","RawContent":null,"Title":"Cannot access GAM model parameters from a trained model","State":"open","Body":"When we train a GAM model, we want to inspect the features, just as we do a linear model. Currently, the only way we can do this is through the `SaveSummary()` command, where we pass in a `StringBuilder` object.\r\n\r\nI propose adding public methods to the GAM objects to fetch back the `intercept` (bias / baseline prediction), `feature-indices`, and `feature-index-weights`. This would allow for inspection of the model parameters within the .NET runtime.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1679","RelatedDescription":"Open issue \"Cannot access GAM model parameters from a trained model\" (#1679)"},{"Id":"381801982","IsPullRequest":true,"CreatedAt":"2018-11-20T00:34:54","Actor":"wschin","Number":"1659","RawContent":null,"Title":"Make CpuMath internal","State":"closed","Body":"This PR tries to make `CpuMath` internal, so that it's not going to be exposed to users. It's a part of #1519.","Url":"https://github.com/dotnet/machinelearning/pull/1659","RelatedDescription":"Closed or merged PR \"Make CpuMath internal\" (#1659)"},{"Id":"382447721","IsPullRequest":true,"CreatedAt":"2018-11-20T00:23:54","Actor":"najeeb-kazmi","Number":"1678","RawContent":null,"Title":"Adding binary saving and loading to MLContext.Data","State":"open","Body":"Fixes #1627 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1678","RelatedDescription":"Open PR \"Adding binary saving and loading to MLContext.Data\" (#1678)"},{"Id":"382369402","IsPullRequest":true,"CreatedAt":"2018-11-20T00:06:06","Actor":"ganik","Number":"1671","RawContent":null,"Title":"WIP: Adding WhatTheFeature Scorer ","State":"closed","Body":"fixes #1644 ","Url":"https://github.com/dotnet/machinelearning/pull/1671","RelatedDescription":"Closed or merged PR \"WIP: Adding WhatTheFeature Scorer \" (#1671)"},{"Id":"382443866","IsPullRequest":true,"CreatedAt":"2018-11-20T00:05:57","Actor":"ganik","Number":"1677","RawContent":null,"Title":"WIP: Adding WhatTheFeature Scorer","State":"open","Body":"fixes #1644 ","Url":"https://github.com/dotnet/machinelearning/pull/1677","RelatedDescription":"Open PR \"WIP: Adding WhatTheFeature Scorer\" (#1677)"},{"Id":"381770927","IsPullRequest":true,"CreatedAt":"2018-11-19T23:32:06","Actor":"Ivanidzo4ka","Number":"1655","RawContent":null,"Title":"Let me introduce RowToRowTransformerBase!","State":"closed","Body":"I need to have base class from which I can derive OneToOneTransformerBase and some-non OneToOne transforms. We currently have ConcatColumns, TensorFlow and Onnx, and i'm working on NGramHash and StopWordRemover.","Url":"https://github.com/dotnet/machinelearning/pull/1655","RelatedDescription":"Closed or merged PR \"Let me introduce RowToRowTransformerBase!\" (#1655)"},{"Id":"382434490","IsPullRequest":true,"CreatedAt":"2018-11-19T23:23:52","Actor":"Anipik","Number":"1676","RawContent":null,"Title":"Contracts.Assert statements valid for Debug-Intrinsics","State":"open","Body":"Debuger is currently skipping the Contracts.Assert statements without validating them. for Debug-Intrinsics.\r\n\r\nAfter the change\r\n- If the debugger is attached and the condition is false then the debugger will  break\r\n- If the debugger is not attached, the test will get aborted\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1676","RelatedDescription":"Open PR \"Contracts.Assert statements valid for Debug-Intrinsics\" (#1676)"},{"Id":"382400022","IsPullRequest":false,"CreatedAt":"2018-11-19T23:23:49","Actor":"maxt3r","Number":"1673","RawContent":null,"Title":"How to use LinearSvm?","State":"closed","Body":"Sorry if this is not the place for questions.\r\n\r\nCurrently I'm using FastTree for binary classification, but I would like to give SVM a try and compare metrics.\r\n\r\nAll the docs mention LinearSvm, but I can't find code example anywhere.\r\n\r\n`mlContext.BinaryClassification.Trainers` does not have public SVM trainers. There is `LinearSvm` class and `LinearSvm.TrainLinearSvm` static method, but they seem to be intended for different things.\r\n\r\nWhat am I missing? \r\n\r\n**Version: 0.7**","Url":"https://github.com/dotnet/machinelearning/issues/1673","RelatedDescription":"Closed issue \"How to use LinearSvm?\" (#1673)"},{"Id":"382411517","IsPullRequest":true,"CreatedAt":"2018-11-19T23:20:11","Actor":"eerhardt","Number":"1674","RawContent":null,"Title":"Update macOS Prerequisites","State":"closed","Body":"Updating macOS prerequisites to the latest dependencies\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1674","RelatedDescription":"Closed or merged PR \"Update macOS Prerequisites\" (#1674)"},{"Id":"382432417","IsPullRequest":false,"CreatedAt":"2018-11-19T23:15:22","Actor":"rogancarr","Number":"1675","RawContent":null,"Title":"What the Feature Scorer for FastTree Ranking","State":"open","Body":"Potential bug from a customer: `What-The-Feature scorer` is not computing feature scores for `FastTree Ranking`.\r\n\r\nNeeds to first be reproduced with a sample dataset in ML.NET, then can be triaged as a bug or non-issue.\r\n\r\nReference Issue for WTF: #1644 ","Url":"https://github.com/dotnet/machinelearning/issues/1675","RelatedDescription":"Open issue \"What the Feature Scorer for FastTree Ranking\" (#1675)"},{"Id":"382392863","IsPullRequest":false,"CreatedAt":"2018-11-19T21:06:38","Actor":"justinormont","Number":"1672","RawContent":null,"Title":"Low discrepancy random ","State":"open","Body":"Low discrepancy random sweeper (LDRand) should be moved to the external repo. \r\n\r\nLDRand was held back in the internal repo due to a dependence on the MKL library. This issue has been resolved, and I think we are now able to move this code.","Url":"https://github.com/dotnet/machinelearning/issues/1672","RelatedDescription":"Open issue \"Low discrepancy random \" (#1672)"},{"Id":"382326220","IsPullRequest":true,"CreatedAt":"2018-11-19T17:48:03","Actor":"Ivanidzo4ka","Number":"1670","RawContent":null,"Title":"Fix problem with saving/loading empty vbuffer","State":"open","Body":"Fix #1660 ","Url":"https://github.com/dotnet/machinelearning/pull/1670","RelatedDescription":"Open PR \"Fix problem with saving/loading empty vbuffer\" (#1670)"},{"Id":"381816984","IsPullRequest":true,"CreatedAt":"2018-11-19T17:47:48","Actor":"Ivanidzo4ka","Number":"1661","RawContent":null,"Title":"Fix problem with saving/loading empty vbuffer ","State":"closed","Body":"Fix #1660 ","Url":"https://github.com/dotnet/machinelearning/pull/1661","RelatedDescription":"Closed or merged PR \"Fix problem with saving/loading empty vbuffer \" (#1661)"},{"Id":"382315922","IsPullRequest":false,"CreatedAt":"2018-11-19T17:19:21","Actor":"wschin","Number":"1669","RawContent":null,"Title":"Float v.s float","State":"open","Body":"In ML.NET codebase, one can see two different names for 32-bit float type. Recent PR uses `float` while [old places](https://github.com/dotnet/machinelearning/blob/e0906608ca0d37ad0c10ba647e83b45990afde43/src/Microsoft.ML.Sweeper/ISweeper.cs#L5) have `Float`. It'd be nice to have only one of the two styles.","Url":"https://github.com/dotnet/machinelearning/issues/1669","RelatedDescription":"Open issue \"Float v.s float\" (#1669)"},{"Id":"382070777","IsPullRequest":false,"CreatedAt":"2018-11-19T06:11:51","Actor":"ShinobiWannabe","Number":"1668","RawContent":null,"Title":"14 TB of Hundreds of Thousands of Input Files For Training?","State":"open","Body":"I am sorry if this was answered, but the closest I could find is this:\r\nhttps://github.com/dotnet/machinelearning/issues/192\r\n\r\nWhich looks to have an answer of specifying all the related files.\r\n`var data = reader.Read(exampleFile1, exampleFile2);`\r\n\r\nThe other tutorials on Microsoft all used a single file.\r\n\r\nI am looking at something to examine about 14 Terabytes worth of data within hundreds of thousands of files across multiple hard drives.  Because of the size there would not really be any way to store that in memory either.  \r\n\r\nCould I use ML.NET for this problem?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1668","RelatedDescription":"Open issue \"14 TB of Hundreds of Thousands of Input Files For Training?\" (#1668)"},{"Id":"382070208","IsPullRequest":false,"CreatedAt":"2018-11-19T06:09:09","Actor":"daholste","Number":"1667","RawContent":null,"Title":"Crash in OnlineGradientDescentRegressor","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nRan AutoML\r\n- **What happened?**\r\nException below\r\n\r\n### Source code / logs\r\n\r\nException:\r\n```\r\nTrainers.OnlineGradientDescentRegressor{LearningRate:1, DecreaseLearningRate:True, L2RegularizerWeight:0.3115694, NumIterations:7, InitWtsDiameter:0.537725, Shuffle:True} Crashed System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.InvalidOperationException: The weights/bias contain invalid values (NaN or Infinite). Potential causes: high learning rates, no normalization, high initial weights, etc.\r\n   at Microsoft.ML.Runtime.Contracts.Check(IExceptionContext ctx, Boolean f, String msg) in C:\\MLDotNet\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 501\r\n   at Microsoft.ML.Trainers.Online.OnlineLinearTrainer`2.TrainModelCore(TrainContext context) in C:\\MLDotNet\\src\\Microsoft.ML.StandardLearners\\Standard\\Online\\OnlineLinear.cs:line 275\r\n   at Microsoft.ML.Runtime.Training.TrainerEstimatorBase`2.Train(TrainContext context) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 93\r\n   at Microsoft.ML.Runtime.Training.TrainerEstimatorBase`2.Microsoft.ML.Runtime.ITrainer.Train(TrainContext context) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 159\r\n   at Microsoft.ML.Runtime.Data.TrainUtils.TrainCore(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, RoleMappedData validData, IComponentFactory`1 calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inputPredictor, RoleMappedData testData) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\Commands\\TrainCommand.cs:line 276\r\n   at Microsoft.ML.Runtime.Data.TrainUtils.Train(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, IComponentFactory`1 calibrator, Int32 maxCalibrationExamples) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\Commands\\TrainCommand.cs:line 245\r\n   at Microsoft.ML.Runtime.EntryPoints.LearnerEntryPointsUtils.Train[TArg,TOut](IHost host, TArg input, Func`1 createTrainer, Func`1 getLabel, Func`1 getWeight, Func`1 getGroup, Func`1 getName, Func`1 getCustom, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\InputBase.cs:line 189\r\n   at Microsoft.ML.Trainers.Online.OnlineGradientDescentTrainer.TrainRegression(IHostEnvironment env, Arguments input) in C:\\MLDotNet\\src\\Microsoft.ML.StandardLearners\\Standard\\Online\\OnlineGradientDescent.cs:line 178\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode.Run() in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 826\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointGraph.RunNode(EntryPointNode node) in C:\\MLDotNet\\src\\Microsoft.ML.Data\\EntryPoints\\EntryPointNode.cs:line 1022\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.RunAllNonMacros() in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\EntryPoints\\JsonUtils\\GraphRunner.cs:line 67\r\n   at Microsoft.ML.Runtime.EntryPoints.JsonUtils.GraphRunner.RunAll() in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\EntryPoints\\JsonUtils\\GraphRunner.cs:line 55\r\n   at Microsoft.ML.Runtime.Experiment.Run() in C:\\MLDotNet\\src\\Microsoft.ML.Legacy\\Runtime\\Experiment\\Experiment.cs:line 130\r\n   at Microsoft.ML.Runtime.PipelineInference.PipelinePattern.RunTrainTestExperiment(IDataView trainData, IDataView testData, SupportedMetric metric, TrainerKinds trainerKind, Double& testMetricValue, Double& trainMetricValue) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\PipelinePattern.cs:line 212\r\n   at Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.ProcessPipeline(SweeperProbabilityUtils utils, Stopwatch stopwatch, PipelinePattern candidate, Int32 numOfTrainingRows) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\AutoInference.cs:line 251\r\n   at Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.MainLearningLoop(Int32 batchSize, Int32 numOfTrainingRows) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\AutoInference.cs:line 224\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1667","RelatedDescription":"Open issue \"Crash in OnlineGradientDescentRegressor\" (#1667)"},{"Id":"382069907","IsPullRequest":false,"CreatedAt":"2018-11-19T06:07:39","Actor":"daholste","Number":"1666","RawContent":null,"Title":"Exception in AutoML Hyperparam Sweeper","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n\r\n### Source code / logs\r\n```\r\nSystem.InvalidOperationException: Value not in correct range\r\n   at Microsoft.ML.Runtime.Contracts.Check(Boolean f, String msg) in C:\\MLDotNet\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 496\r\n   at Microsoft.ML.Runtime.Sweeper.FloatValueGenerator.NormalizeValue(IParameterValue value) in C:\\MLDotNet\\src\\Microsoft.ML.Sweeper\\Parameters.cs:line 442\r\n   at Microsoft.ML.Runtime.Sweeper.Algorithms.SweeperProbabilityUtils.ParameterSetAsFloatArray(IHost host, IValueGenerator[] sweepParams, ParameterSet ps, Boolean expandCategoricals) in C:\\MLDotNet\\src\\Microsoft.ML.Sweeper\\Algorithms\\SweeperProbabilityUtils.cs:line 207\r\n   at Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.SampleChild(ParameterSet parent, Double fitness, Int32 n, IRunResult[] previousRuns, Double rMean, Double rVar, Boolean isMetricMaximizing) in C:\\MLDotNet\\src\\Microsoft.ML.Sweeper\\Algorithms\\KdoSweeper.cs:line 206\r\n   at Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.GenerateChildConfigurations(IRunResult[] history, Int32[] parentIndicies, Double[] weights, IRunResult[] previousRuns, Double rMean, Double rVar) in C:\\MLDotNet\\src\\Microsoft.ML.Sweeper\\Algorithms\\KdoSweeper.cs:line 187\r\n   at Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.GenerateCandidateConfigurations(Int32 numOfCandidates, IRunResult[] previousRuns) in C:\\MLDotNet\\src\\Microsoft.ML.Sweeper\\Algorithms\\KdoSweeper.cs:line 176\r\n   at Microsoft.ML.Runtime.Sweeper.Algorithms.KdoSweeper.ProposeSweeps(Int32 maxSweeps, IEnumerable`1 previousRuns) in C:\\MLDotNet\\src\\Microsoft.ML.Sweeper\\Algorithms\\KdoSweeper.cs:line 153\r\n   at Microsoft.ML.Runtime.PipelineInference.PipelineOptimizerBase.SampleHyperparameters(SuggestedLearner learner, ISweeper sweeper, Boolean isMaximizingMetric, PipelinePattern[] history) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\Interfaces\\IPipelineOptimizer.cs:line 143\r\n   at Microsoft.ML.Runtime.PipelineInference.RocketEngine.SampleHyperparameters(SuggestedLearner learner, PipelinePattern[] history) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\AutoMlEngines\\RocketEngine.cs:line 128\r\n   at Microsoft.ML.Runtime.PipelineInference.RocketEngine.NextCandidates(PipelinePattern[] history, Int32 numCandidates, Boolean defaultHyperParams, Boolean uniformRandomTransforms) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\AutoMlEngines\\RocketEngine.cs:line 309\r\n   at Microsoft.ML.Runtime.PipelineInference.RocketEngine.GetNextCandidates(IEnumerable`1 history, Int32 numCandidates, RoleMappedData dataRoles) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\AutoMlEngines\\RocketEngine.cs:line 266\r\n   at Microsoft.ML.Runtime.PipelineInference.AutoInference.AutoMlMlState.MainLearningLoop(Int32 batchSize, Int32 numOfTrainingRows) in C:\\MLDotNet\\src\\Microsoft.ML.PipelineInference\\AutoInference.cs:line 213\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1666","RelatedDescription":"Open issue \"Exception in AutoML Hyperparam Sweeper\" (#1666)"},{"Id":"382069406","IsPullRequest":false,"CreatedAt":"2018-11-19T06:05:22","Actor":"daholste","Number":"1665","RawContent":null,"Title":"AutoML seeks to minimize RSquared, instead of maximize it","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n\r\n### Issue\r\n\r\nAutoML seeks to minimize RSquared, instead of maximize it --\r\nhttps://github.com/dotnet/machinelearning/blob/e0906608ca0d37ad0c10ba647e83b45990afde43/src/Microsoft.ML.PipelineInference/PipelineSweeperSupportedMetrics.cs#L84","Url":"https://github.com/dotnet/machinelearning/issues/1665","RelatedDescription":"Open issue \"AutoML seeks to minimize RSquared, instead of maximize it\" (#1665)"},{"Id":"382046627","IsPullRequest":true,"CreatedAt":"2018-11-19T03:48:01","Actor":"wschin","Number":"1664","RawContent":null,"Title":"Enable implicit-feedback recommendation via one-class matrix factorization","State":"open","Body":"This PR updates LIBMF used in ML.NET to the latest [official master](https://github.com/cjlin1/libmf) for adding a parallel coordinate descent method which solves one-class matrix factorization. It's a part of #1408 and the remaining tasks are SSE and more formulations (current ML.NET treats LIBMF as a library for regression problem so that classification and ranking formulation are not allowed).","Url":"https://github.com/dotnet/machinelearning/pull/1664","RelatedDescription":"Open PR \"Enable implicit-feedback recommendation via one-class matrix factorization\" (#1664)"},{"Id":"381901165","IsPullRequest":true,"CreatedAt":"2018-11-17T21:07:23","Actor":"robosek","Number":"1663","RawContent":null,"Title":"Move evaluation results to separate classes","State":"open","Body":"Fixes #1280 \r\n\r\nNOTE:\r\n- [x]  Moved results from (Ranking, Multiclass, Regression, Clustering, Binary) evaluators to separte classes under `Evaluators/Metrics` directory.\r\n- [x] Adjusted types in dependent projects classes.\r\n- [x] Build `Release` and `Debug` successful on local :+1:  \r\n ","Url":"https://github.com/dotnet/machinelearning/pull/1663","RelatedDescription":"Open PR \"Move evaluation results to separate classes\" (#1663)"},{"Id":"381854072","IsPullRequest":false,"CreatedAt":"2018-11-17T11:23:44","Actor":"tauheedul","Number":"1662","RawContent":null,"Title":"Will there be ML.NET support for ARM applications?","State":"open","Body":"Build 0.7 introduced support for x86 applications.\r\nWill ARM support also be included? \r\nExamples of usages are Always Connected Windows 10/Linux laptops running ARM processors\r\n\r\n.NET Core supports ARM so the route to enable it should be possible","Url":"https://github.com/dotnet/machinelearning/issues/1662","RelatedDescription":"Open issue \"Will there be ML.NET support for ARM applications?\" (#1662)"},{"Id":"381815949","IsPullRequest":false,"CreatedAt":"2018-11-17T01:50:49","Actor":"Ivanidzo4ka","Number":"1660","RawContent":null,"Title":"ReadOnlyMemory<char> codec fails if we write and then read empty vector","State":"open","Body":"How to reproduce:\r\nGo to WordBagWorkout test and set WordHashBagEstimator to have invertHash to be -1\r\n`Append(new WordHashBagEstimator(Env, \"text\", \"bag_of_wordshash\", invertHash:-1));`\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/bc6d7f463258eb4fc9af5ce55b9b426b626312fe/src/Microsoft.ML.Data/Transforms/InvertHashUtils.cs#L397\r\n\r\nthis thing will try to save VBuffer<ReadOnlyMemory<char>> with size of 65536 and empty values and indices arrays.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/bc6d7f463258eb4fc9af5ce55b9b426b626312fe/src/Microsoft.ML.Data/Transforms/InvertHashUtils.cs#L363\r\nthis thing will try to read it and fails on\r\n`ch.CheckDecode(stream.ReadByte() == -1);`\r\n\r\nIn case of empty VBuffer we currently write following information:\r\n4 bytes: How many vectors we have - 1\r\n4 bytes: Size of all vectors - 65536\r\n4 bytes: Counts for each vector - 0\r\n4 bytes: size of indices array  - 0\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/d0522f36699f7acf1879645c2570e3c4094946ee/src/Microsoft.ML.Data/DataLoadSave/Binary/Codecs.cs#L1054\r\nprevents stops us from reading further in stream because we determine absence of values.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/d0522f36699f7acf1879645c2570e3c4094946ee/src/Microsoft.ML.Data/DataLoadSave/Binary/Codecs.cs#L870\r\nthis code responsible for filling buffer during save\r\nwe write same things:\r\n4 bytes: How many vectors we have - 1\r\n4 bytes: Size of all vectors - 65536\r\n4 bytes: Counts for each vector - 0\r\n4 bytes: size of indices array  - 0\r\nPlus content of value writer which is stream with size of vector and builder you need to use to populate it during reading. \r\n5 bytes: 0 + \"\"\r\n\r\nWhich brings inconsistency and exception\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1660","RelatedDescription":"Open issue \"ReadOnlyMemory<char> codec fails if we write and then read empty vector\" (#1660)"},{"Id":"381792709","IsPullRequest":true,"CreatedAt":"2018-11-16T23:11:03","Actor":"shmoradims","Number":"1658","RawContent":null,"Title":"Enable PermutationFeatureImportance for Regression","State":"open","Body":"This is a PR to enable PermutationFeatureImportance feature for model explainability. It shows how to do PFI for a regression model.\r\n\r\nDiscussion points / open issues:\r\n* Namespace: I'm having some circular dependency issues, so MLContext.Regression.PermutationFeatureImportance() is not fully implemented yet. I've put a comment in there.\r\n* Final name: PermutationFeatureImportance or something else?\r\n* Return type: It used to be IDataView in TLC. I suggest we return List<(string featureName, RegressionEvaluator.Result metricsDelta)> instead.\r\n* Weight Filtering: TLC had weight filtering features by using IPredictorWithFeatureWeights. We can't do this in ML.NET so I removed that option.\r\n* Report file: TLC produces a text report file. I left that option out. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/1658","RelatedDescription":"Open PR \"Enable PermutationFeatureImportance for Regression\" (#1658)"},{"Id":"381787388","IsPullRequest":true,"CreatedAt":"2018-11-16T22:46:26","Actor":"Anipik","Number":"1657","RawContent":null,"Title":"Removed AlignedArray ","State":"open","Body":"- Removed Aligned Array\r\n- Matmul and MatmulTran modified for any dimension of row and col\r\n- added some more tests for new dimension changes\r\n- corrected the base implementation of MatMulTrans\r\n- added tolerance for some tests for netcoreapp3.0\r\n\r\n\r\nFixes https://github.com/dotnet/machinelearning/issues/1018\r\nRelated to https://github.com/dotnet/machinelearning/issues/1096\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1657","RelatedDescription":"Open PR \"Removed AlignedArray \" (#1657)"},{"Id":"381786530","IsPullRequest":true,"CreatedAt":"2018-11-16T22:42:33","Actor":"montebhoover","Number":"1656","RawContent":null,"Title":"[WIP] Static extension work for time series.","State":"open","Body":"Static extension work for time series.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1656","RelatedDescription":"Open PR \"[WIP] Static extension work for time series.\" (#1656)"},{"Id":"381728015","IsPullRequest":true,"CreatedAt":"2018-11-16T19:21:01","Actor":"yaeldekel","Number":"1654","RawContent":null,"Title":"Fix CodeGen command and add a unit test","State":"open","Body":"Fixes #1643 .\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1654","RelatedDescription":"Open PR \"Fix CodeGen command and add a unit test\" (#1654)"},{"Id":"381707652","IsPullRequest":false,"CreatedAt":"2018-11-16T18:16:09","Actor":"eerhardt","Number":"1653","RawContent":null,"Title":"DifferentiableFunctionAggregator doesn't appear to be used - can we delete it?","State":"open","Body":"See the comment on https://github.com/dotnet/machinelearning/pull/1650/files#r234085400.\r\n\r\nWe don't appear to be using this class at all. We should investigate removing it. And if we decide we need it, we should put it under some tests.","Url":"https://github.com/dotnet/machinelearning/issues/1653","RelatedDescription":"Open issue \"DifferentiableFunctionAggregator doesn't appear to be used - can we delete it?\" (#1653)"},{"Id":"381672814","IsPullRequest":false,"CreatedAt":"2018-11-16T16:33:48","Actor":"rogancarr","Number":"1652","RawContent":null,"Title":"SCDA Summary Not Sorted","State":"open","Body":"The `Summary()` for `SDCA` does not sort the output by the feature index. This makes it difficult to read. For reference, `OLS` does sort by the feature index and is easy to read.\r\n\r\nVersion: ML.NET 0.7 Release\r\n\r\nExample `Summary()` output:\r\n```\r\nLinear Regression Predictor non-zero weights\r\n\r\n(Bias)  -0.4338956\r\n15      0.8659377\r\n14      0.6250594\r\n0       0.5953168\r\n7       -0.5625336\r\n6       -0.5331995\r\n8       -0.5284117\r\n5       -0.450398\r\n9       -0.430093\r\n13      0.3840194\r\n1       0.3470894\r\n4       -0.3077467\r\n10      -0.2826627\r\n12      0.1388556\r\n3       -0.1202137\r\n2       0.103458\r\n11      -0.09171117\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/1652","RelatedDescription":"Open issue \"SCDA Summary Not Sorted\" (#1652)"},{"Id":"381630876","IsPullRequest":false,"CreatedAt":"2018-11-16T14:52:22","Actor":"petterton","Number":"1651","RawContent":null,"Title":"Monotone_constraints in LightGbm","State":"open","Body":"In my ML problem I get significantly better results from `LightGbm` by using the `monotone_constraints`  [parameter](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst#monotone_constraints). I can not see that this is available through the ML.NET interface. Could this be added?","Url":"https://github.com/dotnet/machinelearning/issues/1651","RelatedDescription":"Open issue \"Monotone_constraints in LightGbm\" (#1651)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-11-20T05:30:34.4157501Z","RunDurationInMilliseconds":1034}