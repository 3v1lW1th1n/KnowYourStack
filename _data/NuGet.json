{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11112314524","Type":"IssuesEvent","CreatedAt":"2019-12-18T01:03:29","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7780","RelatedDescription":"Opened issue \"Reflowing packages with package types cause the records to be duplicated\" (#7780) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/71047031-1af8b180-20ef-11ea-9a5a-150ddaffb3f1.png)\r\n\r\nThere should only be one."},{"Id":"11111440208","Type":"IssuesEvent","CreatedAt":"2019-12-17T22:12:13","Actor":"volanavlad","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7779","RelatedDescription":"Opened issue \"Some tests fails due to culture and line endings\" (#7779) at NuGet/NuGetGallery","RelatedBody":"\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this git commit of NuGetGallery '705020bef78e677b41b3303d2eb02c79e165a652'\r\n2. Run tests when current culture is Russian (i.e. ru-...)\r\n3. See:\r\nNuGetGallery.Security.MicrosoftTeamSubscriptionFacts.Policies_ReturnsMicrosoftTeamSubscriptionPolicies:\r\n Assert.Equal() Failure\r\n                                     ↓ (pos 958)\r\n    Expected: ···r more information.\\r\\nPolicy violations: {0}\"}\r\n    Actual:   ···r more information.\\nPolicy violations: {0}\"}\r\n                                     ↑ (pos 958)\r\n\r\n\r\nNuGetGallery.Packaging.PackageMetadataFacts.ThrowsForEmptyAndNonEmptyDuplicatesWhenDuplicateMetadataElementsDetectedAndParsingIsNotStrict\r\n \r\n    Assert.Equal() Failure\r\n              ↓ (pos 0)\r\n    Expected: An item with the same key has already bee···\r\n    Actual:   Элемент с тем же ключом уже был добавлен.\r\n              ↑ (pos 0)\r\n\r\n\r\nNuGetGallery.Packaging.PackageMetadataFacts.ThrowsWhenInvalidMinClientVersion(strict: True)\r\n    Assert.Equal() Failure\r\n                                       ↓ (pos 38)\r\n    Expected: ···id version string.\\r\\nParameter name: value\r\n    Actual:   ···id version string.\\r\\nИмя параметра: value\r\n                                       ↑ (pos 38)\r\n\r\nand so on\r\n\r\n### Expected behavior\r\nTests work OK\r\n\r\n### Additional context\r\nIt would be better to have localized strings in test asserts where it causes test failures."},{"Id":"11111341653","Type":"IssuesEvent","CreatedAt":"2019-12-17T21:57:37","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7720","RelatedDescription":"Closed issue \"Rename PackageVulnerability's ReferenceUrl to AdvisoryUrl and make it required\" (#7720) at NuGet/NuGetGallery","RelatedBody":"Current db model assumes this is optional. It is not. The term _reference_ also doesn't match the target object type for this URL, which is an _advisory_."},{"Id":"11111341424","Type":"PullRequestEvent","CreatedAt":"2019-12-17T21:57:35","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7777","RelatedDescription":"Merged pull request \"[ReleasePrep][2019.12.17] RI dev to master\" (#7777) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11111330363","Type":"IssuesEvent","CreatedAt":"2019-12-17T21:55:56","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7775","RelatedDescription":"Closed issue \"Is there a way to modify the licenseInfo link after a nuget package is published\" (#7775) at NuGet/NuGetGallery","RelatedBody":"Is there a way to modify the licenseInfo link after the nuget package is published?\r\n\r\nI had an invalid URL in the licenseInfo link. Now i want to modify it. I had sent a mail to nuget.org support but haven't received any response from them yet. Is there a way i can do it myself.\r\n\r\nThanks"},{"Id":"11111260938","Type":"PullRequestEvent","CreatedAt":"2019-12-17T21:45:39","Actor":"volanavlad","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7778","RelatedDescription":"Opened pull request \"Fix culture and line endings issues in tests\" (#7778) at NuGet/NuGetGallery","RelatedBody":"Fix some tests failures:\r\n\r\n* Due to bad line endings in xml resources. Replaced to xml entities  `&#13;&#10;` \r\n\r\n* If current culture is not invariant some tests fail due to exception messages are localized while assert strings are not. So it would be better to have localized strings in tests.\r\n\r\n\r\n"},{"Id":"11111193386","Type":"PullRequestEvent","CreatedAt":"2019-12-17T21:35:36","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7777","RelatedDescription":"Opened pull request \"[ReleasePrep][2019.12.17] RI dev to master\" (#7777) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11111187928","Type":"PullRequestEvent","CreatedAt":"2019-12-17T21:34:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7776","RelatedDescription":"Merged pull request \"Revert \"No longer depend on Obsolete AppInsights APIs\"\" (#7776) at NuGet/NuGetGallery","RelatedBody":"This reverts commit bb5a8eb46483c383c9c4e42317b9a62bb6f27856. The PR that pushed this in was https://github.com/NuGet/NuGetGallery/pull/7745."},{"Id":"11110722897","Type":"IssuesEvent","CreatedAt":"2019-12-17T20:28:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/3778","RelatedDescription":"Closed issue \"Search rankings file is calculated by partial information\" (#3778) at NuGet/NuGetGallery","RelatedBody":"Rankings file calculation takes into account only downloads with \"update\" or \"install\" operations, however this information is not provided my newer clients, and they don't send it as part of the header:\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/master/src/Search.GenerateAuxiliaryData/SqlScripts/Rankings.sql#L25\r\n\r\nhttps://www.nuget.org/stats/packages/newtonsoft.json?groupby=Version&groupby=Operation\r\n"},{"Id":"11110668448","Type":"IssuesEvent","CreatedAt":"2019-12-17T20:21:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7642","RelatedDescription":"Closed issue \"Consider not tokenizing tags\" (#7642) at NuGet/NuGetGallery","RelatedBody":"Right now tags use the default analyzer in Azure Search which is the \"Standard\" analyzer. This tokenizes in some reasonable places (like spaces) but it some not-so-great places like hyphens. Underscores are not tokenized. This is rather inconsistent.\r\n\r\nMy hypothesis is that tags should be treated in a case insensitive manner but should not be tokenized on hyphens or underscores. Dots and other symbols are debatable.\r\n\r\nQuery [Tags:\"Storage_2019-04-01\"](https://www.nuget.org/packages?q=Tags%3A%22Storage_2019-04-01%22) may not be working as expected. Perhaps we could reach out to the package authors to understand their specific expectations for a sanity check.\r\n\r\nSome data:\r\n- 107,623 package IDs have tags on their latest version\r\n- 590 / 107623 = 0.5% of these have an underscore (`_`) in their tags\r\n- 11306 / 107623 = 10.5% of these have a hyphen (`-`) in their tags\r\n- 20195 / 107623 = 18.8% of these have a dot (`.`) in their tags\r\n\r\nAnother note is that PowerShell gallery uses hyphens in their tags extensively (when cmdlet names are a tag) so this behavior is bad for that too."},{"Id":"11110638474","Type":"IssuesEvent","CreatedAt":"2019-12-17T20:16:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/2437","RelatedDescription":"Closed issue \"AutoComplete endpoint in Search provides response in (almost) random order\" (#2437) at NuGet/NuGetGallery","RelatedBody":"Given a large number of potential matches (based on ngrams) the query attempts to return results ordered by relevance. However, at least initially, for the first few characters typed, because this is ngram matches the only thing the relevance is judged by is essentially downloads. And downloads only influence the top 250. Otherwise the order is determined by other factors, such as the time the package was actually added to the index.\n\nThis is complicated further by the fact that the ngram tokenization is applied after the regular camel/dot split tokenization we do on the id field. The impact of this is subwords not at the front of the Id can match the query.\n\nIn other words the final result is that the order is essentially random.\n\nThe fix here is to decide on a reasonable order, including a definition of relevance and return that.\n\nThis fix is purely an algorithm change internally with the server. It does not impact the contract with the client, just the data that is returned.\n"},{"Id":"11110585908","Type":"IssuesEvent","CreatedAt":"2019-12-17T20:09:23","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5858","RelatedDescription":"Closed issue \"Autocomplete query for Microsoft.CodeA doesn't return any results\" (#5858) at NuGet/NuGetGallery","RelatedBody":"It seems that when I make an autocomplete query to the API, I sometimes don't get any results, even when a package with the given prefix exists.\r\n\r\nSpecifically:\r\n\r\n* https://api-v2v3search-0.nuget.org/autocomplete?q=Microsoft.Code works fine\r\n* https://api-v2v3search-0.nuget.org/autocomplete?q=Microsoft.CodeA doesn't return anything\r\n* https://api-v2v3search-0.nuget.org/autocomplete?q=Microsoft.CodeAna doesn't return anything\r\n* https://api-v2v3search-0.nuget.org/autocomplete?q=Microsoft.CodeAnal works fine"},{"Id":"11109699331","Type":"PullRequestEvent","CreatedAt":"2019-12-17T18:10:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7776","RelatedDescription":"Opened pull request \"Revert \"No longer depend on Obsolete AppInsights APIs\"\" (#7776) at NuGet/NuGetGallery","RelatedBody":"This reverts commit bb5a8eb46483c383c9c4e42317b9a62bb6f27856. The PR that pushed this in was https://github.com/NuGet/NuGetGallery/pull/7745."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11112292001","Type":"IssuesEvent","CreatedAt":"2019-12-18T00:58:30","Actor":"PawcioCNCProfi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8957","RelatedDescription":"Opened issue \"Item template is no longer visible after adding Asset elements\" (#8957) at NuGet/Home","RelatedBody":"- After adding the `Asset` elements for nuget packages. The template is no longer listed in list of available item to add to projects.\n\n- I also don't understand why do I need to set `repositoryId` in template properties to VSIX project id, essentially creating circular dependency between those project. \n\n- The \"2. Place your `nupkg` files in a folder called `Packages` within the VSIX.\" instruction is also not clear. Is putting the folder in file system enough? Do I need to also include it in the project definition? Should I copy it to output directory or set the files as resources? \n- Where exactly do I put the `&lt;Reference ...&gt;` element mentioned in \"Best practices\"?\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: bbf9be6a-e7b0-b9b6-a3e8-8b5de3c6900d\n* Version Independent ID: c12505c9-6f14-7111-2578-5c2664b4515d\n* Content: [NuGet Packages in Visual Studio templates](https://docs.microsoft.com/en-us/nuget/visual-studio-extensibility/visual-studio-templates)\n* Content Source: [docs/visual-studio-extensibility/Visual-Studio-Templates.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/visual-studio-extensibility/Visual-Studio-Templates.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**"},{"Id":"11111778687","Type":"IssuesEvent","CreatedAt":"2019-12-17T23:09:06","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8956","RelatedDescription":"Opened issue \"Update... & Update All... commands in Context Menu\" (#8956) at NuGet/Home","RelatedBody":"From PM Tracking Issue: **Show NuGet commands in context menu**: https://github.com/NuGet/Home/issues/8041 \r\n\r\nLooking for details (ie, PM Spec) for what the expected experience is for these bullets. \r\n\r\nThey appear to be new features but I don’t see details about how they are expected to work:\r\n- Show Update All... on Packages node for SDK style projects\r\n- Show Update... on individual NuGet packages at the top level\r\n\r\n"},{"Id":"11110476077","Type":"IssuesEvent","CreatedAt":"2019-12-17T19:54:21","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8955","RelatedDescription":"Opened issue \"Bless NuGet.exe 5.4.0\" (#8955) at NuGet/Home","RelatedBody":"- [ ] Change the link https://dist.nuget.org/win-x86-commandline/latest/nuget.exe to point to 5.4.0\r\n- [ ] Push packages to nuget.org"},{"Id":"11110355983","Type":"IssuesEvent","CreatedAt":"2019-12-17T19:38:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8927","RelatedDescription":"Closed issue \"Add more settings tests - completely cover project\\sln level support across products\" (#8927) at NuGet/Home","RelatedBody":"Add more settings tests - completely cover project\\sln level support across products"},{"Id":"11109907675","Type":"IssuesEvent","CreatedAt":"2019-12-17T18:38:28","Actor":"v-strob","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8954","RelatedDescription":"Opened issue \"Could not resolve type with token 0100024c on Ubuntu 18.04 with NuGet 5.31 and newer\" (#8954) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 5.3.1, 5.4.0, 5.5.0-preview1\r\n\r\nOS version: Ubuntu 18.04.2 LTS (ran through Windows Subsystem for Linux, in my case)\r\n\r\nWorked before? If so, with which NuGet version: 5.2.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. sudo apt install mono-devel\r\n1. wget https://dist.nuget.org/win-x86-commandline/v5.5.0-preview1/nuget.exe\r\n1. mono ./nuget.exe \r\n\r\nGet the error `Could not resolve type with token 0100024c` instead of outputting a list of available NuGet commands. If it's not meant to run in the given setup, it would be nice to get an error explaining what's missing.\r\n\r\n### Verbose Logs\r\n\r\nFull command line output from the steps above:\r\n\r\n```\r\nCould not resolve type with token 0100024c\r\nSystem.TypeLoadException: Could not resolve type with token 0100024c\r\n  at (wrapper managed-to-native) System.Reflection.MonoMethodInfo:get_method_info (intptr,System.Reflection.MonoMethodInfo&)\r\n  at System.Reflection.MonoMethodInfo.GetMethodInfo (System.IntPtr handle) [0x00000] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.Reflection.MonoMethod.GetPseudoCustomAttributes () [0x00002] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.MonoCustomAttrs.GetPseudoCustomAttributes (System.Reflection.ICustomAttributeProvider obj, System.Type attributeType) [0x0000d] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.MonoCustomAttrs.IsDefined (System.Reflection.ICustomAttributeProvider obj, System.Type attributeType, System.Boolean inherit) [0x0003b] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at System.Reflection.MonoMethod.IsDefined (System.Type attributeType, System.Boolean inherit) [0x00000] in <8f2c484307284b51944a1a13a14c0266>:0\r\n  at Microsoft.Internal.AttributeServices.IsAttributeDefined[T] (System.Reflection.ICustomAttributeProvider attributeProvider, System.Boolean inherit) [0x00000] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo.IsExport (System.Reflection.ICustomAttributeProvider attributeProvider) [0x00000] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo+<GetExportMembers>c__Iterator0.MoveNext () [0x001cd] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.Linq.Enumerable.Any[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <63992662b765477a898ef49cdcc99ee2>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo.HasExports () [0x0000c] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo.IsPartDiscoverable () [0x0001d] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery.CreatePartDefinitionIfDiscoverable (System.Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin) [0x0000a] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.Hosting.TypeCatalog.get_PartsInternal () [0x00052] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.ComponentModel.Composition.Hosting.TypeCatalog.CreateIndex () [0x0000b] in <0007e672dd7f4959adc6f8103d9c843f>:0\r\n  at System.Lazy`1[T].CreateValue () [0x00075] in <8f2c484307284b51944a1a13a14c0266>:0\r\n```\r\n\r\n"},{"Id":"11109657623","Type":"IssuesEvent","CreatedAt":"2019-12-17T18:04:55","Actor":"AndreyAkinshin","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8953","RelatedDescription":"Opened issue \"CachingSourceProvider should be able to work with custom set of resource providers\" (#8953) at NuGet/Home","RelatedBody":"Currently, it has only a single ctor with predefined set of resource providers:\r\n```cs\r\npublic CachingSourceProvider(IPackageSourceProvider packageSourceProvider)\r\n{\r\n    _packageSourceProvider = packageSourceProvider;\r\n\r\n    _resourceProviders.AddRange(Repository.Provider.GetCoreV3());\r\n\r\n    _repositories = _packageSourceProvider.LoadPackageSources()\r\n        .Where(s => s.IsEnabled)\r\n        .Select(CreateRepository)\r\n        .ToList();\r\n}\r\n```"},{"Id":"11109393327","Type":"IssuesEvent","CreatedAt":"2019-12-17T17:30:00","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8506","RelatedDescription":"Closed issue \"msbuild /restore works with Packages.Config\" (#8506) at NuGet/Home","RelatedBody":"Spec: [Backporting PC to msbuild /restore](https://github.com/NuGet/Home/wiki/Backporting-PC-to-msbuild--restore)\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): msbuild\r\n\r\nNuGet version (x.x.x.xxx): current\r\n\r\n## Tracking issues\r\n\r\n* [ ] Get the code working in usual scenarios #8676\r\n* [x] Write E2E tests: #8677\r\n* [ ] Refactor into shared code #8678\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a P.C project\r\n\r\n2. Try to restore using `msbuild /restore`\r\n"},{"Id":"11109393265","Type":"IssuesEvent","CreatedAt":"2019-12-17T17:30:00","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8676","RelatedDescription":"Closed issue \"Backporting P.C: Get the code working in usual scenarios\" (#8676) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): msbuild\r\n\r\nThis is a tracking issue associated with #8506, dedicated to getting the code working in usual scenarios.\r\n\r\n"},{"Id":"11109393309","Type":"IssuesEvent","CreatedAt":"2019-12-17T17:30:00","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8677","RelatedDescription":"Closed issue \"Backporting P.C: E2E tests\" (#8677) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): msbuild\r\n\r\nThis is a tracking issue associated with #8506 for tracking progress on writing end to end tests."},{"Id":"11108412637","Type":"IssuesEvent","CreatedAt":"2019-12-17T15:42:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8778","RelatedDescription":"Closed issue \"--skip-duplicate support for dotnet nuget push\" (#8778) at NuGet/Home","RelatedBody":"As part of the work for adding option --skip-duplicate to `dotnet nuget push` (https://github.com/NuGet/Home/issues/8100), the dotnet parser also needs to be updated in order to support <tab> auto-completion and telemetry.\r\n\r\n"},{"Id":"11108345498","Type":"IssuesEvent","CreatedAt":"2019-12-17T15:35:18","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5049","RelatedDescription":"Closed issue \"Add Manage NuGet packages to context menu for NuGet node\" (#5049) at NuGet/Home","RelatedBody":"Any reason why we don't have \"Manage NuGet packages\" for the NuGet node under Dependencies?\r\n\r\nNote: screenshot taken from an asp.net core project.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1283154/25110986/f8b337dc-239c-11e7-8d24-ce4bf9ae7505.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-12-18T05:30:46.4158318Z","RunDurationInMilliseconds":1971}