{"Data":{"Blog":{"FeedItems":[{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T15:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last fall, Apple announced that new applications and updates would need to support the Apple Watch Series 4. &#8220;Starting March 2019, all new apps and app updates for iPhone, including universal...","Href":"https://blog.xamarin.com/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9300680546","Type":"IssuesEvent","CreatedAt":"2019-03-23T15:44:30","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2872","RelatedDescription":"Opened issue \"Updated all Nuget References to use `PackageReference`\" (#2872) at xamarin/xamarin-android","RelatedBody":"We currently have allot of duplicated nuget references in `package.config` files. This makes is a pain to upgrade them all. We should split out the references into specific `*.props` files e.g `NUnitNugetReference.props` which will include `PackageReference` entries. Then have the relevant projects just include those. This way we can upgrade in one single place."},{"Id":"9299578058","Type":"PullRequestEvent","CreatedAt":"2019-03-23T04:54:04","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2871","RelatedDescription":"Opened pull request \"[docs] Sync BuildProcess from docs.microsoft.com\" (#2871) at xamarin/xamarin-android","RelatedBody":"Apply the link updates and formatting changes from the matching page on\r\ndocs.microsoft.com:\r\nhttps://docs.microsoft.com/xamarin/android/deploy-test/building-apps/build-process"},{"Id":"9298944900","Type":"PullRequestEvent","CreatedAt":"2019-03-22T23:15:53","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2870","RelatedDescription":"Opened pull request \"[java-runtime] Remove debug files from java_runtime.jar\" (#2870) at xamarin/xamarin-android","RelatedBody":"Commit xxxx added the new java_runtime.jar and\r\njava_runtime_fastdev.jar files. The idea is the\r\njava_runtime.jar was the release version of the\r\nruntime. It should NOT contain files such as\r\n\r\n\tmono/android/ResourcePatcher.class\r\n\tmono/android/Seppuku.class\r\n\tmono/android/MonkeyPatcher.class\r\n\r\nThese are for fast dev only.\r\n\r\nHowever we were including these files!!\r\n\r\nThis was because of a couple of problems.\r\n1) The `RemoveItems` property of `_RuntimeOutput` was being\r\ntreated like an ItemGroup when it is infact a property.\r\nSo we need to semi-colon seperate the items to make sure\r\nthey are ALL removed rather then it just being the last one\r\nlisted.\r\n\r\n2) Because the `Inputs` was changed to `@(_RuntimeOutput)`\r\nit means the target will run only ONCE. As a result both the\r\n`release.txt` and `fastdev.txt` files contained the SAME\r\nfile list. What we should have been doing was using Target\r\nBatching via\r\n\r\n\t%(_RuntimeOutput.OutputJar)\r\n\r\nThis makes sure the target runs for EACH output. This will\r\nresult in the behaviour we want, i.e  the files listed\r\nabove NOT being in the release version of the jar."},{"Id":"9298769118","Type":"PullRequestEvent","CreatedAt":"2019-03-22T22:25:47","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2869","RelatedDescription":"Opened pull request \"[Linux build] Debian/testing has libncurses6 instead of libncurses5\" (#2869) at xamarin/xamarin-android","RelatedBody":"We're trying to upgrade our Linux build bots to a newer version of Debian in\r\nhopes to fix a problem with cross-building LLVM for Windows with MinGW. However,\r\nDebian/testing (codename buster) does not install `libncurses5` by default,\r\ninstead it comes with `libncurses6` which makes the preparation phase of the\r\nbuild fail.\r\n\r\nThis commit adds a check for Debian version and adjusts the package list\r\naccordingly."},{"Id":"9298766953","Type":"PullRequestEvent","CreatedAt":"2019-03-22T22:25:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2868","RelatedDescription":"Opened pull request \"[installers] use @(AndroidApiInfo) for frameworks list\" (#2868) at xamarin/xamarin-android","RelatedBody":"Our installers are currently missing `v9.0`:\r\n\r\n    $ zipinfo ~/Downloads/Xamarin.Android.Sdk-OSS-9.2.99.95_master_58137da.vsix | grep Mono.Android.dll\r\n    -rw----     0.0 fat 17827328 b- defN 19-Mar-22 15:14 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.4/Mono.Android.dll\r\n    -rw----     0.0 fat 17888256 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.4.87/Mono.Android.dll\r\n    -rw----     0.0 fat 19628544 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v5.0/Mono.Android.dll\r\n    -rw----     0.0 fat 19720704 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v5.1/Mono.Android.dll\r\n    -rw----     0.0 fat 20758528 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v6.0/Mono.Android.dll\r\n    -rw----     0.0 fat 22979584 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.0/Mono.Android.dll\r\n    -rw----     0.0 fat 23044096 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.1/Mono.Android.dll\r\n    -rw----     0.0 fat 24596480 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v8.0/Mono.Android.dll\r\n    -rw----     0.0 fat 24669184 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v8.1/Mono.Android.dll\r\n    -rw----     0.0 fat 26605568 b- defN 19-Mar-22 15:15 $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v9.0.99/Mono.Android.dll\r\n\r\nWhen we added API-Q, a new *unstable* framework is preventing the\r\nlatest *stable* framework from being added to the installer.\r\n\r\nWhat we can do instead, is import `Mono.Android.projitems` and use\r\nits `@(AndroidApiInfo)` item group.\r\n\r\n    <AndroidApiInfo Include=\"v9.0\">\r\n      <Name>Pie</Name>\r\n      <Level>28</Level>\r\n      <Id>28</Id>\r\n      <Stable>True</Stable>\r\n    </AndroidApiInfo>\r\n    <AndroidApiInfo Include=\"v9.0.99\">\r\n      <Name>Q</Name>\r\n      <Level>29</Level>\r\n      <Id>Q</Id>\r\n      <Stable>False</Stable>\r\n    </AndroidApiInfo>\r\n\r\nUnfortunately, getting the MSBuild transform right was quite tricky...\r\n\r\nAt first, I just tried updating the existing `<ItempGroup/>`:\r\n\r\n    <ItemGroup>\r\n      <_FrameworkDirs Include=\"@(AndroidApiInfo->'$(FrameworkSrcDir)\\%(Identity)')\" />\r\n      <_FrameworkDirsThatExist Condition=\"Exists('%(Identity)')\" Include=\"@(_FrameworkDirs)\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\AndroidApiInfo.xml')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\mono.android.dex')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.dll')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\mono.android.jar')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.pdb')\" />\r\n      <_FrameworkFiles Include=\"@(_FrameworkDirsThatExist->'%(Identity)\\RedistList\\FrameworkList.xml')\" />\r\n    </ItemGroup>\r\n\r\nThis construct fails with:\r\n\r\n    error MSB4190: The reference to the built-in metadata \"Identity\" at position 8 is not allowed in this condition \"Exists('%(Identity)')\".\r\n\r\nHowever, it works when moved *inside* a target? I am guessing that\r\n`%(Identity)` does not exist at evaluation time. MSBuild is a weird\r\nthing.\r\n\r\nI just put this `<ItemGroup/>` inside the `ConstructInstallerItems`\r\nMSBuild target.\r\n\r\nThis should make things future proof for new TFVs, but also allow PR\r\nbuilds to work."},{"Id":"9297653594","Type":"PullRequestEvent","CreatedAt":"2019-03-22T18:50:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2867","RelatedDescription":"Opened pull request \"Bump to xamarin/xamarin-android-tools/master@66d445c4\" (#2867) at xamarin/xamarin-android","RelatedBody":"Upgrades to NUnit 3.11.0 and NUnit.ConsoleRunner 3.9.0."},{"Id":"9297625325","Type":"PullRequestEvent","CreatedAt":"2019-03-22T18:45:56","Actor":"kzu","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2866","RelatedDescription":"Opened pull request \"Annotate attributes with resource category hint for the IDE\" (#2866) at xamarin/xamarin-android","RelatedBody":"The code completion experience can be improved if the editor knew\r\nwhich string properties typically come from resources so a completion\r\nsuggestion can be provided that is filtered to the type of resource\r\nthe property should be pointing to (i.e. `@(string)` vs `@(drawable)`).\r\n\r\nFixes https://github.com/xamarin/xamarin-android/issues/2862"},{"Id":"9297465822","Type":"PullRequestEvent","CreatedAt":"2019-03-22T18:19:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2863","RelatedDescription":"Merged pull request \"[monodroid] fix path to macOS libmonosgen-2.0.dylib\" (#2863) at xamarin/xamarin-android","RelatedBody":"Recent changes to the installer have broken the Android designer's\r\nintegration tests.\r\n\r\n`libmonodroid.so` is failing to startup with:\r\n\r\n    [monodroid] Setting up for DSO lookup in app data directories\r\n    [monodroid] Creating public update directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__`\r\n    [monodroid] Trying to get property debug.mono.gc.4c07178b\r\n    [monodroid] Trying to get property from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/debug.mono.gc\r\n    [monodroid] Trying to get property debug.mono.env.4c07178b\r\n    [monodroid] Trying to get property from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/debug.mono.env\r\n    [monodroid] Using override path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__\r\n    [monodroid] Using override path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid] Using override path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid] bundle app: normal mode\r\n    [monodroid] bundle_path == <nullptr>\r\n    [monodroid] Using runtime path: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/\r\n    [monodroid] checking directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/lib`\r\n    [monodroid] directory does not exist: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/lib`\r\n    [monodroid] checking directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] directory does not exist: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] checking directory: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] directory does not exist: `/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/lib`\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/data/libmonosgen-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//libmonosgen-64bit-2.0.dylib\r\n    [monodroid] Trying to load sgen from: /Library/Frameworks/Xamarin.Android.framework/Libraries//libmonosgen-2.0.dylib\r\n    [monodroid] Cannot find 'libmonosgen-2.0.dylib'. Looked in the following locations:\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp/.__override__\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpo8EG0J.tmp\r\n    [monodroid]   /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/data\r\n    [monodroid] Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n    [monodroid] Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n\r\nLooking at a successful build, the last path is being used:\r\n\r\n    [monodroid] Trying to load sgen from: /Library/Frameworks/Xamarin.Android.framework/Libraries//libmonosgen-2.0.dylib\r\n    [monodroid] Loading Mono symbols...\r\n\r\nWe recently (and intentionally) removed the `Libraries` and `Commands`\r\nsymlinks from the pkg installer:\r\n\r\n    $ ls -la /Library/Frameworks/Xamarin.Android.framework/\r\n    total 0\r\n    drwxr-xr-x   5 root  wheel   160 Mar 21 17:28 .\r\n    drwxr-xr-x  14 root  wheel   448 Dec 19 09:44 ..\r\n    lrwxr-xr-x   1 root  wheel    20 Mar 21 16:43 Commands -> Versions/Current/bin\r\n    lrwxr-xr-x   1 root  wheel    20 Mar 21 16:43 Libraries -> Versions/Current/lib\r\n    drwxr-xr-x  42 root  wheel  1344 Mar 21 16:43 Versions\r\n\r\nLooking through the designer's source (and other private repos), I\r\ncouldn't find any usage of this `Libraries` symlink.\r\n\r\nThen I found:\r\n\r\n    #elif APPLE_OS_X\r\n        static constexpr char SYSTEM_LIB_PATH[] = \"/Library/Frameworks/Xamarin.Android.framework/Libraries/\";\r\n\r\nSo if we used the path, it still would not be quite right:\r\n\r\n    /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib\r\n\r\nThere used to be a duplicate copy of `libmonosgen-2.0.dylib` in this\r\nlocation, but the latest changes to the installer have removed this\r\nfile as well.\r\n\r\nWe should actually use:\r\n\r\n    /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xamarin.android/xbuild/Xamarin/Android/lib/host-Darwin\r\n\r\nWe also don't need the trailing `/`."},{"Id":"9296327286","Type":"PullRequestEvent","CreatedAt":"2019-03-22T15:34:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2835","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tools] Bump android Tools versions.\" (#2835) at xamarin/xamarin-android","RelatedBody":"Fixes #2433\r\n\r\nWe should be using the latest versions of the android tooling\r\nif possible. If we can we should try to match the major version\r\nwith the max API level we support. In this case we are on Android\r\nP, API Level 28. So we should be using the 28.x.x versions of\r\nthe tooling.\r\n\r\nSince not all of the tools have a 28.x.x version, in those cases\r\nwe should just use the very latest."},{"Id":"9296327247","Type":"IssuesEvent","CreatedAt":"2019-03-22T15:34:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2433","RelatedDescription":"Closed issue \"Update AndroidSdkBuildToolsVersion \" (#2433) at xamarin/xamarin-android","RelatedBody":"For sanity/consistency, [`$(AndroidSdkBuildToolsVersion)`](https://github.com/xamarin/xamarin-android/blob/c38c58e9c5634819845350e9e687186c0808a781/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets), `$(AndroidSdkPlatformToolsVersion)`, and `$(AndroidSdkToolsVersion)` should be updated to be consistent with the latest supported `$(TargetFrameworkVersion)`.  As we now support v9.0 (API-28), these properties should be updated to use the 28 versions of these packages, e.g. build-tools 28.0.3:\r\n\r\nhttps://developer.android.com/studio/releases/build-tools\r\n\r\nAddtionally, we should update the [`HowToAddNewApiLevel.md`](https://github.com/xamarin/xamarin-android/blob/master/Documentation/workflow/HowToAddNewApiLevel.md) docs should be updated to mention that these properties should be updated when a new API level is added."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9301725283","Type":"IssuesEvent","CreatedAt":"2019-03-24T01:11:46","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5674","RelatedDescription":"Closed issue \"[Enhancement] `ControlTemplate` should include a `FindByName<T>()`\" (#5674) at xamarin/Xamarin.Forms","RelatedBody":"```xml\r\n<ContentPage >\r\n    <ContentPage.ControlTemplate>\r\n        <ControlTemplate x:Name=\"MyTemplate\">\r\n            <AbsoluteLayout >\r\n                <StackLayout x:Name=\"MyStack\">\r\n                    <Label x:Name=\"MyLabel\" />\r\n                </StackLayout> \r\n            </AbsoluteLayout>\r\n        </ControlTemplate>\r\n    </ContentPage.ControlTemplate>\r\n</ContentPage>\r\n```\r\n\r\n```csharp\r\nvar label = MyTemplate.FindByName<StackLayout>(\"MyStack\")\r\n                      .FindByName<Label>(\"MyLabel\");\r\nlabel.Text = \"See, I can access the label from OnAppearing\";\r\n```\r\n\r\n_Originally posted by @ChaseFlorell in https://github.com/xamarin/Xamarin.Forms/pull/5343#issuecomment-475240168_"},{"Id":"9299089018","Type":"PullRequestEvent","CreatedAt":"2019-03-23T00:07:43","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5343","RelatedDescription":"Closed pull request \"[C] make InternalChildren public on Layout so it can be accessed the same way as we do on Page\" (#5343) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\nThis change brings alignment between `Page` and `Layout` in as much as being able to access `InternalChildren` for the purposes of accessing elements within a ControlTemplate.\r\n\r\nCurrently when I create a new ContentPage and add a `<ControlTemplate>`, I have the ability to locate controls within that ControlTemplate. \r\n\r\nThis change will allow us to do the same thing off of a ContentView or similar View using `Layout`\r\n\r\n```xaml\r\n<ContentPage >\r\n    <ContentPage.ControlTemplate>\r\n        <ControlTemplate>\r\n            <AbsoluteLayout >\r\n                <StackLayout x:Name=\"MyStack\">\r\n                    <Label x:Name=\"MyLabel\" />\r\n                </StackLayout> \r\n            </AbsoluteLayout>\r\n        </ControlTemplate>\r\n    </ContentPage.ControlTemplate>\r\n</ContentPage>\r\n```\r\n```csharp\r\nprivate Label _myLabel;\r\nctor()\r\n{\r\n    InitializeComponent();\r\n    var root = (AbsoluteLayout)InternalChildren.First();\r\n    _myLabel = root.FindByName<StackLayout>(\"MyStack\")\r\n                   .FindByName<Label>(\"MyLabel\");\r\n}\r\n\r\nprotected override void OnAppearing()\r\n{\r\n    _myLabel.Text = \"See, I can access the label from OnAppearing\";\r\n}\r\n```\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- n/a - no issue filed\r\n\r\n### API Changes ###\r\n\r\nChanged:\r\n - internal Layout.InternalChildren => public Layout.InternalChildren\r\n \r\n\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9299087034","Type":"IssuesEvent","CreatedAt":"2019-03-23T00:06:56","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5674","RelatedDescription":"Opened issue \"[Enhancement] `ControlTemplate` should include a `FindByName<T>()`\" (#5674) at xamarin/Xamarin.Forms","RelatedBody":"```xml\r\n<ContentPage >\r\n    <ContentPage.ControlTemplate>\r\n        <ControlTemplate x:Name=\"MyTemplate\">\r\n            <AbsoluteLayout >\r\n                <StackLayout x:Name=\"MyStack\">\r\n                    <Label x:Name=\"MyLabel\" />\r\n                </StackLayout> \r\n            </AbsoluteLayout>\r\n        </ControlTemplate>\r\n    </ContentPage.ControlTemplate>\r\n</ContentPage>\r\n```\r\n\r\n```csharp\r\nvar label = MyTemplate.FindByName<StackLayout>(\"MyStack\")\r\n                      .FindByName<Label>(\"MyLabel\");\r\nlabel.Text = \"See, I can access the label from OnAppearing\";\r\n```\r\n\r\n_Originally posted by @ChaseFlorell in https://github.com/xamarin/Xamarin.Forms/pull/5343#issuecomment-475240168_"},{"Id":"9299081192","Type":"IssuesEvent","CreatedAt":"2019-03-23T00:04:46","Actor":"jamesmontemagno","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5673","RelatedDescription":"Opened issue \"UWP: FlexLayout no longer wrapping elements\" (#5673) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n### Steps to Reproduce\r\n\r\nSee reproduction: https://github.com/jamesmontemagno/Hanselman.Forms/tree/podcast-details\r\n\r\n```xml\r\n    <Grid>\r\n            <ScrollView>\r\n                <FlexLayout BindableLayout.ItemsSource=\"{Binding Podcasts}\" \r\n                       Wrap=\"Wrap\"\r\n                       Direction=\"Row\"\r\n                       JustifyContent=\"Start\"\r\n                       AlignItems=\"Start\"\r\n                       AlignContent=\"Start\"\r\n                       Padding=\"8\">\r\n                    <BindableLayout.ItemTemplate>\r\n                        <DataTemplate>\r\n                            <StackLayout Margin=\"4,4,4,4\"\r\n                                  FlexLayout.Basis=\"{OnIdiom Phone='50%', Tablet='33%'}\"\r\n                                  FlexLayout.AlignSelf=\"Start\">\r\n                                <StackLayout.GestureRecognizers>\r\n                                    <TapGestureRecognizer Tapped=\"TapGestureRecognizer_Tapped\" />\r\n                                </StackLayout.GestureRecognizers>\r\n                                <StackLayout.Effects>\r\n                                    <effects:RippleEffect/>\r\n                                </StackLayout.Effects>\r\n                                <Frame \r\n                                    Padding=\"0\"\r\n                                    VerticalOptions=\"Start\"\r\n                                    HasShadow=\"True\"\r\n                                     Visual=\"Material\">\r\n                                    <Grid Padding=\"0\">\r\n                                        <Grid.RowDefinitions>\r\n                                            <RowDefinition Height=\"Auto\"/>\r\n                                            <RowDefinition Height=\"Auto\"/>\r\n                                        </Grid.RowDefinitions>\r\n                                        <Image Source=\"{Binding Art}\" Aspect=\"AspectFill\"/>\r\n                                        <Label Grid.Row=\"1\" Margin=\"10,0\" Text=\"{Binding Title}\"/>\r\n                                    </Grid>\r\n                                </Frame>\r\n                            </StackLayout>\r\n                        </DataTemplate>\r\n                    </BindableLayout.ItemTemplate>\r\n                </FlexLayout>\r\n            </ScrollView>\r\n```\r\n\r\n### Expected Behavior\r\nFlexLayout wraps correctly\r\n\r\n\r\n### Actual Behavior\r\n\r\nSeems to be displaying it as a normal list\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version: 3.5.0\r\n- IDE: VS 2019\r\n\r\n### Screenshots\r\nPreviously \r\n![image](https://user-images.githubusercontent.com/1676321/54858772-2f289300-4cc4-11e9-8ef4-f2b561127f07.png)\r\n\r\nNow:\r\n![image](https://user-images.githubusercontent.com/1676321/54858818-6d25b700-4cc4-11e9-9082-ca0a407e394a.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nhttps://github.com/jamesmontemagno/Hanselman.Forms/tree/podcast-details\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9298900607","Type":"IssuesEvent","CreatedAt":"2019-03-22T23:02:17","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5492","RelatedDescription":"Closed issue \"Help with complex logic in Webview\" (#5492) at xamarin/Xamarin.Forms","RelatedBody":"I'm having trouble getting the following logic to work with a webview. For context, I'm using a custom https://docs.microsoft.com/en-us/xamarin/xamarin-forms/app-fundamentals/custom-renderer/hybridwebview version. So I'm using JavascriptInterface.\r\n\r\nSo the flow is this:\r\n1) Instantiate a webview, registering an Action callback called `login`.\r\n2) When page finished loading, I inject a js file. Inside the file, there is a method called `login`. This is the function I want it to run on C#. \r\n3) When I click on a specific button on the webview, it triggers the file I injected. So my C# login function is executed.\r\n4) Now, I need to return the function return value back to the javascript, where it stopped the execution.\r\n\r\nI found several ways to return a value from a javascript function back to C#, but not the opposite. This case is tricky because I'm injecting js that need to run in C# and return back the result to js.\r\n\r\nAny help would be appreciated. I can provide some code, I just didn't because I don't want to make a long post\r\n"},{"Id":"9298899950","Type":"IssuesEvent","CreatedAt":"2019-03-22T23:02:06","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5295","RelatedDescription":"Closed issue \"Static WebView\" (#5295) at xamarin/Xamarin.Forms","RelatedBody":"I can not create a static webview, I need to keep the map active for my application.\r\nI also created a similar topic on this forum, but I received no answer.\r\nhttps://forums.xamarin.com/discussion/145615/how-create-static-webview\r\n"},{"Id":"9298899028","Type":"IssuesEvent","CreatedAt":"2019-03-22T23:01:49","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5163","RelatedDescription":"Closed issue \"After calling TranslateTo function Grid loses gesture recognition area.\" (#5163) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen I move a Grid, it loses the ability to recognize gestures.\r\n\r\nI made the application, you may find that the buttons on the first screen are pressed normally.\r\nBut when I start moving the grid, the buttons are no longer pressed.\r\n\r\n### Steps to Reproduce\r\n1. Create grid\r\n2. Call TranslateTo\r\n3. make sure that the buttons do not respond to pressing.\r\n4. Check my project\r\n\r\n### Expected Behavior\r\nThe buttons must be pressed. Gestures do work.\r\n\r\n### Actual Behavior\r\nButtons do not press. Gestures do not work.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4, 3.5, 4\r\n- Last known good version:\r\n- IDE: VS 2019, VS 2017\r\n- Platform Target Frameworks: All\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[GridBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2842221/GridBug.zip)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9300478382","Type":"PullRequestEvent","CreatedAt":"2019-03-23T14:09:06","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5803","RelatedDescription":"Opened pull request \"Backport device bcl tests\" (#5803) at xamarin/xamarin-macios","RelatedBody":"This fixes present in master will fix a number of crashes we have in the VSTS tests while testing on device."},{"Id":"9300470294","Type":"PullRequestEvent","CreatedAt":"2019-03-23T14:04:57","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5797","RelatedDescription":"Merged pull request \"[Jenkins] Increase the Jenkins timeout since tests are taking longer now.\" (#5797) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9296967473","Type":"PullRequestEvent","CreatedAt":"2019-03-22T17:02:27","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5802","RelatedDescription":"Opened pull request \"Bump Mono to latest 2018-08\" (#5802) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@6a81d1dd5f5 [System] Fix a race condition in HttpRequestChannel.\r\n* mono/mono@fdb26b0a445 [merp] Fix anon allocation, use MAP_PRIVATE\r\n* mono/mono@82547c4a126 [crash] Fallback to MAP_ANONYMOUS for allocator\r\n* mono/mono@693806cedad Bump bockbuild for GTK fix\r\n* mono/mono@9cb3348c311 Append .1 to version number\r\n* mono/mono@948b4509919 Include libgdiplus 5.6.1\r\n* mono/mono@60e60904ac6 [MacSDK] Bump Nuget to 4.8.2\r\n\r\nDiff: https://github.com/mono/mono/compare/89d7665e281a7f539b6f91501f4dcf1864961bf5...6a81d1dd5f5a84115b1f2f742172623c67e31523"},{"Id":"9296863327","Type":"IssuesEvent","CreatedAt":"2019-03-22T16:47:19","Actor":"akoeplinger","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5801","RelatedDescription":"Opened issue \"BCL tests should be regenerated by a top level \"make all\"\" (#5801) at xamarin/xamarin-macios","RelatedBody":"I hit an issue where I needed to go into tests/bcl-test/BCLTest and run \"make all\" manually there in order for the test projects to be generated. This shouldn't be necessary."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":23,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":24,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":115,"FavoriteCount":46,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":41,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":69,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":18,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":130,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":23,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":15,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2019-03-24T05:30:48.3933433Z","RunDurationInMilliseconds":2367}