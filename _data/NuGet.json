{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11399878816","Type":"IssuesEvent","CreatedAt":"2020-01-30T19:53:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7830","RelatedDescription":"Opened issue \"[C2R] Switch over to registration5\" (#7830) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11399874431","Type":"IssuesEvent","CreatedAt":"2020-01-30T19:53:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7829","RelatedDescription":"Opened issue \"[C2R] Deploy Catalog2Registration.Rebuild to all environment running side-by-side\" (#7829) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11395612680","Type":"IssuesEvent","CreatedAt":"2020-01-30T11:49:22","Actor":"devlead","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7823","RelatedDescription":"Closed issue \"NuGet.org package statistics lagging\" (#7823) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nNuGet package download statistics seem to lag a bit.\r\n\r\n### To Reproduce\r\n\r\nJust happen to observe a package before ( https://www.nuget.org/packages/Cake.Tool/ ) an event and it's been at 944,870 downloads for little over 3 days, normally it increases at least a couple thousand per day.\r\n\r\n### Expected behavior\r\nNumber to go up over time.\r\n\r\n### Screenshots\r\nLooking at details it does seem indicate numbers are since last Saturday (Jan 25th).\r\n![image](https://user-images.githubusercontent.com/1647294/73272603-efcfaa80-41e2-11ea-9a52-056db0d530ac.png)\r\n\r\n\r\n"},{"Id":"11392116091","Type":"IssuesEvent","CreatedAt":"2020-01-30T01:19:00","Actor":"nkolev92","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7828","RelatedDescription":"Opened issue \"NuGet.org should have a NuGet version/framework service equivalent to npm semver calculator\" (#7828) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nNuGet's versioning can get rather complex. The version range schema requires an explanation that goes beyond just examples. \r\nSame thing applies to the frameworks. As an eco system we are trying to cognitive load needed but we're not there yet, and honestly it'd be helpful despite that :) \r\nNow the question might be whether nuget.org is the right place for that, but I don't think we have a better place for it.\r\n\r\n### Describe the solution you'd like\r\n\r\nA semver parsing service equivalent to https://semver.npmjs.com/. \r\nThis would ideally do versions + frameworks because frameworks are a .NET complexity. |\r\n\r\nFortunately for us, @joelverhagen has implemented a very good starting point http://nugettoolsdev.azurewebsites.net/.\r\n\r\n### Additional context\r\n\r\nOur initial implementation doesn't have to be as fancy as npms, I think we should only focus on the:\r\n\r\n* Find best match experience - https://nugettoolsdev.azurewebsites.net/5.5.0-preview.2.6382/find-best-version-match\r\n\r\n* Get nearest framework - https://nugettoolsdev.azurewebsites.net/5.5.0-preview.2.6382/get-nearest-framework\r\n\r\n* framework compatibility - https://nugettoolsdev.azurewebsites.net/5.5.0-preview.2.6382/framework-compatibility"},{"Id":"11391264489","Type":"PullRequestEvent","CreatedAt":"2020-01-29T22:37:43","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7826","RelatedDescription":"Merged pull request \"[ReleasePrep] RI dev to master\" (#7826) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11390796365","Type":"PullRequestEvent","CreatedAt":"2020-01-29T21:34:06","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7827","RelatedDescription":"Merged pull request \"Fix minor spacing issue\" (#7827) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11390592038","Type":"PullRequestEvent","CreatedAt":"2020-01-29T21:08:10","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7827","RelatedDescription":"Opened pull request \"Fix minor spacing issue\" (#7827) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11389283028","Type":"IssuesEvent","CreatedAt":"2020-01-29T18:19:39","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7811","RelatedDescription":"Closed issue \"Make deprecation reasons have consistent punctuation\" (#7811) at NuGet/NuGetGallery","RelatedBody":"The punctuation on the deprecation reasons are inconsistent:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/72563053-b3ef2980-3861-11ea-81fb-ad6c74314a77.png)\r\n"},{"Id":"11382066649","Type":"PullRequestEvent","CreatedAt":"2020-01-29T00:23:34","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7826","RelatedDescription":"Opened pull request \"[ReleasePrep] RI dev to master\" (#7826) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11381008683","Type":"IssuesEvent","CreatedAt":"2020-01-28T21:46:53","Actor":"jonsequitur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7825","RelatedDescription":"Opened issue \"Package type is not apparent in search results\" (#7825) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen searching for packages, it's not discernible from the search results what types of packages I've found. In this screenshot, for example, the first result is a library while the second is a tool:\r\n\r\n![image](https://user-images.githubusercontent.com/547415/73307732-a7f55700-41d3-11ea-9046-c91c29c3263b.png)\r\n\r\n### Describe the solution you'd like\r\n\r\nIdeally, the different package types would be visually distinct from one another. \r\n"},{"Id":"11379925185","Type":"IssuesEvent","CreatedAt":"2020-01-28T19:29:49","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7764","RelatedDescription":"Closed issue \"A/B test prefix matching on nuget.org\" (#7764) at NuGet/NuGetGallery","RelatedBody":"⚠️ Do not copy this issue! This used a special A/B test process. For correct instructions, follow this process in the OneNote: [Rebuild the Azure Search Index](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FRebuild%20the%20Azure%20Search%20Index%7CC705999F-85D9-4A93-8CFB-161C393C56FE%2F%29).\r\n\r\n1. Determine the live instance of the Azure Search jobs\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. ~~Determine the new instance to be used~~\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. Update the job and service configuration\r\n    - [ ] ~~NuGetDeployment PR:~~\r\n    - [ ] ~~Infrastructure build:~~\r\n    - [ ] ~~NuGet.Jobs Config build:~~\r\n    - [x] AzureSearchService build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3385062\r\n1. ~~Deploy Azure Search infrastructure to provision the resources and secrets~~\r\n1. ~~Deploy Db2AzureSearch to initialize the new indexes~~\r\n1. ~~Deploy alternative instances of the Azure Search jobs~~\r\n1. ~~Monitor the new Catalog2AzureSearch cursors~~\r\n1. ~~Deploy V3 monitoring to start monitoring the new indexes. If you are not rebuilding for an A/B test all this really will do is add an additional cursor to wait on.~~\r\n1. Deploy AzureSearchService\r\n    - ⚠️ The Azure Search Service must be deployed after all other jobs.\r\n    - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552548\r\n    - DEV\r\n       - [x] USNC\r\n       - [x] USSC\r\n       - [x] EA\r\n       - [x] SEA\r\n    - INT\r\n       - [x] USNC\r\n       - [x] USSC\r\n    - PROD\r\n       - [ ] USNC\r\n       - [ ] USSC\r\n       - [ ] EA\r\n       - [ ] SEA\r\n1. ~~Change the default Instance name for job release pipelines~~\r\n1. Wait a week.\r\n1. ~~Clean up~~\r\n   - ~~Stop monitoring the old cursors~~\r\n   - ~~Stop monitoring the old indexes by deploying V3 monitoring~~\r\n   - ~~Stop old job instances~~\r\n   - ~~Update the [Secret Rotation excel](https://microsoft.sharepoint.com/teams/NuGet/Team/Engineering/NuGet_Secret_Rototation_Status.xlsx?web=1) to make sure new secrets are there and old secrets are gone~~"},{"Id":"11379360522","Type":"IssuesEvent","CreatedAt":"2020-01-28T18:20:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7824","RelatedDescription":"Opened issue \"Surface Microsoft Application Inspector information on nuget.org\" (#7824) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nMicrosoft has released a tool called [Microsoft Application Inspector](https://github.com/Microsoft/ApplicationInspector) to perform static analysis of source code to identify what categories of APIs are used. For example: networking APIs, file access, cryptography.\r\n\r\nNuGet.org could use this tool to automatically surface such information about packages in the web UI. \r\n\r\nThe output of the tool looks like this:\r\n![image](https://user-images.githubusercontent.com/94054/73292749-74a4cf00-41b7-11ea-97c6-4ec56a3cb491.png)\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nFor every package uploaded to nuget.org, run Microsoft Application Inspector on the source code (potentially gathered via decompilation or via the GitHub repository URL) and show the report _per version_ on the display packages page.\r\n\r\nAs a stretch goal, allow comparison of two versions so you can see leveraged APIs getting added or removed.\r\n\r\nNuGet client could also show this information for an arbitrary package upgrade (and transitive packages pulled in) but this is harder since the analysis process may be slow.\r\n\r\n### Additional context\r\n\r\nThanks to members of the Hacker News community for connecting the dots:\r\nhttps://news.ycombinator.com/item?id=22170705\r\nhttps://news.ycombinator.com/item?id=22171263"},{"Id":"11377246862","Type":"IssuesEvent","CreatedAt":"2020-01-28T14:38:43","Actor":"devlead","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7823","RelatedDescription":"Opened issue \"NuGet.org package statistics lagging\" (#7823) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nNuGet package download statistics seem to lag a bit.\r\n\r\n### To Reproduce\r\n\r\nJust happen to observe a package before ( https://www.nuget.org/packages/Cake.Tool/ ) an event and it's been at 944,870 downloads for little over 3 days, normally it increases at least a couple thousand per day.\r\n\r\n### Expected behavior\r\nNumber to go up over time.\r\n\r\n### Screenshots\r\nLooking at details it does seem indicate numbers are since last Saturday (Jan 25th).\r\n![image](https://user-images.githubusercontent.com/1647294/73272603-efcfaa80-41e2-11ea-9a52-056db0d530ac.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1647294/73273378-2954e580-41e4-11ea-90dc-5d4e47358364.png)\r\n\r\n"},{"Id":"11372272146","Type":"PullRequestEvent","CreatedAt":"2020-01-28T01:14:05","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7813","RelatedDescription":"Merged pull request \"Update owin 3.x->4.x\" (#7813) at NuGet/NuGetGallery","RelatedBody":"Updating to accommodate upcoming chrome change for SameSite cookie."},{"Id":"11371593119","Type":"IssuesEvent","CreatedAt":"2020-01-27T23:01:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7822","RelatedDescription":"Opened issue \"Delete legacy search code\" (#7822) at NuGet/NuGetGallery","RelatedBody":"- [ ] Legacy search service\r\n- [ ] Db2Lucene\r\n- [ ] Catalog2Lucene\r\n- [ ] Configuration\r\n- [ ] Build definitions"},{"Id":"11371479963","Type":"PullRequestEvent","CreatedAt":"2020-01-27T22:43:06","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7818","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.01.21]RI dev to master\" (#7818) at NuGet/NuGetGallery","RelatedBody":"Pulling in display package page performance improvements."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11402850665","Type":"IssuesEvent","CreatedAt":"2020-01-31T05:01:00","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9060","RelatedDescription":"Closed issue \"Specify Icon file outside of project directory\" (#9060) at NuGet/Home","RelatedBody":"I am in the process of updating the `<PackageIconUrl>` tags to use `<PackageIcon>` instead, and I ran into an issue that I assume others may have.\r\n\r\nBasically, I have multiple `.csproj`s in my solution, and many get packaged into libraries to be consumed. So far, I have applied the package icons in such cases by putting the line in my `Directory.Build.props` file and having it cascade and apply to all packages in my solution.\r\n\r\nWhat I want to be able to do is have just one icon file at the root or in an `Img` file or something, and be able to specify in my `Directory.Build.props` file something like the following:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <PackageIcon>Properties\\icon.png</PackageIcon>\r\n</PropertyGroup>\r\n\r\n<ItemGroup>\r\n  <Content Include=\"$(SolutionDir)\\icon.png\" Link=\"Properties\\icon.png\">\r\n    <Pack>True</Pack>\r\n    <PackagePath></PackagePath>\r\n    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n  </Content>\r\n</ItemGroup>\r\n```\r\n\r\nIf there is a way to do this already, I would love to know how to get it to work."},{"Id":"11402534498","Type":"IssuesEvent","CreatedAt":"2020-01-31T03:37:20","Actor":"timheuer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9120","RelatedDescription":"Opened issue \"dotnet add package doesn't honor --ignore-failed-sources\" (#9120) at NuGet/Home","RelatedBody":"Simply put, when trying to add a package and wanting to skip failed resources the arg of `--ignore-failed-sources` does not work like it does in other package commands for NuGet"},{"Id":"11400709810","Type":"IssuesEvent","CreatedAt":"2020-01-30T21:40:25","Actor":"anurse","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9119","RelatedDescription":"Opened issue \"NuGet.org doesn't render \"framework references\" as dependencies.\" (#9119) at NuGet/Home","RelatedBody":"For example consider https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer\r\n\r\n![A screenshot of the NuGet.org package details page for `Microsoft.AspNetCore.Authentication.JwtBearer`](https://user-images.githubusercontent.com/7574/73492480-9cd23080-4365-11ea-9944-3fbac6e409ad.png)\r\n\r\nThe Dependencies list shows only one dependency:\r\n\r\n* Microsoft.IdentityModel.Protocols.OpenIdConnect (>= 5.5.0)\r\n\r\nThis is correct in that it is the only *package* this package depends on. However, in the NuSpec there is a framework reference to \"Microsoft.AspNetCore.App\".\r\n\r\nNot showing framework references certainly made some sense when dealing with .NET Framework, since generally all the framework references were **available**, they just had to be listed so the compiler would know they are used. With .NET Core it is more important that the user knows what frameworks the package requires though since they each must be separately installed (or a bundle must be installed).\r\n\r\nThis also sometimes leads to customers mistakenly believing that a package doesn't require ASP.NET Core (for example) when in fact it does.\r\n\r\nRendering the framework references as dependencies, at least for the .NET Core targets, would be a useful UI improvement.\r\n\r\n"},{"Id":"11398900763","Type":"IssuesEvent","CreatedAt":"2020-01-30T17:50:51","Actor":"gravidThoughts","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9118","RelatedDescription":"Opened issue \"nuget config <configkey> does not return defaults values\" (#9118) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe):\r\n\r\nNuGet version (5.1.0.6013):\r\n\r\nOS version (Windows 10 Enterprise 1809 17763.914)\r\n\r\nRepro steps\r\n\r\n1. Verify that the computer level nuget.config file %AppData%/Roaming/Nuget does not contain **repositoryPath** configuration data.\r\n2. If using a user level configuration file, verify that it does not contain **repositoryPath** configuration data.\r\n3. Open command line at root of C:\\ drive, (or any location that does not have a nuget.config file in any of the paths up to the root.)\r\n4. Execute: nuget config repositoryPath\r\n5. Notice that the command returns Key 'repositoryPath' not found.\r\n\r\nThe above can also be replicated with **globalPackagesFolder** or any other config section key that has a default value if undefined in a configuration file.\r\n\r\nI would expect the command to return the default value (perhaps with some standard way of notating that it is the default value as opposed to derived from a configuration file.)\r\n\r\n...\r\n\r\n\r\n"},{"Id":"11398775149","Type":"IssuesEvent","CreatedAt":"2020-01-30T17:35:29","Actor":"gravidThoughts","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9117","RelatedDescription":"Opened issue \"nuget locals global-packages -list does not return NUGET_PACKAGES env var value.\" (#9117) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe):\r\n\r\nNuGet version (5.1.0.6013):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create NUGET_PACKAGES system environment variable with valid path.\r\n2. Open command line and browse to any project using **packages.config**.\r\n3. Execute : nuget locals global-packages -list\r\n4. Notices that the path returned likely the default **repositoryPath** i.e %userprofile%\\.nuget\\packages.\r\n\r\nAccording to the documentation, even for projects using **packages.config** the NUGET_PACKAGES environment variable should override anything specified in a nuget.config file.\r\n\r\n> Override using the NUGET_PACKAGES environment variable, the globalPackagesFolder or repositoryPath configuration settings (when using PackageReference and packages.config, respectively), or the RestorePackagesPath MSBuild property (MSBuild only). The environment variable takes precedence over the configuration setting.\r\n\r\n"},{"Id":"11398236351","Type":"IssuesEvent","CreatedAt":"2020-01-30T16:36:12","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8626","RelatedDescription":"Closed issue \"Set private key of an X509Certificate2 certificate failed on netcore\" (#8626) at NuGet/Home","RelatedBody":"We have some broken tests after enabling signing/verification tests on netcore3.0.\r\nThose tests failed when we tried to set the private key of an X509Certificate2 certificate with following exception:\r\n System.PlatformNotSupportedException : Operation is not supported on this platform.\r\n\r\nThe [document ](https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509certificate2.privatekey?view=netcore-3.0)shows that it's not supported in netcore3.0.\r\n\r\nWe should use the workaround mentioned in this dotnet/corefx issue : https://github.com/dotnet/corefx/issues/14284#issuecomment-293637756"},{"Id":"11395806386","Type":"IssuesEvent","CreatedAt":"2020-01-30T12:15:31","Actor":"mark-raymond","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9116","RelatedDescription":"Opened issue \"NuGet unnecessarily selects prerelease dependences when installing a prerelease package\" (#9116) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.6315\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 1909 (18363.592)\r\n\r\nIf I restore a prerelease package with dependency resolution highest, prerelease versions of transitive dependencies are installed even when there isn't an explicit reference to a prerelease version.\r\n\r\nObviously, prerelease packages should be *allowed* to reference other prerelease packages. But I don't think NuGet should select prerelease dependencies that aren't explicitly required unless I pass `-Prerelease` in.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Extract [repro.zip](https://github.com/NuGet/Home/files/4133895/repro.zip)\r\n\r\n2. Run repro.ps1\r\n\r\nExpected: Version 3.2.0 of package C to be installed\r\nActual: Version 3.3.0-beta of package C is installed"},{"Id":"11395675694","Type":"IssuesEvent","CreatedAt":"2020-01-30T11:57:53","Actor":"JohnLudlow","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9115","RelatedDescription":"Opened issue \"Better tools / options to manage packages across multiple solutions\" (#9115) at NuGet/Home","RelatedBody":"This is basically feedback / feature request so I omitted some of the bug-report-style elements of the template.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.exe Version: 5.4.0.6315\r\nVisual Studio UI 16.3.4\r\n\r\nOS version:\r\nWin10 1909 10.0.18363 (18363.592)\r\n\r\n## Our situation\r\n\r\nWe build an application that includes some .NET components, some of which rely on some NuGet packages. We've also started to make some of our own NuGet packages to share amongst different codebases and partition our code.\r\n\r\nThis application's code is spread across many solutions, but when the app is built and run, a lot of it ends up in the same process - this has implications like everyone needs to use the same version of .NET assemblies / nuget packages.\r\n\r\nWhen someone working on one part wants to update one of the nuget packages to a higher version, they currently face some problems. It's all too easy for someone to forget to update one thing, and updating everything is a chore. The Consolidate tab in the VS UI is very useful within a single solution, but we have many solutions.\r\n\r\n## Proposal\r\n\r\nWe'd like a tool which could tell us when this situation has occurred (potentially failing the build) and help us apply consistent versions. \r\n\r\nThe way I imagine this working is a command line tool which takes a collection of projects or package configs (or lock files, maybe) and emits an XML or JSON file with package names and versions. We can tweak an XML or JSON file and run the tool to apply a consistent version."},{"Id":"11392527857","Type":"IssuesEvent","CreatedAt":"2020-01-30T02:55:33","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9113","RelatedDescription":"Closed issue \"Missing Icon in PM UI Details Pane\" (#9113) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version: 5.5.0.6392-11-g0de9751d1\r\n\r\nVS version (if appropriate): 16.4.1\r\n\r\nWorked before? Yes, 16.4.1 5.5.0.6368\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Open any project in VS\r\n2. Right click and chose \"Manage NuGet Packages...\"\r\n3. Click on a package from the list\r\n4. See details pane\r\n\r\n![image](https://user-images.githubusercontent.com/1192347/73387922-26aacc80-4286-11ea-9a7c-1668de5f47b3.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-31T05:30:43.9030584Z","RunDurationInMilliseconds":2077}