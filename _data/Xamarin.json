{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null},{"Title":"View PDF Files within Your Xamarin.Forms Apps Using the Syncfusion PDF Viewer","PublishedOn":"2019-02-28T17:04:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Suresh Mohan. Suresh is the Product Manager for PDF Viewer at Syncfusion Software where he specializes in desktop and mobile app development. &#160;...","Href":"https://blog.xamarin.com/xamarin-forms-apps-syncfusion-pdf-viewer/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9266913762","Type":"IssuesEvent","CreatedAt":"2019-03-18T22:04:49","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2848","RelatedDescription":"Opened issue \"Improve error scenarios and messaging when hitting MAX_PATH limitations on Windows\" (#2848) at xamarin/xamarin-android","RelatedBody":"https://developercommunity.visualstudio.com/content/problem/490525/objdebug81androidbinclasses-error-on-building-xama.html\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new XF app in VS2017 or VS2019 with a long project name (e.g. `MyXamarinFormsProjectWithAVeryLongName`.\r\n2. Attempt to build the Android project.\r\n3. Attempt to clean/rebuild the Android project.\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2566,3): error MSB3231: Unable to remove directory “obj\\Debug\\81\\android\\bin\\classes”. Could not find a part of the path ‘AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor.class’.\r\n```\r\n\r\nWe should try to reduce the length of paths we're generating in the `IntermediateOutput` directory where possible, and also attempt to provide a more actionable error message when we we do hit path length limitations on Windows.\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9266832079","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:49:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2847","RelatedDescription":"Opened pull request \"[sqlite-xamarin] Update ThirdPartyNotice information\" (#2847) at xamarin/xamarin-android","RelatedBody":"The `xamarin/sqlite` repo contains two related-yet-distinct sets of\r\nsource code:\r\n\r\n 1. The SQLite source code, in which the authors have disclaimed\r\n    copyright, dedicating it to the public domain, and\r\n\r\n 2. Google's additions for use on Android, which is licensed under the\r\n    Apache-2.0 license.\r\n\r\nWe've been omitting (2) in favor of (1), which isn't quite right.\r\n\r\nUpdate `sqlite.tpnitems` so that *both* sources are listed.  This will\r\ncause `sqlite/sqlite` to be listed, along with it's disclaimer of\r\ncopyright, alongside `xamarin/sqlite` with the Apache 2.0 license."},{"Id":"9266761290","Type":"IssuesEvent","CreatedAt":"2019-03-18T21:37:09","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2833","RelatedDescription":"Closed issue \"Button.PerformHapticFeedback doesn't work well on Wear OS\" (#2833) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nButton.PerformHapticFeedback works well on mobile device but not on Wear OS.\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n```\r\n    Button btn = FindViewById<Button>(Resource.Id.btn);\r\n    btn.LongClick += delegate{\r\n          btn.PerformHapticFeedback(FeedbackConstants.KeyboardTap);\r\n    };\r\n```\r\n### Expected Behavior\r\nThe PerformHapticFeedback method will be called when I press the button.\r\n### Actual Behavior\r\nThe haptic feedback happens only on the first long press and not subseqent others.\r\n### Version Information\r\nIDE : VS 2017 15.9.9\r\nVersion : 28.0.0.1\r\nPlatform Target:\r\n&nbsp; &nbsp; &nbsp; &nbsp; Android Mobile\r\n&nbsp; &nbsp; &nbsp; &nbsp; Wear OS\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9266728367","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:31:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2846","RelatedDescription":"Opened pull request \"[create-pkg] Install `ThirdPartyNotices.txt` on macOS\" (#2846) at xamarin/xamarin-android","RelatedBody":"The `ThirdPartyNotices.txt` file is a comprehensive listing of all 3rd\r\nparty code which is included in a Xamarin.Android distribution; see\r\nalso commit 2bd13c4a.\r\n\r\nCommit 2bd13c4a also added `ThirdPartyNotices.txt` to the `.vsix`\r\ninstaller, allowing it to be read *without* needing to install the\r\n`.vsix` file on Windows; simply `unzip`ing the `.vsix` would allow it\r\nto be viewed.\r\n\r\nUnfortunately, we forgot to add `ThirdPartyNotices.txt` to the macOS\r\ninstaller, and thus e83ba0dd likewise doesn't install it.\r\n\r\nUpdate `build-tools/create-pkg` so that `ThirdPartyNotices.txt` is\r\ninstalled on macOS into the path:\r\n\r\n\t/Library/Frameworks/Xamarin.Android.framework/Versions/Current/ThirdPartyNotices.txt"},{"Id":"9266580384","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:06:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2829","RelatedDescription":"Merged pull request \"Add first Android Q preview API build.\" (#2829) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9266463656","Type":"IssuesEvent","CreatedAt":"2019-03-18T20:48:49","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2834","RelatedDescription":"Closed issue \"Retrieve the image stored in an imageview\" (#2834) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Retrieve an image as a byte array stored in a database\r\n2. Convert it to a bitmap and display it in an Imageview\r\n3.  At some point the image is changed and I need to store it back in the database\r\n\r\n\r\n### Expected Behavior\r\nThere is a easier way to save or store the image.\r\n### Actual Behavior\r\nCannot directly get the image from imagview to save or store it. \r\nHave to write complex code to realize it:\r\n```\r\nBitmapDrawable bitmapDrawable = ((BitmapDrawable) imageView.Drawable);\r\n    Bitmap bitmap;\r\n    if(bitmapDrawable==null){\r\n        imageView.BuildDrawingCache();\r\n        bitmap = imageView.GetDrawingCache();\r\n        imageView.BuildDrawingCache(false);\r\n    }else\r\n    {\r\n        bitmap = bitmapDrawable .Bitmap;\r\n    }\r\n\r\nbyte[] bitmapData;\r\n   using (var stream = new MemoryStream())\r\n   { \r\n  bitmap.Compress(Bitmap.CompressFormat.Png, 0, stream);\r\n    bitmapData = stream.ToArray();\r\n   }\r\n\r\n\r\n\r\n```"},{"Id":"9266037444","Type":"IssuesEvent","CreatedAt":"2019-03-18T19:43:09","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1311","RelatedDescription":"Closed issue \"Provide 64-bit versions in addition to 32-bit version for AndroidSupportedAbis in default Release configuration\" (#1311) at xamarin/xamarin-android","RelatedBody":"**In August 2019, Play will require that new apps and app updates with native libraries provide 64-bit versions in addition to their 32-bit versions.**\r\n\r\n**Source:** https://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html\r\n\r\nThis should be a small fix in nature by adding the respective 64-bit CPU instruction set to the `<AndroidSupportedAbis>` MSBuild property:\r\n\r\n```\r\n<AndroidSupportedAbis Condition=\" '$(AndroidSupportedAbis)' == '' \">armeabi-v7a;arm64-v8a</AndroidSupportedAbis>\r\n```\r\n\r\nAlthough this requirement isn't until August 2019, we may want to start pushing the default to our release configuration with 64-bit in mind as a best practice? Thoughts?"},{"Id":"9265506358","Type":"PullRequestEvent","CreatedAt":"2019-03-18T18:21:45","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2845","RelatedDescription":"Opened pull request \"[build] Add support for commercial builds\" (#2845) at xamarin/xamarin-android","RelatedBody":"The new 'commercial-build' project and targets are used to create or\r\nupdate a checkout of commercial source code. This source location defaults\r\nto a nested path at the root of the xamarin-android directory, however\r\nthis can be overridden by changing the value of the 'CommercialRepoPath'\r\nproperty.\r\n\r\nFor example:\r\n    msbuild build-tools/commercial/commercial-build.csproj /t:CommercialCheckout /p:CommercialRepoPath='$(PATH)'\r\n\r\nThe new 'make commercial' make rule has been added to manage the build\r\nof commercial components.\r\n\r\nOpenTK.dll and related files have been removed from the installer, as\r\nthey are no longer built as part of this new \"minimal\" commercial build."},{"Id":"9262864280","Type":"PullRequestEvent","CreatedAt":"2019-03-18T12:51:44","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2844","RelatedDescription":"Opened pull request \"Updatenunit\" (#2844) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9261728159","Type":"PullRequestEvent","CreatedAt":"2019-03-18T09:57:59","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2842","RelatedDescription":"Merged pull request \"[build] evaluate GetPathToStandardLibraries only when TFV is missing\" (#2842) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we are getting a build error such as:\r\n\r\n    OpenTK-0.9.JCW.csproj: error : /Users/builder/jenkins/workspace/monodroid-pr/monodroid/src/OpenGLES/OpenTK-0.9.JCW.csproj:\r\n        /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/Configuration.props: Project file could not be imported, it was being imported by /Users/builder/jenkins/workspace/monodroid-pr/monodroid/src/OpenGLES/OpenTK-0.9.JCW.csproj: Microsoft.Build.Utilities.ToolLocationHelper\r\n    OpenTK-0.9.JCW.csproj: Microsoft.Build.BuildEngine.InvalidProjectFileException: /Users/builder/jenkins/workspace/monodroid-pr/monodroid/src/OpenGLES/OpenTK-0.9.JCW.csproj: /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/Configuration.props: Project file could not be imported, it was being imported by /Users/builder/jenkins/workspace/monodroid-pr/monodroid/src/OpenGLES/OpenTK-0.9.JCW.csproj: Microsoft.Build.Utilities.ToolLocationHelper ---> Microsoft.Build.BuildEngine.InvalidProjectFileException: /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/Configuration.props: Project file could not be imported, it was being imported by /Users/builder/jenkins/workspace/monodroid-pr/monodroid/src/OpenGLES/OpenTK-0.9.JCW.csproj: Microsoft.Build.Utilities.ToolLocationHelper ---> System.NotImplementedException: Microsoft.Build.Utilities.ToolLocationHelper\r\n        at Microsoft.Build.BuildEngine.Expression.GetTypeForStaticMethod (System.String typeName) [0x00522] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Expression.ParsePropertyFunction (System.String text, System.Int32& pos) [0x0003c] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Expression.ExtractProperties (System.String text) [0x0009c] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Expression.Parse (System.String expression, Microsoft.Build.BuildEngine.ParseOptions options) [0x000e9] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Expression.ParseAs[T] (System.String expression, Microsoft.Build.BuildEngine.ParseOptions options, Microsoft.Build.BuildEngine.Project project, Microsoft.Build.BuildEngine.ExpressionOptions exprOptions) [0x00005] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.BuildProperty.Evaluate () [0x00019] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.BuildPropertyGroup.Evaluate () [0x0003a] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.GroupingCollection.EvaluateBuildPropertyGroup (Microsoft.Build.BuildEngine.BuildPropertyGroup bpg) [0x00024] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.GroupingCollection.Evaluate (Microsoft.Build.BuildEngine.EvaluationType type) [0x00033] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.AddImport (System.Xml.XmlElement xmlElement, Microsoft.Build.BuildEngine.ImportedProject importingProject, System.Boolean evaluate_properties) [0x0001e] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.ProcessElements (System.Xml.XmlElement rootElement, Microsoft.Build.BuildEngine.ImportedProject ip) [0x00213] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Import.Evaluate (System.Boolean ignoreMissingImports) [0x0008d] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.AddSingleImport (System.Xml.XmlElement xmlElement, System.String projectPath, Microsoft.Build.BuildEngine.ImportedProject importingProject, System.String from_source_msg) [0x00142] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project+<>c__DisplayClass110_0.<AddImport>b__0 (System.String importPath, System.String from_source_msg) [0x00000] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Import.ForEachExtensionPathTillFound (System.Xml.XmlElement xmlElement, Microsoft.Build.BuildEngine.Project project, Microsoft.Build.BuildEngine.ImportedProject importingProject, System.Func`3[T1,T2,TResult] func) [0x001d7] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        --- End of inner exception stack trace ---\r\n        at Microsoft.Build.BuildEngine.Import.ForEachExtensionPathTillFound (System.Xml.XmlElement xmlElement, Microsoft.Build.BuildEngine.Project project, Microsoft.Build.BuildEngine.ImportedProject importingProject, System.Func`3[T1,T2,TResult] func) [0x00205] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.AddImport (System.Xml.XmlElement xmlElement, Microsoft.Build.BuildEngine.ImportedProject importingProject, System.Boolean evaluate_properties) [0x0006e] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.ProcessElements (System.Xml.XmlElement rootElement, Microsoft.Build.BuildEngine.ImportedProject ip) [0x00213] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.ProcessXml () [0x000b6] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.DoLoad (System.IO.TextReader textReader) [0x000fe] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        --- End of inner exception stack trace ---\r\n        at Microsoft.Build.BuildEngine.Project.DoLoad (System.IO.TextReader textReader) [0x0012f] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.Load (System.String projectFileName, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) [0x00123] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Project.Load (System.String projectFileName) [0x00000] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Engine.BuildProjectFileInternal (System.String projectFile, System.String[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags, System.String toolsVersion) [0x0009f] in <64f40797b3d54493a3cca81a221ded16>:0\r\n        at Microsoft.Build.BuildEngine.Engine.BuildProjectFile (System.String projectFile, System.String[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags, System.String toolsVersion) [0x00008] in <64f40797b3d54493a3cca81a221ded16>:0\r\n\r\nSince it says:\r\n\r\n    Configuration.props: Project file could not be imported\r\n\r\nI think it is crashing at:\r\n\r\n    <_StandardLibraryPath>$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries('.NETFramework', 'v4.7.2', ''))</_StandardLibraryPath>\r\n\r\nThis line should be conditional if `$(TargetFrameworkVersion)` is\r\nblank. Hopefully this will avoid the call to\r\n`Microsoft.Build.BuildEngine.Expression.GetTypeForStaticMethod`, which\r\n*should* prevent this crash."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9267714945","Type":"PullRequestEvent","CreatedAt":"2019-03-19T01:26:51","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5572","RelatedDescription":"Closed pull request \"Ignore FindByName exception when running in previewer\" (#5572) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen running in the previewer, some types are replaced.\r\n\r\nIf a replaced type has an `x:Name` attribute, this will result in an `InvalidCastException` when `FindByName()` tries to cast it to the original type. So return `default(T)` in this scenario (this may just result in an exception later trying to use the result of this call, but it is at least less likely to be in the constructor).\r\n\r\n### Issues Resolved ### \r\n\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/821129\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nTested in previewer. Added unit test that covers the scenario.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9267714933","Type":"PullRequestEvent","CreatedAt":"2019-03-19T01:26:50","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5589","RelatedDescription":"Closed pull request \"Call InstantiationFailedCallback for any exception\" (#5589) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf `Activator.CreateInstance()` fails, call `InstantiationFailedCallback` (if set) regardless of the exception. For example, in the repro case, the exception is MissingMethodException because there is no default constructor. But there doesn't seem to be any good reason to limit which exceptions we capture here.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/817764\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nManual testing in previewer.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9267699261","Type":"PullRequestEvent","CreatedAt":"2019-03-19T01:22:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5585","RelatedDescription":"Merged pull request \"[Android] fall back to using native get identifier if reflection fails to retrieve drawable\" (#5585) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis will try to retrieve a resource id by using the native GetIdentifier instead of reflection\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Testing Procedure ###\r\n- Test any image code to make sure there are no breaking changes\r\n- Install nuget into android project that references an image that's part of the Android project and test that it loads inside the previewer without a build\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9267348664","Type":"PullRequestEvent","CreatedAt":"2019-03-18T23:44:00","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5599","RelatedDescription":"Merged pull request \"[X] intercepts FindByName exceptions\" (#5599) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nfor previewer\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- closes #5572\r\n- fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/821129\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"9267330623","Type":"PullRequestEvent","CreatedAt":"2019-03-18T23:39:19","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5605","RelatedDescription":"Opened pull request \"[UITest] Disable old 1461 test\" (#5605) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe UI tests on 1461 are only supposed to run for iOS Tablets, but there's no good way to enforce that without actually loading up the test and checking what context it's running in. That's what this test is doing, which is great, except that it's now flaky on iOS 10 and causes the next test in line (1469) to randomly fail because the 1461 page doesn't go away.\r\n\r\nAlso, since we don't currently run tests on any iOS tablets anyway, as far as I can tell, we're just spinning up 10 tests on every platform for no good whatsoever.\r\n\r\nI declare it useless as an automated test right now.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\nNone\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Tests\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\nTests should not fail. 🤞 \r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9267138807","Type":"PullRequestEvent","CreatedAt":"2019-03-18T22:52:14","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5545","RelatedDescription":"Closed pull request \"[iOS] CarouselView - System.InvalidCastException: Specified cast is not valid.\" (#5545) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nExtend CaroselView renderer in iOS from ItemsViewRenderer\r\n\r\n### Issues Resolved ### \r\n- fixes #5488 \r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\nCaroselView in iOS does not crash on InvalidCastException anymore.\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nGo to issue 5488 page, app should not crash\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9266620789","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:13:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5787","RelatedDescription":"Opened pull request \"[mtouch] Fix warning in RemoveBitcodeIncompatibleCodeStep.cs\" (#5787) at xamarin/xamarin-macios","RelatedBody":"```\n/Users/poupou/git/master/xamarin-macios/tools/linker/MonoTouch.Tuner/RemoveBitcodeIncompatibleCodeStep.cs(14,7): warning CS0105: The using directive for 'Xamarin.Linker' appeared previously in this namespace [/Users/poupou/git/master/xamarin-macios/tools/mtouch/mtouch.csproj]\n```"},{"Id":"9266312831","Type":"PullRequestEvent","CreatedAt":"2019-03-18T20:25:25","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5785","RelatedDescription":"Merged pull request \"[d16-1] [Foundation] Ensure that Connection Losts exceptions are more reliable.\" (#5785) at xamarin/xamarin-macios","RelatedBody":"In some cases, when the connection is lost, the Stream is not set to\r\nhave an exception and continues the read as normal. We need to ensure\r\nthat the stream cannot be read when setting the response to an\r\nexception. We block the reading, set both exceptions and continue. In\r\nthat case, the exception will be correctly raised when trying to read\r\nfrom the stream.\r\n\r\nA new check has to be done after the clean up of the stream if the\r\nsession is using caching.\r\n\r\nFixes https://github.com/xamarin/xamarin-macios/issues/5215\n\nBackport of #5769.\n\n/cc @mandel-macaque "},{"Id":"9265655285","Type":"IssuesEvent","CreatedAt":"2019-03-18T18:43:51","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5786","RelatedDescription":"Opened issue \"[msbuild/template] ConcurrentGC default option inconsistency\" (#5786) at xamarin/xamarin-macios","RelatedBody":"There is a difference between [VSMac's default](https://github.com/xamarin/xamarin-templates/blob/master/ios/content/single-view/NewApp.csproj#L13) for `ConcurrentGC` and the Xamarin.iOS [msbuild default](https://github.com/xamarin/xamarin-macios/blob/master/msbuild/Xamarin.iOS.Tasks.Core/Xamarin.iOS.Common.props#L53).\r\n\r\nBefore turning that into an issue and decide if it's `external-visual-studio-for-mac` or not, we need to know which default we want. We need to know if the template is wrong or if the msbuild task is wrong.\r\n\r\nIn addition this is an opportunity to reinstate that we should have checkboxes but 3 way combo boxes with a \"default\" state that can be changed automatically by our team.\r\n"},{"Id":"9265023230","Type":"PullRequestEvent","CreatedAt":"2019-03-18T17:14:39","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5784","RelatedDescription":"Merged pull request \"[d16-1] [runtime] Use mono_array_setref instead of mono_array_set.\" (#5784) at xamarin/xamarin-macios","RelatedBody":"Otherwise the GC won't know about the assignment, and the assigned value can\nbe freed if it's no longer referenced anywhere else.\n\nThis also includes an update to NSArray to make it possible to create an\nNSArray from an array of INativeObjects (for the tests).\n\nBackport of #5782.\n\n/cc @rolfbjarne "},{"Id":"9264821031","Type":"PullRequestEvent","CreatedAt":"2019-03-18T16:48:19","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5785","RelatedDescription":"Opened pull request \"[d16-1] [Foundation] Ensure that Connection Losts exceptions are more reliable.\" (#5785) at xamarin/xamarin-macios","RelatedBody":"In some cases, when the connection is lost, the Stream is not set to\r\nhave an exception and continues the read as normal. We need to ensure\r\nthat the stream cannot be read when setting the response to an\r\nexception. We block the reading, set both exceptions and continue. In\r\nthat case, the exception will be correctly raised when trying to read\r\nfrom the stream.\r\n\r\nA new check has to be done after the clean up of the stream if the\r\nsession is using caching.\r\n\r\nFixes https://github.com/xamarin/xamarin-macios/issues/5215\n\nBackport of #5769.\n\n/cc @mandel-macaque "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":21,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":91,"FavoriteCount":40,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":16,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":24,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":21,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":23,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":68,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":8,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":17,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":129,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":22,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2019-03-19T05:30:52.1122695Z","RunDurationInMilliseconds":2662}