{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7335104576","Type":"IssuesEvent","CreatedAt":"2018-03-06T02:06:44","Actor":"HaoK","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2391","RelatedDescription":"Closed issue \"Consider implementing IOptionsMonitor in OptionsWrapper\" (#2391) at aspnet/Home","RelatedBody":"_From @pakrym on Wednesday, June 14, 2017 4:47:32 PM_\r\n\r\nPossibly IOptionsFactory and IOptionsSnapshot too.\r\nIdea is to be able to pass constant options to any options consumer without requiring to implement proxy class (https://github.com/aspnet/Logging/blob/2b6d34778b013908f6d9208b8a69a8286dceac34/test/Microsoft.Extensions.Logging.AzureAppServices.Test/OptionsWrapperMonitor.cs)\r\n\r\n_Copied from original issue: aspnet/Options#200_"},{"Id":"7335041754","Type":"IssuesEvent","CreatedAt":"2018-03-06T01:46:30","Actor":"JamesNK","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2919","RelatedDescription":"Closed issue \"Additional information needed in building from source docs\" (#2919) at aspnet/Home","RelatedBody":"https://github.com/aspnet/Home/wiki/Building-from-source\r\n\r\nA couple of things I found when getting setup:\r\n\r\n1. `build.cmd` is a-ok, but...\r\n2. VS expects the correct version of the .NET Core SDK to be installed on your computer before it will allow solutions to be build.\r\n3. Running tests in VS will also error because you don't have the right version of .NET Core.\r\n\r\n> [5/03/2018 8:35:50 PM Error] Microsoft.VisualStudio.TestPlatform.ObjectModel.TestPlatformException: Testhost process exited with error: It was not possible to find any compatible framework version\r\n> The specified framework 'Microsoft.NETCore.App', version '2.1.0-preview2-26225-03' was not found.\r\n>   - Check application dependencies and target a framework version installed at:\r\n>       C:\\Program Files\\dotnet\\\r\n>   - The .NET framework can be installed from:\r\n>       https://aka.ms/dotnet-download-runtime\r\n>   - The .NET framework and SDK can be installed from:\r\n>       http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>   - The following versions are installed:\r\n>       1.0.5 at [C:\\Program Files\\dotnet\\shared]\r\n>       1.1.2 at [C:\\Program Files\\dotnet\\shared]\r\n>       2.0.0 at [C:\\Program Files\\dotnet\\shared]\r\n>       2.0.3 at [C:\\Program Files\\dotnet\\shared]\r\n>       2.0.5 at [C:\\Program Files\\dotnet\\shared]\r\n>       2.1.0-preview1-26216-03 at [C:\\Program Files\\dotnet\\shared]\r\n> \r\n>    at Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Client.ProxyOperationManager.SetupChannel(IEnumerable`1 sources, CancellationToken cancellationToken)\r\n>    at Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Client.ProxyExecutionManager.StartTestRun(TestRunCriteria testRunCriteria, ITestRunEventsHandler eventHandler)\r\n\r\nFor developers wishing to use VS the building from source page needs to include information on finding what the used version of .NET Core is and also how to download it. The [download link in the error](https://aka.ms/dotnet-download-runtime) only has official releases. Instructions to get the installer for custom versions are needed."},{"Id":"7334843252","Type":"IssuesEvent","CreatedAt":"2018-03-06T00:43:00","Actor":"HappyNomad","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2922","RelatedDescription":"Opened issue \"Reuse adapter instances within an `ObjectAdapter`'s scope\" (#2922) at aspnet/Home","RelatedBody":"I just realized how inefficient `ObjectVisitor`'s current implementation is.  It creates a new adapter instance for _every_ segment of _every_ path of _every_ patch operation.  That looks wasteful to me, and I imagine it will become a performance issue for large `JsonPatchDocument`s.  The adapter instances can instead be cached and reused.  Of course, the `ObjectVisitor` instances are also currently being created anew for _every_ patch operation, so that should also be remedied."},{"Id":"7334496414","Type":"IssuesEvent","CreatedAt":"2018-03-05T23:01:52","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2143","RelatedDescription":"Closed issue \"Static files not loaded properly when running behind nginx reverse proxy\" (#2143) at aspnet/Home","RelatedBody":"i have created a web project with visual studio 2017 and deployed to centos 7 then host by nginx. \r\nnow i use dotnet xxx.dll to start the app.\r\nit wokrs on http://localhost:5000 port but not working on http://localhost.\r\nhere is the snapshot.\r\n![image](https://user-images.githubusercontent.com/6106454/29443990-92b7e2ac-840e-11e7-94b1-2ebd3a0ad83c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6106454/29444001-a1f78cb8-840e-11e7-8ac3-122863296528.png)\r\n"},{"Id":"7334494494","Type":"IssuesEvent","CreatedAt":"2018-03-05T23:01:24","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2881","RelatedDescription":"Closed issue \".NET Core WebSockets - Token Authorization\" (#2881) at aspnet/Home","RelatedBody":"Hi,\r\n\r\n.NET Core WebSockets support token jwt authentication ? Have example to configure ?\r\n\r\nThank you,"},{"Id":"7334491782","Type":"IssuesEvent","CreatedAt":"2018-03-05T23:00:45","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2883","RelatedDescription":"Closed issue \"Self referencing loop error\" (#2883) at aspnet/Home","RelatedBody":"Hey guys, I found an issue with JSON, Razor Pages (Core 2) and EF (Core 2). I know all about self referencing loops and usually it can be solved with configuration. I added configuration and it did not work, I am still getting the error. Below you can see my configuration in \"Startup.cs\":\r\n\r\n```\r\n`        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n\r\n            services.AddMvc().AddJsonOptions(options =>\r\n            {\r\n                options.SerializerSettings.ContractResolver = new Newtonsoft.Json.Serialization.DefaultContractResolver();\r\n                options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Serialize;\r\n                options.SerializerSettings.PreserveReferencesHandling = PreserveReferencesHandling.Objects;\r\n            });\r\n\r\n            services.AddDbContext<CapitalMarketsRMBSContext>(options =>\r\n                options.UseSqlServer(Configuration.GetConnectionString(\"CapitalMarketsRMBSContext\")));\r\n\r\n            //services.AddDbContext<CapitalMarketsReportsContext>(options =>\r\n            //    options.UseSqlServer(Configuration.GetConnectionString(\"CapitalMarketsReportsContext\")));\r\n\r\n        }`\r\n```\r\nand when I make this simple call, I get the error:\r\n\r\n`        public void OnGet()\r\n        {\r\n            Pool = _context.Rmbspool.Include(p => p.RmbsCertificateRates).First();\r\n        }`\r\n\r\nHere are both entities involved in the call:\r\n\r\n```\r\n`    public partial class RmbsPool: EntityBase\r\n    {\r\n        //*** Omitted other properties for clarity ***\r\n\r\n                /// <summary>\r\n        /// Child RmbsCertificateRates where [RMBSCertificateRate].[PoolId] point to this entity (FK_RMBSCertificateRate_RMBSPool)\r\n        /// </summary>\r\n        public virtual System.Collections.Generic.ICollection<RmbsCertificateRate> RmbsCertificateRates { get; set; } // RMBSCertificateRate.FK_RMBSCertificateRate_RMBSPool\r\n\r\n    }\r\n`\r\n```\r\nAnd the \"Many\" class:\r\n\r\n```\r\n` [Serializable]  \r\npublic partial class RmbsCertificateRate: EntityBase\r\n    {\r\n        //*** Omitted other properties for clarity ***\r\n               [Required]\r\n        [Display(Name = \"Pool ID\")]\r\n\t\tpublic int PoolId\r\n\t\t{\r\n\t\t\tget { return _poolId; }\r\n\t\t\tset { SetProperty(ref _poolId, value); }\r\n\t\t}\r\n\r\n        /// <summary>\r\n        /// Parent RmbsPool pointed by [RMBSCertificateRate].([PoolId]) FK_RMBSCertificateRate_RMBSPool)\r\n        /// </summary>\r\n        public virtual RmbsPool RmbsPool { get; set; } // FK_RMBSCertificateRate_RMBSPool\r\n    }`\r\n```"},{"Id":"7334488278","Type":"IssuesEvent","CreatedAt":"2018-03-05T22:59:58","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2886","RelatedDescription":"Closed issue \"Segmentation Fault on Raspbian for Benchmarks\" (#2886) at aspnet/Home","RelatedBody":"Running the ASP.NET Core Benchmarks on Raspbian causes a segmentation fault for some URLs.\r\n\r\n### How to reproduce\r\n1. Get the latest source from https://github.com/aspnet/benchmarks\r\n2. Compile the src/Benchmarks project with `dotnet publish -c Release -r ubuntu.16.04-arm` (tested on Windows only)\r\n3. Set up the Raspberry Pi with the latest Raspbian\r\n4. Install .NET Core (and dependencies) on Raspberry Pi:\r\n `sudo apt-get install -yq curl libunwind8 gettext`\r\n `curl -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Runtime/release/2.0.0/dotnet-runtime-latest-linux-arm.tar.gz`\r\n `sudo mkdir -p /opt/dotnet`\r\n `sudo tar zxf dotnet.tar.gz -C /opt/dotnet`\r\n `sudo ln -s /opt/dotnet/dotnet /usr/local/bin`\r\n5. Copy the \"published\" files from step 2 (./Release/netcoreapp2.0/ubuntu.16.04-arm/publish) to the Raspberry Pi\r\n6. Run the benchmarks with: `dotnet Benchmarks.dll /KestrelTransport=Sockets /Scenarios=StaticFiles /urls=http://*:8080`\r\n7. Open a browser (tested with Chrome on Windows) and navigate to http://[raspi-address]:8080/1MB.txt\r\n8. The browser will (in most cases) report that the server wasn't responding (`ERR_CONNECTION_REFUSED`) and on the Raspberry Pi the application crashes with a single line output: `Segmentation fault`\r\n\r\nThe same also happens for some other URLs, but sometimes the bug is not as reproducible as with the 1MB.txt.\r\n\r\nA quick debug with gdb revealed not much (except that it may be in memcmp and/or the stack is corrupt):\r\n`Thread 10 \"dotnet\" received signal SIGSEGV, Segmentation fault.`\r\n`[Switching to Thread 0x58971450 (LWP 1285)]`\r\n`0x76fba404 in memcmp () from /usr/lib/arm-linux-gnueabihf/libarmmem.so`\r\n`(gdb) bt`\r\n`#0  0x76fba404 in memcmp () from /usr/lib/arm-linux-gnueabihf/libarmmem.so`\r\n`#1  0x00000000 in ?? ()`\r\n`Backtrace stopped: previous frame identical to this frame (corrupt stack?)`\r\n\r\nNot sure where the bug comes from; it could be the runtime, Kestrel or ASP.NET Core - I'm posting it here, feel free to move the issue if another repository is more accurate."},{"Id":"7334487150","Type":"IssuesEvent","CreatedAt":"2018-03-05T22:59:41","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2904","RelatedDescription":"Closed issue \"Memory Leak \" (#2904) at aspnet/Home","RelatedBody":"I have two similar methods in a class that return null. Only difference is the method arguments they accept.\r\n\r\nIn both cases, the class that contains the below method implementation is added to the services collection in StartUp class using services.AddScope. The container is responsible to create the instance of the class and also dispose the object accordingly.\r\n\r\nApp starts with 90MB without any initial request (Diagnostics tool to monitor).\r\n\r\n**Method-1 : No memory leak for 150 calls/minute**\r\n\r\npublic Task<MyObject> DoNothing()\r\n{\r\n   return null;\r\n}\r\n\r\n**Method-2 : Memory creeps up and reaches 800 MB for 150 calls/minute. Even after waiting for long, the memory usage is still around 750MB.**\r\n\r\npublic Task<MyObject> DoSomething(string args1,.....,string args10)\r\n{\r\n    return null;\r\n}\r\n\r\n**Based on my analysis, it seems to be the arguments that are passed to Method-2 that are not getting disposed and hence the memory leak**. I cannot change the signature of Method-2 due to existing interface restrictions. The total size of the arguments being passed to Method-2 is around 1.25MB for each request.\r\n\r\nSo my question and the help I am looking for is, how do I make sure the HttpRequest that contains the list of arguments to Method-2 are disposed and prevent this memory leak issue?"},{"Id":"7334484029","Type":"IssuesEvent","CreatedAt":"2018-03-05T22:58:55","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2921","RelatedDescription":"Closed issue \"How to Upload image in specified folder and save path in database .NET core\" (#2921) at aspnet/Home","RelatedBody":"Moved from https://github.com/aspnet/EntityFramework.Docs/issues/627 filed by @veezo2007pk because question seems to be about how to get a relative filename in ASP.NET Core.\r\n\r\n```C#\r\n[HttpPost]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task Create([Bind]Employee employee)\r\n        {\r\n            if (ModelState.IsValid)\r\n            {\r\n                var files = HttpContext.Request.Form.Files;\r\n                foreach (var Image in files)\r\n                {\r\n                    if (Image != null && Image.Length > 0)\r\n                    {\r\n                        var file = Image;\r\n\r\n                        var uploads = Path.Combine(_appEnvironment.WebRootPath, \"uploads\\\\img\");\r\n                        if (file.Length > 0)\r\n                        {\r\n                            var fileName = Guid.NewGuid().ToString().Replace(\"-\", \"\") + Path.GetExtension(file.FileName);\r\n                            using (var fileStream = new FileStream(Path.Combine(uploads, fileName), FileMode.Create))\r\n                            {\r\n                                await file.CopyToAsync(fileStream);\r\n                                employee.ImageName = fileName;\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                db.Employees.Add(employee);\r\n                db.SaveChanges();\r\n                return RedirectToAction(\"Edit\", new { id = employee.Id,name=employee.FirstName});\r\n             }\r\n        else\r\n        {\r\n            var errors = ModelState.Values.SelectMany(v => v.Errors);\r\n        }\r\n            return View(employee);\r\n\r\n        }\r\n```\r\nwhen i save image, image save successfully in database, but it takes full image path like this C:\\Users\\VIZO\\Desktop\\employee.jpg i dont want like this, i need to save image path somehting like this ~images\\employee.jpg and in specific folder and same path should save in database, also if someone show me after saving correct path how i can view that image."},{"Id":"7334463425","Type":"IssuesEvent","CreatedAt":"2018-03-05T22:53:58","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2917","RelatedDescription":"Closed issue \"The link to contributor license agreement is not working\" (#2917) at aspnet/Home","RelatedBody":"The link to sign the contributor license agreement in https://github.com/aspnet/Home/blob/dev/CONTRIBUTING.md is not working."},{"Id":"7334408077","Type":"IssuesEvent","CreatedAt":"2018-03-05T22:40:51","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2921","RelatedDescription":"Opened issue \"How to Upload image in specified folder and save path in database .NET core\" (#2921) at aspnet/Home","RelatedBody":"Moved from https://github.com/aspnet/EntityFramework.Docs/issues/627 filed by @veezo2007pk because question seems to be about how to get a relative filename in ASP.NET Core.\r\n\r\n```C#\r\n[HttpPost]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task Create([Bind]Employee employee)\r\n        {\r\n            if (ModelState.IsValid)\r\n            {\r\n                var files = HttpContext.Request.Form.Files;\r\n                foreach (var Image in files)\r\n                {\r\n                    if (Image != null && Image.Length > 0)\r\n                    {\r\n                        var file = Image;\r\n\r\n                        var uploads = Path.Combine(_appEnvironment.WebRootPath, \"uploads\\\\img\");\r\n                        if (file.Length > 0)\r\n                        {\r\n                            var fileName = Guid.NewGuid().ToString().Replace(\"-\", \"\") + Path.GetExtension(file.FileName);\r\n                            using (var fileStream = new FileStream(Path.Combine(uploads, fileName), FileMode.Create))\r\n                            {\r\n                                await file.CopyToAsync(fileStream);\r\n                                employee.ImageName = fileName;\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                db.Employees.Add(employee);\r\n                db.SaveChanges();\r\n                return RedirectToAction(\"Edit\", new { id = employee.Id,name=employee.FirstName});\r\n             }\r\n        else\r\n        {\r\n            var errors = ModelState.Values.SelectMany(v => v.Errors);\r\n        }\r\n            return View(employee);\r\n\r\n        }\r\n```\r\nwhen i save image, image save successfully in database, but it takes full image path like this C:\\Users\\VIZO\\Desktop\\employee.jpg i dont want like this, i need to save image path somehting like this ~images\\employee.jpg and in specific folder and same path should save in database, also if someone show me after saving correct path how i can view that image."},{"Id":"7334110434","Type":"IssuesEvent","CreatedAt":"2018-03-05T21:38:16","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2918","RelatedDescription":"Closed issue \"HTTP client - API error c# (A task was canceled.)\" (#2918) at aspnet/Home","RelatedBody":"We are calling multiple API's in foreach loop and all API are of Async call. Now in the foreach loop due to some reason 1 API call has returned internal error and we are skipping that record and progressing with other requests in for loop. When the next loop continues the first API call we are getting error with \"System.Threading.Tasks.TaskCanceledException: A task was canceled\" and \"Aggregation exception\".\r\n\r\nCode Snippet:\r\nWe are making Httpclient initialization per loop and object used multiple times in the loop.\r\nusing (var httpClientHelper = new HttpClientHelper(tokenService))\r\n\r\nAPI call snippet:\r\nvar response = await httpClientHelper.GetAsync(\"http://xyz\");\r\n\r\nHelp or thoughts on this will be much appreciated."},{"Id":"7333511676","Type":"IssuesEvent","CreatedAt":"2018-03-05T19:38:54","Actor":"HappyNomad","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2920","RelatedDescription":"Opened issue \"Throw and catch exceptions instead of `out string errorMessage` everywhere\" (#2920) at aspnet/Home","RelatedBody":"While implementing JSON Patch `IAdapter`s, I encountered a coding pattern that I'm unaccustomed to.  Instead of throwing and catching exceptions, the library has `out string errorMessage` parameters everywhere.  That's what exceptions are for, so this pattern doesn't seem to belong."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7335184434","Type":"PullRequestEvent","CreatedAt":"2018-03-06T02:32:07","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1533","RelatedDescription":"Opened pull request \"Fix UMD module version of @aspnet/signalr-protocol-msgpack\" (#1533) at aspnet/SignalR","RelatedBody":"The problem was that the `rollup` was injecting `require(\"../../node_modules/msgpack5/index.js\")` into the UMD build. It looks like it **was** working when used as a browser `<script>` reference. It was only when used as an AMD module that it failed because of the broken `require`. There's a separate issue here which is that WebPack was choosing to use the `dist/browser` script instead of the `dist/cjs` script it's supposed to use. I'll file that issue for later, but as long as this change makes it work in `webpack` (which I will test before merging), then we can ship this and #1520 as `1.0.0-preview1-update1` of the respective packages.\r\n\r\nTODO:\r\n* [ ] Verify this fixes webpack (and thus will Fix #1530)"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7335199154","Type":"IssuesEvent","CreatedAt":"2018-03-06T02:36:51","Actor":"maxtoroq","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7442","RelatedDescription":"Opened issue \"Should Value helpers use EditFormatString?\" (#7442) at aspnet/Mvc","RelatedBody":"If both input and editor helpers use EditFormatString, shouldn't the Value[For[Model]] helpers do the same?"},{"Id":"7334925775","Type":"PullRequestEvent","CreatedAt":"2018-03-06T01:09:38","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7441","RelatedDescription":"Opened pull request \"Added JQueryQueryStringValueProvider\" (#7441) at aspnet/Mvc","RelatedBody":"[Fixes #6372] jQuery ajax request with complex data does not work with .net core 1.1 model bindings"},{"Id":"7334908308","Type":"PullRequestEvent","CreatedAt":"2018-03-06T01:03:58","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7440","RelatedDescription":"Opened pull request \"Remove problem+json Content-Type\" (#7440) at aspnet/Mvc","RelatedBody":"Addresses #7344 \r\n"},{"Id":"7334089621","Type":"PullRequestEvent","CreatedAt":"2018-03-05T21:34:06","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7424","RelatedDescription":"Merged pull request \"UrlHelperFactory.GetUrlHelper throws NullReferenceException when action context is null.\" (#7424) at aspnet/Mvc","RelatedBody":"This change validates the action context parameter and add tests for\r\nall argument exceptions for UrlHelperFactory.GetUrlHelper."},{"Id":"7333082658","Type":"IssuesEvent","CreatedAt":"2018-03-05T18:15:29","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7419","RelatedDescription":"Closed issue \"RazorPages ViewEngine with customizable file extensions.\" (#7419) at aspnet/Mvc","RelatedBody":"The RazorPages view engine (RazorViewEngine) only support cshtml.\r\n\r\nCan the hard coded instances of \"cshtml\" be removed and replace with a property or something to be able to make a custom RazorViewEngine that supports to any file/page/view extension?\r\n\r\nFor example in files:\r\n* Microsoft.AspNetCore.Mvc.Razor.Internal.xxxMicrosoft.AspNetCore.Mvc.Razor.Internal.FileProviderRazorProject (RazorFileExtension)\r\n* Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionDescriptorChangeProvider (_searchPattern)\r\n* Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvokerProvider (ViewStartFileName)\r\n* Microsoft.AspNetCore.Mvc.ApplicationModels.PageConventionCollection (EnsureValidPageName)\r\n* Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageSelectorModel (IndexFileName)\r\n* Microsoft.AspNetCore.Mvc.RazorPages.Internal.RazorPagesRazorViewEngineOptionsSetup (Configure uses RazorViewEngine.ViewExtension)\r\n* Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine (ViewExtension & ViewStartFileName)\r\n* Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewEngineOptionsSetup (Configure)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7334547191","Type":"IssuesEvent","CreatedAt":"2018-03-05T23:15:02","Actor":"Eilon","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1663","RelatedDescription":"Opened issue \"AccountController ForgotPassword should check the UserId before ResetPassword\" (#1663) at aspnet/Identity","RelatedBody":"_From @Eilon on October 24, 2017 21:36_\n\n_From @HaoK on January 25, 2017 19:32_\n\nMoved from: https://github.com/aspnet/Home/issues/1911#issuecomment-275184195\r\n\r\nToday we are passing in the userId from ForgotPassword:  https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Controllers/AccountController.cs#L282\r\n\r\nBut not using it when we reset: https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Controllers/AccountController.cs#L321\r\n\r\nWe should check that the User with userId matches the user that is retrieved via FindByEmail as well.\r\n\r\ncc @blowdart \r\n\n\n_Copied from original issue: aspnet/Templates#804_\n\n_Copied from original issue: aspnet/templating#96_"},{"Id":"7334077946","Type":"PullRequestEvent","CreatedAt":"2018-03-05T21:31:50","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1629","RelatedDescription":"Merged pull request \"[Fixes #1628] Avoid stomping on an existing FileProvider\" (#1629) at aspnet/Identity","RelatedBody":"Respects the existing one if it's there."},{"Id":"7333486825","Type":"IssuesEvent","CreatedAt":"2018-03-05T19:34:04","Actor":"Eilon","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1661","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#1661) at aspnet/Identity","RelatedBody":"_From @Eilon on October 24, 2017 21:53_\n\n_From @Tratcher on April 8, 2016 22:13_\n\nThe individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n\n\n_Copied from original issue: aspnet/Templates#490_\n\n_Copied from original issue: aspnet/templating#118_"},{"Id":"7333251940","Type":"IssuesEvent","CreatedAt":"2018-03-05T18:49:17","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1429","RelatedDescription":"Closed issue \"How can I replace base64 in GenerateEmailConfirmationTokenAsync?\" (#1429) at aspnet/Identity","RelatedBody":"Hi!\r\nI'm developing a dotnet core template based on JavaScriptServices (angular 4) and OpenIddict - https://github.com/NorDroN/AngularTemplate \r\n\r\nI've tried to add an email confirmation, but it turned up not so simple:\r\nMicrosoft.AspNetCore.Identity use base64 when generates token (GenerateEmailConfirmationTokenAsync), but base64 can contain slash (/) and also base64 is case sensitive\r\nI've tried to solve this problems:\r\n1) I've tried to add Encode in my code for token ( / -> %2F), but angular can understand this ( %2F -> / ) and parse it as part of url :(\r\n2) angular also replaces my url with base64 code to url in lowercase (I don't know why, but it's so) and of course when I try to check it I get an error\r\n\r\nHow can I replace base64 to base32 or may be something else?"},{"Id":"7333242966","Type":"IssuesEvent","CreatedAt":"2018-03-05T18:47:28","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/628","RelatedDescription":"Closed issue \"Improve mechanism for flowing additional claims to identity cookie on SignIn\" (#628) at aspnet/Identity","RelatedBody":"In ExternalLoginCallback there are claims set by middlewear components that are being dropped in ExternalLoginSignInAsync.\n\nSpecifically, I am using the [github](https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/dev/src/AspNet.Security.OAuth.GitHub/GitHubAuthenticationHandler.cs#L35) external provider which sets a bunch of claims, and I see the claims during ExternalLoginCallback, but they are not carried through. What I want to get at is the auth token which is set as a claim when configured.\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7334797459","Type":"PullRequestEvent","CreatedAt":"2018-03-06T00:28:36","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2364","RelatedDescription":"Merged pull request \"Fix Http2ConnectionTests flakiness\" (#2364) at aspnet/KestrelHttpServer","RelatedBody":"- The default PipeScheduler got switched from Inline to ThreadPool.\r\n- This switches the Http2ConnectionTests PipeScheduler back to ThreadPool.\r\n\r\nFixes #2359"},{"Id":"7334722414","Type":"PullRequestEvent","CreatedAt":"2018-03-06T00:05:14","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2363","RelatedDescription":"Closed pull request \"Skip broken test\" (#2363) at aspnet/KestrelHttpServer","RelatedBody":"#2362."},{"Id":"7334719972","Type":"IssuesEvent","CreatedAt":"2018-03-06T00:04:30","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2362","RelatedDescription":"Closed issue \"Broken test: ConnectionResetLoggedWithActiveStreams\" (#2362) at aspnet/KestrelHttpServer","RelatedBody":"A lot of tests seem to have been broken by our move to Http2. I'm Skipping them for now, but we need to triage and fix them.\r\n\r\nNon-exhaustive list of failures [here](http://aspnetci/httpAuth/app/rest/builds?locator=tag:CollectionDiff,sinceDate:201710010T000000-0001&fields=build(startDate,buildTypeId,status,branchName,webUrl,tags)).\r\n\r\n```\r\nThe collection contained 0 matching element(s) instead of 1.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests.<ConnectionResetLoggedWithActiveStreams>d__127.MoveNext() in /_/test/Kestrel.Core.Tests/Http2ConnectionTests.cs:line 1974\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nAffected tests:\r\n- ConnectionResetLoggedWithActiveStreams\r\n"},{"Id":"7334717709","Type":"PullRequestEvent","CreatedAt":"2018-03-06T00:03:46","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2364","RelatedDescription":"Opened pull request \"Fix Http2ConnectionTests flakiness\" (#2364) at aspnet/KestrelHttpServer","RelatedBody":"- The default PipeScheduler got switched from Inline to ThreadPool.\r\n- This switches the Http2ConnectionTests PipeScheduler back to ThreadPool.\r\n\r\nFixes #2359"},{"Id":"7334666083","Type":"PullRequestEvent","CreatedAt":"2018-03-05T23:48:26","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2363","RelatedDescription":"Opened pull request \"Skip broken test\" (#2363) at aspnet/KestrelHttpServer","RelatedBody":"#2362."},{"Id":"7334600502","Type":"IssuesEvent","CreatedAt":"2018-03-05T23:29:44","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2362","RelatedDescription":"Opened issue \"Broken test: ConnectionResetLoggedWithActiveStreams\" (#2362) at aspnet/KestrelHttpServer","RelatedBody":"A lot of tests seem to have been broken by our move to Http2. I'm Skipping them for now, but we need to triage and fix them.\r\n\r\nNon-exhaustive list of failures [here](http://aspnetci/httpAuth/app/rest/builds?locator=tag:CollectionDiff,sinceDate:201710010T000000-0001&fields=build(startDate,buildTypeId,status,branchName,webUrl,tags)).\r\n\r\n```\r\nThe collection contained 0 matching element(s) instead of 1.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests.<ConnectionResetLoggedWithActiveStreams>d__127.MoveNext() in /_/test/Kestrel.Core.Tests/Http2ConnectionTests.cs:line 1974\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nAffected tests:\r\n- ConnectionResetLoggedWithActiveStreams\r\n"},{"Id":"7333328245","Type":"IssuesEvent","CreatedAt":"2018-03-05T19:03:33","Actor":"natemcmaster","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2360","RelatedDescription":"Opened issue \"Switch default transport to sockets\" (#2360) at aspnet/KestrelHttpServer","RelatedBody":"Currently, it is our goal by 2.1.0 to make sockets the default transport. We made the [switch in early builds of 2.1.0](https://github.com/aspnet/KestrelHttpServer/pull/2100) but reverted that for preview1 (https://github.com/aspnet/KestrelHttpServer/issues/2220) due to performance issues.\r\n\r\nMotivations:\r\n - broad platform support. Wherever managed sockets are supported, Kestrel should work. Doesn't require recompiling libuv to bring up a new OS.\r\n - source-build. (https://github.com/dotnet/source-build). In current form, Kestrel packages can't be produced in a source-build environment\r\n - ecosystem. Helps to drive improvement to the .NET sockets implementation, which benefits anyone else using managed sockets.\r\n\r\n/cc @halter73 @davidfowl @muratg \r\n\r\n"},{"Id":"7329756178","Type":"IssuesEvent","CreatedAt":"2018-03-05T07:03:54","Actor":"jkotalik","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2359","RelatedDescription":"Opened issue \"TestFailure: Http2ConnectionTests.ConnectionResetLoggedWithActiveStreams\" (#2359) at aspnet/KestrelHttpServer","RelatedBody":"The collection contained 0 matching element(s) instead of 1.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2ConnectionTests.<ConnectionResetLoggedWithActiveStreams>d__127.MoveNext() in C:\\b\\w\\1e8cd6334ef22651\\test\\Kestrel.Core.Tests\\Http2ConnectionTests.cs:line 1974\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\r\n@davidfowl can we just disable this test?"},{"Id":"7325511649","Type":"IssuesEvent","CreatedAt":"2018-03-03T09:55:11","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2358","RelatedDescription":"Closed issue \"Abstraction layer for Windows Service and systemd?\" (#2358) at aspnet/KestrelHttpServer","RelatedBody":"This is a question. I just finished getting my .NET Core ASP app deployed as a service, and thank you for [the help](https://github.com/aspnet/KestrelHttpServer/issues/2351). But I was trying something that might just not be possible - deploying the same app as a service under Ubuntu, [following instructions to deploy it as a service using systemd](http://pmcgrath.net/running-a-simple-dotnet-core-linux-daemon). It core dumps. So just to confirm, the WebHostService class is Windows specific? It is not an abstraction layer for all OS(s)? If this is the case, is there a way to check the OS you are running on and instantiate a similar class for Linux that provides the same kind of lifecycle execution points, like OnStopped()? Thank you."},{"Id":"7325160147","Type":"IssuesEvent","CreatedAt":"2018-03-03T05:02:35","Actor":"fbrier","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2358","RelatedDescription":"Opened issue \"Abstraction layer for Windows Service and systemd?\" (#2358) at aspnet/KestrelHttpServer","RelatedBody":"This is a question. I just finished getting my .NET Core ASP app deployed as a service, and thank you for [the help](https://github.com/aspnet/KestrelHttpServer/issues/2351). But I was trying something that might just not be possible - deploying the same app as a service under Ubuntu, [following instructions to deploy it as a service using systemd](http://pmcgrath.net/running-a-simple-dotnet-core-linux-daemon). It core dumps. So just to confirm, the WebHostService class is Windows specific? It is not an abstraction layer for all OS(s)? If this is the case, is there a way to check the OS you are running on and instantiate a similar class for Linux that provides the same kind of lifecycle execution points, like OnStopped()? Thank you."},{"Id":"7324632636","Type":"IssuesEvent","CreatedAt":"2018-03-02T23:48:45","Actor":"DamianEdwards","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2357","RelatedDescription":"Opened issue \"Support SNI to enable multiple HTTPS hosts on single server\" (#2357) at aspnet/KestrelHttpServer","RelatedBody":"Details to come...\r\n\r\n@Tratcher @muratg "}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7334782658","Type":"IssuesEvent","CreatedAt":"2018-03-06T00:23:45","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1958","RelatedDescription":"Closed issue \"Build server: Add tests\" (#1958) at aspnet/Razor","RelatedBody":"Meta issue - #1921 \r\n\r\n"},{"Id":"7334656592","Type":"IssuesEvent","CreatedAt":"2018-03-05T23:45:41","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2117","RelatedDescription":"Closed issue \"[Fit and Polish]: Remove Verifying assembly message printed as part of build with minimal output\" (#2117) at aspnet/Razor","RelatedBody":"Building with RazorCompileOnBuild=true produces a \"Verifying...\" message anytime Razor views are generated \\ compiled:\r\n\r\n```\r\n1>------ Build started: Project: MvcSandbox, Configuration: Debug Any CPU ------\r\n1>Verifying assembly at .nuget\\packages\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0-preview2-30190\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\r\n1>MvcSandbox -> \\Mvc\\samples\\MvcSandbox\\bin\\Debug\\netcoreapp2.1\\MvcSandbox.dll\r\n1>MvcSandbox -> \\Mvc\\samples\\MvcSandbox\\bin\\Debug\\netcoreapp2.1\\MvcSandbox.Views.dll\r\n========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\n\r\nNeed to tweak the verbosity of whatever's producing the message\r\n"},{"Id":"7334645416","Type":"PullRequestEvent","CreatedAt":"2018-03-05T23:42:25","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2132","RelatedDescription":"Merged pull request \"Don't print normal output as error\" (#2132) at aspnet/Razor","RelatedBody":"#2117 \r\n\r\nWe were sending all output to Console.Error in the non-buildserver scenario."},{"Id":"7334586374","Type":"PullRequestEvent","CreatedAt":"2018-03-05T23:25:49","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2132","RelatedDescription":"Opened pull request \"Don't print normal output as error\" (#2132) at aspnet/Razor","RelatedBody":"#2117 \r\n\r\nWe were sending all output to Console.Error in the non-buildserver scenario."},{"Id":"7334508074","Type":"PullRequestEvent","CreatedAt":"2018-03-05T23:04:51","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2131","RelatedDescription":"Opened pull request \"Make UseRazorBuildServer=true by default\" (#2131) at aspnet/Razor","RelatedBody":""},{"Id":"7333693053","Type":"IssuesEvent","CreatedAt":"2018-03-05T20:14:10","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1991","RelatedDescription":"Closed issue \"Shutdown test in ServerLifecycleTest takes forever to run on linux/mac\" (#1991) at aspnet/Razor","RelatedBody":"https://travis-ci.org/aspnet/Razor/jobs/334963674#L1145"},{"Id":"7333464399","Type":"PullRequestEvent","CreatedAt":"2018-03-05T19:29:46","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2091","RelatedDescription":"Merged pull request \"Make RazorCompileOnBuild=true\" (#2091) at aspnet/Razor","RelatedBody":"Fixes #1986"},{"Id":"7333083199","Type":"IssuesEvent","CreatedAt":"2018-03-05T18:15:35","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2125","RelatedDescription":"Closed issue \"RazorPages ViewEngine with customizable file extensions.\" (#2125) at aspnet/Razor","RelatedBody":"The RazorPages view engine (RazorViewEngine) only support cshtml.\r\n\r\nCan the hard coded instances of \"cshtml\" be removed and replace with a property or something to be able to make a custom RazorViewEngine that supports to any file/page/view extension?\r\n\r\nFor example in files:\r\n* Microsoft.AspNetCore.Razor.Language.FileSystemRazorProject (EnumerateItems)\r\n* Microsoft.AspNetCore.Mvc.Razor.Extensions.MvcRazorTemplateEngine (Options.ImportsFileName)"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"},{"Id":"7271114444","Type":"IssuesEvent","CreatedAt":"2018-02-20T18:33:27","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/347","RelatedDescription":"Closed issue \"File nesting in Solution Explorer is inconsistent and incorrect\" (#347) at aspnet/Tooling","RelatedBody":"The Solution Explorer for ASP.NET 5 MVC projects has several major problems - one of them is file nesting. The below issues affect Visual Studio 2015 Update 1 with ASP.NET 5 Release Candidate 1.\n#### tl;dr\n- Please fix nesting rules for `.less`, `.scss` and `.sass`, so those files are nested under `.html`.\n- Please fix incorrect nesting that sometimes appear after renaming/moving/copying files and folders.\n- Please provide an option to disable all file nesting, and eventually, options to configure nesting rules.\n- Please fix other critical Solution Explorer issues - this is just one of them, and there are many more.\n#### File nesting is inconsistent when nesting files under `.html`.\n\nThe `.less` and `.scss` files should be nested under `.html`. Those files compile to `.css` just like `.ts` compile to `.js` and they are just as much part of the view component. \n![less-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942660/6452782c-a838-11e5-9a44-d7ab6a2e5fc9.png)\n![scss-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942664/66bbd3a6-a838-11e5-8e3c-f1c369d5e1de.png)\nIn fact, if we only have a `.css` file in there, then it _is_ nested as expected, so clearly `.less` and `.scss` should also be nested:\n![css-is-nested-as-expected](https://cloud.githubusercontent.com/assets/6388663/11942670/6be4bdd4-a838-11e5-99b1-1dcc43238459.png)\n\nWhile the above is clearly a bug, and a very annoying one at that, the rules for other file types are less obvious, but should maybe also be considered... maybe `.json` should also be nested under `.html`?\nIt probably contains either settings, string resources, or data for that view component, so it seems resonable to me, although I consider this far less important than getting the style sheet nesting fixed.\n![json-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11939884/4a1bb224-a825-11e5-9ff6-631b4e8fed39.png)\n\nThose nesting rules have been inconsistent ever since they were introduced in ASP.NET 5, and **it really needs to be fixed**. Sure, everything compiles just fine, but I'm getting really pissed off looking at this mess in my Solution Explorer every day. Inconsistencies like this makes the whole concept of nesting seem like an annoyance more than a help, as it raises the obvious question \"if only some files are nested, then why nest anything at all - that's just an extra click to get to the .ts file\". Which brings me to...\n#### File nesting can be annoying\n\nWhile the fundamental idea of file nesting is not nessesarily bad, it can be _very_ annoying at times, which is why, as a _minimum_, **I want an option to disable all file nesting** - and ideally, options to configure the nesting rules.\n\nConsider this folder structure, where the folder already represents a container for the component:\n![file-nesting-is-annoying](https://cloud.githubusercontent.com/assets/6388663/11940913/ff28392a-a82b-11e5-86b4-571bc70d21bb.png)\nHere the file nesting provides no benefit at all, and actually just introduces a _really_ annoying extra click to get to the `.ts` file. A possible fix for this might be to only nest files if the folder name is different from the name of the `.html` file, but this might also be wrong - for example, a folder named `tabs` representing some fancy `tabs` component might actually contain multiple elements that work together, e.g. `tabs.html/js`, `tab-pane.html/js` and `tab-button.html/js`, and in this case we _do_ want nesting for all three of those. Therefore, I strongly believe an option to simply disable all nesting is the best option here - and it is very much needed, because despite this example, we do have projects in which the nesting provides absolutely no value and represents a major annoyance.\n\nOne could also argue that the `.html` file should actually be nested under the `.js` file.\nConsider an Angular 2 application, where the `.ts` file represents the actual Component, annotated with metadata specifying either the path to the `.html` file representing its view, or if the view is small, a string representing the markup of the view. Same for styles, where the metadata in the `.ts` file specifies either the path to the `.css` file, or a string representing the style rules. Here, both the view and the style sheet is clearly dependencies of the `.ts` file, so it would make sense to nest them below that...\n##### An alternative idea\n\nAlternatively, you could consider a completely different approach to nesting, where the part of the file name the files have in common, is used to show a \"virtual folder\" containing all the files - then file nesting could be used only for things like transpiler generated files. The image below is a concept I mocked up to illustrate this idea:\n![virtual-folder-concept](https://cloud.githubusercontent.com/assets/6388663/11942319/042b84ea-a836-11e5-80f1-b5941cfbdfa7.png)\nHere, all the files have the \"foo\" part of their name in common, and is therefore nested under a \"foo\" node in Solution Explorer. However, in the file system, the actual files are all located in the components folder, so in the code the path would be `app/components/foo.js` - nice an clean, works for any file type, and makes no assumptions about whether `.html` or `.js` is more important.\n\nGoing further with this idea, the IDE could also be smart, so when selecting this \"virtual folder\", it could maybe somehow open all the `foo.*` files in a split view (ignoring transpilation output of course), thus providing a quick way to see all the component code at once. Just a thought...\n### File nesting is broken\n\nNot only is file nesting inconsistent, and sometimes annoying, but it is also broken.\nHere are two cases of incorrect behavior I managed to reproduce - unfortunately, this does not seem to fail consistently, so it can be hard to reproduce - but it does happen often enough to be annoying.\n![file-nested-on-drag-copy](https://cloud.githubusercontent.com/assets/6388663/11943207/4749c9e8-a83c-11e5-9f15-304cb16e8419.png)\n![nesting-broken-when-folder-is-renamed](https://cloud.githubusercontent.com/assets/6388663/11943211/4c807074-a83c-11e5-8e71-4bed0bd4353c.png)\n\nPlease take those Solution Explorer issues seriously - I've provided feedback about multiple critical issues several several months ago, and thus far _nothing_ has improved. Solution Explorer still hangs or crashes the whole IDE when a large number of files is modified/moved/copied/renamed, it still has annoying, inconsistent and buggy file nesting, and it still constantly gets out of sync with the file system, crashing first the project system and eventually the whole IDE. I'm more that a little concerned about seeing a release candidate label on something this buggy and unpolished - if this is indeed what you intend to release, then we intend to find another IDE for our frontend development.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesdâ¦ https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":54,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answeâ¦ https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of tâ¦ https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlandoâ¦ https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":15,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onliâ¦ https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 andâ¦ https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-03-06T05:30:09.3677646Z","RunDurationInMilliseconds":8104}