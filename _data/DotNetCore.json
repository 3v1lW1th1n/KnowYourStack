{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7261824493","Type":"IssuesEvent","CreatedAt":"2018-02-19T00:38:44","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16441","RelatedDescription":"Opened issue \"Suggestion: NUMA aware ThreadPool\" (#16441) at dotnet/coreclr","RelatedBody":"May need affinitized threadpool threads? \r\n\r\nAlso preference for stealing from NUMA node first before stealing from another NUMA node.\r\n\r\nWould it need a global queue per node? Should it still have a cross NUMA node global queue?"},{"Id":"7261615316","Type":"PullRequestEvent","CreatedAt":"2018-02-18T22:28:22","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16440","RelatedDescription":"Merged pull request \"Inline String->ReadOnlySpan\" (#16440) at dotnet/coreclr","RelatedBody":"The conversion doesn't currently inline producing\r\n```asm\r\n       lea      rcx, bword ptr [rsp+58H]\r\n       mov      rdx, rdi\r\n       call     String:op_Implicit(ref):struct\r\n       lea      rcx, bword ptr [rsp+48H]\r\n       mov      rdx, rbx\r\n       call     String:op_Implicit(ref):struct\r\n       lea      rcx, bword ptr [rsp+38H]\r\n       mov      rdx, bword ptr [rsp+58H]\r\n       mov      bword ptr [rcx], rdx\r\n       mov      edx, dword ptr [rsp+60H]\r\n       mov      dword ptr [rcx+8], edx\r\n       lea      rcx, bword ptr [rsp+28H]\r\n       mov      rdx, bword ptr [rsp+48H]\r\n       mov      bword ptr [rcx], rdx\r\n       mov      edx, dword ptr [rsp+50H]\r\n       mov      dword ptr [rcx+8], edx\r\n       lea      rcx, bword ptr [rsp+38H]\r\n       lea      rdx, bword ptr [rsp+28H]\r\n       call     CompareInfo:CompareOrdinalIgnoreCase(struct,struct):int\r\n```\r\nWhen inlined this reduces to\r\n```asm\r\n       lea      rax, bword ptr [rdi+12]\r\n       lea      r8, bword ptr [rbx+12]\r\n       lea      r9, bword ptr [rsp+38H]\r\n       mov      bword ptr [r9], rax\r\n       mov      dword ptr [r9+8], ecx\r\n       lea      rcx, bword ptr [rsp+28H]\r\n       mov      bword ptr [rcx], r8\r\n       mov      dword ptr [rcx+8], edx\r\n       lea      rcx, bword ptr [rsp+38H]\r\n       lea      rdx, bword ptr [rsp+28H]\r\n       call     CompareInfo:CompareOrdinalIgnoreCase(struct,struct):int\r\n```\r\n\r\n/cc @jkotas @stephentoub "},{"Id":"7261331356","Type":"PullRequestEvent","CreatedAt":"2018-02-18T19:42:56","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16440","RelatedDescription":"Opened pull request \"Inline String->ReadOnlySpan\" (#16440) at dotnet/coreclr","RelatedBody":"The conversion doesn't currently inline producing\r\n```asm\r\n       lea      rcx, bword ptr [rsp+58H]\r\n       mov      rdx, rdi\r\n       call     String:op_Implicit(ref):struct\r\n       lea      rcx, bword ptr [rsp+48H]\r\n       mov      rdx, rbx\r\n       call     String:op_Implicit(ref):struct\r\n       lea      rcx, bword ptr [rsp+38H]\r\n       mov      rdx, bword ptr [rsp+58H]\r\n       mov      bword ptr [rcx], rdx\r\n       mov      edx, dword ptr [rsp+60H]\r\n       mov      dword ptr [rcx+8], edx\r\n       lea      rcx, bword ptr [rsp+28H]\r\n       mov      rdx, bword ptr [rsp+48H]\r\n       mov      bword ptr [rcx], rdx\r\n       mov      edx, dword ptr [rsp+50H]\r\n       mov      dword ptr [rcx+8], edx\r\n       lea      rcx, bword ptr [rsp+38H]\r\n       lea      rdx, bword ptr [rsp+28H]\r\n       call     CompareInfo:CompareOrdinalIgnoreCase(struct,struct):int\r\n```\r\nWhen inlined this reduces to\r\n```asm\r\n       lea      rax, bword ptr [rdi+12]\r\n       lea      r8, bword ptr [rbx+12]\r\n       lea      r9, bword ptr [rsp+38H]\r\n       mov      bword ptr [r9], rax\r\n       mov      dword ptr [r9+8], ecx\r\n       lea      rcx, bword ptr [rsp+28H]\r\n       mov      bword ptr [rcx], r8\r\n       mov      dword ptr [rcx+8], edx\r\n       lea      rcx, bword ptr [rsp+38H]\r\n       lea      rdx, bword ptr [rsp+28H]\r\n       call     CompareInfo:CompareOrdinalIgnoreCase(struct,struct):int\r\n```\r\n\r\n/cc @jkotas @stephentoub "},{"Id":"7261105959","Type":"PullRequestEvent","CreatedAt":"2018-02-18T17:28:17","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16422","RelatedDescription":"Merged pull request \"Don't set delayRegFree if no target\" (#16422) at dotnet/coreclr","RelatedBody":"The `delayRegFree` flag on a use indicates that it interferes with the target register of the same node. This doesn't make sense if there is no def, and will cause the register to unnecessarily be kept alive until after the next actual reference.\r\nThis led to an assert in the verification pass on arm64. Checking and asserting for this case exposed another case for x86/x64.\r\n\r\nFix #15037"},{"Id":"7261105953","Type":"IssuesEvent","CreatedAt":"2018-02-18T17:28:17","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15037","RelatedDescription":"Closed issue \"[RyuJIT/arm64][JitStressRegs=0x80] Assertion failed 'regRecord->assignedInterval == nullptr'\" (#15037) at dotnet/coreclr","RelatedBody":"x64_arm64_altjit, with `COMPlus_JitStressRegs=0x80`:\r\n\r\n```\r\nset COMPlus_JitStressRegs=0x80\r\n\r\nset COMPlus_AltJit=*\r\nset COMPlus_AltJitNgen=*\r\nset COMPlus_AltJitName=protononjit.dll\r\nset COMPlus_NoGuiOnAssert=1\r\nset COMPlus_AltJitAssertOnNYI=1\r\nset COMPlus_AltJitSkipOnAssert=0\r\nset COMPlus_ContinueOnAssert=0\r\n```\r\n\r\nFailure:\r\n\r\n```\r\nAssert failure(PID 18784 [0x00004960], Thread: 11324 [0x2c3c]): Assertion failed 'regRecord->assignedInterval == nullptr' in 'Gen`1[Int32][System.Int32]:Target(ref):this' (IL size 158)\r\n\r\n    File: e:\\gh\\coreclr2\\src\\jit\\lsra.cpp Line: 12846\r\n    Image: E:\\gh\\coreclr2\\bin\\tests\\Windows_NT.x64.checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\n\r\nTest:\r\n```\r\nbaseservices\\threading\\generics\\TimerCallback\\tighttimercallback\\tighttimercallback.cmd\r\n```\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x64_arm64_altjit_checked_windows_nt_jitstressregs0x80_prtest/5/consoleText\r\n\r\nThe same test also fails with a different assert with different stress modes: https://github.com/dotnet/coreclr/issues/15036\r\n"},{"Id":"7260936150","Type":"PullRequestEvent","CreatedAt":"2018-02-18T15:46:35","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16433","RelatedDescription":"Merged pull request \"Delete workaround for #16197\" (#16433) at dotnet/coreclr","RelatedBody":"The workaround is still making the code faster because of it avoids GS cookie checks. The difference is <10% for corner cases like `\"a\".Replace(\"b\", \"c\")` and within noise for more realistic cases. Not worth it to keep the workaround for it."},{"Id":"7260379528","Type":"PullRequestEvent","CreatedAt":"2018-02-18T09:03:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16439","RelatedDescription":"Opened pull request \"Update PgoData to master-20180218-0046 (master)\" (#16439) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7260754900","Type":"IssuesEvent","CreatedAt":"2018-02-18T13:51:41","Actor":"pkapare","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8640","RelatedDescription":"Opened issue \"CLI source code build error : Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat\" (#8640) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Clone CLI repo\r\n2. Run Build.cmd to build code\r\n\r\n## Expected  behavior\r\nShould build source code without errors.\r\n\r\n\r\n## Actual behavior\r\nGetting following error.\r\nH:\\Github\\DotNetCore\\cli>build.cmd\r\nH:\\Github\\DotNetCore\\cli\\scripts\\obtain\\dotnet-install.ps1 -version \"2.2.0-preview1-007799\" -InstallDir H:\\Github\\DotNetCore\\cli\\.dotnet_stage0\\x64 -Architecture \"x64\"\r\ndotnet-install: .NET Core SDK version 2.2.0-preview1-007799 is already installed.\r\ndotnet-install: Adding to current process PATH: \"H:\\Github\\DotNetCore\\cli\\.dotnet_stage0\\x64\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\nMicrosoft (R) Build Engine version 15.6.12.27473 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Restore completed in 22.91 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\Microsoft.DotNet.Cli.Build.Framework\\Microsoft.DotNet.Cli.Build.Framework.csproj.\r\n    Restore completed in 26.81 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\shared-build-targets-utils\\shared-build-targets-utils.csproj.\r\n    Restore completed in 30.11 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\dotnet-cli-build\\dotnet-cli-build.csproj.\r\n  8215\r\n  787bee7ad3a143c64b677d3cf64c5fb180215c47\r\nMicrosoft (R) Build Engine version 15.6.12.27473 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 18-Feb-18 8:38:15 AM.\r\n     1>Project \"H:\\Github\\DotNetCore\\cli\\build.proj\" on node 1 (default targets).\r\n     1>PrintBuildInfo:\r\n         Host info - Rid: win10-x64, OSName: win\r\n         Build info - Rid: win10-x64, Architecture: x64, OSName: win\r\n         If you intended to use a different Rid, Architecture, or OSName run the following command to generate your build state:\r\n         dotnet msbuild build.proj /p:Architecture=Architecture /p:Rid=Rid /p:OSName=OSName /p:GeneratePropsFile=true /t:WriteDynamicPropsToStaticPropsFiles\r\n       MSBuildWorkaroundTarget:\r\n         Dont remove this target\r\n       RestoreDotnetCliBuildFramework:\r\n         H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64/dotnet.exe restore  /p:GeneratePropsFile=\r\n           Restore completed in 21.65 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\Microsoft.DotNet.Cli.Build.Framework\\Microsoft.DotNet.Cli.Build.Framework.csproj.\r\n           Restore completed in 23.66 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\shared-build-targets-utils\\shared-build-targets-utils.csproj.\r\n           Restore completed in 26.36 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\dotnet-cli-build\\dotnet-cli-build.csproj.\r\n       BuildDotnetCliBuildFramework:\r\n       Skipping target \"BuildDotnetCliBuildFramework\" because all output files are up-to-date with respect to the input files.\r\n       CheckPrereqs:\r\n         Using previous stage version:\r\n         H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64/dotnet.exe --version\r\n         2.2.0-preview1-007799\r\n       RestoreSrcPackages:\r\n         > [DotNetTool] restore    \"H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj\"\r\n         > H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64\\dotnet.exe restore    \"H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj\"\r\n           Restoring packages for H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj...\r\n           Restore completed in 32.43 ms for H:\\Github\\DotNetCore\\cli\\src\\tool_launcher\\tool_launcher.csproj.\r\n           Restore completed in 49.29 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.InternalAbstractions\\Microsoft.DotNet.InternalAbstractions.csproj.\r\n           Restore completed in 59.98 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Configurer\\Microsoft.DotNet.Configurer.csproj.\r\n           Restore completed in 58.11 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Cli.Utils\\Microsoft.DotNet.Cli.Utils.csproj.\r\n           Restore completed in 59.35 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Cli.Sln.Internal\\Microsoft.DotNet.Cli.Sln.Internal.csproj.\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat with version (>= 2.1.0-preview2-30106) [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 7 version(s) in cli-deps [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 5 version(s) in BlobFeed [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget.org [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in dotnet-corefxlab [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in websdkfeed [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget-build [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in roslyn [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in symreader-native [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in templating [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in vstest [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in container-tools [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in xunit [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n           Restore failed in 1.08 sec for H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj.\r\n     1>Done Building Project \"H:\\Github\\DotNetCore\\cli\\build.proj\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"H:\\Github\\DotNetCore\\cli\\build.proj\" (default target) (1) ->\r\n       (RestoreSrcPackages target) ->\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat with version (>= 2.1.0-preview2-30106) [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 7 version(s) in cli-deps [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 5 version(s) in BlobFeed [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget.org [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in dotnet-corefxlab [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in websdkfeed [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget-build [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in roslyn [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in symreader-native [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in templating [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in vstest [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in container-tools [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in xunit [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n\r\n    0 Warning(s)\r\n    13 Error(s)\r\n\r\nTime Elapsed 00:00:04.29\r\nFailed to build\r\nAt H:\\Github\\DotNetCore\\cli\\run-build.ps1:105 char:31\r\n+     if($LASTEXITCODE -ne 0) { throw \"Failed to build\" }\r\n+                               ~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Failed to build:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Failed to build\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.100-preview-007363)\r\n\r\nProduct Information:\r\n Version:            2.1.100-preview-007363\r\n Commit SHA-1 hash:  0468da6ada\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.100-preview-007363\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7258364234","Type":"IssuesEvent","CreatedAt":"2018-02-17T06:15:59","Actor":"mipnw","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8639","RelatedDescription":"Opened issue \"race condition in build with cross project reference\" (#8639) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nrun `dotnet build` on a folder containing an SLN pointing to two CSPROJ. One CSPROJ for the product, the other with unit tests. That second CSPROJ references the first CSPROJ via\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\src\\ProductName.csproj\" />\r\n  </ItemGroup>\r\n\r\nthat XML was added by calling\r\n`dotnet add test/ProductName.Test.csproj reference src/ProductName.csproj`\r\n\r\nBoth projects target framework netcoreapp2.0\r\n\r\nSometimes the build fails with\r\n`CSC : error CS0006: Metadata file \"C:\\users\\<username>\\<folder with SLN>\\src\\bin\\Debug\\netcoreapp2.0\\ProductName.dll\" could not be found [test\\ProductName.Test.csproj]`\r\n\r\nSo it appears there is a race condition, as `dotnet build` possibly tries to build both projects in the SLN in parallel, and the test build fails if it happens before the product is built.\r\n\r\nThe bug is either in the `dotnet build` CLI not waiting for the CSPROJ references to be built first, or in the `dotnet add reference` CLI for not adding a build order XML element to the SLN file.\r\n\r\n## Expected  behavior\r\nBuild succeeds 100% of the time\r\n\r\n\r\n## Actual behavior\r\nBuild sometimes fails, race condition?\r\n\r\n## Environment data\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7258342352","Type":"PullRequestEvent","CreatedAt":"2018-02-17T05:55:19","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8638","RelatedDescription":"Merged pull request \"Update SDK to 2.1.100-preview-62617-01\" (#8638) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"7258299178","Type":"PullRequestEvent","CreatedAt":"2018-02-17T05:13:56","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8638","RelatedDescription":"Opened pull request \"Update SDK to 2.1.100-preview-62617-01\" (#8638) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"7258263953","Type":"PullRequestEvent","CreatedAt":"2018-02-17T04:40:39","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8634","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.7.0-preview1-4927 into cli\" (#8634) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4927 into cli release/2.1.2xx branch"},{"Id":"7258263485","Type":"PullRequestEvent","CreatedAt":"2018-02-17T04:40:15","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8635","RelatedDescription":"Merged pull request \"Update versions of Web and Razor Sdk\" (#8635) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7261455638","Type":"IssuesEvent","CreatedAt":"2018-02-18T20:55:57","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/654","RelatedDescription":"Closed issue \"netstandard2.0 errors - The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\" (#654) at dotnet/standard","RelatedBody":"I have a class library that is completely successful with net45 or netstandard1.3. But adding netstandard2.0 to the TargetFrameworks generates thousands of errors:\r\n\r\n```\r\n1>JSchemaValidatingReader.cs(151,13,151,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(85,16,85,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(57,16,57,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(121,16,121,23): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(131,16,131,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(250,25,250,33): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(263,25,263,39): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(103,35,103,44): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nBuild the repo here to see the problem is action - https://github.com/JamesNK/Newtonsoft.Json.Schema/tree/netstandard2-broken"},{"Id":"7259811109","Type":"IssuesEvent","CreatedAt":"2018-02-18T00:17:00","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/654","RelatedDescription":"Opened issue \"netstandard2.0 errors - The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\" (#654) at dotnet/standard","RelatedBody":"I have a class library that is completely successful with net45 or netstandard1.3. But adding netstandard2.0 to the TargetFrameworks generates thousands of errors:\r\n\r\n```\r\n1>JSchemaValidatingReader.cs(151,13,151,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(85,16,85,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(57,16,57,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(121,16,121,23): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(131,16,131,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(250,25,250,33): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(263,25,263,39): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(103,35,103,44): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nBuild the repo here to see the problem is action - https://github.com/JamesNK/Newtonsoft.Json.Schema/tree/netstandard2-broken"},{"Id":"7252234877","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:11:54","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/653","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-02 (master)\" (#653) at dotnet/standard","RelatedBody":""},{"Id":"7251733856","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:24:37","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7249664432","Type":"IssuesEvent","CreatedAt":"2018-02-15T13:57:29","Actor":"MANYAM-HARI","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/652","RelatedDescription":"Opened issue \".net core 2.0 dependencies issue\" (#652) at dotnet/standard","RelatedBody":"![image](https://user-images.githubusercontent.com/14251849/36260023-17bf766c-1286-11e8-80af-09336a210ab3.png)\r\n![capture](https://user-images.githubusercontent.com/14251849/36260045-280e2b9e-1286-11e8-9ef7-ec22e87a1a73.PNG)\r\n\r\n"},{"Id":"7247555987","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:51:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7246800202","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:04:16","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/648","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02513-01 (master)\" (#648) at dotnet/standard","RelatedBody":""},{"Id":"7238206586","Type":"IssuesEvent","CreatedAt":"2018-02-13T13:54:17","Actor":"Ruud-cb","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/650","RelatedDescription":"Opened issue \"Duplicate 'Compile' items were included. Resources\" (#650) at dotnet/standard","RelatedBody":"I am getting the known error that is listed on this page:\r\nhttps://github.com/dotnet/core/blob/master/release-notes/1.0/sdk/1.0-rc3-default-compile-items.md\r\n\r\nWhile it sounds obvious to delete all the Compile items, it simply doesn't work. When you remove them the Resources.resx and the Resources.Designer.cs become separate items and after that I am unable to refer to them from all my other 10 projects.\r\nAlso the fact that the above link is regarding **dot.net CORE** and not **STANDARD** gives me a strange feeling that things have been sorted out correctly.\r\n\r\nWhat else, other then disabeling EnableDefaultCompileItems, can I do?\r\n\r\nMy Language.csproj:\r\n\r\n```\r\n <ItemGroup>\r\n    <Compile Include=\"Resources\\Resources.de.Designer.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>Resources.de.resx</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.Designer.cs\">\r\n      <DependentUpon>Resources.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.fr.Designer.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>Resources.fr.resx</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.tr.Designer.cs\">\r\n      <DependentUpon>Resources.tr.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.en.Designer.cs\">\r\n      <DependentUpon>Resources.en.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"T4\\CreateLocolizedKeys.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>CreateLocolizedKeys.tt</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n<ItemGroup>\r\n    <EmbeddedResource Include=\"Resources\\Resources.de.resx\">\r\n      <Generator>ResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.de.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.fr.resx\">\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.fr.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.tr.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.tr.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.en.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.en.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Babywatcher.Language</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\n\r\nI am unknown what consequences this has to the rest, but the current workaround is by adding these 2 property groups:\r\n\r\n```\r\n  <PropertyGroup>\r\n    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>\r\n</PropertyGroup>\r\n  <PropertyGroup>\r\n    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>\r\n  </PropertyGroup>\r\n```"},{"Id":"7234553536","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:00:10","Actor":"chadAtGA","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/649","RelatedDescription":"Opened issue \".net core console app reference .net standard class library with nuget pkg by file not project. \" (#649) at dotnet/standard","RelatedBody":"I created a simple .net core 2.0 console project and a simple .net standard 2.0 class library. I add a ref to the nuget package StackExchange.Redis and then use the redis in my class library. I build the release version of my standard 2.0 class library. Then I try and reference that dll by browsing not by project. I startup my console and it says that it cannot find the stackexchange redis dll. I have tried publishing it so all of the dlls are in the but it does not seem to make a difference. Calling ReturnInt no problems calling RetStringRetString it fails. I'm sure I'm missing something simple.\r\n\r\nHere is my class library\r\n\r\n public class Class1\r\n    {\r\n\t\tpublic int ReturnInt()\r\n\t\t{\r\n\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\r\n\t\tpublic string RetString()\r\n\t\t{\r\n\t\t\tStackExchange.Redis.ConnectionMultiplexer connectionMultiplexer = StackExchange.Redis.ConnectionMultiplexer.Connect(\"localhost\");\r\n\r\n\t\t\tif(connectionMultiplexer.IsConnected)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine(\"Connecte\");\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n    }"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7262338003","Type":"IssuesEvent","CreatedAt":"2018-02-19T05:13:23","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27246","RelatedDescription":"Opened issue \"Add PipeReader and PipeWriter implementations over a Stream\" (#27246) at dotnet/corefx","RelatedBody":"This will help with adoption of pipelines. This is possible today but we can provide an implementation with minimal allocations. The usual adapter code involves creating 2 pipes and creating 2 async loops that read from the stream and write into the pipe and reading from the pipe and writing into the Stream.\r\n\r\nThis works well but there are some downsides:\r\n- Some streams buffer internally and we may end up copying from the Stream's internal buffer into the pipe's buffers.\r\n- Even if we can avoid that, we'll end up allocating a Task per read and write operation (though some streams cache the result of the previous operation)\r\n- We end up paying per read/write costs in general (for e.g. in FileStream allocating via ThreadPoolBoundHandle.AllocateNativeOverlapped per read/write pair).\r\n\r\nMost of the per read/write costs can be mitigated by using CopyToAsync (if overridden by the Stream) but there are some downsides there as well.\r\n- Using the default implementations CopyToAsync allocates an internal buffer if the Stream doesn't have one already and passes that buffer to the other stream. Using the default pipe implementation, we end up copying the Stream's buffer into the pipe's buffer which might be fine but is a bit unfortunate.\r\n\r\nWe can avoid some of these overheads if we implement a PipeReader on top of CopyToAsync that doesn't use the Pipe internally. The idea here is that we call CopyToAsync on a fake stream that forwards WriteAsync calls to the PipeReader consumer. This implementation would pass buffers directly from the Stream to the consumer. If the consumer doesn't process the entire buffer, only the unconsumed buffer is copied into an internal buffer for the next read.\r\n\r\nThe write side isn't as problematic because we need to be able to allocate memory to write into the Stream so reusing the pipe isn't so bad here. The implementation here would likely be using a Pipe internally, then writing to the Stream on FlushAsync."},{"Id":"7262263956","Type":"IssuesEvent","CreatedAt":"2018-02-19T04:34:27","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27244","RelatedDescription":"Opened issue \"Test failure: System.IO.Tests.Enumeration.RootTests/CanRecurseFromRoot\" (#27244) at dotnet/corefx","RelatedBody":"Opened on behalf of @danmosemsft\n\nThe test `System.IO.Tests.Enumeration.RootTests/CanRecurseFromRoot` has failed.\n\nSystem.InvalidOperationException : Sequence contains more than one matching element\n\n        Stack Trace:\n\n           at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate) in /Users/buildagent/agent/_work/391/s/corefx/src/System.Linq/src/System/Linq/Single.cs:line 143\n       at System.IO.Tests.Enumeration.RootTests.CanRecurseFromRoot() in /Users/buildagent/agent/_work/391/s/corefx/src/System.IO.FileSystem/tests/Enumeration/RootTests.netcoreapp.cs:line 47\nBuild : Master - 20180219.01 (Core Tests)\nFailing configurations:\n- OSX.1012.Amd64-x64\n  - Release\n- Ubuntu.1710.Amd64-x64\n  - Release\n"},{"Id":"7261944393","Type":"PullRequestEvent","CreatedAt":"2018-02-19T01:47:50","Actor":"JonHanna","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27243","RelatedDescription":"Opened pull request \"Add Microsoft.CSharp tests for more access permutations.\" (#27243) at dotnet/corefx","RelatedBody":"Some access cases not currently covered for fields and nested types."},{"Id":"7261642463","Type":"PullRequestEvent","CreatedAt":"2018-02-18T22:44:26","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27242","RelatedDescription":"Opened pull request \"Implement SocketsHttpHandler's Expect100ContinueTimeout and ConnectTimeout\" (#27242) at dotnet/corefx","RelatedBody":"With the expectation that we'll want to expose this in 2.1, implement Expect100ContinueTimeout and ConnectTimeout.  The members are currently internal but can be flipped public easily once the APIs are approved.  This also fixes an issue with cancellation around the connect phase, where a cancellation request that came in during the SSL auth phase would not be respected.\r\n\r\nContributes to https://github.com/dotnet/corefx/issues/27145\r\nContributes to https://github.com/dotnet/corefx/issues/27235\r\ncc: @geoffkizer, @davidsh"},{"Id":"7261640894","Type":"PullRequestEvent","CreatedAt":"2018-02-18T22:43:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27241","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview2-26218-04, preview2-26218-03, respectively (release/2.1)\" (#27241) at dotnet/corefx","RelatedBody":""},{"Id":"7261611310","Type":"IssuesEvent","CreatedAt":"2018-02-18T22:25:52","Actor":"Rohansi","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27240","RelatedDescription":"Opened issue \"Linq.Expressions don't support operator overloads with in parameters\" (#27240) at dotnet/corefx","RelatedBody":"For example:\r\n```csharp\r\nreadonly struct Foo\r\n{\r\n    public static implicit operator Foo(in string x)\r\n    {\r\n        return new Foo();\r\n    }\r\n}\r\n\r\nclass Program\r\n{\r\n    public static unsafe void Main(string[] args)\r\n    {\r\n        Console.WriteLine((Foo)\"hi\"); // valid\r\n        Expression.Convert(Expression.Constant(\"hi\"), typeof(Foo)); // throws\r\n    }\r\n}\r\n```\r\n\r\nException:\r\n```\r\nSystem.InvalidOperationException: No coercion operator is defined between types 'System.String' and 'Test.Foo'.\r\n   at System.Linq.Expressions.Expression.GetUserDefinedCoercionOrThrow(ExpressionType coercionType, Expression expression, Type convertToType)\r\n   at System.Linq.Expressions.Expression.Convert(Expression expression, Type type, MethodInfo method)\r\n   at System.Linq.Expressions.Expression.Convert(Expression expression, Type type)\r\n   at Test.Program.Main(String[] args) in D:\\Desktop\\Test\\Test\\Program.cs:line 22\r\n```\r\n\r\nThis also happens with other operator overloads. Maybe other places too (method call?) but I haven't tested those."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7261709480","Type":"IssuesEvent","CreatedAt":"2018-02-18T23:25:23","Actor":"nehmebilal","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24923","RelatedDescription":"Opened issue \"MSBuildWorkspace.OpenProjectAsync cannot resolve $(Configuration) correctly\" (#24923) at dotnet/roslyn","RelatedBody":"**Version Used**: 2.6.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Use `MSBuildWorkspace.OpenProjectAsync` to open a ProjectA that references a ProjectB dll using a hint path as follows:\r\n```xml\r\n    <Reference Include=\"ProjectB\">\r\n      <HintPath>..\\ProjectB\\bin\\$(Configuration)\\ProjectB.dll</HintPath>\r\n    </Reference>\r\n```\r\n2. Make sure to build in Release **only**.\r\n\r\n**Expected Behavior**:\r\nThe types in ProjectB to load correctly.\r\n\r\n**Actual Behavior**:\r\nThe types in ProjectB are unavailable.\r\n\r\nReplacing `$(Configuration)` with `Release` fixes the issue, which shows that `MSBuildWorkspace` is replacing `$(Configuration)` with `Debug` instead of `Release`.\r\n"},{"Id":"7261453426","Type":"IssuesEvent","CreatedAt":"2018-02-18T20:54:39","Actor":"jasminbe","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24922","RelatedDescription":"Opened issue \"I my doing my project in asp.net using c#\" (#24922) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n"},{"Id":"7260288039","Type":"PullRequestEvent","CreatedAt":"2018-02-18T07:41:39","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24921","RelatedDescription":"Opened pull request \"Local function script globals\" (#24921) at dotnet/roslyn","RelatedBody":"Fixes #23996. 🎉\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7262050610","Type":"PullRequestEvent","CreatedAt":"2018-02-19T02:43:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5406","RelatedDescription":"Opened pull request \"Fix Marshal.GetDelegateForFunctionPointer to throw exception when it …\" (#5406) at dotnet/corert","RelatedBody":"…cannot create the stub\r\n\r\n- Remove WINRT ifdef from GetDelegateForFunctionPointer to consistently throw MissingInteropDataException instead of returning null. Fixes #5162.\r\n- Move McgPInvokeData set of structure to System.Private.Interop since it is MCG specific\r\n- Rename a few things for consistency (e.g. PInvokeMarshal.GetPInvokeDelegateForStub did not make sense since it operates on user supplied function pointers, not stubs)"},{"Id":"7261775261","Type":"PullRequestEvent","CreatedAt":"2018-02-19T00:08:03","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5405","RelatedDescription":"Opened pull request \"WIP - Implement CkFinite opcode for WebAssembly\" (#5405) at dotnet/corert","RelatedBody":"Most of the borrowed cases from https://github.com/dotnet/coreclr/blob/9b0a9fd623/tests/src/JIT/IL_Conformance/Old/Base/ckfinite.il are working.\r\n\r\nWIP: For some reason, 0x7F7FFFC0 is running into trap branch with CkFinite32 in `CkFinite.il`, however it works until 0x7F7FFFBF. Investigating.\r\n\r\nCloses #4549"},{"Id":"7261729340","Type":"PullRequestEvent","CreatedAt":"2018-02-18T23:38:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5404","RelatedDescription":"Opened pull request \"Delete unnecessary MarshalImpl abstraction\" (#5404) at dotnet/corert","RelatedBody":"MarshalImpl is an extra layer without clear purpose. Also made MarshalAdapter to be included in CoreCLR/Mono builds only."},{"Id":"7261286757","Type":"PullRequestEvent","CreatedAt":"2018-02-18T19:16:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5403","RelatedDescription":"Merged pull request \"Typos\" (#5403) at dotnet/corert","RelatedBody":""},{"Id":"7261164718","Type":"PullRequestEvent","CreatedAt":"2018-02-18T18:04:02","Actor":"github-john-doe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5403","RelatedDescription":"Opened pull request \"Typos\" (#5403) at dotnet/corert","RelatedBody":""},{"Id":"7261039903","Type":"PullRequestEvent","CreatedAt":"2018-02-18T16:49:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5402","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5402) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7260942433","Type":"PullRequestEvent","CreatedAt":"2018-02-18T15:50:00","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5402","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5402) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7260361485","Type":"PullRequestEvent","CreatedAt":"2018-02-18T08:48:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5399","RelatedDescription":"Merged pull request \"Inlinable MulticastDelegate ==\" (#5399) at dotnet/corert","RelatedBody":"Port dotnet/coreclr#16431 to CoreRT"},{"Id":"7260361189","Type":"PullRequestEvent","CreatedAt":"2018-02-18T08:47:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5401","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5401) at dotnet/corert","RelatedBody":""},{"Id":"7259714999","Type":"PullRequestEvent","CreatedAt":"2018-02-17T23:02:16","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5401","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5401) at dotnet/corert","RelatedBody":""},{"Id":"7259714523","Type":"PullRequestEvent","CreatedAt":"2018-02-17T23:01:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5400","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5400) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7259691111","Type":"PullRequestEvent","CreatedAt":"2018-02-17T22:44:20","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5400","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5400) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7259411247","Type":"PullRequestEvent","CreatedAt":"2018-02-17T19:35:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5399","RelatedDescription":"Opened pull request \"Inlinable MulticastDelegate ==\" (#5399) at dotnet/corert","RelatedBody":"Port dotnet/coreclr#16431 to CoreRT"},{"Id":"7259276136","Type":"IssuesEvent","CreatedAt":"2018-02-17T18:08:28","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/2256","RelatedDescription":"Closed issue \"Marshal.GetExceptionForHR not setting HResult property\" (#2256) at dotnet/corert","RelatedBody":"`Interop\\MarshalAPI\\GetExceptionForHR` is failing.\r\n\r\n```csharp\r\n        public static Exception GetExceptionForHR(int errorCode)\r\n        {\r\n#if ENABLE_WINRT\r\n            // In the default case, return a COM exception (same behavior in desktop CLR)\r\n            return ExceptionHelpers.GetMappingExceptionForHR(\r\n                errorCode,\r\n                message: null,\r\n                createCOMException : true,\r\n                hasErrorInfo: false);\r\n#else\r\n            return new Exception(errorCode.ToString());\r\n#endif\r\n        }\r\n```"},{"Id":"7259275160","Type":"PullRequestEvent","CreatedAt":"2018-02-17T18:07:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5398","RelatedDescription":"Merged pull request \"Add missing Marshal.ThrowExceptionForHR for CoreRT\" (#5398) at dotnet/corert","RelatedBody":"CoreRT is using System.Runtime.Extensions.dll compiled for CoreCLR, not CoreRT. System.Runtime.Extensions depends on Marshal.ThrowExceptionForHR in CoreLib.\r\n\r\nAlso made Marshal.ThrowExceptionForHR to throw COMException instead PlatformNotSupportedException for CoreRT without COM interop support. It should eventually probably map the HResult to exception even without the COM support once the interop is factored better.\r\n\r\nFixes #5373"},{"Id":"7259275157","Type":"IssuesEvent","CreatedAt":"2018-02-17T18:07:52","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5373","RelatedDescription":"Closed issue \"MissingMethod: Marshal.ThrowExceptionForHR\" (#5373) at dotnet/corert","RelatedBody":"I'm exploring CoreRT and trying to compile one of our applications using CoreRT.\r\n\r\nWhen compiling using `dotnet publish -r win-x64 -c release`, I get the following warning:\r\n> EXEC : warning : Method `[System.Runtime.Extensions]System.Environment.ExpandEnvironmentVariablesCore(string)`\r\n will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: Void System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32) \r\n\r\nIn certain scenarios, this translates into a runtime exception:\r\n```\r\nUnhandled Exception: System.MissingMethodException: Method not found: 'Void System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32)'.\r\n   at Internal.Runtime.CompilerHelpers.ThrowHelpers.ThrowMissingMethodException(ExceptionStringID, String) + 0x8\r\n   at System.Environment.ExpandEnvironmentVariablesCore(String) + 0x14\r\n```\r\n\r\nSo it looks like `System.Runtime.InteropServices.Marshal.ThrowExceptionForHR` is missing.\r\n\r\nI'm not sure where to look next to actually implement this method, so any guidance would be welcome."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7258260122","Type":"PullRequestEvent","CreatedAt":"2018-02-17T04:37:01","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1947","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.6.0-rtm-4918 into sdk\" (#1947) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4918 into sdk release/2.1.1xx branch"},{"Id":"7257764180","Type":"PullRequestEvent","CreatedAt":"2018-02-16T23:40:39","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1972","RelatedDescription":"Merged pull request \"Updating machine affinity to 15.5\" (#1972) at dotnet/sdk","RelatedBody":""},{"Id":"7257611987","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:50:43","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1971","RelatedDescription":"Opened pull request \"Displaying a message whenever a build happens using a preview version of the CLI\" (#1971) at dotnet/sdk","RelatedBody":"Displaying a message whenever a build happens using a preview version of the CLI. Also replaced NETSdkError with NETSdkMessage. This message will be driven by a property set by the CLI."},{"Id":"7257504038","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:20:12","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1970","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.7.0-preview1-4927 into sdk\" (#1970) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4927 into sdk release/2.1.2xx branch"},{"Id":"7257461345","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:08:41","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1963","RelatedDescription":"Merged pull request \"Merge release/2.1 to master\" (#1963) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7257418503","Type":"PullRequestEvent","CreatedAt":"2018-02-16T21:57:37","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1969","RelatedDescription":"Opened pull request \"Enable the running of performance tests: SDK:release/2.0.0\" (#1969) at dotnet/sdk","RelatedBody":"Enable the running of performance tests: \r\n- commandLine: \"build.cmd -perf\"\r\n- optional properties: 'PerfIterations' 'PerfOutputDirectory' 'PerfCollectionType'\r\n- update RepoToolset version to a version that contains the performance targets\r\n- first draft 'perf.groovy'\r\n- rename: \"Microsoft.NET.Perf.Tests\" to \"Microsoft.NET.PerformanceTests\"\r\n\r\n@DrewScoggins"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"964556484267868162","CreatedAt":"2018-02-16T17:46:01+00:00","UserScreenname":"dotnet","Text":"How can #VisualStudio help you get started building #dotNET apps in #Azure? Join @PaulYuki99 &amp; @andrewBrianHall at… https://t.co/Sws9Apkm6t","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":17,"FavoriteCount":13,"RawContent":null},{"Id":"963791622948388870","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/icP5AqPRuB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":44,"RawContent":null},{"Id":"963413986954895360","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/l9RlPrj5Ep","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"963128572595519489","CreatedAt":"2018-02-12T19:12:00+00:00","UserScreenname":"dotnet","Text":"You can run your application anywhere with .NET Core – join @coolsch as he talks about .NET in 2018 at… https://t.co/0sSc3B7yOQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"963083274636554240","CreatedAt":"2018-02-12T16:12:00+00:00","UserScreenname":"dotnet","Text":"Update your existing .NET application to take advantage of new features in Windows Forms and WPF with @csharpfritz… https://t.co/yjqbIthkKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"961657885137698816","CreatedAt":"2018-02-08T17:48:01+00:00","UserScreenname":"dotnet","Text":"Tomorrow is NOW! @DEVintersection Take a deep dive with the Microsoft’s AI team into machine learning, predictive a… https://t.co/5AcI4VRNyG","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":22,"FavoriteCount":16,"RawContent":null},{"Id":"961596291942961154","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"dotnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/kWer0gYtOp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null},{"Id":"961382608914518016","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/dMJ5QcKEcp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null},{"Id":"960930092372381696","CreatedAt":"2018-02-06T17:36:01+00:00","UserScreenname":"dotnet","Text":"Register now for @DEVintersection for a workshop package and go home with an awesome piece of hardware Xbox One X,… https://t.co/PqoYqNI5Ga","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-02-19T05:30:18.7053076Z","RunDurationInMilliseconds":7448}