{"Data":{"Blog":{"FeedItems":[{"Title":"Blazor 0.8.0 experimental release now available","PublishedOn":"2019-02-05T19:30:23+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Blazor 0.8.0 is now available! This release updates Blazor to use Razor Components in .NET Core 3.0 and adds some critical bug fixes. Get Blazor 0.8.0 To get started with Blazor 0.8.0 install the...","Href":"https://blogs.msdn.microsoft.com/webdev/2019/02/05/blazor-0-8-0-experimental-release-now-available/","RawContent":null},{"Title":"Blazor 0.7.0 experimental release now available","PublishedOn":"2018-11-15T18:30:09+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Blazor 0.7.0 is now available! This release focuses on enabling component coordination across ancestor-descendent relationships. We&#039;ve also added some improvements to the debugging experience....","Href":"https://blogs.msdn.microsoft.com/webdev/2018/11/15/blazor-0-7-0-experimental-release-now-available/","RawContent":null}],"ResultType":"Feed"},"GitHubIssues":{"Issues":[{"Id":"407385560","IsPullRequest":false,"CreatedAt":"2019-02-06T21:23:12","Actor":"thainbreese","Number":"1782","RawContent":null,"Title":"How to make child component to be rendered in parent component?","State":"closed","Body":"Both of the parent and child component use the same int array object.\r\n\r\nIf I change the array in the parent component, the child component has to be rendered again.\r\n\r\nHow can I do this?\r\n\r\nI was tried to bind the object to child component, however it said that cannot bind array object.","Url":"https://github.com/aspnet/Blazor/issues/1782","RelatedDescription":"Closed issue \"How to make child component to be rendered in parent component?\" (#1782)"},{"Id":"406100017","IsPullRequest":false,"CreatedAt":"2019-02-06T21:22:28","Actor":"TomKuhn","Number":"1779","RawContent":null,"Title":"Blazor template samples don't start up on my win10 desktop PC","State":"closed","Body":"I've installed visual studio 2017 version 15.9.6\r\nI've installed the blazor language services extension 15.8.31590\r\nI've installed Microsoft .NET Core SDK 2.1.503 x64\r\nI've installed Microsoft .NET Core SDK 2.1.600 - preview x64\r\nI've installed Microsoft .NET Core SDK 2.2.103 x64\r\nI've installed Microsoft .NET Core SDK 3.0.100 - preview (x64)\r\n\r\nI can create a new Blazor ASP.NET Core web app in Visual Studio 2017. It builds.\r\n\r\nWhen I run it, it exits immediately without even hitting \"main\"\r\n\r\nI see a lot of dll's loading in the output window:\r\n\r\n'dotnet.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0-preview-27324-5\\System.Dynamic.Runtime.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n\r\nWhy it it loading 3.0.0 dll's when .Net Core 3 is not even supported in vs 2017? Do I need to update IISExpress?\r\n\r\n\r\nUpdate: \"dotnet run\" in the project folder *works* and blazor is confirmed to be loading dll's in the browser, it's just F5 through VS which is using IISExpress is not working\r\n","Url":"https://github.com/aspnet/Blazor/issues/1779","RelatedDescription":"Closed issue \"Blazor template samples don't start up on my win10 desktop PC\" (#1779)"},{"Id":"407269262","IsPullRequest":false,"CreatedAt":"2019-02-06T14:57:43","Actor":"henrikmbach","Number":"1781","RawContent":null,"Title":"Unable to run blazor app - get 502.5 error (Blazor 0.8.0)","State":"closed","Body":"VS 2019 Preview 2.2\r\nBlazor 0.8.0\r\n\r\nI get this error in my browser:\r\n\"HTTP Error 502.5 - Process Failure\"\r\n\r\n\"dotnet --info\" on command line gives me:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n\r\nThere is no global.json that I can delete from my project (it fixed the problem I had on an earlier version of Blazor).\r\n\r\nIn the \"New ASP.NET Core Web Application\" dialog I have selected \"Blazor\" from the list of templates (not \"Razor Components\" as described in the getting started thing on the Blazor homepage). Ctrl-F5 gives me the above error in my browser.\r\n\r\nNB! If I select \"Razor Components\" instead of \"Blazor\" described above, Ctrl-F5 works fine. So it appears that the option \"Blazor\" is broken. \r\n","Url":"https://github.com/aspnet/Blazor/issues/1781","RelatedDescription":"Closed issue \"Unable to run blazor app - get 502.5 error (Blazor 0.8.0)\" (#1781)"},{"Id":"407231015","IsPullRequest":false,"CreatedAt":"2019-02-06T13:27:26","Actor":"thainbreese","Number":"1780","RawContent":null,"Title":"HttpClient inject isn't working in Blazor 0.8","State":"closed","Body":"Hi\r\n\r\nI have created a new blazor component and tried to call get data from json file.\r\n\r\n```\r\n@function {\r\n        protected override async Task OnInitAsync()\r\n        {\r\n           data = await Http.GetJsonAsync<GridItem[]>(\"sample-data/data.json\");\r\n        }\r\n}\r\n```\r\n\r\nAnd got this error:\r\n\r\n```\r\nUncaught (in promise) Error: System.InvalidOperationException: Cannot provide a value for property 'Http' on type 'BlazorGrid.App.Components.GridComponent'. There is no registered service of type 'System.Net.Http.HttpClient'.\r\n   at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously(String assemblyName, String methodIdentifier, Object targetInstance, String argsJson)\r\n   at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke(String callId, String assemblyName, String methodIdentifier, Int64 dotNetObjectId, String argsJson)\r\n    at endInvokeDotNetFromJS (components.server.js:23)\r\n    at components.server.js:23\r\n    at new Promise (<anonymous>)\r\n    at e.beginInvokeJSFromDotNet (components.server.js:23)\r\n    at components.server.js:16\r\n    at Array.forEach (<anonymous>)\r\n    at e.invokeClientMethod (components.server.js:16)\r\n    at e.processIncomingData (components.server.js:16)\r\n    at e.connection.onreceive (components.server.js:16)\r\n    at WebSocket.i.onmessage (components.server.js:16)\r\n```\r\n\r\nWhat's wrong here?\r\n\r\nThis is working in Blazor 0.7, but not working in Blazor 0.8","Url":"https://github.com/aspnet/Blazor/issues/1780","RelatedDescription":"Closed issue \"HttpClient inject isn't working in Blazor 0.8\" (#1780)"},{"Id":"403101806","IsPullRequest":true,"CreatedAt":"2019-01-25T10:54:39","Actor":"SteveSandersonMS","Number":"1778","RawContent":null,"Title":"Stop building jsinterop, as it's now done by aspnet/extensions instead","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1778","RelatedDescription":"Closed or merged PR \"Stop building jsinterop, as it's now done by aspnet/extensions instead\" (#1778)"},{"Id":"403093728","IsPullRequest":true,"CreatedAt":"2019-01-25T10:28:07","Actor":"SteveSandersonMS","Number":"1777","RawContent":null,"Title":"Upgrade Mono for 0.8.0","State":"closed","Body":"Upgrades to:\r\n\r\n* Mono 80bc0069e4\r\n* Mono linker 78804e45dc\r\n\r\n... as recommended by @lewing","Url":"https://github.com/aspnet/Blazor/pull/1777","RelatedDescription":"Closed or merged PR \"Upgrade Mono for 0.8.0\" (#1777)"},{"Id":"400375049","IsPullRequest":false,"CreatedAt":"2019-01-22T18:52:10","Actor":"RodDaSilva","Number":"1776","RawContent":null,"Title":"Blazor has case sensitive URLs when hosted in a Child Directory","State":"closed","Body":"(NOTE:  this report is in the context of \"server-side\" Blazor app hosting)\r\n\r\nIt is possible to host Blazor in a child directory by:\r\n\r\n1)  Adding an app.Map() in the Startup.Configure() method of the host:\r\n\r\n  **app.Map(\"/dashboard\", child => { child.UseServerSideBlazor<DiskBounty.Dashboard.Startup>(); });**\r\n\r\nand \r\n\r\n2) Changing the base href in the index.html of the Blazor App:\r\n\r\n   **base hef=\"/dashboard/\"** \r\n\r\nHowever, if you do this you can only use the casing of the base href to access your Blazor pages.  For example **/dashboard/counter** and **/dashboard/Counter** will work but **/Dashboard/counter** will not.   That is you must always specify 'dashboard' (in this example) within the URL in lower case.  This is a behavior difference to when the Blazor app is hosted in the root directory, where all urls are case _insensitive_. \r\n\r\nThe error you get is:\r\n\r\n**warn: Microsoft.AspNetCore.Blazor.Server.BlazorHub[0]\r\n      Unhandled Server-Side exception\r\nSystem.AggregateException: One or more errors occurred. (Error: No element is currently associated with component 1) ---> Microsoft.AspNetCore.Blazor.Browser.Rendering.RemoteRendererException: Error: No element is currently associated with component 1\r\n   --- End of inner exception stack trace ---**","Url":"https://github.com/aspnet/Blazor/issues/1776","RelatedDescription":"Closed issue \"Blazor has case sensitive URLs when hosted in a Child Directory\" (#1776)"},{"Id":"400189518","IsPullRequest":false,"CreatedAt":"2019-01-17T20:18:27","Actor":"christoph68","Number":"1775","RawContent":null,"Title":"JSRuntime should have <JavascriptRef>","State":"closed","Body":"It would be great to have something like JavascriptRef.\r\n\r\nOften interop code is awkward because no references to JS classes are possible. There needs to be a static function that does then identify the instance to be used/called.\r\n\r\na reference could be obtained like:\r\nJavascriptRef jsRef =JSRuntime.Current.GetReference(\"JSFuncGet\", args);\r\n\r\nand then re-used:\r\nJSRuntime.Current.InvokeAsync<string>(jsRef , \"JSFuncCall\", args)\r\n\r\nIt seems that should be possible to achieve? \r\nIt surely would ease build wrappers around existing JS libs/components.","Url":"https://github.com/aspnet/Blazor/issues/1775","RelatedDescription":"Closed issue \"JSRuntime should have <JavascriptRef>\" (#1775)"},{"Id":"395821282","IsPullRequest":false,"CreatedAt":"2019-01-04T08:02:05","Actor":"DharmarajPandi","Number":"1774","RawContent":null,"Title":"is it possible to use sqlite with blazer?","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1774","RelatedDescription":"Closed issue \"is it possible to use sqlite with blazer?\" (#1774)"},{"Id":"394784236","IsPullRequest":false,"CreatedAt":"2018-12-29T11:57:47","Actor":"LukeTOBrien","Number":"1772","RawContent":null,"Title":"HTTP - Configure between Fetch and XHR","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1772","RelatedDescription":"Closed issue \"HTTP - Configure between Fetch and XHR\" (#1772)"},{"Id":"391778440","IsPullRequest":false,"CreatedAt":"2018-12-17T16:11:05","Actor":"Apollo3zehn","Number":"1769","RawContent":null,"Title":"Error: Cannot write embedded resource from assembly 'Blazor.Extensions.SignalR.JS'","State":"closed","Body":"Edit: Sorry, I noticed too late that also the issues should be created in the new repo. I will create a new one [here](https://github.com/aspnet/AspNetCore).\r\n\r\nHi, \r\n\r\nI am just setting up a project with ASP.NET as server and Blazor as client. I also use a `Directory.Build.props` file to redirect `bin` and `obj` folders into artifacts folder. This redirection causes the following error:\r\n\r\nCannot write embedded resource from assembly 'Blazor.Extensions.SignalR.JS' to \r\nC:\\Users\\wilvin\\Desktop\\IBOW\\artifacts\\obj\\xx\\Debug\\netstandard2.0\\blazor\\_content\\Blazor.Extensions.SignalR.JS because it is outside the expected directory\r\nC:\\Users\\wilvin\\Desktop\\IBOW\\build\\..\\artifacts\\obj\\xx\\Debug\\netstandard2.0\\blazor\r\n\r\nThe difference is: `IBOW\\build\\..\\artifacts` vs `IBOW\\artifacts`, which is the same path. If I normalize the path with msbuild first, there is no problem. Example:\r\n\r\n```\r\n<ArtifactsPath>[MSBuild]::NormalizePath($(MSBuildThisFileDirectory)../artifacts)</ArtifactsPath>\r\n\r\n<BaseIntermediateOutputPath>$(ArtifactsPath)/obj/$(MSBuildProjectName)</BaseIntermediateOutputPath>\r\n<IntermediateOutputPath>$(BaseIntermediateOutputPath)/$(Configuration)</IntermediateOutputPath>\r\n<OutputPath>$(ArtifactsPath)/bin/$(MSBuildProjectName)/$(Configuration)</OutputPath>\r\n```\r\n\r\nI think the best way to solve it in general is if [this](https://github.com/aspnet/AspNetCore/blob/master/src/Components/src/Microsoft.AspNetCore.Components.Build/Core/EmbeddedResources/EmbeddedResourcesProcessor.cs#L79-L82) code block is normalizing the paths before comparison, so that no msbuild normalization is required.","Url":"https://github.com/aspnet/Blazor/issues/1769","RelatedDescription":"Closed issue \"Error: Cannot write embedded resource from assembly 'Blazor.Extensions.SignalR.JS'\" (#1769)"},{"Id":"391269231","IsPullRequest":false,"CreatedAt":"2018-12-15T00:14:53","Actor":"ghofman2","Number":"1766","RawContent":null,"Title":"Multiple query string parameters resulting in Router failure","State":"closed","Body":"I have multiple working examples in my current project of retrieving 1 query parameter from the url however when trying to follow the same convention for multiple query string params, I'm receiving the following error in the chrome debugger console:\r\n\r\n`Error: System.InvalidOperationException: 'Router' cannot find any component with a route for '/confirmemail'.`\r\n\r\nmy page route is defined as:\r\n\r\n `@page \"/confirmemail/{Token}/{UserId}\"`\r\n\r\nand the `@functions{...}` section contains the following properties:\r\n\r\n`[Parameter]\r\nstring Token { get; set; }`\r\n\r\n`[Parameter]\r\nstring UserId { get; set; }`\r\n\r\nI am trying to retrieve the query string parameters for a url that looks like this:\r\n\r\n`http://localhost:50466/confirmemail?Token=SomeReallyLargeToken&UserId=SomeGuidUserId`\r\n\r\nIs this currently supported? I wasn't able to find a related issue or any documentation on achieving this (other than the docs on using a single query string parameter)","Url":"https://github.com/aspnet/Blazor/issues/1766","RelatedDescription":"Closed issue \"Multiple query string parameters resulting in Router failure\" (#1766)"},{"Id":"390272174","IsPullRequest":false,"CreatedAt":"2018-12-13T20:08:44","Actor":"cyberjaws","Number":"1762","RawContent":null,"Title":"Server Side System.IndexOutOfRangeException","State":"closed","Body":"System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.AssignEventHandlerId(RenderTreeFrame& frame)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForAttributeFrame(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendAttributeDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, Int32 componentId, ArrayRange`1 oldTree, ArrayRange`1 newTree)\r\n   at Microsoft.AspNetCore.Blazor.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment)\r\n   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.RenderInExistingBatch(RenderQueueEntry renderQueueEntry)\r\n   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue()\r\n   at Microsoft.AspNetCore.Blazor.Rendering.Renderer.AddToRenderQueue(Int32 componentId, RenderFragment renderFragment)\r\n   at Microsoft.AspNetCore.Blazor.Server.Circuits.CircuitSynchronizationContext.ExecuteSynchronously(TaskCompletionSource`1 completion, SendOrPostCallback d, Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Blazor.Server.Circuits.CircuitSynchronizationContext.ExecuteBackground(WorkItem item)\r\nException thrown: 'MessagePack.Internal.MessagePackDynamicObjectResolverException' in MessagePack.dll\r\nException thrown: 'System.TypeInitializationException' in MessagePack.dll\r\nException thrown: 'System.TypeInitializationException' in MessagePack.dll\r\nException thrown: 'System.TypeInitializationException' in MessagePack.dll\r\nException thrown: 'System.TypeInitializationException' in Microsoft.AspNetCore.SignalR.Protocols.MessagePack.dll\r\nException thrown: 'MessagePack.Internal.MessagePackDynamicObjectResolverException' in MessagePack.dll\r\nException thrown: 'System.IndexOutOfRangeException' in System.Private.CoreLib.dll\r\nException thrown: 'System.IndexOutOfRangeException' in System.Private.CoreLib.dll\r\nMicrosoft.AspNetCore.Blazor.Server.BlazorHub:Warning: Unhandled Server-Side exception","Url":"https://github.com/aspnet/Blazor/issues/1762","RelatedDescription":"Closed issue \"Server Side System.IndexOutOfRangeException\" (#1762)"},{"Id":"388558361","IsPullRequest":false,"CreatedAt":"2018-12-13T19:07:49","Actor":"mynkow","Number":"1755","RawContent":null,"Title":"Version for package `Microsoft.AspNetCore.Blazor.Cli` could not be resolved after installing VS2019 Preview","State":"closed","Body":"Today I have installed VS2019 Preview and when I tried to run my Blazor App using VS2017 the log under `ASP.NET Core Web Server` says => `Version for package 'Microsoft.AspNetCore.Blazor.Cli' could not be resolved.`\r\n\r\nCan I do do anything to make the Blazor app working again?\r\n\r\nEDIT:\r\nUnistalling VS2019 did not help.\r\n\r\nRecently I have updated to VS 15.9.3\r\n\r\nFile => New Project => Blazor template produces the same error\r\n\r\nReinstalling the `ASP.NET Core Blazor Language Services` did not help.","Url":"https://github.com/aspnet/Blazor/issues/1755","RelatedDescription":"Closed issue \"Version for package `Microsoft.AspNetCore.Blazor.Cli` could not be resolved after installing VS2019 Preview\" (#1755)"},{"Id":"389714965","IsPullRequest":true,"CreatedAt":"2018-12-11T11:23:43","Actor":"SteveSandersonMS","Number":"1760","RawContent":null,"Title":"Simplify how .Mono project depends on .BuildTools","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1760","RelatedDescription":"Closed or merged PR \"Simplify how .Mono project depends on .BuildTools\" (#1760)"},{"Id":"387469873","IsPullRequest":false,"CreatedAt":"2018-12-08T23:18:03","Actor":"UrielMhezzek","Number":"1747","RawContent":null,"Title":"Subclass-Component not use Parameter","State":"closed","Body":"Hello,\r\nI tried trying inheritance in Blazor. I found that the parameter does not seem to be inherited.\r\n\r\n**DialogComponent**\r\n```asp\r\n@inherits DialogComponentModel\r\n<div class=\"modal\" tabindex=\"-1\" style=\"display:block\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h3 class=\"modal-title\">@Title</h3>\r\n                <button type=\"button\" class=\"close\" onclick=\"@CloseModal\">\r\n                    <span aria-hidden=\"true\">X</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                @ChildContent\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button class=\"btn btn-block btn-info\" data-dismiss=\"modal\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n```\r\n\r\n\r\n**DialogComponentModel**\r\n```asp\r\n  public class DialogComponentModel : BlazorComponent\r\n    {\r\n        [Parameter]\r\n        internal string Title { get; set; }\r\n        [Parameter]\r\n        internal bool IsVisible { get; set; }\r\n\r\n\r\n        [Parameter]\r\n        internal Action<bool> IsVisibleChanged { get; set; }\r\n\r\n        [Parameter]\r\n        internal RenderFragment ChildContent { get; set; }\r\n\r\n        internal void CloseModal()\r\n        {\r\n            IsVisible = false;\r\n            IsVisibleChanged?.Invoke(IsVisible);\r\n        }\r\n    }\r\n```\r\n\r\n**SubClass**\r\n```asp\r\n@inherits SubClassModel\r\n@* These Title is shown*@\r\n<h3 class=\"modal-title\">@Title</h3>\r\n\r\n@* Title between in this component is not shown*@\r\n<DialogComponent>\r\n    <h4>Möchtest du wirklich den Eintrag löschen?</h4>\r\n</DialogComponent>\r\n```\r\n\r\n**SubClassModel**\r\n```asp\r\npublic class SubClassModel : DialogComponentModel\r\n    {\r\n\r\n\r\n\r\n    }\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1747","RelatedDescription":"Closed issue \"Subclass-Component not use Parameter\" (#1747)"},{"Id":"388957951","IsPullRequest":false,"CreatedAt":"2018-12-08T22:54:29","Actor":"UrielMhezzek","Number":"1757","RawContent":null,"Title":"Blazor SS - Get KeyPress and KeyUp-Events ","State":"closed","Body":"How can I use the javascript events document.keydown and document.keyup in my Blazor Serverside app?","Url":"https://github.com/aspnet/Blazor/issues/1757","RelatedDescription":"Closed issue \"Blazor SS - Get KeyPress and KeyUp-Events \" (#1757)"},{"Id":"387739543","IsPullRequest":false,"CreatedAt":"2018-12-06T06:04:17","Actor":"Yvahajatiana","Number":"1751","RawContent":null,"Title":"Page reload after onClick - if button inside <form> tag","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1751","RelatedDescription":"Closed issue \"Page reload after onClick - if button inside <form> tag\" (#1751)"},{"Id":"387631881","IsPullRequest":false,"CreatedAt":"2018-12-05T16:46:22","Actor":"MelbourneDeveloper","Number":"1748","RawContent":null,"Title":"USB Access","State":"closed","Body":"When do we get C# USB access over wasm?","Url":"https://github.com/aspnet/Blazor/issues/1748","RelatedDescription":"Closed issue \"USB Access\" (#1748)"},{"Id":"386836262","IsPullRequest":false,"CreatedAt":"2018-12-04T22:57:20","Actor":"chanan","Number":"1745","RawContent":null,"Title":"OnParametersSetAsync ?","State":"closed","Body":"Hi,\r\n\r\nIn issue #1252 @danroth27 mentioned that OnParametersSetAsync will be added, but it doesnt seem to be there in the V0.7.0. Is it going to be added soon?\r\n\r\nThanks,\r\nChanan","Url":"https://github.com/aspnet/Blazor/issues/1745","RelatedDescription":"Closed issue \"OnParametersSetAsync ?\" (#1745)"},{"Id":"385221261","IsPullRequest":true,"CreatedAt":"2018-11-29T10:25:15","Actor":"SteveSandersonMS","Number":"1734","RawContent":null,"Title":"Clean up after mondorepo migration","State":"closed","Body":"This PR removes all the migrated projects, so the Blazor repo builds only the following:\r\n\r\n * `Microsoft.AspNetCore.Blazor.Mono`, because we want to keep the Mono runtime binaries separate from the mondorepo.\r\n * `Microsoft.AspNetCore.Blazor.BuildTools`, because this is only needed when packaging the Mono runtime binaries above. It contains the `ILWipe` mechanism. This is not a shipping package.\r\n * JSInterop packages (`Microsoft.JSInterop` and `Mono.WebAssembly.Interop`), because they have to get built somewhere, and this repo is already set up to do that. Later on we might want to create a dedicated CI setup for the [JSInterop repo](https://github.com/dotnet/jsinterop).\r\n\r\nThis PR also updates the repo's `README.md` to explain this change.","Url":"https://github.com/aspnet/Blazor/pull/1734","RelatedDescription":"Closed or merged PR \"Clean up after mondorepo migration\" (#1734)"},{"Id":"384691978","IsPullRequest":false,"CreatedAt":"2018-11-28T11:50:16","Actor":"auc31","Number":"1731","RawContent":null,"Title":"Http.SendJsonAsync failed on 0.7","State":"closed","Body":"Hi \r\n\r\nwe try to follow this tutiorial\r\n\r\nhttps://ankitsharmablogs.com/asp-net-core-crud-using-blazor-and-entity-framework-core/\r\n\r\nfor CRUD operation on V0.3 of blazor Work perfect\r\n\r\nbut on our 0.7 version when we try to send data with\r\n\r\nawait Http.SendJsonAsync(HttpMethod.Post, \"/api/Employee/Create\", emp);\r\n\r\nthe data not send to api method create and the nav refresh the blazor app :( (stay on creation page)\r\n\r\nthanks for your help","Url":"https://github.com/aspnet/Blazor/issues/1731","RelatedDescription":"Closed issue \"Http.SendJsonAsync failed on 0.7\" (#1731)"},{"Id":"385112920","IsPullRequest":false,"CreatedAt":"2018-11-28T11:48:57","Actor":"Ceeten","Number":"1733","RawContent":null,"Title":"System.DllNotFoundException thrown when calling System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces","State":"closed","Body":"Good morning.\r\n\r\nI've been trying to experiment with Blazor a bit and try out some things that I would want the browser to be able to do for me.\r\n\r\nOne of those things is execute some stuff on the network by using the `System.Net.NetworkInformation` namespace.\r\nSo I've added the Nuget Package to the Blazor project and simply used it in the default scaffolded blazor project:\r\n```\r\n@using System.Net.NetworkInformation;\r\n@using System;\r\n\r\n\r\n@page \"/counter\"\r\n\r\n<h1>Counter</h1>\r\n\r\n<p>Current count: @currentCount</p>\r\n\r\n<button class=\"btn btn-primary\" onclick=\"@IncrementCount\">Click me</button>\r\n\r\n@functions {\r\n    int currentCount = 0;\r\n\r\n    void IncrementCount()\r\n    {\r\n        var test =  NetworkInterface.GetAllNetworkInterfaces();\r\n        System.Console.WriteLine(test);\r\n    }\r\n}\r\n```\r\nProblem is when I click the button, the next exception is thrown and I see this in the browser console:\r\n```\r\nblazor.webassembly.js:1 Uncaught (in promise) Error: System.TypeInitializationException: The type initializer for 'System.Net.NetworkInformation.SystemNetworkInterface' threw an exception. ---> System.DllNotFoundException: libc\r\n  at (wrapper managed-to-native) System.Platform.uname(intptr)\r\n  at System.Platform.CheckOS () <0x1de1250 + 0x00030> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Platform.get_IsMacOS () <0x1de1008 + 0x0000a> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.UnixNetworkInterfaceFactoryPal.Create () <0x1de08e8 + 0x00014> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.NetworkInterfaceFactoryPal.Create () <0x1de0458 + 0x00000> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.NetworkInterfaceFactory.Create () <0x1de0378 + 0x00000> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.SystemNetworkInterface..cctor () <0x1de0288 + 0x00000> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n   --- End of inner exception stack trace ---\r\n  at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously (System.String assemblyName, System.String methodIdentifier, System.Object targetInstance, System.String argsJson) <0x1d88a50 + 0x001bc> in <af36ed9192be4a95b907125ccf0c1e59>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke (System.String callId, System.String assemblyName, System.String methodIdentifier, System.Int64 dotNetObjectId, System.String argsJson) <0x1d84710 + 0x00088> in <af36ed9192be4a95b907125ccf0c1e59>:0 \r\n  at (wrapper managed-to-native) System.Platform.uname(intptr)\r\n  at System.Platform.CheckOS () <0x1de1250 + 0x00030> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Platform.get_IsMacOS () <0x1de1008 + 0x0000a> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.UnixNetworkInterfaceFactoryPal.Create () <0x1de08e8 + 0x00014> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.NetworkInterfaceFactoryPal.Create () <0x1de0458 + 0x00000> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.NetworkInterfaceFactory.Create () <0x1de0378 + 0x00000> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n  at System.Net.NetworkInformation.SystemNetworkInterface..cctor () <0x1de0288 + 0x00000> in <693d0b3e5dd34843b73a58a39499184e>:0 \r\n   --- End of inner exception stack trace ---\r\n  at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously (System.String assemblyName, System.String methodIdentifier, System.Object targetInstance, System.String argsJson) <0x1d88a50 + 0x001bc> in <af36ed9192be4a95b907125ccf0c1e59>:0 \r\n  at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke (System.String callId, System.String assemblyName, System.String methodIdentifier, System.Int64 dotNetObjectId, System.String argsJson) <0x1d84710 + 0x00088> in <af36ed9192be4a95b907125ccf0c1e59>:0 \r\n    at endInvokeDotNetFromJS (http://localhost:50480/_framework/blazor.webassembly.js:1:26867)\r\n    at Object.invokeJSFromDotNet (http://localhost:50480/_framework/blazor.webassembly.js:1:26288)\r\n    at _mono_wasm_invoke_js_marshalled (http://localhost:50480/_framework/wasm/mono.js:1:175302)\r\n    at wasm-function[1450]:935\r\n    at wasm-function[762]:25085\r\n    at wasm-function[762]:23853\r\n    at wasm-function[762]:23853\r\n    at wasm-function[762]:23853\r\n    at wasm-function[762]:24468\r\n    at wasm-function[762]:24468\r\n```\r\nI am running the latest VS (15.9.2) with the latest SDK on Windows. Anybody that can give me an Idea of what I'm doing wrong here ?","Url":"https://github.com/aspnet/Blazor/issues/1733","RelatedDescription":"Closed issue \"System.DllNotFoundException thrown when calling System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces\" (#1733)"},{"Id":"384667199","IsPullRequest":false,"CreatedAt":"2018-11-27T20:33:10","Actor":"StevenTCramer","Number":"1730","RawContent":null,"Title":"How to distinguish components","State":"closed","Body":"If one includes two different components in their application in different namespaces with the same name. \r\nPath/To/Firstone/SomeComponent.cshtml\r\nPath/To/AnotherOne/SomeComponent.cshtml\r\n\r\nAnd in MyLayout.cshtml I would like to use\r\n\r\n```\r\n<SomeComponent />  // From AnotherOne\r\n```\r\n\r\n  Blazor seems to find the first one.  And I don't know how to clarify the namespace.\r\n\r\nNor does it give me an ambiguous compile error. \r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1730","RelatedDescription":"Closed issue \"How to distinguish components\" (#1730)"},{"Id":"384502989","IsPullRequest":false,"CreatedAt":"2018-11-26T21:48:36","Actor":"Knudel","Number":"1728","RawContent":null,"Title":"Strange behavior with select","State":"closed","Body":"I have the next code in a server side blazor page:\r\n\r\n```\r\n@page \"/\"\r\n\r\n<select id=\"test\" bind=\"@selectedval\">\r\n    <option value='1'>1</option>\r\n    <option value='2'>2</option>\r\n    <option value='3'>3</option>\r\n    <option value='4'>4</option>\r\n</select>\r\n\r\n@functions\r\n{\r\n    [Parameter]\r\n    protected string selectedval { get; set; } = \"2\";\r\n}\r\n```\r\n\r\n\r\nWhy is the second value not selected at startup, the selected value is 1?\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1728","RelatedDescription":"Closed issue \"Strange behavior with select\" (#1728)"},{"Id":"384486539","IsPullRequest":true,"CreatedAt":"2018-11-26T21:47:46","Actor":"SteveSandersonMS","Number":"1727","RawContent":null,"Title":"Attempt to fix build flakiness using \"npm ci\"","State":"closed","Body":"The main complexity is that we need NPM 5.7.0+, hence having to ensure all the CI systems are using a recent-enough version of Node.","Url":"https://github.com/aspnet/Blazor/pull/1727","RelatedDescription":"Closed or merged PR \"Attempt to fix build flakiness using \"npm ci\"\" (#1727)"},{"Id":"384485397","IsPullRequest":false,"CreatedAt":"2018-11-26T19:59:22","Actor":"cyberjaws","Number":"1726","RawContent":null,"Title":"Server Side Blazor First Client Receiving Second Client's Requests","State":"closed","Body":"Server Side Blazor:\r\nCreate a data service that connects to RabbitMQ and register the data service as a singleton.\r\nConnect a client and register for a callback event from the data service.\r\nMake a request to the data service. Request gets sent over MQ. Method returns.\r\n...wait for x ms...\r\nResponse come back over RabbitMQ and fires an event in the data service.\r\nEvent fires in client 1, check the results against a clientId created at startup, fire a JSInterop method on the client to update an image if the clientId matches the Id in the result.\r\nWith one client connected, the image comes through no problems. \r\nWith a second client connected the image gets returned to the first client and the correct clientId / image combo doesn't make it to the second client.\r\nThoughts?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1726","RelatedDescription":"Closed issue \"Server Side Blazor First Client Receiving Second Client's Requests\" (#1726)"},{"Id":"384294149","IsPullRequest":true,"CreatedAt":"2018-11-26T18:52:10","Actor":"SteveSandersonMS","Number":"1725","RawContent":null,"Title":"Decouple migrating code from non-migrating code","State":"closed","Body":"This PR changes the code that will migrate into the mondorepo so that it only consumes the nonmigrating code (`Microsoft.AspNetCore.Blazor.Mono`, `Microsoft.AspNetCore.Blazor.BuildTools`, JSInterop) via package references and no longer assumes the presence of their source files.\r\n\r\nThe nonmigrating code will continue to be built and shipped from the Blazor repo.","Url":"https://github.com/aspnet/Blazor/pull/1725","RelatedDescription":"Closed or merged PR \"Decouple migrating code from non-migrating code\" (#1725)"},{"Id":"384096825","IsPullRequest":false,"CreatedAt":"2018-11-26T15:19:12","Actor":"mynkow","Number":"1724","RawContent":null,"Title":"VisualStudio command Edit.FormatDocument breaks the indention","State":"closed","Body":"When I am in VS and execute the command Edit.FormatDocument (CTRL+E,D) this happens= >\r\n\r\nhttps://gyazo.com/209c7bc8d065dcd7eef421f780e2682f","Url":"https://github.com/aspnet/Blazor/issues/1724","RelatedDescription":"Closed issue \"VisualStudio command Edit.FormatDocument breaks the indention\" (#1724)"},{"Id":"384074251","IsPullRequest":false,"CreatedAt":"2018-11-26T14:49:48","Actor":"AndreasTruetschel","Number":"1722","RawContent":null,"Title":"Return the created component from BrowserRenderer.AddComponent","State":"closed","Body":"I have a sceanrio that I need to render a `RenderFragment` into a given `<div>` element, provided by javascript. For this, I create a component to wrap my `RenderFragment` and render it via an instance of the `BrowserRenderer`. The problem is that I cannot pass the concrete `RenderFragment` to the component rendered by the `BrowserRenderer`. The easiest solution is to return the created component from the `AddComponent` method of the `BrowserRenderer`.\r\n\r\nThe concrete scenario is to draw arbitrary content into a leaflet div-icon.\r\n\r\nThis could also be used to pass the entry assembly into the router component without the workaround of the `App` component. \r\n\r\n```\r\nvar router = app.AddComponent<Router>(\"app\");\r\nrouter.EntryAssembly = Assembly.GetEntryAssembly();\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1722","RelatedDescription":"Closed issue \"Return the created component from BrowserRenderer.AddComponent\" (#1722)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-07T05:30:18.2335166Z","RunDurationInMilliseconds":1407}