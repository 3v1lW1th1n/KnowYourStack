{"Data":{"Blog":{"FeedItems":[{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8187578645","Type":"PullRequestEvent","CreatedAt":"2018-08-29T21:25:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2106","RelatedDescription":"Merged pull request \"Remove all traces of armeabi (ARMv5)\" (#2106) at xamarin/xamarin-android","RelatedBody":"Android NDK r17 dropped support for armeabi and any attempt to build projects\r\ntargetting this ABI fails with an error. In preparation for NDK r17 this commit\r\nremoves all the traces of armeabi from Xamarin.Android tree.\r\n\r\nIn order to prevent confusion, all the instances where we used `armeabi` but\r\nmeant `armeabi-v7a` have been renamed to the latter form."},{"Id":"8187089516","Type":"IssuesEvent","CreatedAt":"2018-08-29T19:48:52","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2115","RelatedDescription":"Closed issue \"Debugger keeps jumping back to Breakpoint\" (#2115) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Project: Android App (Xamarin)\r\n2. Select Navigation Drawer App\r\n3. Set a breakpoint on Line 32\r\n4. Debug the application on device or emulator\r\n5. Once the debugger breaks, scroll down to the bottom and hover the mouse over some of the variables in the OnNavigationItemSelected method.\r\n\r\nNotice how the debugger jumps back up to the top where the breakpoint is hit.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nDebugger should not jump back to the breakpoint while navigating.\r\n\r\n### Actual Behavior\r\n\r\nDebugger is jumping back to the breakpoint\r\n\r\n### Version Information\r\n\r\nVisual Studio 15.8.2\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8186924229","Type":"PullRequestEvent","CreatedAt":"2018-08-29T19:15:41","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2119","RelatedDescription":"Opened pull request \"Update emulator to the latest version, switch to API 28\" (#2119) at xamarin/xamarin-android","RelatedBody":"This commit updates the Android emulator to the latest version\r\navailable (`4969155` a.k.a. v27.3.10), switches its system image to API 28,\r\nmakes sure that the emulator is started from the `emulator` subdir of the\r\nAndroid SDK root (the binary in `tools` won't work anymore) and makes sure we\r\ndon't error out when we attempt to uninstall packages that don't exist in the\r\nAVD."},{"Id":"8186805370","Type":"PullRequestEvent","CreatedAt":"2018-08-29T18:52:43","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2118","RelatedDescription":"Opened pull request \" [mono-sdks] Use for cross-arm, cross-arm64, cross-x86, cross-x86_64, cross-arm-win, cross-arm64-win, cross-x86-win and cross-x86_64-win\" (#2118) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8186207798","Type":"PullRequestEvent","CreatedAt":"2018-08-29T17:00:07","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2117","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] missing error code in ResolveSdks\" (#2117) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1560\r\n\r\nIn a0d4317b4 we added the `XA5300` error code, but there were a few\r\nloose ends:\r\n- The `*Handler` methods in `ResolveSdks` are completely unused. We\r\n  should remove them.\r\n- `MonoAndroidHelper.RefreshAndroidSdk` should use the `XA5300` error\r\n  code.\r\n\r\nI also expanded upon the `xa5300.md` documentation a bit."},{"Id":"8185911306","Type":"PullRequestEvent","CreatedAt":"2018-08-29T16:07:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2105","RelatedDescription":"Merged pull request \"[Mono.Android] build and reference non-PCL Java.Interop\" (#2105) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.devdiv.io/667174\r\nContext: https://github.com/xamarin/java.interop/pull/360\r\n\r\nBuilding `Java.Interop` in a similar fashion as `Mono.Android.dll`:\r\n\r\n    <PropertyGroup>\r\n        <NoStdLib>true</NoStdLib>\r\n        <TargetFrameworkIdentifier>MonoAndroid</TargetFrameworkIdentifier>\r\n        <TargetFrameworkVersion>v1.0</TargetFrameworkVersion>\r\n        <TargetFrameworkRootPath>$(XAInstallPrefix)xbuild-framework</TargetFrameworkRootPath>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <Reference Include=\"mscorlib\">\r\n            <HintPath>$(XAInstallPrefix)xbuild-frameworks\\MonoAndroid\\v1.0\\mscorlib.dll</HintPath>\r\n            <Private>False</Private>\r\n        </Reference>\r\n        <Reference Include=\"System\">\r\n            <HintPath>$(XAInstallPrefix)xbuild-frameworks\\MonoAndroid\\v1.0\\System.dll</HintPath>\r\n            <Private>False</Private>\r\n        </Reference>\r\n        <Reference Include=\"System.Core\">\r\n            <HintPath>$(XAInstallPrefix)xbuild-frameworks\\MonoAndroid\\v1.0\\System.Core.dll</HintPath>\r\n            <Private>False</Private>\r\n        </Reference>\r\n    </ItemGroup>\r\n\r\nDecreases the assemblies referenced in a \"Hello World\" Xamarin.Android\r\nproject dramatically:\r\n\r\n    Adding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n        Adding assembly reference for System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.ComponentModel.Composition, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, recursively...\r\n        Adding assembly reference for System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Collections.Concurrent, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Linq.Expressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Reflection.Primitives, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Dynamic.Runtime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.ObjectModel, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Linq, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Runtime.InteropServices, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Runtime.Extensions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n        Adding assembly reference for System.Reflection.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n    Adding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nBecomes:\r\n\r\n    Adding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n    Adding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nAnd the savings in build times for \"Hello World\", this is the\r\n`Rebuild` target:\r\n- `Debug` + PCL - 8.424s\r\n- `Release` + PCL - 13.651s\r\n- `Debug` + *not* PCL - 4.258s\r\n- `Release` + *not* PCL - 9.487s\r\n\r\n*NOTE: this was a master/Debug build of Xamarin.Android*\r\n\r\nThe `Java.Interop.dll` in\r\n`lib\\xamarin.android\\xbuild\\Xamarin\\Android\\` remains unchanged, as\r\nreferenced by `Xamarin.Android.Build.Tasks`.\r\n\r\nThe modified `Java.Interop.dll` in\r\n`lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\` will look\r\nsomething like:\r\n\r\n```csharp\r\n// bin\\Debug\\lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\Java.Interop.dll\r\n// Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065\r\n\r\n[assembly: TargetFramework(\"MonoAndroid,Version=v1.0\")]\r\n```\r\n\r\nChanges:\r\n- `$(MSBuildThisFile)` should be an input of `_BuildJavaInterop`\r\n- Set `$(JavaInteropProfile)` and various other properties so a\r\n  non-PCL version of `Java.Interop.dll` is built\r\n- Make sure to copy `Java.Interop.dll` from the `DebugNet45` directory\r\n- Bump to java.interop/master/659711c\r\n\r\nhttps://github.com/xamarin/java.interop/compare/893562c...659711c"},{"Id":"8185688896","Type":"PullRequestEvent","CreatedAt":"2018-08-29T15:32:18","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2116","RelatedDescription":"Opened pull request \"Make {x,n}unit runner logging level configurable from command line\" (#2116) at xamarin/xamarin-android","RelatedBody":"The LogWriter class used by both xUnit and NUnit test runners has configurable\r\nminimum logging level which defaults to `Info`. It is not possible to configure\r\nthe level from command line, e.g. when starting the instrumentation. This commit\r\nfixes the problem by introducing the `loglevel` parameter which can be sent to\r\nthe instrumentation using this syntax:\r\n\r\n     -e \"loglevel info\"\r\n\r\nThe acceptable log level values are (the strings are case-insensitive):\r\n\r\n   * Wtf\r\n   * Error\r\n   * Warning\r\n   * Info\r\n   * Debug\r\n   * Verbose\r\n\r\nThe default in the logger class is reasonable `Info`, however this commit\r\nchanges the value used by the `RunTestApks` target to `Verbose` in order to try\r\nto figure out why the tests are failing on us when run on PR builders."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8188179945","Type":"IssuesEvent","CreatedAt":"2018-08-30T00:16:44","Actor":"wammy21","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3446","RelatedDescription":"Closed issue \"Bug 56287 - Page must not already have a parent exception\" (#3446) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=56287\r\n\r\nIt seems when pushing a new page of the same type as an already existing page causes this exception to be thrown. The best detail I was able to find on this was the bug referenced in the title and this forum post: \r\n\r\nhttps://forums.xamarin.com/discussion/27411/problem-with-navigation\r\n\r\nMy app has Contacts, these contacts can have child-contacts, so opening a child-contact from a parent contact page basically opens a new Contact page/LayoutView with a different Contact Model passed to the constructor. \r\n\r\n### Steps to Reproduce\r\n\r\n1.  Setup a root Navigation Page, inside a master/detail page. \r\n2. Create 3 pages ex: ListPage, LayoutView, ContactActivity\r\n3. Navigate as such: \r\n`Dashboard -> new NavigationPage(ListPage) -> PushAsync(LayoutView) -> PushAsync(LayoutView) -> PopAsync(LayoutView) -> PushAsync(ContactActivity)`\r\nOr:\r\n`Dashboard -> new NavigationPage(ListPage) -> PushAsync(LayoutView) -> PushAsync(LayoutView) -> PushAsync(ContactActivity)`\r\nOr (sometimes):\r\n`Dashboard -> new NavigationPage(ListPage) -> PushAsync(LayoutView) -> PushAsync(LayoutView) -> PopAsync(LayoutView)  -> PopAsync(LayoutView) `\r\n\r\n### Expected Behavior\r\n\r\nNavigate between pages without an exception being thrown.\r\n\r\n### Actual Behavior\r\n\r\nI am able to navigate to the page correctly, but when navigating back or going to ANY other page I get an exception: \r\n\r\n`\r\nSystem.InvalidOperationException: Page must not already have a parent.\r\n  at Xamarin.Forms.Internals.NavigationProxy.PushAsync (Xamarin.Forms.Page root, System.Boolean animated) [0x00008] in D:\\a\\1\\s\\Xamarin.Forms.Core\\NavigationProxy.cs:110 \r\n  at App.Pages.Object.LayoutView+<Layout_OpenPage>d__15.MoveNext () [0x000ae] in C:\\Users\\wammy\\Documents\\mobile-app\\App.Mobile\\Pages\\Object\\LayoutView.cs:148 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.i\r\nOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018 \r\n  at UIKit.UIKitSynchronizationContext+<>c__DisplayClass1_0.<Post>b__0 () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIKitSynchronizationContext.cs:24 \r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/Foundation/NSAction.cs:125 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x0002c] in /Library/Frameworks/Xamari\r\nn.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at App.iOS.Application.Main (System.String[] args) [0x00001] in C:\\Users\\wammy\\Documents\\mobile-app\\iOS\\Main.cs:12 \r\n2018-07-30 19:51:45.290 MobileApp.iOS[37256:10647880] Unhandled managed exception:\r\nPage must not already have a parent. (System.InvalidOperationException)\r\n  at Xamarin.Forms.Internals.NavigationProxy.PushAsync (Xamarin.Forms.Page root, System.Boolean animated) [0x00008] in D:\\a\\1\\s\\Xamarin.Forms.Core\\NavigationProxy.cs:110 \r\n  at App.Pages.Object.LayoutView+<Layout_OpenPage>d__15.MoveNext () [0x000ae] in C:\\Users\\wammy\\Documents\\mobile-app\\App.Mobile\\Pages\\Object\\LayoutView.cs:148 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionse\r\nrvicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018 \r\n  at UIKit.UIKitSynchronizationContext+<>c__DisplayClass1_0.<Post>b__0 () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIKitSynchronizationContext.cs:24 \r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/Foundation/NSAction.cs:125 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions\r\n/11.12.0.4/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at App.iOS.Application.Main (System.String[] args) [0x00001] in C:\\Users\\wammy\\Documents\\mobile-app\\iOS\\Main.cs:12 \r\n`\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.637273\r\n- Last known good version: n/a\r\n- IDE: VS Community 15.7.5\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.4\r\n  - Android: 8.1/27\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages:\r\n- Affected Devices: iPhone 6, LG v10\r\n"},{"Id":"8187333243","Type":"PullRequestEvent","CreatedAt":"2018-08-29T20:36:11","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3592","RelatedDescription":"Merged pull request \"Fix partially  #3585\" (#3592) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nMake webkit-sharp.dll.config cross-platform and update webkit-sharp with a new version that includes missing signal bindings\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes partially #3585\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Gtk \r\n\r\n### PR Checklist ###\r\n\r\n- [n] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [y] Rebased on top of the target branch at time of PR\r\n- [y] Changes adhere to coding standard\r\n"},{"Id":"8186733141","Type":"IssuesEvent","CreatedAt":"2018-08-29T18:38:56","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3679","RelatedDescription":"Opened issue \"[iOS} TitleView on iOS is center align \" (#3679) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhile investigating issue #3644  I found that the rendering is not consistent what user would expect.  I m not able to align the `TitleView`content to the left. \r\n\r\n### Steps to Reproduce\r\n\r\nRun this code as set `tabbedPage` as `MainPage.\r\n\r\n```\r\nvar tabbedPage = new TabbedPage();\r\n\r\nvar grid = new Grid\r\n{\r\n\t\tBackgroundColor = Color.Gray,\r\n\t\tHorizontalOptions = LayoutOptions.Fill,\r\n\t\tVerticalOptions = LayoutOptions.FillAndExpand\r\n};\r\ngrid.RowDefinitions.Add(new RowDefinition());\r\ngrid.RowDefinitions.Add(new RowDefinition());\r\n\r\nvar label = new Label { Text = \"hello\", HorizontalOptions = LayoutOptions.Start, BackgroundColor = Color.Yellow };\r\nvar label2 = new Label { Text = \"hello 2\", HorizontalOptions = LayoutOptions.Start, BackgroundColor = Color.Yellow };\r\ngrid.Children.Add(label);\r\ngrid.Children.Add(label2);\r\nGrid.SetRow(label2, 1);\r\nvar header = new ContentView\r\n{\r\n    BackgroundColor = Color.Pink,\r\n    HorizontalOptions = LayoutOptions.Fill,\r\n    Content = grid\r\n};\r\nvar page = new ContentPage\r\n{\r\n    Content = new Entry { Text = \"Normal entry\" }\r\n};\r\n\r\nvar navigationPage = new NavigationPage(page);\r\nNavigationPage.SetTitleView(page, header);\r\n\r\ntabbedPage.Children.Add(navigationPage);\r\n```\r\n### Expected Behavior\r\n\r\nShould be able to align the labels to the left \r\n\r\n### Actual Behavior\r\n\r\nLabels and grid status aligned to on center\r\n\r\n### Basic Information\r\n\r\n- Version with issue: master 11bbc6abc95a239ffd5d6b7556c2b3697264750c\r\n\r\n### Screenshots\r\n\r\n![simulator screen shot - iphone 5s - 2018-08-29 at 19 23 01](https://user-images.githubusercontent.com/1235097/44807648-00c95600-abc2-11e8-8fb2-f6d8baee6a71.png)\r\n![screenshot_1535566912](https://user-images.githubusercontent.com/1235097/44807649-00c95600-abc2-11e8-8625-2eb86073c9a2.png)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8188566522","Type":"PullRequestEvent","CreatedAt":"2018-08-30T02:40:00","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4729","RelatedDescription":"Opened pull request \"[UIKit] UIGestureRecognizer, support a way of unsubscribing without creating cycles\" (#4729) at xamarin/xamarin-macios","RelatedBody":"This now tracks all the uses of AddTarget with delegates by recording\r\nthe Token/Selector pair and making `Dispose()` release all the linkage\r\nas well as providing an enumerator that can be used to get all the\r\nregistered Action handlers - this can then be used with .First() and\r\nthen passed to `RemoveTarget`.\r\n\r\nThis addresses https://github.com/xamarin/xamarin-macios/issues/4190\r\n\r\nThis initial patch is here for discussion of the approach, want to\r\nreview and test this before we merge."},{"Id":"8187616902","Type":"PullRequestEvent","CreatedAt":"2018-08-29T21:33:10","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4728","RelatedDescription":"Merged pull request \"[Security] Fix some of the new availability attrs.\" (#4728) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8187270391","Type":"IssuesEvent","CreatedAt":"2018-08-29T20:23:56","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4441","RelatedDescription":"Closed issue \"[generator] Binding with return value of Class [] do not do the right thing\" (#4441) at xamarin/xamarin-macios","RelatedBody":"This was found during binding Foundation in xcode 10:\r\n\r\nhttps://github.com/xamarin/xamarin-macios/pull/4375\r\n\r\nWith this failure\r\n\r\nhttps://gist.github.com/chamons/8225bfd531712ed02ae26373272d09c9\r\n\r\nI'm going to comment out those bindings for now until this is fixed.\r\n\r\nSee NSSecureUnarchiveFromDataTransformer and DataTransformer_AllowedTopLevelTypes_WrapperTests."},{"Id":"8187268806","Type":"PullRequestEvent","CreatedAt":"2018-08-29T20:23:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4726","RelatedDescription":"Merged pull request \"[ObjCRuntime] Add missing .ctor to 'Class'\" (#4726) at xamarin/xamarin-macios","RelatedBody":"- Fixes #4441: [generator] Binding with return value of Class [] do not do the right thing\n  (https://github.com/xamarin/xamarin-macios/issues/4441)\n- Turns out the logic to put INativeObjects into NSArrays was already in place. We simply needed to add the missing (IntPtr handle, bool owns) overload to `Class`.\n- Uncommented AppKit `registeredImageRepClasses` since it was using `Class []`. Tested locally and it works fine.\n- Reimplemented `Foundation`'s `NSSecureUnarchiveFromDataTransformer` and its test which were also using `Class []`."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":39,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":76,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":33,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":48,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":174,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":57,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":262,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null}]}},"RunOn":"2018-08-30T05:30:50.5095981Z","RunDurationInMilliseconds":4056}