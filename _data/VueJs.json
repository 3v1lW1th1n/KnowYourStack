{"Data":{"Vue":{"Events":[{"Id":"7285598129","Type":"IssuesEvent","CreatedAt":"2018-02-23T05:21:53","Actor":"dsanders11","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7701","RelatedDescription":"Opened issue \"Extra Blank Space In Rendered Template\" (#7701) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/aoxo2rod/7/](https://jsfiddle.net/aoxo2rod/7/)\r\n\r\n### Steps to reproduce\r\nRun the JSFiddle\r\n\r\n### What is expected?\r\nThe background should be green, styled by `ul:empty`, as the children of `ul` are all conditionally not rendered: empty `v-for` and `v-if` that evaluate to false.\r\n\r\n### What is actually happening?\r\nThe background is red, `ul:empty` is not used because there is a blank space inside the `ul` tags, which CSS doesn't consider to be `:empty`.\r\n\r\n---\r\nThe multiple children elements are important, a single `li` element with `v-if=\"false\"` will produce the correct result. It appears Vue is putting a blank space between the elements, even if they are conditionally not rendered (appearing as `<!---->` instead). It's worth noting that if you manually remove the extra spaces using developer tools, everything looks as expected, `<!---->` does not affect `:empty`.\r\n\r\nFurthermore, this only reproduces if there is a newline between the elements. Modifying the provided JSFiddle to only have the two `li` with `v-if=\"false\"` will produce the correct result if there's no newline between them. So view seems to be turning the newline between the elements into a single space, which is causing the issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7285550970","Type":"IssuesEvent","CreatedAt":"2018-02-23T05:01:18","Actor":"slisznia","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7700","RelatedDescription":"Opened issue \"adding reactive array to state\" (#7700) at vuejs/vue","RelatedBody":"My component would like to add a new reactive array to the SST (vuex). I tried in beforeCreate hook, but the added array is not reactive, it's a plain one.\r\n\r\nI can add \"plain\" fields in beforeCreate to my SST and they are all reactive, but the dynamically created array in the SST is not.\r\n\r\nNote that this is not the same as updating an existing array in the SST - I'm aware of the \"[Array Change Detection](https://vuejs.org/v2/guide/list.html#Array-Change-Detection)\" gotchas. I'm trying to dynamically add an entirely new Array to the SST and make it reactive."},{"Id":"7285528116","Type":"IssuesEvent","CreatedAt":"2018-02-23T04:51:07","Actor":"DMQ","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/7698","RelatedDescription":"Closed issue \"请问自定义指令支持绑定函数不自动执行吗？\" (#7698) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\n<button v:test=\"test.bind(this, 'something')\"></button>\r\n\r\n=>\r\n\r\n<button v:test=\"test('something')\"></button>\r\n\r\n### What does the proposed API look like?\r\n<button v:test=\"test('something')\"></button>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7285527754","Type":"IssuesEvent","CreatedAt":"2018-02-23T04:50:57","Actor":"DMQ","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7699","RelatedDescription":"Opened issue \"请问自定义指令支持绑定函数不自动执行吗？\" (#7699) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\n```\r\n<button v:test=\"test.bind(this, 'something')\"></button>\r\n\r\n-->\r\n\r\n<button v:test=\"test('something')\"></button>\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\n<button v:test=\"test('something')\"></button>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7285526058","Type":"IssuesEvent","CreatedAt":"2018-02-23T04:50:12","Actor":"DMQ","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7698","RelatedDescription":"Opened issue \"请问自定义指令支持绑定函数不自动执行吗？\" (#7698) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\n<button v:test=\"test.bind(this, 'something')\"></button>\r\n\r\n=>\r\n\r\n<button v:test=\"test('something')\"></button>\r\n\r\n### What does the proposed API look like?\r\n<button v:test=\"test('something')\"></button>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7285346163","Type":"IssuesEvent","CreatedAt":"2018-02-23T03:31:09","Actor":"Horsetoast","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7697","RelatedDescription":"Opened issue \"Contenteditable @input doesn't fire in IE11\" (#7697) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/supraniti/pen/Lypobx](https://codepen.io/supraniti/pen/Lypobx)\r\n\r\n### Steps to reproduce\r\nCreate a contenteditable with @input event binder and test in IE11 (Possibly happening with all IE9  according to my searches)\r\n\r\n### What is expected?\r\nIt should fire the input event\r\n\r\n### What is actually happening?\r\nIt doesn't fire the input event\r\n\r\n---\r\nThe same problem found in medium-editor https://github.com/yabwe/medium-editor/issues/394 the issue contains a proposed fix(?)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7285245951","Type":"IssuesEvent","CreatedAt":"2018-02-23T02:52:02","Actor":"ripeBoy","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7696","RelatedDescription":"Opened issue \"IE11 Internet explorer opens the white screen\" (#7696) at vuejs/vue","RelatedBody":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[http://The project is more complex and has not been located to the specific problems.](http://The project is more complex and has not been located to the specific problems.)\r\n\r\n### Steps to reproduce\r\nBuild with vue-cli. After the project development is completed, use chrome to open normal, and IE11 opens the white screen.\r\n\r\n### What is expected?\r\nOpen and use applications normally.\r\n\r\n### What is actually happening?\r\nhang\r\n\r\n---\r\nConsole error:  strict 模式下不允许一个属性有多个定义\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7282085649","Type":"IssuesEvent","CreatedAt":"2018-02-22T15:06:42","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2072","RelatedDescription":"Closed issue \"Allow router.replace without triggering scrollBehavior\" (#2072) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nUsing router.replace to update query parameters. However this triggers scrollBehavior and scrolls to the top. As far as I know, there is no way to distinguish between a push and a replace event.\r\n\r\n### What does the proposed API look like?\r\nHere are some options:\r\n\r\nCould be a simple boolean passed to the scrollBehavior function\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition, isPush) {\r\n```\r\n\r\nIt could be put in the route object to be consistent with this suggestion: https://github.com/vuejs/vue-router/issues/1620\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition) {\r\n    const isPush = toRoute.navigationType === 'push';\r\n```\r\n\r\nI could also work with the replace function accepting an additional parameter, or having a new signature, that simply updates the url and `router.$route` without going through guards, scrollbehavior etc. I originally just updated the state manually to circumvent this (using history.replaceState), however that caused some other sneaky bugs since vue-router didn't know about these changes.\r\n\r\n```\r\nrouter.replace(route, true)\r\n// OR\r\nrouter.replace(route, { noEvents/silent: true })\r\n// OR\r\nrouter.silentReplace(route)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7282026424","Type":"IssuesEvent","CreatedAt":"2018-02-22T14:56:55","Actor":"Dadibom","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2072","RelatedDescription":"Opened issue \"Allow router.replace without triggering scrollBehavior\" (#2072) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nUsing router.replace to update query parameters. However this triggers scrollBehavior and scrolls to the top. As far as I know, there is no way to distinguish between a push and a replace event.\r\n\r\n### What does the proposed API look like?\r\nHere are some options:\r\n\r\nCould be a simple boolean passed to the scrollBehavior function\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition, isPush) {\r\n```\r\n\r\nIt could be put in the route object to be consistent with this suggestion: https://github.com/vuejs/vue-router/issues/1620\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition) {\r\n    const isPush = toRoute.navigationType === 'push';\r\n```\r\n\r\nI could also work with the replace function accepting an additional parameter, or having a new signature, that simply updates the url and `router.$route` without going through guards, scrollbehavior etc. I originally just updated the state manually to circumvent this (using history.replaceState), however that caused some other sneaky bugs since vue-router didn't know about these changes.\r\n\r\n```\r\nrouter.replace(route, true)\r\n// OR\r\nrouter.replace(route, { noEvents/silent: true })\r\n// OR\r\nrouter.silentReplace(route)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7281712043","Type":"IssuesEvent","CreatedAt":"2018-02-22T14:01:57","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2071","RelatedDescription":"Closed issue \"Unexpected router.replace behaviour\" (#2071) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/e3odg60s/2/](https://jsfiddle.net/e3odg60s/2/)\r\n\r\n### Steps to reproduce\r\nClick push next three times\r\nthree states should be added (1,2,3)\r\nNow click replace three times. The history list should now look like this:\r\n[1,2,6]\r\n\r\nNow use the back button to go back to the start. _First navigation simply does not work._\r\nThen the order is as follows: [5, 4, 2, 1]\r\n\r\nIt appears that replace actually only _replaces_ on the first call, subsequent calls instead push states.\r\n\r\n### What is expected?\r\nReplace should always replace the current state\r\n\r\n### What is actually happening?\r\nReplace pushes new states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7281569170","Type":"IssuesEvent","CreatedAt":"2018-02-22T13:34:49","Actor":"Dadibom","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2071","RelatedDescription":"Opened issue \"Unexpected router.replace behaviour\" (#2071) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/e3odg60s/2/](https://jsfiddle.net/e3odg60s/2/)\r\n\r\n### Steps to reproduce\r\nClick push next three times\r\nthree states should be added (1,2,3)\r\nNow click replace three times. The history list should now look like this:\r\n[1,2,6]\r\n\r\nNow use the back button to go back to the start. _First navigation simply does not work._\r\nThen the order is as follows: [5, 4, 2, 1]\r\n\r\nIt appears that replace actually only _replaces_ on the first call, subsequent calls instead push states.\r\n\r\n### What is expected?\r\nReplace should always replace the current state\r\n\r\n### What is actually happening?\r\nReplace pushes new states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2018-02-23T05:30:35.5348736Z","RunDurationInMilliseconds":2434}