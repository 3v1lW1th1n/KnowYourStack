{"Data":{"Blog":{"FeedItems":[{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7883057784","Type":"IssuesEvent","CreatedAt":"2018-06-27T02:29:51","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1706","RelatedDescription":"Closed issue \"Xamarin Android linking cannot access file\" (#1706) at xamarin/xamarin-android","RelatedBody":"(This is a repost from [StackOverflow](https://stackoverflow.com/questions/49356825/xamarin-android-linking-cannot-access-file) at the request of Jon Douglas).\r\n\r\nI have a Xamarin Android project that I am trying to use Sdk and User Assembly linking with.\r\n\r\nIf I set the Android project to Sdk Assembly Linking only, the APK is created and deployed successfully and works.\r\n\r\nHowever, when I set Sdk and User Assembly linking, with no other changes, I get the following error only when I deploy. The solution builds succesfully.\r\n\r\n```\r\nThe \"LinkAssemblies\" task failed unexpectedly.    \r\nSystem.IO.IOException: The process cannot access the file '<path-to-project>\\AppName\\AppName.Android\\obj\\Release\\android\\assets\\AppName.Core.dll' because it is being used by another process.\r\n    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n    at Mono.Cecil.ModuleDefinition.Write(String fileName, WriterParameters parameters)\r\n    at Mono.Linker.Steps.OutputStep.WriteAssembly(AssemblyDefinition assembly, String directory)\r\n    at Mono.Linker.Steps.OutputStep.OutputAssembly(AssemblyDefinition assembly)\r\n    at Mono.Linker.Steps.OutputStep.ProcessAssembly(AssemblyDefinition assembly)\r\n    at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n    at Mono.Linker.Pipeline.Process(LinkContext context)\r\n    at MonoDroid.Tuner.Linker.Process(LinkerOptions options, LinkContext& context)\r\n    at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n    at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nAppName.Core.dll is another library project in my solution that is set to build as NetStandard 2.0.\r\n\r\nI have looked through many other bug reports and forum posts regarding a similar issue to this, but most seem related to an earlier bug with Visual Studio 15.5.1 that has since been fixed.\r\n\r\nThe main Xamarin bug report is: https://bugzilla.xamarin.com/show_bug.cgi?id=56275 but was resolved in VS 15.2.\r\nA forum topic (https://forums.xamarin.com/discussion/32976/updating-xamarin-broke-the-build-process-the-process-cannot-access-the-file-appname-dll-mdb) also talks about a similar issue being resolved in VS 15.5.1.\r\nOther SO questions refer to older Xamarin or VS versions, or have unacceptable solutions (such as just turning off linking):\r\nThe Link Assemblies tasks failed unexpectedly Xamarin Forms\r\nRegardless, I have tried just about every solution suggested in those links including:\r\n\r\nclosing and reopening Visual Studio\r\ndeleting /bin and /obj folders\r\nopening Visual Studio as Administrator\r\nrunning MsBuild from a command prompt with VS closed\r\nAs well as various combinations of the above.\r\n\r\nMy custom linker.xml contains an exception for my library project:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<linker>    \r\n    ...    \r\n    <assembly fullname=\"AppName.Core\" ></assembly>        \r\n    ...        \r\n</linker>\r\n```\r\n\r\nAs this point I seem to have exhausted all available options and am no closer to a workable solution. Suggestions on solutions, workarounds, or other debugging paths to follow would be most appreciated.\r\n\r\nMy Android Options config:\r\n![image](https://user-images.githubusercontent.com/33408863/40291870-17c5ce34-5d0b-11e8-9b5c-81d4770ed23d.png)\r\n\r\n### Version Information\r\nVisual Studio Version: 15.5.6\r\nXamarin Forms Version: 2.5.0.280555\r\nXamarin Version: 26.1.0.1"},{"Id":"7881926641","Type":"IssuesEvent","CreatedAt":"2018-06-26T20:44:32","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1554","RelatedDescription":"Closed issue \"Could not create the Java Virtual Machine.\" (#1554) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nhi guys, I'm with one probleme, my project is with this error  \"Could not create the Java Virtual Machine.\"\r\n\r\n### Basic Information\r\n\r\n- VS 17\r\n- Windows 10\r\n- Xamarin forms\r\n\r\n![capturar](https://user-images.githubusercontent.com/9373434/38741898-70e202fc-3f11-11e8-8e5c-1ddaf28c078a.PNG)\r\n"},{"Id":"7881852195","Type":"IssuesEvent","CreatedAt":"2018-06-26T20:29:57","Actor":"Redth","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1888","RelatedDescription":"Opened issue \"Large libraries in binding causing dx error with too large of main dex file\" (#1888) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWe've encountered a case where a pretty large .jar file in a Xamarin.Android binding project is causing the app project consuming it to hit a dx error:\r\n\r\n```\r\ncom.android.dex.DexException: Too many classes in --main-dex-list, main dex capacity exceeded\r\n    \tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:548)\r\n    \tat com.android.dx.command.dexer.Main.runMultiDex(Main.java:368)\r\n    \tat com.android.dx.command.dexer.Main.runDx(Main.java:289)\r\n    \tat com.android.dx.command.dexer.Main.main(Main.java:247)\r\n    \tat com.android.dx.command.Main.main(Main.java:94)\r\n```\r\n\r\nNow, on the Android Studio side, this can be mitigated by using the dex options:\r\n```\r\ndexOptions {\r\n    preDexLibraries = true\r\n    jumboMode = true\r\n    keepRuntimeAnnotatedClasses false\r\n}\r\n```\r\n\r\nIn Xamarin, we can specify _some_ of these options:\r\n```\r\n<DxExtraArguments>--force-jumbo </DxExtraArguments>\r\n```\r\n\r\nHowever, there appears to be no way to do the equivalent of `keepRuntimeAnnotatedClasses false`.\r\n\r\nUpon further investigation, it seems that `com.android.multidex.MainDexListBuilder` which is what we invoke from google's build-tools to generate the main dex list keep file, does not offer any ability to *not* keep runtime annotated classes, and these classes are added to the main dex keep list file no matter what.  So, gradle appears to generate this list some other way, or at least have the ability to remove these cases from the list before invoking dx.\r\n\r\nI also looked to see if there was an opportunity to wire up a custom msbuild task to _intercept_ the `multidex.keep` file we generate and make changes to it, before we pass it to `dx.jar`, but unfortunately those operations happen within the same msbuild task so that doesn't appear to be possible.\r\n\r\nOne possible solution that comes to mind is to introduce some sort of `MainDexListRemove` msbuild property in which we could specify a file containing classes that should be removed from the `multidex.keep` file, that the Xamarin.Android build task would take into consideration after the file is created, and make changes to, before it's passed to dx.  This could mean the nuget package for the binding could include such a `multidex.remove` file in the .nupkg, with a targets file that sets the msbuild property so that apps consuming the binding would hopefully compile.\r\n\r\nThoughts? "},{"Id":"7881673471","Type":"PullRequestEvent","CreatedAt":"2018-06-26T19:53:33","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1887","RelatedDescription":"Opened pull request \"Add Code-Behind tests for design-time build\" (#1887) at xamarin/xamarin-android","RelatedBody":"Design time build works by invoking a different target than the normal build.\r\nAdd a couple of tests which invoke the same target."},{"Id":"7881654448","Type":"PullRequestEvent","CreatedAt":"2018-06-26T19:49:13","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1886","RelatedDescription":"Opened pull request \"[Mono.Android] Do not fallback in GetJavaToManagedType\" (#1886) at xamarin/xamarin-android","RelatedBody":"In https://github.com/xamarin/xamarin-android/issues/1830 we saw that\r\nthere are cases when `monodroid_typemap_java_to_managed` fails to get\r\nus managed type name. These are internal and nested private\r\nclasses. We don't need to fallback in these cases.\r\n\r\nSo the fallback didn't get us anything as we don't have managed\r\nbindings for these.\r\n\r\nAvoiding the fallback saves us aprox. 9ms in\r\n`TypeManager::GetJavaToManagedType ()`, which is about 90%\r\nimprovement. 10ms to 1ms. (measured on x86_64 emulator, XamlSamples\r\napp)\r\n\r\nAlso the JIT *Compiled methods* number goes down from 5133 to 5107."},{"Id":"7881512158","Type":"PullRequestEvent","CreatedAt":"2018-06-26T19:18:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1885","RelatedDescription":"Opened pull request \"[xa-prep-tasks] DownloadUri is now cancellable\" (#1885) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1810\r\n\r\nWe can implement `ICancelableTask` in order to make `DownloadUri`\r\ncancellable. `CancellationTokenSource` and `async/await` make this\r\nreally simple to implement, as we mostly just need to use the\r\nappropriate cancellable overloads of async methods.\r\n\r\nSo now if you Ctrl+C during the build, on a line such as:\r\n\r\n    Downloading `https://xamjenkinsartifact.azureedge.net/xamarin-android/xamarin-android/bin/Debug/bundle-v21-h747933dd-Debug-Darwin-libzip=b95cf3f,llvm=bdb3a11,mono=f3235f3.zip`\r\n\r\nIt will cancel immediately with the failure:\r\n\r\n    \"xamarin-android\\Xamarin.Android.sln\" (Prepare target) (1) ->\r\n    \"xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj\" (default target) (4) ->\r\n    (_DownloadBundle target) ->\r\n        warning MSB4018: The \"DownloadUri\" task failed unexpectedly. [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]xamarin-android\\build-tools\\download-bundle\\download-bundle.targets(24,5):\r\n        warning MSB4018: System.OperationCanceledException: The operation was canceled. [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]xamarin-android\\build-tools\\download-bundle\\download-bundle.targets(24,5):\r\n        warning MSB4018:    at System.Threading.CancellationToken.ThrowOperationCanceledException() [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning MSB4018:    at System.Threading.ManualResetEventSlim.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken) [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning MSB4018:    at System.Threading.Tasks.Task.WaitAllBlockingCore(List`1 tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n        warning MSB4018:    at System.Threading.Tasks.Task.WaitAll(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken) [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning MSB4018:    at System.Threading.Tasks.Task.WaitAll(Task[] tasks, CancellationToken cancellationToken) [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning MSB4018:    at Xamarin.Android.BuildTools.PrepTasks.DownloadUri.Execute() in xamarin-android\\build-tools\\xa-prep-tasks\\Xamarin.Android.BuildTools.PrepTasks\\DownloadUri.cs:line 58 [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [xamarin-android\\build-tools\\download-bundle\\download-bundle.csproj]\r\n        warning : Unable to download URL `https://xamjenkinsartifact.azureedge.net/xamarin-android/xamarin-android/bin/Debug/bundle-v21-h747933dd-Debug-Darwin-libzip=b95cf3f,llvm=bdb3a11,mono=f3235f3.zip`]\r\n\r\nBefore you would have to wait for the download to complete\r\n(`DownloadUri.Execute` to return) before the build would cancel. As a\r\nlast resort, MSBuild can only cancel non-cancellable MSBuild tasks\r\nafter the current running task completes."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7882845376","Type":"IssuesEvent","CreatedAt":"2018-06-27T01:09:46","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2422","RelatedDescription":"Closed issue \"RoutingEffect on Android doesn't work anymore if Xamarin.Forms >= 2.5.0.280555\" (#2422) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nXamarin.Forms project based on new .Net Standard shared project\r\nUsing [Xamarin Forms Routing Effect](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/app-fundamentals/effects/creating) and Xamarin.Forms >= 2.5.0.280555 on Android buttons are not rendered anymore (they are invisible).\r\nI already tried to clean whole solution (debug/obj folders too), all nuget packages and rebuild all on Visual Studio 2017 (Windows)  and Visual Studio for Mac (stable channel).\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Routing Effect in .Net Standard project\r\n2. Create a related PlatformEffect in Android subproject and in OnAttached callback set this custom effects\r\n`                var control = Control as Android.Widget.Button;\r\n                control.SetBackgroundResource(Resource.Drawable.RoundBluBeButton);\r\n                control.SetAllCaps(false);`\r\nRoundBluBeButton is a axml with only one custom UI property\r\nContent of RoundBluBeButton.axml is\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!-- Style for \"rectangle_\" -->\r\n<!-- Add this snippet to layer-list xml in drawable. -->\r\n <shape  xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">\r\n <corners android:radius=\"10dp\" />\r\n  </shape>\r\n```\r\n\r\n3. Button in xaml (in .Net Standard shared project) is declared inside a StackLayout, withi this properties\r\n`                    <Button x:Name=\"btnLogin\" Text=\"Login\" VerticalOptions=\"Center\" Style=\"{StaticResource blubeButtonBlueItalic}\" TextColor=\"White\" IsEnabled=\"{Binding IsLoginEnabled, Mode=OneWay}\">\r\n                        <Button.Effects>\r\n                            <local2:BluBeButtonEffect/>\r\n                        </Button.Effects>\r\n                    </Button>`\r\n\r\n### Expected Behavior\r\nWith previsous Xamarin.Forms releases (2.5.0.122203 and older) button are correctly rendered with rounded corners\r\n\r\n### Actual Behavior\r\nWIth Xamarin.Forms >= 2.5.0.280555 on Android button are not rendered (they are invisible)\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- IDE: Visual Studio 2017 v15.6.6 on Windows 10 & Visual Studio for Mac (stable channel)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: compile & target version are 27\r\n"},{"Id":"7882129646","Type":"IssuesEvent","CreatedAt":"2018-06-26T21:26:28","Actor":"Gabriehl","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3159","RelatedDescription":"Opened issue \"[Android] Effects methods are called even when Control is disposed\" (#3159) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nEffects invoke the `OnAttached()` and `OnElementPropertyChanged()` methods even when the Control is already disposed.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a class that inherits from a Xamarin.Forms View (I'll call it \"MyView\", as I will be mentioning it several times).\r\n2. In `MyView`, create a public property (I'll call it \"MyProperty\") with a backing BindableProperty.\r\n3. In the `App` class, create a public property of the same type as `MyProperty` (I'll call it \"MyAppProperty\") and call the `OnPropertyChanged()` method when it changes.\r\n3. Create an Effect (it will be added to `MyView`) and override the method `OnElementPropertyChanged()`. There, update/call any of the Control's properties/methods. \r\n4. Add `MyView` to a page, adding the effect to it and binding `MyProperty` to `MyAppProperty` (`{Binding MyAppProperty, Source={Static Application.Current}}`).\r\n5. When the app is running, open that page, pop from it and update `MyAppProperty` from somewhere. \r\n\r\n### Expected Behavior\r\n\r\nThe effect's `OnElementPropertyChanged()` doesn't get called, as the Control is already disposed.\r\n\r\n### Actual Behavior\r\n\r\nThe effect's `OnElementPropertyChanged()` gets called, resulting in an `ObjectDisposedException` (with the message \"Cannot access a disposed object\") as soon as a property/method of the Control is updated/called.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.583944\r\n- IDE: Visual Studio 2017 15.7.4\r\n- Platform Target Frameworks:\r\n  - Android: 8.1\r\n\r\n### Reproduction Link\r\n\r\n[ControlDisposedOnEffect.zip](https://github.com/xamarin/Xamarin.Forms/files/2138935/ControlDisposedOnEffect.zip)\r\n\r\n**Obs.** To reproduce the issue on the repro project: tap the Button, pop from the page, then tap the Button again."},{"Id":"7881657844","Type":"IssuesEvent","CreatedAt":"2018-06-26T19:50:01","Actor":"j4m3z0r","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3158","RelatedDescription":"Opened issue \"OpenGLView does not notify caller when it destroys GL Context\" (#3158) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen using an OpenGLView, if it is removed from the screen (setting an ancestor's Content to another view or similar), the OpenGLView will destroy the OpenGL context in the renderer. If you then re-attach this view to the scene, all the shaders, etc, are invalid, since the context was destroyed.  Attempts to use them will cause an error.\r\n\r\nAs far as I can see there is no way to be notified by the OpenGLView that it has (or is about to) destroy the GL context. GL contexts do get killed on mobile platforms (eg when backgrounding), so I think it's ok to do this, but there needs to be a notification so that the caller can handle this gracefully.\r\n\r\nThis is on iOS 11.4, and full disclosure: I have a custom OpenGLViewRenderer which creates a GLES3 context rather than GLES2. This is the only line I have changed from upstream. These are the published nuget packages and I have added my renderer like so:\r\n\r\n```\r\n[assembly: ExportRenderer(typeof(Xamarin.Forms.OpenGLView), typeof(FormsHacks.Renderer.GLES3GLViewRenderer))]\r\n```\r\n\r\n(there is a separate issue filed about this: #3127)"},{"Id":"7881435338","Type":"PullRequestEvent","CreatedAt":"2018-06-26T19:02:06","Actor":"jsuarezruiz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3157","RelatedDescription":"Opened pull request \"[GTK] Fixed Layout calcs with NavigationBar\" (#3157) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixed error in page height calcs hiding the navigation bar.\r\n\r\nOn a page like this:\r\n![imagen](https://user-images.githubusercontent.com/6755973/41933001-ee3abf7c-7982-11e8-9642-cf2b7c6f0eca.png)\r\n\r\nThe default result:\r\n![imagen](https://user-images.githubusercontent.com/6755973/41932967-d36241a2-7982-11e8-951e-58208209e3bd.png)\r\n\r\nUsing `NavigationPage.SetHasNavigationBar(this, false);`\r\n![imagen](https://user-images.githubusercontent.com/6755973/41932979-dc1437ce-7982-11e8-8762-a8d97fa3bb0b.png)\r\n\r\n### Issues Resolved ###\r\n\r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #3153 \r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- GTK\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7881182302","Type":"IssuesEvent","CreatedAt":"2018-06-26T18:12:07","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2138","RelatedDescription":"Closed issue \"Getting Java.Lang.SecurityException with Forms.Maps\" (#2138) at xamarin/Xamarin.Forms","RelatedBody":"When I debug a Cross Platform Mobile App (Xamarin Forms, .Net Standard, Android) on a Samsung tablet, I get this error after the app has downloaded and begins to run. VS displays an unhandled exception : \r\nJava.Lang.SecurityException: my location requires permission ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION\r\n\r\nIt appears the problem is a combination of using a TabbedPage and adding a ContentPage with a map control with IsShowingUser=true.\r\nIf I run the same code with IsShowingUser=true on a ContentPage by itself, it runs fine.\r\n\r\nIf I remove IsShowingUser option from the ContentPage on the TabbedPage, it run just fine.\r\nRun the accompanying zipped project.\r\n\r\nEnvironment versions:\r\nHardware: Samsung Galaxy S2 (SM-T810 Android 7.0, API 24)\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.3\r\nVisualStudio.15.Release/15.6.3+27428.2011\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nC# Tools   2.7.0-beta3-62707-11. Commit Hash: 75dfc9b33ed624dff3985c7435c902c3c58c0e5c\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nXamarin   4.9.0.752 (0faa808ee)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\n[MyWorkingWithMaps_Bug Bug.zip](https://github.com/xamarin/Xamarin.Forms/files/1826992/MyWorkingWithMaps_Bug.Bug.zip)\r\n\r\n"},{"Id":"7880728131","Type":"PullRequestEvent","CreatedAt":"2018-06-26T16:45:44","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2661","RelatedDescription":"Merged pull request \"[Tizen] Implement forwarders to Xamarin.Forms.Platform.Tizen\" (#2661) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIn order to utilize [RenderWith] attributes during linking for Tizen, we wanted to implement forwarders to concrete renderers in Xamarin.Forms.Platform.Tizen, similar to existing forwarders for iOS and Android.\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nN/A\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n\r\nCC @alpencolt"},{"Id":"7880721206","Type":"IssuesEvent","CreatedAt":"2018-06-26T16:44:28","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1518","RelatedDescription":"Closed issue \"No view found for id 0x9 (unknown) for fragment FragmentContainer\" (#1518) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI have a ListView on MasterPage detail\r\n\r\n   ```csharp\r\npublic class MainPage : ContentPage\r\n    {\r\n        private bool _isRefreshExecuted;\r\n        private readonly ObservableCollection<MainPageItem> _requestList;\r\n        private WokerMainPageViewModel _model;\r\n        private readonly ICommand _refreshCommand;\r\n        public ListView RequestListView { get; set; }\r\n\r\n        public MainPage()\r\n        {\r\n            NavigationPage.SetBackButtonTitle(this, \"\");\r\n            _requestList = new ObservableCollection<MainPageItem>();\r\n            _refreshCommand = new Command(async () =>\r\n            {\r\n                _model.List = await AppWorker.DependencyInjection().Resolve<IWorkerTaxiMainPageService>().GetAllRequestAsync();\r\n                if (_model.List == null)\r\n                {\r\n                    _model.IsEmpty = true;\r\n                    return;\r\n                }\r\n                _model.IsEmpty = _model.List.Count <= 0;\r\n                GetTripListFromServer();\r\n            });\r\n            RequestListView = new ListView\r\n            {\r\n                ItemTemplate = new DataTemplate(() =>\r\n                {\r\n                    var requestPageCell = new MainPageCell();\r\n                    return requestPageCell;\r\n                }),\r\n                VerticalOptions = LayoutOptions.FillAndExpand,\r\n                HorizontalOptions = LayoutOptions.FillAndExpand,\r\n                SeparatorVisibility = SeparatorVisibility.Default,\r\n                IsPullToRefreshEnabled = true,\r\n                RefreshCommand = _refreshCommand\r\n\r\n            };\r\n            RequestListView.SetBinding(targetProperty: ListView.IsRefreshingProperty, path: \"IsRefresh\");\r\n            var emptyLable = new Label\r\n            {\r\n                Style = (Style)Application.Current.Resources[index: \"LableStyle\"],\r\n                HorizontalOptions = LayoutOptions.Center,\r\n                VerticalOptions = LayoutOptions.Center,\r\n                VerticalTextAlignment = TextAlignment.Center,\r\n                HorizontalTextAlignment = TextAlignment.Center,\r\n                Text = \"هنوز سفری برای شما ثبت نشده\\n برای تازه سازی، صفحه را از بالا به پایین بکشید\"\r\n                \r\n            };\r\n            emptyLable.SetBinding(targetProperty: IsVisibleProperty, path: \"IsEmpty\");\r\n            var stack = new StackLayout\r\n            {\r\n                Padding = new Thickness { Top = 5},\r\n                Children = {emptyLable,RequestListView}\r\n            };\r\n            Content = stack;\r\n            CrossFirebasePushNotification.Current.OnNotificationReceived += (s, p) =>\r\n            {\r\n                if (!p.Data.ContainsKey(\"id\")) return;\r\n                if (CrossSettings.Current.GetValueOrDefault(\"LastPage\", null) != \"Eela.Taxi.Pages.Worker.MainPage\") return;\r\n                if (!p.Data.ContainsKey(\"type\")) return;\r\n                Enum.TryParse(p.Data[\"type\"].ToString(), out NotificationTypes type);\r\n                switch (type)\r\n                {\r\n                    case NotificationTypes.SubmitRequestByUser:\r\n                    {\r\n                        Device.BeginInvokeOnMainThread(() => { _refreshCommand.Execute(0); });\r\n                        break;\r\n                    }\r\n                    case NotificationTypes.RefreshWorkerMainPageList:\r\n                    {\r\n                        if (CrossSecureStorage.Current.GetValue(\"Id\") != p.Data[\"workerId\"].ToString())\r\n                            Device.BeginInvokeOnMainThread(() => { _refreshCommand.Execute(0); });\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        private void GetTripListFromServer()\r\n        {\r\n            if (_isRefreshExecuted) return;\r\n            _isRefreshExecuted = true;\r\n            _model.IsRefresh = true;\r\n            if (_requestList != null)\r\n            {\r\n                _requestList.Clear();\r\n                if (_model.List != null)\r\n                {\r\n                    if (Application.Current.Properties[\"Culture\"].ToString() == \"fa-IR\")\r\n                        foreach (var item in _model.List)\r\n                        {\r\n                            _requestList.Add(item: new MainPageItem\r\n                            {\r\n                                RequestId = item.RequestId,\r\n                                SourceAddress = item.SourceAddress,\r\n                                DestinationAddress = item.DestinationAddress\r\n                            });\r\n                        }\r\n                    else\r\n                        foreach (var item in _model.List)\r\n                        {\r\n                            _requestList.Add(item: new MainPageItem\r\n                            {\r\n                                RequestId = item.RequestId,\r\n                                SourceAddress = item.SourceAddress,\r\n                                DestinationAddress = item.DestinationAddress\r\n                            });\r\n                        }\r\n                }\r\n\r\n                RequestListView.ItemsSource = null;\r\n                RequestListView.ItemsSource = _requestList;\r\n            }\r\n\r\n            _model.IsRefresh = false;\r\n            _isRefreshExecuted = false;\r\n        }\r\n\r\n        protected override void OnAppearing()\r\n        {\r\n            base.OnAppearing();\r\n            CrossSettings.Current.AddOrUpdateValue(\"LastPage\", GetType().FullName);\r\n            _model = (WokerMainPageViewModel)BindingContext;\r\n            _refreshCommand.Execute(0);\r\n        } \r\n\r\n        protected override bool OnBackButtonPressed()\r\n        {\r\n            Device.BeginInvokeOnMainThread(async () =>\r\n            {\r\n                var confirm = await Application.Current.MainPage.DisplayAlert(\r\n                    Taxi.Resources.Common.ResourceManager.GetString(\"Warning\",\r\n                        new CultureInfo(Application.Current.Properties[\"Culture\"].ToString())),\r\n                    Taxi.Resources.Common.ResourceManager.GetString(\"ExitWarning\",\r\n                        new CultureInfo(Application.Current.Properties[\"Culture\"].ToString())),\r\n                    Taxi.Resources.Common.ResourceManager.GetString(\"Yes\",\r\n                        new CultureInfo(Application.Current.Properties[\"Culture\"].ToString())),\r\n                    Taxi.Resources.Common.ResourceManager.GetString(\"No\",\r\n                        new CultureInfo(Application.Current.Properties[\"Culture\"].ToString())));\r\n                if (confirm)\r\n                {\r\n                    DependencyService.Get<ICloseApplication>().ExitApplication();\r\n                }\r\n\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n```\r\n### Steps to Reproduce\r\n\r\n1. Run the Program \r\n2. Refresh the ListView\r\n3. Post to server and get some data\r\n\r\n### Expected Behavior\r\nRefresh the data\r\n### Actual Behavior\r\nForce Close in some situations for some Andorid 4.2.1 or 4.2.2 or 6.0.1 devices\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- Last known good version:-\r\n- IDE: Visual Studio 15.5.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  -\r\n  - Android: API level 26\r\n  - UWP:  -\r\n- Android Support Library Version: 26.1.0.1\r\n- Affected Devices:\r\nGalaxy S3 Mini Value Edition,Galaxy J1 Ace,Galaxy J7\r\n\r\n```\r\nandroid.support.v4.app.FragmentManagerImpl.moveToState\r\nFragmentManager.java - line 1413\r\njava.lang.IllegalArgumentException: No view found for id 0x9 (unknown) for fragment FragmentContainer{424ae2c0 #0 id=0x9}\r\nNo view found for id 0x9 (unknown) for fragment FragmentContainer{424ae2c0 #0 id=0x9}\r\nandroid.support.v4.app.FragmentManagerImpl.moveToState FragmentManager.java:1413\r\nandroid.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState FragmentManager.java:1740\r\nandroid.support.v4.app.FragmentManagerImpl.moveToState FragmentManager.java:1809\r\nandroid.support.v4.app.BackStackRecord.executeOps BackStackRecord.java:799\r\nandroid.support.v4.app.FragmentManagerImpl.executeOps FragmentManager.java:2580\r\nandroid.support.v4.app.FragmentManagerImpl.executeOpsTogether FragmentManager.java:2367\r\nandroid.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute FragmentManager.java:2322\r\nandroid.support.v4.app.FragmentManagerImpl.execPendingActions FragmentManager.java:2229\r\nandroid.support.v4.app.FragmentManagerImpl$1.run FragmentManager.java:700\r\nandroid.os.Handler.handleCallback Handler.java:733\r\nandroid.os.Handler.dispatchMessage Handler.java:95\r\nandroid.os.Looper.loop Looper.java:136\r\nandroid.app.ActivityThread.main ActivityThread.java:5590\r\njava.lang.reflect.Method.invokeNative Method.java\r\njava.lang.reflect.Method.invoke Method.java:515\r\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run ZygoteInit.java:1280\r\ncom.android.internal.os.ZygoteInit.main ZygoteInit.java:1096\r\ndalvik.system.NativeStart.main NativeStart.java\r\n```\r\n\r\n  "},{"Id":"7880320760","Type":"IssuesEvent","CreatedAt":"2018-06-26T15:36:57","Actor":"MaxFe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3156","RelatedDescription":"Opened issue \"SelectionMode None dosn't prevent Animation/MouseOver\" (#3156) at xamarin/Xamarin.Forms","RelatedBody":"The current implementation only prevents setting the SelectedItemProperty. The onItemPressen animation is active as in SelectionMode=Single. It's the same for MouseOver.\r\n\r\nSee: https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Core/ListView.cs -> Method NotifyRowTapped\r\n```c#\r\nif (SelectionMode != ListViewSelectionMode.None)\r\n\t\t\t\tSetValueCore(SelectedItemProperty, cell?.BindingContext, SetValueFlags.ClearOneWayBindings | SetValueFlags.ClearDynamicResource | (changed ? SetValueFlags.RaiseOnEqual : 0));\r\n```\r\n\r\n### Expected Behavior\r\n1) OnMouseOver shouldn't have any visual effect  \r\n2) OnTapped shouldn't have any visual effect  \r\n\r\n### Actual Behavior\r\n1) OnMouseOver shouldn't have any effect\r\n![image](https://user-images.githubusercontent.com/31653042/41922699-f8a97cd6-7965-11e8-9de6-40d941e38895.png)\r\n2) OnTapped invokes an animation  (like one plus itemContent gets zoomed out)\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms 3.1.0.583944\r\n- IDE: Visual Studio 15.7.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  Only tested on UWP \r\n\r\n"},{"Id":"7880314973","Type":"PullRequestEvent","CreatedAt":"2018-06-26T15:36:02","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3123","RelatedDescription":"Merged pull request \"[iOS] Try another fix for toolbar items layout\" (#3123) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRevert #2870 \r\nDo not set frame twice as it causes the button to shift\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #2798 \r\n\r\n### API Changes ###\r\n\r\nNone \r\n\r\n### Platforms Affected ###\r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nShould layout buttos ok even after push and rotation \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7882838104","Type":"IssuesEvent","CreatedAt":"2018-06-27T01:06:51","Actor":"SamsonCodeHeroes","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4347","RelatedDescription":"Opened issue \"iOS regression - crash when parsing JSON\" (#4347) at xamarin/xamarin-macios","RelatedBody":"Since the recent Xamarin iOS tooling update, I am seeing a crash that appears to be related to JSON serialization and `ImmutableArray`.\r\n\r\nThe following doesn't happen when using the iOS SDK [11.2](https://github.com/bitrise-io/bitrise.io/blob/master/system_reports/osx-vs4mac-previous-stable.log), but does happen using [11.4](https://github.com/bitrise-io/bitrise.io/blob/master/system_reports/osx-vs4mac-stable.log). Strangely, commenting out an unrelated property prevents the error.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build and run the app.\r\n2. Press the button. This causes deserialization and re-serializing of a small piece of JSON data.\r\n3. You should get a Null reference exception.\r\n4. Comment out the `Title` property  in `ServiceDto` (other properties should also work).\r\n5. Re-run the app and hit the button.\r\n6. JSON should be output to console, without crashing.\r\n\r\n### Expected Behavior\r\nJSON string should be logged to output.\r\n\r\n### Actual Behavior\r\nNull reference exception.\r\n\r\n### Environment\r\nError appears to be iPhone-only. Replicated on:\r\n- iPhone5S running iOS version 11.0.3.\r\n- iPhoneX running 11.4.\r\n\r\nThe crash doesn't seem to happen on all devices. The initial error report wasn't replicated on an old iPad2 running iOS 9.3.5, though I haven't been able to re-test this.\r\n\r\nIDE:\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET and Web Tools 2017   15.0.40511.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.3.3\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nColor Theme Designer   1.0\r\nDesigner for creating new color themes\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJetBrains ReSharper Ultimate 2017.2    Build 109.0.20170824.131346\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNCrunch   \r\nContinuous Testing Tool for .NET\r\nCopyright © 2010-2018 Remco Software Ltd\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSettingsWindow Extension   1.0\r\nSettingsWindow Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTrailing Whitespace Visualizer   2.5.83\r\nKeeps your code files clean by making it easier than ever to identify and remove any trailing whitespace\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Example Project\r\n[Repro.zip](https://github.com/xamarin/xamarin-macios/files/2135764/Repro.zip)\r\n\r\n"},{"Id":"7882303578","Type":"IssuesEvent","CreatedAt":"2018-06-26T22:06:59","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4338","RelatedDescription":"Closed issue \"Getting errors in application output pad on deploying ios application to ios 12 simulators\" (#4338) at xamarin/xamarin-macios","RelatedBody":"Description :- On deploying ios application to ios 12 simulator , the app deploys successfully but , in application output logs it gives following error : - \r\n\r\n2018-06-26 16:33:23.029835+0530 iossoution[7789:301707] SecTaskLoadEntitlements failed error=22 cs_flags=200, pid=7789\r\n2018-06-26 16:33:23.031048+0530 iossoution[7789:301707] SecTaskCopyDebugDescription: iossoution[7789]/0#-1 LF=0\r\n2018-06-26 16:33:23.076358+0530 iossoution[7789:301707] +[CATransaction synchronize] called within transaction\r\n2018-06-26 16:33:23.183353+0530 iossoution[7789:301707] [Unknown process name] Error: this application, or a library it uses, has passed an invalid numeric value (NaN, or not-a-number) to CoreGraphics API and this value is being ignored. Please fix this problem.\r\n2018-06-26 16:33:23.183576+0530 iossoution[7789:301707] [Unknown process name] If you want to see the backtrace, please set CG_NUMERICS_SHOW_BACKTRACE environmental variable.\r\n\r\nPrequisite : - \r\n\r\n1. Download and install Xcode 10 beta 2 \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create ios application\r\n2. Build the application in debug mode(make sure that in deployment target there are ios 12 simulator displayed in the list)\r\n3. deploy the app to simulator \r\n\r\n### Expected Behavior\r\nApp should deploy successfully without any errors\r\n\r\n### Actual Behavior\r\nApp deploys successfully , but in the application output logs it gives following error : - \r\n\r\n2018-06-26 16:33:23.029835+0530 iossoution[7789:301707] SecTaskLoadEntitlements failed error=22 cs_flags=200, pid=7789\r\n2018-06-26 16:33:23.031048+0530 iossoution[7789:301707] SecTaskCopyDebugDescription: iossoution[7789]/0#-1 LF=0\r\n2018-06-26 16:33:23.076358+0530 iossoution[7789:301707] +[CATransaction synchronize] called within transaction\r\n2018-06-26 16:33:23.183353+0530 iossoution[7789:301707] [Unknown process name] Error: this application, or a library it uses, has passed an invalid numeric value (NaN, or not-a-number) to CoreGraphics API and this value is being ignored. Please fix this problem.\r\n2018-06-26 16:33:23.183576+0530 iossoution[7789:301707] [Unknown process name] If you want to see the backtrace, please set CG_NUMERICS_SHOW_BACKTRACE environmental variable.\r\n\r\n### Environment\r\nVisual Studio Enterprise 2017 for Mac Version 7.5.3 (build 7)\r\nMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\nApple Developer Tools Xcode 10.0 (14274.19)\r\nXamarin.Mac Version: 4.99.0.93 (Visual Studio Enterprise)\r\nXamarin.iOS Version: 11.99.0.93 (Visual Studio Enterprise)\r\nXamarin.Android Version: 8.3.3.2 (Visual Studio Enterprise)\r\nOperating System Mac OS X 10.14.0 Beta MoJave\r\n\r\nReproducibility : - 100%\r\n\r\n### Build Logs\r\nhttps://gist.github.com/p-lad/52f3540115ab2caff78338870286ce47\r\n\r\nApplication output logs gist link : - \r\nhttps://gist.github.com/p-lad/10b957342aa2bf9832fd0920043201bb\r\n\r\nBuild Information gist : - \r\nhttps://gist.github.com/p-lad/4aaf3b2197f57653f0f5e556b24c34d9\r\n\r\nScreen cast link : - \r\nhttps://www.screencast.com/t/XgMuGlTou\r\n\r\nTest plan link : - \r\nhttps://testrail.xamarin.com/index.php?/plans/view/55573\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7881962486","Type":"PullRequestEvent","CreatedAt":"2018-06-26T20:51:38","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4346","RelatedDescription":"Opened pull request \"[tvos][tvuikit] Add new TVUIKit (up to beta 2)\" (#4346) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7881704636","Type":"IssuesEvent","CreatedAt":"2018-06-26T20:00:13","Actor":"jgold6","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4345","RelatedDescription":"Opened issue \"Physical Apple watch does not show up in the Device list in either VS for Mac or Windows\" (#4345) at xamarin/xamarin-macios","RelatedBody":"### Description\r\n\r\nAn Apple watch that is paired to an iPhone does not show up in the device list when the watch app is selected as the startup project, only the iPhone it is paired with and the simulators show up. As Such I am unable to deploy the watch app to a physical apple watch for debugging.\r\n\r\nI do see the paired apple watch in Xcode Devices and Simulators window. \r\n\r\nI am able to select the watch app as the startup project and deploy to a watch simulator for debugging (though due to timeout issues, I have to deploy a couple of times before it works). \r\n\r\nWhen I select the iOS companion app as the startup project and deploy it to the iPhone, I can install and run the watch app on the paired watch, but the debugger does not get connected in this scenario. This does demonstrate that the watch is provisioned properly though. \r\n\r\nI am using the [WatchKitCatalog](https://developer.xamarin.com/samples/monotouch/watchOS/WatchKitCatalog/) app to test. \r\n\r\n### Steps to Reproduce\r\n\r\n1. Get the watchKitCatalog app (or other Apple watch app solution) and load it into VS for Mac and/or Visual Studio 2017 Windows\r\n2. Select the WatchKitCatalog project as the startup project.\r\n3. Select Debug configuration.\r\n4. Click on the device drop down list and make sure you see your iPhone that is paired to your Apple watch\r\n\r\n![screen shot 2018-06-26 at 9 50 09 am](https://user-images.githubusercontent.com/4606509/41935731-6e2833b6-7926-11e8-91ab-3ed51b54d4da.png)\r\n\r\n![screen shot 2018-06-26 at 9 54 14 am](https://user-images.githubusercontent.com/4606509/41935864-f9d9da40-7926-11e8-93fd-4efef8bbcb8c.png)\r\n\r\n5. Select the WatchApp3 project as the startup project. \r\n6. Click on the device drop down list.\r\n\r\n### Expected Behavior\r\n\r\nI should see and be able to select the paired Apple watch and be able to deploy to the physical watch\r\n\r\n### Actual Behavior\r\n\r\nPaired apple watch does not show in the device list.\r\n\r\n![screen shot 2018-06-26 at 9 50 32 am](https://user-images.githubusercontent.com/4606509/41935741-777b6c9e-7926-11e8-9429-6db49c870acb.png)\r\n\r\n![screen shot 2018-06-26 at 9 54 36 am](https://user-images.githubusercontent.com/4606509/41935872-ff8523dc-7926-11e8-96ce-f60235477c7d.png)\r\n\r\n### Notes\r\n\r\nWhen I took these screen shots, the iPhone was connected via WiFi, but I got the same results if I connected the iPhone via USB cable. \r\n\r\nMy watch's name is Jonathans Apple Watch.\r\n\r\n### Environment\r\n\r\nVisual Studio for Mac:\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: f86726f2-bd5d-4610-867e-44e82f306ca2\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\n\t1.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-003121\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/jongoldberger/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.2   (API level 17)\r\n\t\t4.3   (API level 18)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_161\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_161-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Enterprise)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\nVisual Studio 2017\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.4\r\nVisualStudio.15.Release/15.7.4+27703.2035\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nAI Tools   0.4.1.664470\r\nThis package provides options page support in Visual Studio Tools for AI.\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40601.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40608.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.5\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40617.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.5\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.5.3.2888\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.5\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.5\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.2\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.5\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18156.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - IronPython support   15.7.18156.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18156.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for AI   0.4.1.664470\r\nAn integrated development environment for AI / Deep Learning application development.\r\n\r\nVisual Studio Tools for AI: Azure Batch AI   0.4.1.664470\r\nThis package provides Azure Batch AI support in Visual Studio Tools for AI.\r\n\r\nVisual Studio Tools for AI: Azure Cognitive Services   0.4.1.664470\r\nThis package provides Azure Cognitive Services support in Visual Studio Tools for AI.\r\n\r\nVisual Studio Tools for AI: Azure Machine Learning   0.4.1.664470\r\nThis package provides Azure Machine Learning support in Visual Studio Tools for AI.\r\n\r\nVisual Studio Tools for AI: Model Inference Library   0.4.1.664470\r\nThis package helps build intelligent C# applications in Visual Studio Tools for AI.\r\n\r\nVisual Studio Tools for AI: PAI   0.4.1.664470\r\nThis package provides PAI support in Visual Studio Tools for AI.\r\n\r\nVisual Studio Tools for AI: Remote Machine   0.4.1.664470\r\nThis package provides Remote Machine support in Visual Studio Tools for AI.\r\n\r\nVisual Studio Tools for AI: Template   0.4.1.664470\r\nThis package is used to generate a template for creating a deep learning application in python language.\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2035\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\nN/A\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://developer.xamarin.com/samples/monotouch/watchOS/WatchKitCatalog/"},{"Id":"7880859613","Type":"PullRequestEvent","CreatedAt":"2018-06-26T17:10:01","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4344","RelatedDescription":"Opened pull request \"CoreWLan 10b1\" (#4344) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7880413625","Type":"PullRequestEvent","CreatedAt":"2018-06-26T15:52:00","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4343","RelatedDescription":"Opened pull request \"Add CoreAudio 10b1\" (#4343) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7880408801","Type":"IssuesEvent","CreatedAt":"2018-06-26T15:51:14","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4342","RelatedDescription":"Closed issue \"Failed to compile the generated registrar code.\" (#4342) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Select iOS project & then try to build it (this has been working OK in the past - not tried it for 3 months or so)\r\n\r\n### Expected Behavior\r\nApp compiles and runs\r\n\r\n### Actual Behavior\r\nBuild crashes with \r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tFailed to compile the generated registrar code. Please file a bug report at http://bugzilla.xamarin.com\tXApp.iOS\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets\t791\t\r\n\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\nVS2017 on PC\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.3\r\nVisualStudio.15.Release/15.7.3+27703.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40522.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCleanCommand Extension   1.0\r\nCleanCommand Visual Studio Extension Detailed Info\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOffice Developer Tools for Visual Studio 2017 ENU   15.0.27612.00\r\nMicrosoft Office Developer Tools for Visual Studio 2017 ENU\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 2527e6829ecdc8281ee60d83be8cfd0fa720a648.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2026\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   4.10.10.1 (f1760154c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n=====================\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: b089baa8-67cf-45df-b42c-45cca25c0e92\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/admin/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n\r\n\r\n### Build Logs\r\n[buildOutput.zip](https://github.com/xamarin/xamarin-macios/files/2137572/buildOutput.zip)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":31,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":33,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-06-27T05:30:58.4032105Z","RunDurationInMilliseconds":4338}