{"Data":{"Blog":{"FeedItems":[{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8364857635","Type":"PullRequestEvent","CreatedAt":"2018-10-04T01:25:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2089","RelatedDescription":"Merged pull request \"Convert libmonodroid to C++\" (#2089) at xamarin/xamarin-android","RelatedBody":"The purpose of this conversion is to start using a language that is stricter and\r\nyet more powerful than C. Stricter in type safety, in separation of private and\r\npublic function, in data encapsulation. Taking advantage of C++ *language* (as\r\nopposed to its standard library) features allows us to write better structured,\r\nsafer and less fragile code. C++ also allows us to implement safer memory\r\nmanagement (not part of this commit, see below).\r\n\r\nThis commit implements the basic, skeletal work on straightforward C to C++\r\nconversion:\r\n\r\n  * introduces classes to encompass a number of APIs that can be grouped\r\n    together\r\n\r\n  * fixes a number of issues with the old C code (void pointer arithmetic,\r\n    incorrect type casts, comparisons of integers with different signs or of\r\n    different sizes)\r\n\r\n  * introduces strict type checking in the Mono interface API (it used to use\r\n    `void*` pointers which could lead to confusion and hard to detect\r\n    runtime/build time errors, see below)\r\n\r\nMono API (found in the DylibMono class) was error prone, as signalled above,\r\nbecause it made the code similar to the following to build without any warning\r\nor error from the compilers:\r\n\r\n```c++\r\nvoid my_code (MonoDomain *domain) { }\r\n// ...\r\nMonoDomain *domain = get_domain ();\r\nmy_code (&domain);\r\n```\r\n\r\n`MonoDomain` (and other Mono types) were typedefed to be `void` which made the\r\nabove call \"valid\". A developer working with code wouldn't immediately know what\r\nwas the issue because of the typedef hiding the actual `MonoDomain` type. During\r\ntests code in monodroid-glue.cc which mistakenly passed a pointer to MonoDomain\r\npointer (a.k.a `void**`) to the Mono runtime caused the runtime to block while\r\nattempting to obtain a lock on the domain where the domain was non existent and,\r\nobviously, not initialized and the call couldn't succeed. Thus the idea to\r\nchange the typedefs to `struct XY` which introduces a unique type, making all\r\nmistakes of this kind (as well as invalid casts) obviously wrong and signalled\r\nby the compiler.\r\n\r\nThis commit does *not* implement much in the are of memory management because\r\nsuch changes would make porting code from master to the branch increasingly\r\ncomplex and error prone. For the same reason `monodroid-glue.cc` is not split up\r\ninto separate files (which is the plan) but merely introduces a handful of\r\nclasses in that file. After the commit is merged into master both of those\r\nchanges will be implemented to further take advantage of C++ capabilities."},{"Id":"8363983840","Type":"PullRequestEvent","CreatedAt":"2018-10-03T21:16:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2250","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add XA0117 TargetFrameworkVersion is deprecated.\" (#2250) at xamarin/xamarin-android","RelatedBody":"Add a new Warning XA0117 which will inform users if they are\r\nusing a `$(TargetFrameworkVersion)` which is going to be\r\ndeprecated in the future.\r\n\r\nIn d16 out minimum supported version will be v4.4 (19).\r\nv2.3 (10) will be removed."},{"Id":"8361462655","Type":"PullRequestEvent","CreatedAt":"2018-10-03T14:24:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2252","RelatedDescription":"Merged pull request \"Switch building of sqlite to cmake\" (#2252) at xamarin/xamarin-android","RelatedBody":"Currently sqlite is built using ndk-build and gradle which creates an\r\nunnecessary dependency on the latter and doesn't give us anything we can't have\r\nwith cmake as supported by the Android SDK.\r\n\r\nThis commit switches the build to cmake, sharing portions of cmake environment\r\nwith the monodroid runtime component as well as getting rid of quite some\r\nbaggage brought in by gradle."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8365153550","Type":"IssuesEvent","CreatedAt":"2018-10-04T03:16:24","Actor":"mfeingol","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3990","RelatedDescription":"Opened issue \"System.NullReferenceException: in Platform.LayoutRootPage\" (#3990) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nCrash in Xamarin Forms. Not sure how actionable this is, unfortunately.\r\n\r\n```\r\nPlatform.LayoutRootPage (Xamarin.Forms.Page page, System.Int32 width, System.Int32 height)\r\nSystem.NullReferenceException: Object reference not set to an instance of an object\r\n\r\nPlatform.LayoutRootPage (Xamarin.Forms.Page page, System.Int32 width, System.Int32 height)\r\nIPlatformLayout.OnLayout (System.Boolean changed, System.Int32 l, System.Int32 t, System.Int32 r, System.Int32 b)\r\nPlatformRenderer.OnLayout (System.Boolean changed, System.Int32 l, System.Int32 t, System.Int32 r, System.Int32 b)\r\nViewGroup.n_OnLayout_ZIIII (System.IntPtr jnienv, System.IntPtr native__this, System.Boolean changed, System.Int32 l, System.Int32 t, System.Int32 r, System.Int32 b)\r\n(wrapper dynamic-method) System.Object.35(intptr,intptr,bool,int,int,int,int)\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nNavigating from one page to another in my app.\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version: Unclear\r\n- IDE: VS 2017 15.8.6\r\n- Platform Target Frameworks:\r\n  - Android: 8.1\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages:\r\n- Affected Devices: LG V30 w/ Android 8.0\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link\r\n\r\n"},{"Id":"8364813902","Type":"PullRequestEvent","CreatedAt":"2018-10-04T01:09:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3989","RelatedDescription":"Opened pull request \"[Android] TabIndex sets focus order for TalkBack traversal\" (#3989) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSetting the `TabIndex` of a `VisualElement` now affects the order in which TalkBack will read the accessible elements on the screen.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #2789 (partially)\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n1. Turn on TalkBack on your Android device.\r\n2. Open Control Gallery.\r\n3. Navigate to A11y TabIndex test page.\r\n4. Swipe right to traverse through the elements. Each element is labeled with its TabIndex (first) and its declaration order (second). You should see it select elements in order of TabIndex first and then DeclarationOrder for all elements with a conflicting TabIndex.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8364785543","Type":"IssuesEvent","CreatedAt":"2018-10-04T00:58:56","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3983","RelatedDescription":"Closed issue \"Android TabbedPage Bottom - Incorrect positioning for text and icons (3.2.0)\" (#3983) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nThe bottom placed Android TabbedPage is rendering the text and icons incorrectly.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a TabbedPage\r\n2. Set android:TabbedPage.ToolbarPlacement=\"Bottom\"\r\n3. Add 4 navigation pages, each with a content page\r\n4. Set the icon and title on the 4 navigation pages\r\n\r\n### Expected Behavior\r\nThe tabs should render with the text beneath the icon.\r\n\r\n### Actual Behavior\r\nThe icon and text overlap\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version: 3.1.0\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.0\r\n- Android Support Library Version: 27.0.2\r\n- Affected Devices: Default Pixel emulator running 8.0 or 9.0\r\n\r\n### Screenshots\r\n\r\nhttps://imgur.com/a/3W3bCyL\r\n\r\n"},{"Id":"8364767983","Type":"IssuesEvent","CreatedAt":"2018-10-04T00:52:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3866","RelatedDescription":"Closed issue \"ERROR: System.NullReferenceException: Xamarin.Forms.Core\\PlatformConfiguration\\iOSSpecific\\Page.cs:134\" (#3866) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAfter upgrading to the latest Xcode (10.0 10A255), VS Studio for Mac (7.6.6 build 17) and Xamarin.Forms(3.2.0.839983), I cleaned the solution, deleted the app from my devices and rebuilt and deployed the app crashed on startup with the following error:\r\n\r\n10:02:25 - ERROR: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at Xamarin.Forms.PlatformConfiguration.iOSSpecific.Page.GetSafeAreaInsets (Xamarin.Forms.BindableObject element) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\PlatformConfiguration\\iOSSpecific\\Page.cs:134 \r\n  at Xamarin.Forms.PlatformConfiguration.iOSSpecific.Page+<>c.<.cctor>b__27_0 (Xamarin.Forms.BindableObject bindable, System.Object oldValue, System.Object newValue) [0x00027] in D:\\a\\1\\s\\Xamarin.Forms.Core\\PlatformConfiguration\\iOSSpecific\\Page.cs:70 \r\n  at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x00120] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:625 \r\n  at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x0015b] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:417 \r\n  at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value, System.Boolean fromStyle, System.Boolean checkAccess) [0x0003d] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:573 \r\n  at Xamarin.Forms.BindableObject.SetValue (Xamarin.Forms.BindableProperty property, System.Object value) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:99 \r\n  at Core.App.InitializeComponent () [0x00023] in /Core/obj/Debug/App.xaml.g.cs:26 \r\n  at Core.App..ctor () [0x00009] in /Core/App.xaml.cs:145 \r\n\r\n### Steps to Reproduce\r\nIn each of the content pages xml the following code statements are present:\r\n **xmlns:iOSSpecific=\"clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core\" \r\n    iOSSpecific:Page.UseSafeArea=\"true\"**\r\n\r\n1. Upgrade to the latest Xcode (10.0 10A255), VS Studio for Mac (7.6.6 build 17) and Xamarin.Forms(3.2.0.839983)\r\n2. Clean the solution, delete the app from your devices\r\n3. Rebuilt, deployed and run the app from the debugger\r\n4. The app should crash upon startup \r\n\r\n### Expected Behavior\r\nApp should not crash\r\n\r\n### Actual Behavior\r\nApp crashed as stated above\r\n\r\n### Basic Information\r\n- Version with issue: VS for Mac 7.6.6 (build 17)\r\n- Last known good version: Previous stable version, previous stable version of Xamarin Forms\r\n- IDE:\r\n- Platform Target Frameworks: iOS and Android\r\n  - iOS:  Target Deployment 9.2, Xcode 10.0\r\n  - Android: Min API 23, Target API 26, SDK TOOLS 26.1.1, PLATFORM TOOLS 28.0.1 \r\n  \r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.6.6 (build 17)\r\nInstallation UUID: 287748ba-1b41-4c91-8123-0c3b994d739f\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.3\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.1.0\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.401/Sdks\r\nSDK Versions:\r\n\t2.1.401\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.300\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.14 (Visual Studio Professional)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Professional)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Professional)\r\nAndroid SDK: /Users/kenwenyon/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706060017\r\nGit revision: 822323b5f6295b271d4c9bfaca4129f90ec41f38\r\nBuild date: 2018-09-18 20:19:40+00\r\nBuild branch: release-7.6-xcode10\r\nXamarin extensions: a83eb4b7ad9174ac2e705f2c4257ecd15688ba97\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.13\r\n\r\n\r\n### Screenshots\r\nPlease see StackTrace above\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8364399119","Type":"IssuesEvent","CreatedAt":"2018-10-03T22:52:07","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3988","RelatedDescription":"Opened issue \"[UWP] Expose platform specific to set IsDynamicOverflowEnabled on the CommandBar\" (#3988) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCurrently IsDynamicOverflowEnabled defaults to true and the user would need to use a Custom Renderer to set IsDynamicOverflowEnabled to false. \r\n\r\n### API / Spec\r\n\r\nPage Platform Specific Windows \r\n```C#\r\nSetToolbarPlacement(bool value)\r\nbool GetDynamicOverflowEnabled\r\n```\r\n\r\n\r\n"},{"Id":"8364350030","Type":"PullRequestEvent","CreatedAt":"2018-10-03T22:38:27","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3987","RelatedDescription":"Opened pull request \"[UWP] Fix TitleView Width and MDP rendering quirks\" (#3987) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixed issues where TitleView would sometimes not render and the width would be variable. \r\n\r\nCurrently the TitleView on UWP will take the entire width thus pushing primary items into the secondary window. The main reason this happens is due to this setting [IsDynamicOverflowEnabled](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.commandbar.isdynamicoverflowenabled#Windows_UI_Xaml_Controls_CommandBar_IsDynamicOverflowEnabled) being set to true by default. I added code so that if it gets set to false it will account for that width and measure correctly but currently that will just have to be done via Custom Renderer or a platform specific down the road\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3828\r\n- fixes #3834\r\n\r\n\r\n### Platforms Affected ### \r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nGo to the Title View Control Gallery and try the various buttons. Make sure it acts how you would expect it to in each case.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8364178901","Type":"PullRequestEvent","CreatedAt":"2018-10-03T21:56:34","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3842","RelatedDescription":"Merged pull request \"Fix PanGesture inside scroll issue https://github.com/xamarin/Xamarin…\" (#3842) at xamarin/Xamarin.Forms","RelatedBody":"fixes #3840\r\nadded private RetrieveElementContentSize method to ScrollViewRenderer for iOS\r\nchanged private OnNativeControlUpdated method: set content size directly\r\naffected iOS"},{"Id":"8364178881","Type":"IssuesEvent","CreatedAt":"2018-10-03T21:56:34","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3840","RelatedDescription":"Closed issue \"Changing TranslationX/Y causes setting scrollView to initial position (0, 0)\" (#3840) at xamarin/Xamarin.Forms","RelatedBody":"Here is small reproduction code.\r\nTry to pan this view and it set scroll view to 0.0 immediately\r\n\r\nI've investigated a little\r\nHandleScrolled is called but ContentOffset is (0,0) - i have no idea \"Why?\"\r\n\r\nTested on iOS simulator (iphone X)\r\n\r\n```csharp\r\npublic class App : Application\r\n\t{\r\n\t\tpublic App()\r\n\t\t{\r\n\r\n\t\t\tvar panGesture = new PanGestureRecognizer();\r\n\r\n\t\t\tvar scroll = new ScrollView\r\n\t\t\t{\r\n\t\t\t\tGestureRecognizers = {\r\n\t\t\t\t\t\tpanGesture\r\n\t\t\t\t\t},\r\n\t\t\t\tContent = new StackLayout\r\n\t\t\t\t{\r\n\t\t\t\t\tChildren = {\r\n\t\t\t\t\t\t\tnew BoxView { Color = Color.Red, HeightRequest = 500 },\r\n\t\t\t\t\t\t\tnew BoxView { Color = Color.Gray, HeightRequest = 500 },\r\n\t\t\t\t\t\t\tnew BoxView { Color = Color.Yellow, HeightRequest = 500 }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tpanGesture.PanUpdated += (sender, e) => {\r\n\t\t\t\tif(e.StatusType == GestureStatus.Running)\r\n\t\t\t\t{\r\n\t\t\t\t\t((View)sender).TranslationX = e.TotalX;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar mainLayout = new AbsoluteLayout();\r\n\t\t\tmainLayout.Children.Add(scroll, new Rectangle(0, 0, 1, 1), AbsoluteLayoutFlags.All);\r\n\r\n\t\t\tMainPage = new ContentPage\r\n\t\t\t{\r\n\t\t\t\tContent = mainLayout\r\n\t\t\t};\r\n\r\n\t\t\tscroll.Scrolled += (sender, e) => {\r\n\r\n\t\t\t};\r\n\r\n\t\t\tMainPage.Appearing += (sender, e) => {\r\n\t\t\t\tscroll.ScrollToAsync(0, 300, true);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n```"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8363248616","Type":"PullRequestEvent","CreatedAt":"2018-10-03T19:09:41","Actor":"xamarin-jenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4922","RelatedDescription":"Opened pull request \"[d16-0-p1] [mtouch] Fix [InternalsVisibleTo] attribute parsing. Fixes #4895\" (#4922) at xamarin/xamarin-macios","RelatedBody":"Backport of #4917.\n\n/cc @spouliot \n\nDescription:\nThe input is a \"user\" string, i.e. not some well formatted metadata.\nSpec [1] mention it's comma separated, but spaces are optional.\n\n[1] https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/specifying-fully-qualified-type-names#specifying-assembly-names\n\nFixes https://github.com/xamarin/xamarin-macios/issues/4895"},{"Id":"8363244953","Type":"PullRequestEvent","CreatedAt":"2018-10-03T19:09:03","Actor":"xamarin-jenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4921","RelatedDescription":"Opened pull request \"[d15-9] [mtouch] Fix [InternalsVisibleTo] attribute parsing. Fixes #4895\" (#4921) at xamarin/xamarin-macios","RelatedBody":"Backport of #4917.\n\n/cc @spouliot \n\nDescription:\nThe input is a \"user\" string, i.e. not some well formatted metadata.\nSpec [1] mention it's comma separated, but spaces are optional.\n\n[1] https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/specifying-fully-qualified-type-names#specifying-assembly-names\n\nFixes https://github.com/xamarin/xamarin-macios/issues/4895"},{"Id":"8363220781","Type":"PullRequestEvent","CreatedAt":"2018-10-03T19:04:48","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4920","RelatedDescription":"Opened pull request \"Remove references to bugzilla and replace with github\" (#4920) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3647\r\n- `git grep bugzilla | grep -v \\?id=` comes up with no more changes to make\r\n"},{"Id":"8363198918","Type":"IssuesEvent","CreatedAt":"2018-10-03T19:01:00","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4895","RelatedDescription":"Closed issue \"Strong name and InternalsVisibleTo crash on device (works on emulator)\" (#4895) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\nThis issue happens when using the [Sentry SDK](https://github.com/getsentry/sentry-dotnet) with Xamarin.iOS. All the assemblies that comprise that SDK are strong named and the `Protocol` package exposes internals to the `Sentry` package.\r\n\r\nI've created a [small reproducible app](https://github.com/bruno-garcia/repro-xamarin-ios-strong-name-internalsvisibleto).\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Checkout the repro: https://github.com/bruno-garcia/repro-xamarin-ios-strong-name-internalsvisibleto\r\n2. Run the app in any device (tested on ipod with iOS 11.4.1)\r\n\r\nIt *works* with the iOS emulators and with Android devices.\r\n\r\n### Expected Behavior\r\nApp starts\r\n\r\n### Actual Behavior\r\nApp crashes\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac (Preview) ===\r\n\r\nVersion 7.7 Preview (7.7 build 1282)\r\nInstallation UUID: 7a7b3772-1996-435b-8eda-9b208ec21ddd\r\nRuntime:\r\n\tMono 5.16.0.151 (2018-06/5e81afa90df) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000151\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.1.0-rc1\r\n\t2.0.6\r\n\t2.0.5\r\n\t1.1.7\r\n\t1.0.10\r\nSDK: /usr/local/share/dotnet/sdk/2.1.400/Sdks\r\nSDK Versions:\r\n\t2.1.400\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.300-rc1-008673\r\n\t2.1.101\r\n\t2.1.4\r\n\t1.1.8\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.8.0.22 (Visual Studio Community)\r\nHash: bd81f1c3\r\nBranch: \r\nBuild date: 2018-08-24 17:10:45-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.16.0.22 (Visual Studio Community)\r\nHash: bd81f1c3\r\nBranch: HEAD\r\nBuild date: 2018-08-24 17:10:45-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.17 (Visual Studio Community)\r\nAndroid SDK: /Users/bruno/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: f11c178f\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707001282\r\nGit revision: cfff48c7cf9ee2db7ccad51846abf697c0bc2b91\r\nBuild date: 2018-09-07 18:06:37+00\r\nBuild branch: release-7.7\r\nXamarin extensions: ce83fabc2c8823a41b3981363c8ee39bdde61612\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nApp builds and deploys to the device, the crash is:\r\n\r\n```\r\nUnhandled Exception:\r\nSystem.MethodAccessException: Method `Bla.DoNothing()' is inaccessible from method `Ble.DontThrow()'\r\n  at (wrapper managed-to-native) System.Object.__icall_wrapper_mono_throw_method_access(intptr,intptr)\r\n  at InternalsVisibleStrongNamed.Application.Main (System.String[] args) <0x100abb070 + 0x00023> in <e9f72ebbc6ca4ed589535b6cc146eceb#72fb15896f6c5cfbdf855a3eee9de4dc>:0 \r\n2018-09-30 14:23:45.302 InternalsVisibleStrongNamed[387:147683] Unhandled managed exception:\r\nMethod `Bla.DoNothing()' is inaccessible from method `Ble.DontThrow()' (System.MethodAccessException)\r\n  at (wrapper managed-to-native) System.Object.__icall_wrapper_mono_throw_method_access(intptr,intptr)\r\n  at InternalsVisibleStrongNamed.Application.Main (System.String[] args) <0x100abb070 + 0x00023> in <e9f72ebbc6ca4ed589535b6cc146eceb#72fb15896f6c5cfbdf855a3eee9de4dc>:0 \r\n2018-09-30 14:23:45.302 InternalsVisibleStrongNamed[387:147683] critical: Stacktrace:\r\n\r\n2018-09-30 14:23:45.302 InternalsVisibleStrongNamed[387:147683] critical: \r\nNative stacktrace:\r\n\r\n2018-09-30 14:23:45.303 InternalsVisibleStrongNamed[387:147683] critical: \t0   InternalsVisibleStrongNamed         0x0000000100c7c74c InternalsVisibleStrongNamed + 1869644\r\n2018-09-30 14:23:45.303 InternalsVisibleStrongNamed[387:147683] critical: \t1   libsystem_platform.dylib            0x0000000181eb8b58 _sigtramp + 52\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t2   libsystem_pthread.dylib             0x0000000181ebe288 <redacted> + 376\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t3   libsystem_c.dylib                   0x0000000181c8bd0c abort + 140\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t4   InternalsVisibleStrongNamed         0x0000000100d82bf0 xamarin_get_block_descriptor + 4448\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t5   InternalsVisibleStrongNamed         0x0000000100cb90c0 InternalsVisibleStrongNamed + 2117824\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t6   InternalsVisibleStrongNamed         0x0000000100c7c398 InternalsVisibleStrongNamed + 1868696\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t7   InternalsVisibleStrongNamed         0x0000000100c7b0e8 InternalsVisibleStrongNamed + 1863912\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t8   InternalsVisibleStrongNamed         0x0000000100c73314 InternalsVisibleStrongNamed + 1831700\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t9   InternalsVisibleStrongNamed         0x0000000100b0c308 InternalsVisibleStrongNamed + 361224\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t10  InternalsVisibleStrongNamed         0x0000000100af9198 InternalsVisibleStrongNamed + 283032\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t11  InternalsVisibleStrongNamed         0x0000000100abb094 InternalsVisibleStrongNamed + 28820\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t12  InternalsVisibleStrongNamed         0x0000000100af85a8 InternalsVisibleStrongNamed + 279976\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t13  InternalsVisibleStrongNamed         0x0000000100c8ba10 InternalsVisibleStrongNamed + 1931792\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t14  InternalsVisibleStrongNamed         0x0000000100cf2094 InternalsVisibleStrongNamed + 2351252\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t15  InternalsVisibleStrongNamed         0x0000000100cf7338 InternalsVisibleStrongNamed + 2372408\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t16  InternalsVisibleStrongNamed         0x0000000100c72b28 InternalsVisibleStrongNamed + 1829672\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t17  InternalsVisibleStrongNamed         0x0000000100d88cfc xamarin_find_protocol_wrapper_type + 24688\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t18  InternalsVisibleStrongNamed         0x0000000100abaf38 InternalsVisibleStrongNamed + 28472\r\n2018-09-30 14:23:45.304 InternalsVisibleStrongNamed[387:147683] critical: \t19  libdyld.dylib                       0x0000000181bedfc0 <redacted> + 4\r\n2018-09-30 14:23:45.305 InternalsVisibleStrongNamed[387:147683] critical: \r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\nApplication 'Test.InternalsVisibleStrongNamed' terminated.\r\n```\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://github.com/bruno-garcia/repro-xamarin-ios-strong-name-internalsvisibleto\r\n\r\nBranch [work/removed-strong-naming](https://github.com/bruno-garcia/repro-xamarin-ios-strong-name-internalsvisibleto/tree/work/removed-strong-naming) had the strong name removed and the app starts normally.\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8363198947","Type":"PullRequestEvent","CreatedAt":"2018-10-03T19:00:52","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4917","RelatedDescription":"Merged pull request \"[mtouch] Fix [InternalsVisibleTo] attribute parsing. Fixes #4895\" (#4917) at xamarin/xamarin-macios","RelatedBody":"The input is a \"user\" string, i.e. not some well formatted metadata.\nSpec [1] mention it's comma separated, but spaces are optional.\n\n[1] https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/specifying-fully-qualified-type-names#specifying-assembly-names\n\nFixes https://github.com/xamarin/xamarin-macios/issues/4895"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":17,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":80,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":88,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":59,"RawContent":null}]}},"RunOn":"2018-10-04T05:30:54.7019541Z","RunDurationInMilliseconds":3685}