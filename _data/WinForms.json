{"Data":{"GitHub":{"Issues":[{"Id":"608006908","IsPullRequest":false,"CreatedAt":"2020-04-28T04:00:42","Actor":"danmosemsft","Number":"3151","RawContent":null,"Title":"SetLastError=true missing on some extern declarations","State":"open","Body":"There are quite a lot of extern declarations for Win32 API in the winforms repo that don't use SetLastError=true even though the docs indicate the API sets an error retrievable with GetLastError. (I attached an approximate list of some). \r\n\r\nOf course in many, possibly all of those cases the code never calls `Marshal.GetLastWin32Error()` nor throws `Win32Exception` so it doesn't matter. I am not sure whether to interpret [our guidance](https://docs.microsoft.com/en-us/dotnet/standard/native-interop/best-practices#dllimport-attribute-settings) Â to mean \"apply SetLastError=true whenever the API is documented to set last error\" or \"apply SetLastError=true whenever the API sets last error and you also intend to retrieve it\". The latter saves the infrastructure calling GetLastError() for you unnecessarily, but that is presumably very fast - and avoids the possibility of reading some previous API's error because you hadn't updated the extern declaration.\r\n\r\n@AaronRobinsonMSFT @JeremyKuhne  ? \r\n\r\n[list.txt](https://github.com/dotnet/winforms/files/4543243/list.txt)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3151","RelatedDescription":"Open issue \"SetLastError=true missing on some extern declarations\" (#3151)"},{"Id":"607953290","IsPullRequest":false,"CreatedAt":"2020-04-28T01:16:27","Actor":"RussKie","Number":"3150","RawContent":null,"Title":"Tests fail running out of handles","State":"open","Body":"**Problem description:**\r\n\r\nHaving moved to a different pool (#3105), and (temporarily) disabled tests that relied on `RemoteExecutor` (#3116), we are now observing new build failures with the following:\r\n```\r\n    System.Windows.Forms.Tests.ProfessionalColorTableTests.ProfessionalColorTable_Properties_Get_ReturnsExpected(factory: Func`2 { Method = System.Drawing.Color <Properties_TestData>b__1_49(System.Windows.Forms.ProfessionalColorTable), Target = <>c { } }) [FAIL]\r\n      System.Runtime.InteropServices.COMException : The current process has used all of its system allowance of handles for Window Manager objects. (0x80070486)\r\n      Stack Trace:\r\n           at System.Threading.Monitor.ReliableEnter(Object obj, Boolean& lockTaken)\r\n           at System.Threading.Monitor.Enter(Object obj, Boolean& lockTaken)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/NativeWindow.cs(423,0): at System.Windows.Forms.NativeWindow.CreateHandle(CreateParams cp)\r\n        .....\r\n        --- End of stack trace from previous location ---\r\n\r\n    System.Windows.Forms.Tests.ScrollableControlTests.ScrollableControl_SetAutoScrollMargin_InvokeWithHandle_Success(autoScroll: False, width: 1, height: 2, expectedAutoScrollMargin: {Width=1, Height=2}, expectedLayoutCallCount: 0) [FAIL]\r\n      System.ComponentModel.Win32Exception : Error creating window handle.\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/NativeWindow.cs(491,0): at System.Windows.Forms.NativeWindow.CreateHandle(CreateParams cp)\r\n        .....\r\n\r\n    System.Windows.Forms.Tests.MonthCalendarTests.MonthCalendar_SelectionRange_SetWithHandle_GetReturnsExpected(value: SelectionRange: Start: 4/28/2020 12:00:00 AM, End: 4/28/2020 12:00:00 AM, expectedSelectionStart: 2020-04-28T00:00:00.0000000+00:00, expectedSelectionEnd: 2020-04-28T00:00:00.0000000+00:00) [FAIL]\r\n      System.ComponentModel.Win32Exception : Error creating window handle.\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/NativeWindow.cs(491,0): at System.Windows.Forms.NativeWindow.CreateHandle(CreateParams cp)\r\n        ...\r\n```\r\n\r\nHere's one of examples: https://dev.azure.com/dnceng/public/_build/results?buildId=620251&view=results, build log: [System.Windows.Forms.Tests_netcoreapp5.0_x64 (20).log](https://github.com/dotnet/winforms/files/4542863/System.Windows.Forms.Tests_netcoreapp5.0_x64.20.log)\r\nThere is no code change, only an MD file. Debug build has succeeded, whilst Release has failed.\r\n\r\n**Expected behavior:**\r\n\r\nTests pass without running out of handles.\r\n\r\n**Minimal repro:**\r\n\r\nN/A, builds fail intermittently.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3150","RelatedDescription":"Open issue \"Tests fail running out of handles\" (#3150)"},{"Id":"607927339","IsPullRequest":true,"CreatedAt":"2020-04-27T23:54:07","Actor":"dotnet-maestro[bot]","Number":"3149","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200427.15\r\n- **Date Produced**: 4/28/2020 4:33 AM\r\n- **Commit**: e1ffadd6521b29db350e701b11d78a286ecd783a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20227.5 to 5.0.0-preview.5.20227.15\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3149)\r\n","Url":"https://github.com/dotnet/winforms/pull/3149","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#3149)"},{"Id":"607703857","IsPullRequest":true,"CreatedAt":"2020-04-27T23:13:51","Actor":"timheuer","Number":"3148","RawContent":null,"Title":"Updating contributing for broken link","State":"closed","Body":"There was a broken link pointing to CoreFX contributing doc.  Updated to point to dotnet/runtime contributing doc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3148)","Url":"https://github.com/dotnet/winforms/pull/3148","RelatedDescription":"Closed or merged PR \"Updating contributing for broken link\" (#3148)"},{"Id":"607596342","IsPullRequest":true,"CreatedAt":"2020-04-27T23:09:58","Actor":"dotnet-maestro[bot]","Number":"3147","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200427.5\r\n- **Date Produced**: 4/27/2020 6:05 PM\r\n- **Commit**: f283945906330da0217d3e755a825fc36a309507\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20226.8 to 5.0.0-preview.5.20227.5\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3147)\r\n","Url":"https://github.com/dotnet/winforms/pull/3147","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3147)"},{"Id":"607474114","IsPullRequest":false,"CreatedAt":"2020-04-27T11:35:38","Actor":"PDostalek","Number":"3146","RawContent":null,"Title":"[loc][Query][winforms] Localizability of strings","State":"open","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question to Core team.\r\nThanks in advance for the reply\r\n\r\n\r\nId | File Name Live Page Extended | String Resource ID | Full Source String | Query: | Answer:\r\n-- | -- | -- | -- | -- | --\r\n49,502 | System.Windows.Forms\\src\\Resources\\xlf\\SR.xlf | 0;   \"TaskDialogCannotUpdateAfterNavigation\" | Cannot manipulate the task   dialog immediately after navigating it. Please wait for the {0} event of the   next page to occur. | Could you please explain what   exactly you mean by 'navigating a dialog'? How is it different from   manipulating a dialog? Normally we'd understand 'to navigate' to mean when   the user is working with the dialog, clicking buttons etc. But here the   meaning is apparently very different.          Affected ResourceIDs:     0; \"TaskDialogCannotNavigateClosedDialog\"     0; \"TaskDialogCannotNavigateWithinNavigationEventHandler\"     0; \"TaskDialogCannotNavigateWithinRadioButtonCheckedChanged\"     0; \"TaskDialogCannotNavigateWithoutDialog\"     0; \"TaskDialogCannotUpdateAfterNavigation\"     0; \"TaskDialogNavigationNotCompleted\" | Â \r\n49,503 | System.Windows.Forms\\src\\Resources\\xlf\\SR.xlf | 0;   \"TaskDialogCollectionAlreadyBound\" | One of the collections of this   {0} is already bound to a {1} instance. | Please provide the meaning of   placeholder {0} in the below ResourceIDs:          0; \"TaskDialogCollectionAlreadyBound\"     One of the collections of this {0} is already bound to a {1}   instance.          0; \"TaskDialogControlAlreadyBound\"     One of the controls of this {0} is already bound to a {1} instance. | Â \r\n49,513 | System.Windows.Forms\\src\\Resources\\xlf\\SR.xlf | 0;   \"TaskDialogCollectionAlreadyBound\" | One of the collections of this   {0} is already bound to a {1} instance. | Please confirm that placeholder   0 is referred to task dialog | Â \r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3146","RelatedDescription":"Open issue \"[loc][Query][winforms] Localizability of strings\" (#3146)"},{"Id":"607396899","IsPullRequest":false,"CreatedAt":"2020-04-27T09:40:54","Actor":"Ashley-Li","Number":"3145","RawContent":null,"Title":"VS hung after Framework project supported controls migrated to core project and run it","State":"open","Body":"* .NET Core Version: \r\n5.0.100-preview.5.20226.6\r\n\r\n**Problem description:**\r\nAfter step5,an error pops up and vs hung,the webBrowser cannot be display normally.\r\n![migrate_control_issue](https://user-images.githubusercontent.com/56664234/80357877-300bfb00-88ae-11ea-8d31-e5ab0ebb49c4.gif)\r\n\r\n\r\n**Expected behavior:**\r\nAfter step5,there is no error pops up and vs works well, the webBrowser should be display normally.\r\n\r\n**More info**\r\n\t 1. This issue also can reproduce with .Net Core 3.1.\r\n\t 2. This issue cannot reproduce after closed the form designer or after save this project and reopen it.\r\n         3. After the saved project is opened and then run, the issue cannot reproduce, so the reproduction project cannot be provided.\r\n\r\n**Minimal repro:**\r\n  1.  Create a winforms .Net framework project.\r\n  2.  Add a webBrowser control to from.\r\n  3.  Create a winforms core project and migrate the code of From1.Designer.cs in the Framework project above to this core project.\r\n  4. Open the from designer and examine the webBrowser  control.(We should see red âXâ on the unsupported controls.)\r\n  5. Save and run the  winforms core project.\r\n","Url":"https://github.com/dotnet/winforms/issues/3145","RelatedDescription":"Open issue \"VS hung after Framework project supported controls migrated to core project and run it\" (#3145)"},{"Id":"607362132","IsPullRequest":true,"CreatedAt":"2020-04-27T09:14:40","Actor":"dotnet-maestro[bot]","Number":"3144","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200426.8\r\n- **Date Produced**: 4/27/2020 8:22 AM\r\n- **Commit**: 90cb824b71981d3f3161481217e370562ad4b20a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20226.4 to 5.0.0-preview.5.20226.8\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3144)","Url":"https://github.com/dotnet/winforms/pull/3144","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3144)"},{"Id":"605772805","IsPullRequest":true,"CreatedAt":"2020-04-27T07:04:18","Actor":"weltkante","Number":"3129","RawContent":null,"Title":"make tests more robust","State":"closed","Body":"Fixes #3121\r\n\r\n## Proposed changes\r\nMake tests more robust against machine specific environments:\r\n* taskbar not docked to the bottom\r\n* having more than one monitor (or a real large monitor)\r\n* having monitors with different DPI settings\r\n\r\n## Customer Impact\r\n- none outside of this repository, this only affects tests\r\n- for developers on this repository, more people should be able to successfully run tests locally\r\n\r\n## Regression? \r\n- arguably adding tests which are written against a specific machine are a regression ;-)\r\n\r\n## Risk\r\n- making tests slightly more tolerant may hide something, but its unlikely\r\n\r\n## Test methodology\r\n- running tests locally now succeeds\r\n- manually debugging tests to make sure the changes are minimal invasive\r\n\r\n## Test environment(s)\r\n- a machine with two monitors having different DPIs\r\n- secondary monitor placed to the right of the primary monitor\r\n- task bar docket to the left on the primary monitor, to the right on secondary monitor\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3129)","Url":"https://github.com/dotnet/winforms/pull/3129","RelatedDescription":"Closed or merged PR \"make tests more robust\" (#3129)"},{"Id":"606517937","IsPullRequest":true,"CreatedAt":"2020-04-27T06:32:34","Actor":"dotnet-maestro[bot]","Number":"3139","RawContent":null,"Title":"[release/5.0-preview4] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:440f0db1-50fd-4e00-9b1a-08d7e1735b84)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 440f0db1-50fd-4e00-9b1a-08d7e1735b84\r\n- **Build**: 20200423.9\r\n- **Date Produced**: 4/24/2020 9:30 PM\r\n- **Commit**: 0ce44af8241fafb5c6080b111cc00391308db681\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20221.7 to 5.0.0-preview.4.20223.9\r\n\r\n[marker]: <> (End:440f0db1-50fd-4e00-9b1a-08d7e1735b84)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3139)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3139","RelatedDescription":"Closed or merged PR \"[release/5.0-preview4] Update dependencies from dotnet/runtime\" (#3139)"},{"Id":"607259335","IsPullRequest":false,"CreatedAt":"2020-04-27T05:58:45","Actor":"Vino-Wang","Number":"3143","RawContent":null,"Title":"An error dialog pops up after clicking Add button in DataGridViewColumn Collection Editor","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-preview.5.20226.6\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nAn error dialog is occurring after clicking the Add button.\r\n![Error](https://user-images.githubusercontent.com/18568603/80338522-1a3b0d80-888f-11ea-90a4-947014b9608d.png)\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n**Expected behavior:**\r\nThe columns can be added successfully without any error/warning popping up.\r\n\r\n**More info:**\r\nThis issue also can reproduce with .Net Core 3.1.\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project.\r\n2.\tAdd a propertyGrid control to form.\r\n3.\tAdd a DataGridView control to form.\r\n4.\tAdd this code in form initializeComponent part: propertyGrid1.SelectedObject = dataGridView1;\r\n5.\tFind the Columns property of DataGridView, click the Browser button to show the DataGridViewColumn Collection Editor.\r\n6.\tClick the Add button.\r\n\r\nOr \r\n1.\tRun the attached project.\r\n[DataGridViewCell.zip](https://github.com/dotnet/winforms/files/4537739/DataGridViewCell.zip)\r\n2.\tRun it, and do the above step 5-6.\r\n","Url":"https://github.com/dotnet/winforms/issues/3143","RelatedDescription":"Open issue \"An error dialog pops up after clicking Add button in DataGridViewColumn Collection Editor\" (#3143)"},{"Id":"607257929","IsPullRequest":false,"CreatedAt":"2020-04-27T05:55:40","Actor":"Vino-Wang","Number":"3142","RawContent":null,"Title":"An error dialog pops up after clicking Add button in ToolStripItem Collection Editor","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-preview.5.20226.6\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nAn error dialog is occurring after clicking the Add button.\r\n![Error](https://user-images.githubusercontent.com/18568603/80338361-badcfd80-888e-11ea-9040-8715186848eb.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe items can be added successfully without any error/warning popping up.\r\n\r\n**More info:**\r\n\r\n1. This issue also can reproduce with BindingNavigator/ContextMenuStrip/MenuStrip/StatusStrip/ToolStrip controls\r\n2. This issue also can reproduce with .Net Core 3.1.\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project.\r\n2.\tAdd a propertyGrid control to form.\r\n3.\tAdd a MenuStrip control to form.\r\n4.\tAdd this code in form initializeComponent part: propertyGrid1.SelectedObject = menuStrip1;\r\n5.\tFind the Items property of MenuStrip, click the Browser button to show the ToolStripItem Collection Editor.\r\n6.\tClick the Add button.\r\n\r\nOr \r\n1.\tRun the attached project.\r\n[System.ToolStripItem.zip](https://github.com/dotnet/winforms/files/4537729/System.ToolStripItem.zip)\r\n2.\tRun it, and do the above step 5-6.","Url":"https://github.com/dotnet/winforms/issues/3142","RelatedDescription":"Open issue \"An error dialog pops up after clicking Add button in ToolStripItem Collection Editor\" (#3142)"},{"Id":"607244397","IsPullRequest":true,"CreatedAt":"2020-04-27T05:24:58","Actor":"RussKie","Number":"3141","RawContent":null,"Title":"Fix RichTextBox Rtf encoding","State":"open","Body":"\r\nFixes #3032\r\n\r\nCherry-picked from 9729e9cd6d4289150969bc3b481518b71f37a086\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- .NET Core Encoding.Default gets UTF-8, not the default code page. Change our code to get the code page as we're sending data to the control as ASCII.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers who may have relied on the original behaviour of RTB to have ASCII as the default code page will be able to continue porting their apps to .NET Core 3.1.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Limited to RTB use in .NET Core 3.1\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\nAfter assigning to `richTextBox.Rtf` some rtf code with nonbreaking space (160 char code), RichTextBox converts it to `\\'c2\\~` insted of `\\~`.\r\n![Snipaste_2020-04-02_15-01-27](https://user-images.githubusercontent.com/17767561/78247868-4bc0f300-74f4-11ea-9805-b74f9484ebcc.png)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3141)","Url":"https://github.com/dotnet/winforms/pull/3141","RelatedDescription":"Open PR \"Fix RichTextBox Rtf encoding\" (#3141)"},{"Id":"606251274","IsPullRequest":true,"CreatedAt":"2020-04-27T01:59:07","Actor":"v-chmart","Number":"3132","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20200424","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nLocalization update\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3132)","Url":"https://github.com/dotnet/winforms/pull/3132","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20200424\" (#3132)"},{"Id":"606511974","IsPullRequest":true,"CreatedAt":"2020-04-27T01:06:30","Actor":"dotnet-maestro[bot]","Number":"3138","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200426.4\r\n- **Date Produced**: 4/26/2020 10:39 PM\r\n- **Commit**: b93693ed830a944dde64138d305e3506bcaea911\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20224.1 to 5.0.0-preview.5.20226.4\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3138)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3138","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3138)"},{"Id":"606633158","IsPullRequest":false,"CreatedAt":"2020-04-24T23:19:16","Actor":"AdamYoblick","Number":"3140","RawContent":null,"Title":"Move tests to helix","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/3140","RelatedDescription":"Open issue \"Move tests to helix\" (#3140)"},{"Id":"606461337","IsPullRequest":true,"CreatedAt":"2020-04-24T17:10:49","Actor":"M-Lipin","Number":"3137","RawContent":null,"Title":"Fixing Issue 3124 property grid view list box accessibility issues","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3124\r\n\r\n\r\n## Proposed changes\r\n\r\n- Reworking PropertyGridView ListBox AccessibleObject implementation to inherit from standalone ListBox AccessibleObject.\r\n- Adding safer calls to system IAccessible object (COM) to prevent unexpected exceptions while accessing native accessibility when this is not found.\r\n- Improving accessibility navigation to ListBox within the PropertyGrid to prevent navigating to the list when this is hidden.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not experience unexpected errors when working with PropertyGridView with assist of Accessibility client apps.\r\n- Customers will be able to navigate correctly thru the list of PropertyGridView properties and distinct Properties' lists of available options.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![Before](https://user-images.githubusercontent.com/23213980/80238646-74598a00-8667-11ea-87ca-88b7205bd763.gif)\r\n\r\n### After\r\n![After](https://user-images.githubusercontent.com/23213980/80238676-7d4a5b80-8667-11ea-930e-8b0c161cb869.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Unit testing.\r\n- Automation test.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.20072.3\r\n  Commit:  c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3137)","Url":"https://github.com/dotnet/winforms/pull/3137","RelatedDescription":"Open PR \"Fixing Issue 3124 property grid view list box accessibility issues\" (#3137)"},{"Id":"606303078","IsPullRequest":false,"CreatedAt":"2020-04-24T13:12:21","Actor":"M-Lipin","Number":"3136","RawContent":null,"Title":"PropertyGridView DropDownHolder is not covered by unit tests","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nDropDownHolder control implementation is not covered by unit tests.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3136","RelatedDescription":"Open issue \"PropertyGridView DropDownHolder is not covered by unit tests\" (#3136)"},{"Id":"606262273","IsPullRequest":true,"CreatedAt":"2020-04-24T12:27:30","Actor":"dotnet-maestro[bot]","Number":"3135","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200424.1\r\n- **Date Produced**: 4/24/2020 11:03 AM\r\n- **Commit**: 4034228a3d3fa093e21479765f03c10c0443fc68\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20223.4 to 5.0.0-preview.5.20224.1\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3135)","Url":"https://github.com/dotnet/winforms/pull/3135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3135)"},{"Id":"606261969","IsPullRequest":true,"CreatedAt":"2020-04-24T12:01:43","Actor":"dotnet-maestro[bot]","Number":"3134","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200421.14\r\n- **Date Produced**: 4/21/2020 10:41 PM\r\n- **Commit**: e13ae00db986456a5012f2d9d479d893b3f5aff6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3134)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3134","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3134)"},{"Id":"606252581","IsPullRequest":false,"CreatedAt":"2020-04-24T11:44:01","Actor":"hughbe","Number":"3133","RawContent":null,"Title":"Should we validate pointers more/better in WndProc","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWe've turned a lot of `WndProc` related code into pointers. This is great, as it helps with marshalling etc., is so much cleaner and avoids allocations.\r\n\r\nHowever, I've noticed this may lead to problems.\r\nConsider `ListView.WmReflectNotify` which handles `WM.REFLECT | WM.NOTIFY`, as below.\r\n\r\n```cs\r\nprivate unsafe void WmReflectNotify(ref Message m)\r\n{\r\n    User32.NMHDR* nmhdr = (User32.NMHDR*)m.LParam;\r\n\r\n    switch (nmhdr->code)\r\n    {\r\n        case (int)NM.CUSTOMDRAW:\r\n            CustomDraw(ref m);\r\n            break;\r\n\r\n        case (int)LVN.BEGINLABELEDITW:\r\n            {\r\n                NMLVDISPINFO* dispInfo = (NMLVDISPINFO*)m.LParam;\r\n                LabelEditEventArgs e = new LabelEditEventArgs(dispInfo->item.iItem);\r\n                ...\r\n            }\r\n\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\nThe code `switch (nmhdr->code)` can now throw `AccessViolationException` (I think it used to throw NRE in .NET Framework)\r\n\r\nThe code `dispInfo->item.iItem` can now also throw `AccessViolationException` (I think it used to throw NRE in .NET Framework)\r\n\r\nShould we harden these against crashes/null dereferences? I don't really see how the native code in comctl32 would send `NULL` pointers but I obviously don't have the code. Also theres a chance that people could pass bogus data into the method.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\nMaybe validate things, how? Early returns? Throwing - probably not.\r\n\r\n**Will this feature affect UI controls?**\r\nNo","Url":"https://github.com/dotnet/winforms/issues/3133","RelatedDescription":"Open issue \"Should we validate pointers more/better in WndProc\" (#3133)"},{"Id":"605754674","IsPullRequest":true,"CreatedAt":"2020-04-24T06:12:39","Actor":"dotnet-maestro[bot]","Number":"3128","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200423.4\r\n- **Date Produced**: 4/23/2020 5:27 PM\r\n- **Commit**: dc3c4dc076171bc9a7c27c527d4d814eaae06cb2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.4\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3128)","Url":"https://github.com/dotnet/winforms/pull/3128","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3128)"},{"Id":"606020639","IsPullRequest":false,"CreatedAt":"2020-04-24T03:55:45","Actor":"cston","Number":"3131","RawContent":null,"Title":"Support creating \"single instance\" applications","State":"open","Body":"Consider support for creating \"single instance\" applications similar to the [VisualBasic Application Model](https://docs.microsoft.com/en-us/dotnet/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model?view=netframework-4.8#uses-for-the-application-model).\r\n\r\nIn the VisualBasic model, an application opts-in by setting `WindowsFormsApplicationBase.IsSingleInstance = True`.\r\n\r\nWhen a second instance of the application is launched, the first instance fires a `WindowsFormsApplicationBase.StartupNextInstance` event, and the second instance terminates.\r\n","Url":"https://github.com/dotnet/winforms/issues/3131","RelatedDescription":"Open issue \"Support creating \"single instance\" applications\" (#3131)"},{"Id":"605925336","IsPullRequest":true,"CreatedAt":"2020-04-23T23:06:09","Actor":"AdamYoblick","Number":"3130","RawContent":null,"Title":"add dotnet tools feed","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3130)","Url":"https://github.com/dotnet/winforms/pull/3130","RelatedDescription":"Closed or merged PR \"add dotnet tools feed\" (#3130)"},{"Id":"605703419","IsPullRequest":false,"CreatedAt":"2020-04-23T17:10:35","Actor":"hughbe","Number":"3127","RawContent":null,"Title":"TreeNode.UpdateNode doesn't check if the node's TreeView is disposed","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nMaster\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nMany functions and properties in `TreeNode` check `if (TreeView.IsDisposed)` before doing anything. This prevents `ObjectDisposedExceptions` thrown.\r\n\r\nHowever, `UpdateNode` doesn't cause this check, meaning `ObjectDisposedException` is thrown\r\n\r\n**Expected behavior:**\r\n\r\nNo exception thrown, setting is succesful.\r\n\r\n**Minimal repro:**\r\n```cs\r\n[WinFormsTheory]\r\n[MemberData(nameof(Text_SetWithTreeView_TestData))]\r\npublic void TreeNode_Text_SetWithTreeViewDisposed_GetReturnsExpected(bool scrollable, string value, string expected)\r\n{\r\n    using var control = new TreeView\r\n    {\r\n        Scrollable = scrollable\r\n    };\r\n    var node = new TreeNode();\r\n    control.Nodes.Add(node);\r\n    Assert.NotEqual(IntPtr.Zero, control.Handle);\r\n    control.Dispose();\r\n\r\n    node.Text = value;\r\n    Assert.Equal(expected, node.Text);\r\n    Assert.False(control.IsHandleCreated);\r\n\r\n    // Set same\r\n    node.Text = value;\r\n    Assert.Equal(expected, node.Text);\r\n    Assert.False(control.IsHandleCreated);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/3127","RelatedDescription":"Open issue \"TreeNode.UpdateNode doesn't check if the node's TreeView is disposed\" (#3127)"},{"Id":"605554539","IsPullRequest":true,"CreatedAt":"2020-04-23T13:50:32","Actor":"hughbe","Number":"3126","RawContent":null,"Title":"Add TreeNode property tests, add missing argument validation and make idempotent","State":"open","Body":"## Proposed Changes\r\n- Add TreeNode property tests\r\n- Fix TreeNode image index validation and make idempotent\r\n- Return from `UpdateNode` the node's tree view is disposed: fixes #3127\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3126)","Url":"https://github.com/dotnet/winforms/pull/3126","RelatedDescription":"Open PR \"Add TreeNode property tests, add missing argument validation and make idempotent\" (#3126)"},{"Id":"605440657","IsPullRequest":true,"CreatedAt":"2020-04-23T11:21:15","Actor":"dotnet-maestro[bot]","Number":"3125","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200423.1\r\n- **Date Produced**: 4/23/2020 10:08 AM\r\n- **Commit**: bac79b9f62595924f71cf6666283e9fc60a8beea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20220.15 to 5.0.0-preview.5.20223.1\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3125)","Url":"https://github.com/dotnet/winforms/pull/3125","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3125)"},{"Id":"605305914","IsPullRequest":false,"CreatedAt":"2020-04-23T07:29:53","Actor":"M-Lipin","Number":"3124","RawContent":null,"Title":"Accessibility: PropertyGrid ListBox accessibility issues","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\n**Have you experienced this same bug with .NET Framework?**\r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nPropertyGrid ListBox items are inaccessible when hovering over by mouse: Inspect does not show the focus rectangle around the item and in some cases there are exceptions thrown when getting info from system IAccessible.\r\n\r\n**Expected behavior:**\r\n- No issues with accessing PropertyGrid ListBox and ListBox items.\r\n\r\n**Minimal repro:**\r\n- Create WinForms app with PropertyGrid, set SelectedObject to some entity (for instance button added to the same Form)\r\n- Run app and Inspect, analyze with Inspect the ListBox items of some List property (for instance Accessible Role)","Url":"https://github.com/dotnet/winforms/issues/3124","RelatedDescription":"Open issue \"Accessibility: PropertyGrid ListBox accessibility issues\" (#3124)"},{"Id":"605139588","IsPullRequest":true,"CreatedAt":"2020-04-23T02:51:11","Actor":"Anipik","Number":"3123","RawContent":null,"Title":"Manually add publishing for p4 and p5 channels in preview4","State":"closed","Body":"The change got merged in master, it needed to be in preview4 \r\nso just cherry-picking the change\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3123)","Url":"https://github.com/dotnet/winforms/pull/3123","RelatedDescription":"Closed or merged PR \"Manually add publishing for p4 and p5 channels in preview4\" (#3123)"},{"Id":"605120765","IsPullRequest":false,"CreatedAt":"2020-04-22T22:45:11","Actor":"weltkante","Number":"3122","RawContent":null,"Title":"Bugfixes from Xunit.StaFact nuget package not consumed","State":"open","Body":"**.NET Core Version:**\r\n5.0 master\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nnot applicable\r\n\r\n**Problem description:**\r\n\r\nThe nuget package `Xunit.StaFact` used by WinForms had a bug which prevents execution of tests inside VS: <details><summary>VS test error message</summary>\r\n\r\n```\r\n[xUnit.net 00:00:00.47] System.Windows.Forms.Tests: Catastrophic error during deserialization: System.InvalidOperationException: Could not de-serialize type 'Xunit.Sdk.WinFormsTheoryTestCase' because it lacks a parameterless constructor.\r\n   at Xunit.Serialization.XunitSerializationInfo.DeserializeSerializable(Type type, String serializedValue) in C:\\Dev\\xunit\\xunit\\src\\common\\XunitSerializationInfo.cs:line 213\r\n   at Xunit.Serialization.XunitSerializationInfo.Deserialize(Type type, String serializedValue) in C:\\Dev\\xunit\\xunit\\src\\common\\XunitSerializationInfo.cs:line 110\r\n   at Xunit.Sdk.SerializationHelper.Deserialize[T](String serializedValue) in C:\\Dev\\xunit\\xunit\\src\\common\\SerializationHelper.cs:line 40\r\n   at Xunit.Sdk.XunitTestFrameworkExecutor.Deserialize(String value) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\XunitTestFrameworkExecutor.cs:line 84\r\n   at Xunit.DefaultTestCaseBulkDeserializer.<BulkDeserialize>b__2_0(String serialization) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.utility\\Descriptor\\DefaultTestCaseBulkDeserializer.cs:line 22\r\n   at System.Linq.Utilities.<>c__DisplayClass2_0`3.<CombineSelectors>b__0(TSource x)\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Xunit.DefaultTestCaseBulkDeserializer.BulkDeserialize(List`1 serializations) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.utility\\Descriptor\\DefaultTestCaseBulkDeserializer.cs:line 22\r\n   at Xunit.Xunit2.BulkDeserialize(List`1 serializations) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.utility\\Frameworks\\v2\\Xunit2.cs:line 74\r\n   at Xunit.Runner.VisualStudio.VsTestRunner.RunTestsInAssembly(IRunContext runContext, IFrameworkHandle frameworkHandle, LoggerHelper logger, TestPlatformContext testPlatformContext, RunSettings runSettings, IMessageSinkWithTypes reporterMessageHandler, AssemblyRunInfo runInfo) in C:\\Dev\\xunit\\xunit\\src\\xunit.runner.visualstudio\\VsTestRunner.cs:line 562\r\n```\r\n\r\n</details>\r\n\r\n The package is referenced in version `0.3.18` and the issue has been [brought up](https://github.com/AArnott/Xunit.StaFact/issues/30) and [fixed](https://github.com/AArnott/Xunit.StaFact/pull/37) in the origin repository, it is available in nuget package `1.0.19-beta`\r\n\r\nUnfortunately just updating the nuget package doesn't work, because to properly support `WinFormsStaFact` they also added a dependency on `FrameworkReference` on `Microsoft.WindowsDesktop.App` to the nuget package.\r\n\r\nWhen updating the nuget package this leads to referencing the SDK WinForms in addition to the locally built WinForms, causing conflicts in all test projects.\r\n\r\nI have no idea how to properly fix this, but I can [work around](https://github.com/dotnet/winforms/compare/master...weltkante:stafact) by dropping all `TransitiveFrameworkReference` obtained from nuget packages to prevent upgrading the SDK to a DesktopApp. No idea what the proper resolution is to consume the `XUnit.StaFact` bugfixes, I don't understand the arcade build system.\r\n\r\n**Expected behavior:**\r\nBugfixes for Xunit.StaFact should be consumed\r\n\r\n**Minimal repro:**\r\nTry to run StaTheory or WinFormsTheory with complex MemberData inside Visual Studio\r\n\r\n/cc @hughbe @RussKie FYI","Url":"https://github.com/dotnet/winforms/issues/3122","RelatedDescription":"Open issue \"Bugfixes from Xunit.StaFact nuget package not consumed\" (#3122)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-28T05:30:49.7633415Z","RunDurationInMilliseconds":708}