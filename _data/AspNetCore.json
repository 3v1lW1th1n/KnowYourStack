{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for using HTTPS","PublishedOn":"2018-02-27T18:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Securing web apps with HTTPS is more important than ever before. Browser enforcement of HTTPS is becoming increasingly strict. Sites that don&#8217;t use HTTPS are increasingly labeled as insecure....","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-https-improvements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1 now available","PublishedOn":"2018-02-27T18:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the first preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. We&#8217;ve been working hard on this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-02-12T17:36:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released stable packages for ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/12/announcing-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Two Lesser Known Tools for Local Azure Development","PublishedOn":"2018-02-09T00:01:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you’re developing applications that target Azure services (e.g. Web Apps, Functions, Storage), you’ll want to know about two powerful tools that come with Visual Studio 2017 and the Azure...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/08/two-lesser-known-tools-for-local-azure-development/","RawContent":null},{"Title":"File nesting in Solution Explorer","PublishedOn":"2018-02-08T06:09:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to share with you a new capability in Visual Studio that was a clear ask from you, the community. Visual Studio has been nesting related files in Solution Explorer for a long time now,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/file-nesting-in-solution-explorer/","RawContent":null},{"Title":"Diagnosing Errors on your Cloud Apps","PublishedOn":"2018-02-07T16:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most frustrating experiences is when you have your app working on your local machine, but when you publish it it’s inexplicably failing. Fortunately, Visual Studio provides handy features...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/diagnosing-errors-on-your-cloud-apps/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7306961789","Type":"IssuesEvent","CreatedAt":"2018-02-28T00:16:39","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2360","RelatedDescription":"Closed issue \"Add ConsoleReporter\" (#2360) at aspnet/Home","RelatedBody":"_From @ryanbrandenburg on Wednesday, October 25, 2017 3:07:28 PM_\r\n\r\nAdd the `ConsoleReporter` as seen in [BuildTools](https://github.com/aspnet/DotNetTools/blob/8c327312824457b4dd1fccd814380894edf36eab/shared/ConsoleReporter.cs) to `Microsoft.Extensions.CommandLineUtils.Sources`.\r\n\r\n_Copied from original issue: aspnet/Common#276_"},{"Id":"7306783730","Type":"IssuesEvent","CreatedAt":"2018-02-27T23:25:08","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2857","RelatedDescription":"Closed issue \"StringSegment should be a readonly struct\" (#2857) at aspnet/Home","RelatedBody":"It is an immutable struct with no changeable fields post construction and marking it as `readonly struct` will make it work more efficiently with the `in` parameter modifier"},{"Id":"7306689584","Type":"IssuesEvent","CreatedAt":"2018-02-27T23:01:01","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/2775","RelatedDescription":"Reopened issue \"Broken symlinks return HTTP 500 instead of HTTP 404\" (#2775) at aspnet/Home","RelatedBody":"Repro:\r\n```\r\ndotnet new mvc\r\nln -s doesnotexists.txt wwwroot/test.txt\r\ndotnet run\r\n```\r\nhttp://localhost:5000/test.txt\r\n\r\n**Expected**\r\nHTTP 404. This file does not exist\r\n\r\n**Actual**\r\nHTTP 500\r\n```\r\nFileNotFoundException: Could not find file '/private/tmp/symlink/wwwroot/test.txt'.\r\nInterop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, string path, bool isDirectory, Func<ErrorInfo, ErrorInfo> errorRewriter)\r\nMicrosoft.Win32.SafeHandles.SafeFileHandle.Open(string path, OpenFlags flags, int mode)\r\nSystem.IO.FileStream..ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, FileOptions options)\r\nMicrosoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream()\r\n```\r\n\r\n**details**\r\nmacOS\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.1.0-preview1-28042\" />\r\n```\r\n"},{"Id":"7306351240","Type":"IssuesEvent","CreatedAt":"2018-02-27T21:47:42","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2810","RelatedDescription":"Closed issue \"ResponseCaching  Repository  QueryString created a cache key with a bug.\" (#2810) at aspnet/Home","RelatedBody":"https://github.com/aspnet/ResponseCaching/blob/5b239d44c0d749600a60ccd2951e0a67edd11a10/src/Microsoft.AspNetCore.ResponseCaching/Internal/ResponseCachingKeyProvider.cs#L142-L152\r\n\r\nQuery String| Cache Key\r\n---|---\r\n?key=12&key=34 | key=1234\r\n?key=1&key=234 | key=1234\r\n\r\nThe cache key of query string **?key=12&key=34** and **?key=1&key=234** is the same , both **key=1234**.\r\n\r\n"},{"Id":"7305808602","Type":"IssuesEvent","CreatedAt":"2018-02-27T19:59:11","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2880","RelatedDescription":"Closed issue \"HttpClient does not handle cookies with a non-matching path\" (#2880) at aspnet/Home","RelatedBody":"I have an interesting problem related to OpenID Connect Authentication in ASP .NET Core.  We have an Identity Server 3 OIDC implementation that uses a client certificate authentication provider.  When migrating to ASP .NET Core, we had no problem integrating with our existing OIDC server.  At least when launched from a browser (Edge, Chrome).\r\n\r\nHowever, we have a small ClickOnce application (using the full .NET framework) that also authenticates and makes calls through the ASP.  It does this by using a HttpClient with a certificate selected by the user.  This ClickOnce application fails during authentication.  The code is pretty simple.\r\n\r\n```\r\nusing (WebRequestHandler certHandler = new WebRequestHandler\r\n{\r\n   CookieContainer = new CookieContainer(),\r\n   ClientCertificateOptions = ClientCertificateOption.Manual,\r\n   UseDefaultCredentials = true,\r\n   AllowAutoRedirect = true\r\n})\r\n{\r\n   // Init\r\n   certHandler.ClientCertificates.Add(certificate);\r\n\r\n   using (HttpClient client = new HttpClient(certHandler) { BaseAddress = baseUri })\r\n   {\r\n      HttpResponseMessage response = a_client.GetAsync(ssoLoginUri).GetAwaiter().GetResult();\r\n      response.EnsureSuccessStatusCode();\r\n\r\n      // Process self submitting form responses as long as needed\r\n      do\r\n      {\r\n         response = ProcessFormAutoSubmit(a_client, response);\r\n      }\r\n      while (response != null);\r\n   }\r\n}\r\n```\r\n\r\nAfter moving to ASP .NET Core, this code no longer works.  The issue is that when MVC redirects to Identity Server, it includes 2 cookies (.ASPNetCore.Correlation.OpenIdConnect and .AspNetCore.OpenIdConnect.Nonce).  Those cookies never make it into my CookieContainer (other cookies from Identity Server are handled fine).  When the signin-oidc callback is made, MVC fails with the error: \"Correlation failed: .AspNetCore.Correlation.OpenIdConnect.9N18bzJ1hcpG5YjRMw_QgUJ_PnapfVx2lBmdvb8Q_zA' cookie not found.\".  Makes sense.  But why is the cookie not added?\r\n\r\nAfter playing around, I was able to get around this by handling each redirect and manually adding any cookies that had a path (both of which the 2 missing cookies had).  The code now looks like this:\r\n\r\n```\r\n...\r\nHttpResponseMessage response = a_client.GetAsync(ssoLoginUri).GetAwaiter().GetResult();\r\nRegex cookiePathRegex = new Regex(@\"path=([^;]*);?\");\r\n\r\ndo\r\n{\r\n   // Ideally we would just use automatic redirects in the HttpClient, but we need to intercept cookies for special processing\r\n   if (response.StatusCode == HttpStatusCode.Redirect)\r\n   {\r\n      Uri requestUri = response.Headers.Location;\r\n      if (!requestUri.IsAbsoluteUri)\r\n      {\r\n         requestUri = UriUtil.Combine(response.RequestMessage.RequestUri.GetLeftPart(UriPartial.Authority), response.Headers.Location.OriginalString);\r\n      }\r\n\r\n      response = a_client.GetAsync(requestUri).GetAwaiter().GetResult();\r\n\r\n      IEnumerable<string> responseCookies = null;\r\n      if (response.Headers.TryGetValues(\"set-cookie\", out responseCookies))\r\n      {\r\n         // Cookies that have a path aren't currently supported with HttpClient\r\n         // Such cookies are used with the new ASP .NET Core OpenId Connect implementation\r\n         // Just manually add these cookies\r\n         foreach (string sCookie in responseCookies)\r\n         {\r\n            Match pathMatch = cookiePathRegex.Match(sCookie);\r\n            if (pathMatch.Success)\r\n            {\r\n               a_webRequestHandler.CookieContainer.SetCookies(\r\n                  UriUtil.Combine(requestUri.GetLeftPart(UriPartial.Authority), pathMatch.Groups[1].Value),\r\n                  cookiePathRegex.Replace(sCookie, String.Empty));\r\n            }\r\n         }\r\n      }\r\n   }\r\n   else\r\n   {\r\n      response.EnsureSuccessStatusCode();\r\n      response = ProcessFormAutoSubmit(a_client, response);\r\n   }\r\n}\r\nwhile (response != null);\r\n```\r\n\r\n\r\nThis works, but seems like a hack.  Any idea why these cookies aren't handled by HttpClient?\r\n\r\nI realize this may not be directly be an ASP .NET Core issue, but wanted to start here since it seems to be related to cookies from ASP .NET Core.\r\n\r\nThanks,\r\n\r\n--David"},{"Id":"7304493026","Type":"IssuesEvent","CreatedAt":"2018-02-27T16:04:04","Actor":"Boombasteg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2909","RelatedDescription":"Opened issue \"Setting ASPNETCORE_ENVIRONMENT from cmd\" (#2909) at aspnet/Home","RelatedBody":"Hello!\r\n\r\nI need to change ASPNETCORE_ENVIRONMENT from cmd (by running bat file).\r\nI have bat file like this:\r\n```\r\n...\r\nSETX ASPNETCORE_ENVIRONMENT \"tests\"\r\nSET ASPNETCORE_ENVIRONMENT \"tests\"\r\ndotnet ef database drop -v --force --startup-project ../startProjectWebApi/\r\ndotnet ef database update -v --startup-project ../startProjectWebApi/\r\n...\r\n```\r\nI assume that it will:\r\n\r\n-  change ASPNETCORE_ENVIRONMENT\r\n-  recreate DB for tests (ConnectionString depends on ASPNETCORE_ENVIRONMENT and getting from appsettings.tests.json from startProjectWebApi)\r\n-  run tests\r\n\r\nBut instead it recreate wrong DB specified for example in appsettings.dev.json.\r\nI can see right ASPNETCORE_ENVIRONMENT  only after restart script/cmd.\r\n\r\nHow can I get real ASPNETCORE_ENVIRONMENT in same session of script after setting it?\r\n\r\nThanx.\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7306664762","Type":"PullRequestEvent","CreatedAt":"2018-02-27T22:55:12","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1506","RelatedDescription":"Merged pull request \"Fix install text in npm package\" (#1506) at aspnet/SignalR","RelatedBody":""},{"Id":"7306664040","Type":"PullRequestEvent","CreatedAt":"2018-02-27T22:55:01","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1498","RelatedDescription":"Merged pull request \"Serialize once per format to increase perf in broadcasting scenarios\" (#1498) at aspnet/SignalR","RelatedBody":"Also found an issue where we registered KeepAliveTick too soon and fixed it."},{"Id":"7306582528","Type":"IssuesEvent","CreatedAt":"2018-02-27T22:36:13","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1400","RelatedDescription":"Closed issue \"Enable CORS for SignalR Asp.Net Core\" (#1400) at aspnet/SignalR","RelatedBody":"How do I enable CORS access to my SignalR Asp.Net Core Hub? In the Asp.Net version, you could do the following:\r\n\r\n`app.Map(\"/signalr\", map =>\r\n{\r\n    map.UseCors(CorsOptions.AllowAll);\r\n    var hubConfiguration = new HubConfiguration {};\r\n    map.RunSignalR(hubConfiguration);\r\n});`\r\n\r\nHow can you do this in this version?"},{"Id":"7306579102","Type":"IssuesEvent","CreatedAt":"2018-02-27T22:35:27","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1508","RelatedDescription":"Opened issue \"Make Parsers Incremental and Consistent\" (#1508) at aspnet/SignalR","RelatedBody":"We should make the parsers incremental (so we don't have to buffer) and make the APIs consistent (instead of Reading multiple but writing a single one, etc.). We'll still keep them stateless. cc @davidfowl "},{"Id":"7306566224","Type":"IssuesEvent","CreatedAt":"2018-02-27T22:32:38","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1297","RelatedDescription":"Closed issue \"SignalR 1.0.0-preview1 verification areas\" (#1297) at aspnet/SignalR","RelatedBody":"## SignalR Preview1 Verification\r\n\r\n- Connect to server/Disconnect\r\n- Client calls server methods\r\n  - Read a return value \r\n  - Serialization of arguments (try different argument types, primitives, complex types, ...)\r\n- Server broadcast to multiple clients \r\n  - Serialization (\"ditto\")\r\n- Groups\r\n  - Add to/Remove from group\r\n  - Send to group \r\n  - Others in group\r\n- Users\r\n  - Authentication\r\n  - Send to user\r\n- Clients\r\n  - TS/JS client\r\n  - C# client\r\n- Browsers (JS clients)\r\n  - Chrome, Firefox, IE, Edge, Safari\r\n  - Mobile browsers\r\n- Connection lifetime\r\n  - Disconnects (with all the supported transports)\r\n    - Graceful disconnect\r\n    - Network interruption\r\n- Transports\r\n  - WebSockets\r\n  - Serverside events\r\n  - Longpolling\r\n- Protocols\r\n  - Json\r\n  - MsgPack\r\n- Binary\r\n  - use MsgPack for binary serilazation \r\n-  Scaleout\r\n  - Redis\r\n- Streaming\r\n- Bare websockets "}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7307636942","Type":"IssuesEvent","CreatedAt":"2018-02-28T03:54:32","Actor":"leonhoo","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7352","RelatedDescription":"Closed issue \"publish to linux, The method of stacktrace disappeared\" (#7352) at aspnet/Mvc","RelatedBody":"I'm testing by asp.net core ( microsoft/dotnet:2.0.3-sdk ), when I get the method of stacktrace, there is a problem;\r\n\r\nresult of running on windows:\r\n\r\n```\r\nGetParentMethod    |    <GetOfController>b__2_0    |    InnerInvoke    |    Run    |    ExecuteWithThreadLocal    |    Dispatch\r\n```\r\n\r\n\r\n\r\nresult of running on ubuntu16.04:\r\n```\r\nGetParentMethod    |    InnerInvoke    |    Run    |    ExecuteWithThreadLocal    |    Dispatch\r\n```\r\n\r\nwhere is the `\"<GetOfController>b__2_0\"` ?\r\n\r\n\r\n***********source**********\r\n\r\nController:\r\n```\r\n[HttpGet]\r\npublic Task<string> GetOfController()\r\n{\r\n    return Task.Run(() =>\r\n    {\r\n        return _testService.GetParentMethod();\r\n    });\r\n}\r\n```\r\n\r\nTestService:\r\n```\r\npublic string GetParentMethod()\r\n{\r\n    StackTrace stack = new StackTrace();\r\n    var frames = stack.GetFrames();\r\n    return string.Join(\"  |  \", frames.Select(o => o.GetMethod().Name)); ;\r\n}\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7305424221","Type":"IssuesEvent","CreatedAt":"2018-02-27T18:46:05","Actor":"fe-c","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1653","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Identity.EntityFrameworkCore nuget reference\" (#1653) at aspnet/Identity","RelatedBody":"Microsoft.AspNetCore.Identity.EntityFrameworkCore (v2.0.1)  uses Microsoft.EntityFrameworkCore.SqlServer (e.g. SqlServerValueGenerationStrategy atribute), but last not refernced by nuget packet of Microsoft.AspNetCore.Identity.EntityFrameworkCore."},{"Id":"7302454876","Type":"IssuesEvent","CreatedAt":"2018-02-27T09:46:03","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1652","RelatedDescription":"Closed issue \"Don't work reference for Microsoft.AspNet.Identity.AspNetCoreCompat\" (#1652) at aspnet/Identity","RelatedBody":"Don't work reference for open source code of package Microsoft.AspNet.Identity.AspNetCoreCompat: https://github.com/aspnet/Identity/tree/dev/src/Microsoft.AspNet.Identity.AspNetCoreCompat\r\n\r\nPlease repair it or specefy new path."},{"Id":"7301743668","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:57:25","Actor":"Testdrivebusiness","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1652","RelatedDescription":"Opened issue \"Don't work reference for Microsoft.AspNet.Identity.AspNetCoreCompat\" (#1652) at aspnet/Identity","RelatedBody":"Don't work reference for open source code of package Microsoft.AspNet.Identity.AspNetCoreCompat: https://github.com/aspnet/Identity/tree/dev/src/Microsoft.AspNet.Identity.AspNetCoreCompat\r\n\r\nPlease repair it or specefy new path."},{"Id":"7290991328","Type":"IssuesEvent","CreatedAt":"2018-02-24T08:37:04","Actor":"H4Himanshu","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1651","RelatedDescription":"Opened issue \"aspnet/identity issue\" (#1651) at aspnet/Identity","RelatedBody":"Hello I am following a tutorial on udemy and instructor was explaining the identity. He added the same in the tutorial and i am getting some error when i am trying to add this. Can someone help me out ? I am attaching all the relevant information i can about my project and error.\r\n\r\nScreenshot of error which i am getting in browser.\r\n![image](https://user-images.githubusercontent.com/6859459/36627616-32dc497a-196b-11e8-8262-ab0d6aba4201.png)\r\n\r\nScreenshot of my startup.cs file\r\n![image](https://user-images.githubusercontent.com/6859459/36627622-5fd374da-196b-11e8-99c4-bdece26f4443.png)\r\n\r\nScreenshot of my Application User File:\r\n![image](https://user-images.githubusercontent.com/6859459/36627628-7c346170-196b-11e8-85f2-77618d8d3751.png)\r\n\r\ncan anyone help me out if i am missing any file or missing lines of code  ?"},{"Id":"7290648927","Type":"IssuesEvent","CreatedAt":"2018-02-24T04:16:25","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1650","RelatedDescription":"Opened issue \"Why ef keeps generating a nullable foreign key to an extended IdentityRole class?\" (#1650) at aspnet/Identity","RelatedBody":"I am trying to add another key to my roles identity table, `DatabaseId`. ef keeps generating the key as `nullable`, I tried to enforce it with `DataAnnotations` using `[Required]` tag but its not working, what am I doing wrong here?\r\nI followed this article as well, [Relationships, Navigation Properties, and Foreign Keys][1] but its not working in this case, \r\n\r\nThese are my entities,\r\n\r\n    public class PracticeDatabase\r\n        {\r\n            public PracticeDatabase()\r\n            {\r\n                UserDatabases = new Collection<UserDatabase>();\r\n                PracticeOccupation = new Collection<PracticeOccupation>();\r\n                ApplicationUserRole = new Collection<ApplicationRole>();\r\n            }\r\n            [DatabaseGenerated(DatabaseGeneratedOption.Identity)]\r\n            public Guid Id { get; set; }\r\n            [Required]\r\n            public string Name { get; set; }\r\n            public string NormalizedName { get; set; }\r\n            public string UrlPath { get; set; }\r\n            public ICollection<UserDatabase> UserDatabases { get; set; }\r\n            public ICollection<PracticeOccupation> PracticeOccupation { get; set; }\r\n            public virtual ICollection<ApplicationRole> ApplicationUserRole { get; set; }\r\n        }\r\n\r\n\r\n    public class ApplicationRole : IdentityRole\r\n    {\r\n        [Required]\r\n        public Guid DatabaseId { get; set; }\r\n        [ForeignKey(\"DatabaseId\")]\r\n        public virtual PracticeDatabase Database { get; set; }\r\n    }\r\n\r\n\r\nthis is the migration build part,\r\n\r\n            migrationBuilder.CreateTable(\r\n                name: \"AspNetRoles\",\r\n                columns: table => new\r\n                {\r\n                    DatabaseId = table.Column<Guid>(nullable: true),\r\n                    Id = table.Column<string>(nullable: false),\r\n                    ConcurrencyStamp = table.Column<string>(nullable: true),\r\n                    Discriminator = table.Column<string>(nullable: false),\r\n                    Name = table.Column<string>(maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column<string>(maxLength: 256, nullable: true)\r\n                },\r\n                constraints: table =>\r\n                {\r\n                    table.PrimaryKey(\"PK_AspNetRoles\", x => x.Id);\r\n                    table.ForeignKey(\r\n                        name: \"FK_AspNetRoles_PracticeDatabases_DatabaseId\",\r\n                        column: x => x.DatabaseId,\r\n                        principalTable: \"PracticeDatabases\",\r\n                        principalColumn: \"Id\",\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });\r\n\r\n\r\n  [1]: https://msdn.microsoft.com/en-us/data/jj713564.aspx"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7307104431","Type":"PullRequestEvent","CreatedAt":"2018-02-28T01:00:50","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2295","RelatedDescription":null,"RelatedBody":"Depends on https://github.com/aspnet/Common/pull/311 (for perf)\r\n\r\nResolves https://github.com/aspnet/KestrelHttpServer/issues/2301"},{"Id":"7307104344","Type":"PullRequestEvent","CreatedAt":"2018-02-28T01:00:49","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2295","RelatedDescription":"Closed pull request \"Pass StringValues via in\" (#2295) at aspnet/KestrelHttpServer","RelatedBody":"Depends on https://github.com/aspnet/Common/pull/311 (for perf)\r\n\r\nResolves https://github.com/aspnet/KestrelHttpServer/issues/2301"},{"Id":"7306877455","Type":"PullRequestEvent","CreatedAt":"2018-02-27T23:51:30","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2348","RelatedDescription":"Closed pull request \"Allow transport to influence application scheduler selection\" (#2348) at aspnet/KestrelHttpServer","RelatedBody":"This PR supersedes https://github.com/aspnet/KestrelHttpServer/pull/2318"},{"Id":"7306767902","Type":"IssuesEvent","CreatedAt":"2018-02-27T23:20:56","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2323","RelatedDescription":"Closed issue \"Investigate startup issues with Kestrel\" (#2323) at aspnet/KestrelHttpServer","RelatedBody":"@anurse @pakrym @halter73 "},{"Id":"7306759949","Type":"PullRequestEvent","CreatedAt":"2018-02-27T23:18:52","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2318","RelatedDescription":"Closed pull request \"[WIP] Allow transport to influence application scheduler selection\" (#2318) at aspnet/KestrelHttpServer","RelatedBody":"This  started as an effort to avoid extra threadpool dispatching in the socket transport's default configuration. You can already choose to disable threadpool dispatching via KestrelServerOptions, but this PR intended to provide a mechanism for the transport itself to disable threadpool dispatching.\r\n\r\nThe idea was that the socket transport would default to running app code inline even if the app developer didn't opt in because it's safe and it's faster than dispatching. Unfortunately this posed a few issues such as deciding which scheduler to use for the request body reader so the PumpAsync loop keeps going even if the application does a synchronous read.\r\n\r\n@davidfowl and I discussed the possibility of using the inline scheduler for sockets only if the request has no body because that case wouldn't be susceptible to deadlocking due to a synchronous read, but that raised other issues.\r\n\r\nWe decided if we're going to selectively switch schedulers mid-connection maybe we should always run the parser inline even for the libuv transport. But the logic for the libuv transport can't be exactly like the socket transport, because we don't want to run app code inline even if the request doesn't have a body in the case of the libuv transport.\r\n\r\nThen we started discussing how a transport could communicate these kind of subtle scheduling preferences in a way that doesn't make these scheduling preferences something that's specific to the HTTP protocol and not applicable to other connection middleware.\r\n\r\nAfter all this discussion I put this PR on the back burner since we don't have a great design that addresses all of the above concerns. Here's what I have so far. It doesn't do any inline \"scheduling\" by default yet due to the aforementioned issues. Thoughts?\r\n\r\n@benaadams\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/1662"},{"Id":"7306520568","Type":"IssuesEvent","CreatedAt":"2018-02-27T22:22:35","Actor":"FrederickBrier","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2351","RelatedDescription":"Opened issue \"Knowing when Kestrel has stopped and completed finishing processing requests\" (#2351) at aspnet/KestrelHttpServer","RelatedBody":"This is a feature request. I just finished digging through the Kestrel source, primarily the KestrelServer class, looking for a way to know the server has stopped accepting connections and all processing of requests is complete. There are no events or reactive extensions, no lambda(s) to inject, no lifecycle methods that could be overridden. All the data members are private. None of the methods are virtual. If StopAsync() were virtual, or the _stoppedTcs were a public property, they could be overridden, or used to know the state of the server (non-null TaskCompletionSource<object>, null, or exception object).\r\n\r\nIt would be helpful if the KestrelServer class had some extension points or were not quite so locked down.\r\n\r\nMy use case is that OnShutdown, I want to save the system state in memory to a database. Thank you."},{"Id":"7306471043","Type":"IssuesEvent","CreatedAt":"2018-02-27T22:12:02","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2350","RelatedDescription":"Opened issue \"Reenable ApiCheck when fixed\" (#2350) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/BuildTools/issues/592\r\n\r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7307319832","Type":"PullRequestEvent","CreatedAt":"2018-02-28T02:08:35","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2120","RelatedDescription":"Merged pull request \"Clean up error message when Razor compiler is not referenced\" (#2120) at aspnet/Razor","RelatedBody":"Fixes #1974"},{"Id":"7307319823","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:08:35","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1974","RelatedDescription":"Closed issue \"[Razor SDK]: Fit and polish - Determine what the right way is to indicate an error when Razor.Design is missing\" (#1974) at aspnet/Razor","RelatedBody":"Based on https://github.com/aspnet/Razor/pull/1964/files#r163731196\r\n\r\nThe Razor.SDK requires CodeGeneration targets to be present to work. Need to ask around with folks more familiar with writing SDKs what is the quintessential MSBuild approach for this is."},{"Id":"7307250425","Type":"IssuesEvent","CreatedAt":"2018-02-28T01:47:03","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1892","RelatedDescription":"Closed issue \"Meta: Turn Razor MSBuild support into an SDK\" (#1892) at aspnet/Razor","RelatedBody":"The design of this looks roughly like:\r\n\r\n`Microsoft.Net.Razor.Sdk` - contains the compilation (CSC) targets as well as the targets and properties that hook into the build lifecycle. This SDK defines the primary properties that users will want to configure. This package versions with the SDK and moves slowly.\r\n\r\n`Microsoft.AspNetCore.Razor.Xyz` - contains the actual tools used for tag helper discovery and code generation, as well as any version-specific settings. This package moves with the runtime and can version/change quickly. There's a stable contract between this package and the main SDK. Once things stabilize, functionality can move from here into the SDK.\r\n\r\n`Microsoft.AspNetCore.Mvc.Xyz` - contains the 'targeting pack' for MVC. This package moves with the runtime and can version/change quickly.\r\n\r\n---\r\n\r\nWe need to cobble what we have into this shape for preview 2 and then get the `Microsoft.Net.Razor.Sdk` package into the CLI Build.\r\n\r\n---\r\n\r\nRequirements:\r\n- [x] Relayer the 2.1.0-preview1 stuff into SDK (see description above)\r\n- [x] Insert into CLI for 2.1.0-preview2\r\n- [x] Flesh out configuration for Razor (version, plugins, more?)\r\n- [x] Take over functionality from WebSDK as needed\r\n- [x] Define a capability for Razor (that our tooling understands)\r\n- [x] Build a plugin system for CLI tool (rzc)\r\n- [x] Expose version and plugin information for VS\r\n- [ ] Docs (minimal)"},{"Id":"7306939078","Type":"PullRequestEvent","CreatedAt":"2018-02-28T00:09:52","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2121","RelatedDescription":"Opened pull request \"Pack should pack symbol nupkg\" (#2121) at aspnet/Razor","RelatedBody":"* Update path calculation for BuiltProjectOutputGroupOutput to include full path. This matches\r\n  the behavior of Microsoft.Common.targets.\r\n* Add Razor symbols to DebugSymbolsProjectOutputGroupOutput\r\n\r\nFixes #2116"},{"Id":"7306868614","Type":"PullRequestEvent","CreatedAt":"2018-02-27T23:48:52","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2120","RelatedDescription":"Opened pull request \"Clean up error message when Razor compiler is not referenced\" (#2120) at aspnet/Razor","RelatedBody":"Fixes #1974"},{"Id":"7306859336","Type":"IssuesEvent","CreatedAt":"2018-02-27T23:46:09","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2119","RelatedDescription":"Opened issue \"Razor Sdk: Require docs on various available settings and instructions for users to use the Sdk in a class library\" (#2119) at aspnet/Razor","RelatedBody":"We need some documentation for various settings for the Sdk. In addition, the fwlink https://go.microsoft.com/fwlink/?linkid=868374 needs to include details on how to get the right set of additional references to use the Sdk"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"},{"Id":"7271114444","Type":"IssuesEvent","CreatedAt":"2018-02-20T18:33:27","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/347","RelatedDescription":"Closed issue \"File nesting in Solution Explorer is inconsistent and incorrect\" (#347) at aspnet/Tooling","RelatedBody":"The Solution Explorer for ASP.NET 5 MVC projects has several major problems - one of them is file nesting. The below issues affect Visual Studio 2015 Update 1 with ASP.NET 5 Release Candidate 1.\n#### tl;dr\n- Please fix nesting rules for `.less`, `.scss` and `.sass`, so those files are nested under `.html`.\n- Please fix incorrect nesting that sometimes appear after renaming/moving/copying files and folders.\n- Please provide an option to disable all file nesting, and eventually, options to configure nesting rules.\n- Please fix other critical Solution Explorer issues - this is just one of them, and there are many more.\n#### File nesting is inconsistent when nesting files under `.html`.\n\nThe `.less` and `.scss` files should be nested under `.html`. Those files compile to `.css` just like `.ts` compile to `.js` and they are just as much part of the view component. \n![less-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942660/6452782c-a838-11e5-9a44-d7ab6a2e5fc9.png)\n![scss-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942664/66bbd3a6-a838-11e5-8e3c-f1c369d5e1de.png)\nIn fact, if we only have a `.css` file in there, then it _is_ nested as expected, so clearly `.less` and `.scss` should also be nested:\n![css-is-nested-as-expected](https://cloud.githubusercontent.com/assets/6388663/11942670/6be4bdd4-a838-11e5-99b1-1dcc43238459.png)\n\nWhile the above is clearly a bug, and a very annoying one at that, the rules for other file types are less obvious, but should maybe also be considered... maybe `.json` should also be nested under `.html`?\nIt probably contains either settings, string resources, or data for that view component, so it seems resonable to me, although I consider this far less important than getting the style sheet nesting fixed.\n![json-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11939884/4a1bb224-a825-11e5-9ff6-631b4e8fed39.png)\n\nThose nesting rules have been inconsistent ever since they were introduced in ASP.NET 5, and **it really needs to be fixed**. Sure, everything compiles just fine, but I'm getting really pissed off looking at this mess in my Solution Explorer every day. Inconsistencies like this makes the whole concept of nesting seem like an annoyance more than a help, as it raises the obvious question \"if only some files are nested, then why nest anything at all - that's just an extra click to get to the .ts file\". Which brings me to...\n#### File nesting can be annoying\n\nWhile the fundamental idea of file nesting is not nessesarily bad, it can be _very_ annoying at times, which is why, as a _minimum_, **I want an option to disable all file nesting** - and ideally, options to configure the nesting rules.\n\nConsider this folder structure, where the folder already represents a container for the component:\n![file-nesting-is-annoying](https://cloud.githubusercontent.com/assets/6388663/11940913/ff28392a-a82b-11e5-86b4-571bc70d21bb.png)\nHere the file nesting provides no benefit at all, and actually just introduces a _really_ annoying extra click to get to the `.ts` file. A possible fix for this might be to only nest files if the folder name is different from the name of the `.html` file, but this might also be wrong - for example, a folder named `tabs` representing some fancy `tabs` component might actually contain multiple elements that work together, e.g. `tabs.html/js`, `tab-pane.html/js` and `tab-button.html/js`, and in this case we _do_ want nesting for all three of those. Therefore, I strongly believe an option to simply disable all nesting is the best option here - and it is very much needed, because despite this example, we do have projects in which the nesting provides absolutely no value and represents a major annoyance.\n\nOne could also argue that the `.html` file should actually be nested under the `.js` file.\nConsider an Angular 2 application, where the `.ts` file represents the actual Component, annotated with metadata specifying either the path to the `.html` file representing its view, or if the view is small, a string representing the markup of the view. Same for styles, where the metadata in the `.ts` file specifies either the path to the `.css` file, or a string representing the style rules. Here, both the view and the style sheet is clearly dependencies of the `.ts` file, so it would make sense to nest them below that...\n##### An alternative idea\n\nAlternatively, you could consider a completely different approach to nesting, where the part of the file name the files have in common, is used to show a \"virtual folder\" containing all the files - then file nesting could be used only for things like transpiler generated files. The image below is a concept I mocked up to illustrate this idea:\n![virtual-folder-concept](https://cloud.githubusercontent.com/assets/6388663/11942319/042b84ea-a836-11e5-80f1-b5941cfbdfa7.png)\nHere, all the files have the \"foo\" part of their name in common, and is therefore nested under a \"foo\" node in Solution Explorer. However, in the file system, the actual files are all located in the components folder, so in the code the path would be `app/components/foo.js` - nice an clean, works for any file type, and makes no assumptions about whether `.html` or `.js` is more important.\n\nGoing further with this idea, the IDE could also be smart, so when selecting this \"virtual folder\", it could maybe somehow open all the `foo.*` files in a split view (ignoring transpilation output of course), thus providing a quick way to see all the component code at once. Just a thought...\n### File nesting is broken\n\nNot only is file nesting inconsistent, and sometimes annoying, but it is also broken.\nHere are two cases of incorrect behavior I managed to reproduce - unfortunately, this does not seem to fail consistently, so it can be hard to reproduce - but it does happen often enough to be annoying.\n![file-nested-on-drag-copy](https://cloud.githubusercontent.com/assets/6388663/11943207/4749c9e8-a83c-11e5-9f15-304cb16e8419.png)\n![nesting-broken-when-folder-is-renamed](https://cloud.githubusercontent.com/assets/6388663/11943211/4c807074-a83c-11e5-8e71-4bed0bd4353c.png)\n\nPlease take those Solution Explorer issues seriously - I've provided feedback about multiple critical issues several several months ago, and thus far _nothing_ has improved. Solution Explorer still hangs or crashes the whole IDE when a large number of files is modified/moved/copied/renamed, it still has annoying, inconsistent and buggy file nesting, and it still constantly gets out of sync with the file system, crashing first the project system and eventually the whole IDE. I'm more that a little concerned about seeing a release candidate label on something this buggy and unpolished - if this is indeed what you intend to release, then we intend to find another IDE for our frontend development.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":40,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Ra… https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of t… https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":32,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlando… https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":16,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 and… https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null}]}},"RunOn":"2018-02-28T05:30:10.1882255Z","RunDurationInMilliseconds":8678}