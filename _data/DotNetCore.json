{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 Runtime and Compiler Features","PublishedOn":"2017-09-28T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post describes the new Runtime, Compiler and Base Class Library (BCL) improvements in the .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post.  BCL &#8211; .NET Standard 2.0 Support .NET Framework 4.7.1 has built-in support for .NET Standard 2.0. .NET Framework 4.7.1... <a aria-label=\"read more about .NET Framework 4.7.1 Runtime and Compiler Features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/","RawContent":null},{"Title":"Build a web service with F# and .NET Core 2.0","PublishedOn":"2017-09-26T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Earlier this year, I wrote about an update to the roadmap for F# and .NET Core. I had mentioned that there were a number of things you could build with F# and .NET Core today, such as web services. In this post, I&#8217;ll walk through building a web service with F# and .NET Core 2.0... <a aria-label=\"read more about Build a web service with F# and .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/","RawContent":null},{"Title":".NET Framework September 2017 Preview of Quality Rollup","PublishedOn":"2017-09-25T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Preview of Quality Rollup. This type of rollup is intended for businesses that want to the preview or use quality improvements as soon as they are available. This update applies to Windows 10 Update 1607 (Anniversary Update) and to Windows Server 2016. FYI: The KBs for Windows Server 2016... <a aria-label=\"read more about .NET Framework September 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":16,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":24,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":50,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6650451504","Type":"IssuesEvent","CreatedAt":"2017-09-28T16:22:10","Actor":"hughbe","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/87","RelatedDescription":"Opened issue \"PRs to repos outside of dotnet/* pattern should not always thank for signing the CLA\" (#87) at dotnet/home","RelatedBody":"For example: https://github.com/mono/libgdiplus/pull/109\r\n\r\nI have already signed the CLI. On the dotnet/corefx etc. projects, I don't get the extra message:\r\n\r\n```\r\n@hughbe,\r\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\r\nThanks,\r\n.NET Foundation Pull Request Bot\r\n```\r\n\r\nJust a small gripe, as I get an email each time I do this. I've seen this in Mono and Xunit.\r\n\r\n/cc @karelz I know this is unrelated to corefx but maybe you know the right person/repo to route this to :D\r\n"},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6645912196","Type":"IssuesEvent","CreatedAt":"2017-09-27T19:47:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/32","RelatedDescription":"Opened issue \".NET Framework 4.7.1 provides built-in support for .NET Standard 2.0\" (#32) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n.NET Framework 4.7.1 will have built-in support for .NET Standard 2.0. This means that you don't have to deploy any additional files or use binding redirects to use .NET Standard 2.0 libraries.\r\n\r\nFor a demo, check out [this video][video].\r\n\r\n## Details\r\n\r\nWhile libraries targeting [.NET Standard 2.0][ns20post] are can be consumed by applications and libraries [targeting .NET Framework 4.6.1][nstable] and higher, not all files that are required for .NET Standard libraries were part of .NET Framework 4.6.1. In fact, .NET Framework 4.6.1 was shipped before .NET Standard 2.0 was even designed. That's why building an application targeting .NET Framework 4.6.1 (as well as 4.6.2 and 4.7) will have to deploy additional files.\r\n\r\n* If you use **Visual Studio 2017 15.3** or higher, these files are automatically copied to the application's output folder.\r\n\r\n* If you use **Visual Studio 2015 and [use NuGet 3.6][nuget36]**, we'll prompt you to install a [support package][vs2015support] which will handle copying the files to the output directory.\r\n\r\nStarting with .NET Framework 4.7.1 these files no longer have to be deployed with the application -- they are built right into the .NET Framework itself.\r\n\r\n.NET Framework 4.7.1 also adds[about 200 missing APIs][missingapis] that were part of .NET Standard 2.0 but not actually implemented by .NET Framework 4.6.1, 4.6.2 or 4.7.\r\n\r\nThis also removes the need for [binding redirects][netfx-issues] when using .NET Standard libraries on .NET Framework because the CLR automatically unifies version numbers of assemblies that are part of the platform.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nDiscussion\r\n\r\nFor a discussion, please go to dotnet/standard#514.\r\n\r\n[ns20post]: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\r\n[nstable]: https://docs.microsoft.com/en-us/dotnet/standard/net-standard\r\n[nuget36]: https://dist.nuget.org/visualstudio-2015-vsix/v3.6.0/NuGet.Tools.vsix\r\n[vs2015support]: https://aka.ms/netstandard-build-support-netfx\r\n[missingapis]: https://github.com/dotnet/standard/blob/master/netstandard/src/ApiCompatBaseline.net461.txt\r\n[netfx-issues]: https://github.com/dotnet/standard/issues/481\r\n[video]: https://www.youtube.com/watch?v=u67Eu_IgEMs\r\n\r\nhttps://github.com/dotnet/standard/issues/514"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6665680598","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:06:03","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14295","RelatedDescription":"Opened pull request \"Put JIT64 compat assert under `_TARGET_AMD64_` ifdef\" (#14295) at dotnet/coreclr","RelatedBody":"Fixes #14205"},{"Id":"6665560753","Type":"PullRequestEvent","CreatedAt":"2017-10-03T02:09:02","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14288","RelatedDescription":"Merged pull request \"delete the old gcc workaround.\" (#14288) at dotnet/coreclr","RelatedBody":"It was older than the coreclr repo."},{"Id":"6665276790","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:04:38","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14294","RelatedDescription":"Opened pull request \"[Arm64] Add LD/ST exclusive emitters\" (#14294) at dotnet/coreclr","RelatedBody":"@dotnet/arm64-contrib @dotnet/jit-contrib PTAL"},{"Id":"6665195795","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:33:09","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14293","RelatedDescription":"Opened pull request \"[Arm64] Fix smul[lh] disassembly\" (#14293) at dotnet/coreclr","RelatedBody":"Fixes #13834 \r\n\r\n@dotnet/arm64-contrib PTAL"},{"Id":"6665188978","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:30:37","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14292","RelatedDescription":"Opened pull request \"[Arm64] Fix TODO-Cleanup add unreached\" (#14292) at dotnet/coreclr","RelatedBody":"@dotnet/arm64-contrib @dotnet/jit-contrib PTAL"},{"Id":"6665186668","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:29:47","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14220","RelatedDescription":"Merged pull request \"[RyuJIT/arm32] Code cleanup\" (#14220) at dotnet/coreclr","RelatedBody":"- Add an assertion for double type arg regs for armel\r\n- Merge two if statements that have same body"},{"Id":"6665167707","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:22:50","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14036","RelatedDescription":"Merged pull request \"Improve runtest.sh concurrency\" (#14036) at dotnet/coreclr","RelatedBody":"`runtest.sh` runs next tests immediately after any of child processes is done"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6665756607","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:43:13","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7735","RelatedDescription":"Merged pull request \"Update FSharp compiler\" (#7735) at dotnet/cli","RelatedBody":""},{"Id":"6665705808","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:18:17","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7751","RelatedDescription":"Opened pull request \"*NO MERGE* Fix up roslyn satellite assembly handling to match new insertion mechanism\" (#7751) at dotnet/cli","RelatedBody":"1. Publish satellites with a separate project and merge the resulting .deps.json into (csc|vbc).deps.json\r\n\r\n2. Move the build tasks satellites to the correct location next to main assembly (one level higher than bincore\\)\r\n\r\n3. Update roslyn satellite package to 2.6.x to get matching assembly version and updated strings\r\n\r\nMarked *no merge* because the CliDeps.Satellites.Roslyn being ingested isn't real-signed. Need to update F# first and then kick off signed build."},{"Id":"6665700914","Type":"IssuesEvent","CreatedAt":"2017-10-03T03:15:51","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7523","RelatedDescription":"Closed issue \"Native rpm packages for openSUSE\" (#7523) at dotnet/cli","RelatedBody":"Please create native dotnet rpm packages for openSUSE. Examples:\r\n\r\n- http://download.opensuse.org/repositories/home:/cabelo/openSUSE_Tumbleweed/src/dotnet-1.1.0-64.4.src.rpm\r\n- http://download.opensuse.org/repositories/home:/cabelo/openSUSE_Tumbleweed/src/\r\n\r\nAlso SUSE have [BuildService](https://build.opensuse.org/) which allows to build packages for any distribution.\r\n\r\n\r\n\r\n\r\n"},{"Id":"6665681894","Type":"IssuesEvent","CreatedAt":"2017-10-03T03:06:41","Actor":"19317362","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7750","RelatedDescription":"Opened issue \"It looks like EFCORE is still useless compared with EF6\" (#7750) at dotnet/cli","RelatedBody":"many issues.  migerations, reverse generations, Model  Creating s...\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6665681112","Type":"IssuesEvent","CreatedAt":"2017-10-03T03:06:17","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7749","RelatedDescription":"Closed issue \"Where is the \"update-database -TargetMigration \" feature fore EF CORE MIG???\" (#7749) at dotnet/cli","RelatedBody":"\r\nIt works very good in EF6.  But why you give up the BEST feature in EFCORE?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6665658883","Type":"IssuesEvent","CreatedAt":"2017-10-03T02:55:57","Actor":"19317362","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7749","RelatedDescription":"Opened issue \"Where is the \"update-database -TargetMigration \" feature fore EF CORE MIG???\" (#7749) at dotnet/cli","RelatedBody":"\r\nIt works very good in EF6.  But why you give up the BEST feature in EFCORE?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6665555023","Type":"PullRequestEvent","CreatedAt":"2017-10-03T02:06:10","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7748","RelatedDescription":"Opened pull request \"MSBuild 15.5.113\" (#7748) at dotnet/cli","RelatedBody":"Includes @dsplaisted change https://github.com/Microsoft/msbuild/pull/2567\r\n\r\nI have not started RPS so I can't guarantee this will go in. But assuming no issues it could be ready for tomorrow."},{"Id":"6665250011","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:54:10","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7747","RelatedDescription":"Opened pull request \"Updating the README\" (#7747) at dotnet/cli","RelatedBody":"Part of the work to enable RedHat 6\r\n\r\n@dotnet/dotnet-cli\r\n@janvorli \r\n\r\nSee: https://github.com/johnbeisner/cli/blob/RedHat6Stuff/README.md\r\n\r\n"},{"Id":"6665212628","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:39:38","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7745","RelatedDescription":"Merged pull request \"Use Newtonsoft.Json for UploadToLinuxPackageRepository\" (#7745) at dotnet/cli","RelatedBody":""},{"Id":"6665206851","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:37:26","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7746","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25802-02 (master)\" (#7746) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6665197821","Type":"PullRequestEvent","CreatedAt":"2017-10-02T23:33:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7311","RelatedDescription":"Merged pull request \"Improve the way Roslyn is pulled in\" (#7311) at dotnet/cli","RelatedBody":"In particular, use the Microsoft.NETCore.Compilers package, instead of manually patching together various bits.\r\n\r\nThis is the first part of work that will allow Roslyn to be more independent from CLI, and be able to implement optimizations and improve performance without having to coordinate with the CLI.\r\n\r\nThis PR may not be ready to merge, as the `RetargetRuntimeConfig` hack is not something that we would like to continue doing into the future (even though I believe we're already doing so today?). The fix for that depends on Microsoft.NETCore.Compilers using netcoreapp2.0, which I believe might not happen until 2.0 ships (@jaredpar likely could explain more on why that is, I'm not 100% sure on the reasoning). However, I wanted to start the code review process on other aspects of this change.\r\n\r\n---\r\n\r\nA major change in this PR is changing the way crossgen works - before, we were crossgenning all assemblies simultaneously, with pulled-in packages allowing to stomp on each other's dependencies and change versions, etc.. This caused a lot of issues, especially with the new Roslyn bits. I have changed the way crossgenning works to crossgen batches of assemblies - where each batch is in its own isolated world, and cannot see assemblies from other batches. (At runtime, each \"batch\" is always in a separate process, so this is okay). The currently-defined batches are the F# dir, the Roslyn dir, and \"everything else\". F# gets a little complicated, since they have an assembly (`FSharp.Build.dll`) that is intended to be used by the process running in the \"everything else\" dir, and doesn't reference anything in the FSharp dir. (The way Roslyn handles this is having its Build.dll be in the root Roslyn folder, and then the out-of-proc compiler stuff is in the `bincore` folder - so it's simple to just crossgen the bincore folder as a batch, and include the Roslyn dir in the \"everything else\" batch.)\r\n\r\nPing @livarcocc, as they were included in the planning of this PR."},{"Id":"6665011531","Type":"PullRequestEvent","CreatedAt":"2017-10-02T22:30:44","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7746","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-25802-02 (master)\" (#7746) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6664043234","Type":"PullRequestEvent","CreatedAt":"2017-10-02T18:39:16","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/523","RelatedDescription":"Merged pull request \"Add auto dependency flow repo API\" (#523) at dotnet/standard","RelatedBody":"Implement [auto dependency flow repo API](https://github.com/dotnet/source-build/blob/dev/release/2.0/Documentation/auto-dependency-flow/api.md).\r\n\r\nThe new BuildTools package provides a common implementation for most of the args (https://github.com/dotnet/buildtools/pull/1707), but some changes are required:\r\n * The `dir.props` source changes are because BuildTools now provides a default value of `RestoreSources` based on repo API args. BuildTools also now automatically flows the property into the restore command."},{"Id":"6663597203","Type":"PullRequestEvent","CreatedAt":"2017-10-02T16:59:28","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/523","RelatedDescription":"Opened pull request \"Add auto dependency flow repo API\" (#523) at dotnet/standard","RelatedBody":"Implement [auto dependency flow repo API](https://github.com/dotnet/source-build/blob/dev/release/2.0/Documentation/auto-dependency-flow/api.md).\r\n\r\nThe new BuildTools package provides a common implementation for most of the args (https://github.com/dotnet/buildtools/pull/1707), but some changes are required:\r\n * The `dir.props` source changes are because BuildTools now provides a default value of `RestoreSources` based on repo API args. BuildTools also now automatically flows the property into the restore command."},{"Id":"6662856018","Type":"IssuesEvent","CreatedAt":"2017-10-02T14:31:19","Actor":"mattkoch614","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/522","RelatedDescription":"Opened issue \"Creating a class library in 2.0 and referencing it from an SSIS script component/task\" (#522) at dotnet/standard","RelatedBody":"We have a set of SSIS packages that leverage script components and script tasks. These packages were written in Visual Studio 2012 and are deployed to a server that has the .NET framework 4.5 and SQL Server 2012 Standard installed.\r\n\r\nWhat we'd like to do is write some new class libraries using .NET Standard 2.0 and be able to reference them from the script components and tasks inside of our existing SSIS packages. The script components and tasks by default target the .NET Framework 4.0.  Is this possible?\r\n\r\nPreliminary testing of this scenario results in the script tasks throwing an error of ``'System.Obect' is not defined`` which leads me to believe there is some clashing going on with either the Visual Studio version or the .NET framework itself.\r\n\r\nAny help greatly appreciated. "},{"Id":"6659512216","Type":"IssuesEvent","CreatedAt":"2017-10-01T12:45:22","Actor":"jogibear9988","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/521","RelatedDescription":"Opened issue \"Error loading a WPF App (Net 4.6.2) referncing NetStandart 2.0 Dlls\" (#521) at dotnet/standard","RelatedBody":"I have a huge Solution wich using over 50 Assemblys. Some of them Target Netstandart 2.0, some older Versions.\r\n\r\nNow I have the following error during Startup:\r\n\r\nDie Datei oder Assembly \"System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" oder eine Abhängigkeit davon wurde nicht gefunden. Die gefundene Manifestdefinition der Assembly stimmt nicht mit dem Assemblyverweis überein. (Ausnahme von HRESULT: 0x80131040)\r\nDateiname: \"System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" ---> System.IO.FileLoadException: Die Datei oder Assembly \"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" oder eine Abhängigkeit davon wurde nicht gefunden. Die gefundene Manifestdefinition der Assembly stimmt nicht mit dem Assemblyverweis überein. (Ausnahme von HRESULT: 0x80131040)\r\nDateiname: \"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"\r\n\r\nbut I have the Assembly Redirect:\r\n\r\n  <dependentAssembly>\r\n                <assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n                <bindingRedirect oldVersion=\"0.0.0.0-4.1.1.0\" newVersion=\"4.1.1.0\" />\r\n            </dependentAssembly>\r\n\r\nIn my app.config! What can I do?"},{"Id":"6657495023","Type":"PullRequestEvent","CreatedAt":"2017-09-30T06:27:41","Actor":"voltagex","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/520","RelatedDescription":"Opened pull request \"Add more explicit instructions for installing Microsoft.Packaging.Tools.Trimming\" (#520) at dotnet/standard","RelatedBody":"Solves https://github.com/dotnet/standard/issues/518"},{"Id":"6657489636","Type":"IssuesEvent","CreatedAt":"2017-09-30T06:22:43","Actor":"voltagex","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/519","RelatedDescription":"Opened issue \"error MSB4018: The \"TrimFiles\" task failed unexpectedly.\" (#519) at dotnet/standard","RelatedBody":"I have done the following:\r\n* Installed Microsoft.Packaging.Tools.Trimming version 1.1.0-preview1-25729-01\r\n* Set up my .csproj to include `<TrimUnusedDependencies>true</TrimUnusedDependencies>` as per https://github.com/dotnet/standard/blob/release/2.0.0/Microsoft.Packaging.Tools.Trimming/docs/trimming.md\r\n\r\n\r\n```\r\n>------ Rebuild All started: Project: Music, Configuration: Debug Any CPU ------\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: The \"TrimFiles\" task failed unexpectedly.\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: System.ArgumentNullException: Value cannot be null.\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: Parameter name: source\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute()\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n1>C:\\Users\\Adam\\.nuget\\packages\\microsoft.packaging.tools.trimming\\1.1.0-preview1-25729-01\\build\\Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n1>Done building project \"Music.csproj\" -- FAILED.\r\n```\r\n\r\nAny clues? This is pretty much the MVC template from the 2.0.0 SDK."},{"Id":"6657469160","Type":"IssuesEvent","CreatedAt":"2017-09-30T06:03:47","Actor":"voltagex","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/518","RelatedDescription":"Opened issue \"Microsoft.Packaging.Tools.Trimming package can't be found\" (#518) at dotnet/standard","RelatedBody":"VS2017, .NET Core 2.0.\r\n\r\nThe instructions in https://github.com/dotnet/standard/blob/release/2.0.0/Microsoft.Packaging.Tools.Trimming/docs/trimming.md say to install `Microsoft.Packaging.Tools.Trimming` however I can't locacte that package.\r\n\r\n```\r\nPM> Install-Package Microsoft.Packaging.Tools.Trimming\r\nInstall-Package : Unable to find package 'Microsoft.Packaging.Tools.Trimming'\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.Packaging.Tools.Trimming\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nTime Elapsed: 00:00:01.2276512\r\nPM> \r\n```"},{"Id":"6657075642","Type":"PullRequestEvent","CreatedAt":"2017-09-30T00:35:13","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/516","RelatedDescription":"Merged pull request \"Add developer metaphor for .NET Standard\" (#516) at dotnet/standard","RelatedBody":"Based on @davidfowl's [gist](https://gist.github.com/davidfowl/8939f305567e1755412d6dc0b8baf1b7)"},{"Id":"6656669297","Type":"PullRequestEvent","CreatedAt":"2017-09-29T21:39:50","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/517","RelatedDescription":"Merged pull request \"Update prerelease label to 'servicing'\" (#517) at dotnet/standard","RelatedBody":"@weshaggard @Petermarcu "},{"Id":"6656492672","Type":"PullRequestEvent","CreatedAt":"2017-09-29T20:50:34","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/517","RelatedDescription":"Opened pull request \"Update prerelease label to 'servicing'\" (#517) at dotnet/standard","RelatedBody":"@weshaggard @Petermarcu "},{"Id":"6656052612","Type":"PullRequestEvent","CreatedAt":"2017-09-29T18:57:50","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/516","RelatedDescription":"Opened pull request \"Add developer metaphor for .NET Standard\" (#516) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6665938802","Type":"PullRequestEvent","CreatedAt":"2017-10-03T05:17:42","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24391","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-25803-00, beta-25803-00, respectively (master)\" (#24391) at dotnet/corefx","RelatedBody":""},{"Id":"6665782087","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:56:09","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24163","RelatedDescription":"Merged pull request \"Add testing of FileStream not truncating files when opening fails\" (#24163) at dotnet/corefx","RelatedBody":"Test of #24081 (succeeds after dotnet/coreclr#14043)"},{"Id":"6665780669","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:55:25","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24087","RelatedDescription":"Merged pull request \"Reenable Task stack guard tests\" (#24087) at dotnet/corefx","RelatedBody":"Fixed by https://github.com/dotnet/coreclr/pull/14015\r\nReenables tests in and closes https://github.com/dotnet/corefx/issues/23201"},{"Id":"6665780653","Type":"IssuesEvent","CreatedAt":"2017-10-03T03:55:25","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/23201","RelatedDescription":"Closed issue \"System.Threading.Tasks tests hanging\" (#23201) at dotnet/corefx","RelatedBody":"In the last few weeks, CI runs have been timing out sporadically due to the System.Threading.Tasks test project hanging.  It looks like it's due to the RunStackGuardTests test; this test is not new nor has it been changed recently."},{"Id":"6665772090","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:51:01","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24381","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup, ProjectNTfs, ProjectNTfsTestILC to prerelease-02102-02, preview1-25803-01, preview1-25803-01, preview1-25802-02, beta-25802-00, beta-25802-00, respectively (master)\" (#24381) at dotnet/corefx","RelatedBody":""},{"Id":"6665751231","Type":"PullRequestEvent","CreatedAt":"2017-10-03T03:40:32","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/23653","RelatedDescription":"Merged pull request \"Add minimal handling for HTTP 1.0 requests to ManagedHandler\" (#23653) at dotnet/corefx","RelatedBody":"More work may need to be done but this at least fixes issues covered by existing tests. \r\nWe may add more checks to disable 1.1 extensions for 1.0 requests.\r\n\r\n\r\nfixes #23132 "},{"Id":"6665751215","Type":"IssuesEvent","CreatedAt":"2017-10-03T03:40:32","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/23132","RelatedDescription":"Closed issue \"ManagedHandler: Support 1.0 requests\" (#23132) at dotnet/corefx","RelatedBody":"Currently the handler throws an exception for 1.0 requests.  It needs to tolerate them."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6665429688","Type":"PullRequestEvent","CreatedAt":"2017-10-03T01:08:15","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22480","RelatedDescription":"Opened pull request \"Suggest \"in\" for argument positions in IDE\" (#22480) at dotnet/roslyn","RelatedBody":"Fixes #22454\r\n\r\n@jcouv/@jaredpar is master still targeting `15.5`? should this be rebased?\r\ncc @dotnet/roslyn-compiler "},{"Id":"6665427040","Type":"IssuesEvent","CreatedAt":"2017-10-03T01:07:04","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/19274","RelatedDescription":"Reopened issue \"Enable EnC and EE scenarios for generating metadata for IsReadOnlyAttribute\" (#19274) at dotnet/roslyn","RelatedBody":"Work is done for compilation in #18715. We need to make sure it is true for both EnC and EE as well:\r\n\r\n1. Generating IsReadOnly attribute if needed.\r\n2. Evaluating ref-readonly-ness from source if necessary.\r\n3. Overload resolution on such parameters.\r\n4. Using attributes from referenced assemblies vs generating a new one.\r\n\r\nRelated to #17287 and #19216"},{"Id":"6665343959","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:32:10","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22479","RelatedDescription":"Opened pull request \"Add IOperation API for deconstruction assignment expression.\" (#22479) at dotnet/roslyn","RelatedBody":"For v1, we have decided to expose this as assignment with regular conversion data. In v2, we will expose richer API with deconstruction method and also match language specification on whether this is exposed as a conversion or not. This is tracked with #22477.\r\n\r\nFixes #19924"},{"Id":"6665318400","Type":"IssuesEvent","CreatedAt":"2017-10-03T00:21:18","Actor":"nguerrera","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22478","RelatedDescription":"Opened issue \"CscToolExe full path with empty CscToolPath no longer works\" (#22478) at dotnet/roslyn","RelatedBody":"In previous versions, if $(CscToolExe) specified a full path to csc.exe, it would be used even if CscToolPath was unset.\r\n\r\nHowever, this no longer works with latest 15.5 bits.\r\n\r\nThis was discovered when we were unable to ingest a newer Roslyn in to the CLI without also ingesting a change in the way we the compiler location is set.  Now, with dotnet/cli#7311 the CLI no longer relies on the old behavior, so it isn't blocking us. However, this could break anyone else who is setting CscToolExe to a full path. There's a [comment](https://github.com/dotnet/roslyn/blob/39633b336bb1cd571174d1ba53fe51db316db5ef/src/Compilers/Core/MSBuildTask/ManagedCompiler.cs#L427-L428( suggests that it is still supposed to work, but it no longer works in practice.\r\n\r\n\r\n**Version Used**: \r\n\r\nMicrosoft (R) Visual C# Compiler version 2.6.0.62114 (c5ab7f6e)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Install VS 15.3 RTM\r\n\r\n2. Install VS 15.5 from dogfood channel SxS\r\n\r\n3. Launch  VS 15.5 developer command prompt\r\n\r\n4. Set CscToolExe environment variable to point to full path of VS 15.3 RTM compiler\r\n ```\r\n    set CscToolExe=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin\\Roslyn\\csc.exe \r\n```\r\n\r\n5. Build a simple console app in this environment\r\n```\r\n   mkdir somethingsimple\r\n   cd somethingsimple\r\n   msbuild somethingsimple.csproj\r\n```\r\n\r\n**Expected Behavior**:\r\nThe project compiles using the VS 15.3 compiler specified via CscToolExe. \r\n\r\nYou can see this working if you reverse the roles of 15.3 and 15.5: Use 15.3 developer command prompt and point CscToolExe at 15.5 csc.exe full path.\r\n\r\n\r\n**Actual Behavior**:\r\n```\r\n(CoreCompile target) ->\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\bin\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): \r\n  error MSB3082: Task failed because \"\" was not found. [D:\\Src\\ttt\\ttt.csproj]\r\n```\r\n\r\n@khyperia @jaredpar "},{"Id":"6665315254","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:20:00","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22390","RelatedDescription":null,"RelatedBody":"**Customer scenario**\r\n\r\nuser builds a solution and solution has duplicated errors on same file and VS crash. \r\n\r\nthis can be quite common on XAML projects. for example, \"MahApps.Metro\" which is quite popular github project will crash VS when built.\r\n\r\n**Bugs this fixes:**\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/500533\r\n\r\n**Workarounds, if any**\r\n\r\nThere is no workaround.\r\n\r\n**Risk**\r\n\r\nThere is no risk\r\n\r\n**Performance impact**\r\n\r\nthere should be no visible perf impact\r\n\r\n**Is this a regression from a previous update?**\r\n\r\nYes. it regressed when I made build error to preserve error ordering we got from build.\r\n\r\n**Root cause analysis:**\r\n\r\nwe used to use hashset to store errors which doesn't care about duplicates, now it changed to dictionary for ordering and now we became duplicates sensitive.\r\n\r\ntest is added to prevent regression.\r\n\r\n**How was the bug found?**\r\n\r\nTesting.\r\n"},{"Id":"6665315157","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:19:58","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22390","RelatedDescription":"Closed pull request \"guard us from getting duplicated errors from the build.\" (#22390) at dotnet/roslyn","RelatedBody":"**Customer scenario**\r\n\r\nuser builds a solution and solution has duplicated errors on same file and VS crash. \r\n\r\nthis can be quite common on XAML projects. for example, \"MahApps.Metro\" which is quite popular github project will crash VS when built.\r\n\r\n**Bugs this fixes:**\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/500533\r\n\r\n**Workarounds, if any**\r\n\r\nThere is no workaround.\r\n\r\n**Risk**\r\n\r\nThere is no risk\r\n\r\n**Performance impact**\r\n\r\nthere should be no visible perf impact\r\n\r\n**Is this a regression from a previous update?**\r\n\r\nYes. it regressed when I made build error to preserve error ordering we got from build.\r\n\r\n**Root cause analysis:**\r\n\r\nwe used to use hashset to store errors which doesn't care about duplicates, now it changed to dictionary for ordering and now we became duplicates sensitive.\r\n\r\ntest is added to prevent regression.\r\n\r\n**How was the bug found?**\r\n\r\nTesting.\r\n"},{"Id":"6665311155","Type":"IssuesEvent","CreatedAt":"2017-10-03T00:18:18","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22477","RelatedDescription":"Opened issue \"Expose richer desconstruction assignment/conversion info in IOperation v2\" (#22477) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6665844339","Type":"PullRequestEvent","CreatedAt":"2017-10-03T04:28:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4646","RelatedDescription":"Merged pull request \"Update Microsoft.NETCore.Native package\" (#4646) at dotnet/corert","RelatedBody":"Fixes #4640"},{"Id":"6665844324","Type":"IssuesEvent","CreatedAt":"2017-10-03T04:28:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4640","RelatedDescription":"Closed issue \"[RyuJIT/ARM32] Localization problem\" (#4640) at dotnet/corert","RelatedBody":"Hi, when I try to compile and run HelloWorld sample under Tizen ARM, I get the follow issue:\r\n```\r\n#0  0x00000000 in ?? ()\r\n#1  0x0017513a in GlobalizationNative_GetDefaultLocaleName (value=0x509810, valueLength=157) at /opt/code/src/corefx/System.Globalization.Native/locale.cpp:228\r\n#2  0x001cc17e in S_P_CoreLib_Interop_GlobalizationInterop__GetDefaultLocaleName () at CoreRT/src/System.Private.CoreLib/src/System/Globalization/CultureInfo.cs:173\r\n#3  0x001b5610 in S_P_CoreLib_System_Globalization_CultureData__GetDefaultLocaleName () at CoreRT/src/System.Private.CoreLib/shared/System/Globalization/CultureData.Unix.cs:111\r\n#4  0x001a9e4e in S_P_CoreLib_System_Globalization_CultureInfo__GetUserDefaultCulture () at CoreRT/src/System.Private.CoreLib/src/System/Globalization/CultureInfo.Unix.cs:18\r\n#5  0x00197f9e in S_P_CoreLib_System_Globalization_CultureInfo__Init () at CoreRT/src/System.Private.CoreLib/src/System/Globalization/CultureInfo.cs:159\r\n#6  0x001a291c in S_P_CoreLib_System_Globalization_CultureInfo___cctor () at CoreRT/src/System.Private.CoreLib/src/System/Globalization/CultureInfo.cs:149\r\n#7  0x001933c0 in S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__Call<Int32> () at CoreRT/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/ClassConstructorRunner.NonPortable.cs:35\r\n#8  0x001853e8 in S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun () at CoreRT/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/ClassConstructorRunner.cs:97\r\n#9  0x00183c16 in S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase () at CoreRT/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/ClassConstructorRunner.cs:43\r\n#10 0x0018ff82 in S_P_CoreLib_System_Globalization_CultureInfo__get_InvariantCulture () at CoreRT/src/System.Private.CoreLib/src/System/Globalization/CultureInfo.cs:602\r\n#11 0x001da91a in System_Runtime_Extensions_System_IO_TextWriter_NullTextWriter___ctor () at /root/corefx-939093/src/System.Runtime.Extensions/src/System/IO/TextWriter.cs:574\r\n#12 0x001d2d66 in System_Runtime_Extensions_System_IO_TextWriter___cctor () at /root/corefx-939093/src/System.Runtime.Extensions/src/System/IO/TextWriter.cs:21\r\n#13 0x001933c0 in S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__Call<Int32> () at CoreRT/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/ClassConstructorRunner.NonPortable.cs:35\r\n#14 0x001853e8 in S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun () at CoreRT/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/ClassConstructorRunner.cs:97\r\n#15 0x00183c16 in S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase () at CoreRT/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/ClassConstructorRunner.cs:43\r\n#16 0x001da3ac in System_Runtime_Extensions_System_IO_TextWriter___ctor_0 () at /root/corefx-939093/src/System.Runtime.Extensions/src/System/IO/TextWriter.cs:33\r\n#17 0x001d299e in System_Runtime_Extensions_System_IO_StreamWriter___ctor_3 () at /root/corefx-939093/src/System.Runtime.Extensions/src/System/IO/StreamWriter.cs:94\r\n#18 0x001b0082 in System_Console_System_Console__CreateOutputWriter () at /root/corefx-939093/src/System.Console/src/System/Console.cs:120\r\n#19 0x001ad1b6 in System_Console_System_Console___c___get_Out_b__25_0 () at /root/corefx-939093/src/System.Console/src/System/Console.cs:114\r\n#20 0x001d35b2 in S_P_CoreLib_System_Threading_LazyInitializer__EnsureInitializedCore_3<System___Canon> () at CoreRT/src/System.Private.CoreLib/shared/System/Threading/LazyInitializer.cs:266\r\n#21 0x001c12dc in S_P_CoreLib_System_Threading_LazyInitializer__EnsureInitialized_3<System___Canon> () at CoreRT/src/System.Private.CoreLib/shared/System/Threading/LazyInitializer.cs:245\r\n#22 0x001b04ba in System_Console_System_Console__EnsureInitialized<System___Canon> () at /root/corefx-939093/src/System.Console/src/System/Console.cs:29\r\n#23 0x001950d4 in System_Console_System_Console__get_Out () at /root/corefx-939093/src/System.Console/src/System/Console.cs:114\r\n#24 0x0019435c in System_Console_System_Console__WriteLine_12 () at /root/corefx-939093/src/System.Console/src/System/Console.cs:560\r\n#25 0x00184e50 in Hello_Hello_Program__Main () at CoreRT/src/System.Private.CoreLib/src/Internal/Runtime/Augments/EnvironmentAugments.cs:127\r\n#26 0x00183bc8 in Hello__Module___MainMethodWrapper () at <stdin>:16707566\r\n#27 0x0017b44a in Hello__Module___StartupCodeMain () at <stdin>:16707566\r\n#28 0x00020708 in main (argc=1, argv=0xbefffe14) at CoreRT/src/Native/Bootstrap/main.cpp:332\r\n```\r\nThis is because the CoreCRL doesn't initialize the non-invariant mode with ICU. When I try to call GlobalizationNative_LoadICU() from GlobalizationNative_GetDefaultLocaleName in CoreCLR it's working. As I see CoreCLR uses invariant mode by default. But CoreRT - is not. How can I fix this? Maybe I should add ICU initialization from CoreCLR to CoreRT?"},{"Id":"6665805893","Type":"PullRequestEvent","CreatedAt":"2017-10-03T04:08:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4649","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#4649) at dotnet/corert","RelatedBody":""},{"Id":"6665805611","Type":"PullRequestEvent","CreatedAt":"2017-10-03T04:07:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4649","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#4649) at dotnet/corert","RelatedBody":""},{"Id":"6665352608","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:35:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4648","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#4648) at dotnet/corert","RelatedBody":""},{"Id":"6665351848","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:35:31","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4647","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4647) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6665350195","Type":"PullRequestEvent","CreatedAt":"2017-10-03T00:34:50","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4647","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4647) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6664873785","Type":"PullRequestEvent","CreatedAt":"2017-10-02T21:51:24","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4639","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#4639) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6664873105","Type":"PullRequestEvent","CreatedAt":"2017-10-02T21:51:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4643","RelatedDescription":"Merged pull request \"Fix VS2017 IntelliSense\" (#4643) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"912821941706268673","CreatedAt":"2017-09-26T23:31:24+00:00","UserScreenname":"dotnet","Text":"Build a web service with F# and .NET Core 2.0 https://t.co/2jSgo1gbty","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":112,"FavoriteCount":64,"RawContent":null},{"Id":"912406212238442498","CreatedAt":"2017-09-25T19:59:27+00:00","UserScreenname":"dotnet","Text":".NET Framework September 2017 Preview of Quality Rollup https://t.co/tkuoBxjYHC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":19,"RawContent":null},{"Id":"911357565769936896","CreatedAt":"2017-09-22T22:32:30+00:00","UserScreenname":"dotnet","Text":".NET Core September 2017 Update — macOS High Sierra Support https://t.co/k9gJ5jFIN8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":24,"RawContent":null},{"Id":"911015945291919360","CreatedAt":"2017-09-21T23:55:01+00:00","UserScreenname":"dotnet","Text":"Last one! Happening now on .NET Fundamentals Track @ #dotNETConf: Learn how to use #FSharp to write front-end &amp; bac… https://t.co/OH8cMAcq4I","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":26,"FavoriteCount":16,"RawContent":null},{"Id":"911005750410960896","CreatedAt":"2017-09-21T23:14:31+00:00","UserScreenname":"dotnet","Text":"PSA: .NET Framework September Update - known issues published https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"911000845860458498","CreatedAt":"2017-09-21T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Get started w/ #FSharp, .NET Core &amp; #VSCode. Watch… https://t.co/VRkwBvSNPU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":31,"FavoriteCount":15,"RawContent":null},{"Id":"910988157197344768","CreatedAt":"2017-09-21T22:04:36+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 Accessibility and WPF Improvements https://t.co/eZLFQxhlLj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":52,"RawContent":null}]}},"RunOn":"2017-10-03T05:30:18.3319129Z","RunDurationInMilliseconds":6749}