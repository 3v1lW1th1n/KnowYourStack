{"Data":{"Vue-Issues":{"Issues":[{"Id":"459604096","IsPullRequest":false,"CreatedAt":"2019-06-23T18:35:01","Actor":"hadrian625","Number":"10186","RawContent":null,"Title":"Click on button not triggered when DOM changes","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/s08n4agu/2/](https://jsfiddle.net/s08n4agu/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click the Save button\r\n2. Red error message is shown and Save count text is 1\r\n3. Type something in the text input (ex. Adrian)\r\n4. Click the save on its lower part\r\n5. The red error message disappears, Save button is move up, but the save count remains to 1, which indicates the click on button was not triggered at all. Only if the Save button is clicked again, the click handler is invoked and save count is incremented\r\n\r\n### What is expected?\r\nThe click handler on save button is actually invoked for step 4\r\n\r\n### What is actually happening?\r\nThe click handler is not invoked at all when the button moved up due to the fact that the red text element is removed from DOM.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10186","RelatedDescription":"Closed issue \"Click on button not triggered when DOM changes\" (#10186)"},{"Id":"459584105","IsPullRequest":false,"CreatedAt":"2019-06-23T14:47:59","Actor":"catastrop","Number":"10185","RawContent":null,"Title":"question: why doesn't Javascript have optional static typing ? ","State":"closed","Body":"tc39 is adding new things to JS. But why not optional static typing ?\r\n\r\nIf they do it, we don't have to use Typescript anymore and being able to pass type information to the engine.\r\n\r\nWe will have less dev dependency.","Url":"https://github.com/vuejs/vue/issues/10185","RelatedDescription":"Closed issue \"question: why doesn't Javascript have optional static typing ? \" (#10185)"},{"Id":"459560621","IsPullRequest":false,"CreatedAt":"2019-06-23T11:47:52","Actor":"grandsong","Number":"10184","RawContent":null,"Title":"Do NOT throw warning when optional binding happens","State":"closed","Body":"## What problem does this feature solve?\r\n### First off, what is \"Optional Binding\"?\r\n\r\nSounds fashionable. Yes, it is, in Swift.\r\n\r\nIn case you don't quite recall, below is the statement of this useful feature of Swift:\r\n\r\n    if let constantName = someOptional {\r\n        statements (using that constantName)\r\n    }\r\n\r\nWhich is also called **\"if let\"** statement.\r\n\r\nAnd the doc is here: https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html#ID333\r\n\r\nSo, what's its counterpart in Vue?\r\n\r\nFor example:\r\n\r\nI have data of a list of trainees and a dictionary of training records.\r\n\r\nFor some reason, the two are separated.\r\n\r\nI have to check if a trainee has records, and if so, show details of the records.\r\n\r\n    .trainee-cards\r\n        .trainee-card(v-for=\"trainee in trainees\" key=\"trainee.id\")\r\n            .trainee-name {{trainee.name}}\r\n            section.training-records\r\n                .training-records-details(v-if=\"training-records-by-trainee[trainee.id]\")\r\n                    .count Count: {{training-records-by-trainee[trainee.id].count}}\r\n                    .last-date Last trained on {{training-records-by-trainee[trainee.id].recent-records[training-records-by-trainee[trainee.id].recent-records.length - 1].date}}\r\n                    .recent-records\r\n                        .record(v-for=\"record in training-records-by-trainee[trainee.id].recent-records\")\r\n                            ... (a line chart of last 5 trainings) ...\r\n                .no-records(else) No records yet.\r\n\r\nYou can see `training-records-by-trainee[trainee.id]` is used many times and the codes are terribly **long and messy**.\r\n\r\nThis example is a bit extreme, but you can get the idea.\r\n\r\nThe good news is: we can assign a **local variale** in **v-if**!\r\n\r\n    ...\r\n                .training-records-details(v-if=\"record-data = training-records-by-trainee[trainee.id]\")\r\n                    .count Count: {{record-data.count}}\r\n                    .last-date Last trained on {{record-data.recent-records[record-data.recent-records.length - 1].date}}\r\n                    .recent-records\r\n                        .record(for=\"record in record-data.recent-records\")\r\n                            ... (a line chart of last 5 trainings) ...\r\n\r\nThis makes life much easier.\r\n\r\n### Alternatives?\r\n\r\nYes, I know, we can always use a component to handle `record-data`.\r\n\r\nBut that would be **overkill**, unless the component can be reused.\r\n\r\nAnother way to ease the pain would be baking data beforehand.\r\n\r\nFor example,\r\n\r\n        data: function(){\r\n            trainees.forEach((trainee)=>{\r\n                trainee.record-data = training-records-by-trainee[trainee.id]\r\n            });\r\n            return {\r\n                trainees\r\n            };\r\n\r\nThen we can write `trainee.record-data`.\r\n\r\nNeeter than `training-records-by-trainee[trainee.id]`, but not as neet as \"optional binding\".\r\n\r\n### So, what's the problem?\r\n\r\nThis \"optional binding\" already works well and is as helpful just as in Swift.\r\n\r\nThen, here's the bad news: it invites such a warning (actually, a red error):\r\n\r\n    [Vue warn]: Property or method \"record-data\" is not defined on the instance but referenced during render.\r\n\r\nThis is an eyesore.\r\n\r\n\r\n## What does the proposed API look like?\r\n\r\nJust make vue **recognize** optional binding and thus **do not** warn about the local variable, which **IS** \"defined on the instance\".\r\n\r\n\r\n### Possible controversy\r\n\r\nSome people may dislike the idea of \"allowing\" or even \"encouraging\" assignment in `if` condition.\r\n\r\nAn example is issue #7631: \"warn when assignment in v-if in development mode\"\r\n\r\nAs @posva said, \"this is a js common pitfall for beginners\" to mistakenly write \"=\" when they actually want \"==\".\r\n\r\nAnd they usually would lean the lesson in hard way, having paid much for such mistakes.\r\n\r\nI was one of them, of course. So I know how natural it is to have a reflexive aversion to \"optional binding\" when learning Swift.\r\n\r\nBut after a while, I realized we should not object to a very good thing only because of some other mistake, which is not its fault.\r\n\r\nIn pure js, even today, you can still make such a mistake like `if(a = b){console.log(a);}`, and you get a global `window.a` as an unexpected result.\r\n\r\nI hope someday \"strict mode\" will forbid this noxious pitfall and optional binding will be introduced into JavaScript, just like **\"for let\" which already is in ES5**.\r\n\r\nAnyway, in vue, there is **no worry** about mistakenly creating a global variale via assignment in v-if.\r\n\r\nNo matter why, vue has the feature \"optional binding\" **already**, partially but effectively!\r\n\r\nIt is just unknown to the public. It is a hidden gem.\r\n\r\nAnd that warning makes developers feel uneasy, although it is not a result of intention of guarding \"=\" in \"v-if\" at all.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10184","RelatedDescription":"Closed issue \"Do NOT throw warning when optional binding happens\" (#10184)"},{"Id":"459538476","IsPullRequest":false,"CreatedAt":"2019-06-23T05:28:44","Actor":"DominusVilicus","Number":"10183","RawContent":null,"Title":"[Feature] API for rendering VNodes to string","State":"open","Body":"## What problem does this feature solve?\r\nI've created a `<head>` management system and an awesome feature would be a native way to render VNodes to strings, both in SSR and on client-side\r\n\r\nHere's what I've been currently doing in user-land:\r\n**hello-world.vue**\r\n```html\r\n<template>\r\n    <master>\r\n        <template slot=\"title\">Hello World App</template>\r\n        <template slot=\"description\">Meta description here</template>\r\n        <template slot=\"content\">\r\n            Hello World\r\n        </template>\r\n    </master>\r\n</template>\r\n<script>\r\nimport master from '@/layouts/master'\r\n\r\nexport default {\r\n    components: {\r\n        master\r\n    }\r\n}\r\n</script>\r\n```\r\n\r\n**master.vue**\r\n```html\r\n<template>\r\n    <servue>\r\n        <template slot=\"head\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n            <title>{{ this.$slots.title ? `${ this.$slots.title[0].text } - My App`: `My App` }}</title>\r\n            <meta v-if=\"this.$slots.description\" name=\"description\" :content=\"this.$slots.description[0].text\">\r\n            <slot name=\"head\"/>\r\n        </template>\r\n        <template slot=\"content\">\r\n            <slot name=\"content\"/>\r\n        </template>\r\n    </servue>\r\n</template>\r\n\r\n<script>\r\nimport servue from './servue'\r\n\r\nexport default {\r\n    components: {\r\n        servue\r\n    }\r\n}\r\n</script>\r\n```\r\n\r\nYou can probably see some issues with how this is done, it only accounts for a single text node, and there may be more. Plus, it seems hacky to directly access slot data inside a template\r\n\r\nThe head is currently being stringified by a small component:\r\n**servue.vue**\r\n```html\r\n<script>\r\nconst unaryTags = [\r\n    \"area\",\r\n    \"base\",\r\n    \"br\",\r\n    \"col\",\r\n    \"embed\",\r\n    \"hr\",\r\n    \"img\",\r\n    \"input\",\r\n    \"keygen\",\r\n    \"link\",\r\n    \"meta\",\r\n    \"param\",\r\n    \"source\",\r\n    \"track\",\r\n    \"wbr\"\r\n]\r\n\r\nfunction renderStartTag(VNode) {\r\n    let html = `<${VNode.tag}`\r\n\r\n    if (VNode.data) {\r\n        if (VNode.data.attrs) {\r\n            let attr = VNode.data.attrs\r\n            for (let name in attr) {\r\n                if (attr[name] === \"\") {\r\n                    html += ` ${name}`\r\n                } else {\r\n                    html += ` ${name}=\"${attr[name]}\"`\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return html + \">\";\r\n}\r\n\r\nfunction isUnaryTag(VNode) {\r\n    return unaryTags.indexOf(VNode.tag) > -1\r\n}\r\n\r\nfunction getFullTag(VNode) {\r\n    if (!VNode.tag) return VNode.text\r\n\r\n    let html = renderStartTag(VNode)\r\n\r\n    if (VNode.children) {\r\n        html += getChildren(VNode)\r\n    }\r\n    if (!isUnaryTag(VNode)) {\r\n        html += `</${VNode.tag}>`\r\n    }\r\n    return html;\r\n}\r\n\r\nfunction getChildren(VNode) {\r\n    let html = \"\"\r\n    for (let i in VNode.children) {\r\n        let child = VNode.children[i]\r\n        html += getFullTag(child)\r\n    }\r\n    return html\r\n}\r\nexport default {\r\n    created() {\r\n        let VNodes = this.$slots.head\r\n        let renderedHead = \"\"\r\n\r\n        for (let i in VNodes) {\r\n            let VNode = VNodes[i];\r\n            renderedHead += getFullTag(VNode)\r\n        }\r\n\r\n        if (this.$isServer) {\r\n            this.$ssrContext.head = `<!--VUESERVEHEAD START-->${renderedHead}<!--VUESERVEHEAD END-->`\r\n        }else{\r\n            let head = document.head\r\n            let node\r\n            let foundStart = false\r\n            let startNode\r\n\r\n            let children = head.childNodes\r\n\r\n            for(let node of children){\r\n                if(node.nodeType === Node.COMMENT_NODE){\r\n                    if(node.nodeValue === \"VUESERVEHEAD START\"){\r\n                        foundStart = true\r\n                        startNode = node\r\n                        continue\r\n                    }\r\n                }\r\n                if(foundStart){\r\n                    if(node.nodeType === Node.COMMENT_NODE){\r\n                        if(node.nodeValue === \"VUESERVEHEAD END\"){\r\n                            break\r\n                        }\r\n                    }\r\n                    head.removeChild(node)\r\n                }\r\n            }\r\n\r\n            if(startNode){\r\n                let fakeMeta = document.createElement('meta')\r\n                startNode.after(fakeMeta)\r\n\r\n                fakeMeta.outerHTML = renderedHead\r\n            }\r\n\r\n        }\r\n    },\r\n    render(h){\r\n        return h('div', {\r\n            class: \"servueWrapper\"\r\n        }, this.$slots.content)\r\n    }\r\n};\r\n</script>\r\n```\r\n\r\nThis whole process could be simplified by an API exposed by vue. The API already exists, it just needs to be exposed by Vue\r\n\r\n## What does the proposed API look like?\r\n\r\n```js\r\nVue.renderVNodesToString([VNode])\r\n$vm.renderVNodesToString([VNode])\r\n\r\nimport { renderVNodesToString } from 'vue'\r\n```\r\n\r\nA few ideas","Url":"https://github.com/vuejs/vue/issues/10183","RelatedDescription":"Open issue \"[Feature] API for rendering VNodes to string\" (#10183)"},{"Id":"459246455","IsPullRequest":false,"CreatedAt":"2019-06-22T19:11:38","Actor":"plehnen","Number":"10179","RawContent":null,"Title":"Computed property is not watching changes on this.$scopedSlots.default","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-bwtfk?fontsize=14](https://codesandbox.io/s/vue-template-bwtfk?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPlease see the reproduction in codesandbox.\r\n\r\n### What is expected?\r\nThe content should become visible, as soon as the data is changed.\r\n\r\n### What is actually happening?\r\nIt is still not rendered.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10179","RelatedDescription":"Closed issue \"Computed property is not watching changes on this.$scopedSlots.default\" (#10179)"},{"Id":"458590734","IsPullRequest":false,"CreatedAt":"2019-06-22T19:09:31","Actor":"AllenField","Number":"10172","RawContent":null,"Title":"props in the data of a vnode will not be resolved into the $attrs of the component instance of the vnode","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fubai7/a2znbx94/](https://jsfiddle.net/fubai7/a2znbx94/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nVue.component('test', {\r\n  inheritAttrs: false,\r\n  template: '<div>{{$attrs.content}}</div>'\r\n})\r\n\r\nVue.component('container0', {\r\n  template: '<test content=\"container0\"></test>'\r\n})\r\n\r\nVue.component('container1', {\r\n  render (h) {\r\n    return h('test', {\r\n      props: {\r\n        content: 'container1'\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nVue.component('container2', {\r\n  render (h) {\r\n    return h('test', {\r\n      attrs: {\r\n        content: 'container2'\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nnew Vue({\r\n  el: '#app'\r\n})\r\n```\r\n\r\n### What is expected?\r\nprops in the data of a vnode will be resolved into the $attrs of the component instance of the vnode\r\n\r\n### What is actually happening?\r\nprops in the data of a vnode will not be resolved into the $attrs of the component instance of the vnode\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10172","RelatedDescription":"Closed issue \"props in the data of a vnode will not be resolved into the $attrs of the component instance of the vnode\" (#10172)"},{"Id":"459291908","IsPullRequest":true,"CreatedAt":"2019-06-22T04:48:51","Actor":"vue-bot","Number":"10181","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10181","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10181)"},{"Id":"459412150","IsPullRequest":false,"CreatedAt":"2019-06-22T00:26:21","Actor":"pmgexpo17","Number":"10182","RawContent":null,"Title":"await Vue.nextTick() returns undefined","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/5p6g2wxL/](https://jsfiddle.net/5p6g2wxL/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHere is the sample code, which is a vuex test module sample :\r\nimport Vue from 'vue'\r\nclass UnitTest {\r\n  get timestamp() {\r\n    return this._timestamp();\r\n  }\r\n  \r\n  async _timestamp() {\r\n    // make sure each timestamp is unique\r\n    let promise = await Vue.nextTick()\r\n    console.log('timestamp ready : ', promise)\r\n    return new Date().getTime().toString()\r\n  }\r\n}\r\nlet test1 = new UnitTest()\r\nconsole.log('timestamp : ', test1.timestamp)\r\n\r\n\r\n### What is expected?\r\nAccording to the docs, calling Vue.nextTick() or this.$nextTick() returns a promise.\r\n https://vuejs.org/v2/api/#vm-nextTick\r\n\r\n\r\n\r\n### What is actually happening?\r\nMy code shows that Vue.nextTick() doesn't return a promise\r\n\r\n\r\n---\r\n1. Is there a problem calling Vue.nextTick() in a custom vuex module?\r\n2. Is there a problem with my async / await syntax?\r\nI followed this related mozilla tutorial : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10182","RelatedDescription":"Closed issue \"await Vue.nextTick() returns undefined\" (#10182)"},{"Id":"459270328","IsPullRequest":false,"CreatedAt":"2019-06-21T16:08:03","Actor":"EvanBurbidge","Number":"10180","RawContent":null,"Title":"click outside method prematurely fires the closing event","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-ji7ml](https://codesandbox.io/s/vue-template-ji7ml)\r\n\r\n\r\n### Steps to reproduce\r\nOpen the above link\r\nClick on the button\r\n\r\n### What is expected?\r\nThe text should show.\r\n\r\n### What is actually happening?\r\nThe event that fires to call the \"hideChild\" method is called before the element is created, perhaps this is a premature call of the method. If you watch the console you will see hiding child element without click is logged to the console. \r\n\r\n---\r\nI know we can use .stop on the click event handler, however in my current application there are too many call sites to try and find them all. This means that we need to try to stop the propagation of the event within the click outside directive. \r\n\r\nIf we can call the stop inside the clickoutside.js  this would be a big help  as it would mean that one file has to be changed instead of 1 -> N files.\r\n\r\nI have tried calling stop within the bind method, but so far have not been able to stop the event from propagating. \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10180","RelatedDescription":"Open issue \"click outside method prematurely fires the closing event\" (#10180)"},{"Id":"459072848","IsPullRequest":false,"CreatedAt":"2019-06-21T08:18:24","Actor":"MasoumehEbhami","Number":"10178","RawContent":null,"Title":"Deserialize data that comes from laravel in vuejs ","State":"closed","Body":"Hi all,\r\nI fetched a serialize data from laravel in my vuejs app and now I can not deserialize the data with common methods like JSON.parse() , what I should to do exactly?\r\nI know that this question is simple but I am really confused\r\nsample of my data:\r\n\r\n> a:1:{s:32:\"9d02074b55380f2b5a98b4e99f59bbfe\";a:7:{s:2:\"id\";s:3:\"117\";s:4:\"name\";s:19:\"Deine Pizza, medium\";s:5:\"price\";d:7.5;s:3:\"qty\";d:1;s:7:\"options\";a:8:{s:3:\"_al\";s:8:\"x20RJkN6\";s:3:\"_pi\";s:3:\"117\";s:3:\"_hp\";s:1:\"1\";s:3:\"_fl\";s:0:\"\";s:3:\"_ca\";s:2:\"13\";s:22:\"Classic-Teig {11}[E4S]\";s:1:\"0\";s:44:\"Pizza mit wÃ¼rzigem KÃ¤se im Rand {191}[TQo]\";s:4:\"2.35\";s:25:\"Bauernschinken {195}[e0H]\";s:4:\"2.35\";}s:5:\"rowid\";s:32:\"9d02074b55380f2b5a98b4e99f59bbfe\";s:8:\"subtotal\";d:7.5;}}`\r\n","Url":"https://github.com/vuejs/vue/issues/10178","RelatedDescription":"Closed issue \"Deserialize data that comes from laravel in vuejs \" (#10178)"},{"Id":"459023082","IsPullRequest":false,"CreatedAt":"2019-06-21T06:42:19","Actor":"PaulEdouardB","Number":"10177","RawContent":null,"Title":"A method's name passed to v-on:click can't begin with \"function\" and a Capitalized word","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/abn13gqy/](https://jsfiddle.net/abn13gqy/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Add a @click handler to a component\r\n- Pass a function with parameter called with a name that begin with \"function\"   a Capitalized word\r\n- Run\r\n\r\n### What is expected?\r\nThe function should run only on click\r\n\r\n### What is actually happening?\r\nThe function is run as soon as the component is loaded\r\nA TypeError is thrown:  _vm.function in not a function or handler is undefined\r\n\r\n---\r\nI believe that the vue compiler parse \"functionName(param)\" as \"function Name(param)\" thus as the parsed string is evaluated, the function runs immediately when loaded\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10177","RelatedDescription":"Closed issue \"A method's name passed to v-on:click can't begin with \"function\" and a Capitalized word\" (#10177)"},{"Id":"458992385","IsPullRequest":false,"CreatedAt":"2019-06-21T03:39:58","Actor":"YuJieLian","Number":"10176","RawContent":null,"Title":"How Vue achieves backward without refreshing the page and keeps its position when jumping","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nHow to use Vue to achieve the regression effect of native html. That is, when you go back, you don't refresh the page and keep it in place.Someone mentioned keep-alive, but it didn't work.Because it only decides to refresh the view when the route changes, but I also need to update the view when searching, filtering and sorting in the page, but the route does not change.\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10176","RelatedDescription":"Closed issue \"How Vue achieves backward without refreshing the page and keeps its position when jumping\" (#10176)"},{"Id":"458990429","IsPullRequest":false,"CreatedAt":"2019-06-21T03:30:42","Actor":"GDCPedro","Number":"10175","RawContent":null,"Title":"Vue project + VS code TAKE 100% CPU process.","State":"closed","Body":"\r\n![vscodeIssue](https://user-images.githubusercontent.com/36934222/59895603-bc8c9800-9417-11e9-93dd-259a21f570fb.png)\r\nI just  tap abc on VS code in my VUE project, but the computer becomes very slow, the CPU runs at 100%, and VS Code. Because of the hot reload? Evan, help me :), 3Q.","Url":"https://github.com/vuejs/vue/issues/10175","RelatedDescription":"Closed issue \"Vue project + VS code TAKE 100% CPU process.\" (#10175)"},{"Id":"458854196","IsPullRequest":false,"CreatedAt":"2019-06-21T02:06:08","Actor":"Anu1601CS","Number":"10174","RawContent":null,"Title":"Props are getting update from the child to parent.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-2x864?fontsize=14](https://codesandbox.io/s/vue-template-2x864?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere are two types of  behaviors:\r\n\r\n1. In child component, if we update the props ( Array types ) the value of array its gets updated in both child and parent, but not getting reflecting in the template.\r\n\r\n2. In child component, if we update the props ( Objects types ) the value of object its gets updated in both child and parent, and also getting reflecting in the template\r\n\r\nhttps://codesandbox.io/s/vue-template-2x864?fontsize=14\r\n\r\n### What is expected?\r\nAccording to the official document, it should not update in the parent component.\r\n\r\n### What is actually happening?\r\nUpdating in parent components,\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10174","RelatedDescription":"Closed issue \"Props are getting update from the child to parent.\" (#10174)"},{"Id":"458620727","IsPullRequest":false,"CreatedAt":"2019-06-20T13:32:00","Actor":"xiaohunsdt","Number":"10173","RawContent":null,"Title":"Form Input Bindings and v-for error","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/xiaohunsdt/7rw89bjp/6/](https://jsfiddle.net/xiaohunsdt/7rw89bjp/6/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI used vue-cli to create a brand new project. and the dependencies is \r\n\"dependencies\": {\r\n    \"core-js\": \"^2.6.5\",\r\n    \"element-theme\": \"^2.0.1\",\r\n    \"element-ui\": \"^2.9.1\",\r\n    \"google-protobuf\": \"^3.8.0\",\r\n    \"uglifyjs-webpack-plugin\": \"^2.1.3\",\r\n    \"vue\": \"^2.6.10\",\r\n    \"vue-native-websocket\": \"^2.0.13\",\r\n    \"vuex\": \"^3.0.1\"\r\n  },\r\n\r\n### What is expected?\r\nWhen i change the value of textarea every time, the v-for will be refreshed!\r\n\r\n### What is actually happening?\r\nIn my project, I have a textarea and a list. and the textarea bind a v-model 'replyMsg' and the list is v-for and use a variable 'list'.\r\nWhen I change the value of textarea every time(reminder: variable 'list' always unchanged) the v-for refreshed every time!\r\nps：you can see the test log at the consloe in i given  minimal reproduction\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10173","RelatedDescription":"Closed issue \"Form Input Bindings and v-for error\" (#10173)"},{"Id":"458364487","IsPullRequest":false,"CreatedAt":"2019-06-20T06:05:06","Actor":"Sumolari","Number":"10171","RawContent":null,"Title":"Only last element is accessible using ref in template-based functional components inside v-for loops","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-bqe44?fontsize=14](https://codesandbox.io/s/vue-template-bqe44?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a functional component\r\n2. Use that functional component inside a v-for\r\n3. Add a ref binding to the functional component to be able to get the DOM element in parent component\r\n\r\n### What is expected?\r\nThe ref in parent component is an array of DOM elements, like it is an array of vNodes when applying this steps to a non-functional component\r\n\r\n### What is actually happening?\r\nOnly the last DOM element of the v-for is bound to the ref. It's also just an element and not an array\r\n\r\n---\r\nThere's no warning about overriding previously existing ref\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10171","RelatedDescription":"Open issue \"Only last element is accessible using ref in template-based functional components inside v-for loops\" (#10171)"},{"Id":"458328452","IsPullRequest":false,"CreatedAt":"2019-06-20T03:41:09","Actor":"JerryYuanJ","Number":"10170","RawContent":null,"Title":"Self-closing component tag renders incorrectly","State":"closed","Body":"### Version\r\n2.6.8\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/tnxjh6d0/1/](https://jsfiddle.net/tnxjh6d0/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPlease check the simple code sample which explains in detail.\r\n\r\n### What is expected?\r\nSelf-closing component tag should render the message info.\r\n\r\n### What is actually happening?\r\nmessage is ignored after a self-closing component, the others two are correct.\r\n\r\n---\r\nI don't know why this is happening, maybe it's not a bug and I just use it in a wrong way ?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10170","RelatedDescription":"Closed issue \"Self-closing component tag renders incorrectly\" (#10170)"},{"Id":"458223949","IsPullRequest":false,"CreatedAt":"2019-06-19T20:59:17","Actor":"adligo","Number":"10169","RawContent":null,"Title":"Template Options","State":"open","Body":"### What problem does this feature solve?\r\nBeat React in Benchmarks & Improve Flexibility of Template System Integration\r\n\r\n### What does the proposed API look like?\r\nHi,\r\n  I have an idea for a new template system that I would like to integrate into Vue.  The basic idea is to create a template that can be compiled / aggressively inlined into multiple languages (i.e. Java, PHP, Python, Javascript), split up into files (with chunks of HTML) for maximum flexibility, or runtime compiled.  \r\n\r\n**I am NOT looking to add this to the Vue project but simply integrate with the Vue project.**\r\n\r\n **In a nutshell the templates look like this (i.e. html chunks in xml files);**\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<_templates>\r\n<_page>\r\n<![CDATA[<!DOCTYPE html>]]>\r\n<html><head></head><body><div _attributeVariable=\"\">[[contentVariable]]</div></body>\r\n</html>\r\n</_page>\r\n<_content p=\"html.contentVariable\">Hello World!</_content> \r\n</_templates>\r\n```\r\n\r\n\r\n**The Plan for this is far from complete, but could it integrate to Vue?  If so how to go about doing it?**\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10169","RelatedDescription":"Open issue \"Template Options\" (#10169)"},{"Id":"457848714","IsPullRequest":false,"CreatedAt":"2019-06-19T08:01:30","Actor":"pxwee5","Number":"10168","RawContent":null,"Title":"Inconsistent Warning For Named Slot in \"is\" Components","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/jameswee/pen/gNwZxJ?editors=1010](https://codepen.io/jameswee/pen/gNwZxJ?editors=1010)\r\n\r\n### Steps to reproduce\r\nIn the pen provided above, you can't see the warning because there's no build step. \r\n\r\nHowever if you put this through Webpack you'll see this error\r\n`<template v-slot> can only appear at the root level inside the receiving the component`\r\n\r\n### What is expected?\r\nYou will see `<template v-slot> can only appear at the root level inside the receiving the component`\r\n\r\n### What is actually happening?\r\nI'm seeking explanation here as well. LOL\r\n\r\n---\r\n## Additional Comments\r\n\r\nThere's an inconsistency in the old and new slot syntax.\r\n\r\nThe new syntax caused warning when used with the special `is` attribute. \r\nBoth the HTML below are server rendered by a CMS and is compiled by Vue compiler.\r\n```html\r\n<table>\r\n  <tr is=\"my-tr\">\r\n    <template v-slot:default>\r\n      <td>Test</td>\r\n    </template>\r\n\r\n    <template v-slot:named>\r\n      <td>Test</td>\r\n    </template>\r\n  </tr>\r\n</table>\r\n```\r\nError message:\r\n```\r\n<template v-slot> can only appear at the root level inside the receiving the component\r\n\r\n217|  <table>\r\n218|    <tbody><tr is=\"my-tr\">\r\n219|      <template v-slot:default=\"\">\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n220|        <td>Test</td>\r\n   |  ^^^^^^^^^^^^^^^^^^^\r\n221|      </template>\r\n   |  ^^^^^^^^^^^^^^^\r\n```\r\n\r\n\r\nThe old syntax works without error. 👍\r\n```html\r\n<table>\r\n  <tr is=\"my-tr\">\r\n    <template slot=\"default\">\r\n      <td>Test</td>\r\n    </template>\r\n\r\n    <template slot=\"named\">\r\n      <td>Test</td>\r\n    </template>\r\n  </tr>\r\n</table>\r\n```\r\nCan we treat `is` attributed DOM element as vue components like how the old slot syntax works?\r\n\r\nI'd like to point out that the default slot works without errors. But ideally we should be able to use named slots here as well.\r\n```html\r\n<table>\r\n  <tr is=\"my-tr\">\r\n    <td>Test</td>\r\n  </tr>\r\n</table>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10168","RelatedDescription":"Closed issue \"Inconsistent Warning For Named Slot in \"is\" Components\" (#10168)"},{"Id":"457789870","IsPullRequest":false,"CreatedAt":"2019-06-19T06:41:54","Actor":"120011676","Number":"10166","RawContent":null,"Title":"vue如何支持虚拟目录？","State":"closed","Body":"### What problem does this feature solve?\r\n如一个工程已经部署了，访问地址是http://www.a.com\r\n现在有另一个项目做了nginx反向代理，访问路径是http://www.b.com/a\r\n2个需要同时使用，如何才能2个能正常访问\r\n\r\n### What does the proposed API look like?\r\n正常部署http://www.a.com访问正确    且   另一个nginx反向代理http://www.b.com/a也正确\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10166","RelatedDescription":"Closed issue \"vue如何支持虚拟目录？\" (#10166)"},{"Id":"457813739","IsPullRequest":true,"CreatedAt":"2019-06-19T05:30:51","Actor":"zrh122","Number":"10167","RawContent":null,"Title":"fix(compiler): modify `maybeComponent` function in parser","State":"open","Body":"Add condition to see whether the element may be an component.\r\nfixes #10152\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10167","RelatedDescription":"Open PR \"fix(compiler): modify `maybeComponent` function in parser\" (#10167)"},{"Id":"457343564","IsPullRequest":false,"CreatedAt":"2019-06-18T09:40:50","Actor":"a7270102","Number":"10164","RawContent":null,"Title":"vuejs：v-for director may result a duplicate key error  on native element iterator","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codepen.io/a7270102/pen/LKZMYm](https://codepen.io/a7270102/pen/LKZMYm)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n直接运行就可以重现：\r\n实验步骤：\r\n1. 使用两个数组对象来渲染两个同层次的原生div元素，Key分别设置为v-for的index\r\n2. 运行后，F12可以看到异常提示：duplicate keys detected\r\n\r\n### What is expected?\r\n不应该报错提示：\r\nvue自身会对每一个vueComponent给一个唯一标识，该标识的应用可以在遍历时，区分不同的组件实例，同时对其defaultScopes下的children遍历的key值起到一个命名空间的作用\r\n\r\n### What is actually happening?\r\n无法在遍历时将相同tagName的原生dom元素当作不同的实例对待，造成key校验不通过，从而提示异常\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10164","RelatedDescription":"Closed issue \"vuejs：v-for director may result a duplicate key error  on native element iterator\" (#10164)"},{"Id":"457368928","IsPullRequest":false,"CreatedAt":"2019-06-18T09:07:26","Actor":"Monine","Number":"10165","RawContent":null,"Title":"vue-template-compiler 解析 HTML 模板的边界问题","State":"open","Body":"### Version\r\n15.7.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/Monine/pen/rELQZW](https://codepen.io/Monine/pen/rELQZW)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n视图会输出 render 属性值，打开开发者工具查看 console 面板也可以查看编译结果。\r\n\r\n### What is expected?\r\nrender 属性的值应该为：\r\n\r\n```\r\n\"with(this){return _c('CustomerComp',{scopedSlots:_u([_l((['a']),function(name){return {key:name,fn:function(){return undefined},proxy:true}}),_l((['b']),function(name){return {key:name,fn:function(){return undefined},proxy:true}})],null,true)})}\"\r\n```\r\n\r\n格式化后：\r\n\r\n```js\r\nwith (this) {\r\n  return _c('CustomerComp', {\r\n    scopedSlots: _u(\r\n      [\r\n        _l(['a'], function(name) {\r\n          return {\r\n            key: name,\r\n            fn: function() {\r\n              return undefined;\r\n            },\r\n            proxy: true,\r\n          };\r\n        }),\r\n        _l(['b'], function(name) {\r\n          return {\r\n            key: name,\r\n            fn: function() {\r\n              return undefined;\r\n            },\r\n            proxy: true,\r\n          };\r\n        }),\r\n      ],\r\n      null,\r\n      true,\r\n    ),\r\n  });\r\n}\r\n\r\n```\r\n\r\n### What is actually happening?\r\nrender 属性的值为：\r\n\r\n```\r\n\"with(this){return _c('CustomerComp',{scopedSlots:_u([_l((['b']),function(name){return {key:name,fn:function(){return undefined},proxy:true}})],null,true)})}\"\r\n```\r\n\r\n格式化后：\r\n\r\n```js\r\nwith (this) {\r\n  return _c('CustomerComp', {\r\n    scopedSlots: _u(\r\n      [\r\n        _l(['b'], function(name) {\r\n          return {\r\n            key: name,\r\n            fn: function() {\r\n              return undefined;\r\n            },\r\n            proxy: true,\r\n          };\r\n        }),\r\n      ],\r\n      null,\r\n      true,\r\n    ),\r\n  });\r\n}\r\n```\r\n\r\n---\r\n已经找到问题原因，在 [vue-template-compiler build.js L2470-L2471](https://github.com/vuejs/vue/blob/dev/packages/vue-template-compiler/build.js#L2470-L2471)，动态具名插槽名称 相同的情况下后者会替换前者。\r\n\r\n此处我认为应该针对 动态具名插槽名称 进行判断，如果相同，则向名称添加额外唯一标识，防止被后者替换前者的情况出现。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10165","RelatedDescription":"Open issue \"vue-template-compiler 解析 HTML 模板的边界问题\" (#10165)"},{"Id":"457341871","IsPullRequest":false,"CreatedAt":"2019-06-18T09:05:27","Actor":"Umar-M-Haroon","Number":"10163","RawContent":null,"Title":".well-known folder not working correctly in GitHub-pages","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-4wm30?fontsize=14](https://codesandbox.io/s/vue-template-4wm30?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreate a vue project\r\nadd a .well-known folder in public, src/assets/ or the root directory. \r\nAdd a file in the .well-known folder\r\nBuild and confirm .well-known folder exists in dist/\r\npush to GitHub pages\r\ngeneral site will work, but site/.well-known/file won't work and will 404\r\n\r\n### What is expected?\r\nThe file will be shown\r\n\r\n### What is actually happening?\r\nno file is shown and a 404 is presented.\r\n\r\n---\r\nI'm trying to add sign in with apple support and they want to add a apple-developer=domain-association.txt file in the .well-known directory, but that isnt working with vue on github no matter where I place the .well-known folder.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10163","RelatedDescription":"Closed issue \".well-known folder not working correctly in GitHub-pages\" (#10163)"},{"Id":"456879117","IsPullRequest":false,"CreatedAt":"2019-06-17T11:32:38","Actor":"Suven","Number":"10162","RawContent":null,"Title":"export error and warn in Vue","State":"closed","Body":"### What problem does this feature solve?\r\nI would like to use the same methodoligy as vue, for custom error-messages: show them in dev, hide them on prod (except if there is a error-handler in place).\r\n\r\nFor that it would be useful if I could just use vues built-in warn-function instead of duplicating that logic.\r\n\r\n### What does the proposed API look like?\r\nimport Vue from 'vue'\r\n\r\nVue.warn('My message')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10162","RelatedDescription":"Closed issue \"export error and warn in Vue\" (#10162)"},{"Id":"456808735","IsPullRequest":false,"CreatedAt":"2019-06-17T09:56:43","Actor":"haishengXie0712","Number":"10161","RawContent":null,"Title":"$refs will reactive at component.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-j5jic](https://codesandbox.io/s/vue-template-j5jic)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRegister the component globally and specify ref name.\r\n\r\n### What is expected?\r\nThe data can reactive.\r\n\r\n### What is actually happening?\r\nThe data can't reactive.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10161","RelatedDescription":"Closed issue \"$refs will reactive at component.\" (#10161)"},{"Id":"456724854","IsPullRequest":false,"CreatedAt":"2019-06-17T03:55:36","Actor":"umi-soft","Number":"10160","RawContent":null,"Title":"how to trigger svg marker events","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://codepen.io/umi-soft/pen/dBMVgR](https://codepen.io/umi-soft/pen/dBMVgR)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ni can click element link, but how to trigger events on marker element  \r\n\r\n### What is expected?\r\ntrigger events on marker\r\n\r\n### What is actually happening?\r\ncan not trigger events on marker\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10160","RelatedDescription":"Closed issue \"how to trigger svg marker events\" (#10160)"},{"Id":"456351394","IsPullRequest":false,"CreatedAt":"2019-06-14T18:11:21","Actor":"starkovsky","Number":"10159","RawContent":null,"Title":"Vue Truthiness/Falsiness with v-bind:checked","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/starkovsky/27h8wg5n/2/](https://jsfiddle.net/starkovsky/27h8wg5n/2/)\r\n\r\n\r\n### Steps to reproduce\r\n1. Run example in jsfiddle\r\n\r\n### What is expected?\r\n`<input type=\"checkbox\" v-bind:checked=\"''\" />` it should be true\r\n\r\n\r\n### What is actually happening?\r\n`<input type=\"checkbox\" v-bind:checked=\"''\" />` rendered false\r\n\r\n---\r\n\r\n`<input type=\"checkbox\" v-bind:disabled=\"''\" />` rendered right, as true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10159","RelatedDescription":"Closed issue \"Vue Truthiness/Falsiness with v-bind:checked\" (#10159)"},{"Id":"456245181","IsPullRequest":false,"CreatedAt":"2019-06-14T18:09:04","Actor":"Llbe","Number":"10157","RawContent":null,"Title":"Inconsistent behaviour with <progress> in indeterminate state","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/pXjBQq](https://codepen.io/anon/pen/pXjBQq)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Trigger the mousemove event in the result iframe of Codepen. The text \"false\" is changed to \"true\"\r\n\r\n2. Compare the two `<progress>` elements. One is indeterminate and the other is not\r\n\r\n### What is expected?\r\nBoth `<progress>` elements should be in an indeterminate state, i.e. not having a value attribute set.\r\n\r\n### What is actually happening?\r\nThere are two `<progress>` elements here.\r\n\r\n1. The first has `:value=\"progress\"` and progress === undefined (verified by the text \"true\")\r\n\r\n2. The second has `:value=\"undefined\"`\r\n\r\nEven if both these effectively are identical (set `value` to undefined), they are rendered differently. The first is not indeterminate and the second is.\r\n\r\n---\r\nNote that this does not happen if the progress variable is set initially to undefined. It must be changed e.g. via the event callback.\r\n\r\nThis worked as expected in 2.4.2 but not in 2.4.3 and later.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10157","RelatedDescription":"Closed issue \"Inconsistent behaviour with <progress> in indeterminate state\" (#10157)"},{"Id":"456275776","IsPullRequest":true,"CreatedAt":"2019-06-14T14:24:24","Actor":"vue-bot","Number":"10158","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10158","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10158)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"459579755","IsPullRequest":false,"CreatedAt":"2019-06-23T15:05:26","Actor":"matej-svejda","Number":"2820","RawContent":null,"Title":"Autofilled params for named route cause warning with keep-alive","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fp3et456/5/](https://jsfiddle.net/fp3et456/5/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGoing to \"withProps1\" and then back to \"withoutProps\"\r\n\r\n### What is expected?\r\nThat no warning should appear.\r\n\r\n### What is actually happening?\r\nCauses a vue warning to appear for missing params, even though the params for all routes on the current route are set.\r\n\r\n---\r\nIm using auto filled params in named routes that the current route also has. An example would be that all project-related routes have the project id in them, but i dont want to set it every time when construct a route while being in a project-related route. Vue router does this automatically. I didnt find the functionallity documented, but you can see it being implemented in the function match(...) in create-matcher.js.\r\nThis works well in all cases, it only causes warning when Im navigating away from a route that has such a \"shared param\" to a route that doesnt have it. It seems like while leaving the route, something triggers a re-render of the links and the path is reconstructed. However, in this case the parameter can't be autofilled anymore because it isn't present in the current route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2820","RelatedDescription":"Closed issue \"Autofilled params for named route cause warning with keep-alive\" (#2820)"},{"Id":"458903046","IsPullRequest":false,"CreatedAt":"2019-06-20T21:57:17","Actor":"juanescarraga","Number":"2819","RawContent":null,"Title":"Color active state on link does not return to original color","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the project in the browser.\r\n2. The link with the name Say Hello appears in the browser.\r\n3. The default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\n4. The gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\n5. In tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2819","RelatedDescription":"Open issue \"Color active state on link does not return to original color\" (#2819)"},{"Id":"458533741","IsPullRequest":false,"CreatedAt":"2019-06-20T09:20:36","Actor":"Bigdragon13th","Number":"2818","RawContent":null,"Title":"[Feature Request] Make link to a named route more easier","State":"open","Body":"### What problem does this feature solve?\r\nIn my projects, I always link to the routes using route name (and also set it as a standard of my team). e.g.\r\n\r\n```vue\r\n<router-link :to=\"{ name: 'productList' }\">Product List</router-link>\r\n<router-link :to=\"{ name: 'productItem', params: { id: 1 }}\">Product Detail</router-link>\r\n```\r\n\r\nI found this pattern is unnecessary too long and not convenient to use compare to a much shorter syntax of using route link\r\n\r\n```vue\r\n<router-link to=\"/products-list\">Product List</router-link>\r\n<router-link to=\"/products/1\">Product Detail</router-link>\r\n```\r\n\r\nAnyway, I still want to use named route everywhere (for the sake of maintainability & scalability) and feel like link to named route can be improved.\r\n\r\n### What does the proposed API look like?\r\nI want the `:to` to be able to link to named route as-is (so when we created a route object somewhere else, we can bind it easily). But maybe you can make another prop for named route, such as:\r\n```vue\r\n<router-link toName=\"productList\">Product List</router-link>\r\n<router-link toName=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\nOr (I don't know if it possible) custom modifiers?:\r\n```vue\r\n<router-link to.name=\"productList\">Product List</router-link>\r\n<router-link to.name=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2818","RelatedDescription":"Open issue \"[Feature Request] Make link to a named route more easier\" (#2818)"},{"Id":"458311922","IsPullRequest":false,"CreatedAt":"2019-06-20T03:05:52","Actor":"sym134","Number":"2817","RawContent":null,"Title":"vue-cli3  路由重定向可以使用，但是别名无效","State":"closed","Body":"vue-cli3  路由重定向可以使用，但是别名alias无效","Url":"https://github.com/vuejs/vue-router/issues/2817","RelatedDescription":"Closed issue \"vue-cli3  路由重定向可以使用，但是别名无效\" (#2817)"},{"Id":"457661522","IsPullRequest":false,"CreatedAt":"2019-06-18T19:42:05","Actor":"lastlink","Number":"2816","RawContent":null,"Title":"prevent automatic hash add or allow hashes in history mode","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to use vuerouter in a chrome extension. I want to use hashes to add some changes to a pages content. However, just importing vue router adds #/ by default, I only want it added when it's being used. When I use history mode I can use `#/` no matter what I do. Is there a way to disable vue-router automatic hash add or use hashes in the route matching?","Url":"https://github.com/vuejs/vue-router/issues/2816","RelatedDescription":"Closed issue \"prevent automatic hash add or allow hashes in history mode\" (#2816)"},{"Id":"456869615","IsPullRequest":false,"CreatedAt":"2019-06-17T11:29:59","Actor":"kamituel","Number":"2815","RawContent":null,"Title":"Allow for custom element anchors","State":"closed","Body":"### What problem does this feature solve?\r\n`<router-link>` will set a `href` attribute on its child only if this child has an `<a>` tag name (see [`findAnchor()`](https://github.com/vuejs/vue-router/blob/dev/src/components/link.js#L124)). However, this won't work in case an anchor is wrapped in a custom element.\r\n\r\n### What does the proposed API look like?\r\nMaybe something like this?\r\n\r\n```\r\n<router-link to=\"...\" anchorTag=\"custom-anchor\">\r\n   <custom-anchor>Click Me!</custom-anchor>\r\n</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2815","RelatedDescription":"Closed issue \"Allow for custom element anchors\" (#2815)"},{"Id":"456840197","IsPullRequest":false,"CreatedAt":"2019-06-17T09:44:36","Actor":"eyalhakim","Number":"2814","RawContent":null,"Title":"next(false) in beforeEach pushes state when using the browser forward button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-mjmxd](https://codesandbox.io/s/vue-routing-example-mjmxd)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on \"goodbye\"\r\nClick back in browser\r\nClick forward in browser\r\n\r\nlast url is pushed into history\r\n\r\n### What is expected?\r\nIn ensureUrl, we need to pass false instead of true to make sure current (out-of-sync) url is replaced and not pushed to history\r\n\r\n### What is actually happening?\r\nThe next function passes true to the ensureUrl function thus making it push the out-of-sync url to history\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2814","RelatedDescription":"Open issue \"next(false) in beforeEach pushes state when using the browser forward button\" (#2814)"},{"Id":"456519510","IsPullRequest":false,"CreatedAt":"2019-06-15T11:41:44","Actor":"mittalyashu","Number":"2813","RawContent":null,"Title":"Pass props to router view","State":"closed","Body":"### What problem does this feature solve?\r\nPassing the props to `<router-view data=\"fetchData\" />` should pass the props to it's all child components or views depending upon the way we have defined the configuration in `router.js`\r\n\r\n```html\r\n<router-view :data=\"[4, 5]\" />\r\n```\r\n\r\n\r\nI have tried using parms & query, but it doesn't fulfill the use-case.\r\n\r\n### What does the proposed API look like?\r\n_Not sure_\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2813","RelatedDescription":"Closed issue \"Pass props to router view\" (#2813)"},{"Id":"456489048","IsPullRequest":false,"CreatedAt":"2019-06-15T02:24:47","Actor":"William-WFC","Number":"2812","RawContent":null,"Title":"router.go(-1) 无法返回上一个页面，扔停留在当前页面（tag v3.0.6）","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[http://wenti.com](http://wenti.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n偶现\r\n\r\n### What is expected?\r\n正常返回上一个页面\r\n\r\n### What is actually happening?\r\n停留在当前页面\r\n\r\n---\r\nvue-router(v3.0.6)构建成生产代码后，偶尔出现\r\nvue-router(v3.0.5)开发时，必现\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2812","RelatedDescription":"Closed issue \"router.go(-1) 无法返回上一个页面，扔停留在当前页面（tag v3.0.6）\" (#2812)"},{"Id":"456488715","IsPullRequest":false,"CreatedAt":"2019-06-15T01:57:54","Actor":"William-WFC","Number":"2811","RawContent":null,"Title":"router.go(-1) 偶现无法正常返回上一个页面，扔停留在当前页面（tag v3.0.6）","State":"closed","Body":"router.go(-1) 偶现无法正常返回上一个页面，扔停留在当前页面（tag v3.0.6）","Url":"https://github.com/vuejs/vue-router/issues/2811","RelatedDescription":"Closed issue \"router.go(-1) 偶现无法正常返回上一个页面，扔停留在当前页面（tag v3.0.6）\" (#2811)"},{"Id":"455530260","IsPullRequest":false,"CreatedAt":"2019-06-13T04:41:18","Actor":"y-nk","Number":"2810","RawContent":null,"Title":"$route properties not reactive","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/y_nk/d07bxk86/](https://jsfiddle.net/y_nk/d07bxk86/)\r\n\r\n### Steps to reproduce\r\n1. try to v-model into an object of `$route`\r\n\r\n### What is expected?\r\nobjects of route to be reactive\r\n\r\n### What is actually happening?\r\nthey are not\r\n\r\n---\r\nexample based on @posva 's codebase https://jsfiddle.net/posva/chyLjpv0/\r\ni'm mixed feeling either this is a bug or a feature request, but it's surely something saving a lot of code in many projects.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2810","RelatedDescription":"Closed issue \"$route properties not reactive\" (#2810)"},{"Id":"455194361","IsPullRequest":false,"CreatedAt":"2019-06-12T15:12:33","Actor":"captainhusaynpinguin","Number":"2809","RawContent":null,"Title":"Make up your mind: Suffix OR Trailing Slash","State":"closed","Body":"### What problem does this feature solve?\r\nIn my understanding, the general perception of browser is that it is being displayed either a \"file\" or a \"directory\" and as, generally speaking, VueJS apps return an HTML file, hence, Vue-Router should by default add `.html` at the end of the routes it creates. I have seen this feature-request be dismissed a while ago, but back then the default behavior was to add a ​trailing slash, now that this has been pushed to an additional option: `pathToRegexpOptions: { strict: true } `, it is finally time to adopt the suffix feature.\r\n\r\n### What does the proposed API look like?\r\nBrowser displaying: `https://myapp.com/log/post-n.html`\r\n\r\nso, when the log post number n contains multiple images, videos, or audios, the plain text of the post n does not need to take into account from which URL structure the page is being accessed.\r\n\r\nFor example, the author can simply write: `<img src=\"my-image.jpg\">` and the image will be displayed properly regardless of the URL structure. However, when the trailing slash and the suffix are neither available by default, the image will be loaded from the previous component of the path, in this example: the current default behavior looks like this: `https://myapp.com/log/post-n` and the web browser will request the image like this: `https://myapp.com/log/my-image.jpg` which is actually a bug!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2809","RelatedDescription":"Closed issue \"Make up your mind: Suffix OR Trailing Slash\" (#2809)"},{"Id":"455002318","IsPullRequest":true,"CreatedAt":"2019-06-12T04:06:25","Actor":"zrh122","Number":"2808","RawContent":null,"Title":"chore(test): remove useless code and comments","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2808","RelatedDescription":"Open PR \"chore(test): remove useless code and comments\" (#2808)"},{"Id":"454620558","IsPullRequest":true,"CreatedAt":"2019-06-12T03:55:10","Actor":"zrh122","Number":"2807","RawContent":null,"Title":"test: fix running e2e in Firefox","State":"closed","Body":"1. make `npm run test:e2e:ff` working as expected, [related info](https://github.com/nightwatchjs/nightwatch/issues/2128).\r\n2. add `-e chrome` as default env to nightwatch (`npm run test:e2e` with chromeOptions config applied).\r\n3. remove useless code and comments.<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2807","RelatedDescription":"Closed or merged PR \"test: fix running e2e in Firefox\" (#2807)"},{"Id":"454281709","IsPullRequest":true,"CreatedAt":"2019-06-10T22:00:22","Actor":"zrh122","Number":"2806","RawContent":null,"Title":"chore(test): improve e2e test runner warning","State":"closed","Body":"Avoiding warning `-c ${NW_CONFIG}` twice.<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2806","RelatedDescription":"Closed or merged PR \"chore(test): improve e2e test runner warning\" (#2806)"},{"Id":"453381487","IsPullRequest":false,"CreatedAt":"2019-06-07T07:45:33","Actor":"ashnamuh","Number":"2805","RawContent":null,"Title":"next() in beforeEach doesn't work without return","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-kr8qp](https://codesandbox.io/embed/vue-template-kr8qp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick Add link. Then it will be redirected to `/login` route.\r\nClick Add link again. Then it will be redirected to `/book/new` ignoring authentication on beforeEach.\r\nBut if i write `return` on next line of `next()`, it work well.\r\n\r\n\r\n### What is expected?\r\neven work without `return`\r\n\r\n### What is actually happening?\r\ndoesn't work\r\n\r\n---\r\nI want to know why is it happen. Should i always write `return` with `next()`?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2805","RelatedDescription":"Closed issue \"next() in beforeEach doesn't work without return\" (#2805)"},{"Id":"452988585","IsPullRequest":false,"CreatedAt":"2019-06-06T13:11:14","Actor":"r-frederick","Number":"2804","RawContent":null,"Title":"Empty class attribute applied by default to rendered RouterLink element","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-2omcj?fontsize=14&module=%2Fsrc%2FApp.vue](https://codesandbox.io/s/vue-template-2omcj?fontsize=14&module=%2Fsrc%2FApp.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee reproduction in sandbox for reference (see App.vue for relevant parts).\r\n\r\n1. Define default styles that only apply when another class is not applicable.\r\n2. Insert a <router-link> with no classes defined.\r\n3. Observe that the default styles using not([class]) do not take effect.\r\n\r\n### What is expected?\r\nWhen the link is inactive or does not match the current route no classes should be applied and the attribute should not exist on the rendered <a> element.\r\n\r\n### What is actually happening?\r\nNo classes are being applied to the rendered <a> element, but the class attribute still exists as it's included in the createElement call (class properties on data).\r\n\r\n---\r\nI'd prefer to not discuss whether or not the \"not\" selector should be used this way. It's a fairly reasonable expectation to have no class attribute on the element when classes aren't being applied.\r\n\r\nIf desired, I could submit a PR with a bugfix for this issue. From my limited experimentation, it seems fairly trivial to implement a fix.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2804","RelatedDescription":"Closed issue \"Empty class attribute applied by default to rendered RouterLink element\" (#2804)"},{"Id":"452963761","IsPullRequest":false,"CreatedAt":"2019-06-06T11:00:45","Actor":"y-nk","Number":"2803","RawContent":null,"Title":"Nested guardians","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/y_nk/fm7d0jr9/1/](https://jsfiddle.net/y_nk/fm7d0jr9/1/)\r\n\r\n### Steps to reproduce\r\n1. open link\r\n2. open console\r\n\r\n3. click on \"user1\"\r\n=> user: before route enter\r\n\r\n4. click on \"user details\"\r\n=> user: before route update\r\n=> user details: before route enter\r\n\r\n### What is expected?\r\non the step4, in the context of \"User\" route being described as \"/user/:id\", \"beforeRouteUpdate\" guardian of User route should **not** be called.\r\n\r\n### What is actually happening?\r\nthe route guardians are called wether or not the segment of url concerned is updated or not.\r\n\r\n---\r\nI think i understand the point of view which is \"yes but all the url changed, so all guardians should be called\" but i don't think it's necessary useful. If you consider the built demo, each time we arrive in the \"User\" view, an xhr call to load basic user data should be made ; that call would be unnecessarily repeated when changing subviews.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2803","RelatedDescription":"Closed issue \"Nested guardians\" (#2803)"},{"Id":"452299017","IsPullRequest":false,"CreatedAt":"2019-06-05T07:34:01","Actor":"wukaikailive","Number":"2801","RawContent":null,"Title":"Can you add attributes to the $route to identify which of the replace, push, or go methods are used for the current jump?","State":"closed","Body":"### What problem does this feature solve?\r\nI have a component that monitors the $route. When the URL changes, whether using the replace or push method, it will display the route history at the top of the page. But if I just want to replace the current url, I will still add a new record at the top of the page. I have to use vuex to mark the current jump so that it is not added to the record. If the Route object can add an attribute. The method used to mark the jump, which I can judge when using the replace method, will be very concise.\r\n\r\n### What does the proposed API look like?\r\nThe Route object adds a \"method\" attribute with values: link, replace, push, go. When the page is not using the vue-router api, the value is \"link\", which is consistent with the method name used in other cases.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2801","RelatedDescription":"Closed issue \"Can you add attributes to the $route to identify which of the replace, push, or go methods are used for the current jump?\" (#2801)"},{"Id":"452345155","IsPullRequest":true,"CreatedAt":"2019-06-05T07:07:16","Actor":"zrh122","Number":"2802","RawContent":null,"Title":"fix(normalizeLocation): add a copy for params with named locations (fix #2800)","State":"open","Body":"Fix #2800 <!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2802","RelatedDescription":"Open PR \"fix(normalizeLocation): add a copy for params with named locations (fix #2800)\" (#2802)"},{"Id":"452249979","IsPullRequest":false,"CreatedAt":"2019-06-04T23:22:41","Actor":"agnjunio","Number":"2800","RawContent":null,"Title":"Dynamic segments for nested items not updating correctly","State":"open","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/zrh122/3v4cj0qk/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n- Click on Item 1\r\n- Click on Item 2\r\n- Click on type link\r\n\r\n### What is expected?\r\n\r\nWe end up at /item/2/logs\r\n\r\n### What is actually happening?\r\n\r\nWe end up at /item/1/logs\r\n\r\n---\r\n\r\nThis behavior happens when we don't explicitly set a parent param for a child route. Setting $route.params.id before rendering the <router-link> fixes the behavior, but this shouldn't be necessary as we already navigated to /item/2, but vue-router didn't update the dynamic segment.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2800","RelatedDescription":"Open issue \"Dynamic segments for nested items not updating correctly\" (#2800)"},{"Id":"451918160","IsPullRequest":true,"CreatedAt":"2019-06-04T10:28:22","Actor":"briwa","Number":"2799","RawContent":null,"Title":"refactor(router-view): render children as placeholder","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis is not a bug, but the way I use `router-view` is that it has a placeholder using the `router-view` children before rendering it with the actual view from the component. Here's a little demo:\r\n\r\nhttps://codesandbox.io/s/vue-routing-example-b1t5d\r\n\r\nYou see that there's a slight delay before the route component gets rendered. It gets quite apparent when you have a `beforeEach` navigation guard that delays the route to be rendered. The 'blinking' effect between the blank page and the rendered component is undesirable and I am trying to improve it.\r\n\r\nI tried using [async component](https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components) to no avail, and it turned out that the cause was when the router is initialized, it is validating an [initial route](https://github.com/vuejs/vue-router/blob/v3.0.6/src/util/route.js#L52), and it is rendering an empty node since there is [no match](https://github.com/vuejs/vue-router/blob/v3.0.6/src/components/view.js#L51). This explains the blank page/element that I was facing.\r\n\r\nMy proposal is to render the children instead of an empty node, so that there is something to be rendered before the route component takes place. This applies to any kinds of route mismatches though. I made a little example and an e2e test to demonstrate the change.\r\n\r\nAlso, I did [search](https://github.com/vuejs/vue-router/issues?q=is%3Aissue+placeholder) through the issues but none of it seemed to mention this problem (could be very specific to the problem I'm facing, or maybe I missed it, CMIIW), so if this isn't exactly what Vue Router is aiming for, I understand, but maybe you could suggest a solution for me 😅. But if this is good enough, that would be so great, though I'm not sure if I'm doing the e2e test right.\r\n\r\nAnyhow, let me know! Thanks for Vue Router btw, I've been using it for the past 2 years and it's been terrific. \r\n","Url":"https://github.com/vuejs/vue-router/pull/2799","RelatedDescription":"Open PR \"refactor(router-view): render children as placeholder\" (#2799)"},{"Id":"451893108","IsPullRequest":true,"CreatedAt":"2019-06-04T09:52:10","Actor":"briwa","Number":"2798","RawContent":null,"Title":"chore(release): add a missing word in message","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nHello, just came across this code and I noticed that it's missing a word. Not sure if this is intentional but just putting it here. Thanks! \r\n","Url":"https://github.com/vuejs/vue-router/pull/2798","RelatedDescription":"Closed or merged PR \"chore(release): add a missing word in message\" (#2798)"},{"Id":"451755049","IsPullRequest":true,"CreatedAt":"2019-06-04T07:38:26","Actor":"monmonmon","Number":"2797","RawContent":null,"Title":"docs(ja): update navigation docs","State":"closed","Body":"分量小さいですが気になった点を修正お願いします。","Url":"https://github.com/vuejs/vue-router/pull/2797","RelatedDescription":"Closed or merged PR \"docs(ja): update navigation docs\" (#2797)"},{"Id":"451594702","IsPullRequest":false,"CreatedAt":"2019-06-03T17:21:37","Actor":"heidarv","Number":"2796","RawContent":null,"Title":"Detect back/forward (expose popstate event)","State":"closed","Body":"### What problem does this feature solve?\r\nThe need to know when back button is pressed without using popstate event.\r\nFor example to return to global search popup dialog from search results.\r\n\r\n### What does the proposed API look like?\r\nrouter.popstate((to, from, next) => {\r\n})\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2796","RelatedDescription":"Closed issue \"Detect back/forward (expose popstate event)\" (#2796)"},{"Id":"451098045","IsPullRequest":true,"CreatedAt":"2019-06-02T11:52:25","Actor":"iovuio","Number":"2793","RawContent":null,"Title":"False positive incorrect type. What can be passed as param on `this.$router.push` unnecessarily limited to string","State":"closed","Body":"**BEFORE:**\r\n  The implementation assumes that only a sting can be passed as a prop\r\n```\r\nthis.$router.push({\r\n        name: 'route',\r\n        params: {\r\n            propName: 'a string', // <= OK\r\n            propNameNumber: 5, // <= WRONG\r\n            propNameArray: [5, 'string', {id: 4, color: MyEnum.RED], // <= WRONG\r\n        }\r\n});\r\n```\r\n\r\nActually Vue.js does allow for types that the offending .d.ts disallows.\r\n\r\n**AFTER:**\r\n  False positive cases accepted as correct.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2793","RelatedDescription":"Closed or merged PR \"False positive incorrect type. What can be passed as param on `this.$router.push` unnecessarily limited to string\" (#2793)"},{"Id":"451156931","IsPullRequest":false,"CreatedAt":"2019-06-02T11:51:39","Actor":"mustafaekim","Number":"2795","RawContent":null,"Title":"Typescript   commonjs   import (lazy route) does not work","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Steps to reproduce\r\nCreate a Vuejs   Typescript project. \r\nSet the module property in tsconfig as \"commonjs\".\r\nSetup a lazy-route\r\n\r\n### What is expected?\r\nI would expect the route to be lazy loaded\r\n\r\n### What is actually happening?\r\nThe route is not lazy-loaded. Route is included in the bundle\r\n\r\n---\r\nI've made a big research in internet - some people recommend using \"esnext\" as the module in tsconfig but that does not work for me. I have to use commonjs.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2795","RelatedDescription":"Closed issue \"Typescript   commonjs   import (lazy route) does not work\" (#2795)"},{"Id":"451149675","IsPullRequest":false,"CreatedAt":"2019-06-02T03:51:05","Actor":"zengyuanqiu","Number":"2794","RawContent":null,"Title":"vue官方推荐使用name值跳转，这样别名是不生效的，为什么？","State":"closed","Body":"vue官方推荐使用name值跳转，这样别名是不生效的，为什么？\r\n","Url":"https://github.com/vuejs/vue-router/issues/2794","RelatedDescription":"Closed issue \"vue官方推荐使用name值跳转，这样别名是不生效的，为什么？\" (#2794)"},{"Id":"450688063","IsPullRequest":false,"CreatedAt":"2019-05-31T08:51:03","Actor":"shidiyanmo","Number":"2792","RawContent":null,"Title":"vue","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2792","RelatedDescription":"Closed issue \"vue\" (#2792)"},{"Id":"450642118","IsPullRequest":true,"CreatedAt":"2019-05-31T06:48:30","Actor":"Silentscripter","Number":"2791","RawContent":null,"Title":"feat: allow Vue component to receive a VueRouter factory","State":"open","Body":"In some situations (for ex. micro-frontend architectures where vue apps are wrapped in web-components) it would be good to have different VueRouter instances when a wrapped vue app is destroyed and recreated (since normally the VueRouter is created before and referenced in Vue component options).","Url":"https://github.com/vuejs/vue-router/pull/2791","RelatedDescription":"Open PR \"feat: allow Vue component to receive a VueRouter factory\" (#2791)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"},{"Id":"450569242","IsPullRequest":false,"CreatedAt":"2019-05-31T01:03:40","Actor":"mspiderv","Number":"1561","RawContent":null,"Title":"Retrieve module context from store instance","State":"open","Body":"### What problem does this feature solve?\r\nThis feature adds the ability to retrieve the store module context directly from root store instance.\r\n\r\n### What does the proposed API look like?\r\nLet's suppose, that `store` variable is my Vuex (root) store instance.\r\n\r\nI solve this problem with the following code:\r\n\r\n```\r\nlet subModuleContext = store._modulesNamespaceMap['subModuleName/'].context\r\n```\r\n\r\nIt would be nice to write\r\n\r\n```\r\nlet subModuleContext = store.getContext('subModuleName')\r\n```\r\n\r\nThen, I can write `subModuleContext.dispatch('someAction')` instead of `store.dispatch('subModuleName/someAction')`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1561","RelatedDescription":"Open issue \"Retrieve module context from store instance\" (#1561)"},{"Id":"448157757","IsPullRequest":false,"CreatedAt":"2019-05-30T07:01:45","Actor":"xianshenglu","Number":"1556","RawContent":null,"Title":"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode","State":"closed","Body":"### What problem does this feature solve?\r\nAs [doc](https://vuex.vuejs.org/guide/strict.html) said, \r\n\r\n> In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. \r\n\r\nHowever, **state will still be mutated** though an error would be thrown. \r\n\r\nIn my opinion, this behavior is weird and misleading. Normally,  operation would fail if an error showed. But in this case, it didn't. \r\n\r\nAlso, if a developer doesn't see this error and only see the result which is actually worked, he might do this behavior all the time until one day he find the error.\r\n\r\n So, my propose is\r\n\r\n>  Why Not Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode?\r\n\r\nThere should be a way to absolutely disable direct state mutation outside of mutation handlers. \r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst store = new Vuex.Store({\r\n  // ...\r\n  strict: true\r\n})\r\n```\r\nDirect state mutation outside of mutation handlers would be disabled when `strict` is true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1556","RelatedDescription":"Closed issue \"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode\" (#1556)"},{"Id":"450157740","IsPullRequest":false,"CreatedAt":"2019-05-30T06:56:44","Actor":"savoygu","Number":"1560","RawContent":null,"Title":"the parent state's key is covered by the same key of the child module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust look at the content displayed on the page.\r\n\r\n### What is expected?\r\nNot covered\r\n\r\n### What is actually happening?\r\nCovered\r\n\r\n---\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1560","RelatedDescription":"Closed issue \"the parent state's key is covered by the same key of the child module\" (#1560)"},{"Id":"450155081","IsPullRequest":false,"CreatedAt":"2019-05-30T06:38:52","Actor":"savoygu","Number":"1559","RawContent":null,"Title":"[BUG] the parent state's key is covered by the same key of the child module","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n  }\r\n```","Url":"https://github.com/vuejs/vuex/issues/1559","RelatedDescription":"Closed issue \"[BUG] the parent state's key is covered by the same key of the child module\" (#1559)"},{"Id":"449676032","IsPullRequest":false,"CreatedAt":"2019-05-29T08:46:50","Actor":"de-don","Number":"1558","RawContent":null,"Title":"Add handler \"subscribeAction.onError\"","State":"open","Body":"### What problem does this feature solve?\r\nThe \"subscribeAction.after\" is not run if an action throws an error.\r\n\r\n### What does the proposed API look like?\r\nI propose to add one more property for catching errors in actions:\r\n```\r\nconst waitPlugin = (store) => {\r\n  store.subscribeAction({\r\n    before: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    after: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    onError: (action, error) => {\r\n      console.log(action.type);\r\n    }\r\n  });\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1558","RelatedDescription":"Open issue \"Add handler \"subscribeAction.onError\"\" (#1558)"},{"Id":"448881052","IsPullRequest":false,"CreatedAt":"2019-05-28T06:31:34","Actor":"chulman444","Number":"1557","RawContent":null,"Title":"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2tb9frcj/1/](https://jsfiddle.net/2tb9frcj/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the reproduction, open the developer console panel, click on the \"click\", Look at the result and please click on the `Object > val`.\r\n\r\n### What is expected?\r\n0 is printed out when clicking on the output of:\r\n\r\n```\r\nconsole.log(\"Printed as undefined\", store.state.tests[0])\r\n```\r\n\r\n### What is actually happening?\r\nPrinted as undefined but behaves like zero\r\n\r\n---\r\nI know that `mutations` are not asynchronous, so the `setTimeout` or `$nextTick` won't fix it; try clicking the button multiple times to add more entries but the old values still 'display' as undefined but behaves like zero.\r\n\r\nBehaves like zero, so I'm fine with it. Printing out the value directly prints zero, so I'm fine with it. But this was HUGELY misleading in my case when it printed out `undefined`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1557","RelatedDescription":"Closed issue \"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly\" (#1557)"},{"Id":"445811290","IsPullRequest":true,"CreatedAt":"2019-05-22T02:28:11","Actor":"liyangworld","Number":"1554","RawContent":null,"Title":"add warnings when the different namespaced modules has the same names…","State":"closed","Body":"Add warnings when the different namespaced modules has the same namespace.\r\nThere is a situation that different namespaced modules could have the same namespace, so when in the method of installModule, generate store._modulesNamespaceMap, the follow module will override the before module.\r\nFor example:\r\n```\r\nnew Store({\r\n  modules: {\r\n    m1: {\r\n      namespaced: true,\r\n      state: {\r\n        a: \"a1\"\r\n      }\r\n    },\r\n    m2: {\r\n      modules: {\r\n        m1: {\r\n          namespaced: true,\r\n          state: {\r\n            a: \"a2\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\nthe module m1 has the namespace 'm1',\r\nthe module m2/m1 has the same namespace 'm1'\r\nso in the store._modulesNamespaceMap the module m2/m1 will override the module m1","Url":"https://github.com/vuejs/vuex/pull/1554","RelatedDescription":"Closed or merged PR \"add warnings when the different namespaced modules has the same names…\" (#1554)"},{"Id":"437594509","IsPullRequest":false,"CreatedAt":"2019-05-21T11:01:53","Actor":"LaoCheng-cjs","Number":"1543","RawContent":null,"Title":"【回家种田】从入门到失败","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://木有.com](https://木有.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n## 我就修改 state 都没有成功过。\r\n\r\n> 我新建项目到开始写state赋值，就注定一辈子不是这快料吧。\r\n\r\n```\r\nvue.esm.js?efeb:628 [Vue warn]: Error in created hook: \"RangeError: Maximum call stack size exceeded\"\r\n\r\nfound in\r\n\r\n---> <App> at src/App.vue\r\n       <Root>\r\n```\r\n\r\n```\r\nvue.esm.js?efeb:1897 RangeError: Maximum call stack size exceeded\r\n    at Function.keys (<anonymous>)\r\n    at _traverse (vue.esm.js?efeb:2153)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\n    at _traverse (vue.esm.js?efeb:2155)\r\nlogError @ vue.esm.js?efeb:1897\r\nglobalHandleError @ vue.esm.js?efeb:1888\r\nhandleError @ vue.esm.js?efeb:1848\r\ninvokeWithErrorHandling @ vue.esm.js?efeb:1871\r\ncallHook @ vue.esm.js?efeb:4222\r\nVue._init @ vue.esm.js?efeb:5011\r\nVueComponent @ vue.esm.js?efeb:5157\r\ncreateComponentInstanceForVnode @ vue.esm.js?efeb:3292\r\ninit @ vue.esm.js?efeb:3123\r\ncreateComponent @ vue.esm.js?efeb:5983\r\ncreateElm @ vue.esm.js?efeb:5930\r\npatch @ vue.esm.js?efeb:6521\r\nVue._update @ vue.esm.js?efeb:3948\r\nupdateComponent @ vue.esm.js?efeb:4069\r\nget @ vue.esm.js?efeb:4482\r\nWatcher @ vue.esm.js?efeb:4471\r\nmountComponent @ vue.esm.js?efeb:4076\r\nVue.$mount @ vue.esm.js?efeb:9057\r\nVue.$mount @ vue.esm.js?efeb:11953\r\nVue._init @ vue.esm.js?efeb:5021\r\nVue @ vue.esm.js?efeb:5088\r\n(anonymous) @ main.js?1c90:38\r\n(anonymous) @ main.js:55\r\n./src/main.js @ app.js:1135\r\n__webpack_require__ @ app.js:708\r\nfn @ app.js:113\r\n0 @ app.js:1184\r\n__webpack_require__ @ app.js:708\r\n(anonymous) @ app.js:806\r\n(anonymous) @ app.js:809\r\nShow 7 more frames\r\n```\r\n\r\n### 啥鬼，不管了复制粘贴 ===>  翻译一下\r\n\r\n```\r\nvue.esm.js吗?创建钩子中的错误:“RangeError:最大调用堆栈大小超出”\r\n中发现的\r\n[Vue warn]:创建钩子中的错误:\"RangeError:最大调用堆栈大小超出\"\r\n```\r\n\r\n##### that?\r\n\r\n> 不对吧，咱也是老实人，从来不干出格事情来，不就是 页面中：\r\n\r\n```\r\nthis.$store.commit('xxx')\r\n```\r\n\r\n> 在看下面的vuex\r\n\r\n```js\r\n// vuex\r\nstate:{\r\n  ff:''\r\n},\r\nmutations:{\r\n   xxx(state){\r\n     state.ff = 23;\r\n  }\r\n}\r\n```\r\n\r\n> 最后吐槽下，真难学，（苦）咽下去，\r\n\r\n### What is expected?\r\n能帮我解答下，谢谢\r\n\r\n### What is actually happening?\r\n帮帮大哥大姐，大佬\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1543","RelatedDescription":"Closed issue \"【回家种田】从入门到失败\" (#1543)"},{"Id":"441134733","IsPullRequest":false,"CreatedAt":"2019-05-21T11:00:22","Actor":"GoodLuckIce","Number":"1549","RawContent":null,"Title":"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[http://没有](http://没有)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n当registerModule 动态注册.   preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\r\n\r\n### What is expected?\r\n期望 第一次动态注册 保留新注册的state ,之后的注册 采用 preserveState: true 方案\r\n\r\n### What is actually happening?\r\n state undefined 导致 actions 多所有方法无法调用\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1549","RelatedDescription":"Closed issue \"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\" (#1549)"},{"Id":"445160547","IsPullRequest":false,"CreatedAt":"2019-05-21T10:59:33","Actor":"Xambey","Number":"1553","RawContent":null,"Title":"MapGetters not working for modules with namespaced=true in vuex ","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://gitlab.com/Xambey/large](https://gitlab.com/Xambey/large)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Run the application.\r\n2) Open console in web browser (or vue extensions)\r\n3) Catch the error in the log (ChildA.vue: 14 )\r\n\r\n\"Property or method \"score\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property\"\r\n\r\nfound in\r\n\r\n---> <ChildA> at src/components/ChildA.vue\r\n       <Parent> at src/components/Parent.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n\r\n### What is expected?\r\nThe getter 'score'  is created in my component. (this.$store.getters['scoreBoard/score'] -> this.score)\r\n\r\n\r\n\r\n### What is actually happening?\r\nGetter no mapped, vue google chrome extension show what state existed https://i.imgur.com/QKB7Wqm.png\r\n\r\n---\r\n```\r\ncomputed: {\r\n    ...mapGetters([\r\n      'scoreBoard/score' // Not found when /scoreBoard/score is existed. \r\n    ])\r\n  }\r\n```\r\nif you do this, then everything works (or namespaced = false): \r\n```\r\ncomputed: {\r\n    ...mapGetters({\r\n      score: 'scoreBoard/score'\r\n    })\r\n  }\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1553","RelatedDescription":"Closed issue \"MapGetters not working for modules with namespaced=true in vuex \" (#1553)"},{"Id":"446184900","IsPullRequest":true,"CreatedAt":"2019-05-21T10:49:47","Actor":"57u","Number":"1555","RawContent":null,"Title":"Typo correction in docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1555","RelatedDescription":"Closed or merged PR \"Typo correction in docs\" (#1555)"},{"Id":"444327664","IsPullRequest":true,"CreatedAt":"2019-05-15T09:21:08","Actor":"wolfgangwalther","Number":"1552","RawContent":null,"Title":"fix memory leak #1507","State":"open","Body":"The fix in PR #1508 was not complete, the anonymous function for the getter `() => store._vm[key]` was preserving the previous context and therefore `oldVm` as well.","Url":"https://github.com/vuejs/vuex/pull/1552","RelatedDescription":"Open PR \"fix memory leak #1507\" (#1552)"},{"Id":"444213353","IsPullRequest":true,"CreatedAt":"2019-05-15T03:00:41","Actor":"dajiaoyisheng","Number":"1551","RawContent":null,"Title":"对象展开运算符","State":"open","Body":"It is a Stage 4 proposal for ECMAScript.","Url":"https://github.com/vuejs/vuex/pull/1551","RelatedDescription":"Open PR \"对象展开运算符\" (#1551)"},{"Id":"441795075","IsPullRequest":true,"CreatedAt":"2019-05-08T15:28:02","Actor":"sairoutine","Number":"1550","RawContent":null,"Title":"chore(typo): fix typo in comments","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1550","RelatedDescription":"Open PR \"chore(typo): fix typo in comments\" (#1550)"},{"Id":"441132371","IsPullRequest":false,"CreatedAt":"2019-05-07T09:28:52","Actor":"GoodLuckIce","Number":"1548","RawContent":null,"Title":"preserveState: true 时嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","State":"closed","Body":"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","Url":"https://github.com/vuejs/vuex/issues/1548","RelatedDescription":"Closed issue \"preserveState: true 时嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\" (#1548)"},{"Id":"440616043","IsPullRequest":false,"CreatedAt":"2019-05-06T09:35:18","Actor":"AlexSHoffman","Number":"1547","RawContent":null,"Title":"[Feature Request] Add mapFields","State":"open","Body":"### What problem does this feature solve?\r\nRight now, you cannot use nested properties in `v-model` without writing a ton of unnecessary computed objects for each property:\r\n\r\n## Current way:\r\n```HTML\r\n<input v-model=\"searchQuery\">\r\n<v-switch v-model=\"searchOptionsIncludeFiles\"></v-switch>\r\n<v-switch v-model=\"searchOptionsIgnoreCase\"></v-switch>\r\n```\r\n\r\n```JS\r\ncomputed: {\r\n  searchQuery: {\r\n    get () {\r\n      return this.$store.state.search.query\r\n    },\r\n    set (value) {\r\n      this.$store.commit('setSearchQuery', value)\r\n    }\r\n  },\r\n  searchOptionsIncludeFiles: {\r\n    get () {\r\n      return this.$store.state.search.options.includeFiles\r\n    },\r\n    set (value) {\r\n      this.$store.commit('setSearchOptionsIncludeFiles', value)\r\n    }\r\n  },\r\n  searchOptionsIgnoreCase: {\r\n    get () {\r\n      return this.$store.state.search.options.ignoreCase\r\n    },\r\n    set (value) {\r\n      this.$store.commit('setSearchOptionsIgnoreCase', value)\r\n    }\r\n  },\r\n}\r\n```\r\n\r\nBut it would be much better to just do it like this:\r\n\r\n## A better way:\r\n```HTML\r\n<input v-model=\"query\">\r\n<v-switch v-model=\"includeFiles\"></v-switch>\r\n<v-switch v-model=\"ignoreCase\"></v-switch>\r\n```\r\n``` JS\r\ncomputed: {\r\n  ...mapFields([\r\n    'search.query',\r\n    'search.options.includeFiles',\r\n    'search.options.ignoreCase',\r\n  ])\r\n}\r\n\r\n```\r\n\r\n### What does the proposed API look like?\r\nThere's a module called `vuex-map-fields`, perhaps it would make sense to add something like this to Vuex?:\r\n\r\n```\r\n...mapFields([\r\n    'search.query',\r\n    'search.options.includeFiles',\r\n    'search.options.ignoreCase',\r\n])\r\n\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1547","RelatedDescription":"Open issue \"[Feature Request] Add mapFields\" (#1547)"},{"Id":"440081424","IsPullRequest":true,"CreatedAt":"2019-05-03T14:49:35","Actor":"frankcs","Number":"1546","RawContent":null,"Title":"Implementing a cache for the gettersProxy object creation","State":"open","Body":"Fixes #1539","Url":"https://github.com/vuejs/vuex/pull/1546","RelatedDescription":"Open PR \"Implementing a cache for the gettersProxy object creation\" (#1546)"},{"Id":"439465889","IsPullRequest":false,"CreatedAt":"2019-05-02T07:57:37","Actor":"ThomasKientz","Number":"1545","RawContent":null,"Title":"Dynamic namespaces in binding helpers (mapState, …)","State":"closed","Body":"### What problem does this feature solve?\r\nWith this feature we can use a prop for setting a namespace :\r\n\r\n`...mapState(this.namespace, ['filter'])`\r\n\r\nActually we got the error :\r\n\r\n> Cannot read property 'namespace' of undefined\r\n\r\nIn my app I am dynamically registering store modules with generated on the fly namespaces. And I am passing the namespace as component properties.\r\n\r\nRight now I have to do :\r\n\r\n```\r\nfilter() { // more verbose but working\r\n      return this.$store.state[this.namespace].filter\r\n}\r\n```\r\n\r\nwhich is more verbose.\r\n\r\n\r\nrelated stackoverflow issue : https://stackoverflow.com/questions/55927452/vuex-dynamic-namespaces-in-binding-helpers-mapstate\r\n\r\n\r\n### What does the proposed API look like?\r\n...mapState(this.namespace, ['filter'])\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1545","RelatedDescription":"Closed issue \"Dynamic namespaces in binding helpers (mapState, …)\" (#1545)"},{"Id":"438020036","IsPullRequest":false,"CreatedAt":"2019-04-28T09:04:06","Actor":"syedsimanta03","Number":"1544","RawContent":null,"Title":"VUEX for flutter","State":"closed","Body":"### What problem does this feature solve?\r\nHi.I like vuex,but I'm currently using flutter to develop apps, and I don't have a state management library that I like to use.Will you develop a vuex for the flutter?\r\n\r\n### What does the proposed API look like?\r\n343dsgds32324\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1544","RelatedDescription":"Closed issue \"VUEX for flutter\" (#1544)"},{"Id":"437486748","IsPullRequest":false,"CreatedAt":"2019-04-26T04:36:46","Actor":"SaekiRaku","Number":"1542","RawContent":null,"Title":"Get module's namespace inside mutations/actions/getters...","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nI have some mutations that need chain reaction in some cases, and for now, I have to hard code `namespace` inside the mutations. But I made this module as far as possible to reuse in other pages, and my project is not SPA, so I have to re-registerModule in every pages. But in some cases, I need to register the module for a different namespace to avoid conflict, and then it will cause error if I have to hard code `namespace` inside the mutations.\r\n\r\nFor example:\r\n```javascript\r\nfunction mutation(state, payload) {\r\n    if(payload.situation){\r\n        this.commit(\"Namespace/CommitFunction\", { ... });\r\n    }\r\n    ...\r\n    // Error: [vuex] unknown mutation type: Namespace/CommitFunction\r\n}\r\n```\r\n\r\nIt may also need to know the namespace in these situation:\r\n* https://github.com/vuejs/vuex/issues/1244\r\n\r\n### What does the proposed API look like?\r\n```\r\nfunction mutation(state, payload, namespace){\r\n    ...\r\n}\r\n```\r\n\r\nor\r\n\r\n```\r\nfunction mutation(state, payload){\r\n    console.log(this.namespace);\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1542","RelatedDescription":"Closed issue \"Get module's namespace inside mutations/actions/getters...\" (#1542)"},{"Id":"437202957","IsPullRequest":false,"CreatedAt":"2019-04-25T13:34:59","Actor":"Jerald042615","Number":"1541","RawContent":null,"Title":"why Vuex mutation in array affects other data in state","State":"closed","Body":"// State Object\r\nstate: {\r\n     tables: [\r\n           // Array of data\r\n           // With nested data of \r\n           // { players: [\r\n                  {}, {}, {}, {}, {}\r\n           ] }\r\n     ]\r\n}\r\n\r\n// inside mutations\r\n\r\nlet playerIndexFrom = state.tournamentState.tables.findIndex(item => item.table_number == from_table)\r\n            console.log(playerIndexFrom)\r\n            Vue.set(state.tournamentState.tables[playerIndexFrom].players, {indexOfTable}, { table_number: from_table, seat_number: from_seat, full_name: '', _id: '' })\r\n            let playerIndexTo = state.tournamentState.tables.findIndex(item => item.table_number == to_table)\r\n            console.log(playerIndexTo)\r\n            Vue.set(state.tournamentState.tables[playerIndexTo].players, {indexOfTable}, newPlayerData)\r\n","Url":"https://github.com/vuejs/vuex/issues/1541","RelatedDescription":"Closed issue \"why Vuex mutation in array affects other data in state\" (#1541)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-24T05:30:47.5104296Z","RunDurationInMilliseconds":2140}