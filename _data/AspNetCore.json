{"Data":{"Blog":{"FeedItems":[{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7625992583","Type":"IssuesEvent","CreatedAt":"2018-05-04T00:14:54","Actor":"richlander","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3114","RelatedDescription":"Opened issue \"Need a better error message when kestrel cannot get the requested port\" (#3114) at aspnet/Home","RelatedBody":"This is what I see when Kestrel cannot get the port I asked for. This is on .NET Core 2.1 RC1 (with a 2.0 app).\r\n\r\npi@raspberrypi:~/dotnet-docker/samples/aspnetapp/aspnetapp $ export ASPNETCORE_URLS=http://+:80\r\npi@raspberrypi:~/dotnet-docker/samples/aspnetapp/aspnetapp $ dotnet run\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowIfErrored(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_bind(UvTcpHandle handle, SockAddr"},{"Id":"7623007689","Type":"PullRequestEvent","CreatedAt":"2018-05-03T13:55:46","Actor":"jchannon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/pull/3113","RelatedDescription":"Opened pull request \"Update ISSUE_TEMPLATE with clearer instructions\" (#3113) at aspnet/Home","RelatedBody":"I went to Antiforgery repo, it said raise an issue here. I read this template and it told me to create it in a specific repository. Um, what?  This should hopefully make it clearer."},{"Id":"7622964065","Type":"IssuesEvent","CreatedAt":"2018-05-03T13:48:49","Actor":"jchannon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3112","RelatedDescription":"Opened issue \"Antiforgery : API misleading\" (#3112) at aspnet/Home","RelatedBody":"`IAntiforgery` - `Task<bool> IsRequestValidAsync(HttpContext httpContext);`\r\n\r\nIf you setup Antiforgery with header name `Foo` and on the client set this value and try a POST/PUT, all is well.\r\n\r\nOn the client then add the header again.\r\n\r\nWhat you end up with is a header with that key with two values.\r\n\r\nAgreed, not what you should do but lets look over that.\r\n\r\nSend a request and you get:\r\n```\r\nSystem.InvalidOperationException: The antiforgery token could not be decrypted. ---> System.FormatException: The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.\r\n```\r\n\r\nThis is because https://github.com/aspnet/Antiforgery/blob/dev/src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgeryTokenStore.cs#L41 pulls out the header as `StringValues` which will have a 2 values. Then passes this to the constructor of `AntiforgeryTokenSet` whose first argument is a string. Converting a `StringValues` to `string` implicitly with more than one value will pull out the first value.  In our case the incorrect value.\r\n\r\nFurther down the stack where it takes this value and calls `IAntiforgeryTokenSerializer.Deserialize` it blows up with the exception not return an expected false.\r\n\r\n"},{"Id":"7620247478","Type":"IssuesEvent","CreatedAt":"2018-05-03T01:25:28","Actor":"qazq","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3111","RelatedDescription":"Closed issue \"[Question] Why WebSocket.SendAsync() doesn't send asynchronously\" (#3111) at aspnet/Home","RelatedBody":"```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 14\r\n```\r\n\r\nBut if I add Task.Delay(1)\r\n\r\n```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await Task.Delay(1);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 15\r\n```\r\n\r\nWhy SendAsync() doesn't switch to another thread to send data?"},{"Id":"7614774401","Type":"IssuesEvent","CreatedAt":"2018-05-02T05:13:38","Actor":"qazq","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3111","RelatedDescription":"Opened issue \"[Question] Why WebSocket.SendAsync() doesn't send asynchronously\" (#3111) at aspnet/Home","RelatedBody":"```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 14\r\n```\r\n\r\nBut if I add Task.Delay(1)\r\n\r\n```cs\r\n        public static async Task SendCmd(WebSocket socket, ArraySegment<byte> outgoing)\r\n        {\r\n            Console.WriteLine(\"socket.SendAsync >>> \" + Thread.CurrentThread.ManagedThreadId);\r\n            await Task.Delay(1);\r\n            await socket.SendAsync(outgoing, WebSocketMessageType.Text, true, CancellationToken.None);\r\n            Console.WriteLine(\"socket.SendAsync <<< \" + Thread.CurrentThread.ManagedThreadId);\r\n        }\r\n```\r\n\r\nResult\r\n```text\r\nSendCmd >>> 14\r\nSendCmd <<< 15\r\n```\r\n\r\nWhy SendAsync() doesn't switch to another thread to send data?"},{"Id":"7613480120","Type":"IssuesEvent","CreatedAt":"2018-05-01T21:23:37","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3034","RelatedDescription":"Closed issue \"Flaky test: System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory\" (#3034) at aspnet/Home","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=442272&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win10Universe#testNameId1329483692832033125) sometimes with the following error:\r\n\r\n```\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-Keys' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 89\r\n======= Failed test run #2 ==========\r\nSystem.IO.IOException : Cannot create 'C:\\Users\\asplab\\AppData\\Local\\ASP.NET\\DataProtection-KeysTemp' because a file or directory with the same name already exists.\r\n   at System.IO.Directory.Move(String sourceDirName, String destDirName)\r\n   at Microsoft.AspNetCore.DataProtection.DataProtectionProviderTests.System_NoKeysDirectoryProvided_UsesDefaultKeysDirectory() in C:\\BuildAgent\\work\\33bdfc1cae7b2a38\\modules\\DataProtection\\test\\Microsoft.AspNetCore.DataProtection.Extensions.Test\\DataProtectionProviderTests.cs:line 55\r\n```\r\n\r\nFuture instances of this failure can be tracked [here](http://aspnetci/project.html?projectId=XPlat&buildTypeId=&tab=testDetails&testNameId=1329483692832033125&order=TEST_STATUS_DESC&branch_XPlat=__all_branches__&itemsCount=50)."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7626262805","Type":"PullRequestEvent","CreatedAt":"2018-05-04T02:11:55","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2199","RelatedDescription":"Merged pull request \"Release/2.1\" (#2199) at aspnet/SignalR","RelatedBody":""},{"Id":"7626262531","Type":"PullRequestEvent","CreatedAt":"2018-05-04T02:11:48","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2199","RelatedDescription":"Opened pull request \"Release/2.1\" (#2199) at aspnet/SignalR","RelatedBody":""},{"Id":"7626261365","Type":"PullRequestEvent","CreatedAt":"2018-05-04T02:11:15","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2195","RelatedDescription":"Merged pull request \"clean up the shutdown timer\" (#2195) at aspnet/SignalR","RelatedBody":"Found during #2193, forking off into a separate PR. We should take this for RTM even if we don't take #2193.\r\n\r\nWhen `connection.stop` is called, we check the `pollAborted` \"AbortSignal\" (JavaScript equivalent of a CancellationToken) to see the poll is still running and if it is, we set a timer to see if the server will shut it down (we already sent the `DELETE` which should stop the server). However, if the poll completes normally before `connection.stop` is called, we don't set that token so we set up the timer anyway, logging an inaccurate log message 5 seconds after we shut down. There's no functional \"break\", but it's bad to log something that isn't true. Also, in Node JS applications (or tests), leaving this timeout on the queue can cause delays in shutting down.\r\n\r\nThis can also happen if we **are** mid-poll but the server **does** stop the poll before the timeout elapses. In that case, the timeout fires because we never clean it up.\r\n\r\nTesting this requires asserting a timer callback never fires, which is a little tricky but I hacked something up. Jest has a set of fake timers so once #2193 is in and we start revamping our tests, we can look at using that to make it cleaner"},{"Id":"7626260261","Type":"IssuesEvent","CreatedAt":"2018-05-04T02:10:45","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2187","RelatedDescription":"Closed issue \"Exception when sending data from server to client: Failed writing message. System.ArgumentException: The output byte buffer is too small to contain the encoded data, encoding 'Unicode (UTF-8)' fallback 'System.Text.EncoderReplacementFallback'. Parameter name: bytes\" (#2187) at aspnet/SignalR","RelatedBody":"Hey.\r\nmy system:\r\nServer: on .net core 2.1 preview 2 running on windows using kestel (also tried on azure using app service - same result)\r\nClient - Java script client version: \"@aspnet/signalr\": \"^1.0.0-preview2-final\"\r\nProtocol: Json\r\n\r\nScenario: when sending data from the server to the client (using the command: await m_Client.SendAsync(\"setTripGeneralData\",generalData)) in several cases (of data) the following exception is thrown:\r\n\r\n```\r\n2018-05-02 16:01:43.815 +03:00|0HLDG5GH9MK8I:00000010|Debug|9|Microsoft.AspNetCore.SignalR.HubConnectionContext.||Failed writing message.\r\nSystem.ArgumentException: The output byte buffer is too small to contain the encoded data, encoding 'Unicode (UTF-8)' fallback 'System.Text.EncoderReplacementFallback'.\r\nParameter name: bytes\r\n   at System.Text.Encoding.ThrowBytesOverflow()\r\n   at System.Text.Encoding.ThrowBytesOverflow(EncoderNLS encoder, Boolean nothingEncoded)\r\n   at System.Text.UTF8Encoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount, EncoderNLS baseEncoder)\r\n   at System.Text.EncoderNLS.Convert(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount, Boolean flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)\r\n   at System.Text.Encoder.Convert(ReadOnlySpan`1 chars, Span`1 bytes, Boolean flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.Utf8BufferTextWriter.WriteInternal(ReadOnlySpan`1 buffer)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.Utf8BufferTextWriter.Write(String value)\r\n   at Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(TextWriter writer, String s, Char delimiter, Boolean appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, IArrayPool`1 bufferPool, Char[]& writeBuffer)\r\n   at Newtonsoft.Json.JsonTextWriter.WriteEscapedString(String value, Boolean quote)\r\n   at Newtonsoft.Json.JsonTextWriter.WriteValue(String value)\r\n   at Newtonsoft.Json.JsonWriter.WriteValue(JsonWriter writer, PrimitiveTypeCode typeCode, Object value)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(JsonWriter writer, Object value, JsonPrimitiveContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.JsonHubProtocol.WriteArguments(Object[] arguments, JsonTextWriter writer)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.JsonHubProtocol.WriteInvocationMessage(InvocationMessage message, JsonTextWriter writer)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.JsonHubProtocol.WriteMessageCore(HubMessage message, IBufferWriter`1 stream)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.JsonHubProtocol.WriteMessage(HubMessage message, IBufferWriter`1 output)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.HubProtocolExtensions.WriteToArray(IHubProtocol hubProtocol, HubMessage message)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage.WriteMessage(IHubProtocol protocol)\r\n   at Microsoft.AspNetCore.SignalR.HubConnectionContext.WriteCore(HubMessage message)\r\n```\r\n\r\nthis didn't happened with the alpha release of signalR core (and .net core 2) with the same data cases.\r\nalthough the exception implies that the problem is with the size of the data, the data size is not big and in other cases i am sending bigger data amounts with success. i tried investigating the data to pin the difference but i couldn't found nothing sensuous. after saying that, i did tried sending parts of the problematic data and succeeded. only when sending all the problematic data together (its just a list of objects) i am receiving the exception, so maybe it does related to size - i don't know.\r\ni couldn't find a way to enlarge the buffer so i cant test it.\r\ni know that the json.net version was updated in this release of .net core, maybe its related?\r\n\r\nany clew anybody?\r\n"},{"Id":"7626260199","Type":"PullRequestEvent","CreatedAt":"2018-05-04T02:10:43","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2198","RelatedDescription":"Merged pull request \"fix #2187 by passing min size through to buffer writer when encoding (#2190)\" (#2198) at aspnet/SignalR","RelatedBody":""},{"Id":"7626259940","Type":"PullRequestEvent","CreatedAt":"2018-05-04T02:10:37","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2198","RelatedDescription":"Opened pull request \"fix #2187 by passing min size through to buffer writer when encoding (#2190)\" (#2198) at aspnet/SignalR","RelatedBody":""},{"Id":"7626259154","Type":"PullRequestEvent","CreatedAt":"2018-05-04T02:10:16","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2190","RelatedDescription":"Merged pull request \"fix #2187 by passing min size through to buffer writer when encoding\" (#2190) at aspnet/SignalR","RelatedBody":"This fixes an error that occurs when a multi-byte character is about to be written by Utf8BufferTextWriter, but there isn't enough space for it in the buffer. We use [`Encoder.Convert`](https://docs.microsoft.com/en-us/dotnet/api/system.text.encoder.convert?view=netstandard-2.0#System_Text_Encoder_Convert_System_Char__System_Int32_System_Byte__System_Int32_System_Boolean_System_Int32__System_Int32__System_Boolean__) which writes as many characters as it can fit into the provided buffer. However, if there isn't even enough space for a single character, it throws. \r\n\r\nConsider this example of the current behavior, where the buffers are in 4-byte segments (of course the real buffers are like 2048 bytes, but for illustration...):\r\n\r\n1. The buffer has 4 bytes of space: `[ ] [ ] [ ] [ ]`\r\n2. We write `aい`, which takes up 4 bytes: `[0x61] [0xE3] [0x81] [0x84]`\r\n3. We call `GetMemory(0)` and since the buffer is full, we get a new 4 byte buffer: `[ ] [ ] [ ] [ ]`\r\n4. We try to write `はに`. Only the first character fits, so we fill 3 bytes: `[0xE3] [0x81] [0xAF] [ ]`\r\n5. We call `GetMemory(0)` but since the buffer is not full, we get the same buffer: `[0xE3] [0x81] [0xAF] [ ]`\r\n6. We try to write `に` (since it wasn't written before). The buffer is only 1 byte in size, so the encoder throws:\r\n\r\n```\r\nSystem.ArgumentException: The output byte buffer is too small to contain the encoded data, encoding 'Unicode (UTF-8)' fallback 'System.Text.EncoderReplacementFallback'.\r\nParameter name: bytes\r\n```\r\n\r\nThe new behavior is similar, but it specifies a `sizeHint` value of `4` (the maximum number of bytes needed to encoded a UTF-8 character to `IBufferWriter.GetMemory`, which means it will force a new segment to be allocated if there isn't enough space in the current segment. So the updated logic for the same input as above is:\r\n\r\n1. The buffer has 4 bytes of space: `[ ] [ ] [ ] [ ]`\r\n2. We write `aい`, which takes up 4 bytes: `[0x61] [0xE3] [0x81] [0x84]`\r\n3. We call `GetMemory(4)`; since the buffer is full, we get a new 4 byte buffer: `[ ] [ ] [ ] [ ]`\r\n4. We try to write `はに`. Only the first character fits, so we fill 3 bytes: `[0xE3] [0x81] [0xAF] [ ]`\r\n5. We call `GetMemory(4)`; since the buffer doesn't have 4 bytes left, we get a new buffer: `[ ] [ ] [ ] [ ]`\r\n6. We try to write `に` (since it wasn't written before). And it fits: `[0xE3] [0x81] [0xAB] [ ]`\r\n\r\nI'll run the hub protocol benchmarks and post the results here.\r\n\r\nFixes #2187 "}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7625932717","Type":"PullRequestEvent","CreatedAt":"2018-05-03T23:52:22","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7734","RelatedDescription":"Opened pull request \"Upgrade to netcoreapp22\" (#7734) at aspnet/Mvc","RelatedBody":null},{"Id":"7625810929","Type":"PullRequestEvent","CreatedAt":"2018-05-03T23:09:08","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7733","RelatedDescription":"Opened pull request \"Modify info level logging for pages\" (#7733) at aspnet/Mvc","RelatedBody":"Addresses #7602 "},{"Id":"7625794344","Type":"PullRequestEvent","CreatedAt":"2018-05-03T23:03:43","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7729","RelatedDescription":"Merged pull request \"Test cleanup\" (#7729) at aspnet/Mvc","RelatedBody":"Based on https://github.com/aspnet/Mvc/issues/7583#issuecomment-377984569"},{"Id":"7625759125","Type":"PullRequestEvent","CreatedAt":"2018-05-03T22:52:55","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7732","RelatedDescription":"Opened pull request \"Cleanup CachedExpressionCompiler\" (#7732) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7625929688","Type":"PullRequestEvent","CreatedAt":"2018-05-03T23:51:12","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1780","RelatedDescription":"Opened pull request \"Upgrade to netcoreapp22\" (#1780) at aspnet/Identity","RelatedBody":null},{"Id":"7615325993","Type":"IssuesEvent","CreatedAt":"2018-05-02T08:01:40","Actor":"Externaluse","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1779","RelatedDescription":"Opened issue \"SignInManager: XML Doc wrong description of parameter\" (#1779) at aspnet/Identity","RelatedBody":"Just stumbled across this\r\n\r\n    /// <param name=\"logger\">The logger used to log messages, warnings and errors.</param>\r\n    /// <param name=\"schemes\">The logger used to log messages, warnings and errors.</param>\r\nin\r\nhttps://github.com/aspnet/Identity/blob/15a82284ce52dc8932c49f3246763f3ea05a3568/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L33\r\n\r\nThe description for schemes is wrong."},{"Id":"7613825780","Type":"PullRequestEvent","CreatedAt":"2018-05-01T22:58:45","Actor":"JunTaoLuo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1754","RelatedDescription":"Closed pull request \"Simplify test logging with new framework\" (#1754) at aspnet/Identity","RelatedBody":"Now that we have improved the infrastructure, the tests can be cleaned up."},{"Id":"7612988286","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:33:14","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1778","RelatedDescription":"Merged pull request \"AllowAnonymous for external login providers and confirm email (#1769)\" (#1778) at aspnet/Identity","RelatedBody":"Addresses #1762"},{"Id":"7612987021","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:32:55","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1778","RelatedDescription":"Opened pull request \"AllowAnonymous for external login providers and confirm email (#1769)\" (#1778) at aspnet/Identity","RelatedBody":"Addresses #1762"},{"Id":"7612978569","Type":"IssuesEvent","CreatedAt":"2018-05-01T19:30:59","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1762","RelatedDescription":"Closed issue \"External login provider and confirm email page are not accessible when using global authorize filter\" (#1762) at aspnet/Identity","RelatedBody":"When an external login provider is configured, and a global authorize filter is applied, clicking the button to navigate to the provider (say Twitter sign in) redirects back to the current Login page.\r\n\r\nTo allow anonymous users to log in to an external provider while using a global authorize filter, the user can scaffold the `ExternalLogin.cshtml.cs` page and add the `AllowAnonymous` attribute to the `ExternalLoginModel`.\r\n\r\nPlease note, if this is something we want to allow by default, a corresponding change must also be made in aspnet/Scaffolding repo."},{"Id":"7612977767","Type":"PullRequestEvent","CreatedAt":"2018-05-01T19:30:47","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1769","RelatedDescription":"Merged pull request \"AllowAnonymous for external login providers and confirm email\" (#1769) at aspnet/Identity","RelatedBody":"Addresses #1762\r\n\r\nWhile using the global authorization filter, `ConfirmEmail` is not accessible when clicking the verification email link (when logged out). So adding the attribute to it as well.\r\n\r\n"},{"Id":"7612736022","Type":"IssuesEvent","CreatedAt":"2018-05-01T18:37:37","Actor":"smoro88","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1776","RelatedDescription":"Closed issue \"Create UserManager in Static Class\" (#1776) at aspnet/Identity","RelatedBody":"I am trying to get a list of Users back from UserManager but I am having issues understanding how this is accomplished.  \r\n\r\npublic class Util\r\n    {\r\n\t\tprivate readonly UserManager<ApplicationUser> _userManager;\r\n     \r\n\t\tpublic Util(UserManager<ApplicationUser> userManager)\r\n        {\r\n            _userManager = userManager;\r\n        }\r\n        \r\n\t\tpublic  List<ApplicationUser> GetAllUserList()\r\n        {\r\n            var users = _userManager.Users.ToAsyncEnumerable().ToList().Result;\r\n            return users;\r\n        }\r\n\r\n    }\r\n\r\nHowever when I create a instance of the Utility class it wants me to pass in a UserManager context and I thought DI would take care of this.  \r\n\r\nThoughts\r\nSteve"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7625975909","Type":"PullRequestEvent","CreatedAt":"2018-05-04T00:08:14","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2542","RelatedDescription":"Opened pull request \"Update Dockerfiles, scripts and READMEs to reference netcoreapp2.1\" (#2542) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7625957488","Type":"PullRequestEvent","CreatedAt":"2018-05-04T00:01:37","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2534","RelatedDescription":"Merged pull request \"Don't complete KestrelServer.StopAsync task inline\" (#2534) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7625931006","Type":"PullRequestEvent","CreatedAt":"2018-05-03T23:51:41","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2541","RelatedDescription":"Opened pull request \"Upgrade to netcoreapp22\" (#2541) at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"7624758766","Type":"IssuesEvent","CreatedAt":"2018-05-03T19:04:50","Actor":"radheshchamarti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2540","RelatedDescription":"Opened issue \"System.IO.IOException: Error -104 ECONNRESET connection reset by peer\" (#2540) at aspnet/KestrelHttpServer","RelatedBody":"I am getting this excpetion in my code\r\n\r\nSystem.IO.IOException: Error -104 ECONNRESET connection reset by peer ---> Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -104 ECONNRESET connection reset by peer\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvOutputConsumer.<WriteOutputAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvConnection.<Start>d__26.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()"},{"Id":"7618164933","Type":"IssuesEvent","CreatedAt":"2018-05-02T16:59:16","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2507","RelatedDescription":"Closed issue \"Flaky Test: ResponseTests.Sending100ContinueDoesNotStartResponse\" (#2507) at aspnet/KestrelHttpServer","RelatedBody":"```\r\nAssert.Contains() Failure\r\nNot found: (filter expression)\r\nIn value:  ConcurrentQueue<LogMessage> [LogMessage { EventId = 3, Exception = null, LogLevel = Debug, Message = \"Hosting starting\" }, LogMessage { EventId = 4, Exception = null, LogLevel = Debug, Message = \"Hosting started\" }, LogMessage { EventId = 0, Exception = null, LogLevel = Debug, Message = \"Loaded hosting startup assembly Libuv.FunctionalTe\"... }, LogMessage { EventId = ConnectionStart, Exception = null, LogLevel = Debug, Message = \"Connection id \\\"0HLD6AI9FD4SE\\\" started.\" }, LogMessage { EventId = 1, Exception = null, LogLevel = Information, Message = \"Request starting HTTP/1.1 POST http:///  \" }, ...]\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<Sending100ContinueDoesNotStartResponse>d__46.MoveNext() in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 1685\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nhttp://aspnetci/viewLog.html?buildId=451859&tab=buildResultsDiv&buildTypeId=Lite_KestrelStressTest"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7625934318","Type":"PullRequestEvent","CreatedAt":"2018-05-03T23:52:58","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2334","RelatedDescription":"Opened pull request \"Upgrade to netcoreapp22\" (#2334) at aspnet/Razor","RelatedBody":null},{"Id":"7625501999","Type":"PullRequestEvent","CreatedAt":"2018-05-03T21:41:45","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2333","RelatedDescription":"Opened pull request \"Bump Roslyn dependency to 2.8.0\" (#2333) at aspnet/Razor","RelatedBody":""},{"Id":"7625207452","Type":"IssuesEvent","CreatedAt":"2018-05-03T20:37:49","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2332","RelatedDescription":"Opened issue \"Update Microsoft.CodeAnalysis packages to 2.8.0\" (#2332) at aspnet/Razor","RelatedBody":""},{"Id":"7624671646","Type":"PullRequestEvent","CreatedAt":"2018-05-03T18:47:06","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2331","RelatedDescription":"Opened pull request \"Add more UI for document generation\" (#2331) at aspnet/Razor","RelatedBody":""},{"Id":"7624529774","Type":"PullRequestEvent","CreatedAt":"2018-05-03T18:18:57","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2327","RelatedDescription":"Merged pull request \"Allow build server to run on net46\" (#2327) at aspnet/Razor","RelatedBody":"Fixes #2325 \r\n\r\nFor security reasons, we were not starting the build server whenever `PipeOptions.CurrentlyUserOnly` isn't available. But when running on desktop .NET Framework aka VS on Windows, that flag will never be available causing the build server to not start in VS builds. The fix is to use the same workaround used by Roslyn to verify pipe ownership without relying on the PipeOptions flag.\r\n\r\nI'm now working on manually verifying if this fix works in VS.\r\n\r\n@rynowak @mkArtakMSFT "},{"Id":"7624503104","Type":"PullRequestEvent","CreatedAt":"2018-05-03T18:13:37","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2330","RelatedDescription":"Merged pull request \"Remove ProjectService requirements for Razor text buffer initialization.\" (#2330) at aspnet/Razor","RelatedBody":"- Now that we have our own content type the editor does the work of determining if a Razor file opened in a core project should flow to our code."},{"Id":"7624497486","Type":"PullRequestEvent","CreatedAt":"2018-05-03T18:12:30","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2330","RelatedDescription":"Opened pull request \"Remove ProjectService requirements for Razor text buffer initialization.\" (#2330) at aspnet/Razor","RelatedBody":"- Now that we have our own content type the editor does the work of determining if a Razor file opened in a core project should flow to our code."},{"Id":"7624269405","Type":"PullRequestEvent","CreatedAt":"2018-05-03T17:28:15","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2328","RelatedDescription":"Merged pull request \"Fixes for the document window state\" (#2328) at aspnet/Razor","RelatedBody":""}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":393,"FavoriteCount":224,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":74,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":97,"FavoriteCount":55,"RawContent":null}]}},"RunOn":"2018-05-04T05:30:13.4376182Z","RunDurationInMilliseconds":8169}