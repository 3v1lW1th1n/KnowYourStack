{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8730069266","Type":"PullRequestEvent","CreatedAt":"2018-12-10T22:12:31","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2515","RelatedDescription":"Opened pull request \"Runtime startup performance improvements\" (#2515) at xamarin/xamarin-android","RelatedBody":"The goal of this commit is to make Xamarin.Android apps start faster. The\r\nchanges are focused only around the very first stage of application startup -\r\nbetween Android invoking our Java startup code (MonoPackageManager) and the end\r\nof our `Runtime.init` (`Java_mono_android_Runtime_init` in the native runtime)\r\nwhich is when the user application is fully initialized and ready to start is\r\nlauncher Activity.\r\n\r\nIn order to achieve the goal, the following changes were made:\r\n\r\n * Java class lookup (\"reflection\").\r\n   We used to call the `FindClass` JNI function as part of the startup at a cost\r\n   of several milliseconds. We now put the class handles (accessed with the\r\n   `.class` Java accessor) in the `Runtime` class and initialize them from the\r\n   static constructor. We then read those fields from within `Runtime.init`,\r\n   which is passed a reference to the Java instance of the Runtime class.\r\n   Additonally, a handful of class field/method lookups were moved out of the\r\n   init code so that the code that doesn't use them doesn't have to pay the tax.\r\n\r\n * Android API level is passed to `Runtime.init` from Java instead of using JNI\r\n   from the native code.\r\n\r\n * Limit logging.\r\n   Previously whenever any of the `log_{info,debug}` functions were called we'd\r\n   spend time preparing all the parameters to pass to the function, sometimes\r\n   involving memory allocation, function calls, etc - only to discard all of\r\n   that work **inside** the `log_*` call because the logging category used in\r\n   that call was disabled. Now we check whether the category is enabled before\r\n   we set out to construct the parameters.\r\n\r\n * Java/JNI type wrappers for string and array of strings.\r\n   This both a convenience/correctness as well as a performance change.\r\n   Introduced are two C++ wrapper classes for the `jstring` and `object array`\r\n   types (specialized for object == jstring) which take care of efficiently\r\n   caching the retrieved strings as well as of correctly deleting local\r\n   references to the obtained objects. Both classes, `jstring_wrapper` and\r\n   `jstring_array_wrapper` are optimized so that they compile into the\r\n   equivalent of the current, hand-written, code. They also take care to make\r\n   the minimum necessary number of calls in order to access the strings, both\r\n   standalone and from arrays, as well as to release the resources.\r\n   The string and array wrappers are passed around as references, thus using the\r\n   minimum amount of memory.\r\n\r\n * Do not preload managed assemblies.\r\n   We used to preload all of the application assemblies in order to find and\r\n   invoke type initializers. This resulted in the list of assemblies being\r\n   processed twice at the great expense of time. We now don't call the type\r\n   initializers at all and the assemblies are loaded on demand.\r\n\r\n * Do not store application environment variables in a file inside the apk.\r\n   The textual file used to be read from the apk(s) early in the process,\r\n   requiring iteration over all the application apk files, opening each of them,\r\n   browsing through the ZIP entries and, finally, reading the file line by line,\r\n   parsing into the name and value parts to create either a\r\n   property (`mono.aot`, `mono.llvm`) or any environment variables requested by\r\n   the application developer (or the XA runtime).\r\n   To speed the process up, this commit replaces the text file with a Java class\r\n   generated during application build which contains an array of `\"name\",\r\n   \"value\"` pairs. The class is passed to `Java_mono_android_Runtime_init` and\r\n   its elements are used to create the requested environment variables. A\r\n   handful of variables is special-cased in that they are not placed in the\r\n   environment but rather to set flags in the `AndroidSystem` class. The\r\n   variables are `mono.aot`, `mono.llvm` and `__XA_DSO_IN_APK`. This allowed to\r\n   remove calls to create (fake) system properties as well as `getenv` in the\r\n   init native function.\r\n\r\n * Don't try load LLVM.so when it won't be there because we're not using llvm\r\n\r\n * Convert package name to hash using optimized code without calling snprintf\r\n\r\n * Desktop build is determined on compile time instead of dynamically\r\n\r\n * xamarin_getifaddrs are initialized on demand, not at the startup.\r\n\r\nStartup time improvements for the XF integration test app (average):\r\n\r\n  * Debug mode:\r\n    Old: 1s 440ms\r\n    New: 1s 100ms\r\n\r\n  * Release mode:\r\n    Old: 650ms\r\n    New: 270ms"},{"Id":"8729834671","Type":"PullRequestEvent","CreatedAt":"2018-12-10T21:29:20","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2514","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix <Aot/> cancellation\" (#2514) at xamarin/xamarin-android","RelatedBody":"Fixes: http://feedback.devdiv.io/346386\r\n\r\nIt was reported that cancelling a build while AOT was running, would\r\nnot cancel until AOT finished. Testing in VS Windows 15.9, I could\r\nreproduce this behavior.\r\n\r\nReviewing the `<Aot/>` MSBuild task, it had use of a\r\n`CancellationTokenSource` that killed the AOT processes if cancelled.\r\nHowever, this did not work as intended, since the\r\n`CancellationTokenSource` is a local variable and the `Cancel` method\r\ncan't call it.\r\n\r\nWhen MSBuild tasks are cancelled, if they implement `ICancelableTask`,\r\nthe `Cancel` method will be called. `AsyncTask` has a proper\r\nimplementation of this, as well as a `Token` property for use with the\r\nTPL. I removed the `CancellationTokenSource` from `<Aot/>`, in favor\r\nof what is already implemented in `AsyncTask`.\r\n\r\nI suspect that cancellation was added to `AsyncTask` at some point,\r\nand we just never switched the `<Aot/>` MSBuild task to use it."},{"Id":"8729594400","Type":"IssuesEvent","CreatedAt":"2018-12-10T20:45:17","Actor":"scastria","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2513","RelatedDescription":"Opened issue \"Xamarin.Android.Common.targets requires versionCode to be an integer\" (#2513) at xamarin/xamarin-android","RelatedBody":"In my CI build system, I inject the build number produced by the CI system into my AndroidManifest.xml file by a simple token replacement.  Therefore, I set\r\n\r\n      android:versionCode=\"%AppBuildNumber%\"\r\n\r\nand have the CI build search for %AppBuildNumber% and replace it with an integer.  However, when I build locally, this injection does not take place and the build fails with the below stacktrace.\r\n\r\nIs it possible to remove this restriction or is there a better way to do my injection?  Maybe use -1 for my token to replace??\r\n\r\n\r\n\r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error : Input string was not in a correct format.\r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Number.StringToNumber (System.String str, System.Globalization.NumberStyles options, System.Number+NumberBuffer& number, System.Globalization.NumberFormatInfo info, System.Boolean parseDecimal) [0x0005f] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/number.cs:1077 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Number.ParseInt32 (System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info) [0x00013] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/number.cs:745 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Int32.Parse (System.String s) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/int32.cs:120 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at Xamarin.Android.Tasks.ManifestDocument.CalculateVersionCode (System.String currentAbi, System.String versionCodePattern, System.String versionCodeProperties) [0x000bb] in <0669e22a1ea34a33ae956490b400f14d>:0 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at Xamarin.Android.Tasks.Aapt.GenerateCommandLineCommands (System.String ManifestFile, System.String currentAbi, System.String currentResourceOutputFile) [0x000d7] in <0669e22a1ea34a33ae956490b400f14d>:0 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at Xamarin.Android.Tasks.Aapt.ProcessManifest (Microsoft.Build.Framework.ITaskItem manifestFile) [0x0017d] in <0669e22a1ea34a33ae956490b400f14d>:0 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Threading.Tasks.Parallel+<>c__DisplayClass32_0`2[TSource,TLocal].<ForEachWorker>b__0 (System.Int32 i) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/external/corefx/src/System.Threading.Tasks.Parallel/src/System/Threading/Tasks/Parallel.cs:2178 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Threading.Tasks.Parallel+<>c__DisplayClass19_0`1[TLocal].<ForWorker>b__1 (System.Threading.Tasks.RangeWorker& currentWorker, System.Int32 timeout, System.Boolean& replicationDelegateYieldedBeforeCompletion) [0x000db] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/external/corefx/src/System.Threading.Tasks.Parallel/src/System/Threading/Tasks/Parallel.cs:1153 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error : --- End of stack trace from previous location where exception was thrown ---\r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error : \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Threading.Tasks.Parallel+<>c__DisplayClass19_0`1[TLocal].<ForWorker>b__1 (System.Threading.Tasks.RangeWorker& currentWorker, System.Int32 timeout, System.Boolean& replicationDelegateYieldedBeforeCompletion) [0x001f1] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/external/corefx/src/System.Threading.Tasks.Parallel/src/System/Threading/Tasks/Parallel.cs:1196 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Threading.Tasks.TaskReplicator+Replica`1[TState].ExecuteAction (System.Boolean& yieldedBeforeCompletion) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/external/corefx/src/System.Threading.Tasks.Parallel/src/System/Threading/Tasks/TaskReplicator.cs:123 \r\n         /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2334,3): error :   at System.Threading.Tasks.TaskReplicator+Replica.Execute () [0x00023] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/external/corefx/src/System.Threading.Tasks.Parallel/src/System/Threading/Tasks/TaskReplicator.cs:78 \r\n"},{"Id":"8728919253","Type":"IssuesEvent","CreatedAt":"2018-12-10T18:45:39","Actor":"manish","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2512","RelatedDescription":"Opened issue \"Tabbed Forms App deploys but fails to start on Samsung SM-G930U (API 23)\" (#2512) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a Forms Tabbed App project\r\n2. Select the device as `Samsung SM-G930U (API 23)`\r\n3. Set breakpoint in Android project, MainActivity.cs:22\r\n4. In Debug config, hit Run which runs the project in Debug mode\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nThe app should be deployed to the device, start up and breakpoint should be hit\r\n\r\n### Actual Behavior\r\n\r\nThe app is deployed on the device, but the breakpoint is not hit and VS for Mac goes back to Editor mode\r\n\r\n### Version Information\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.8 Preview (7.8 build 1379)\r\nInstallation UUID: c6f583b8-4b21-4c5b-a3df-6aa8a3185d07\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 516000226\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.226 (2018-06/ad3edd34840) (64-bit)\r\n\tPackage version: 516000226\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.0\r\n\t2.1.2\r\n\t2.1.0-preview1-26216-03\r\n\t2.0.9\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.2.100/Sdks\r\nSDK Versions:\r\n\t2.2.100\r\n\t2.1.302\r\n\t2.1.300-preview1-008174\r\n\t2.1.202\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 10\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.4.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/xamarinqa/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 27.0.2\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/xamarinqa/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.10\r\n1.8.0-10\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.8.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: \r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: d15-9\r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 708001379\r\nGit revision: ceb4d12b17330cbb106216964c2055f020119dfe\r\nBuild date: 2018-12-05 20:58:31+00\r\nBuild branch: release-7.8\r\nXamarin extensions: a5665f1bf5ba9b485406e2b9beafadba31e405bf\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Wed Oct 10 23:06:14 PDT 2018\r\n    root:xnu-4570.71.13~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n```\r\n\r\n### Log File\r\n\r\n* [Adb LogCat Output](http://xqa.blob.core.windows.net/gist/Samsung%20SM-G930U.log.181207223559-a5021ef0f84d4f47ba202e3a0f24ff10.txt)\r\n\r\n* [Screencast - have a look at `2:10` mark](http://xqa.blob.core.windows.net/video/macOsScreenRecord.mp4-1349a5d4e69744a0adad089e81315762.mp4)\r\n\r\n[Deploying to Device output](http://xqa.blob.core.windows.net/gist/DeployingToDeviceOutput-75e05c9ed9e845a8890891da53410b3f.txt)\r\n\r\n* [Application Output](http://xqa.blob.core.windows.net/gist/ApplicationOutput-67b9e5d183e64a40994e47d67a15123d.txt)\r\n\r\n```\r\nForwarding debugger port 8879\r\nDetecting existing process\r\n> am start -n \"org.xamarin.formsandroidiosmobilebackend/md51668c1b92954fc4677ad41c78327f502.MainActivity\"\r\n> Starting: Intent { cmp=org.xamarin.formsandroidiosmobilebackend/md51668c1b92954fc4677ad41c78327f502.MainActivity VirtualScreenParam=Params{mDisplayId=-1, null, mFlags=0x00000000)} }\r\n```\r\n"},{"Id":"8727460709","Type":"IssuesEvent","CreatedAt":"2018-12-10T15:04:28","Actor":"velocitysystems","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2511","RelatedDescription":"Opened issue \"Crash \"Not a valid calendar for the given culture\" with Thai locale\" (#2511) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Set the device language to Thai.\r\n2. Use the following code snippet:\r\n```\r\nvar date = DateTime.Parse(\"2000-31-07\");\r\n```\r\n3. Runtime crash with `System.ArgumentOutOfRangeException`.\r\n\r\n### Expected Behavior\r\nThe method should complete successfully.\r\n\r\n### Actual Behavior\r\nThrows `System.ArgumentOutOfRangeException: Not a valid calendar for the given culture.`\r\n\r\n### Workaround\r\nPrevent linker from stripping out the reference by including it in the code.\r\n```\r\nvar includeThaiLocale = new System.Globalization.ThaiBuddhistCalendar();\r\n```\r\n\r\n### Version Information\r\n\r\n- Microsoft Visual Studio Professional 2017 v15.9.3\r\nVisualStudio.15.Release/15.9.3+28307.145\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\n- Xamarin 4.12.3.73 (d15-9@20b35b881)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\n- Xamarin Designer   4.16.5 (6b9f32067)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\n- Xamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\n- Xamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\n- Xamarin.iOS and Xamarin.Mac SDK   12.2.1.11 (5ef73d3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Related\r\nPreviously reported:\r\n\r\n- https://github.com/onovotny/MetroLog/issues/110\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=31228\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=59077\r\n"},{"Id":"8727229090","Type":"IssuesEvent","CreatedAt":"2018-12-10T14:32:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1643","RelatedDescription":"Closed issue \"Sometimes (often) I get random build errors\" (#1643) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Simply building the project\r\n\r\n### Expected Behavior\r\n\r\nShow no errors.\r\n\r\n### Actual Behavior\r\n\r\nI mostly get errors such as \r\n\r\n- \"No resource found that matches the given name:...\"\r\n- \"The type or namespace name \"Some namespace name\" does not exist in the namespace 'Namespace such as Android\"\r\n- The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n\r\nI can manage to get it to work if I do stuff like; \r\n\r\n- clean solution\r\n- rebuild solution\r\n- delete 'bin' and 'obj'\r\n- restarts visual studio\r\n- run a \"git clean -xdf\" for removing untracked files for the working tree\r\n\r\n... but not always does it do the trick for me.\r\n\r\nI am currently working on a rather big project, and the build time varies from 2min to 6min - and since the build is mostly \"not successfull\", I try this 2-5 times, which is rather time consuming and boring.\r\n\r\n### Version Information\r\n\r\nOperating System\r\nMac OS X 10.13.1\r\nDarwin 17.2.0 Darwin Kernel Version 17.2.0\r\n    Fri Sep 29 18:27:05 PDT 2017\r\n    root:xnu-4570.20.62~3/RELEASE_X86_64 x86_64\r\n\r\nVisual Studio for MAC 7.4.3 (build 10)\r\n\r\nXamarin.Mac\r\nVersion: 4.2.1.29 (Visual Studio Enterprise)\r\n\r\nXamarin.iOS\r\nVersion: 11.9.1.24 (Visual Studio Enterprise)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.16 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/Kirkegaard/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 28.0.0 rc1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n### Log File\r\nN/A"},{"Id":"8727211169","Type":"IssuesEvent","CreatedAt":"2018-12-10T14:29:42","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2295","RelatedDescription":"Closed issue \"Tasks and ThreadPools stop working if the Android app was kept in the background for 4-5 days\" (#2295) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nThe app has a foreground service and the app is kept running in the background for 4-5 days. After some duration, the MvvmCross references get de-initialized but the foreground services keep running. When the app is brought back to the foreground after 4-5 days, MvvmCross initialization starts but gets stuck at the point that queues a work item in the threadpool. Here is the code snippet from MvxAndroidSetupSingleton class inside MvvmCross Framework, that tries to enqueue a work item:\r\n\r\n\r\n            _setup.InitializePrimary();\r\n            **ThreadPool.QueueUserWorkItem(ignored =>\r\n            {\r\n                _setup.InitializeSecondary();\r\n                lock (LockObject)\r\n                {\r\n                    _initialized = true;\r\n                    if (_currentSplashScreen != null)\r\n                    {\r\n                        _currentSplashScreen.InitializationComplete();\r\n                    }\r\n                }\r\n            });**\r\nThe code enqueued in the ThreadPool never seems to get executed if the app gets in this situation. As the foreground services are running, the only option is to force stop the app. We could only reproduce the exact scenario by removing the code segment in bold. Currently, there seems to be no other way to reproduce than to wait for 5 days to reproduce it. We have tried kicking the app out of memory by filling up the memory using a different app. The adb shell commands to put the device/app in doze/deep sleep have also been tried, without any success.\r\nA detailed search on ThreadPool shows people have had problems with it especially with Xamarin. For some, the issue was resolved by switching to Task.Run, but in our case, that did not help either. Here is a similar issue that was observed on iOS, but was never resolved by Xamarin. The developer ended up removing all the mono threadpools and Task.Run instances to get his app working. Link: https://bugzilla.xamarin.com/show_bug.cgi?id=58633 . See [comment #18](https://bugzilla.xamarin.com/show_bug.cgi?id=58633#c18) that confirms this.\r\n\r\nMore issues faced by people with ThreadPools on Xamarin:\r\n1. https://forums.xamarin.com/discussion/23818/threadpool-is-driving-me-nuts-how-do-i-diagnose-where-the-threads-are-started\r\n2. https://stackoverflow.com/a/42245625/2501621\r\n\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe work item should be queued in the threadpool and executed.\r\n\r\n### Actual Behavior\r\nThe work item never gets executed.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n \r\nVersion 7.5.1 (build 22)\r\nInstallation UUID: 60692d15-b5ef-4ab8-8316-035366dc3940\r\nRuntime:\r\n                Mono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n                GTK+ 2.24.23 (Raleigh theme)\r\n                Xamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n                Package version: 510010047\r\n \r\n=== NuGet ===\r\n \r\nVersion: 4.3.1.4445\r\n \r\n=== .NET Core ===\r\n \r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n                2.0.5\r\n                2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n                2.1.4\r\n                2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n \r\n=== Xamarin.Profiler ===\r\n \r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n \r\n=== Apple Developer Tools ===\r\n \r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n \r\n=== Xamarin.Mac ===\r\n \r\nVersion: 4.4.1.178 (Visual Studio Enterprise)\r\n \r\n=== Xamarin.iOS ===\r\n \r\nVersion: 11.10.1.178 (Visual Studio Enterprise)\r\nHash: 408d3574\r\nBranch: d15-7\r\nBuild date: 2018-05-08 18:56:30-0400\r\n \r\n=== Xamarin.Android ===\r\n \r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/.../Library/Developer/Xamarin/android-sdk-macosx\r\n                Supported Android versions:\r\n                                2.3   (API level 10)\r\n                                4.0.3 (API level 15)\r\n                                5.0   (API level 21)\r\n                                5.1   (API level 22)\r\n                                6.0   (API level 23)\r\n                                7.0   (API level 24)\r\n                                7.1   (API level 25)\r\n                                8.0   (API level 26)\r\n                                8.1   (API level 27)\r\n \r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.3\r\n \r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n \r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n \r\n=== Xamarin Inspector ===\r\n \r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n \r\n=== Build Information ===\r\n \r\nRelease ID: 705010022\r\nGit revision: 60442dd643a20c7a4ae1f8705b8d1de8972eee78\r\nBuild date: 2018-05-15 01:43:39+00\r\nXamarin addins: 4194ffe4868321e4c3477bd56aed579bda4c6fbb\r\n \r\n=== Operating System ===\r\n \r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n \r\n=== Enabled user installed addins ===\r\n \r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\nNot attaching a log file as the app needs to be in the background for 4-5 days for this issue to be seen.\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8727169118","Type":"IssuesEvent","CreatedAt":"2018-12-10T14:23:25","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2399","RelatedDescription":"Closed issue \"Page styleclass css async\" (#2399) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  onappering binding page then method used with Task async then cannot load style.css  \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nOnApparing() -> in Page-> BindingContext\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8727151608","Type":"IssuesEvent","CreatedAt":"2018-12-10T14:20:48","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2503","RelatedDescription":"Closed issue \"$(LLVMToolchainPrebuiltRoot) not set to \"android ndk location\" option\" (#2503) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n0. In tools/Options/Xamarin/Android settings/Android NDK location, change the path.\r\n1. Create a \"cross platform\" C++ project (which creates an Android C++ project)\r\n2. Select ARM as target platform\r\n3. Open project settings (properties)\r\n4. Browser to \"C/C++\" / \"Command line\"\r\n5. You will see path like -l \"C:\\Microsoft\\AndroidNDK64\\android-ndk-r15c\\...\"\r\n\r\n### Expected Behavior\r\nthe $(LLVMToolchainPrebuiltRoot) variable should be set to the same path set in the Xamarin options.\r\n\r\n### Actual Behavior\r\nthe $(LLVMToolchainPrebuiltRoot) variable is set to \"C:\\Microsoft\\AndroidNDK64\\android-ndk-r15c\\.\" instead of whatever is set in the Xamarin options.\r\n\r\n### Version Information\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.3\r\nVisualStudio.15.Release/15.9.3+28307.145\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-90000-00000-AA445\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-90000-00000-AA445\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.3 EAP 7   Build 183.0.20181127.61205-eap07\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nJustDecompilePackage2017 Extension   1.0\r\nJustDecompilePackage2017 Visual Studio Extension Detailed Info\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nNVIDIA CUDA 10.0 Wizards   10.0\r\nWizards to create new NVIDIA CUDA projects and source files.\r\n\r\nNVIDIA Nsight Visual Studio Edition   6.0.0.18227\r\nNVIDIA Nsight Visual Studio Edition provides tools for GPGPU and graphics development.  Copyright © NVIDIA 2010 - 2018.\r\n•Direct3D® and DirectX® are registered trademarks of Microsoft Corporation in the United States and/or other countries.\r\n•Microsoft Detours is used under the Professional license (http://research.microsoft.com/en-us/projects/detours/).\r\n•Gardens Point Parser Generator Copyright 2005 Queensland University of Technology (QUT). All rights reserved.\r\n•NLog Copyright © 2004-2006 Jaroslaw Kowalski (jaak@jkowalski.net)\r\n•IronPython and WPFToolkit used under Microsoft Public License (Ms-PL) and are Copyright © Microsoft Corporation\r\n•Portions of RadControls for WPF © 2010-2011 by Telerik Corporation.  All rights reserved.\r\n•zlib and libpng used under the zlib/libpnc license (http://opensource.org/licenses/Zlib) \r\n•QtSingleApplication Copyright 2013 Digia Plc and/or its subsidiary(-ies).\r\n•Font Awesome Copyright 2018 Fonticons, Inc.\r\n\r\nWarning: This computer program is protected by copyright law and international treaties. Unauthorized reproduction or distribution of this program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law.\r\n\r\nNVIDIA Nsight Visual Studio Edition - CUDA support   6.0.0.0\r\nNVIDIA Nsight Visual Studio Edition - CUDA support provides tools for CUDA development and debugging.\r\n\r\nPowerShell Pro Tools for Visual Studio   1.0\r\nA set of tools for developing and debugging PowerShell scripts and modules in Visual Studio.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResXManager   1.29.1315.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28107.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.28016.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual C++ for Linux Development   1.0.9.28218\r\nVisual C++ for Linux Development\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamaridea.VisualStudioPlugin   1.0\r\nVS + Xamarin + IDEA = Love\r\n\r\nXamarin   4.12.3.73 (d15-9@20b35b881)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.5 (6b9f32067)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.11 (5ef73d3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n"},{"Id":"8725261613","Type":"IssuesEvent","CreatedAt":"2018-12-10T08:53:19","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2498","RelatedDescription":"Closed issue \"AndroidHttpClient crashes \" (#2498) at xamarin/xamarin-android","RelatedBody":"I have a Xamarin.Forms project, where data is given to the user through the network.\r\nIn case when the phone is connected to the router through Wi-Fi, but router itself is disconnected from the network Xamarin.Essentials Connectivity gives the documented false status of connection, and so, expected behavior of the app is to fall due to timeout (that could be caught and processed to give the appropriate info to the user).\r\nThough, this expected behavior is observed on iOS and on Android emulator on VS 2017, but not on the real Android device (the app hangs and then crashes there). There is a solution in SO for this problem:\r\nhttps://stackoverflow.com/questions/48475378/httpclient-not-working-on-android\r\nIf I change the properties of the Android project as it is said, I have another problem. In certain cases our server responds with redirect, and I hoped that it was the same issue as that: https://github.com/xamarin/xamarin-android/issues/1923 \r\n(it is solved with https://github.com/xamarin/xamarin-android/pull/2390)   \r\nI have updated the Android SDK with the last stable version yesterday, but my app still crashes.\r\n\r\n**Error message:**\r\nUnable to convert instance of type 'Java.Net.URLConnectionInvoker' to type 'Java.Net.HttpURLConnection'.\r\n\r\n**StackTrace:**\r\nat Java.Interop.JavaObjectExtensions.CastClass (Android.Runtime.IJavaObject instance, System.Type resultType) [0x00042] in /Users/builder/data/lanes/1196/c72abb69/source/monodroid/external/xamarin-android/src/Mono.Android/Java.Interop/JavaObjectExtensions.cs:80 \r\n  at Java.Interop.JavaObjectExtensions._JavaCast[TResult] (Android.Runtime.IJavaObject instance) [0x0002f] in /Users/builder/data/lanes/1196/c72abb69/source/monodroid/external/xamarin-android/src/Mono.Android/Java.Interop/JavaObjectExtensions.cs:63 \r\n  at Java.Interop.JavaObjectExtensions.JavaCast[TResult] (Android.Runtime.IJavaObject instance) [0x00000] in /Users/builder/data/lanes/1196/c72abb69/source/monodroid/external/xamarin-android/src/Mono.Android/Java.Interop/JavaObjectExtensions.cs:50 \r\n  at Android.Runtime.Extensions.JavaCast[TResult] (Android.Runtime.IJavaObject instance) [0x00000] in /Users/builder/data/lanes/1196/c72abb69/source/monodroid/external/xamarin-android/src/Mono.Android/Android.Runtime/Extensions.cs:11 \r\n  at Xamarin.Android.Net.AndroidClientHandler.SetupRequestInternal (System.Net.Http.HttpRequestMessage request, Java.Net.URLConnection conn) [0x00027] in /Users/builder/data/lanes/1196/c72abb69/source/monodroid/external/xamarin-android/src/Mono.Android/Xamarin.Android.Net/AndroidClientHandler.cs:763 \r\n  at Xamarin.Android.Net.AndroidClientHandler.SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken) [0x001ec] in /Users/builder/data/lanes/1196/c72abb69/source/monodroid/external/xamarin-android/src/Mono.Android/Xamarin.Android.Net/AndroidClientHandler.cs:280 \r\n  at System.Net.Http.HttpClient.SendAsyncWorker (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken) [0x00080] in /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/mcs/class/System.Net.Http/System.Net.Http/HttpClient.cs:276 \r\n_[and then go the methods from my project]_\r\n\r\n**Environment:**\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.3\r\nVisualStudio.15.Release/15.9.3+28307.145\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nXamarin   4.12.3.73 (d15-9@20b35b881) \r\n\r\nXamarin.Android SDK   9.1.199.31 (HEAD/c72abb69c)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/mono-5.16.0.221@b63e5378e38\r\n    Java.Interop: xamarin/java.interop/master@6dd6f16\r\n    LibZipSharp: grendello/LibZipSharp/master@d695149\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.25.2@4ea4c69\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/master@9e78d6e\r\n\r\n<img width=\"532\" alt=\"default\" src=\"https://user-images.githubusercontent.com/30509556/49595342-6fb40900-f980-11e8-8354-75f3826a7b70.PNG\">\r\n"},{"Id":"8725254545","Type":"IssuesEvent","CreatedAt":"2018-12-10T08:51:56","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1945","RelatedDescription":"Closed issue \"AndroidClientHandler Issue - Unable to convert instance of type 'Java.Net.URLConnectionInvoker' to type 'Java.Net.HttpURLConnection'\" (#1945) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nLooking at the HockeyApp exception reports for our latest release, we're all of a sudden seeing a large number of exceptions (1,270 so far) related to the AndroidClientHandler:\r\n\r\n> Unable to convert instance of type 'Java.Net.URLConnectionInvoker' to type 'Java.Net.HttpURLConnection'\r\n\r\n### Expected Behavior\r\n\r\nNo exceptions would be thrown.\r\n\r\n### Actual Behavior\r\n\r\nMany exception are thrown:\r\n\r\nUnable to convert instance of type 'Java.Net.URLConnectionInvoker' to type 'Java.Net.HttpURLConnection'\r\n\r\n### Version Information\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: 62cf1ad2-0db0-41e1-ac78-aeb509d79f60\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /android/sdk\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.0\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n### Log File\r\n\r\n> Package: com.rpr.mobile\r\n> Version Code: 420\r\n> Version Name: 1.71.12\r\n> Android: 8.0.0\r\n> Android Build: R16NW.G950USQS3CRE2\r\n> Manufacturer: samsung\r\n> Model: SM-G950U\r\n> Thread: Thread-21-5991\r\n> CrashReporter Key: a3fd05b0-f000-4568-95b3-ee40431e79ad\r\n> Start Date: 2018-07-07T16:21:43.759Z\r\n> Date: 2018-07-07T16:22:05.663Z\r\n> \r\n> android.runtime.JavaProxyThrowable: System.InvalidCastException: Unable to convert instance of type 'Java.Net.URLConnectionInvoker' to type 'Java.Net.HttpURLConnection'.\r\n>   at Java.Interop.JavaObjectExtensions.CastClass (Android.Runtime.IJavaObject instance, System.Type resultType) [0x0005d] in <d4e2da295ca14e9cba1396287ae7ad25>:0 \r\n>   at Java.Interop.JavaObjectExtensions._JavaCast[TResult] (Android.Runtime.IJavaObject instance) [0x0002f] in <d4e2da295ca14e9cba1396287ae7ad25>:0 \r\n>   at Java.Interop.JavaObjectExtensions.JavaCast[TResult] (Android.Runtime.IJavaObject instance) [0x00000] in <d4e2da295ca14e9cba1396287ae7ad25>:0 \r\n>   at Android.Runtime.Extensions.JavaCast[TResult] (Android.Runtime.IJavaObject instance) [0x00000] in <d4e2da295ca14e9cba1396287ae7ad25>:0 \r\n>   at Xamarin.Android.Net.AndroidClientHandler+<SetupRequestInternal>d__58.MoveNext () [0x00027] in <d4e2da295ca14e9cba1396287ae7ad25>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at Xamarin.Android.Net.AndroidClientHandler+<SendAsync>d__39.MoveNext () [0x001a8] in <d4e2da295ca14e9cba1396287ae7ad25>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at RPR.Mobile.Shared.Http.ApiAuthenticationHandler+<SendAsync>d__1.MoveNext () [0x00175] in <17afdd93c6d449ddbeeef231e7185398>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at RPR.Mobile.Shared.Http.CompressionHandler+<SendAsync>d__1.MoveNext () [0x000ae] in <17afdd93c6d449ddbeeef231e7185398>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at RPR.Mobile.Shared.Http.LoggingHandler+<SendAsync>d__4.MoveNext () [0x003aa] in <17afdd93c6d449ddbeeef231e7185398>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <7fbbda94e790482788fef72ba707de84>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at Microsoft.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00042] in <1c7d529d87ec4bdcbde02e9494f3b5ae>:0 \r\n>   at Microsoft.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccess (System.Threading.Tasks.Task task) [0x0001c] in <1c7d529d87ec4bdcbde02e9494f3b5ae>:0 \r\n>   at Microsoft.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00009] in <1c7d529d87ec4bdcbde02e9494f3b5ae>:0 \r\n>   at Microsoft.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <1c7d529d87ec4bdcbde02e9494f3b5ae>:0 \r\n>   at RPR.Mobile.Shared.Maps.ParcelBoundaryUtility+<GetImageUrl>d__2.MoveNext () [0x0006e] in <905a0792e577437783681affc41df2b7>:0 \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n>   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <45e5348131954983a9a36665cb597c43>:0 \r\n>   at RPR.Mobile.Droid.Adapters.PropertyDetails.LocationDetailsBuilder+<>c__DisplayClass10_0+<<UpdateParcelBoundaries>b__0>d.MoveNext () [0x000e3] in <17afdd93c6d449ddbeeef231e7185398>:0 "},{"Id":"8722958904","Type":"PullRequestEvent","CreatedAt":"2018-12-09T17:27:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2509","RelatedDescription":"Merged pull request \"Bump to xamarin/xamarin-android-api-compatibility/master@ec562e9b\" (#2509) at xamarin/xamarin-android","RelatedBody":"Hopefully fixes the reports of API breakage on `Mono.Android.Export`,\r\nand flushes the API for all assemblies."},{"Id":"8722958134","Type":"PullRequestEvent","CreatedAt":"2018-12-09T17:26:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2510","RelatedDescription":"Merged pull request \"Revert \"[Xamarin.Android.Build.Tasks] don't use so many temp files\"\" (#2510) at xamarin/xamarin-android","RelatedBody":"Reverts xamarin/xamarin-android#2505\r\n\r\nI missed the **do-not-merge** label.  Doh!"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8731311035","Type":"PullRequestEvent","CreatedAt":"2018-12-11T03:52:23","Actor":"kzu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4699","RelatedDescription":"Opened pull request \"Properly detect SDK style projects\" (#4699) at xamarin/Xamarin.Forms","RelatedBody":"The `$(MSBuildSDKsPath)` is actually *always* set whenever there are MSBuild SDKs \r\n*installed*, not necessarily when the current project is an SDK-style project itself. \r\n\r\nThis means that we're potentially adding duplicate items and otherwise disrupting \r\nnormal operation of the non-SDK style projects with this import. \r\n\r\nSo use the well-known properties that are set by the .NET [Sdk.props](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.props#L22-L27) file instead, \r\nwhich is the first imported target even before nuget-provided .props files."},{"Id":"8731224136","Type":"IssuesEvent","CreatedAt":"2018-12-11T03:23:58","Actor":"AuriR","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4698","RelatedDescription":"Opened issue \"HorizontalTextAlignment not honored after \" (#4698) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nHorizontalTextAlignment not honored on Label in ListView when ObservableCollection item updated. A ListView, with a Horizontal StackLayout, and a label at the end with a \"FillAndExpand\" HorizontalOptions and HorizontalTextAlignment as \"End\" will render fine initially, but when the collection is updated, the HorizontalTextAlignment of the Label isn't honored.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Git repo: URL https://aurir.visualstudio.com/Reptile%20Tracker **(email me and I'll add you)**\r\n2. Launch app, and note on Scores page all items are right-aligned and 0\r\n3. Use Take photo, take a photo, regardless, one score will update. Note the score is left aligned.\r\n\r\n(see attached photos for repro)\r\n\r\n![before change](https://user-images.githubusercontent.com/3044108/49775712-a3639b80-fcbe-11e8-869e-9e27d71fa610.jpg)\r\n![after change](https://user-images.githubusercontent.com/3044108/49775718-a8c0e600-fcbe-11e8-90dc-c4775e81ffaf.jpg)\r\n\r\n### Expected Behavior\r\nLabel should update with appropriate text and be right justified.\r\n\r\n### Actual Behavior\r\nLabel is rendered left justified.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Confirmed with XF 3.3.0.967583 and 3.4.0.1008975\r\n- Last known good version: (don't know, haven't checked)\r\n- IDE: VS Mac and VS Windows - doesn't matter which VS IDE.\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  (doesn't appear to matter, happens on Android and iOS) \r\n  - Android: (doesn't appear to matter, happens on Android and iOS)  \r\n  - UWP: haven't checked, not targeting UWP\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\nAndroid and iOS Simulators, Galaxy S9+ and iPhone XR, doesn't appear limited by device\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8729833716","Type":"IssuesEvent","CreatedAt":"2018-12-10T21:29:09","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4696","RelatedDescription":"Closed issue \"Unable to compile master branch\" (#4696) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI created a directory, and cloned Xamarin Forms into it:\r\ngit clone https://github.com/xamarin/Xamarin.Forms.git\r\n\r\nI'm unable to compile, it shows 288 errors. \r\nI thought I can ignore them and I tried to just start with \"Xamarin.Forms.ControlGallery.WindowsUniversal\" as active project, same errors.\r\n\r\nI don't understand how your CI is not failing.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: I think around 2 months ago it worked perfectly.\r\n- Last known good version:\r\n- IDE: Visual Studio 2017, v15.9.3\r\n- Windows 10\r\n![image](https://user-images.githubusercontent.com/15019084/49745572-f5e58d80-fca7-11e8-8be4-e066eb244fbd.png)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8729998374","Type":"PullRequestEvent","CreatedAt":"2018-12-10T21:59:13","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5244","RelatedDescription":"Merged pull request \"[Foundation] Make sure we use the cookies from the cookie storage. Fixes #5148\" (#5244) at xamarin/xamarin-macios","RelatedBody":"The response object does not have all the cookie values, instead we must\r\nuse the cookie storage which can be used to retrieve ALL the cookies\r\nfor a task.\r\n\r\nThe header value has to be created manually because the native objects\r\ndo not expose a valid way to get the header. Tests have been added to\r\nensure we return the same as the managed client.\r\n\r\nFixes https://github.com/xamarin/xamarin-macios/issues/5148"},{"Id":"8729998359","Type":"IssuesEvent","CreatedAt":"2018-12-10T21:59:12","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5148","RelatedDescription":"Closed issue \"NSUrlSession HttpResponseMessage.Headers.TryGetValues returns (outputs) only one element/value for multiple cookies\" (#5148) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Choose NSUrlSession HttpClient implementation in iOS project properties\r\n2. Send a request with HttpClient to some site that sets mutliple different cookies\r\n3. Execute TryGetValues with \"Set-Cookie\" header name on response message: [HttpResponseMessage.Headers.TryGetValues](https://msdn.microsoft.com/en-us/library/system.net.http.headers.httpheaders.trygetvalues(v=vs.118).aspx)\r\n\r\n### Expected Behavior\r\nShould return (output) more than one entry for each cookie. This behavior is default for all other implementations: Android, Windows, Linux, iOS Managed HttpClient implementation etc.\r\n### Actual Behavior\r\nReturns (outputs) just one element that is concatenated string of multiple cookies\r\n### Environment\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.1\r\nVisualStudio.15.Release/15.9.1+28307.105\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA099\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCleanBinAndObjCommand Extension   1.0\r\nCleanBinAndObjCommand Visual Studio Extension Detailed Info\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nFile Nesting   2.6.85\r\nAutomatically nest files based on file name and enables developers to nest and unnest any file manually\r\n\r\nGitHub.VisualStudio   2.5.9.5485\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.5001.4\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.5001.4\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.4\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.5001.4\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.21001.1 Commit Hash:8dd15923800d931b153ab9e4de74e42a74eba5e6\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nNVIDIA CUDA 9.2 Wizards   9.2\r\nWizards to create new NVIDIA CUDA projects and source files.\r\n\r\nNVIDIA Nsight Visual Studio Edition   5.6.0.18146\r\nNVIDIA Nsight Visual Studio Edition provides tools for GPGPU and graphics development.  Copyright © NVIDIA 2010 - 2018.\r\n•Direct3D® and DirectX® are registered trademarks of Microsoft Corporation in the United States and/or other countries.\r\n•Microsoft Detours is used under the Professional license (http://research.microsoft.com/en-us/projects/detours/).\r\n•Gardens Point Parser Generator Copyright 2005 Queensland University of Technology (QUT). All rights reserved.\r\n•NLog Copyright © 2004-2006 Jaroslaw Kowalski (jaak@jkowalski.net)\r\n•IronPython and WPFToolkit used under Microsoft Public License (Ms-PL) and are Copyright © Microsoft Corporation\r\n•Portions of RadControls for WPF © 2010-2011 by Telerik Corporation.  All rights reserved.\r\n•zlib and libpng used under the zlib/libpnc license (http://opensource.org/licenses/Zlib) \r\n\r\nWarning: This computer program is protected by copyright law and international treaties. Unauthorized reproduction or distribution of this program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law.\r\n\r\nNVIDIA Nsight Visual Studio Edition - CUDA support   5.6.0.0\r\nNVIDIA Nsight Visual Studio Edition - CUDA support provides tools for CUDA development and debugging.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSlowCheetah - XML config transforms   1.0\r\nThis package enables you to transform your app.config or any other XML file based on the build configuration. It also adds additional tooling to help you create XML transforms.\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28107.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSPackage Extension   1.0\r\nVSPackage Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.12.3.69 (d15-9@15fcf6b03)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.4 (128ba449c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.10 (f2a05ed)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/bartlomiej-stys/85b607de489528fbc6d10f9d445de5ae\r\n\r\n### Example Project (If Possible)\r\n\r\n[SetCookie.zip](https://github.com/xamarin/xamarin-macios/files/2597591/SetCookie.zip)\r\n\r\n"},{"Id":"8729897741","Type":"PullRequestEvent","CreatedAt":"2018-12-10T21:40:43","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5251","RelatedDescription":"Opened pull request \"[mmp] Add rpath during compile and not after via install_name_tool\" (#5251) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/5243\r\n- https://github.com/xamarin/xamarin-macios/issues/5248\r\n- There were multiple issues where we'd run out of space and install_name_tool\r\nwould randomly fail. We can easily move these two to during initial\r\nclang and avoid those cases."},{"Id":"8729855551","Type":"IssuesEvent","CreatedAt":"2018-12-10T21:33:03","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5250","RelatedDescription":"Opened issue \"Sample with entity framework fails to launch with 15.9 XI builds\" (#5250) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1.  Install XI 12.2.1.12\r\n2. Build and launch the attached project on device\r\n\r\n### Expected Behavior\r\nApp should successfully launch on device\r\n\r\n### Actual Behavior\r\nApp fails to launch on device with an error, Unhandled Exception:\r\nSystem.ExecutionEngineException: Attempting to JIT compile method '(wrapper runtime-invoke) :runtime_invoke_void__this___int_byte_object_object_DateTime_Nullable`1_Decimal_Guid_Nullable`1_Nullable`1 (object,intptr,intptr,intptr)' while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n  at (wrapper managed-to-native) System.Reflection.MonoCMethod.InternalInvoke(System.Reflection.MonoCMethod,object,object[],System.Exception&)\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/GouriKumari/6afd85fa510ae3e1b171049c139b2792\r\n\r\n### Build Logs\r\nBuild log: https://gist.github.com/GouriKumari/87b58e29eae2925554f31c63ef407aa9\r\nError Log: https://gist.github.com/GouriKumari/12c16adfdc3b8b9bbbaadd60591e58a3\r\n\r\n### Example Project (If Possible)\r\nhttps://www.dropbox.com/s/z3sjkwk5s3yi4zt/iOSEFCore21.zip?dl=0\r\n\r\n##Additional Info:\r\n\r\nThis issue is reproducible only with 15.9 builds and it is not occurring with master builds. I have a test run where  sample launched successfully with 12.2.1.10, the d15-9 RTW build. But the sample is now failing to launch with RTW build. I couldn't figure out the reason. \r\n\r\nApp launches successfully on iOS simulator with d15-9 builds. \r\n\r\n"},{"Id":"8729716833","Type":"PullRequestEvent","CreatedAt":"2018-12-10T21:07:36","Actor":"emaf","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5249","RelatedDescription":"Opened pull request \"[msbuild] Fixes incremental build issues with frameworks from VS\" (#5249) at xamarin/xamarin-macios","RelatedBody":"Partial fix for bug 662636 - *.dylib libraries are signed during full rebuild, but not the second time\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_queries/edit/662636\r\n\r\nThere were two problems:\r\n- VS was creating/touching each bundle resource found even if the resource wasn't unpacked on the Mac because the file was up to date. This caused the files on Windows to be changed on each build.\r\n- VS was not updating the framework files in the app bundle on incremental builds because the MTouch didn't have an output property informing the frameworks that were copied by mtouch into the app bundle. This caused MSBuild to skip the CodesignFramework target because the frameworks remained unchanged on Windows."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":34,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":137,"FavoriteCount":70,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":96,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":30,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":39,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":56,"RawContent":null}]}},"RunOn":"2018-12-11T05:31:15.81339Z","RunDurationInMilliseconds":4109}