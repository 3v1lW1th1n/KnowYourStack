{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11141129998","Type":"IssuesEvent","CreatedAt":"2019-12-21T19:57:54","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7787","RelatedDescription":"Opened issue \"Add catalog tail resource\" (#7787) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nApplications that follow catalog are most of the time interested in catalog tail - last few pages to process the changes since the last attempt. To figure out what are the last pages, however, app needs to download the [catalog index](https://api.nuget.org/v3/catalog0/index.json) every time. Currently, this file is 1.7 MB in size (and it only grows), changes almost all the time, and is not compressed. So, if app needs to process changes once a minute it has to download it once a minute, generating 100 MB of network traffic per hour while it only needs the last few records from it. This is especially bad if one wants to poll catalog from a web page: it will hog user's network traffic and if there are 100 users, it will be 100 times as bad for the server hosting the blob.\r\n\r\n### Existing workarounds\r\n* Since page numbering in nuget.org is pretty straightforward, instead of checking the catalog index for new pages, the job can probe for the next page by itself. This is really implementation specific and can be easily be broken;\r\n* Range requests on the catalog index. Relies on the service hosting it to support them, on the catalog index to be append only and never change in the middle, which is not really true: ![image](https://user-images.githubusercontent.com/102933/71312909-f13cd480-23e5-11ea-9448-77e3abb910ac.png) It got better recently, but still, it's not documented that there is any order to the catalog index items, also implementation would require to be able to parse partial JSON.\r\n\r\n### Describe the solution you'd like\r\n\r\n#### Catalog tail resource\r\nSounds like the simplest thing to do: introduce a new resource that will contain last few entries (last 10, last week, does not matter much) from the catalog index. This will provide the required information for the jobs in most cases using the fraction of network bandwidth compared.\r\n\r\nA db2catalog modification would be needed to drop a blob with the last few entries of the catalog index whenever it gets updated provided at best effort: db2catalog will write the catalog index first, if that succeeds, will write the tail, if that fails it will not retry (assuming the blob itself was not corrupted during the attempt, it will be brought up-to-date state at next catalog update); if catalog index update fails, no tail write attempt is going to be made.\r\n\r\nProposed shape:\r\n```JSON\r\n{\r\n  \"commitId\": \"da5e4a25-eb45-4fc1-9522-e5363940db83\",\r\n  \"commitTimeStamp\": \"2019-12-21T19:31:28.1771475Z\",\r\n  \"count\": 9380,\r\n  \"nuget:lastCreated\": \"2019-12-21T19:31:26.053Z\",\r\n  \"nuget:lastDeleted\": \"2019-12-20T15:40:41.667804Z\",\r\n  \"nuget:lastEdited\": \"2019-12-21T19:31:26.053Z\",\r\n  \"latestItems\": [\r\n    {\r\n      \"@id\": \"https://api.nuget.org/v3/catalog0/page9377.json\",\r\n      \"@type\": \"CatalogPage\",\r\n      \"commitId\": \"9e348716-dbba-4322-bcfa-2c8a59102687\",\r\n      \"commitTimeStamp\": \"2019-12-21T07:19:46.8969541Z\",\r\n      \"count\": 549\r\n    },\r\n    {\r\n      \"@id\": \"https://api.nuget.org/v3/catalog0/page9378.json\",\r\n      \"@type\": \"CatalogPage\",\r\n      \"commitId\": \"02fa4280-e93d-4cd7-baba-a82f3ae8b92c\",\r\n      \"commitTimeStamp\": \"2019-12-21T17:03:22.1844852Z\",\r\n      \"count\": 550\r\n    },\r\n    {\r\n      \"@id\": \"https://api.nuget.org/v3/catalog0/page9379.json\",\r\n      \"@type\": \"CatalogPage\",\r\n      \"commitId\": \"da5e4a25-eb45-4fc1-9522-e5363940db83\",\r\n      \"commitTimeStamp\": \"2019-12-21T19:31:28.1771475Z\",\r\n      \"count\": 65\r\n    }  \r\n  ]\r\n}\r\n```\r\nI.e. it will have the same shape as the catalog index (I don't have an opinion on `@id`, `@type` and `@context` properties, can keep them for consistency) with the exception of the `items` property replaced with the `latestItems`. I am a bit unsure about the property rename, though: if the name is kept the same, apps would be able to effortlessly fall back to the catalog index if there are issues with the. \r\n\r\nThe `commitId`, `commitTimeStamp` and others are nice to have and provide a way to validate that tail is not lagging behind the main index too much.\r\n\r\n#### Organize the catalog pages into a linked list\r\n\r\nChange the protocol to make page blobs to include the link to the next page if there is one.\r\n\r\nProposed shape:\r\n\r\n```JSON\r\n{\r\n  \"@id\": \"https://api.nuget.org/v3/catalog0/page3615.json\",\r\n  \"@type\": \"CatalogPage\",\r\n  \"commitId\": \"76181692-ddf1-4d03-b6b9-0cc1046b30e7\",\r\n  \"commitTimeStamp\": \"2018-03-30T12:45:42.3023362Z\",\r\n  \"count\": 550,\r\n  \"parent\": \"https://api.nuget.org/v3/catalog0/index.json\",\r\n  \"nextSibling\": \"https://api.nuget.org/v3/catalog0/page3616.json\", // this\r\n  \"items\": [ ... ]\r\n}\r\n```\r\n\r\nI.e. `nextSibling` (mostly to align with [DOM API](https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling), alternatively can be `nextPage`, `nextChild` or whatever else) property is added to a page and updated any time a page after the current is added.\r\n\r\n### Additional context\r\nThis all hinges on the assumption that there is an interest for processing the catalog by third parties. If there is little demand, probably not worth implementing."},{"Id":"11131183347","Type":"IssuesEvent","CreatedAt":"2019-12-20T01:44:36","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7786","RelatedDescription":"Opened issue \"[Azure Search] Azure Search Service does not reload query keys\" (#7786) at NuGet/NuGetGallery","RelatedBody":"1. Query (read-only) key was rotated at T-48H\r\n1. Old query key was invalided at T-0H\r\n1. Service started failing all requests.\r\n\r\nThe sad part is monitoring was saying that secrets were being reloaded. This indicates a bug in secret reloading for the Azure Search client. Maybe it's a singleton when it should really be reloaded periodically?\r\n\r\n![image](https://user-images.githubusercontent.com/94054/71222960-37c7ed00-2287-11ea-9784-f43d687ac5ef.png)\r\n"},{"Id":"11130841848","Type":"IssuesEvent","CreatedAt":"2019-12-20T00:25:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7785","RelatedDescription":"Opened issue \"[C2R] Implement Entity Builder: populate registration entities from catalog\" (#7785) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11130837959","Type":"IssuesEvent","CreatedAt":"2019-12-20T00:25:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7736","RelatedDescription":"Closed issue \"[C2R] Implement Hive Merger: logic to merge catalog leaves into a single index\" (#7736) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11130755851","Type":"IssuesEvent","CreatedAt":"2019-12-20T00:07:39","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7754","RelatedDescription":"Closed issue \"[PackageType]Add package filtering to Azure Search Service and query parameter\" (#7754) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11130712636","Type":"IssuesEvent","CreatedAt":"2019-12-19T23:59:15","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7756","RelatedDescription":"Closed issue \"[PackageType]Add functional test to search for pre-existing package typed package\" (#7756) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11130425651","Type":"IssuesEvent","CreatedAt":"2019-12-19T23:01:51","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7769","RelatedDescription":"Closed issue \"[2019-12-16] Deployment\" (#7769) at NuGet/NuGetGallery","RelatedBody":"# NuGetGallery\r\n\r\n**We must run DB migrations!**\r\n\r\n- [x] Merge dev to master\r\n- [x] DEV\r\n  - [x] DatabaseMigration.Gallery\r\n  - [x] NuGetGallery\r\n  - [x] NuGetGallery - Terms of Use\r\n- [x] INT\r\n  - [x] DatabaseMigration.Gallery\r\n  - [x] NuGetGallery Release [536173](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=536173)\r\n  - [x] NuGetGallery - Terms of Use\r\n- [x] PROD\r\n  - [x] DatabaseMigration.Gallery\r\n  - [x] NuGetGallery\r\n  - [x] NuGetGallery - Terms of Use\r\n\r\n# Jobs\r\n- [x] DEV\r\n  - [x] Job: Gallery.CredentialExpiration\r\n- [ ] ~~Merge dev to master: https://github.com/NuGet/NuGet.Jobs/pull/843~~\r\n- [x] Cherry-pick relevant changes into master.\r\n- [x] INT Build [3332244](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3332244)\r\n  - [x] Job: Gallery.CredentialExpiration\r\n- [x] PROD\r\n  - [x] Job: Gallery.CredentialExpiration\r\n"},{"Id":"11128780711","Type":"IssuesEvent","CreatedAt":"2019-12-19T18:57:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7703","RelatedDescription":"Closed issue \"[PackageType]Investigate performance impacts\" (#7703) at NuGet/NuGetGallery","RelatedBody":"We have to use `$filter` instead of search text filtering since we don't want unscoped terms to search in the package type field.\r\n\r\nSo, we test these two things:\r\n\r\n1. [x] regression test, performance of existing query patterns\r\n    - Ran standard load test against 6 P3 instances, Azure Search scale 12/3.\r\n      - Note that none of these queries filter by package type\r\n    - Without package types fields: [995](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&runId=9bc3f252-c2dc-4e33-a624-1330012f4dd2&name=nuget-search-service-forever.jmx&definitionId=e3452fa0-8c13-4d84-b72f-3af9d9e9f2ff&definitionType=jMeter) - 253ms, 986.5RPS\r\n    - With package types fields: [996](https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-cloudloadtest-web.hub-loadtest-test?_a=summary&runId=ebd20e71-1daf-43de-bca1-532d52037fd2&name=nuget-search-service-forever.jmx&definitionId=41cab907-897b-47b9-a203-4d333eb204e0&definitionType=jMeter) - 261.2ms, 955.6RPS\r\n1. [x] test performance of the new query pattern\r\n    - `/query?q=dotnettool` - 308ms\r\n    - `/query?q=dotnettool&packageType=dotnettool` - 312ms"},{"Id":"11128534408","Type":"IssuesEvent","CreatedAt":"2019-12-19T18:22:11","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7385","RelatedDescription":"Closed issue \"Add NPS survey to NuGet.org\" (#7385) at NuGet/NuGetGallery","RelatedBody":"# Resources\r\n\r\n* [Usabilla homepage](https://usabilla.com/)\r\n* Examples: [Visual Studio website](https://visualstudio.microsoft.com/#) and [.NET Blog](https://devblogs.microsoft.com/dotnet/). Text reads `What do you think of this page?` Selecting a value (1-5) opens a text area that reads `How was your experience?`. This is placed on all pages.\r\n* [What is Net Promoter Score (NPS)?](https://usabilla.com/net-promoter-score-nps/)\r\n* [JavaScript API](https://support.usabilla.com/hc/en-us/articles/208019369-How-to-use-our-JavaScript-API-Command-List-), can be used to export data\r\n\r\n# Steps\r\n\r\n- [x] Karan+Joel: Make sure we're good from a GDPR standpoint on Usabilla\r\n- [x] Joel: How can we/must we obfuscate URLs sent in feedback?\r\n- [x] Karan+Joel: Add an SVG version of the feedback button\r\n- [x] Joel: Deploy to DEV with a test button ID so we can play\r\n- [x] Karan: submit customization of the form so we have NuGet logo or whatever\r\n  - [x] Submitted\r\n  - [x] Verified\r\n- [x] Karan: provide Joel with 3 button IDs for DEV, INT, and PROD.\r\n- [x] Joel: Check in button IDs to config\r\n- [x] Joel: Merge change to dev branch\r\n- [x] Joel: Deploy all the way to PROD\r\n- [x] Joel: Turn feature flag on"},{"Id":"11127803461","Type":"IssuesEvent","CreatedAt":"2019-12-19T16:44:08","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7752","RelatedDescription":"Closed issue \"[PackageType]Rebuild index on all environments\" (#7752) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11122113351","Type":"IssuesEvent","CreatedAt":"2019-12-19T02:37:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7784","RelatedDescription":"Opened issue \"Feedback button should not appear if script is blocked\" (#7784) at NuGet/NuGetGallery","RelatedBody":"Browser extensions like uBlock Origin block some \"tracking\" scripts. This can effect the loading of the Usabilla JavaScript snippet. In such a case, the feedback button should not appear.\r\n\r\nToday, if the Usabilla script is blocked the button still appears (because we have a custom button) but does nothing when we click it. This is confusing."},{"Id":"11121628936","Type":"PullRequestEvent","CreatedAt":"2019-12-19T00:47:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7782","RelatedDescription":"Merged pull request \"Fix two package type related bugs\" (#7782) at NuGet/NuGetGallery","RelatedBody":"Clear previous package types during reflow: https://github.com/NuGet/NuGetGallery/issues/7780\r\nReject invalid package type names: https://github.com/NuGet/NuGetGallery/issues/7766"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11144473514","Type":"IssuesEvent","CreatedAt":"2019-12-23T01:44:48","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8948","RelatedDescription":"Closed issue \"Github as a PSRepository?\" (#8948) at NuGet/Home","RelatedBody":"We have a local Enterprise GitHub instance. We would like to make use of standard installation tools for both PowerShell and Python code. We want to install only what is needed and not replicate the entire project repository onto every machine that will run the code.\r\n\r\nIt appears that we could create a local Enterprise NuGet server. Is that needed?\r\n\r\nWhere can I find information on publishing a GitHub project to NuGet?\r\n\r\nCan GitHub act as a PSRepository which would make PowerShellGet commands see it as a PSRepository?\r\n\r\nWe need to do the same thing for Python applications and modules? Can a NuGet server act as a repository for Python installations? Or, is there a way to publish a GitHub project to PyPI?"},{"Id":"11139030535","Type":"IssuesEvent","CreatedAt":"2019-12-21T01:21:25","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8951","RelatedDescription":"Closed issue \"CSProj doesn't find central version from Directory.Packages.props\" (#8951) at NuGet/Home","RelatedBody":"I created Directory.Packages.props file at solution level, but project doesn't refer Directory.Packages.props for version. Followed steps from https://github.com/NuGet/Home/wiki/Centrally-managing-NuGet-package-versions. \r\n\r\n[central-level-pkg.zip](https://github.com/NuGet/Home/files/3971647/central-level-pkg.zip)\r\n@lovakumar\r\n\r\nPlease suggest if I am missing something. \r\n\r\n"},{"Id":"11137431725","Type":"IssuesEvent","CreatedAt":"2019-12-20T19:19:51","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8965","RelatedDescription":"Closed issue \"[Test Failure]Confusing supported .NET Framework version v0.0 show in the error NU1202 message when installing a package into a project with incompatible framework\" (#8965) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6353\r\nVS Version: Master\\29619.96\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Create a C# Blank App (Universal Windows) template via VS.\r\n2. Open PM UI of the project by right-clicking the project->Manage NuGet Packages… in Solution Explorer.\r\n3. Search the package “Blend.Interactivity.Wpf” in Browse tab and install it.\r\n4. Look at the error message in Error List window.\r\n## Expected\r\nPackage supported .NET Framework version v0.0 will not show in the error NU1202 message.\r\n## Actual\r\nConfusing supported .NET Framework version v0.0 show in the error NU1202 message as below screenshot. NuGet should prevent user to input wrong .NET Framework version if that is coming from user.\r\n![NU1202ErrorMessage](https://user-images.githubusercontent.com/20632625/71240297-b8e4ba00-2343-11ea-9a63-6d55dff07711.png)\r\n\r\n\r\n"},{"Id":"11137179111","Type":"IssuesEvent","CreatedAt":"2019-12-20T18:36:53","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8508","RelatedDescription":"Closed issue \"Temporary fix on patching SDK for System.Security.Cryptography.Pkcs.dll \" (#8508) at NuGet/Home","RelatedBody":"When implementing verification and signing, we bring in System.Security.Cryptography.Pkcs.dll and several dlls for netstandard2.1, which is in extension but not in netcoreapp3.x/5.0. \r\nSo we encounter an exception of System.Security.Cryptography.Pkcs.dll not found in patching tests as those dlls are not brought in in SDK.\r\nFor now, we need to temporary copy those dlls and update the deps.json files in patching.\r\nFor permeate fix, we need to wait for SDK team bring in those dlls.\r\n\r\nShould create an SDK issue and point to it. \r\nhttps://github.com/dotnet/sdk/issues/3629\r\nhttps://github.com/NuGet/Home/issues/8570"},{"Id":"11132977015","Type":"IssuesEvent","CreatedAt":"2019-12-20T08:16:39","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8965","RelatedDescription":"Opened issue \"[Test Failure]Confusing supported .NET Framework version v0.0 show in the error NU1202 message when installing a package into a project with incompatible framework\" (#8965) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6353\r\nVS Version: Master\\29619.96\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Create a C# Blank App (Universal Windows) template via VS.\r\n2. Open PM UI of the project by right-clicking the project->Manage NuGet Packages… in Solution Explorer.\r\n3. Search the package “Blend.Interactivity.Wpf” in Browse tab and install it.\r\n## Expected\r\nPackage supported .NET Framework version v0.0 will not show in the error NU1202 message.\r\n## Actual\r\nConfusing supported .NET Framework version v0.0 show in the error NU1202 message as below screenshot.\r\n![NU1202ErrorMessage](https://user-images.githubusercontent.com/20632625/71240297-b8e4ba00-2343-11ea-9a63-6d55dff07711.png)\r\n\r\n\r\n"},{"Id":"11132940577","Type":"IssuesEvent","CreatedAt":"2019-12-20T08:10:58","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8964","RelatedDescription":"Opened issue \"[Test Failure][Accessibility] Cannot do any mouse control when the check-box of package in ‘Updates’ Tab is checked by Tab\" (#8964) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6353\r\nVS Version: Master\\29619.96\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps\r\n1. Launch VS and click “Create a New Project” button.\r\n2. Create an ASP.NET Web Application (.NET Framework) project (Single Page Application).\r\n3. Open PM UI of this project and go to ‘Updates’ tab.\r\n4. Navigate by Tab to the package list.\r\n5. There is a dash-line showing on the outer edge of the first package.\r\n6. Hit Tab again, attempt to focus on the check-box of this package.\r\n7. Hit Space on the keyboard to check the check-box.\r\n8. Try to click another package by mouse.\r\n## Expected\r\nMouse control should also be successful when the check-box of package in ‘Updates’ Tab is checked by Tab.\r\n## Actual\r\nCannot do any mouse control when the check-box of package in ‘Updates’ Tab is checked by Tab.\r\n## Note\r\nIt repro on 16.2 GA (D16.2\\29116.123) with implicit NuGet 5.2.0.6090.\r\n"},{"Id":"11132917737","Type":"IssuesEvent","CreatedAt":"2019-12-20T08:07:21","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8963","RelatedDescription":"Opened issue \"[Test Failure][Accessibility] Hard to see the check-box of package in ‘Updates’ Tab is focused with a dash-line box when navigating through Tab in Blue/Blue (Extra Contrast)/Light themes\" (#8963) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.5.0.6353\r\nVS Version: Master\\29619.96\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Launch VS and click “Create a New Project” button.\r\n2. Create an ASP.NET Web Application (.NET Framework) project (Single Page Application).\r\n3. Open PM UI of this project and go to ‘Updates’ tab.\r\n4. Navigate by Tab to the package list.\r\n5. There is a dash-line showing on the outer edge of the first package.\r\n6. Hit Tab again, attempt to focus on the check-box of this package.\r\n## Expected\r\nEasy to see the check-box of package in ‘Updates’ Tab is focused with a dash-line box. \r\n## Actual\r\nHard to see the check-box of package in ‘Updates’ Tab is focused with a dash-line box as below screenshot. Note: actually it is focused since you can see the “√” when hitting Space on keyboard.\r\n![CannotSeeDashLineBox](https://user-images.githubusercontent.com/20632625/71239864-91412200-2342-11ea-9f5e-a25e991c32ea.png)\r\n## Note\r\n1. It repro on 16.2 GA (D16.2\\29116.123) with implicit NuGet 5.2.0.6090.\r\n2. It doesn’t repro in Dark theme.\r\n3. Resolution suggested: make the bash-box a little bigger than the check-box.\r\n\r\n"},{"Id":"11128771468","Type":"IssuesEvent","CreatedAt":"2019-12-19T18:56:25","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8041","RelatedDescription":"Closed issue \"Show NuGet commands in context menu\" (#8041) at NuGet/Home","RelatedBody":"Show `Manage NuGet Packages` as an option on\r\n- [x] `Dependencies` node's context menu for SDK style projects https://github.com/NuGet/Home/issues/5049 (Released in 16.4 Preview 2)\r\n- [x] `Packages` node's context menu for SDK style projects https://github.com/NuGet/Home/issues/5049 (Released in 16.4 Preview 2)\r\n- [x] `References` node's context menu for csproj.dll based projects\r\n\r\n\r\n(Note: 'NuGet' node was renamed to 'Packages' in 16.3)\r\n\r\nFrom Developer community suggestion: https://developercommunity.visualstudio.com/content/idea/622379/add-manage-nuget-packages-to-context-menu.html\r\nGitHub Issue: https://github.com/NuGet/Home/issues/5049"},{"Id":"11127308475","Type":"IssuesEvent","CreatedAt":"2019-12-19T15:47:45","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8949","RelatedDescription":"Closed issue \"Linux FuncTests should run against dotnet 3.1 not 2.2\" (#8949) at NuGet/Home","RelatedBody":"Recent temporary workaround resulted in dotnet 3.1 not running against our Functional Tests on Linux. dotnet 2.2 is currently being used."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-12-23T05:30:47.0121663Z","RunDurationInMilliseconds":1922}