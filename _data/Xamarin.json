{"Data":{"Blog":{"FeedItems":[{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7680476035","Type":"PullRequestEvent","CreatedAt":"2018-05-16T01:54:05","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1685","RelatedDescription":"Opened pull request \"[xabuild.exe] fixes for paths/settings on macOS\" (#1685) at xamarin/xamarin-android","RelatedBody":"When looking at my Mono 5.12 installation, I noticed a few files we\r\nshould be using with `xabuild.exe`:\r\n- `/Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/NuGet.targets`\r\n- `/Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks` directory\r\n\r\n`NuGet.targets` is needed for `XABuildPaths.NuGetRestoreTargets`, and\r\nthe `Sdks` directory can be used for `MSBuildSdksPath`.\r\n\r\nBoth of these values can still fall back to .NET Core, if they are not\r\nfound.\r\n\r\nAfter these changes, it more closely matches the Windows code. We\r\nshould be able to build a wider range of .NET standard projects with\r\n`xabuild.exe` now on macOS."},{"Id":"7679457406","Type":"IssuesEvent","CreatedAt":"2018-05-15T20:51:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1678","RelatedDescription":"Closed issue \"New \"error CS2001: Source file '...\\obj\\Debug\\generated\\' could not be found.\" errors on rebuilding projects.\" (#1678) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Install VS2017 stable (15.7)\r\n2. Clone https://github.com/colbylwilliams/XWeather and build it (it will build successfully).\r\n3. Install Xamarin.Android.Sdk 8.3.99.12\r\n4. Rebuild the project\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nShould build successfully.\r\n\r\n### Actual Behavior\r\nBuilds fails:\r\n```\r\n2018-05-13T21:29:46.0256377Z \"C:\\vsts\\_work\\4\\s\\XWeather\\Droid\\XWeather.Droid.csproj\" (SignAndroidPackage target) (1) ->\r\n2018-05-13T21:29:46.0256889Z (CoreCompile target) -> \r\n2018-05-13T21:29:46.0257509Z   CSC : error CS2001: Source file 'C:\\vsts\\_work\\4\\s\\XWeather\\Droid\\obj\\Debug\\generated\\' could not be found. [C:\\vsts\\_work\\4\\s\\XWeather\\Droid\\XWeather.Droid.csproj]\r\n2018-05-13T21:29:46.0257952Z \r\n2018-05-13T21:29:46.0258314Z     1 Warning(s)\r\n2018-05-13T21:29:46.0258686Z     1 Error(s)\r\n2018-05-13T21:29:46.0258902Z \r\n2018-05-13T21:29:46.0259266Z Time Elapsed 00:00:01.76\r\n```\r\n\r\n### Workaround\r\nDelete your bin/obj folders before rebuilding.\r\n\r\n### Version Information\r\n\r\nXamarin.Android.Sdk 8.3.99.12\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nSee the failed build steps here: http://build.devdiv.io/1683540 \r\n\r\nNote: the macOS builds for the same in that link are successful likely because those execute on Hosted pools and thus are always \"clean\" builds. This issue only manifests on rebuilds.\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7679080856","Type":"PullRequestEvent","CreatedAt":"2018-05-15T19:36:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1628","RelatedDescription":"Merged pull request \"Appending target framework to the OutputPath/IntermediateOutputPath\" (#1628) at xamarin/xamarin-android","RelatedBody":"We only can do this when AndroidUseLatestPlatformSdk is false due to the\r\nneed of evaluating the MsBuild properties before calculating the latest SDK\r\nusing the _SetLatestTargetFrameworkVersion target (Xamarin.Android.Common.targets)\r\n\r\nXA heavily leverages generated files in the intermediate output directory to achieve incremental build,\r\nwhich is key since a lot of the Android/Java SDK tools are slow.\r\n\r\nIn XA, targeting different API levels is done by changing the TargetFramework property in the project.\r\nThis effectively invalidates all previous intermediate artifacts. Since this is not an uncommon\r\naction (i.e. user is trying out various target API levels to see which one works best for their needs),\r\nwe'd like to preserve whatever artifacts were generated in a previous run for a given framework.\r\n\r\nSo rather than invalidating all incremental files when that property is changed (i.e. doing a full\r\nclean+build on the next run), a better approach is to append the target framework to the intermediate output path,\r\nfollowing in the footsteps from .NETCore/.NETStandard (which always append the target framework too)."},{"Id":"7679039419","Type":"PullRequestEvent","CreatedAt":"2018-05-15T19:28:36","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1684","RelatedDescription":"Opened pull request \"[linux] More null rules, to avoid calling configure again needlessly\" (#1684) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7678073951","Type":"PullRequestEvent","CreatedAt":"2018-05-15T16:21:51","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1683","RelatedDescription":"Opened pull request \"Fix bundled app crash on startup\" (#1683) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1651\r\n\r\nRecent update to mono brought in changes in the code generated by `mkbundle`\r\nwhen dealing with AOT. Unfortunately, the changes require the bundle to be able\r\nto find the `mono_jit_set_aot_mode` runtime function which isn't exported in the\r\nXamarin.Android up and thus the loading of the bundle crashes on startup with\r\nthe following message:\r\n\r\n    dlopen failed: cannot locate symbol \"mono_jit_set_aot_mode\" referenced by libmonodroid_bundle_app.so\r\n\r\nTo fix this we need to augment the bundle's `mono_mkbundle_init` function in\r\ngenerated code to take a third parameter - pointer to the abovementioned\r\nfunction. With the current code this requires a set of rather ugly changes, as\r\nseen in this commit, but it makes the application not crash on start and is the\r\nfastest way to fix the issue right now.\r\n\r\nThis is a short-term fix, a long-term one will be presented at a later time."},{"Id":"7677636593","Type":"IssuesEvent","CreatedAt":"2018-05-15T15:11:56","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1681","RelatedDescription":"Closed issue \"Increase Max Heap Size to build apps with support packages 27.x and higher\" (#1681) at xamarin/xamarin-android","RelatedBody":"If you update an app to have support packages higher than 27.x, by default it will generate a \"java.lang.OutOfMemoryError. Consider increasing the value of $(JavaMaximumHeapSize)\".\r\n\r\nApparantly, apps with 27.x support packages require more memory than 26 and below and the default Java Max Heap Size settings is not sufficient. \r\n\r\nI could fix the error by setting \"1G\" to the Java Max Heap Size in Advanced settings of the Android Options. It would be better if the error would not be triggered at all.\r\n\r\nI would suggest to either increase the internal size (setting if value is blank in project settings) or set a default value of 1G as input. \r\n\r\n### Steps to Reproduce\r\n1. Start a blank new Forms app\r\n2. Manage NuGet packages, Update all (you now have 27.x support packages)\r\n3. Build\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild without memory error\r\n\r\n### Actual Behavior\r\njava.lang.OutOfMemoryError. Consider increasing the value of $(JavaMaximumHeapSize). \r\n\r\n### Version Information\r\n15.7\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7680901709","Type":"IssuesEvent","CreatedAt":"2018-05-16T04:35:20","Actor":"RawoofSharief","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2732","RelatedDescription":"Opened issue \"Issue in latest update of Xamarin.Forms(v3.0). Items are not shown when change the border color in the renderer.\" (#2732) at xamarin/Xamarin.Forms","RelatedBody":"Hi Team,\r\n\r\n### Description\r\n\r\nI have write the extended class of **ContentView** and load the label as a content, then add the contentview as a children of StackLayout which is loaded inside the ScrollView.\r\nI have a property IsSelected in the ContentView and changed the IsSelected property in the TapGesture event of the label loaded in the ContentView.\r\nI have write the Renderer class for the ContentView in the UWP platform, and set the border color for the element, but the label text is not shown.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample\r\n2. Navigate the page by click the button.\r\n3. Click the label and you can see that the label text is not shown.\r\n\r\n### Expected Behavior\r\nLabel should shown when change the color.\r\n### Actual Behavior\r\nLabel is not shown.\r\n### Basic Information\r\n\r\n- Version with issue: **Xamarin.Forms(v3.0.0.446417)**\r\n- Last known good version: **Xamarin.Forms(v2.5.1.5274636)**\r\n- UWP:  < 16299 >\r\n\r\n### Screenshots\r\n\r\n**Before changing the color**\r\n\r\n![image](https://user-images.githubusercontent.com/39043330/40096791-18d81a3a-58f0-11e8-95e7-da89fe5afe9c.png)\r\n\r\n**After changing the color**\r\n\r\n![image](https://user-images.githubusercontent.com/39043330/40096798-25d74044-58f0-11e8-9e77-21abca7c1c83.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[BugSample.zip](https://github.com/xamarin/Xamarin.Forms/files/2007529/BugSample.zip)\r\n\r\n"},{"Id":"7680562637","Type":"IssuesEvent","CreatedAt":"2018-05-16T02:22:35","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2326","RelatedDescription":"Closed issue \"UI test 39829 needs instructions\" (#2326) at xamarin/Xamarin.Forms","RelatedBody":""},{"Id":"7680562623","Type":"IssuesEvent","CreatedAt":"2018-05-16T02:22:35","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2333","RelatedDescription":"Closed issue \"UI test 39963 missing image on Android\" (#2333) at xamarin/Xamarin.Forms","RelatedBody":""},{"Id":"7680562607","Type":"IssuesEvent","CreatedAt":"2018-05-16T02:22:35","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2304","RelatedDescription":"Closed issue \"UI test for 38827 is missing UI test attributes\" (#2304) at xamarin/Xamarin.Forms","RelatedBody":"The test attributes are missing from the test case, so the case doesn't show up at all in Control Gallery."},{"Id":"7679977485","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:56:28","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2321","RelatedDescription":"Closed issue \"UI test 39768 missing image on UWP\" (#2321) at xamarin/Xamarin.Forms","RelatedBody":"Cannot manually run the 39768 test on UWP because the image is missing from the UWP Control Gallery application."},{"Id":"7679944402","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:46:36","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2731","RelatedDescription":"Opened issue \"Design assemblies should be built with a lower version of .NET\" (#2731) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nCurrently you'll get build warnings with Xamarin.Forms when targeting versions lower than .NET 4.7.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a .NET 4.6.1 WPF app and reference Xamarin.Forms.Platform.WPF\r\n2. Compile.\r\n3. Observe warnings\r\n\r\n### Expected Behavior\r\n\r\nNo warnings.\r\n\r\n### Actual Behavior\r\n```\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(2052,5): \r\nwarning MSB3274: The primary reference \"Xamarin.Forms.Core.Design, Version=2.0.0.0, Culture=neutral, processorArchitecture=MSIL\"\r\n could not be resolved because it was built against the \".NETFramework,Version=v4.7\" framework. \r\nThis is a higher version than the currently targeted framework \".NETFramework,Version=v4.6.1\".\r\n\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(2052,5): \r\nwarning MSB3274: The primary reference \"Xamarin.Forms.Xaml.Design, Version=2.0.0.0, Culture=neutral, processorArchitecture=MSIL\"\r\n could not be resolved because it was built against the \".NETFramework,Version=v4.7\" framework. \r\nThis is a higher version than the currently targeted framework \".NETFramework,Version=v4.6.1\".\r\n```\r\n\r\nThe design projects are compiled with a .NET version that is too high. despite these projects saying v4.5 is supported. Design assemblies really shouldn't be running with versions higher than what the design assemblies they are building on top of are built for.\r\n\r\nExample where the setting isn't right:\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Core.Design/Xamarin.Forms.Core.Design.csproj#L12\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.0.0.446417\r\n- Last known good version: N/A\r\n- IDE: VS2017.6\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - WPF:  4.6.1\r\n- Nuget Packages: `Xamarin.Forms`, `Xamarin.Forms.Platform.WPF\r\n- Affected Devices:\r\n\r\n\r\n"},{"Id":"7679931965","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:42:52","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2266","RelatedDescription":"Closed issue \"UI Test 36014 is missing Preserve attribute\" (#2266) at xamarin/Xamarin.Forms","RelatedBody":"Test is not visible in Android if the linker is enabled. "}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7680835941","Type":"PullRequestEvent","CreatedAt":"2018-05-16T04:07:40","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4090","RelatedDescription":"Merged pull request \"[SceneKit] Makes SCNRenderingOptions.RenderingApi use the right key\" (#4090) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/4087\r\n\r\n`SCNRenderingOptions.RenderingApi` is using the wrong key to\r\nset its dictionary container value that should come from\r\n`SCNRenderingOptionsKeys.RenderingApiKey`."},{"Id":"7680835929","Type":"IssuesEvent","CreatedAt":"2018-05-16T04:07:40","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4087","RelatedDescription":"Closed issue \"Crash when setting RenderingApi on SCNRenderingOptions\" (#4087) at xamarin/xamarin-macios","RelatedBody":"The key for `RenderingApi` seems to be incorrect on iOS 11.3 and using it results in an ArgumentNull exception.\r\n\r\n### Steps to Reproduce\r\n\r\n```csharp\r\nnew SCNView (UIScreen.MainScreen.Bounds, new SCNRenderingOptions {\r\n            RenderingApi = SCNRenderingApi.Metal,\r\n        })\r\n```\r\n\r\n1. Run that code on iOS 11.3\r\n2. Note the crash\r\n\r\n### Expected Behavior\r\n\r\nSCNView is created with Metal.\r\n\r\n### Actual Behavior\r\n\r\nCrash\r\n\r\n```\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: key\r\n  at Foundation.DictionaryContainer.NullCheckAndRemoveKey (Foundation.NSString key, System.Boolean removeEntry) [0x0001e] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.10.1.174/src/Xamarin.iOS/Foundation/DictionaryContainer.cs:330 \r\n  at Foundation.DictionaryContainer.SetNumberValue (Foundation.NSString key, System.Nullable`1[T] value) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.10.1.174/src/Xamarin.iOS/Foundation/DictionaryContainer.cs:390 \r\n  at SceneKit.SCNRenderingOptions.set_RenderingApi (System.Nullable`1[T] value) [0x00009] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.10.1.174/src/Xamarin.iOS/SceneKit/SCNRenderingOptions.cs:20 \r\n```\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.5 Preview (7.5 build 1222)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.300-preview2-008530/Sdks\r\nSDK Versions:\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.173 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.18 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_152\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.174 (Visual Studio Enterprise)\r\nHash: f4933226\r\nBranch: d15-7\r\nBuild date: 2018-04-18 02:19:00-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001222\r\nGit revision: 48907c13172f883a9a64ea79b87bfc3f2d6bc146\r\nBuild date: 2018-04-20 18:20:07-04\r\nXamarin addins: 93dd8547539f9bdd2b69598711c4661d53ece262\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Tue Dec 19 10:52:05 PST 2017\r\n    root:xnu-4570.47.16~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nMSBuild Editor 2.0.3\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n"},{"Id":"7679379110","Type":"IssuesEvent","CreatedAt":"2018-05-15T20:36:13","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4092","RelatedDescription":"Opened issue \"Editor gives false positive .NET Standard missing reference errors\" (#4092) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a Xamarin.iOS project\r\n2. Add `System.Collections.Immutable` 1.4\r\n3. Use `ImmutableArray.RemoveAll`\r\n3. Note the editor errors\r\n4. Manually reference .NET Standard\r\n5. Editor will still have errors complaining about `System.Predicate` and `System.Object`\r\n\r\n### Expected Behavior\r\n\r\nI can use .NET Standard libraries.\r\n\r\n### Actual Behavior\r\n\r\nMissing reference errors all over the place\r\n\r\n<img width=\"807\" alt=\"screenshot 2018-05-15 13 08 53\" src=\"https://user-images.githubusercontent.com/323548/40081759-d2c2a4b8-5843-11e8-93b8-1cc717115a54.png\">\r\n\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.6 Preview (7.6 build 711)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\nRuntime:\r\n\tMono 5.12.0.226 (2018-02/9824e260f56) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 512000226\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.300-preview2-008530/Sdks\r\nSDK Versions:\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3.1 (14154.1)\r\nBuild 9E501\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.5.0.280 (Visual Studio Enterprise)\r\nHash: e85a7be8\r\nBranch: master\r\nBuild date: 2018-05-03 11:35:01-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_152\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.11.0.280 (Visual Studio Enterprise)\r\nHash: e85a7be8\r\nBranch: master\r\nBuild date: 2018-05-03 11:35:00-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706000711\r\nGit revision: 634060c6c105fd3ee36678fe547680fd258cbf45\r\nBuild date: 2018-05-04 16:11:06-04\r\nXamarin extensions: c6720450018cb69a3da7c6d0aa0715c013783595\r\nBuild lane: monodevelop-lion-master\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Tue Dec 19 10:52:05 PST 2017\r\n    root:xnu-4570.47.16~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMSBuild Editor 2.0.3\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n[NoNetStd.zip](https://github.com/xamarin/xamarin-macios/files/2006612/NoNetStd.zip)\r\n\r\n"},{"Id":"7678723656","Type":"PullRequestEvent","CreatedAt":"2018-05-15T18:26:04","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4091","RelatedDescription":"Opened pull request \"[Compression] Ensure that we do link against libcompression.\" (#4091) at xamarin/xamarin-macios","RelatedBody":"We need to pass libcrompession in the linking flags, which was not\r\npresent and makes the build fail."},{"Id":"7678345621","Type":"PullRequestEvent","CreatedAt":"2018-05-15T17:13:11","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4090","RelatedDescription":"Opened pull request \"[SceneKit] Makes SCNRenderingOptions.RenderingApi use the right key\" (#4090) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/4087\r\n\r\n`SCNRenderingOptions.RenderingApi` is using the wrong key to\r\nset its dictionary container value that should come from\r\n`SCNRenderingOptionsKeys.RenderingApiKey`."},{"Id":"7678321359","Type":"IssuesEvent","CreatedAt":"2018-05-15T17:08:24","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4089","RelatedDescription":"Opened issue \"tvOS projects fail to build with native linking error MT5216, libXamarin.TVOS.dll.dylib\" (#4089) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Update System to Xamarin.iOS master build , Version: 11.11.0.313 (Visual Studio Community)\r\nHash: 0416ea04\r\n2. Build a tvOS sample project, https://github.com/xamarin/ios-samples/tree/master/tvos/tvAlerts\r\n\r\n### Expected Behavior\r\nApp builds successfully\r\n### Actual Behavior\r\nApp fails to build with error, MTOUCH : error MT5216: Native linking failed for '/Users/gourikumari/GitRepo/monotouch-samples/ios-samples/tvos/tvAlerts/tvAlerts/obj/iPhone/Debug/device-builds/appletv5.3-11.4/mtouch-cache/arm64/libXamarin.TVOS.dll.dylib'\r\n\r\n## Regression:\r\nThis is a regression from preview 1 and seems to have caused in master with https://github.com/xamarin/xamarin-macios/commit/f765d674d3a503f4112a2c5f034af53d3b86b4cc.\r\n\r\nUnable to reproduce with template projects. \r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac (Preview) ===\r\n\r\nVersion 7.6 Preview (7.6 build 711)\r\nInstallation UUID: 74c37335-5878-4fa7-8f71-09bc48b661c5\r\nRuntime:\r\n\tMono 5.12.0.226 (2018-02/9824e260f56) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 512000226\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.5.0.313 (Visual Studio Community)\r\nHash: 0416ea04\r\nBranch: master\r\nBuild date: 2018-05-12 08:05:52-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.11.0.313 (Visual Studio Community)\r\nHash: 0416ea04\r\nBranch: master\r\nBuild date: 2018-05-12 08:05:52-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/gourikumari/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\r\nSDK Tools Version: 25.2.3\r\nSDK Platform Tools Version: 25.0.1\r\nSDK Build Tools Version: 25.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_60\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_60-b27)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706000711\r\nGit revision: 634060c6c105fd3ee36678fe547680fd258cbf45\r\nBuild date: 2018-05-04 16:11:06-04\r\nXamarin extensions: c6720450018cb69a3da7c6d0aa0715c013783595\r\nBuild lane: monodevelop-lion-master\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nGist Ide Information 1.1.0\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n### Build Logs\r\nBuild Log: https://gist.github.com/GouriKumari/ed7dcf6d60740a85d7aba6e58ccab34f\r\n### Example Project (If Possible)\r\nhttps://github.com/xamarin/ios-samples/tree/master/tvos/tvAlerts"},{"Id":"7676817645","Type":"PullRequestEvent","CreatedAt":"2018-05-15T13:07:46","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4081","RelatedDescription":"Merged pull request \"[xharness] Make sure to cancel the test listener both for device and simulator builds.\" (#4081) at xamarin/xamarin-macios","RelatedBody":"This will make xharness not listen for tests to connect forever, decrease the\nnumber of threads needed, and as well not print loads of aborted messages when\nxharness exits:\n\n    SimpleTcpListener: an exception occurred in processing thread: System.Threading.ThreadAbortException: Thread was being aborted.\n      at xharness.SimpleTcpListener.Start () [0x0009d] in /Users/XamarinQA/vsts/_work/1/s/tests/xharness/SimpleTcpListener.cs:44\n      at xharness.SimpleListener.<StartAsync>b__41_0 () [0x00002] in /Users/XamarinQA/vsts/_work/1/s/tests/xharness/SimpleListener.cs:93"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":13,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":14,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":20,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":75,"FavoriteCount":32,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"995013274252009473","CreatedAt":"2018-05-11T18:50:25+00:00","UserScreenname":"xamarinhq","Text":"On this week's epsiode of the #XamarinPodcast, get the #MSBuild 2018 recap for mobile developers: https://t.co/UhjdSxsePY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":9,"RawContent":null},{"Id":"994975698736570368","CreatedAt":"2018-05-11T16:21:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/iXX9NqH3wX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"994612280980660225","CreatedAt":"2018-05-10T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/TjAVAcfe1a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":21,"RawContent":null},{"Id":"994284793184563200","CreatedAt":"2018-05-09T18:35:42+00:00","UserScreenname":"xamarinhq","Text":"Everything the #Xamarin developer should know from #MSBuild, all in one place: https://t.co/wZn2oaz7l5 https://t.co/GmsEImV7Bq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":76,"RawContent":null},{"Id":"993570225420406784","CreatedAt":"2018-05-07T19:16:16+00:00","UserScreenname":"xamarinhq","Text":"Try the latest release of #XamarinForms 3.0: https://t.co/UlSNk3NClU https://t.co/dGpHZriLc4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":163,"FavoriteCount":115,"RawContent":null}]}},"RunOn":"2018-05-16T05:30:44.1614489Z","RunDurationInMilliseconds":4641}